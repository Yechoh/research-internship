|| ?module? PmPath


PmPath.IsDefPathname::B !name_0 = StdPathname.equal_suffix ".dcl" name_0
PmPath.IsImpPathname::B !name_0 = StdPathname.equal_suffix ".icl" name_0
PmPath.IsABCPathname::B !name_0 = StdPathname.equal_suffix ".abc" name_0
PmPath.IsPrjPathname::B !name_0 = StdPathname.equal_suffix ".prj" name_0
PmPath.MakeDefPathname !name_0 = <{StdString.+++_11}> (StdPathname.RemoveSuffix name_0) ".dcl"
PmPath.MakeImpPathname !name_0 = <{StdString.+++_11}> (StdPathname.RemoveSuffix name_0) ".icl"
PmPath.MakeABCPathname !name_0 = <{StdString.+++_11}> (StdPathname.RemoveSuffix name_0) ".abc"
PmPath.MakeObjPathname !processor_0 !name_1 = <{StdString.+++_11}> (StdPathname.RemoveSuffix name_1) (PmTypes.ProcessorSuffix processor_0)
PmPath.MakeProjectPathname !name_0 = <{StdString.+++_11}> (StdPathname.RemoveSuffix name_0) ".prj"
PmPath.MakeExecPathname !name_0 = <{StdString.+++_11}> (StdPathname.RemoveSuffix name_0) ".exe"
PmPath.MakeSystemPathname !pathname_0 = case (StdPathname.equal_suffix "Clean System Files" pathname_0) (True -> pathname_0) (False -> case (case (<{StdInt.<_17}> 0 (_SystemArray.size_20 pathname_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 pathname_0 (<{StdInt.-_7}> (_SystemArray.size_20 pathname_0) 1)) System.FilePath.pathSeparator) (False -> False) ) (True -> <{StdString.+++_11}> pathname_0 "Clean System Files") (False -> <{StdString.+++_11}> pathname_0 (<{StdString.+++_11}> (StdString.toString_6 System.FilePath.pathSeparator) "Clean System Files")) ) 
PmPath.directory_name_plus_system_dir_38 sep_0 !dir_1 = case (StdPathname.equal_suffix "Clean System Files" dir_1) (True -> dir_1) (False -> case (case (<{StdInt.<_17}> 0 (_SystemArray.size_20 dir_1)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 dir_1 (<{StdInt.-_7}> (_SystemArray.size_20 dir_1) 1)) System.FilePath.pathSeparator) (False -> False) ) (True -> <{StdString.+++_11}> dir_1 "Clean System Files") (False -> <{StdString.+++_11}> dir_1 (<{StdString.+++_11}> sep_0 "Clean System Files")) ) 
PmPath.MakeAssemblySystemPathname !abcname_0 = let sep_1_0 = StdString.toString_6 System.FilePath.pathSeparator in <{StdString.+++_11}> (PmPath.directory_name_plus_system_dir_38 sep_1_0 (StdPathname.RemoveFilename abcname_0)) (<{StdString.+++_11}> sep_1_0 (<{StdString.+++_11}> (StdPathname.RemovePath (StdPathname.RemoveSuffix abcname_0)) ".s"))
PmPath.find_last_dot_i_36::I !_vArray_0 s_1 !i_2::I = case (StdBool.not (<{StdInt.<_17}> i_2 0)) (True -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_1 i_2) '.') (True -> i_2) (False -> PmPath.find_last_dot_i_36 _vArray_0 s_1 (<{StdInt.-_7}> i_2 1)) ) (False -> i_2) 
PmPath.find_last_dot_i_52::I s_0 !i_1::I = case (StdBool.not (<{StdInt.<_17}> i_1 0)) (True -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_0 i_1) '.') (True -> i_1) (False -> PmPath.find_last_dot_i_52 s_0 (<{StdInt.-_7}> i_1 1)) ) (False -> i_1) 
PmPath.find_last_dot_i::I !s_0 = PmPath.find_last_dot_i_52 s_0 (<{StdInt.-_7}> (_SystemArray.size_20 s_0) 1)
<{PmPath.cu;78;58_33}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;78;58_33}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (<{PmPath._if;78;12_69}> (<{StdChar.==_18}> c_2_2 '.') c_2_2)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{PmPath._if;78;12_69}>::C !_x_0::B c_1::C = case _x_0 (True -> System.FilePath.pathSeparator) (_ -> c_1)
<{PmPath.cu;78;58_53}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_4 c_i_2, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;78;58_53}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (<{PmPath._if;78;12_70}> (<{StdChar.==_18}> c_2_2 '.') c_2_2)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
<{PmPath._if;78;12_70}>::C !_x_0::B c_1::C = case _x_0 (True -> System.FilePath.pathSeparator) (_ -> c_1)
<{PmPath.cu;78;58_54}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_3 c_i_1, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;78;58_54}> (_SystemArray.update_21 c_a_0 c_i_1 (<{PmPath._if;78;12_71}> (<{StdChar.==_18}> c_2_2 '.') c_2_2)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
<{PmPath._if;78;12_71}>::C !_x_0::B c_1::C = case _x_0 (True -> System.FilePath.pathSeparator) (_ -> c_1)
PmPath.replace_dot_chars_by_dir_separators !module_name_0 = case (<{StdInt.<_17}> (PmPath.find_last_dot_i module_name_0) 0) (True -> module_name_0) (False -> let _x_2_0::I = _SystemArray.usize_23 module_name_0, g_s2_2_1 = <{StdInt.-_7}> (select _x_2_0::_Tuple2 0) 1 in <{PmPath.cu;78;58_54}> (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s2_2_1 StdInt.one_11)) 0 g_s2_2_1 (select _x_2_0::_Tuple2 1)) 
PmPath.ModuleDirAndNameToDefPathname !_x_0 = case _x_0 (PmTypes._ModuleDirAndName mdn_dir_1_0 mdn_name_1_1 -> StdPathname.MakeFullPathname mdn_dir_1_0 (<{StdString.+++_11}> (PmPath.replace_dot_chars_by_dir_separators mdn_name_1_1) ".dcl")) 
PmPath.ModuleDirAndNameToImpPathname !_x_0 = case _x_0 (PmTypes._ModuleDirAndName mdn_dir_1_0 mdn_name_1_1 -> StdPathname.MakeFullPathname mdn_dir_1_0 (<{StdString.+++_11}> (PmPath.replace_dot_chars_by_dir_separators mdn_name_1_1) ".icl")) 
PmPath.directory_name_plus_system_dir_from_dir_34 !dir_0 = case (StdPathname.equal_suffix "Clean System Files" dir_0) (True -> dir_0) (False -> case (case (<{StdInt.<_17}> 0 (_SystemArray.size_20 dir_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 dir_0 (<{StdInt.-_7}> (_SystemArray.size_20 dir_0) 1)) System.FilePath.pathSeparator) (False -> False) ) (True -> <{StdString.+++_11}> dir_0 "Clean System Files") (False -> <{StdString.+++_11}> dir_0 (<{StdString.+++_11}> (StdString.toString_6 System.FilePath.pathSeparator) "Clean System Files")) ) 
<{PmPath.cu;124;73_37}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;124;73_37}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (<{PmPath._if;124;22_72}> (<{StdChar.==_18}> c_2_2 '.') c_2_2)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{PmPath._if;124;22_72}>::C !_x_0::B c_1::C = case _x_0 (True -> System.FilePath.pathSeparator) (_ -> c_1)
<{PmPath.cu;124;73_55}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_4 c_i_2, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;124;73_55}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (<{PmPath._if;124;22_73}> (<{StdChar.==_18}> c_2_2 '.') c_2_2)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
<{PmPath._if;124;22_73}>::C !_x_0::B c_1::C = case _x_0 (True -> System.FilePath.pathSeparator) (_ -> c_1)
<{PmPath.cu;124;73_56}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_3 c_i_1, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;124;73_56}> (_SystemArray.update_21 c_a_0 c_i_1 (<{PmPath._if;124;22_74}> (<{StdChar.==_18}> c_2_2 '.') c_2_2)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
<{PmPath._if;124;22_74}>::C !_x_0::B c_1::C = case _x_0 (True -> System.FilePath.pathSeparator) (_ -> c_1)
PmPath.subdir_and_file_name_of_hmodule_name !last_dot_i_0::I !mod_1 !file_ext_2 = let g_s_1_0::I = <{StdInt.-_7}> last_dot_i_0 1, _x_1_1::I = _SystemArray.usize_23 mod_1, g_s_1_2::I = select _x_1_1::_Tuple2 0, g_s2_1_3 = <{StdInt.-_7}> g_s_1_2 1, g_s_1_4::I = <{PmPath.g_s1;124;53_75}> (<{StdInt.<_17}> g_s_1_0 g_s2_1_3) g_s_1_0 g_s2_1_3 in <{_Tuple2!3}> (<{PmPath.cu;124;73_56}> (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s_1_4 StdInt.one_11)) 0 g_s_1_4 (select _x_1_1::_Tuple2 1)) (<{StdString.+++_11}> (<{StdString.%_10}> mod_1 (_Tuple2 (<{StdInt.+_6}> last_dot_i_0 1) (<{StdInt.-_7}> (_SystemArray.size_20 mod_1) 1))) file_ext_2)
<{PmPath.g_s1;124;53_75}>::I !_x_0::B g_s_1::I g_s2_2::I = case _x_0 (True -> g_s_1) (_ -> g_s2_2)
PmPath.directory_name_without_system_dir_with_separator_from_dir_35 !dir_0 = case (StdPathname.equal_suffix "Clean System Files" dir_0) (True -> <{StdString.+++_11}> (<{StdString.%_10}> dir_0 (_Tuple2 0 (<{StdInt.-_7}> (<{StdInt.-_7}> (_SystemArray.size_20 dir_0) 1) (_SystemArray.size_20 "Clean System Files")))) (StdString.toString_6 System.FilePath.pathSeparator)) (False -> case (case (<{StdInt.<_17}> 0 (_SystemArray.size_20 dir_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 dir_0 (<{StdInt.-_7}> (_SystemArray.size_20 dir_0) 1)) System.FilePath.pathSeparator) (False -> False) ) (True -> dir_0) (False -> <{StdString.+++_11}> dir_0 (StdString.toString_6 System.FilePath.pathSeparator)) ) 
PmPath.make_clean_system_files_path !dir_0 !module_name_1 !file_ext_2 = let last_dot_i_1_0::I = PmPath.find_last_dot_i module_name_1 in case (<{StdInt.<_17}> last_dot_i_1_0 0) (True -> <{StdString.+++_11}> (PmPath.directory_name_plus_system_dir_from_dir_34 dir_0) (<{StdString.+++_11}> (StdString.toString_6 System.FilePath.pathSeparator) (<{StdString.+++_11}> module_name_1 file_ext_2))) (False -> let _x_3_0 = PmPath.subdir_and_file_name_of_hmodule_name last_dot_i_1_0 module_name_1 file_ext_2 in <{StdString.+++_11}> (PmPath.directory_name_without_system_dir_with_separator_from_dir_35 dir_0) (<{StdString.+++_11}> (select _x_3_0::_Tuple2 0) (<{StdString.+++_11}> (StdString.toString_6 System.FilePath.pathSeparator) (<{StdString.+++_11}> "Clean System Files" (<{StdString.+++_11}> (StdString.toString_6 System.FilePath.pathSeparator) (select _x_3_0::_Tuple2 1)))))) 
PmPath.ModuleDirAndNameToABCSystemPathname !_x_0 = case _x_0 (PmTypes._ModuleDirAndName mdn_dir_1_0 mdn_name_1_1 -> PmPath.make_clean_system_files_path mdn_dir_1_0 mdn_name_1_1 ".abc") 
PmPath.ModuleDirAndNameToObjSystemPathname !processor_0 !_x_1 = case _x_1 (PmTypes._ModuleDirAndName mdn_dir_1_0 mdn_name_1_1 -> PmPath.make_clean_system_files_path mdn_dir_1_0 mdn_name_1_1 (PmTypes.ProcessorSuffix processor_0)) 
PmPath.GetModuleName !name_0 = StdPathname.RemoveSuffix (StdPathname.RemovePath name_0)
<{PmPath.cu;175;39_40}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;175;39_40}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (<{PmPath._if;175;12_76}> (<{StdChar.==_18}> c_2_2 System.FilePath.pathSeparator) c_2_2)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{PmPath._if;175;12_76}>::C !_x_0::B c_1::C = case _x_0 (True -> '.') (_ -> c_1)
PmPath.replace_dir_separators_by_dots_43 !_vArray_0 !_vArray_1 s_2 = let _x_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 7 s_2, g_s2_1_1 = <{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1 in <{PmPath.cu;175;39_40}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (select _x_1_0::_Tuple2 1)
<{PmPath.cu;171;107_39}> !_vArray_0 !_vArray_1 !_vArray_2 filename_i_3::I module_name_4 file_ext_i_5::I c_a_6 !c_i_7::I !g_s_8::I g_a_9 = case (StdBool.not (<{StdInt.<_17}> g_s_8 c_i_7)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_9 c_i_7, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;171;107_39}> _vArray_0 _vArray_1 _vArray_2 filename_i_3 module_name_4 file_ext_i_5 (select _vArray_2::<{_SystemArray.Array;}> 5 c_a_6 c_i_7 (<{PmPath._if;171;27_78}> (PmPath._f77_77 (<{StdInt.<_17}> c_i_7 filename_i_3) c_i_7 file_ext_i_5) c_2_2 module_name_4 c_i_7 filename_i_3 _vArray_1)) (<{StdInt.+_6}> c_i_7 StdInt.one_11) g_s_8 g_a_2_0) (False -> c_a_6) 
<{PmPath._if;171;27_78}> !_x_0::B c_1 module_name_2 c_i_3::I filename_i_4::I _vArray_5 = case _x_0 (True -> c_1) (_ -> select _vArray_5::<{_SystemArray.Array;}> 3 module_name_2 (<{StdInt.-_7}> c_i_3 filename_i_4))
PmPath._f77_77::B !_x_0::B c_i_1::I file_ext_i_2::I = case _x_0 (True -> True) (_ -> StdBool.not (<{StdInt.<_17}> c_i_1 file_ext_i_2))
<{PmPath.cu;175;39_58}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_4 c_i_2, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;175;39_58}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (<{PmPath._if;175;12_79}> (<{StdChar.==_18}> c_2_2 System.FilePath.pathSeparator) c_2_2)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
<{PmPath._if;175;12_79}>::C !_x_0::B c_1::C = case _x_0 (True -> '.') (_ -> c_1)
PmPath.replace_dir_separators_by_dots_57 !_vArray_0 !s_1 = let _x_1_0::I = _SystemArray.usize_23 s_1, g_s2_1_1 = <{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1 in <{PmPath.cu;175;39_58}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (select _x_1_0::_Tuple2 1)
<{PmPath.cu;171;107_59}> !_vArray_0 !_vArray_1 filename_i_2::I module_name_3 file_ext_i_4::I c_a_5 !c_i_6::I !g_s_7::I g_a_8 = case (StdBool.not (<{StdInt.<_17}> g_s_7 c_i_6)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_8 c_i_6, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;171;107_59}> _vArray_0 _vArray_1 filename_i_2 module_name_3 file_ext_i_4 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_5 c_i_6 (<{PmPath._if;171;27_81}> (PmPath._f80_80 (<{StdInt.<_17}> c_i_6 filename_i_2) c_i_6 file_ext_i_4) c_2_2 module_name_3 c_i_6 filename_i_2 _vArray_0)) (<{StdInt.+_6}> c_i_6 StdInt.one_11) g_s_7 g_a_2_0) (False -> c_a_5) 
<{PmPath._if;171;27_81}>::C !_x_0::B c_1::C module_name_2 c_i_3::I filename_i_4::I _vArray_5 = case _x_0 (True -> c_1) (_ -> select _vArray_5::<{_SystemArray.Array;}> 3 module_name_2 (<{StdInt.-_7}> c_i_3 filename_i_4))
PmPath._f80_80::B !_x_0::B c_i_1::I file_ext_i_2::I = case _x_0 (True -> True) (_ -> StdBool.not (<{StdInt.<_17}> c_i_1 file_ext_i_2))
PmPath.module_name_and_pathname_with_dots_42 !_vArray_0 !_vArray_1 !pathname_2 !filename_i_3::I = case (case (<{StdInt.<_17}> filename_i_3 (_SystemArray.size_20 pathname_2)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 pathname_2 filename_i_3) System.FilePath.pathSeparator) (False -> False) ) (True -> PmPath.module_name_and_pathname_with_dots_42 _vArray_0 _vArray_1 pathname_2 (<{StdInt.+_6}> filename_i_3 1)) (False -> let !file_ext_i_2_0::I = <{StdInt.+_6}> filename_i_3 (select _vArray_0::<{_SystemArray.Array;}> 4 module_name_2_1), module_name_2_1::I = PmPath.replace_dir_separators_by_dots_57 _vArray_0 (StdPathname.RemoveSuffix (<{StdString.%_10}> pathname_2 (_Tuple2 filename_i_3 (<{StdInt.-_7}> (_SystemArray.size_20 pathname_2) 1)))), _x_2_2 = _SystemArray.usize_23 pathname_2, g_s2_2_3 = <{StdInt.-_7}> (select _x_2_2::_Tuple2 0) 1 in _Tuple2 module_name_2_1 (<{PmPath.cu;171;107_59}> _vArray_0 _vArray_1 filename_i_3 module_name_2_1 file_ext_i_2_0 (select _vArray_1::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_3 StdInt.one_11)) 0 g_s2_2_3 (select _x_2_2::_Tuple2 1))) 
<{PmPath.cu;175;39_62}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_3 c_i_1, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;175;39_62}> (_SystemArray.update_21 c_a_0 c_i_1 (<{PmPath._if;175;12_82}> (<{StdChar.==_18}> c_2_2 System.FilePath.pathSeparator) c_2_2)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
<{PmPath._if;175;12_82}>::C !_x_0::B c_1::C = case _x_0 (True -> '.') (_ -> c_1)
PmPath.replace_dir_separators_by_dots_61 !s_0 = let _x_1_0::I = _SystemArray.usize_23 s_0, g_s2_1_1 = <{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1 in <{PmPath.cu;175;39_62}> (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (select _x_1_0::_Tuple2 1)
<{PmPath.cu;171;107_63}> !_vArray_0 filename_i_1::I module_name_2 file_ext_i_3::I c_a_4 !c_i_5::I !g_s_6::I g_a_7 = case (StdBool.not (<{StdInt.<_17}> g_s_6 c_i_5)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_7 c_i_5, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;171;107_63}> _vArray_0 filename_i_1 module_name_2 file_ext_i_3 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_4 c_i_5 (<{PmPath._if;171;27_84}> (PmPath._f83_83 (<{StdInt.<_17}> c_i_5 filename_i_1) c_i_5 file_ext_i_3) c_2_2 module_name_2 c_i_5 filename_i_1)) (<{StdInt.+_6}> c_i_5 StdInt.one_11) g_s_6 g_a_2_0) (False -> c_a_4) 
<{PmPath._if;171;27_84}>::C !_x_0::B c_1::C module_name_2 c_i_3::I filename_i_4::I = case _x_0 (True -> c_1) (_ -> _SystemArray.select_19 module_name_2 (<{StdInt.-_7}> c_i_3 filename_i_4))
PmPath._f83_83::B !_x_0::B c_i_1::I file_ext_i_2::I = case _x_0 (True -> True) (_ -> StdBool.not (<{StdInt.<_17}> c_i_1 file_ext_i_2))
PmPath.module_name_and_pathname_with_dots_60 !_vArray_0 !pathname_1 !filename_i_2::I = case (case (<{StdInt.<_17}> filename_i_2 (_SystemArray.size_20 pathname_1)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 pathname_1 filename_i_2) System.FilePath.pathSeparator) (False -> False) ) (True -> PmPath.module_name_and_pathname_with_dots_60 _vArray_0 pathname_1 (<{StdInt.+_6}> filename_i_2 1)) (False -> let !file_ext_i_2_0::I = <{StdInt.+_6}> filename_i_2 (_SystemArray.size_20 module_name_2_1), module_name_2_1::I = PmPath.replace_dir_separators_by_dots_61 (StdPathname.RemoveSuffix (<{StdString.%_10}> pathname_1 (_Tuple2 filename_i_2 (<{StdInt.-_7}> (_SystemArray.size_20 pathname_1) 1)))), _x_2_2 = _SystemArray.usize_23 pathname_1, g_s2_2_3 = <{StdInt.-_7}> (select _x_2_2::_Tuple2 0) 1 in _Tuple2 module_name_2_1 (<{PmPath.cu;171;107_63}> _vArray_0 filename_i_2 module_name_2_1 file_ext_i_2_0 (select _vArray_0::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_3 StdInt.one_11)) 0 g_s2_2_3 (select _x_2_2::_Tuple2 1))) 
<{PmPath.cu;171;107_65}> filename_i_0::I module_name_1 file_ext_i_2::I !c_a_3 !c_i_4::I !g_s_5::I g_a_6 = case (StdBool.not (<{StdInt.<_17}> g_s_5 c_i_4)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_6 c_i_4, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;171;107_65}> filename_i_0 module_name_1 file_ext_i_2 (_SystemArray.update_21 c_a_3 c_i_4 (<{PmPath._if;171;27_86}> (PmPath._f85_85 (<{StdInt.<_17}> c_i_4 filename_i_0) c_i_4 file_ext_i_2) c_2_2 module_name_1 c_i_4 filename_i_0)) (<{StdInt.+_6}> c_i_4 StdInt.one_11) g_s_5 g_a_2_0) (False -> c_a_3) 
<{PmPath._if;171;27_86}>::C !_x_0::B c_1::C module_name_2 c_i_3::I filename_i_4::I = case _x_0 (True -> c_1) (_ -> _SystemArray.select_19 module_name_2 (<{StdInt.-_7}> c_i_3 filename_i_4))
PmPath._f85_85::B !_x_0::B c_i_1::I file_ext_i_2::I = case _x_0 (True -> True) (_ -> StdBool.not (<{StdInt.<_17}> c_i_1 file_ext_i_2))
PmPath.module_name_and_pathname_with_dots_64 !pathname_0 !filename_i_1::I = case (case (<{StdInt.<_17}> filename_i_1 (_SystemArray.size_20 pathname_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 pathname_0 filename_i_1) System.FilePath.pathSeparator) (False -> False) ) (True -> PmPath.module_name_and_pathname_with_dots_64 pathname_0 (<{StdInt.+_6}> filename_i_1 1)) (False -> let !file_ext_i_2_0::I = <{StdInt.+_6}> filename_i_1 (_SystemArray.size_20 module_name_2_1), module_name_2_1::I = PmPath.replace_dir_separators_by_dots_61 (StdPathname.RemoveSuffix (<{StdString.%_10}> pathname_0 (_Tuple2 filename_i_1 (<{StdInt.-_7}> (_SystemArray.size_20 pathname_0) 1)))), _x_2_2 = _SystemArray.usize_23 pathname_0, g_s2_2_3 = <{StdInt.-_7}> (select _x_2_2::_Tuple2 0) 1 in _Tuple2 module_name_2_1 (<{PmPath.cu;171;107_65}> filename_i_1 module_name_2_1 file_ext_i_2_0 (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s2_2_3 StdInt.one_11)) 0 g_s2_2_3 (select _x_2_2::_Tuple2 1))) 
PmPath.determine_dir_and_filename_41 imp_pathname_0 !_x_1 !longest_dir_2 = case _x_1 (<{_predefined._!Cons!}> dir_1_0 dirs_1_1 -> let sd_2_0::I = _SystemArray.size_20 dir_1_0 in case (case (<{StdInt.<_17}> (_SystemArray.size_20 longest_dir_2) sd_2_0) (True -> case (<{StdInt.<_17}> sd_2_0 (_SystemArray.size_20 imp_pathname_0)) (True -> <{StdString.==_2}> (<{StdString.%_10}> imp_pathname_0 (_Tuple2 0 (<{StdInt.-_7}> sd_2_0 1))) dir_1_0) (False -> False) ) (False -> False) ) (True -> PmPath.determine_dir_and_filename_41 imp_pathname_0 dirs_1_1 dir_1_0) (False -> PmPath.determine_dir_and_filename_41 imp_pathname_0 dirs_1_1 longest_dir_2) ) (<{_predefined._!Nil!}> -> case (<{StdInt.==_16}> (_SystemArray.size_20 longest_dir_2) 0) (True -> _Tuple2 (PmTypes._ModuleDirAndName (StdPathname.RemoveFilename imp_pathname_0) (PmPath.GetModuleName imp_pathname_0)) imp_pathname_0) (False -> let _x_3_0 = PmPath.module_name_and_pathname_with_dots_64 imp_pathname_0 (_SystemArray.size_20 longest_dir_2) in _Tuple2 (PmTypes._ModuleDirAndName longest_dir_2 (select _x_3_0::_Tuple2 0)) (select _x_3_0::_Tuple2 1)) ) 
PmPath.determine_dir_and_filename !imp_pathname_0 !dirs_1 = PmPath.determine_dir_and_filename_41 imp_pathname_0 dirs_1 ""
PmPath.symPath !ap_0 !pp_1 !l_2 = case (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_20 ap_0) (_SystemArray.size_20 pp_1))) (True -> StdPathname.replace_prefix_path pp_1 "{Project}" (StdPathname.replace_prefix_path ap_0 "{Application}" l_2)) (False -> StdPathname.replace_prefix_path ap_0 "{Application}" (StdPathname.replace_prefix_path pp_1 "{Project}" l_2)) 
PmPath.fulPath !ap_0 !pp_1 !l_2 = let l_1_0 = StdPathname.replace_prefix_path "{Application}" ap_0 l_2, l_1_1 = StdPathname.replace_prefix_path "{Project}" pp_1 l_1_0 in case (StdPathname.IsFullPathname l_1_1) (True -> l_1_1) (False -> StdPathname.MakeFullPathname pp_1 l_1_1) 
PmPath.symPaths !ap_0 !pp_1 !l_2 = UtilStrictLists.Map (PmPath.symPath ap_0 pp_1) l_2
PmPath.fulPaths !ap_0 !pp_1 !l_2 = UtilStrictLists.Map (PmPath.fulPath ap_0 pp_1) l_2
PmPath.first_not_equal_character_index_45::I !i_0::I !n_1::I !s1_2 !s2_3 = case (case (<{StdInt.<_17}> i_0 n_1) (True -> <{StdChar.==_18}> (_SystemArray.select_19 s1_2 i_0) (_SystemArray.select_19 s2_3 i_0)) (False -> False) ) (True -> PmPath.first_not_equal_character_index_45 (<{StdInt.+_6}> i_0 1) n_1 s1_2 s2_3) (False -> i_0) 
PmPath.first_not_equal_character_index_48::I !s1_0 !s2_1 = let !max_index_1_0::I = <{PmPath._if;224;22_87}> (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_20 s2_1) (_SystemArray.size_20 s1_0))) s1_0 s2_1 in PmPath.first_not_equal_character_index_45 0 max_index_1_0 s1_0 s2_1
<{PmPath._if;224;22_87}>::I !_x_0::B s1_1 s2_2 = case _x_0 (True -> _SystemArray.size_20 s1_1) (_ -> _SystemArray.size_20 s2_2)
<{PmPath.cu;221;34_44}> !_vArray_0 !<{_v==_1}> !_vArray_2 new_c_3 old_c_4 c_a_5 !c_i_6::I !g_s_7::I g_a_8 = case (StdBool.not (<{StdInt.<_17}> g_s_7 c_i_6)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_8 c_i_6, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;221;34_44}> _vArray_0 <{_v==_1}> _vArray_2 new_c_3 old_c_4 (select _vArray_2::<{_SystemArray.Array;}> 5 c_a_5 c_i_6 (<{PmPath._if;221;12_88}> (select <{_v==_1}>::<{StdOverloaded.==;}> 0 c_2_2 old_c_4) new_c_3 c_2_2)) (<{StdInt.+_6}> c_i_6 StdInt.one_11) g_s_7 g_a_2_0) (False -> c_a_5) 
<{PmPath._if;221;12_88}> !_x_0::B new_c_1 c_2 = case _x_0 (True -> new_c_1) (_ -> c_2)
<{PmPath.cu;221;34_66}> !<{_v==_0}> !_vArray_1 new_c_2::C old_c_3::C c_a_4 !c_i_5::I !g_s_6::I g_a_7 = case (StdBool.not (<{StdInt.<_17}> g_s_6 c_i_5)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_7 c_i_5, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;221;34_66}> <{_v==_0}> _vArray_1 new_c_2 old_c_3 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_4 c_i_5 (<{PmPath._if;221;12_89}> (select <{_v==_0}>::<{StdOverloaded.==;}> 0 c_2_2 old_c_3) new_c_2 c_2_2)) (<{StdInt.+_6}> c_i_5 StdInt.one_11) g_s_6 g_a_2_0) (False -> c_a_4) 
<{PmPath._if;221;12_89}>::C !_x_0::B new_c_1::C c_2::C = case _x_0 (True -> new_c_1) (_ -> c_2)
<{PmPath.cu;221;34_67}> !_vArray_0 new_c_1::C old_c_2::C c_a_3 !c_i_4::I !g_s_5::I g_a_6 = case (StdBool.not (<{StdInt.<_17}> g_s_5 c_i_4)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_6 c_i_4, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;221;34_67}> _vArray_0 new_c_1 old_c_2 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_3 c_i_4 (<{PmPath._if;221;12_90}> (<{StdChar.==_18}> c_2_2 old_c_2) new_c_1 c_2_2)) (<{StdInt.+_6}> c_i_4 StdInt.one_11) g_s_5 g_a_2_0) (False -> c_a_3) 
<{PmPath._if;221;12_90}>::C !_x_0::B new_c_1::C c_2::C = case _x_0 (True -> new_c_1) (_ -> c_2)
<{PmPath.cu;221;34_68}> new_c_0::C old_c_1::C !c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_5 c_i_3, c_2_2 = select _x_2_1::_Tuple2 0 in <{PmPath.cu;221;34_68}> new_c_0 old_c_1 (_SystemArray.update_21 c_a_2 c_i_3 (<{PmPath._if;221;12_91}> (<{StdChar.==_18}> c_2_2 old_c_1) new_c_0 c_2_2)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{PmPath._if;221;12_91}>::C !_x_0::B new_c_1::C c_2::C = case _x_0 (True -> new_c_1) (_ -> c_2)
PmPath.replace_character_in_string_47 !old_c_0::C !new_c_1::C !string_2 = let _x_1_0::I = _SystemArray.usize_23 string_2, g_s2_1_1 = <{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1 in <{PmPath.cu;221;34_68}> new_c_1 old_c_0 (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (select _x_1_0::_Tuple2 1)
PmPath.replace_prefix_46 !separator_0::C path_1 = case (<{StdChar.==_18}> separator_0 System.FilePath.pathSeparator) (True -> _Tuple2 separator_0 path_1) (False -> _Tuple2 separator_0 (PmPath.replace_character_in_string_47 separator_0 System.FilePath.pathSeparator path_1)) 
PmPath.get_separator_and_convert_path !path_0 = let prefix_1_0::I = "{Project}", prefix_size_1_1 = _SystemArray.size_20 prefix_1_0 in case (case (<{StdInt.==_16}> (PmPath.first_not_equal_character_index_48 prefix_1_0 path_0) prefix_size_1_1) (True -> <{StdInt.<_17}> prefix_size_1_1 (_SystemArray.size_20 path_0)) (False -> False) ) (True -> PmPath.replace_prefix_46 (_SystemArray.select_19 path_0 prefix_size_1_1) path_0) (False -> let prefix_3_0::I = "{Application}", prefix_size_3_1 = _SystemArray.size_20 prefix_3_0 in case (case (<{StdInt.==_16}> (PmPath.first_not_equal_character_index_48 prefix_3_0 path_0) prefix_size_3_1) (True -> <{StdInt.<_17}> prefix_size_3_1 (_SystemArray.size_20 path_0)) (False -> False) ) (True -> PmPath.replace_prefix_46 (_SystemArray.select_19 path_0 prefix_size_3_1) path_0) (False -> <{_Tuple2!3}> System.FilePath.pathSeparator path_0) ) 
PmPath.convert_path_separators !path_0 = select (PmPath.get_separator_and_convert_path path_0)::_Tuple2 1
PmPath.convert_exec_path_separators_and_extension !path_0 = let _x_1_0::C = PmPath.get_separator_and_convert_path path_0, separator_1_1 = select _x_1_0::_Tuple2 0 in case (<{StdChar.==_18}> separator_1_1 System.FilePath.pathSeparator) (True -> select _x_1_0::_Tuple2 1) (False -> case (<{StdChar.==_18}> System.FilePath.pathSeparator '\\') (True -> <{StdString.+++_11}> (select _x_1_0::_Tuple2 1) ".exe") (False -> case (<{StdChar.==_18}> separator_1_1 '\\') (True -> let path_5_0::I = select _x_1_0::_Tuple2 1, l_5_1 = _SystemArray.size_20 path_5_0 in case (case (<{StdInt.<_17}> 4 l_5_1) (True -> case (<{StdChar.==_18}> (_SystemArray.select_19 path_5_0 (<{StdInt.-_7}> l_5_1 4)) '\\') (True -> case (case (<{StdChar.==_18}> (_SystemArray.select_19 path_5_0 (<{StdInt.-_7}> l_5_1 3)) 'e') (True -> True) (False -> <{StdChar.==_18}> (_SystemArray.select_19 path_5_0 (<{StdInt.-_7}> l_5_1 3)) 'e') ) (True -> case (case (<{StdChar.==_18}> (_SystemArray.select_19 path_5_0 (<{StdInt.-_7}> l_5_1 2)) 'x') (True -> True) (False -> <{StdChar.==_18}> (_SystemArray.select_19 path_5_0 (<{StdInt.-_7}> l_5_1 2)) 'x') ) (True -> case (<{StdChar.==_18}> (_SystemArray.select_19 path_5_0 (<{StdInt.-_7}> l_5_1 1)) 'e') (True -> True) (False -> <{StdChar.==_18}> (_SystemArray.select_19 path_5_0 (<{StdInt.-_7}> l_5_1 1)) 'e') ) (False -> False) ) (False -> False) ) (False -> False) ) (False -> False) ) (True -> <{StdString.%_10}> path_5_0 (_Tuple2 0 (<{StdInt.-_7}> l_5_1 4))) (False -> path_5_0) ) (False -> select _x_1_0::_Tuple2 1) ) ) 
PmPath.symAppPath !ap_0 !p_1 = StdPathname.replace_prefix_path ap_0 "{Application}" p_1
PmPath.fulAppPath !ap_0 !p_1 = StdPathname.replace_prefix_path "{Application}" ap_0 p_1
PmPath.symAppPaths !ap_0 !l_1 = UtilStrictLists.Map (PmPath.symAppPath ap_0) l_1
PmPath.fulAppPaths !ap_0 !l_1 = UtilStrictLists.Map (PmPath.fulAppPath ap_0) l_1


|| Converted Records
