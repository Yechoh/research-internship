|| ?module? iTasks.Internal.HttpUtil


iTasks.Internal.HttpUtil.http_parseHeader !header_0 = let index_1_0::I = Text.indexOf_4 ":" header_0 in case (<{StdInt.<_17}> index_1_0 1) (True -> <{_Tuple2!3}> (_Tuple2 "" "") False) (False -> <{_Tuple2!3}> (_Tuple2 (Text.trim_19 (<{StdString.%_10}> header_0 (_Tuple2 0 (<{StdInt.-_7}> index_1_0 1)))) (Text.trim_19 (<{StdString.%_10}> header_0 (_Tuple2 (<{StdInt.+_6}> index_1_0 1) (_SystemArray.size_20 header_0))))) False) 
<{iTasks.Internal.HttpUtil.c;22;36_17}> !g_l_0 = <{iTasks.Internal.HttpUtil.g_c1;22;54_160}> g_l_0
<{iTasks.Internal.HttpUtil.g_c1;22;54_160}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{iTasks.Internal.HttpUtil.g_c2;22;54_159}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{iTasks.Internal.HttpUtil.g_c2;22;54_159}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 header_1_0 error_1_1 -> case (StdBool.not error_1_1) (True -> _predefined._Cons header_1_0 (<{iTasks.Internal.HttpUtil.c;22;36_17}> g_t_1)) ) (_ -> <{iTasks.Internal.HttpUtil.c;22;36_17}> g_t_1)
iTasks.Internal.HttpUtil.parsePart_18 !part_0 = let index_1_0::I = Text.indexOf_4 "\r\n\r\n" part_0 in case (<{StdInt.<_17}> index_1_0 1) (True -> _Tuple2 _predefined._Nil part_0) (False -> _Tuple2 (<{iTasks.Internal.HttpUtil.c;22;36_17}> (StdList.map iTasks.Internal.HttpUtil.http_parseHeader (Text.split_13 "\r\n" (<{StdString.%_10}> part_0 (_Tuple2 0 (<{StdInt.-_7}> index_1_0 1)))))) (<{StdString.%_10}> part_0 (_Tuple2 (<{StdInt.+_6}> index_1_0 4) (_SystemArray.size_20 part_0)))) 
iTasks.Internal.HttpUtil.http_splitMultiPart !boundary_0 !body_1 = let startindex_1_0::I = Text.indexOf_4 (<{StdString.+++_11}> "--" (<{StdString.+++_11}> boundary_0 "\r\n")) body_1 in case (<{StdInt.==_16}> startindex_1_0 -1) (True -> _predefined._Nil) (False -> let endindex_3_0::I = Text.indexOf_4 (<{StdString.+++_11}> "\r\n" (<{StdString.+++_11}> "--" (<{StdString.+++_11}> boundary_0 "--"))) body_1 in case (<{StdInt.==_16}> endindex_3_0 -1) (True -> _predefined._Nil) (False -> StdList.map iTasks.Internal.HttpUtil.parsePart_18 (Text.split_13 (<{StdString.+++_11}> "\r\n" (<{StdString.+++_11}> "--" (<{StdString.+++_11}> boundary_0 "\r\n"))) (<{StdString.%_10}> body_1 (_Tuple2 (<{StdInt.+_6}> (<{StdInt.+_6}> startindex_1_0 (_SystemArray.size_20 boundary_0)) 4) (<{StdInt.-_7}> endindex_3_0 1))))) ) 
iTasks.Internal.HttpUtil.http_parseRequestLine !line_0 = let parts_1_0 = Text.split_13 " " line_0 in case (StdBool.not (<{StdInt.==_16}> (StdList.length_47 parts_1_0) 3)) (True -> <{_Tuple5!31}> "" "" "" "" True) (False -> let _x_3_1 = select parts_1_0::_Tuple2 1, path_3_2 = select _x_3_1::_Tuple2 0, qindex_3_3 = Text.indexOf_4 "?" path_3_2 in case (StdBool.not (<{StdInt.==_16}> qindex_3_3 -1)) (True -> <{_Tuple5!31}> (select parts_1_0::_Tuple2 0) (<{StdString.%_10}> path_3_2 (_Tuple2 0 (<{StdInt.-_7}> qindex_3_3 1))) (<{StdString.%_10}> path_3_2 (_Tuple2 (<{StdInt.+_6}> qindex_3_3 1) (_SystemArray.size_20 path_3_2))) (select (select _x_3_1::_Tuple2 1)::_Tuple2 0) False) (False -> <{_Tuple5!31}> (select parts_1_0::_Tuple2 0) path_3_2 "" (select (select _x_3_1::_Tuple2 1)::_Tuple2 0) False) ) 
iTasks.Internal.HttpUtil.http_addServerInfo !req_0 !host_1 = <{iTasks.Internal.HttpUtil._c;63;7_161}> (Text.split_13 ":" host_1) req_0
<{iTasks.Internal.HttpUtil._c;63;7_161}> !_x_0 !req_1 = case _x_0 (_predefined._Cons h_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> update req_1::Internet.HTTP._HTTPRequest [11:h_1_0,12:80]) (_predefined._Cons p_2_0 _x_2_1 -> case _x_2_1 (_predefined._Nil -> update req_1::Internet.HTTP._HTTPRequest [11:h_1_0,12:StdInt.toInt_23 p_2_0]) ) ) 
<{iTasks.Internal.HttpUtil.get`_28}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.Internal.HttpUtil.get`_28}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.Internal.HttpUtil.get`_28}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.Internal.HttpUtil.get`_156}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdString.<_3}> _x_0 kx_1_1) (True -> <{iTasks.Internal.HttpUtil.get`_156}> _x_0 l_1_3) (False -> case (<{StdString.<_3}> kx_1_1 _x_0) (True -> <{iTasks.Internal.HttpUtil.get`_156}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.Internal.HttpUtil.http_getValue !key_0 !valuemap_1 !defaultval_2 = Data.Maybe.fromMaybe defaultval_2 (<{iTasks.Internal.HttpUtil.get`_156}> key_0 valuemap_1)
iTasks.Internal.HttpUtil.http_addRequestData !req_0 !requestline_done_1::B !headers_done_2::B !data_done_3::B !data_4 = case (StdBool.not requestline_done_1) (True -> let req_2_0::I = update req_0::Internet.HTTP._HTTPRequest [6:<{StdString.+++_11}> (select req_0::Internet.HTTP._HTTPRequest 6) data_4], index_2_1 = Text.indexOf_4 "\r\n" (select req_2_0::Internet.HTTP._HTTPRequest 6) in case (<{StdInt.==_16}> index_2_1 -1) (True -> _Tuple5 req_2_0 False False False False) (False -> let _x_4_0 = iTasks.Internal.HttpUtil.http_parseRequestLine (<{StdString.%_10}> (select req_2_0::Internet.HTTP._HTTPRequest 6) (_Tuple2 0 (<{StdInt.-_7}> index_2_1 1))) in case (select _x_4_0::_Tuple5 4) (True -> _Tuple5 req_2_0 False False False True) (False -> iTasks.Internal.HttpUtil.http_addRequestData (update req_2_0::Internet.HTTP._HTTPRequest [0:Internet.HTTP.fromString_17 (select _x_4_0::_Tuple5 0),1:select _x_4_0::_Tuple5 1,2:select _x_4_0::_Tuple5 2,3:select _x_4_0::_Tuple5 3,6:<{StdString.%_10}> (select req_2_0::Internet.HTTP._HTTPRequest 6) (_Tuple2 (<{StdInt.+_6}> index_2_1 2) (_SystemArray.size_20 (select req_2_0::Internet.HTTP._HTTPRequest 6)))]) True False False "") ) ) (False -> case (StdBool.not headers_done_2) (True -> let req_3_0::I = update req_0::Internet.HTTP._HTTPRequest [6:<{StdString.+++_11}> (select req_0::Internet.HTTP._HTTPRequest 6) data_4], index_3_1 = Text.indexOf_4 "\r\n" (select req_3_0::Internet.HTTP._HTTPRequest 6) in case (<{StdInt.==_16}> index_3_1 -1) (True -> _Tuple5 req_3_0 True False False False) (False -> case (<{StdInt.==_16}> index_3_1 0) (True -> iTasks.Internal.HttpUtil.http_addRequestData (update req_3_0::Internet.HTTP._HTTPRequest [6:<{StdString.%_10}> (select req_3_0::Internet.HTTP._HTTPRequest 6) (_Tuple2 2 (_SystemArray.size_20 (select req_3_0::Internet.HTTP._HTTPRequest 6)))]) True True False "") (False -> let _x_6_0 = iTasks.Internal.HttpUtil.http_parseHeader (<{StdString.%_10}> (select req_3_0::Internet.HTTP._HTTPRequest 6) (_Tuple2 0 (<{StdInt.-_7}> index_3_1 1))) in case (select _x_6_0::_Tuple2 1) (True -> _Tuple5 req_3_0 True False False True) (False -> let header_8_0 = select _x_6_0::_Tuple2 0 in iTasks.Internal.HttpUtil.http_addRequestData (<{iTasks.Internal.HttpUtil._if;51;21_162}> (<{StdString.==_2}> (select header_8_0::_Tuple2 0) "Host") req_3_0 header_8_0 index_3_1) True False False "") ) ) ) (False -> case (StdBool.not data_done_3) (True -> let req_4_0 = update req_0::Internet.HTTP._HTTPRequest [6:<{StdString.+++_11}> (select req_0::Internet.HTTP._HTTPRequest 6) data_4] in case (<{StdInt.<_17}> (_SystemArray.size_20 (select req_4_0::Internet.HTTP._HTTPRequest 6)) (StdInt.toInt_23 (iTasks.Internal.HttpUtil.http_getValue "Content-Length" (select req_4_0::Internet.HTTP._HTTPRequest 5) "0"))) (True -> _Tuple5 req_4_0 True True False False) (False -> _Tuple5 req_4_0 True True True False) ) (False -> _Tuple5 (update req_0::Internet.HTTP._HTTPRequest [6:<{StdString.+++_11}> (select req_0::Internet.HTTP._HTTPRequest 6) data_4]) True True True False) ) ) 
<{iTasks.Internal.HttpUtil._if;51;21_162}> !_x_0::B !req_1 header_2 index_3::I = case _x_0 (True -> iTasks.Internal.HttpUtil.http_addServerInfo (update req_1::Internet.HTTP._HTTPRequest [5:Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) (select header_2::_Tuple2 0) (select header_2::_Tuple2 1) (select req_1::Internet.HTTP._HTTPRequest 5),6:<{StdString.%_10}> (select req_1::Internet.HTTP._HTTPRequest 6) (_Tuple2 (<{StdInt.+_6}> index_3 2) (_SystemArray.size_20 (select req_1::Internet.HTTP._HTTPRequest 6)))]) (select header_2::_Tuple2 1)) (_ -> update req_1::Internet.HTTP._HTTPRequest [5:Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) (select header_2::_Tuple2 0) (select header_2::_Tuple2 1) (select req_1::Internet.HTTP._HTTPRequest 5),6:<{StdString.%_10}> (select req_1::Internet.HTTP._HTTPRequest 6) (_Tuple2 (<{StdInt.+_6}> index_3 2) (_SystemArray.size_20 (select req_1::Internet.HTTP._HTTPRequest 6)))])
<{iTasks.Internal.HttpUtil.c;109;81_21}> !g_l_0 = <{iTasks.Internal.HttpUtil.g_c1;109;97_164}> g_l_0
<{iTasks.Internal.HttpUtil.g_c1;109;97_164}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{iTasks.Internal.HttpUtil.g_c2;109;97_163}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{iTasks.Internal.HttpUtil.g_c2;109;97_163}> !g_h_0 g_t_1 = case g_h_0 (_predefined._Cons name_1_0 value_1_1 -> _predefined._Cons (_Tuple2 (Text.Encodings.UrlEncoding.urlDecode name_1_0) (Text.Encodings.UrlEncoding.urlDecode (Text.join_6 "=" value_1_1))) (<{iTasks.Internal.HttpUtil.c;109;81_21}> g_t_1)) (_ -> <{iTasks.Internal.HttpUtil.c;109;81_21}> g_t_1)
iTasks.Internal.HttpUtil.http_parseUrlEncodedArguments !s_0 = <{iTasks.Internal.HttpUtil.c;109;81_21}> (StdList.map (Text.split_13 "=") (Text.split_13 "&" s_0))
iTasks.Internal.HttpUtil.http_parseGetArguments !req_0 = case (<{StdString.==_2}> (select req_0::Internet.HTTP._HTTPRequest 2) "") (True -> Data.Map.fromList (<{StdOverloaded.==;}> <{StdString.==_2}>) (<{StdOverloaded.<;}> <{StdString.<_3}>) _predefined._Nil) (False -> Data.Map.fromList (<{StdOverloaded.==;}> <{StdString.==_2}>) (<{StdOverloaded.<;}> <{StdString.<_3}>) (iTasks.Internal.HttpUtil.http_parseUrlEncodedArguments (select req_0::Internet.HTTP._HTTPRequest 2))) 
iTasks.Internal.HttpUtil.isPost_19::B !headers_0 = <{StdString.==_2}> (<{StdString.%_10}> (iTasks.Internal.HttpUtil.http_getValue "Content-Type" headers_0 "") (_Tuple2 0 32)) "application/x-www-form-urlencoded"
iTasks.Internal.HttpUtil.http_parsePostArguments !req_0 = Data.Map.fromList (<{StdOverloaded.==;}> <{StdString.==_2}>) (<{StdOverloaded.<;}> <{StdString.<_3}>) (iTasks.Internal.HttpUtil.http_parseUrlEncodedArguments (select req_0::Internet.HTTP._HTTPRequest 6))
iTasks.Internal.HttpUtil.isMultiPart_20::B !headers_0 = <{StdString.==_2}> (<{StdString.%_10}> (iTasks.Internal.HttpUtil.http_getValue "Content-Type" headers_0 "") (_Tuple2 0 18)) "multipart/form-data"
iTasks.Internal.HttpUtil.removequotes_24 !_vArray_0 !<{_v%_1}> s_2 = case (<{StdInt.<_17}> (select _vArray_0::<{_SystemArray.Array;}> 4 s_2) 2) (True -> s_2) (False -> select <{_v%_1}>::<{StdOverloaded.%;}> 0 s_2 (_Tuple2 (<{iTasks.Internal.HttpUtil._if;144;19_165}> (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 0) '"')) (<{iTasks.Internal.HttpUtil._if;145;17_166}> (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 (<{StdInt.-_7}> (select _vArray_0::<{_SystemArray.Array;}> 4 s_2) 1)) '"') _vArray_0 s_2))) 
<{iTasks.Internal.HttpUtil._if;145;17_166}>::I !_x_0::B !_vArray_1 s_2 = case _x_0 (True -> <{StdInt.-_7}> (select _vArray_1::<{_SystemArray.Array;}> 4 s_2) 2) (_ -> <{StdInt.-_7}> (select _vArray_1::<{_SystemArray.Array;}> 4 s_2) 1)
<{iTasks.Internal.HttpUtil._if;144;19_165}>::I !_x_0::B = case _x_0 (True -> 1) (_ -> 0)
iTasks.Internal.HttpUtil.removequotes_157 !<{_v%_0}> !s_1 = case (<{StdInt.<_17}> (_SystemArray.size_20 s_1) 2) (True -> s_1) (False -> select <{_v%_0}>::<{StdOverloaded.%;}> 0 s_1 (_Tuple2 (<{iTasks.Internal.HttpUtil._if;144;19_167}> (<{StdChar.==_18}> (_SystemArray.select_19 s_1 0) '"')) (<{iTasks.Internal.HttpUtil._if;145;17_168}> (<{StdChar.==_18}> (_SystemArray.select_19 s_1 (<{StdInt.-_7}> (_SystemArray.size_20 s_1) 1)) '"') s_1))) 
<{iTasks.Internal.HttpUtil._if;145;17_168}>::I !_x_0::B !s_1 = case _x_0 (True -> <{StdInt.-_7}> (_SystemArray.size_20 s_1) 2) (_ -> <{StdInt.-_7}> (_SystemArray.size_20 s_1) 1)
<{iTasks.Internal.HttpUtil._if;144;19_167}>::I !_x_0::B = case _x_0 (True -> 1) (_ -> 0)
iTasks.Internal.HttpUtil.removequotes_158 !s_0 = case (<{StdInt.<_17}> (_SystemArray.size_20 s_0) 2) (True -> s_0) (False -> <{StdString.%_10}> s_0 (_Tuple2 (<{iTasks.Internal.HttpUtil._if;144;19_169}> (<{StdChar.==_18}> (_SystemArray.select_19 s_0 0) '"')) (<{iTasks.Internal.HttpUtil._if;145;17_170}> (<{StdChar.==_18}> (_SystemArray.select_19 s_0 (<{StdInt.-_7}> (_SystemArray.size_20 s_0) 1)) '"') s_0))) 
<{iTasks.Internal.HttpUtil._if;145;17_170}>::I !_x_0::B !s_1 = case _x_0 (True -> <{StdInt.-_7}> (_SystemArray.size_20 s_1) 2) (_ -> <{StdInt.-_7}> (_SystemArray.size_20 s_1) 1)
<{iTasks.Internal.HttpUtil._if;144;19_169}>::I !_x_0::B = case _x_0 (True -> 1) (_ -> 0)
iTasks.Internal.HttpUtil.getParam_23 !name_0 !header_1 = let index_1_0::I = Text.indexOf_4 (<{StdString.+++_11}> name_0 "=") header_1 in case (<{StdInt.==_16}> index_1_0 -1) (True -> "") (False -> let header_3_0::I = <{StdString.%_10}> header_1 (_Tuple2 (<{StdInt.+_6}> (<{StdInt.+_6}> index_1_0 (_SystemArray.size_20 name_0)) 1) (_SystemArray.size_20 header_1)), index_3_1 = Text.indexOf_4 ";" header_3_0 in case (<{StdInt.==_16}> index_3_1 -1) (True -> iTasks.Internal.HttpUtil.removequotes_158 header_3_0) (False -> iTasks.Internal.HttpUtil.removequotes_158 (<{StdString.%_10}> header_3_0 (_Tuple2 0 (<{StdInt.-_7}> index_3_1 1)))) ) 
iTasks.Internal.HttpUtil.parseParts_22 !_x_0 arguments_1 uploads_2 = case _x_0 (_predefined._Nil -> _Tuple2 arguments_1 uploads_2) (_predefined._Cons _x_1_0 xs_1_1 -> case _x_1_0 (_Tuple2 headers_2_0 body_2_1 -> let disposition_3_0 = iTasks.Internal.HttpUtil.http_getValue "Content-Disposition" (Data.Map.fromList (<{StdOverloaded.==;}> <{StdString.==_2}>) (<{StdOverloaded.<;}> <{StdString.<_3}>) headers_2_0) "" in case (<{StdString.==_2}> disposition_3_0 "") (True -> iTasks.Internal.HttpUtil.parseParts_22 xs_1_1 arguments_1 uploads_2) (False -> let name_5_0 = iTasks.Internal.HttpUtil.getParam_23 "name" disposition_3_0 in case (<{StdString.==_2}> name_5_0 "") (True -> iTasks.Internal.HttpUtil.parseParts_22 xs_1_1 arguments_1 uploads_2) (False -> let filename_7_0 = iTasks.Internal.HttpUtil.getParam_23 "filename" disposition_3_0 in case (<{StdString.==_2}> filename_7_0 "") (True -> iTasks.Internal.HttpUtil.parseParts_22 xs_1_1 (Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) name_5_0 body_2_1 arguments_1) uploads_2) (False -> iTasks.Internal.HttpUtil.parseParts_22 xs_1_1 arguments_1 (Data.Map.put (<{StdOverloaded.<;}> <{StdString.<_3}>) name_5_0 (update Internet.HTTP.newHTTPUpload::Internet.HTTP._HTTPUpload [0:name_5_0,1:filename_7_0,2:iTasks.Internal.HttpUtil.http_getValue "Content-Type" (Data.Map.fromList (<{StdOverloaded.==;}> <{StdString.==_2}>) (<{StdOverloaded.<;}> <{StdString.<_3}>) headers_2_0) "",3:body_2_1]) uploads_2)) ) ) ) ) 
iTasks.Internal.HttpUtil.http_parseMultiPartPostArguments !req_0 = let mimetype_1_0::I = iTasks.Internal.HttpUtil.http_getValue "Content-Type" (select req_0::Internet.HTTP._HTTPRequest 5) "", index_1_1 = Text.indexOf_4 "boundary=" mimetype_1_0 in case (<{StdInt.==_16}> index_1_1 -1) (True -> _Tuple2 Data.Map.newMap Data.Map.newMap) (False -> iTasks.Internal.HttpUtil.parseParts_22 (iTasks.Internal.HttpUtil.http_splitMultiPart (<{StdString.%_10}> mimetype_1_0 (_Tuple2 (<{StdInt.+_6}> index_1_1 9) (_SystemArray.size_20 mimetype_1_0))) (select req_0::Internet.HTTP._HTTPRequest 6)) Data.Map.newMap Data.Map.newMap) 
iTasks.Internal.HttpUtil.http_parseArguments !req_0 = let req_1_0 = update req_0::Internet.HTTP._HTTPRequest [7:iTasks.Internal.HttpUtil.http_parseGetArguments req_0] in case (iTasks.Internal.HttpUtil.isPost_19 (select req_1_0::Internet.HTTP._HTTPRequest 5)) (True -> update req_1_0::Internet.HTTP._HTTPRequest [8:iTasks.Internal.HttpUtil.http_parsePostArguments req_1_0]) (False -> case (iTasks.Internal.HttpUtil.isMultiPart_20 (select req_1_0::Internet.HTTP._HTTPRequest 5)) (True -> let _x_4_0 = iTasks.Internal.HttpUtil.http_parseMultiPartPostArguments req_1_0 in update req_1_0::Internet.HTTP._HTTPRequest [8:select _x_4_0::_Tuple2 0,10:select _x_4_0::_Tuple2 1]) (False -> req_1_0) ) 
iTasks.Internal.HttpUtil.http_staticFileMimeType !_x_0 !world_1 = case _x_0 (".jpg" -> <{_Tuple2!3}> "image/jpeg" world_1) (".png" -> <{_Tuple2!3}> "image/png" world_1) (".gif" -> <{_Tuple2!3}> "image/gif" world_1) (".bmp" -> <{_Tuple2!3}> "image/bmp" world_1) (".htm" -> <{_Tuple2!3}> "text/html" world_1) (".html" -> <{_Tuple2!3}> "text/html" world_1) (".txt" -> <{_Tuple2!3}> "text/plain" world_1) (".css" -> <{_Tuple2!3}> "text/css" world_1) (".js" -> <{_Tuple2!3}> "text/javascript" world_1) ("" -> <{_Tuple2!3}> "application/octet-stream" world_1) (_ -> iTasks.Internal.HttpUtil.http_staticFileMimeType (<{StdString.%_10}> _x_0 (_Tuple2 1 (_SystemArray.size_20 _x_0))) world_1)
iTasks.Internal.HttpUtil.http_staticFileContent !_vFileSystem_0 !filename_1 !world_2 = let _x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 1 filename_1 3 world_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple3!7}> False "Could not open file" (select _x_1_0::_Tuple3 2)) (False -> let file_3_0 = select _x_1_0::_Tuple3 1, _x_3_1 = StdFile.fseek file_3_0 0 2 in case (StdBool.not (select _x_3_1::_Tuple2 0)) (True -> <{_Tuple3!7}> False "Seek to end of file does not succeed" (select _x_1_0::_Tuple3 2)) (False -> let file_5_0 = select _x_3_1::_Tuple2 1, _x_5_1::I = StdFile.fposition file_5_0, file_5_2 = select _x_5_1::_Tuple2 1, pos_5_3 = select _x_5_1::_Tuple2 0, _x_5_4 = StdFile.fseek file_5_2 (<{StdInt.~_15}> pos_5_3) 1 in case (StdBool.not (select _x_5_4::_Tuple2 0)) (True -> <{_Tuple3!7}> False "Seek to begin of file does not succeed" (select _x_1_0::_Tuple3 2)) (False -> let _x_7_0 = StdFile.freads (select _x_5_4::_Tuple2 1) pos_5_3 in <{_Tuple3!7}> True (select _x_7_0::_Tuple2 0) (select (select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (select _x_7_0::_Tuple2 1) (select _x_1_0::_Tuple3 2))::_Tuple2 1)) ) ) 
iTasks.Internal.HttpUtil.http_staticResponse !_vFileSystem_0 !req_1 !world_2 = let filename_1_0 = <{StdString.%_10}> (select req_1::Internet.HTTP._HTTPRequest 1) (_Tuple2 1 (_SystemArray.size_20 (select req_1::Internet.HTTP._HTTPRequest 1))), _x_1_1 = iTasks.Internal.HttpUtil.http_staticFileMimeType filename_1_0 world_2, world_1_2 = select _x_1_1::_Tuple2 1, _x_1_3 = iTasks.Internal.HttpUtil.http_staticFileContent _vFileSystem_0 filename_1_0 world_1_2 in case (StdBool.not (select _x_1_3::_Tuple3 0)) (True -> <{_Tuple2!3}> Internet.HTTP.notfoundResponse (select _x_1_3::_Tuple3 2)) (False -> let content_3_0 = select _x_1_3::_Tuple3 1 in <{_Tuple2!3}> (update Internet.HTTP.okResponse::Internet.HTTP._HTTPResponse [3:_predefined._Cons (_Tuple2 "Content-Type" (select _x_1_1::_Tuple2 0)) (_predefined._Cons (_Tuple2 "Content-Length" (StdString.toString_5 (_SystemArray.size_20 content_3_0))) _predefined._Nil),4:content_3_0]) (select _x_1_3::_Tuple3 2)) 
iTasks.Internal.HttpUtil.http_makeResponse !_vFileSystem_0 !request_1 !_x_2 !fallback_3::B !world_4 = case _x_2 (_predefined._Nil -> case fallback_3 (True -> iTasks.Internal.HttpUtil.http_staticResponse _vFileSystem_0 request_1 world_4) (False -> <{_Tuple2!3}> Internet.HTTP.notfoundResponse world_4) ) (_predefined._Cons _x_1_0 rest_1_1 -> case _x_1_0 (_Tuple2 pred_2_0 handler_2_1 -> case (pred_2_0 (select request_1::Internet.HTTP._HTTPRequest 1)) (True -> handler_2_1 request_1 world_4) (False -> iTasks.Internal.HttpUtil.http_makeResponse _vFileSystem_0 request_1 rest_1_1 fallback_3 world_4) ) ) 
iTasks.Internal.HttpUtil.month_27 !_x_0::I = case _x_0 (0 -> "Jan") (1 -> "Feb") (2 -> "Mar") (3 -> "Apr") (4 -> "May") (5 -> "Jun") (6 -> "Jul") (7 -> "Aug") (8 -> "Sep") (9 -> "Oct") (10 -> "Nov") (11 -> "Dec") 
iTasks.Internal.HttpUtil.weekday_26 !_x_0::I = case _x_0 (0 -> "Sun") (1 -> "Mon") (2 -> "Tue") (3 -> "Wed") (4 -> "Thu") (5 -> "Fri") (6 -> "Sat") 
iTasks.Internal.HttpUtil.format_25 !tm_0 = <{StdString.+++_11}> (iTasks.Internal.HttpUtil.weekday_26 (select tm_0::System.Time._Tm 6)) (<{StdString.+++_11}> ", " (<{StdString.+++_11}> (StdString.toString_5 (select tm_0::System.Time._Tm 3)) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (iTasks.Internal.HttpUtil.month_27 (select tm_0::System.Time._Tm 4)) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_5 (<{StdInt.+_6}> (select tm_0::System.Time._Tm 5) 1900)) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_5 (select tm_0::System.Time._Tm 2)) (<{StdString.+++_11}> ":" (<{StdString.+++_11}> (StdString.toString_5 (select tm_0::System.Time._Tm 1)) (<{StdString.+++_11}> ":" (<{StdString.+++_11}> (StdString.toString_5 (select tm_0::System.Time._Tm 0)) " GMT"))))))))))))
iTasks.Internal.HttpUtil.http_addDateHeaders !rsp_0 !world_1 = case rsp_0 (Internet.HTTP._HTTPResponse rsp_version_1_0 rsp_code_1_1 rsp_reason_1_2 rsp_headers_1_3 rsp_data_1_4 -> let _x_2_0 = System.Time.gmTime world_1, now_2_1 = iTasks.Internal.HttpUtil.format_25 (select _x_2_0::_Tuple2 0) in <{_Tuple2!3}> (update rsp_0::Internet.HTTP._HTTPResponse [3:_predefined._Cons (_Tuple2 "Last-Modified" now_2_1) (_predefined._Cons (_Tuple2 "Date" now_2_1) rsp_headers_1_3)]) (select _x_2_0::_Tuple2 1)) 
iTasks.Internal.HttpUtil.http_serverControl !response_0 = <{iTasks.Internal.HttpUtil._c;232;7_171}> (Data.List.lookup (<{StdOverloaded.==;}> <{StdString.==_2}>) "X-Server-Control" (select response_0::Internet.HTTP._HTTPResponse 3))
<{iTasks.Internal.HttpUtil._c;232;7_171}> !_x_0 = case _x_0 (Data.Maybe.Just control_1_0 -> control_1_0) (_ -> "")


|| Converted Records
:: <{iTasks.Internal.HttpUtil.JSONEncode_s;}> = {!iTasks.Internal.HttpUtil.JSONEncode_s}

:: <{iTasks.Internal.HttpUtil.JSONEncode_ss;}> = {!iTasks.Internal.HttpUtil.JSONEncode_ss}

:: <{iTasks.Internal.HttpUtil.JSONEncode_sss;}> = {!iTasks.Internal.HttpUtil.JSONEncode_sss}

:: <{iTasks.Internal.HttpUtil.JSONDecode_s;}> = {!iTasks.Internal.HttpUtil.JSONDecode_s}

:: <{iTasks.Internal.HttpUtil.JSONDecode_ss;}> = {!iTasks.Internal.HttpUtil.JSONDecode_ss}

:: <{iTasks.Internal.HttpUtil.JSONDecode_sss;}> = {!iTasks.Internal.HttpUtil.JSONDecode_sss}

:: <{iTasks.Internal.HttpUtil.gEq_s;}> = {!iTasks.Internal.HttpUtil.gEq_s}

:: <{iTasks.Internal.HttpUtil.gEq_ss;}> = {!iTasks.Internal.HttpUtil.gEq_ss}

:: <{iTasks.Internal.HttpUtil.gEq_sss;}> = {!iTasks.Internal.HttpUtil.gEq_sss}

:: <{iTasks.Internal.HttpUtil.gEq_ssss;}> = {!iTasks.Internal.HttpUtil.gEq_ssss}

:: <{iTasks.Internal.HttpUtil.gEq_sssss;}> = {!iTasks.Internal.HttpUtil.gEq_sssss}

:: <{iTasks.Internal.HttpUtil.gEq_ssssss;}> = {!iTasks.Internal.HttpUtil.gEq_ssssss}

:: <{iTasks.Internal.HttpUtil.gEq_sssssss;}> = {!iTasks.Internal.HttpUtil.gEq_sssssss}

:: <{iTasks.Internal.HttpUtil.gEq_ssssssss;}> = {!iTasks.Internal.HttpUtil.gEq_ssssssss}

:: <{iTasks.Internal.HttpUtil.gEq_sssssssss;}> = {!iTasks.Internal.HttpUtil.gEq_sssssssss}

:: <{iTasks.Internal.HttpUtil.bimap_s;}> = {iTasks.Internal.HttpUtil.bimap_s}

:: <{iTasks.Internal.HttpUtil.bimap_ss;}> = {iTasks.Internal.HttpUtil.bimap_ss}

:: <{iTasks.Internal.HttpUtil.bimap_sss;}> = {iTasks.Internal.HttpUtil.bimap_sss}

:: <{iTasks.Internal.HttpUtil.JSONEncode_ssss;}> = {!iTasks.Internal.HttpUtil.JSONEncode_ssss}

:: <{iTasks.Internal.HttpUtil.JSONEncode_sssss;}> = {!iTasks.Internal.HttpUtil.JSONEncode_sssss}

:: <{iTasks.Internal.HttpUtil.JSONEncode_ssssss;}> = {!iTasks.Internal.HttpUtil.JSONEncode_ssssss}

:: <{iTasks.Internal.HttpUtil.JSONEncode_sssssss;}> = {!iTasks.Internal.HttpUtil.JSONEncode_sssssss}

:: <{iTasks.Internal.HttpUtil.JSONEncode_ssssssss;}> = {!iTasks.Internal.HttpUtil.JSONEncode_ssssssss}

:: <{iTasks.Internal.HttpUtil.JSONEncode_sssssssss;}> = {!iTasks.Internal.HttpUtil.JSONEncode_sssssssss}

:: <{iTasks.Internal.HttpUtil.JSONDecode_ssss;}> = {!iTasks.Internal.HttpUtil.JSONDecode_ssss}

:: <{iTasks.Internal.HttpUtil.JSONDecode_sssss;}> = {!iTasks.Internal.HttpUtil.JSONDecode_sssss}

:: <{iTasks.Internal.HttpUtil.JSONDecode_ssssss;}> = {!iTasks.Internal.HttpUtil.JSONDecode_ssssss}

:: <{iTasks.Internal.HttpUtil.JSONDecode_sssssss;}> = {!iTasks.Internal.HttpUtil.JSONDecode_sssssss}

:: <{iTasks.Internal.HttpUtil.JSONDecode_ssssssss;}> = {!iTasks.Internal.HttpUtil.JSONDecode_ssssssss}

:: <{iTasks.Internal.HttpUtil.JSONDecode_sssssssss;}> = {!iTasks.Internal.HttpUtil.JSONDecode_sssssssss}

