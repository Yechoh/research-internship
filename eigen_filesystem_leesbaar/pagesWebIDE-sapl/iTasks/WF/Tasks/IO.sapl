|| ?module? iTasks.WF.Tasks.IO


<{iTasks.WF.Tasks.IO.get`_13}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_13}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.WF.Tasks.IO.get`_13}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_12}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_12}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.WF.Tasks.IO.get`_12}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_11}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_11}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.WF.Tasks.IO.get`_11}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_366}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{iTasks.WF.Definition.<_5}> _x_0 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_366}> _x_0 l_1_3) (False -> case (<{iTasks.WF.Definition.<_5}> kx_1_1 _x_0) (True -> <{iTasks.WF.Tasks.IO.get`_366}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_364}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{iTasks.WF.Definition.<_5}> _x_0 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_364}> _x_0 l_1_3) (False -> case (<{iTasks.WF.Definition.<_5}> kx_1_1 _x_0) (True -> <{iTasks.WF.Tasks.IO.get`_364}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_365}> _x_0::I !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdInt.<_17}> _x_0 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_365}> _x_0 l_1_3) (False -> case (<{StdInt.<_17}> kx_1_1 _x_0) (True -> <{iTasks.WF.Tasks.IO.get`_365}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.WF.Tasks.IO.eval_6 !_vTC_0 !_vTC_1 !_viTask_2 !_vTC_3 cmd_4 args_5 dir_6 handlers_7 sds_8 rep_9 event_10 evalOpts_11 !tree_12 !iworld_13 = case tree_12 (iTasks.Internal.TaskState.TCInit task_1_0 ts_1_1 -> <{iTasks.WF.Tasks.IO._c;36;11_373}> (iTasks.Internal.TaskServer.addExternalProc task_1_0 cmd_4 args_5 dir_6 (iTasks.Internal.Task.wrapExternalProcTask (select _viTask_2::<{iTasks.WF.Definition.iTask;}> 6) _vTC_0 _vTC_1 _viTask_2 handlers_7 sds_8) iworld_13) ts_1_1 rep_9 task_1_0) (iTasks.Internal.TaskState.TCBasic task_1_0 ts_1_1 _x_1_2 _x_1_3 -> case iworld_13 (iTasks.Internal.IWorld._IWorld server_2_0 config_2_1 clocks_2_2 current_2_3 random_2_4 sdsNotifyRequests_2_5 memoryShares_2_6 cachedShares_2_7 exposedShares_2_8 jsCompilerState_2_9 ioTasks_2_10 ioStates_2_11 world_2_12 resources_2_13 onClient_2_14 shutdown_2_15 -> <{iTasks.WF.Tasks.IO._c;42;11_377}> (<{iTasks.WF.Tasks.IO.get`_364}> task_1_0 ioStates_2_11) ts_1_1 rep_9 tree_12 iworld_13 _vTC_3) ) (iTasks.Internal.TaskState.TCDestroy _x_1_0 -> case _x_1_0 (iTasks.Internal.TaskState.TCBasic task_2_0 ts_2_1 _x_2_2 _x_2_3 -> case iworld_13 (iTasks.Internal.IWorld._IWorld server_3_0 config_3_1 clocks_3_2 current_3_3 random_3_4 sdsNotifyRequests_3_5 memoryShares_3_6 cachedShares_3_7 exposedShares_3_8 jsCompilerState_3_9 ioTasks_3_10 ioStates_3_11 world_3_12 resources_3_13 onClient_3_14 shutdown_3_15 -> _Tuple2 iTasks.WF.Definition.DestroyedResult (update iworld_13::iTasks.Internal.IWorld._IWorld [11:<{iTasks.WF.Tasks.IO._c;55;22_378}> (<{iTasks.WF.Tasks.IO.get`_366}> task_2_0 ioStates_3_11) task_2_0 ioStates_3_11])) ) ) 
<{iTasks.WF.Tasks.IO._c;55;22_378}> !_x_0 task_1 !ioStates_2 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iTasks.Internal.IWorld.IOActive values_2_0 -> Data.Map.put (<{StdOverloaded.<;}> <{iTasks.WF.Definition.<_5}>) task_1 (iTasks.Internal.IWorld.IODestroyed values_2_0) ioStates_2) ) (_ -> ioStates_2)
<{iTasks.WF.Tasks.IO._c;42;11_377}> !_x_0 ts_1::I rep_2 tree_3 iworld_4 a_ij_5 = case _x_0 (Data.Maybe.Nothing -> _Tuple2 (iTasks.WF.Definition.ValueResult iTasks.WF.Definition.NoValue (iTasks.Internal.TaskEval._TaskEvalInfo ts_1 _predefined._Nil True) rep_2 tree_3) iworld_4) (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iTasks.Internal.IWorld.IOActive values_2_0 -> <{iTasks.WF.Tasks.IO._c;46;19_376}> (<{iTasks.WF.Tasks.IO.get`_365}> 0 values_2_0) a_ij_5 ts_1 rep_2 tree_3 iworld_4) (iTasks.Internal.IWorld.IOException e_2_0 -> _Tuple2 (iTasks.WF.Definition.ExceptionResult (iTasks.WF.Definition.exception (_SystemDynamic.TypeApp (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC__UnboxedArray)) (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC_Char))) (<{StdOverloaded.toString;}> StdString.toString_9) e_2_0)) iworld_4) ) 
<{iTasks.WF.Tasks.IO._c;46;19_376}> !_x_0 a_ij_1 ts_2::I rep_3 tree_4 iworld_5 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (_Tuple2 _x_2_0 s_2_1 -> iTasks.WF.Tasks.IO._f375_375 _x_2_0 a_ij_1 s_2_1 ts_2 rep_3 tree_4 iworld_5) ) (_ -> <{iTasks.WF.Tasks.IO._c;46;19_374}> iworld_5)
iTasks.WF.Tasks.IO._f375_375 !_x_0 a_ij_1 s_2::B ts_3::I rep_4 tree_5 iworld_6 = case _x_0 (_SystemDynamic._DynamicTemp value_1_0 type_1_1 -> let !result_2_0 = _SystemDynamic._unify (_SystemDynamic._bind_global_type_pattern_var (_SystemDynamic.TypeVar 0) a_ij_1 (_SystemDynamic._initial_unification_environment 1 0)) type_1_1 (_SystemDynamic.TypeVar 0), !unify_bool_2_1 = select result_2_0::_Tuple2 0 in case unify_bool_2_1 (True -> _Tuple2 (iTasks.WF.Definition.ValueResult (iTasks.WF.Definition.Value value_1_0 s_2) (iTasks.Internal.TaskEval._TaskEvalInfo ts_3 _predefined._Nil True) rep_4 tree_5) iworld_6) ) (_ -> <{iTasks.WF.Tasks.IO._c;46;19_374}> iworld_6)
<{iTasks.WF.Tasks.IO._c;46;19_374}> iworld_0 = _Tuple2 (iTasks.WF.Definition.ExceptionResult (iTasks.WF.Definition.exception (_SystemDynamic.TypeApp (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC__UnboxedArray)) (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC_Char))) (<{StdOverloaded.toString;}> StdString.toString_9) "Corrupt IO task result")) iworld_0
<{iTasks.WF.Tasks.IO._c;36;11_373}> !_x_0 ts_1::I rep_2 task_3 = case _x_0 (_Tuple2 _x_1_0 iworld_1_1 -> case _x_1_0 (Data.Error.Error e_2_0 -> _Tuple2 (iTasks.WF.Definition.ExceptionResult e_2_0) iworld_1_1) (Data.Error.Ok _x_2_0 -> _Tuple2 (iTasks.WF.Definition.ValueResult iTasks.WF.Definition.NoValue (iTasks.Internal.TaskEval._TaskEvalInfo ts_1 _predefined._Nil True) rep_2 (iTasks.Internal.TaskState.TCBasic task_3 ts_1 Text.JSON.JSONNull False)) iworld_1_1) ) 
iTasks.WF.Tasks.IO.externalProcess !_viTask_0 !_vTC_1 !_vTC_2 !cmd_3 !args_4 !dir_5 !sds_6 !handlers_7 = iTasks.WF.Definition.Task (iTasks.WF.Tasks.IO.eval_6 _vTC_1 _vTC_2 _viTask_0 (select _viTask_0::<{iTasks.WF.Definition.iTask;}> 6) cmd_3 args_4 dir_5 handlers_7 sds_6 (iTasks.UI.Definition.ReplaceUI (iTasks.UI.Definition.stringDisplay (<{iTasks.Internal.Generic.Visualization.<+++}> (<{iTasks.WF.Tasks.IO.gText_s;}> iTasks.Internal.Generic.Visualization.gText__String_15) (<{iTasks.Internal.Generic.Visualization.<+++}> (<{iTasks.WF.Tasks.IO.gText_s;}> iTasks.Internal.Generic.Visualization.gText__String_15) (<{iTasks.Internal.Generic.Visualization.<+++}> (<{iTasks.WF.Tasks.IO.gText_s;}> iTasks.Internal.Generic.Visualization.gText__String_15) "External process " cmd_3) " ") (Text.join_6 " " args_4)))))
<{iTasks.WF.Tasks.IO.get`_16}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_16}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.WF.Tasks.IO.get`_16}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_15}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_15}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.WF.Tasks.IO.get`_15}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_14}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_14}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.WF.Tasks.IO.get`_14}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_369}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{iTasks.WF.Definition.<_5}> _x_0 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_369}> _x_0 l_1_3) (False -> case (<{iTasks.WF.Definition.<_5}> kx_1_1 _x_0) (True -> <{iTasks.WF.Tasks.IO.get`_369}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_367}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{iTasks.WF.Definition.<_5}> _x_0 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_367}> _x_0 l_1_3) (False -> case (<{iTasks.WF.Definition.<_5}> kx_1_1 _x_0) (True -> <{iTasks.WF.Tasks.IO.get`_367}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_368}> _x_0::I !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{StdInt.<_17}> _x_0 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_368}> _x_0 l_1_3) (False -> case (<{StdInt.<_17}> kx_1_1 _x_0) (True -> <{iTasks.WF.Tasks.IO.get`_368}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.WF.Tasks.IO.eval_10 !_vTC_0 !_vTC_1 !_vTC_2 !_vTC_3 host_4 port_5::I handlers_6 sds_7 rep_8 event_9 evalOpts_10 !tree_11 !iworld_12 = case tree_11 (iTasks.Internal.TaskState.TCInit task_1_0 ts_1_1 -> case iworld_12 (iTasks.Internal.IWorld._IWorld server_2_0 config_2_1 clocks_2_2 current_2_3 random_2_4 sdsNotifyRequests_2_5 memoryShares_2_6 cachedShares_2_7 exposedShares_2_8 jsCompilerState_2_9 ioTasks_2_10 ioStates_2_11 world_2_12 resources_2_13 onClient_2_14 shutdown_2_15 -> case ioTasks_2_10 (iTasks.Internal.IWorld._IOTasks done_3_0 todo_3_1 -> <{iTasks.WF.Tasks.IO._c;96;11_379}> (iTasks.Internal.TaskServer.addConnection task_1_0 host_4 port_5 (iTasks.Internal.Task.wrapConnectionTask _vTC_0 _vTC_1 _vTC_2 handlers_6 sds_7) iworld_12) ts_1_1 rep_8 task_1_0) ) ) (iTasks.Internal.TaskState.TCBasic task_1_0 ts_1_1 _x_1_2 _x_1_3 -> case iworld_12 (iTasks.Internal.IWorld._IWorld server_2_0 config_2_1 clocks_2_2 current_2_3 random_2_4 sdsNotifyRequests_2_5 memoryShares_2_6 cachedShares_2_7 exposedShares_2_8 jsCompilerState_2_9 ioTasks_2_10 ioStates_2_11 world_2_12 resources_2_13 onClient_2_14 shutdown_2_15 -> <{iTasks.WF.Tasks.IO._c;103;11_383}> (<{iTasks.WF.Tasks.IO.get`_367}> task_1_0 ioStates_2_11) ts_1_1 rep_8 tree_11 iworld_12 _vTC_3) ) (iTasks.Internal.TaskState.TCDestroy _x_1_0 -> case _x_1_0 (iTasks.Internal.TaskState.TCBasic task_2_0 ts_2_1 _x_2_2 _x_2_3 -> case iworld_12 (iTasks.Internal.IWorld._IWorld server_3_0 config_3_1 clocks_3_2 current_3_3 random_3_4 sdsNotifyRequests_3_5 memoryShares_3_6 cachedShares_3_7 exposedShares_3_8 jsCompilerState_3_9 ioTasks_3_10 ioStates_3_11 world_3_12 resources_3_13 onClient_3_14 shutdown_3_15 -> _Tuple2 iTasks.WF.Definition.DestroyedResult (update iworld_12::iTasks.Internal.IWorld._IWorld [11:<{iTasks.WF.Tasks.IO._c;116;22_384}> (<{iTasks.WF.Tasks.IO.get`_369}> task_2_0 ioStates_3_11) task_2_0 ioStates_3_11])) ) ) 
<{iTasks.WF.Tasks.IO._c;116;22_384}> !_x_0 task_1 !ioStates_2 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iTasks.Internal.IWorld.IOActive values_2_0 -> Data.Map.put (<{StdOverloaded.<;}> <{iTasks.WF.Definition.<_5}>) task_1 (iTasks.Internal.IWorld.IODestroyed values_2_0) ioStates_2) ) (_ -> ioStates_2)
<{iTasks.WF.Tasks.IO._c;103;11_383}> !_x_0 ts_1::I rep_2 tree_3 iworld_4 a_ij_5 = case _x_0 (Data.Maybe.Nothing -> _Tuple2 (iTasks.WF.Definition.ValueResult iTasks.WF.Definition.NoValue (iTasks.Internal.TaskEval._TaskEvalInfo ts_1 _predefined._Nil True) rep_2 tree_3) iworld_4) (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iTasks.Internal.IWorld.IOActive values_2_0 -> <{iTasks.WF.Tasks.IO._c;107;19_382}> (<{iTasks.WF.Tasks.IO.get`_368}> 0 values_2_0) a_ij_5 ts_1 rep_2 tree_3 iworld_4) (iTasks.Internal.IWorld.IOException e_2_0 -> _Tuple2 (iTasks.WF.Definition.ExceptionResult (iTasks.WF.Definition.exception (_SystemDynamic.TypeApp (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC__UnboxedArray)) (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC_Char))) (<{StdOverloaded.toString;}> StdString.toString_9) e_2_0)) iworld_4) ) 
<{iTasks.WF.Tasks.IO._c;107;19_382}> !_x_0 a_ij_1 ts_2::I rep_3 tree_4 iworld_5 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (_Tuple2 _x_2_0 s_2_1 -> iTasks.WF.Tasks.IO._f381_381 _x_2_0 a_ij_1 s_2_1 ts_2 rep_3 tree_4 iworld_5) ) (_ -> <{iTasks.WF.Tasks.IO._c;107;19_380}> iworld_5)
iTasks.WF.Tasks.IO._f381_381 !_x_0 a_ij_1 s_2::B ts_3::I rep_4 tree_5 iworld_6 = case _x_0 (_SystemDynamic._DynamicTemp value_1_0 type_1_1 -> let !result_2_0 = _SystemDynamic._unify (_SystemDynamic._bind_global_type_pattern_var (_SystemDynamic.TypeVar 0) a_ij_1 (_SystemDynamic._initial_unification_environment 1 0)) type_1_1 (_SystemDynamic.TypeVar 0), !unify_bool_2_1 = select result_2_0::_Tuple2 0 in case unify_bool_2_1 (True -> _Tuple2 (iTasks.WF.Definition.ValueResult (iTasks.WF.Definition.Value value_1_0 s_2) (iTasks.Internal.TaskEval._TaskEvalInfo ts_3 _predefined._Nil True) rep_4 tree_5) iworld_6) ) (_ -> <{iTasks.WF.Tasks.IO._c;107;19_380}> iworld_6)
<{iTasks.WF.Tasks.IO._c;107;19_380}> iworld_0 = _Tuple2 (iTasks.WF.Definition.ExceptionResult (iTasks.WF.Definition.exception (_SystemDynamic.TypeApp (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC__UnboxedArray)) (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC_Char))) (<{StdOverloaded.toString;}> StdString.toString_9) "Corrupt IO task result")) iworld_0
<{iTasks.WF.Tasks.IO._c;96;11_379}> !_x_0 ts_1::I rep_2 task_3 = case _x_0 (_Tuple2 _x_1_0 iworld_1_1 -> case _x_1_0 (Data.Error.Error e_2_0 -> _Tuple2 (iTasks.WF.Definition.ExceptionResult e_2_0) iworld_1_1) (Data.Error.Ok _x_2_0 -> _Tuple2 (iTasks.WF.Definition.ValueResult iTasks.WF.Definition.NoValue (iTasks.Internal.TaskEval._TaskEvalInfo ts_1 _predefined._Nil True) rep_2 (iTasks.Internal.TaskState.TCBasic task_3 ts_1 Text.JSON.JSONNull False)) iworld_1_1) ) 
iTasks.WF.Tasks.IO.tcpconnect !_viTask_0 !_viTask_1 !_viTask_2 !host_3 !port_4::I !sds_5 handlers_6 = iTasks.WF.Definition.Task (iTasks.WF.Tasks.IO.eval_10 (select _viTask_0::<{iTasks.WF.Definition.iTask;}> 6) (select _viTask_1::<{iTasks.WF.Definition.iTask;}> 6) (select _viTask_2::<{iTasks.WF.Definition.iTask;}> 6) (select _viTask_0::<{iTasks.WF.Definition.iTask;}> 6) host_3 port_4 handlers_6 sds_5 (iTasks.UI.Definition.ReplaceUI (iTasks.UI.Definition.stringDisplay (<{iTasks.Internal.Generic.Visualization.<+++}> (<{iTasks.WF.Tasks.IO.gText_s;}> iTasks.Internal.Generic.Visualization.gText_Int_11) (<{iTasks.Internal.Generic.Visualization.<+++}> (<{iTasks.WF.Tasks.IO.gText_s;}> iTasks.Internal.Generic.Visualization.gText__String_15) (<{iTasks.Internal.Generic.Visualization.<+++}> (<{iTasks.WF.Tasks.IO.gText_s;}> iTasks.Internal.Generic.Visualization.gText__String_15) "TCP client " host_3) ":") port_4))))
<{iTasks.WF.Tasks.IO.get`_20}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_20}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.WF.Tasks.IO.get`_20}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.WF.Tasks.IO.anon_19 k_0 x_1 xs_2 = _predefined._Cons (_Tuple2 k_0 x_1) xs_2
<{iTasks.WF.Tasks.IO.get`_18}> !<{_v<_0}> _x_1 !_x_2 = case _x_2 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 _x_1 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_18}> <{_v<_0}> _x_1 l_1_3) (False -> case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 kx_1_1 _x_1) (True -> <{iTasks.WF.Tasks.IO.get`_18}> <{_v<_0}> _x_1 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.WF.Tasks.IO.rep_9 !<{_vgText*_0}> !port_1 = iTasks.UI.Definition.ReplaceUI (iTasks.UI.Definition.stringDisplay (<{iTasks.Internal.Generic.Visualization.<+++}> <{_vgText*_0}> "Listening for connections on port " port_1))
<{iTasks.WF.Tasks.IO.c;79;36_7}> !_vTC_0 !g_l_1 = <{iTasks.WF.Tasks.IO.g_c1;79;55_388}> g_l_1 _vTC_0
<{iTasks.WF.Tasks.IO.g_c1;79;55_388}> !g_l_0 a_ij_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{iTasks.WF.Tasks.IO.g_c2;79;55_387}> g_h_1_0 a_ij_1 g_t_1_1) (_ -> _predefined._Nil)
<{iTasks.WF.Tasks.IO.g_c2;79;55_387}> !g_h_0 !a_ij_1 g_t_2 = case g_h_0 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_1 (_Tuple2 _x_2_0 _x_2_1 -> iTasks.WF.Tasks.IO._f386_386 _x_2_0 a_ij_1 g_t_2) ) (_ -> <{iTasks.WF.Tasks.IO.g_c2;79;55_385}> a_ij_1 g_t_2)
iTasks.WF.Tasks.IO._f386_386 !_x_0 !a_ij_1 g_t_2 = case _x_0 (_SystemDynamic._DynamicTemp value_1_0 type_1_1 -> let !result_2_0 = _SystemDynamic._unify (_SystemDynamic._bind_global_type_pattern_var (_SystemDynamic.TypeVar 0) a_ij_1 (_SystemDynamic._initial_unification_environment 1 0)) type_1_1 (_SystemDynamic.TypeVar 0), !unify_bool_2_1 = select result_2_0::_Tuple2 0 in case unify_bool_2_1 (True -> _predefined._Cons value_1_0 (<{iTasks.WF.Tasks.IO.c;79;36_7}> a_ij_1 g_t_2)) ) (_ -> <{iTasks.WF.Tasks.IO.g_c2;79;55_385}> a_ij_1 g_t_2)
<{iTasks.WF.Tasks.IO.g_c2;79;55_385}> !_vTC_0 !g_t_1 = <{iTasks.WF.Tasks.IO.c;79;36_7}> _vTC_0 g_t_1
<{iTasks.WF.Tasks.IO.get`_372}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{iTasks.WF.Definition.<_5}> _x_0 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_372}> _x_0 l_1_3) (False -> case (<{iTasks.WF.Definition.<_5}> kx_1_1 _x_0) (True -> <{iTasks.WF.Tasks.IO.get`_372}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
<{iTasks.WF.Tasks.IO.get`_371}> _x_0 !_x_1 = case _x_1 (Data.Map.Tip -> Data.Maybe.Nothing) (Data.Map.Bin _x_1_0 kx_1_1 x_1_2 l_1_3 r_1_4 -> case (<{iTasks.WF.Definition.<_5}> _x_0 kx_1_1) (True -> <{iTasks.WF.Tasks.IO.get`_371}> _x_0 l_1_3) (False -> case (<{iTasks.WF.Definition.<_5}> kx_1_1 _x_0) (True -> <{iTasks.WF.Tasks.IO.get`_371}> _x_0 r_1_4) (False -> Data.Maybe.Just x_1_2) ) ) 
iTasks.WF.Tasks.IO.rep_370 !port_0::I = iTasks.UI.Definition.ReplaceUI (iTasks.UI.Definition.stringDisplay (<{iTasks.Internal.Generic.Visualization.<+++}> (<{iTasks.WF.Tasks.IO.gText_s;}> iTasks.Internal.Generic.Visualization.gText_Int_11) "Listening for connections on port " port_0))
iTasks.WF.Tasks.IO.eval_8 !_vTC_0 !_vTC_1 !_vTC_2 !_vTC_3 port_4::I removeClosed_5::B handlers_6 sds_7 event_8 evalOpts_9 !tree_10 !iworld_11 = case tree_10 (iTasks.Internal.TaskState.TCInit task_1_0 ts_1_1 -> <{iTasks.WF.Tasks.IO._c;67;11_389}> (iTasks.Internal.TaskServer.addListener task_1_0 port_4 removeClosed_5 (iTasks.Internal.Task.wrapConnectionTask _vTC_0 _vTC_1 _vTC_2 handlers_6 sds_7) iworld_11) port_4 ts_1_1 task_1_0) (iTasks.Internal.TaskState.TCBasic task_1_0 ts_1_1 _x_1_2 _x_1_3 -> case iworld_11 (iTasks.Internal.IWorld._IWorld server_2_0 config_2_1 clocks_2_2 current_2_3 random_2_4 sdsNotifyRequests_2_5 memoryShares_2_6 cachedShares_2_7 exposedShares_2_8 jsCompilerState_2_9 ioTasks_2_10 ioStates_2_11 world_2_12 resources_2_13 onClient_2_14 shutdown_2_15 -> <{iTasks.WF.Tasks.IO._c;75;11_390}> (<{iTasks.WF.Tasks.IO.get`_371}> task_1_0 ioStates_2_11) iworld_11 _vTC_3 ts_1_1 port_4 task_1_0) ) (iTasks.Internal.TaskState.TCDestroy _x_1_0 -> case _x_1_0 (iTasks.Internal.TaskState.TCBasic task_2_0 ts_2_1 _x_2_2 _x_2_3 -> case iworld_11 (iTasks.Internal.IWorld._IWorld server_3_0 config_3_1 clocks_3_2 current_3_3 random_3_4 sdsNotifyRequests_3_5 memoryShares_3_6 cachedShares_3_7 exposedShares_3_8 jsCompilerState_3_9 ioTasks_3_10 ioStates_3_11 world_3_12 resources_3_13 onClient_3_14 shutdown_3_15 -> _Tuple2 iTasks.WF.Definition.DestroyedResult (update iworld_11::iTasks.Internal.IWorld._IWorld [11:<{iTasks.WF.Tasks.IO._c;85;22_391}> (<{iTasks.WF.Tasks.IO.get`_372}> task_2_0 ioStates_3_11) task_2_0 ioStates_3_11])) ) ) 
<{iTasks.WF.Tasks.IO._c;85;22_391}> !_x_0 task_1 !ioStates_2 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iTasks.Internal.IWorld.IOActive values_2_0 -> Data.Map.put (<{StdOverloaded.<;}> <{iTasks.WF.Definition.<_5}>) task_1 (iTasks.Internal.IWorld.IODestroyed values_2_0) ioStates_2) ) (_ -> ioStates_2)
<{iTasks.WF.Tasks.IO._c;75;11_390}> !_x_0 iworld_1 _vTC_2 ts_3::I port_4::I task_5 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iTasks.Internal.IWorld.IOException e_2_0 -> _Tuple2 (iTasks.WF.Definition.ExceptionResult (iTasks.WF.Definition.exception (_SystemDynamic.TypeApp (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC__UnboxedArray)) (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC_Char))) (<{StdOverloaded.toString;}> StdString.toString_9) e_2_0)) iworld_1) (iTasks.Internal.IWorld.IOActive values_2_0 -> _Tuple2 (iTasks.WF.Definition.ValueResult (iTasks.WF.Definition.Value (<{iTasks.WF.Tasks.IO.c;79;36_7}> _vTC_2 (Data.Map.foldrWithKey iTasks.WF.Tasks.IO.anon_19 _predefined._Nil values_2_0)) False) (iTasks.Internal.TaskEval._TaskEvalInfo ts_3 _predefined._Nil True) (iTasks.WF.Tasks.IO.rep_370 port_4) (iTasks.Internal.TaskState.TCBasic task_5 ts_3 Text.JSON.JSONNull False)) iworld_1) ) (Data.Maybe.Nothing -> _Tuple2 (iTasks.WF.Definition.ValueResult (iTasks.WF.Definition.Value _predefined._Nil False) (iTasks.Internal.TaskEval._TaskEvalInfo ts_3 _predefined._Nil True) (iTasks.WF.Tasks.IO.rep_370 port_4) (iTasks.Internal.TaskState.TCBasic task_5 ts_3 Text.JSON.JSONNull False)) iworld_1) 
<{iTasks.WF.Tasks.IO._c;67;11_389}> !_x_0 port_1::I ts_2::I task_3 = case _x_0 (_Tuple2 _x_1_0 iworld_1_1 -> case _x_1_0 (Data.Error.Error e_2_0 -> _Tuple2 (iTasks.WF.Definition.ExceptionResult (iTasks.WF.Definition.exception (_SystemDynamic.TypeApp (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC__UnboxedArray)) (_SystemDynamic.TypeCons (_SystemDynamic._TypeCodeConstructor _SystemDynamic.TC_Char))) (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdString.+++_11}> "Error: port " (<{StdString.+++_11}> (StdString.toString_5 port_1) " already in use.")))) iworld_1_1) (Data.Error.Ok _x_2_0 -> _Tuple2 (iTasks.WF.Definition.ValueResult (iTasks.WF.Definition.Value _predefined._Nil False) (iTasks.Internal.TaskEval._TaskEvalInfo ts_2 _predefined._Nil True) (iTasks.WF.Tasks.IO.rep_370 port_1) (iTasks.Internal.TaskState.TCBasic task_3 ts_2 Text.JSON.JSONNull False)) iworld_1_1) ) 
iTasks.WF.Tasks.IO.tcplisten !_viTask_0 !_viTask_1 !_viTask_2 !port_3::I !removeClosed_4::B !sds_5 handlers_6 = iTasks.WF.Definition.Task (iTasks.WF.Tasks.IO.eval_8 (select _viTask_0::<{iTasks.WF.Definition.iTask;}> 6) (select _viTask_1::<{iTasks.WF.Definition.iTask;}> 6) (select _viTask_2::<{iTasks.WF.Definition.iTask;}> 6) (select _viTask_0::<{iTasks.WF.Definition.iTask;}> 6) port_3 removeClosed_4 handlers_6 sds_5)
<{iTasks.WF.Tasks.IO.TD;ConnectionHandlers}> _x_0::B = _predefined._Nil
<{iTasks.WF.Tasks.IO.TD;ExitCode}> _x_0::B = _predefined._Nil
<{iTasks.WF.Tasks.IO.TD;ExternalProcessHandlers}> _x_0::B = _predefined._Nil

:: iTasks.WF.Tasks.IO.ExitCode = iTasks.WF.Tasks.IO.ExitCode !a1::I

|| Converted Records
:: iTasks.WF.Tasks.IO._ConnectionHandlers = {!iTasks.WF.Tasks.IO.onConnect, !iTasks.WF.Tasks.IO.onData, !iTasks.WF.Tasks.IO.onShareChange, !iTasks.WF.Tasks.IO.onDisconnect}

:: iTasks.WF.Tasks.IO._ExternalProcessHandlers = {!iTasks.WF.Tasks.IO.onStartup, !iTasks.WF.Tasks.IO.onOutData, !iTasks.WF.Tasks.IO.onErrData, !iTasks.WF.Tasks.IO.onShareChange, !iTasks.WF.Tasks.IO.onExit}

:: <{iTasks.WF.Tasks.IO.JSONEncode_s;}> = {!iTasks.WF.Tasks.IO.JSONEncode_s}

:: <{iTasks.WF.Tasks.IO.JSONEncode_ss;}> = {!iTasks.WF.Tasks.IO.JSONEncode_ss}

:: <{iTasks.WF.Tasks.IO.JSONEncode_sss;}> = {!iTasks.WF.Tasks.IO.JSONEncode_sss}

:: <{iTasks.WF.Tasks.IO.JSONDecode_s;}> = {!iTasks.WF.Tasks.IO.JSONDecode_s}

:: <{iTasks.WF.Tasks.IO.JSONDecode_ss;}> = {!iTasks.WF.Tasks.IO.JSONDecode_ss}

:: <{iTasks.WF.Tasks.IO.JSONDecode_sss;}> = {!iTasks.WF.Tasks.IO.JSONDecode_sss}

:: <{iTasks.WF.Tasks.IO.gDefault_s;}> = {iTasks.WF.Tasks.IO.gDefault_s}

:: <{iTasks.WF.Tasks.IO.gDefault_ss;}> = {iTasks.WF.Tasks.IO.gDefault_ss}

:: <{iTasks.WF.Tasks.IO.gDefault_sss;}> = {iTasks.WF.Tasks.IO.gDefault_sss}

:: <{iTasks.WF.Tasks.IO.gText_s;}> = {!iTasks.WF.Tasks.IO.gText_s}

:: <{iTasks.WF.Tasks.IO.gText_ss;}> = {!iTasks.WF.Tasks.IO.gText_ss}

:: <{iTasks.WF.Tasks.IO.gText_sss;}> = {!iTasks.WF.Tasks.IO.gText_sss}

:: <{iTasks.WF.Tasks.IO.gEditor_s;}> = {iTasks.WF.Tasks.IO.gEditor_s}

:: <{iTasks.WF.Tasks.IO.gEditor_ss;}> = {iTasks.WF.Tasks.IO.gEditor_ss}

:: <{iTasks.WF.Tasks.IO.gEditor_sss;}> = {iTasks.WF.Tasks.IO.gEditor_sss}

:: <{iTasks.WF.Tasks.IO.gEq_s;}> = {!iTasks.WF.Tasks.IO.gEq_s}

:: <{iTasks.WF.Tasks.IO.gEq_ss;}> = {!iTasks.WF.Tasks.IO.gEq_ss}

:: <{iTasks.WF.Tasks.IO.gEq_sss;}> = {!iTasks.WF.Tasks.IO.gEq_sss}

:: <{iTasks.WF.Tasks.IO.gEq_ssss;}> = {!iTasks.WF.Tasks.IO.gEq_ssss}

:: <{iTasks.WF.Tasks.IO.gEq_sssss;}> = {!iTasks.WF.Tasks.IO.gEq_sssss}

:: <{iTasks.WF.Tasks.IO.gEq_ssssss;}> = {!iTasks.WF.Tasks.IO.gEq_ssssss}

:: <{iTasks.WF.Tasks.IO.gEq_sssssss;}> = {!iTasks.WF.Tasks.IO.gEq_sssssss}

:: <{iTasks.WF.Tasks.IO.gEq_ssssssss;}> = {!iTasks.WF.Tasks.IO.gEq_ssssssss}

:: <{iTasks.WF.Tasks.IO.gEq_sssssssss;}> = {!iTasks.WF.Tasks.IO.gEq_sssssssss}

:: <{iTasks.WF.Tasks.IO.bimap_s;}> = {iTasks.WF.Tasks.IO.bimap_s}

:: <{iTasks.WF.Tasks.IO.bimap_ss;}> = {iTasks.WF.Tasks.IO.bimap_ss}

:: <{iTasks.WF.Tasks.IO.bimap_sss;}> = {iTasks.WF.Tasks.IO.bimap_sss}

:: <{iTasks.WF.Tasks.IO.JSONEncode_ssss;}> = {!iTasks.WF.Tasks.IO.JSONEncode_ssss}

:: <{iTasks.WF.Tasks.IO.JSONEncode_sssss;}> = {!iTasks.WF.Tasks.IO.JSONEncode_sssss}

:: <{iTasks.WF.Tasks.IO.JSONEncode_ssssss;}> = {!iTasks.WF.Tasks.IO.JSONEncode_ssssss}

:: <{iTasks.WF.Tasks.IO.JSONEncode_sssssss;}> = {!iTasks.WF.Tasks.IO.JSONEncode_sssssss}

:: <{iTasks.WF.Tasks.IO.JSONEncode_ssssssss;}> = {!iTasks.WF.Tasks.IO.JSONEncode_ssssssss}

:: <{iTasks.WF.Tasks.IO.JSONEncode_sssssssss;}> = {!iTasks.WF.Tasks.IO.JSONEncode_sssssssss}

:: <{iTasks.WF.Tasks.IO.JSONDecode_ssss;}> = {!iTasks.WF.Tasks.IO.JSONDecode_ssss}

:: <{iTasks.WF.Tasks.IO.JSONDecode_sssss;}> = {!iTasks.WF.Tasks.IO.JSONDecode_sssss}

:: <{iTasks.WF.Tasks.IO.JSONDecode_ssssss;}> = {!iTasks.WF.Tasks.IO.JSONDecode_ssssss}

:: <{iTasks.WF.Tasks.IO.JSONDecode_sssssss;}> = {!iTasks.WF.Tasks.IO.JSONDecode_sssssss}

:: <{iTasks.WF.Tasks.IO.JSONDecode_ssssssss;}> = {!iTasks.WF.Tasks.IO.JSONDecode_ssssssss}

:: <{iTasks.WF.Tasks.IO.JSONDecode_sssssssss;}> = {!iTasks.WF.Tasks.IO.JSONDecode_sssssssss}

:: <{iTasks.WF.Tasks.IO.gText_ssss;}> = {!iTasks.WF.Tasks.IO.gText_ssss}

:: <{iTasks.WF.Tasks.IO.gText_sssss;}> = {!iTasks.WF.Tasks.IO.gText_sssss}

:: <{iTasks.WF.Tasks.IO.gText_ssssss;}> = {!iTasks.WF.Tasks.IO.gText_ssssss}

:: <{iTasks.WF.Tasks.IO.gText_sssssss;}> = {!iTasks.WF.Tasks.IO.gText_sssssss}

:: <{iTasks.WF.Tasks.IO.gText_ssssssss;}> = {!iTasks.WF.Tasks.IO.gText_ssssssss}

:: <{iTasks.WF.Tasks.IO.gText_sssssssss;}> = {!iTasks.WF.Tasks.IO.gText_sssssssss}

:: <{iTasks.WF.Tasks.IO.gDefault_ssss;}> = {iTasks.WF.Tasks.IO.gDefault_ssss}

:: <{iTasks.WF.Tasks.IO.gDefault_sssss;}> = {iTasks.WF.Tasks.IO.gDefault_sssss}

:: <{iTasks.WF.Tasks.IO.gDefault_ssssss;}> = {iTasks.WF.Tasks.IO.gDefault_ssssss}

:: <{iTasks.WF.Tasks.IO.gDefault_sssssss;}> = {iTasks.WF.Tasks.IO.gDefault_sssssss}

:: <{iTasks.WF.Tasks.IO.gDefault_ssssssss;}> = {iTasks.WF.Tasks.IO.gDefault_ssssssss}

:: <{iTasks.WF.Tasks.IO.gDefault_sssssssss;}> = {iTasks.WF.Tasks.IO.gDefault_sssssssss}

:: <{iTasks.WF.Tasks.IO.gEditor_ssss;}> = {iTasks.WF.Tasks.IO.gEditor_ssss}

:: <{iTasks.WF.Tasks.IO.gEditor_sssss;}> = {iTasks.WF.Tasks.IO.gEditor_sssss}

:: <{iTasks.WF.Tasks.IO.gEditor_ssssss;}> = {iTasks.WF.Tasks.IO.gEditor_ssssss}

:: <{iTasks.WF.Tasks.IO.gEditor_sssssss;}> = {iTasks.WF.Tasks.IO.gEditor_sssssss}

