|| ?module? genericsupport


genericsupport.lookup_21 kind_0 !_x_1 = case _x_1 (_predefined._Nil -> general.No) (_predefined._Cons gci_1_0 gcis_1_1 -> case (<{syntax.==_11}> (select gci_1_0::syntax._GenericClassInfo 0) kind_0) (True -> general.Yes gci_1_0) (False -> genericsupport.lookup_21 kind_0 gcis_1_1) ) 
genericsupport.lookupGenericClassInfo !kind_0 !class_infos_1 = let !hash_index_1_0::I = <{genericsupport._c;56;21_43}> kind_0 in genericsupport.lookup_21 kind_0 (_SystemArray.select_75 class_infos_1 hash_index_1_0)
<{genericsupport._c;56;21_43}>::I !kind_0 = case kind_0 (syntax.KindConst -> 0) (syntax.KindArrow kinds_1_0 -> StdList.length_47 kinds_1_0) 
<{genericsupport.cu;73;10_22}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{genericsupport.cu;73;10_22}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{genericsupport.cu;73;10_41}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_78 g_a_4 c_i_2 in <{genericsupport.cu;73;10_41}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
<{genericsupport.cu;73;10_42}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_78 g_a_3 c_i_1 in <{genericsupport.cu;73;10_42}> (_SystemArray.update_77 c_a_0 c_i_1 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
genericsupport.addGenericClassInfo !class_info_0 !class_infos_1 = case class_info_0 (syntax._GenericClassInfo gci_kind_1_0 gci_module_1_1 gci_class_1_2 gci_member_1_3 -> let !hash_index_2_0::I = <{genericsupport._c;68;21_44}> gci_kind_1_0, !_x_2_1 = _SystemArray.uselect_78 class_infos_1 hash_index_2_0, !class_infos1_2_2 = _predefined._Cons class_info_0 (select _x_2_1::_Tuple2 0), _x_2_3::I = _SystemArray.usize_79 (select _x_2_1::_Tuple2 1), g_s2_2_4 = <{StdInt.-_7}> (select _x_2_3::_Tuple2 0) 1 in _SystemArray.update_77 (<{genericsupport.cu;73;10_42}> (_SystemArray._createArray_72 (<{StdInt.+_6}> g_s2_2_4 StdInt.one_11)) 0 g_s2_2_4 (select _x_2_3::_Tuple2 1)) hash_index_2_0 class_infos1_2_2) 
<{genericsupport._c;68;21_44}>::I !gci_kind_0 = case gci_kind_0 (syntax.KindConst -> 0) (syntax.KindArrow kinds_1_0 -> StdList.length_47 kinds_1_0) 
genericsupport.getGenericClassInfo !_x_0 !kind_1 !modules_2 !generic_heap_3 = case _x_0 (syntax._Global glob_object_1_0 glob_module_1_1 -> let !gen_def_2_0 = genericsupport.select_36 (select (genericsupport.select_28 modules_2 glob_module_1_1)::syntax._CommonDefs 6) glob_object_1_0, !_x_2_1 = Heap.readPtr (select gen_def_2_0::syntax._GenericDef 6) generic_heap_3, !opt_class_info_2_2 = genericsupport.lookupGenericClassInfo kind_1 (select (select _x_2_1::_Tuple2 0)::syntax._GenericInfo 0) in <{_Tuple2!2}> opt_class_info_2_2 (select _x_2_1::_Tuple2 1)) 
genericsupport.getGenericMember !gen_0 !kind_1 !modules_2 !generic_heap_3 = let _x_1_0 = genericsupport.getGenericClassInfo gen_0 kind_1 modules_2 generic_heap_3, generic_heap_1_1 = select _x_1_0::_Tuple2 1 in <{genericsupport._c;31;7_45}> (select _x_1_0::_Tuple2 0) generic_heap_1_1
<{genericsupport._c;31;7_45}> !_x_0 !generic_heap_1 = case _x_0 (general.No -> <{_Tuple2!2}> general.No generic_heap_1) (general.Yes _x_1_0 -> case _x_1_0 (syntax._GenericClassInfo gci_kind_2_0 gci_module_2_1 gci_class_2_2 gci_member_2_3 -> let !member_glob_3_0 = syntax._Global gci_member_2_3 gci_module_2_1 in <{_Tuple2!2}> (general.Yes member_glob_3_0) generic_heap_1) ) 
genericsupport.getGenericClass !gen_0 !kind_1 !modules_2 !generic_heap_3 = let _x_1_0 = genericsupport.getGenericClassInfo gen_0 kind_1 modules_2 generic_heap_3, generic_heap_1_1 = select _x_1_0::_Tuple2 1 in <{genericsupport._c;48;7_46}> (select _x_1_0::_Tuple2 0) generic_heap_1_1
<{genericsupport._c;48;7_46}> !_x_0 !generic_heap_1 = case _x_0 (general.No -> <{_Tuple2!2}> general.No generic_heap_1) (general.Yes _x_1_0 -> case _x_1_0 (syntax._GenericClassInfo gci_kind_2_0 gci_module_2_1 gci_class_2_2 gci_member_2_3 -> let !class_glob_3_0 = syntax._Global gci_class_2_2 gci_module_2_1 in <{_Tuple2!2}> (general.Yes class_glob_3_0) generic_heap_1) ) 
genericsupport.makeIdent !str_0 = syntax._Ident str_0 Heap.nilPtr
genericsupport.postfixIdent !id_name_0 !postfix_1 = genericsupport.makeIdent (<{StdString.+++_11}> id_name_0 postfix_1)
genericsupport.kinds_to_str_23 !_x_0 = case _x_0 (_predefined._Nil -> "") (_predefined._Cons _x_1_0 ks_1_1 -> case _x_1_0 (syntax.KindConst -> <{StdString.+++_11}> "s" (genericsupport.kinds_to_str_23 ks_1_1)) (_ -> <{StdString.+++_11}> "o" (<{StdString.+++_11}> (genericsupport.kind_to_short_string _x_1_0) (<{StdString.+++_11}> "c" (genericsupport.kinds_to_str_23 ks_1_1))))) 
genericsupport.kind_to_short_string !_x_0 = case _x_0 (syntax.KindConst -> "s") (syntax.KindArrow kinds_1_0 -> <{StdString.+++_11}> (genericsupport.kinds_to_str_23 kinds_1_0) "s") 
genericsupport.genericIdentToClassIdent !id_name_0 !kind_1 = genericsupport.postfixIdent id_name_0 (<{StdString.+++_11}> "_" (genericsupport.kind_to_short_string kind_1))
genericsupport.genericIdentToMemberIdent !id_name_0 !kind_1 = genericsupport.genericIdentToClassIdent id_name_0 kind_1
genericsupport.type_cons_to_str_24 !_x_0 = case _x_0 (syntax.TypeConsSymb _x_1_0 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop_2_3 -> syntax.toString_2 type_ident_2_0) ) (syntax.TypeConsBasic bt_1_0 -> syntax.toString_71 bt_1_0) (syntax.TypeConsArrow -> "ARROW") (syntax.TypeConsVar tv_1_0 -> select (select tv_1_0::syntax._TypeVar 0)::syntax._Ident 0) (syntax.TypeConsQualifiedIdent _x_1_0 type_name_1_1 -> type_name_1_1) 
genericsupport.genericIdentToFunIdent !id_name_0 !type_cons_1 = genericsupport.postfixIdent id_name_0 (<{StdString.+++_11}> "_" (genericsupport.type_cons_to_str_24 type_cons_1))
genericsupport.field_n_of_GenericTypeDefDescriptor::I !_x_0 = case _x_0 ("gtd_name" -> 0) ("gtd_arity" -> 1) ("gtd_num_conses" -> 2) ("gtd_conses" -> 3) (_ -> -1)
genericsupport.field_n_of_GenericConsDescriptor::I !_x_0 = case _x_0 ("gcd_name" -> 0) ("gcd_arity" -> 1) ("gcd_prio" -> 2) ("gcd_type_def" -> 3) ("gcd_type" -> 4) ("gcd_index" -> 5) (_ -> -1)
genericsupport.field_n_of_GenericFieldDescriptor::I !_x_0 = case _x_0 ("gfd_name" -> 0) ("gfd_index" -> 1) ("gfd_cons" -> 2) (_ -> -1)
genericsupport.field_n_of_GenericRecordDescriptor::I !_x_0 = case _x_0 ("grd_name" -> 0) ("grd_arity" -> 1) ("grd_type_arity" -> 2) ("grd_type" -> 3) ("grd_fields" -> 4) (_ -> -1)
genericsupport.field_0_name_of_generic_info !_x_0::I = case _x_0 (0 -> "gtd_name") (1 -> "gcd_name") (2 -> "grd_name") (3 -> "gfd_name") 
genericsupport.field_1_name_of_generic_info !_x_0::I = case _x_0 (0 -> "gtd_arity") (1 -> "gcd_arity") (2 -> "grd_arity") (3 -> "gfd_index") 
genericsupport.field_2_name_of_generic_info !_x_0::I = case _x_0 (0 -> "gtd_num_conses") (1 -> "gcd_prio") (2 -> "grd_type_arity") (3 -> "gfd_cons") 
genericsupport.field_3_name_of_generic_info !_x_0::I = case _x_0 (0 -> "gtd_conses") (1 -> "gcd_type_def") (2 -> "grd_type") 
genericsupport.field_4_name_of_generic_info !_x_0::I = case _x_0 (1 -> "gcd_type") (2 -> "grd_fields") 
genericsupport.field_5_name_of_generic_info !_x_0::I = case _x_0 (1 -> "gcd_index") 


|| Converted Records
