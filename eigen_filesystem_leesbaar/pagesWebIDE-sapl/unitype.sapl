|| ?module? unitype


unitype.isPositive::B !var_id_0::I !cons_vars_1 = StdBool.not (<{StdInt.==_16}> (StdInt.bitand (_SystemArray.select_11 cons_vars_1 (<{StdInt.>>}> var_id_0 5)) (<{StdInt.<<}> 1 (StdInt.bitand var_id_0 31))) 0)
unitype.adjust_sign_84 !sign_0 !_x_1 cons_vars_2 = case _x_1 (syntax.TempV _x_1_0 -> typeproperties._Sign True True) (syntax.TempQV _x_1_0 -> typeproperties._Sign True True) (syntax.TempQDV _x_1_0 -> typeproperties._Sign True True) (<{syntax.-->}> _x_1_0 _x_1_1 -> typeproperties._Sign True True) (syntax.TA _x_1_0 _x_1_1 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 _x_2_3 -> case _x_2_3 (syntax._TypeSymbProperties tsp_sign_3_0 tsp_propagation_3_1 tsp_coercible_3_2 -> case tsp_coercible_3_2 (True -> sign_0) (False -> typeproperties._Sign True True) ) ) ) (syntax.TAS _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 _x_2_3 -> case _x_2_3 (syntax._TypeSymbProperties tsp_sign_3_0 tsp_propagation_3_1 tsp_coercible_3_2 -> case tsp_coercible_3_2 (True -> sign_0) (False -> typeproperties._Sign True True) ) ) ) (syntax.TArrow -> typeproperties._Sign True True) (syntax.TArrow1 _x_1_0 -> typeproperties._Sign True True) (<{syntax.:@:}> _x_1_0 _x_1_1 -> case _x_1_0 (syntax.TempCV tmp_var_id_2_0 -> case (unitype.isPositive tmp_var_id_2_0 cons_vars_2) (True -> sign_0) (False -> typeproperties._Sign True True) ) (_ -> typeproperties._Sign True True)) (_ -> sign_0)
unitype.isUnique::B !_x_0 = case _x_0 (unitype.CT_Unique -> True) (_ -> False)
unitype.isNonUnique::B !_x_0 = case _x_0 (unitype.CT_NonUnique -> True) (_ -> False)
unitype.make_non_unique_82 !_x_0 !coercions_1 = case _x_0 (unitype.CT_Node this_attr_1_0 ct_less_1_1 ct_greater_1_2 -> unitype.make_non_unique_82 ct_greater_1_2 (unitype.make_non_unique_82 ct_less_1_1 (unitype.makeNonUnique this_attr_1_0 coercions_1))) (_ -> coercions_1)
unitype.makeNonUnique !attr_0::I !_x_1 = case _x_1 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> let _x_2_0 = _SystemArray.replace_2 coer_demanded_1_0 attr_0 unitype.CT_Empty in unitype.make_non_unique_82 (select _x_2_0::_Tuple2 0) (unitype._Coercions (select _x_2_0::_Tuple2 1) (_SystemArray.update_5 coer_offered_1_1 attr_0 unitype.CT_NonUnique))) 
unitype.make_unique_81 !_x_0 !coercions_1 = case _x_0 (unitype.CT_Node this_attr_1_0 ct_less_1_1 ct_greater_1_2 -> unitype.make_unique_81 ct_greater_1_2 (unitype.make_unique_81 ct_less_1_1 (unitype.makeUnique this_attr_1_0 coercions_1))) (_ -> coercions_1)
unitype.makeUnique !attr_0::I !_x_1 = case _x_1 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> let _x_2_0 = _SystemArray.replace_2 coer_offered_1_1 attr_0 unitype.CT_Empty in unitype.make_unique_81 (select _x_2_0::_Tuple2 0) (unitype._Coercions (_SystemArray.update_5 coer_demanded_1_0 attr_0 unitype.CT_Unique) (select _x_2_0::_Tuple2 1))) 
unitype.insert_80 !new_attr_0::I !_x_1 = case _x_1 (unitype.CT_Empty -> <{_Tuple2!3}> True (unitype.CT_Node new_attr_0 unitype.CT_Empty unitype.CT_Empty)) (unitype.CT_Node this_attr_1_0 ct_less_1_1 ct_greater_1_2 -> case (<{StdInt.<_17}> new_attr_0 this_attr_1_0) (True -> let _x_3_0 = unitype.insert_80 new_attr_0 ct_less_1_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (unitype.CT_Node this_attr_1_0 (select _x_3_0::_Tuple2 1) ct_greater_1_2)) (False -> case (<{StdInt.<_17}> this_attr_1_0 new_attr_0) (True -> let _x_4_0 = unitype.insert_80 new_attr_0 ct_greater_1_2 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (unitype.CT_Node this_attr_1_0 ct_less_1_1 (select _x_4_0::_Tuple2 1))) (False -> <{_Tuple2!3}> False (unitype.CT_Node this_attr_1_0 ct_less_1_1 ct_greater_1_2)) ) ) 
unitype.newInequality !off_attr_0::I !dem_attr_1::I !coercions_2 = case coercions_2 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> let _x_2_0 = _SystemArray.uselect_6 coer_demanded_1_0 off_attr_0, dem_coercions_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = unitype.insert_80 dem_attr_1 dem_coercions_2_1 in case (select _x_2_2::_Tuple2 0) (True -> let _x_4_0 = _SystemArray.uselect_6 coer_offered_1_1 dem_attr_1 in unitype._Coercions (_SystemArray.update_5 (select _x_2_0::_Tuple2 1) off_attr_0 (select _x_2_2::_Tuple2 1)) (_SystemArray.update_5 (select _x_4_0::_Tuple2 1) dem_attr_1 (select (unitype.insert_80 off_attr_0 (select _x_4_0::_Tuple2 0))::_Tuple2 1))) (False -> unitype._Coercions (_SystemArray.update_5 (select _x_2_0::_Tuple2 1) off_attr_0 (select _x_2_2::_Tuple2 1)) coer_offered_1_1) ) 
unitype.new_inequality !off_attr_0::I !dem_attr_1::I !coercions_2 = case coercions_2 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> case (unitype.isNonUnique (_SystemArray.select_3 coer_offered_1_1 off_attr_0)) (True -> case (unitype.isUnique (_SystemArray.select_3 coer_demanded_1_0 dem_attr_1)) (True -> <{_Tuple2!3}> False coercions_2) (False -> <{_Tuple2!3}> True (unitype.makeNonUnique dem_attr_1 coercions_2)) ) (False -> case (unitype.isUnique (_SystemArray.select_3 coer_demanded_1_0 dem_attr_1)) (True -> <{_Tuple2!3}> True (unitype.makeUnique off_attr_0 coercions_2)) (False -> case (case (unitype.isNonUnique (_SystemArray.select_3 coer_offered_1_1 dem_attr_1)) (True -> True) (False -> unitype.isUnique (_SystemArray.select_3 coer_demanded_1_0 off_attr_0)) ) (True -> <{_Tuple2!3}> True coercions_2) (False -> <{_Tuple2!3}> True (unitype.newInequality off_attr_0 dem_attr_1 coercions_2)) ) ) ) 
unitype.equalize_attribute_vars !av_number1_0::I !av_number2_1::I !coercions_2 = let _x_1_0 = unitype.new_inequality av_number1_0 av_number2_1 coercions_2 in case (select _x_1_0::_Tuple2 0) (True -> unitype.new_inequality av_number2_1 av_number1_0 (select _x_1_0::_Tuple2 1)) (False -> <{_Tuple2!3}> False (select _x_1_0::_Tuple2 1)) 
unitype.coerceAttributes !_x_0 !dem_attr_1 !_x_2 coercions_3 = case _x_0 (syntax.TA_Unique -> case _x_2 (typeproperties._Sign pos_sign_2_0 neg_sign_2_1 -> case (StdBool.not neg_sign_2_1) (True -> <{_Tuple2!1}> True coercions_3) ) ) (_ -> case dem_attr_1 (syntax.TA_Unique -> case _x_2 (typeproperties._Sign pos_sign_2_0 neg_sign_2_1 -> case (StdBool.not pos_sign_2_0) (True -> <{_Tuple2!1}> True coercions_3) ) ) (syntax.TA_Multi -> case _x_2 (typeproperties._Sign pos_sign_2_0 neg_sign_2_1 -> case (StdBool.not neg_sign_2_1) (True -> <{_Tuple2!1}> True coercions_3) ) ) (_ -> case _x_0 (syntax.TA_Multi -> case _x_2 (typeproperties._Sign pos_sign_2_0 neg_sign_2_1 -> case (StdBool.not pos_sign_2_0) (True -> <{_Tuple2!1}> True coercions_3) ) ) (syntax.TA_TempVar av_number_1_0 -> case _x_2 (typeproperties._Sign pos_sign_2_0 neg_sign_2_1 -> case coercions_3 (unitype._Coercions coer_demanded_3_0 coer_offered_3_1 -> case (case (StdBool.not neg_sign_2_1) (True -> unitype.isUnique (_SystemArray.select_3 coer_demanded_3_0 av_number_1_0)) (False -> False) ) (True -> <{_Tuple2!1}> True coercions_3) ) ) ) (_ -> case dem_attr_1 (syntax.TA_TempVar av_number_1_0 -> case _x_2 (typeproperties._Sign pos_sign_2_0 neg_sign_2_1 -> case coercions_3 (unitype._Coercions coer_demanded_3_0 coer_offered_3_1 -> case (case (StdBool.not pos_sign_2_0) (True -> unitype.isUnique (_SystemArray.select_3 coer_demanded_3_0 av_number_1_0)) (False -> False) ) (True -> <{_Tuple2!1}> True coercions_3) ) (_ -> case _x_0 (syntax.TA_TempVar av_number1_3_0 -> case (<{StdInt.==_16}> av_number1_3_0 av_number_1_0) (True -> <{_Tuple2!1}> True coercions_3) (False -> case pos_sign_2_0 (True -> case neg_sign_2_1 (True -> unitype.equalize_attribute_vars av_number1_3_0 av_number_1_0 coercions_3) (False -> unitype.new_inequality av_number1_3_0 av_number_1_0 coercions_3) ) (False -> case neg_sign_2_1 (True -> unitype.new_inequality av_number_1_0 av_number1_3_0 coercions_3) (False -> <{_Tuple2!1}> True coercions_3) ) ) ) (syntax.TA_Unique -> case coercions_3 (unitype._Coercions coer_demanded_4_0 coer_offered_4_1 -> case (unitype.isNonUnique (_SystemArray.select_3 coer_offered_4_1 av_number_1_0)) (True -> <{_Tuple2!1}> False coercions_3) (False -> <{_Tuple2!1}> True (unitype.makeUnique av_number_1_0 coercions_3)) ) ) (syntax.TA_Multi -> case coercions_3 (unitype._Coercions coer_demanded_4_0 coer_offered_4_1 -> case (unitype.isUnique (_SystemArray.select_3 coer_demanded_4_0 av_number_1_0)) (True -> <{_Tuple2!1}> False coercions_3) (False -> <{_Tuple2!1}> True (unitype.makeNonUnique av_number_1_0 coercions_3)) ) ) )) ) (syntax.TA_Unique -> case _x_0 (syntax.TA_TempVar av_number_2_0 -> case _x_2 (typeproperties._Sign pos_sign_3_0 neg_sign_3_1 -> case coercions_3 (unitype._Coercions coer_demanded_4_0 coer_offered_4_1 -> case (unitype.isNonUnique (_SystemArray.select_3 coer_offered_4_1 av_number_2_0)) (True -> <{_Tuple2!1}> False coercions_3) (False -> <{_Tuple2!1}> True (unitype.makeUnique av_number_2_0 coercions_3)) ) ) ) (syntax.TA_Multi -> <{_Tuple2!1}> False coercions_3) ) (syntax.TA_Multi -> case _x_0 (syntax.TA_TempVar av_number_2_0 -> case _x_2 (typeproperties._Sign pos_sign_3_0 neg_sign_3_1 -> case coercions_3 (unitype._Coercions coer_demanded_4_0 coer_offered_4_1 -> case (unitype.isUnique (_SystemArray.select_3 coer_demanded_4_0 av_number_2_0)) (True -> <{_Tuple2!1}> False coercions_3) (False -> <{_Tuple2!1}> True (unitype.makeNonUnique av_number_2_0 coercions_3)) ) ) ) (syntax.TA_Unique -> <{_Tuple2!1}> False coercions_3) ) (_ -> <{_Tuple2!1}> True coercions_3))))
unitype.Success::B !_x_0 = case _x_0 (general.No -> True) (general.Yes _x_1_0 -> False) 
unitype.expandTempTypeVariable !tv_number_0::I !_x_1 = case _x_1 (_Tuple2 subst_1_0 es_1_1 -> let _x_2_0 = _SystemArray.uselect_6 subst_1_0 tv_number_0, type_2_1 = select _x_2_0::_Tuple2 0, subst_2_2 = select _x_2_0::_Tuple2 1 in <{unitype._c;460;7_183}> type_2_1 tv_number_0 subst_2_2 es_1_1) 
<{unitype._c;460;7_183}> !type_0 tv_number_1::I !subst_2 !es_3 = case type_0 (syntax.TE -> <{_Tuple3!7}> False (syntax.TempV tv_number_1) (_Tuple2 subst_2 es_3)) (syntax.TLiftedSubst type_1_0 -> <{_Tuple3!7}> True type_1_0 (_Tuple2 subst_2 es_3)) (_ -> <{_Tuple3!7}> True type_0 (_Tuple2 subst_2 es_3))
unitype.IsArrowKind::B !_x_0 = case _x_0 (syntax.KindArrow _x_1_0 -> True) (_ -> False)
unitype.adjustSignClass !_x_0 !arity_1::I = case _x_0 (typeproperties._SignClassification sc_pos_vect_1_0 sc_neg_vect_1_1 -> typeproperties._SignClassification (<{StdInt.>>}> sc_pos_vect_1_0 arity_1) (<{StdInt.>>}> sc_neg_vect_1_1 arity_1)) 
unitype.add_sign_and_prop_of_arrow_kind_in_expand !_x_0 cons_vars_1 sign_classes_2 prop_classes_3 = case _x_0 (syntax.TA _x_1_0 _x_1_1 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop_2_3 -> _Tuple2 (_predefined._Cons (unitype.adjustSignClass (select type_prop_2_3::syntax._TypeSymbProperties 0) type_arity_2_1) sign_classes_2) (_predefined._Cons (<{StdInt.>>}> (select type_prop_2_3::syntax._TypeSymbProperties 1) type_arity_2_1) prop_classes_3)) ) (syntax.TAS _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop_2_3 -> _Tuple2 (_predefined._Cons (unitype.adjustSignClass (select type_prop_2_3::syntax._TypeSymbProperties 0) type_arity_2_1) sign_classes_2) (_predefined._Cons (<{StdInt.>>}> (select type_prop_2_3::syntax._TypeSymbProperties 1) type_arity_2_1) prop_classes_3)) ) (syntax.TempV tmp_var_id_1_0 -> case (unitype.isPositive tmp_var_id_1_0 cons_vars_1) (True -> _Tuple2 (_predefined._Cons (typeproperties._SignClassification (StdInt.bitnot 0) 0) sign_classes_2) (_predefined._Cons (StdInt.bitnot 0) prop_classes_3)) (False -> _Tuple2 (_predefined._Cons (typeproperties._SignClassification (StdInt.bitnot 0) (StdInt.bitnot 0)) sign_classes_2) (_predefined._Cons 0 prop_classes_3)) ) (_ -> _Tuple2 (_predefined._Cons (typeproperties._SignClassification (StdInt.bitnot 0) (StdInt.bitnot 0)) sign_classes_2) (_predefined._Cons (StdInt.bitnot 0) prop_classes_3))
unitype.expand_attribute_107 !_x_0 !attr_var_heap_1 = case _x_0 (syntax.TA_Var _x_1_0 -> case _x_1_0 (syntax._AttributeVar av_ident_2_0 av_info_ptr_2_1 -> <{unitype._c;449;15_184}> (Heap.readPtr av_info_ptr_2_1 attr_var_heap_1)) ) (_ -> <{_Tuple3!5}> False _x_0 attr_var_heap_1)
<{unitype._c;449;15_184}> !_x_0 = case _x_0 (_Tuple2 _x_1_0 attr_var_heap_1_1 -> case _x_1_0 (syntax.AVI_Attr attr_2_0 -> <{_Tuple3!5}> True attr_2_0 attr_var_heap_1_1) (_ -> StdMisc.abort "expand_attribute (unitype.icl)")) 
unitype.equal_type_prop::B !_x_0 !_x_1 = case _x_0 (syntax._TypeSymbProperties sign0_1_0 prop0_1_1 coerc0_1_2 -> case _x_1 (syntax._TypeSymbProperties sign1_2_0 prop1_2_1 coerc1_2_2 -> case (<{StdInt.==_16}> prop0_1_1 prop1_2_1) (True -> case (<{StdBool.==_3}> coerc0_1_2 coerc1_2_2) (True -> case (<{StdInt.==_16}> (select sign0_1_0::typeproperties._SignClassification 0) (select sign1_2_0::typeproperties._SignClassification 0)) (True -> <{StdInt.==_16}> (select sign0_1_0::typeproperties._SignClassification 1) (select sign1_2_0::typeproperties._SignClassification 1)) (False -> False) ) (False -> False) ) (False -> False) ) ) 
unitype.expandType_121 !_vexpandType_0 !modules_1 !cons_vars_2 !_x_3 !es_4 = case _x_3 (_predefined._Nil -> <{_Tuple3!7}> False _predefined._Nil es_4) (_predefined._Cons type0_1_0 types_1_1 -> let _x_2_0 = select _vexpandType_0::<{unitype.expandType;}> 0 modules_1 cons_vars_2 type0_1_0 es_4 in case (select _x_2_0::_Tuple3 0) (True -> let _x_4_0 = unitype.expandType_121 _vexpandType_0 modules_1 cons_vars_2 types_1_1 (select _x_2_0::_Tuple3 2) in <{_Tuple3!7}> True (_predefined._Cons (select _x_2_0::_Tuple3 1) (select _x_4_0::_Tuple3 1)) (select _x_4_0::_Tuple3 2)) (False -> let es_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = unitype.expandType_121 _vexpandType_0 modules_1 cons_vars_2 types_1_1 es_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (_predefined._Cons type0_1_0 (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> False _x_3 (select _x_4_1::_Tuple3 2)) ) ) 
unitype.expand_type_list !modules_0 !cons_vars_1 !_x_2 !_x_3 !es_4 = case _x_2 (_predefined._Nil -> <{_Tuple5!31}> False _predefined._Nil _predefined._Nil _predefined._Nil es_4) (_predefined._Cons t0_1_0 ts_1_1 -> case _x_3 (_predefined._Cons tk_2_0 tks_2_1 -> let _x_3_0 = unitype.expandType_21 modules_0 cons_vars_1 t0_1_0 es_4 in case (select _x_3_0::_Tuple3 0) (True -> case (unitype.IsArrowKind tk_2_0) (True -> let t_6_0 = select _x_3_0::_Tuple3 1, _x_6_1 = unitype.expand_type_list modules_0 cons_vars_1 ts_1_1 tks_2_1 (select _x_3_0::_Tuple3 2), _x_6_2 = unitype.add_sign_and_prop_of_arrow_kind_in_expand (select t_6_0::syntax._AType 1) cons_vars_1 (select _x_6_1::_Tuple5 2) (select _x_6_1::_Tuple5 3) in <{_Tuple5!31}> True (_predefined._Cons t_6_0 (select _x_6_1::_Tuple5 1)) (select _x_6_2::_Tuple2 0) (select _x_6_2::_Tuple2 1) (select _x_6_1::_Tuple5 4)) (False -> let _x_6_0 = unitype.expand_type_list modules_0 cons_vars_1 ts_1_1 tks_2_1 (select _x_3_0::_Tuple3 2) in <{_Tuple5!31}> True (_predefined._Cons (select _x_3_0::_Tuple3 1) (select _x_6_0::_Tuple5 1)) (select _x_6_0::_Tuple5 2) (select _x_6_0::_Tuple5 3) (select _x_6_0::_Tuple5 4)) ) (False -> let es_5_0 = select _x_3_0::_Tuple3 2, _x_5_1 = unitype.expand_type_list modules_0 cons_vars_1 ts_1_1 tks_2_1 es_5_0 in case (select _x_5_1::_Tuple5 0) (True -> case (unitype.IsArrowKind tk_2_0) (True -> let _x_8_0 = unitype.add_sign_and_prop_of_arrow_kind_in_expand (select (select _x_3_0::_Tuple3 1)::syntax._AType 1) cons_vars_1 (select _x_5_1::_Tuple5 2) (select _x_5_1::_Tuple5 3) in <{_Tuple5!31}> True (_predefined._Cons t0_1_0 (select _x_5_1::_Tuple5 1)) (select _x_8_0::_Tuple2 0) (select _x_8_0::_Tuple2 1) (select _x_5_1::_Tuple5 4)) (False -> <{_Tuple5!31}> True (_predefined._Cons t0_1_0 (select _x_5_1::_Tuple5 1)) (select _x_5_1::_Tuple5 2) (select _x_5_1::_Tuple5 3) (select _x_5_1::_Tuple5 4)) ) (False -> case (unitype.IsArrowKind tk_2_0) (True -> let _x_8_0 = unitype.add_sign_and_prop_of_arrow_kind_in_expand (select (select _x_3_0::_Tuple3 1)::syntax._AType 1) cons_vars_1 (select _x_5_1::_Tuple5 2) (select _x_5_1::_Tuple5 3) in <{_Tuple5!31}> False _x_2 (select _x_8_0::_Tuple2 0) (select _x_8_0::_Tuple2 1) (select _x_5_1::_Tuple5 4)) (False -> <{_Tuple5!31}> False _x_2 (select _x_5_1::_Tuple5 2) (select _x_5_1::_Tuple5 3) (select _x_5_1::_Tuple5 4)) ) ) ) ) 
unitype.expandType_21 !modules_0 !cons_vars_1 !attr_type_2 !_x_3 = case attr_type_2 (syntax._AType at_attribute_1_0 at_type_1_1 -> case _x_3 (_Tuple2 subst_2_0 es_2_1 -> case es_2_1 (unitype._ExpansionState es_type_heaps_3_0 es_td_infos_3_1 -> let _x_4_0 = unitype.expand_attribute_107 at_attribute_1_0 (select es_type_heaps_3_0::syntax._TypeHeaps 1) in case (select _x_4_0::_Tuple3 0) (True -> let _x_6_0 = unitype.expandType_120 modules_0 cons_vars_1 at_type_1_1 (_Tuple2 subst_2_0 (update es_2_1::unitype._ExpansionState [0:update es_type_heaps_3_0::syntax._TypeHeaps [1:select _x_4_0::_Tuple3 2]])) in <{_Tuple3!7}> True (update attr_type_2::syntax._AType [0:select _x_4_0::_Tuple3 1,1:select _x_6_0::_Tuple3 1]) (select _x_6_0::_Tuple3 2)) (False -> let th_attrs_6_0 = select _x_4_0::_Tuple3 2, _x_6_1 = unitype.expandType_120 modules_0 cons_vars_1 at_type_1_1 (_Tuple2 subst_2_0 (update es_2_1::unitype._ExpansionState [0:update es_type_heaps_3_0::syntax._TypeHeaps [1:th_attrs_6_0]])) in case (select _x_6_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (update attr_type_2::syntax._AType [1:select _x_6_1::_Tuple3 1]) (select _x_6_1::_Tuple3 2)) (False -> <{_Tuple3!7}> False attr_type_2 (select _x_6_1::_Tuple3 2)) ) ) ) ) 
unitype.expandType_155 !modules_0 !cons_vars_1 !_x_2 !es_3 = case _x_2 (_predefined._Nil -> <{_Tuple3!7}> False _predefined._Nil es_3) (_predefined._Cons type0_1_0 types_1_1 -> let _x_2_0 = unitype.expandType_21 modules_0 cons_vars_1 type0_1_0 es_3 in case (select _x_2_0::_Tuple3 0) (True -> let _x_4_0 = unitype.expandType_155 modules_0 cons_vars_1 types_1_1 (select _x_2_0::_Tuple3 2) in <{_Tuple3!7}> True (_predefined._Cons (select _x_2_0::_Tuple3 1) (select _x_4_0::_Tuple3 1)) (select _x_4_0::_Tuple3 2)) (False -> let es_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = unitype.expandType_155 modules_0 cons_vars_1 types_1_1 es_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (_predefined._Cons type0_1_0 (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> False _x_2 (select _x_4_1::_Tuple3 2)) ) ) 
unitype.expandType_120 !modules_0 !cons_vars_1 !_x_2 !est_3 = case _x_2 (syntax.TempV tv_number_1_0 -> unitype.expandTempTypeVariable tv_number_1_0 est_3) (syntax.TV _x_1_0 -> case _x_1_0 (syntax._TypeVar tv_ident_2_0 tv_info_ptr_2_1 -> case est_3 (_Tuple2 subst_3_0 es_3_1 -> case es_3_1 (unitype._ExpansionState es_type_heaps_4_0 es_td_infos_4_1 -> let _x_5_0 = Heap.readPtr tv_info_ptr_2_1 (select es_type_heaps_4_0::syntax._TypeHeaps 0) in <{_Tuple3!7}> True (select (select _x_5_0::_Tuple2 0)::_Tuple1 0) (_Tuple2 subst_3_0 (update es_3_1::unitype._ExpansionState [0:update es_type_heaps_4_0::syntax._TypeHeaps [0:select _x_5_0::_Tuple2 1]]))) ) ) ) (<{syntax.-->}> arg_type0_1_0 res_type0_1_1 -> let _x_2_0 = unitype.expandType_21 modules_0 cons_vars_1 arg_type0_1_0 est_3 in case (select _x_2_0::_Tuple3 0) (True -> let es_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = unitype.expandType_21 modules_0 cons_vars_1 res_type0_1_1 es_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (<{syntax.-->}> (select _x_2_0::_Tuple3 1) (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> True (<{syntax.-->}> (select _x_2_0::_Tuple3 1) res_type0_1_1) (select _x_4_1::_Tuple3 2)) ) (False -> let es_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = unitype.expandType_21 modules_0 cons_vars_1 res_type0_1_1 es_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (<{syntax.-->}> arg_type0_1_0 (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> False _x_2 (select _x_4_1::_Tuple3 2)) ) ) (syntax.TA cons_id_1_0 cons_args_1_1 -> case cons_id_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop0_2_3 -> case type_index_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> case est_3 (_Tuple2 subst_4_0 es_4_1 -> let _x_5_0 = unitype.select_150 (_SystemArray.select_43 (select es_4_1::unitype._ExpansionState 1) glob_module_3_1) glob_object_3_0, _x_5_1 = select _x_5_0::_Tuple2 0, tdi_kinds_5_2 = select _x_5_1::syntax._TypeDefInfo 0, es_5_3 = select _x_5_0::_Tuple2 1, _x_5_4 = unitype.expand_type_list modules_0 cons_vars_1 cons_args_1_1 tdi_kinds_5_2 (_Tuple2 subst_4_0 es_5_3) in case (select _x_5_4::_Tuple5 0) (True -> let hio_signs_7_0 = select _x_5_4::_Tuple5 2, hio_props_7_1 = select _x_5_4::_Tuple5 3, _x_7_2 = select _x_5_4::_Tuple5 4, es_7_3 = select _x_7_2::_Tuple2 1, es_type_heaps_7_4 = select es_7_3::unitype._ExpansionState 0, es_td_infos_7_5 = select es_7_3::unitype._ExpansionState 1, _x_7_6 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 hio_signs_7_0 hio_props_7_1 modules_0 (select es_type_heaps_7_4::syntax._TypeHeaps 0) es_td_infos_7_5, type_prop_7_7 = select _x_7_6::_Tuple3 0 in case (unitype.equal_type_prop type_prop_7_7 type_prop0_2_3) (True -> <{_Tuple3!7}> True (syntax.TA cons_id_1_0 (select _x_5_4::_Tuple5 1)) (_Tuple2 (select _x_7_2::_Tuple2 0) (update es_7_3::unitype._ExpansionState [0:update es_type_heaps_7_4::syntax._TypeHeaps [0:select _x_7_6::_Tuple3 1],1:select _x_7_6::_Tuple3 2]))) (False -> <{_Tuple3!7}> True (syntax.TA (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_7_7]) (select _x_5_4::_Tuple5 1)) (_Tuple2 (select _x_7_2::_Tuple2 0) (update es_7_3::unitype._ExpansionState [0:update es_type_heaps_7_4::syntax._TypeHeaps [0:select _x_7_6::_Tuple3 1],1:select _x_7_6::_Tuple3 2]))) ) (False -> let hio_signs_7_0 = select _x_5_4::_Tuple5 2, hio_props_7_1 = select _x_5_4::_Tuple5 3, _x_7_2 = select _x_5_4::_Tuple5 4, es_7_3 = select _x_7_2::_Tuple2 1, es_type_heaps_7_4 = select es_7_3::unitype._ExpansionState 0, es_td_infos_7_5 = select es_7_3::unitype._ExpansionState 1, _x_7_6 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 hio_signs_7_0 hio_props_7_1 modules_0 (select es_type_heaps_7_4::syntax._TypeHeaps 0) es_td_infos_7_5, type_prop_7_7 = select _x_7_6::_Tuple3 0 in case (unitype.equal_type_prop type_prop_7_7 type_prop0_2_3) (True -> <{_Tuple3!7}> False _x_2 (_Tuple2 (select _x_7_2::_Tuple2 0) (update es_7_3::unitype._ExpansionState [0:update es_type_heaps_7_4::syntax._TypeHeaps [0:select _x_7_6::_Tuple3 1],1:select _x_7_6::_Tuple3 2]))) (False -> <{_Tuple3!7}> True (syntax.TA (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_7_7]) (select _x_5_4::_Tuple5 1)) (_Tuple2 (select _x_7_2::_Tuple2 0) (update es_7_3::unitype._ExpansionState [0:update es_type_heaps_7_4::syntax._TypeHeaps [0:select _x_7_6::_Tuple3 1],1:select _x_7_6::_Tuple3 2]))) ) ) ) ) ) (syntax.TAS cons_id_1_0 cons_args_1_1 strictness_1_2 -> case cons_id_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop0_2_3 -> case type_index_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> case est_3 (_Tuple2 subst_4_0 es_4_1 -> let _x_5_0 = unitype.select_150 (_SystemArray.select_43 (select es_4_1::unitype._ExpansionState 1) glob_module_3_1) glob_object_3_0, _x_5_1 = select _x_5_0::_Tuple2 0, tdi_kinds_5_2 = select _x_5_1::syntax._TypeDefInfo 0, es_5_3 = select _x_5_0::_Tuple2 1, _x_5_4 = unitype.expand_type_list modules_0 cons_vars_1 cons_args_1_1 tdi_kinds_5_2 (_Tuple2 subst_4_0 es_5_3) in case (select _x_5_4::_Tuple5 0) (True -> let hio_signs_7_0 = select _x_5_4::_Tuple5 2, hio_props_7_1 = select _x_5_4::_Tuple5 3, _x_7_2 = select _x_5_4::_Tuple5 4, es_7_3 = select _x_7_2::_Tuple2 1, es_type_heaps_7_4 = select es_7_3::unitype._ExpansionState 0, es_td_infos_7_5 = select es_7_3::unitype._ExpansionState 1, _x_7_6 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 hio_signs_7_0 hio_props_7_1 modules_0 (select es_type_heaps_7_4::syntax._TypeHeaps 0) es_td_infos_7_5, type_prop_7_7 = select _x_7_6::_Tuple3 0 in case (unitype.equal_type_prop type_prop_7_7 type_prop0_2_3) (True -> <{_Tuple3!7}> True (syntax.TAS cons_id_1_0 (select _x_5_4::_Tuple5 1) strictness_1_2) (_Tuple2 (select _x_7_2::_Tuple2 0) (update es_7_3::unitype._ExpansionState [0:update es_type_heaps_7_4::syntax._TypeHeaps [0:select _x_7_6::_Tuple3 1],1:select _x_7_6::_Tuple3 2]))) (False -> <{_Tuple3!7}> True (syntax.TAS (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_7_7]) (select _x_5_4::_Tuple5 1) strictness_1_2) (_Tuple2 (select _x_7_2::_Tuple2 0) (update es_7_3::unitype._ExpansionState [0:update es_type_heaps_7_4::syntax._TypeHeaps [0:select _x_7_6::_Tuple3 1],1:select _x_7_6::_Tuple3 2]))) ) (False -> let hio_signs_7_0 = select _x_5_4::_Tuple5 2, hio_props_7_1 = select _x_5_4::_Tuple5 3, _x_7_2 = select _x_5_4::_Tuple5 4, es_7_3 = select _x_7_2::_Tuple2 1, es_type_heaps_7_4 = select es_7_3::unitype._ExpansionState 0, es_td_infos_7_5 = select es_7_3::unitype._ExpansionState 1, _x_7_6 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 hio_signs_7_0 hio_props_7_1 modules_0 (select es_type_heaps_7_4::syntax._TypeHeaps 0) es_td_infos_7_5, type_prop_7_7 = select _x_7_6::_Tuple3 0 in case (unitype.equal_type_prop type_prop_7_7 type_prop0_2_3) (True -> <{_Tuple3!7}> False _x_2 (_Tuple2 (select _x_7_2::_Tuple2 0) (update es_7_3::unitype._ExpansionState [0:update es_type_heaps_7_4::syntax._TypeHeaps [0:select _x_7_6::_Tuple3 1],1:select _x_7_6::_Tuple3 2]))) (False -> <{_Tuple3!7}> True (syntax.TAS (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_7_7]) (select _x_5_4::_Tuple5 1) strictness_1_2) (_Tuple2 (select _x_7_2::_Tuple2 0) (update es_7_3::unitype._ExpansionState [0:update es_type_heaps_7_4::syntax._TypeHeaps [0:select _x_7_6::_Tuple3 1],1:select _x_7_6::_Tuple3 2]))) ) ) ) ) ) (syntax.TArrow1 arg_type_1_0 -> let _x_2_0 = unitype.expandType_21 modules_0 cons_vars_1 arg_type_1_0 est_3 in case (select _x_2_0::_Tuple3 0) (True -> <{_Tuple3!7}> True (syntax.TArrow1 (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) (False -> <{_Tuple3!7}> False _x_2 (select _x_2_0::_Tuple3 2)) ) (<{syntax.:@:}> _x_1_0 types_1_1 -> case _x_1_0 (syntax.TempCV temp_var_2_0 -> let _x_3_0 = unitype.expandTempTypeVariable temp_var_2_0 est_3, es_3_1 = select _x_3_0::_Tuple3 2, _x_3_2 = unitype.expandType_155 modules_0 cons_vars_1 types_1_1 es_3_1 in case (case (select _x_3_0::_Tuple3 0) (True -> True) (False -> select _x_3_2::_Tuple3 0) ) (True -> let es_5_0 = select _x_3_2::_Tuple3 2, types_5_1 = select _x_3_2::_Tuple3 1 in <{unitype._c;534;15_187}> (select _x_3_0::_Tuple3 1) types_5_1 es_5_0 _x_2) (False -> <{_Tuple3!7}> False _x_2 (select _x_3_2::_Tuple3 2)) ) ) (_ -> <{_Tuple3!7}> False _x_2 est_3)
<{unitype._c;534;15_187}> !_x_0 types_1 !es_2 _x_3 = case _x_0 (syntax.TA type_cons_1_0 cons_args_1_1 -> case type_cons_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop_2_3 -> <{_Tuple3!7}> True (syntax.TA (update type_cons_1_0::syntax._TypeSymbIdent [1:<{StdInt.+_6}> type_arity_2_1 (StdList.length_47 types_1)]) (<{StdList.++}> cons_args_1_1 types_1)) es_2) ) (syntax.TAS type_cons_1_0 cons_args_1_1 strictness_1_2 -> case type_cons_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop_2_3 -> <{_Tuple3!7}> True (syntax.TAS (update type_cons_1_0::syntax._TypeSymbIdent [1:<{StdInt.+_6}> type_arity_2_1 (StdList.length_47 types_1)]) (<{StdList.++}> cons_args_1_1 types_1) strictness_1_2) es_2) ) (syntax.TempV tv_number_1_0 -> <{_Tuple3!7}> True (<{syntax.:@:}> (syntax.TempCV tv_number_1_0) types_1) es_2) (syntax.TempQV tv_number_1_0 -> <{_Tuple3!7}> True (<{syntax.:@:}> (syntax.TempQCV tv_number_1_0) types_1) es_2) (syntax.TempQDV tv_number_1_0 -> <{_Tuple3!7}> True (<{syntax.:@:}> (syntax.TempQCDV tv_number_1_0) types_1) es_2) (<{syntax.:@:}> cons_var_1_0 cv_types_1_1 -> <{_Tuple3!7}> True (<{syntax.:@:}> cons_var_1_0 (<{StdList.++}> cv_types_1_1 types_1)) es_2) (syntax.TArrow -> <{unitype._c;549;27_185}> types_1 es_2 _x_3) (syntax.TArrow1 t1_1_0 -> <{unitype._c;553;33_186}> types_1 t1_1_0 es_2 _x_3) 
<{unitype._c;553;33_186}> !types_0 t1_1 !es_2 _x_3 = case types_0 (_predefined._Cons t2_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> <{_Tuple3!7}> True (<{syntax.-->}> t1_1 t2_1_0) es_2) ) (_ -> <{_Tuple3!7}> False _x_3 es_2)
<{unitype._c;549;27_185}> !types_0 !es_1 _x_2 = case types_0 (_predefined._Cons t1_1_0 _x_1_1 -> case _x_1_1 (_predefined._Cons t2_2_0 _x_2_1 -> case _x_2_1 (_predefined._Nil -> <{_Tuple3!7}> True (<{syntax.-->}> t1_1_0 t2_2_0) es_1) ) (_predefined._Nil -> <{_Tuple3!7}> True (syntax.TArrow1 t1_1_0) es_1) ) (_ -> <{_Tuple3!7}> False _x_2 es_1)
unitype.tryToExpandTypeSyn !defs_0 !cons_vars_1 !type_2 !cons_id_3 !type_args_4 !attribute_5 !type_heaps_6 !td_infos_7 = case cons_id_3 (syntax._TypeSymbIdent type_ident_1_0 type_arity_1_1 type_index_1_2 type_prop_1_3 -> case type_index_1_2 (syntax._Global glob_object_2_0 glob_module_2_1 -> let _x_3_0 = unitype.select_142 (select (unitype.select_134 defs_0 glob_module_2_1)::syntax._CommonDefs 0) glob_object_2_0, td_attribute_3_1 = select _x_3_0::syntax._TypeDef 6, td_args_3_2 = select _x_3_0::syntax._TypeDef 3 in <{unitype._c;867;7_188}> (select _x_3_0::syntax._TypeDef 5) defs_0 cons_vars_1 td_attribute_3_1 attribute_5 td_args_3_2 type_args_4 type_heaps_6 td_infos_7 type_2) ) 
<{unitype._c;867;7_188}> !_x_0 defs_1 cons_vars_2 td_attribute_3 attribute_4 td_args_5 type_args_6 !type_heaps_7 !td_infos_8 type_9 = case _x_0 (syntax.SynType _x_1_0 -> case _x_1_0 (syntax._AType at_attribute_2_0 at_type_2_1 -> let _x_3_0 = unitype.expandType_120 defs_1 cons_vars_2 at_type_2_1 (_Tuple2 (_SystemArray._createArray_0 0) (unitype._ExpansionState (typesupport.bindTypeVarsAndAttributes td_attribute_3 attribute_4 td_args_5 type_args_6 type_heaps_7) td_infos_8)), _x_3_1 = select (select _x_3_0::_Tuple3 2)::_Tuple2 1 in <{_Tuple4!15}> True (select _x_3_0::_Tuple3 1) (typesupport.clearBindingsOfTypeVarsAndAttributes attribute_4 td_args_5 (select _x_3_1::unitype._ExpansionState 0)) (select _x_3_1::unitype._ExpansionState 1)) ) (_ -> <{_Tuple4!15}> False type_9 type_heaps_7 td_infos_8)
unitype.determine_sign_of_arg_types_87 sign_0 !_x_1 cons_vars_2 = case _x_1 (syntax.TempCV tmp_var_id_1_0 -> case (unitype.isPositive tmp_var_id_1_0 cons_vars_2) (True -> sign_0) (False -> typeproperties._Sign True True) ) (_ -> typeproperties._Sign True True)
unitype.add_inequalities_for_TA_86 prop_class_0::I attr_1 !_x_2 coercions_3 = case _x_2 (_predefined._Nil -> _Tuple2 True coercions_3) (_predefined._Cons _x_1_0 args_1_1 -> case _x_1_0 (syntax._AType at_attribute_2_0 at_type_2_1 -> case (<{StdInt.==_16}> (StdInt.bitand prop_class_0 1) 0) (True -> unitype.add_inequalities_for_TA_86 (<{StdInt.>>}> prop_class_0 1) attr_1 args_1_1 coercions_3) (False -> let _x_4_0 = unitype.coerceAttributes attr_1 at_attribute_2_0 (typeproperties._Sign True False) coercions_3 in case (select _x_4_0::_Tuple2 0) (True -> unitype.add_inequalities_for_TA_86 (<{StdInt.>>}> prop_class_0 1) attr_1 args_1_1 (select _x_4_0::_Tuple2 1)) (False -> _Tuple2 False (select _x_4_0::_Tuple2 1)) ) ) ) 
unitype.add_inequalities_83 attr_0 !_x_1 coercions_2 = case _x_1 (_predefined._Nil -> _Tuple2 True coercions_2) (_predefined._Cons _x_1_0 args_1_1 -> case _x_1_0 (syntax._AType at_attribute_2_0 at_type_2_1 -> let _x_3_0 = unitype.coerceAttributes attr_0 at_attribute_2_0 (typeproperties._Sign True False) coercions_2 in case (select _x_3_0::_Tuple2 0) (True -> unitype.add_inequalities_83 attr_0 args_1_1 (select _x_3_0::_Tuple2 1)) (False -> _Tuple2 False (select _x_3_0::_Tuple2 1)) ) ) 
unitype.add_propagation_inequalities_85 cons_vars_0 attr_1 !_x_2 coercions_3 = case _x_2 (syntax.TA _x_1_0 cons_args_1_1 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 _x_2_3 -> case _x_2_3 (syntax._TypeSymbProperties tsp_sign_3_0 tsp_propagation_3_1 tsp_coercible_3_2 -> unitype.add_inequalities_for_TA_86 tsp_propagation_3_1 attr_1 cons_args_1_1 coercions_3) ) ) (syntax.TAS _x_1_0 cons_args_1_1 _x_1_2 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 _x_2_3 -> case _x_2_3 (syntax._TypeSymbProperties tsp_sign_3_0 tsp_propagation_3_1 tsp_coercible_3_2 -> unitype.add_inequalities_for_TA_86 tsp_propagation_3_1 attr_1 cons_args_1_1 coercions_3) ) ) (<{syntax.:@:}> _x_1_0 types_1_1 -> case _x_1_0 (syntax.TempCV tmp_var_id_2_0 -> case (unitype.isPositive tmp_var_id_2_0 cons_vars_0) (True -> unitype.add_inequalities_83 attr_1 types_1_1 coercions_3) (False -> _Tuple2 True coercions_3) ) ) (_ -> _Tuple2 True coercions_3)
unitype.coercions_of_type_list_88 sign_0 defs_1 cons_vars_2 tpos_3 arg_number_4::I !_x_5 !_x_6 !cs_7 = case _x_5 (_predefined._Cons t1_1_0 ts1_1_1 -> case _x_6 (_predefined._Cons t2_2_0 ts2_2_1 -> let _x_3_0 = unitype.coerce sign_0 defs_1 cons_vars_2 (_predefined._Cons arg_number_4 tpos_3) t1_1_0 t2_2_0 cs_7, succ_3_1 = select _x_3_0::_Tuple2 0 in case (unitype.Success succ_3_1) (True -> unitype.coercions_of_type_list_88 sign_0 defs_1 cons_vars_2 tpos_3 (<{StdInt.+_6}> arg_number_4 StdInt.one_11) ts1_1_1 ts2_2_1 (select _x_3_0::_Tuple2 1)) (False -> <{_Tuple2!3}> succ_3_1 (select _x_3_0::_Tuple2 1)) ) ) (_predefined._Nil -> case _x_6 (_predefined._Nil -> <{_Tuple2!3}> general.No cs_7) ) 
unitype.coercions_of_arg_types sign_0 defs_1 cons_vars_2 tpos_3 !_x_4 !_x_5 sign_class_6 arg_number_7::I !cs_8 = case _x_4 (_predefined._Cons t1_1_0 ts1_1_1 -> case _x_5 (_predefined._Cons t2_2_0 ts2_2_1 -> let arg_sign_3_0 = <{typeproperties.*_7}> sign_0 (typeproperties.signClassToSign sign_class_6 arg_number_7), _x_3_1 = unitype.coerce arg_sign_3_0 defs_1 cons_vars_2 (_predefined._Cons arg_number_7 tpos_3) t1_1_0 t2_2_0 cs_8, succ_3_2 = select _x_3_1::_Tuple2 0 in case (unitype.Success succ_3_2) (True -> unitype.coercions_of_arg_types sign_0 defs_1 cons_vars_2 tpos_3 ts1_1_1 ts2_2_1 sign_class_6 (<{StdInt.+_6}> arg_number_7 StdInt.one_11) (select _x_3_1::_Tuple2 1)) (False -> <{_Tuple2!3}> succ_3_2 (select _x_3_1::_Tuple2 1)) ) ) (_predefined._Nil -> case _x_5 (_predefined._Nil -> <{_Tuple2!3}> general.No cs_8) ) 
unitype.coerceTypes !sign_0 !defs_1 !cons_vars_2 !tpos_3 !dem_type_4 !off_type_5 !cs_6 = case dem_type_4 (syntax._AType at_attribute_1_0 type1_1_1 -> case type1_1_1 (syntax.TA dem_cons_2_0 dem_args_2_1 -> case off_type_5 (syntax._AType at_attribute_3_0 type2_3_1 -> case type2_3_1 (syntax.TA off_cons_4_0 off_args_4_1 -> case cs_6 (unitype._CoercionState crc_type_heaps_5_0 crc_coercions_5_1 crc_td_infos_5_2 -> case (<{compare_types.==_15}> dem_cons_2_0 off_cons_4_0) (True -> unitype.coercions_of_arg_types sign_0 defs_1 cons_vars_2 tpos_3 dem_args_2_1 off_args_4_1 (select (select dem_cons_2_0::syntax._TypeSymbIdent 3)::syntax._TypeSymbProperties 0) 0 cs_6) (False -> let _x_7_0 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type1_1_1 dem_cons_2_0 dem_args_2_1 (select dem_type_4::syntax._AType 0) crc_type_heaps_5_0 crc_td_infos_5_2, _x_7_1 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type2_3_1 off_cons_4_0 off_args_4_1 (select off_type_5::syntax._AType 0) (select _x_7_0::_Tuple4 2) (select _x_7_0::_Tuple4 3) in unitype.coerceTypes sign_0 defs_1 cons_vars_2 tpos_3 (update dem_type_4::syntax._AType [1:select _x_7_0::_Tuple4 1]) (update off_type_5::syntax._AType [1:select _x_7_1::_Tuple4 1]) (update cs_6::unitype._CoercionState [0:select _x_7_1::_Tuple4 2,2:select _x_7_1::_Tuple4 3])) ) ) (syntax.TAS off_cons_4_0 off_args_4_1 _x_4_2 -> case cs_6 (unitype._CoercionState crc_type_heaps_5_0 crc_coercions_5_1 crc_td_infos_5_2 -> case (<{compare_types.==_15}> dem_cons_2_0 off_cons_4_0) (True -> unitype.coercions_of_arg_types sign_0 defs_1 cons_vars_2 tpos_3 dem_args_2_1 off_args_4_1 (select (select dem_cons_2_0::syntax._TypeSymbIdent 3)::syntax._TypeSymbProperties 0) 0 cs_6) (False -> let _x_7_0 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type1_1_1 dem_cons_2_0 dem_args_2_1 (select dem_type_4::syntax._AType 0) crc_type_heaps_5_0 crc_td_infos_5_2, _x_7_1 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type2_3_1 off_cons_4_0 off_args_4_1 (select off_type_5::syntax._AType 0) (select _x_7_0::_Tuple4 2) (select _x_7_0::_Tuple4 3) in unitype.coerceTypes sign_0 defs_1 cons_vars_2 tpos_3 (update dem_type_4::syntax._AType [1:select _x_7_0::_Tuple4 1]) (update off_type_5::syntax._AType [1:select _x_7_1::_Tuple4 1]) (update cs_6::unitype._CoercionState [0:select _x_7_1::_Tuple4 2,2:select _x_7_1::_Tuple4 3])) ) ) ) (_ -> case cs_6 (unitype._CoercionState crc_type_heaps_3_0 crc_coercions_3_1 crc_td_infos_3_2 -> let _x_4_0 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type1_1_1 dem_cons_2_0 dem_args_2_1 (select dem_type_4::syntax._AType 0) crc_type_heaps_3_0 crc_td_infos_3_2 in case (select _x_4_0::_Tuple4 0) (True -> unitype.coerceTypes sign_0 defs_1 cons_vars_2 tpos_3 (update dem_type_4::syntax._AType [1:select _x_4_0::_Tuple4 1]) off_type_5 (update cs_6::unitype._CoercionState [0:select _x_4_0::_Tuple4 2,2:select _x_4_0::_Tuple4 3])) (False -> <{_Tuple2!3}> general.No (update cs_6::unitype._CoercionState [0:select _x_4_0::_Tuple4 2,2:select _x_4_0::_Tuple4 3])) ) )) (syntax.TAS dem_cons_2_0 dem_args_2_1 _x_2_2 -> case off_type_5 (syntax._AType at_attribute_3_0 type2_3_1 -> case type2_3_1 (syntax.TA off_cons_4_0 off_args_4_1 -> case cs_6 (unitype._CoercionState crc_type_heaps_5_0 crc_coercions_5_1 crc_td_infos_5_2 -> case (<{compare_types.==_15}> dem_cons_2_0 off_cons_4_0) (True -> unitype.coercions_of_arg_types sign_0 defs_1 cons_vars_2 tpos_3 dem_args_2_1 off_args_4_1 (select (select dem_cons_2_0::syntax._TypeSymbIdent 3)::syntax._TypeSymbProperties 0) 0 cs_6) (False -> let _x_7_0 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type1_1_1 dem_cons_2_0 dem_args_2_1 (select dem_type_4::syntax._AType 0) crc_type_heaps_5_0 crc_td_infos_5_2, _x_7_1 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type2_3_1 off_cons_4_0 off_args_4_1 (select off_type_5::syntax._AType 0) (select _x_7_0::_Tuple4 2) (select _x_7_0::_Tuple4 3) in unitype.coerceTypes sign_0 defs_1 cons_vars_2 tpos_3 (update dem_type_4::syntax._AType [1:select _x_7_0::_Tuple4 1]) (update off_type_5::syntax._AType [1:select _x_7_1::_Tuple4 1]) (update cs_6::unitype._CoercionState [0:select _x_7_1::_Tuple4 2,2:select _x_7_1::_Tuple4 3])) ) ) (syntax.TAS off_cons_4_0 off_args_4_1 _x_4_2 -> case cs_6 (unitype._CoercionState crc_type_heaps_5_0 crc_coercions_5_1 crc_td_infos_5_2 -> case (<{compare_types.==_15}> dem_cons_2_0 off_cons_4_0) (True -> unitype.coercions_of_arg_types sign_0 defs_1 cons_vars_2 tpos_3 dem_args_2_1 off_args_4_1 (select (select dem_cons_2_0::syntax._TypeSymbIdent 3)::syntax._TypeSymbProperties 0) 0 cs_6) (False -> let _x_7_0 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type1_1_1 dem_cons_2_0 dem_args_2_1 (select dem_type_4::syntax._AType 0) crc_type_heaps_5_0 crc_td_infos_5_2, _x_7_1 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type2_3_1 off_cons_4_0 off_args_4_1 (select off_type_5::syntax._AType 0) (select _x_7_0::_Tuple4 2) (select _x_7_0::_Tuple4 3) in unitype.coerceTypes sign_0 defs_1 cons_vars_2 tpos_3 (update dem_type_4::syntax._AType [1:select _x_7_0::_Tuple4 1]) (update off_type_5::syntax._AType [1:select _x_7_1::_Tuple4 1]) (update cs_6::unitype._CoercionState [0:select _x_7_1::_Tuple4 2,2:select _x_7_1::_Tuple4 3])) ) ) ) (_ -> case cs_6 (unitype._CoercionState crc_type_heaps_3_0 crc_coercions_3_1 crc_td_infos_3_2 -> let _x_4_0 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type1_1_1 dem_cons_2_0 dem_args_2_1 (select dem_type_4::syntax._AType 0) crc_type_heaps_3_0 crc_td_infos_3_2 in case (select _x_4_0::_Tuple4 0) (True -> unitype.coerceTypes sign_0 defs_1 cons_vars_2 tpos_3 (update dem_type_4::syntax._AType [1:select _x_4_0::_Tuple4 1]) off_type_5 (update cs_6::unitype._CoercionState [0:select _x_4_0::_Tuple4 2,2:select _x_4_0::_Tuple4 3])) (False -> <{_Tuple2!3}> general.No (update cs_6::unitype._CoercionState [0:select _x_4_0::_Tuple4 2,2:select _x_4_0::_Tuple4 3])) ) )) ) (_ -> case off_type_5 (syntax._AType at_attribute_1_0 type_1_1 -> case type_1_1 (syntax.TAS off_cons_2_0 off_args_2_1 _x_2_2 -> case cs_6 (unitype._CoercionState crc_type_heaps_3_0 crc_coercions_3_1 crc_td_infos_3_2 -> let _x_4_0 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type_1_1 off_cons_2_0 off_args_2_1 (select off_type_5::syntax._AType 0) crc_type_heaps_3_0 crc_td_infos_3_2 in case (select _x_4_0::_Tuple4 0) (True -> unitype.coerceTypes sign_0 defs_1 cons_vars_2 tpos_3 dem_type_4 (update off_type_5::syntax._AType [1:select _x_4_0::_Tuple4 1]) (update cs_6::unitype._CoercionState [0:select _x_4_0::_Tuple4 2,2:select _x_4_0::_Tuple4 3])) (False -> <{_Tuple2!3}> general.No (update cs_6::unitype._CoercionState [0:select _x_4_0::_Tuple4 2,2:select _x_4_0::_Tuple4 3])) ) ) (syntax.TA off_cons_2_0 off_args_2_1 -> case cs_6 (unitype._CoercionState crc_type_heaps_3_0 crc_coercions_3_1 crc_td_infos_3_2 -> let _x_4_0 = unitype.tryToExpandTypeSyn defs_1 cons_vars_2 type_1_1 off_cons_2_0 off_args_2_1 (select off_type_5::syntax._AType 0) crc_type_heaps_3_0 crc_td_infos_3_2 in case (select _x_4_0::_Tuple4 0) (True -> unitype.coerceTypes sign_0 defs_1 cons_vars_2 tpos_3 dem_type_4 (update off_type_5::syntax._AType [1:select _x_4_0::_Tuple4 1]) (update cs_6::unitype._CoercionState [0:select _x_4_0::_Tuple4 2,2:select _x_4_0::_Tuple4 3])) (False -> <{_Tuple2!3}> general.No (update cs_6::unitype._CoercionState [0:select _x_4_0::_Tuple4 2,2:select _x_4_0::_Tuple4 3])) ) ) (<{syntax.-->}> arg_type2_2_0 res_type2_2_1 -> case dem_type_4 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (<{syntax.-->}> arg_type1_4_0 res_type1_4_1 -> let arg_sign_5_0 = <{typeproperties.*_7}> (typeproperties._Sign False True) sign_0, _x_5_1 = unitype.coerce arg_sign_5_0 defs_1 cons_vars_2 (_predefined._Cons 0 tpos_3) arg_type1_4_0 arg_type2_2_0 cs_6, succ_5_2 = select _x_5_1::_Tuple2 0 in case (unitype.Success succ_5_2) (True -> unitype.coerce sign_0 defs_1 cons_vars_2 (_predefined._Cons 1 tpos_3) res_type1_4_1 res_type2_2_1 (select _x_5_1::_Tuple2 1)) (False -> <{_Tuple2!3}> succ_5_2 (select _x_5_1::_Tuple2 1)) ) ) ) (syntax.TArrow -> case dem_type_4 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (syntax.TArrow -> <{_Tuple2!3}> general.No cs_6) ) ) (syntax.TArrow1 arg_type2_2_0 -> case dem_type_4 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (syntax.TArrow1 arg_type1_4_0 -> unitype.coerce (<{typeproperties.*_7}> (typeproperties._Sign False True) sign_0) defs_1 cons_vars_2 (_predefined._Cons 0 tpos_3) arg_type1_4_0 arg_type2_2_0 cs_6) ) ) (<{syntax.:@:}> _x_2_0 types2_2_1 -> case dem_type_4 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (<{syntax.:@:}> cons_var_4_0 types1_4_1 -> unitype.coercions_of_type_list_88 (unitype.determine_sign_of_arg_types_87 sign_0 cons_var_4_0 cons_vars_2) defs_1 cons_vars_2 tpos_3 0 types1_4_1 types2_2_1 cs_6) ) ) ) (_ -> <{_Tuple2!3}> general.No cs_6))
unitype.coerce !sign_0 !defs_1 !cons_vars_2 !tpos_3 !at1_4 !at2_5 !cs_6 = case at1_4 (syntax._AType attr1_1_0 type1_1_1 -> case at2_5 (syntax._AType attr2_2_0 at_type_2_1 -> case cs_6 (unitype._CoercionState crc_type_heaps_3_0 crc_coercions_3_1 crc_td_infos_3_2 -> let !attr_sign_4_0 = unitype.adjust_sign_84 sign_0 type1_1_1 cons_vars_2, !_x_4_1 = unitype.coerceAttributes attr1_1_0 attr2_2_0 attr_sign_4_0 crc_coercions_3_1 in case (select _x_4_1::_Tuple2 0) (True -> let crc_coercions_6_0 = select _x_4_1::_Tuple2 1, _x_6_1 = unitype.coerceTypes sign_0 defs_1 cons_vars_2 tpos_3 at1_4 at2_5 (update cs_6::unitype._CoercionState [1:crc_coercions_6_0]), succ_6_2 = select _x_6_1::_Tuple2 0 in case (unitype.Success succ_6_2) (True -> let cs_8_0 = select _x_6_1::_Tuple2 1, _x_8_1 = unitype.add_propagation_inequalities_85 cons_vars_2 attr1_1_0 type1_1_1 (select cs_8_0::unitype._CoercionState 1), crc_coercions_8_2 = select _x_8_1::_Tuple2 1, _x_8_3 = unitype.add_propagation_inequalities_85 cons_vars_2 attr2_2_0 (select at2_5::syntax._AType 1) crc_coercions_8_2 in <{_Tuple2!3}> (<{unitype._if;800;16_190}> (unitype._f189_189 (select _x_8_1::_Tuple2 0) _x_8_3) tpos_3) (update cs_8_0::unitype._CoercionState [1:select _x_8_3::_Tuple2 1])) (False -> <{_Tuple2!3}> succ_6_2 (select _x_6_1::_Tuple2 1)) ) (False -> <{_Tuple2!3}> (general.Yes tpos_3) (update cs_6::unitype._CoercionState [1:select _x_4_1::_Tuple2 1])) ) ) ) 
<{unitype._if;800;16_190}> !_x_0::B tpos_1 = case _x_0 (True -> general.No) (_ -> general.Yes tpos_1)
unitype._f189_189::B !_x_0::B _x_1 = case _x_0 (True -> select _x_1::_Tuple2 0) (_ -> False)
unitype.isExistential::B !_x_0 = case _x_0 (unitype.CT_Existential -> True) (_ -> False)
unitype.isNonUniqueAttribute::B !attr_number_0::I !_x_1 = case _x_1 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> unitype.isNonUnique (_SystemArray.select_3 coer_offered_1_1 attr_number_0)) 
unitype.isUniqueAttribute::B !attr_number_0::I !_x_1 = case _x_1 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> unitype.isUnique (_SystemArray.select_3 coer_demanded_1_0 attr_number_0)) 
unitype.set_bit !var_number_0::I !bitvects_1 = let bit_index_1_0 = <{StdInt.>>}> var_number_0 5, _x_1_1::I = _SystemArray.uselect_14 bitvects_1 bit_index_1_0 in _SystemArray.update_13 (select _x_1_1::_Tuple2 1) bit_index_1_0 (StdInt.bitor (select _x_1_1::_Tuple2 0) (<{StdInt.<<}> 1 (StdInt.bitand var_number_0 31)))
unitype.determineAttributeCoercions !off_type_0 !dem_type_1 !coercible_2::B !subst_3 !coercions_4 !defs_5 !cons_vars_6 !td_infos_7 !type_heaps_8 = let _x_1_0 = unitype.expandType_21 defs_5 cons_vars_6 off_type_0 (_Tuple2 subst_3 (unitype._ExpansionState type_heaps_8 td_infos_7)), exp_off_type_1_1 = select _x_1_0::_Tuple3 1, es_1_2 = select _x_1_0::_Tuple3 2, _x_1_3 = unitype.expandType_21 defs_5 cons_vars_6 dem_type_1 es_1_2, exp_dem_type_1_4 = select _x_1_3::_Tuple3 1, _x_1_5 = select _x_1_3::_Tuple3 2, _x_1_6 = select _x_1_5::_Tuple2 1, es_type_heaps_1_7 = select _x_1_6::unitype._ExpansionState 0, es_td_infos_1_8 = select _x_1_6::unitype._ExpansionState 1, _x_1_9 = unitype.coerce (<{unitype._if;42;73_191}> coercible_2) defs_5 cons_vars_6 _predefined._Nil exp_off_type_1_1 exp_dem_type_1_4 (unitype._CoercionState es_type_heaps_1_7 coercions_4 es_td_infos_1_8), _x_1_10 = select _x_1_9::_Tuple2 1, crc_type_heaps_1_11 = select _x_1_10::unitype._CoercionState 0, subst_1_12 = select _x_1_5::_Tuple2 0 in <{unitype._c;44;7_192}> (select _x_1_9::_Tuple2 0) subst_1_12 _x_1_10 crc_type_heaps_1_11 exp_off_type_1_1
<{unitype._c;44;7_192}> !_x_0 !subst_1 !_x_2 !crc_type_heaps_3 exp_off_type_4 = case _x_0 (general.No -> <{_Tuple5!31}> general.No subst_1 (select _x_2::unitype._CoercionState 1) (select _x_2::unitype._CoercionState 2) crc_type_heaps_3) (general.Yes pos_1_0 -> <{_Tuple5!31}> (general.Yes (_Tuple2 pos_1_0 exp_off_type_4)) subst_1 (select _x_2::unitype._CoercionState 1) (select _x_2::unitype._CoercionState 2) crc_type_heaps_3) 
<{unitype._if;42;73_191}> !coercible_0::B = case coercible_0 (True -> typeproperties._Sign True False) (_ -> typeproperties._Sign True True)
unitype.push_on_dep_stack_64 !attr_0::I !pi_1 = case pi_1 (unitype._PartitioningInfo pi_marks_1_0 pi_next_num_1_1 pi_groups_1_2 pi_deps_1_3 -> update pi_1::unitype._PartitioningInfo [0:_SystemArray.update_13 pi_marks_1_0 attr_0 pi_next_num_1_1,1:<{StdInt.+_6}> pi_next_num_1_1 StdInt.one_11,3:_predefined._Cons attr_0 pi_deps_1_3]) 
unitype.close_group_63 !attr_0::I !_x_1 !marks_2 !group_3 !max_attr_nr_4::I = case _x_1 (_predefined._Cons d_1_0 ds_1_1 -> case (<{StdInt.==_16}> d_1_0 attr_0) (True -> <{_Tuple3!7}> ds_1_1 (_SystemArray.update_13 marks_2 d_1_0 max_attr_nr_4) (_predefined._Cons d_1_0 group_3)) (False -> unitype.close_group_63 attr_0 ds_1_1 (_SystemArray.update_13 marks_2 d_1_0 max_attr_nr_4) (_predefined._Cons d_1_0 group_3) max_attr_nr_4) ) 
unitype.try_to_close_group_65 !attr_0::I !attr_nr_1::I !min_dep_2::I !max_attr_nr_3::I !pi_4 = case pi_4 (unitype._PartitioningInfo pi_marks_1_0 pi_next_num_1_1 pi_groups_1_2 pi_deps_1_3 -> case (StdBool.not (<{StdInt.<_17}> min_dep_2 attr_nr_1)) (True -> let _x_3_0 = unitype.close_group_63 attr_0 pi_deps_1_3 pi_marks_1_0 _predefined._Nil max_attr_nr_3 in <{_Tuple2!3}> max_attr_nr_3 (update pi_4::unitype._PartitioningInfo [0:select _x_3_0::_Tuple3 1,2:_predefined._Cons (select _x_3_0::_Tuple3 2) pi_groups_1_2,3:select _x_3_0::_Tuple3 0])) (False -> <{_Tuple2!3}> min_dep_2 pi_4) ) 
unitype.visit_attributes_68 !_x_0 !max_attr_nr_1::I !min_dep_2::I !coer_offered_3 !pi_4 = case _x_0 (unitype.CT_Node attr_1_0 left_1_1 right_1_2 -> case pi_4 (unitype._PartitioningInfo pi_marks_2_0 pi_next_num_2_1 pi_groups_2_2 pi_deps_2_3 -> let !mark_3_0::I = _SystemArray.select_11 pi_marks_2_0 attr_1_0 in case (<{StdInt.==_16}> mark_3_0 -1) (True -> let _x_5_0 = unitype.partitionate_attribute_71 attr_1_0 max_attr_nr_1 coer_offered_3 pi_4, mark_5_1::I = select _x_5_0::_Tuple2 0, _x_5_2 = unitype.visit_attributes_68 left_1_1 max_attr_nr_1 (<{unitype._c;48;16_193}> (<{StdInt.<_17}> min_dep_2 mark_5_1) min_dep_2 mark_5_1) coer_offered_3 (select _x_5_0::_Tuple2 1) in unitype.visit_attributes_68 right_1_2 max_attr_nr_1 (select _x_5_2::_Tuple2 0) coer_offered_3 (select _x_5_2::_Tuple2 1)) (False -> let _x_5_0 = unitype.visit_attributes_68 left_1_1 max_attr_nr_1 (<{unitype._c;48;16_194}> (<{StdInt.<_17}> min_dep_2 mark_3_0) min_dep_2 mark_3_0) coer_offered_3 pi_4 in unitype.visit_attributes_68 right_1_2 max_attr_nr_1 (select _x_5_0::_Tuple2 0) coer_offered_3 (select _x_5_0::_Tuple2 1)) ) ) (_ -> <{_Tuple2!3}> min_dep_2 pi_4)
unitype.partitionate_attribute_71 !attr_0::I !max_attr_nr_1::I !coer_offered_2 !pi_3 = case pi_3 (unitype._PartitioningInfo pi_marks_1_0 pi_next_num_1_1 pi_groups_1_2 pi_deps_1_3 -> let !_x_2_0 = _SystemArray.uselect_6 coer_offered_2 attr_0, _x_2_1 = unitype.visit_attributes_68 (select _x_2_0::_Tuple2 0) max_attr_nr_1 max_attr_nr_1 (select _x_2_0::_Tuple2 1) (unitype.push_on_dep_stack_64 attr_0 pi_3) in unitype.try_to_close_group_65 attr_0 pi_next_num_1_1 (select _x_2_1::_Tuple2 0) max_attr_nr_1 (select _x_2_1::_Tuple2 1)) 
<{unitype._c;48;16_194}>::I !_x_0::B min_dep_1::I mark_2::I = case _x_0 (True -> min_dep_1) (_ -> mark_2)
<{unitype._c;48;16_193}>::I !_x_0::B min_dep_1::I mark_2::I = case _x_0 (True -> min_dep_1) (_ -> mark_2)
unitype.partitionate_attributes_70 !from_index_0::I !max_attr_nr_1::I !coer_offered_2 !pi_3 = case pi_3 (unitype._PartitioningInfo pi_marks_1_0 pi_next_num_1_1 pi_groups_1_2 pi_deps_1_3 -> case (<{StdInt.==_16}> from_index_0 max_attr_nr_1) (True -> pi_3) (False -> case (<{StdInt.==_16}> (_SystemArray.select_11 pi_marks_1_0 from_index_0) -1) (True -> unitype.partitionate_attributes_70 (<{StdInt.+_6}> from_index_0 StdInt.one_11) max_attr_nr_1 coer_offered_2 (select (unitype.partitionate_attribute_71 from_index_0 max_attr_nr_1 coer_offered_2 pi_3)::_Tuple2 1)) (False -> unitype.partitionate_attributes_70 (<{StdInt.+_6}> from_index_0 StdInt.one_11) max_attr_nr_1 coer_offered_2 pi_3) ) ) 
unitype.reverse_and_length_69 !_x_0 !length_1::I !list_2 = case _x_0 (_predefined._Nil -> <{_Tuple2!3}> length_1 list_2) (_predefined._Cons x_1_0 xs_1_1 -> unitype.reverse_and_length_69 xs_1_1 (<{StdInt.+_6}> length_1 StdInt.one_11) (_predefined._Cons x_1_0 list_2)) 
unitype.build_partition_of_group_66 !_vArray_0 group_nr_1 !_x_2 partition_3 = case _x_2 (_predefined._Cons attr_1_0 attrs_1_1 -> unitype.build_partition_of_group_66 _vArray_0 group_nr_1 attrs_1_1 (select _vArray_0::<{_SystemArray.Array;}> 5 partition_3 attr_1_0 group_nr_1)) (_predefined._Nil -> partition_3) 
unitype.build_partition_72 !_vone_0 !<{_v+_1}> !_vArray_2 group_nr_3 !_x_4 partition_5 = case _x_4 (_predefined._Nil -> partition_5) (_predefined._Cons group_1_0 groups_1_1 -> unitype.build_partition_72 _vone_0 <{_v+_1}> _vArray_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 group_nr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) groups_1_1 (unitype.build_partition_of_group_66 _vArray_2 group_nr_3 group_1_0 partition_5)) 
<{unitype.cu;84;29_62}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{unitype.cu;84;29_62}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 unitype.CT_Empty) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
unitype.insert_67 !new_attr_0::I !_x_1 = case _x_1 (unitype.CT_Empty -> unitype._CoercionTreeRecord (unitype.CT_Node new_attr_0 unitype.CT_Empty unitype.CT_Empty)) (unitype.CT_Node this_attr_1_0 ct_less_1_1 ct_greater_1_2 -> case (<{StdInt.<_17}> new_attr_0 this_attr_1_0) (True -> unitype._CoercionTreeRecord (unitype.CT_Node this_attr_1_0 (select (unitype.insert_67 new_attr_0 ct_less_1_1)::unitype._CoercionTreeRecord 0) ct_greater_1_2)) (False -> case (<{StdInt.<_17}> this_attr_1_0 new_attr_0) (True -> unitype._CoercionTreeRecord (unitype.CT_Node this_attr_1_0 ct_less_1_1 (select (unitype.insert_67 new_attr_0 ct_greater_1_2)::unitype._CoercionTreeRecord 0))) (False -> unitype._CoercionTreeRecord (unitype.CT_Node this_attr_1_0 ct_less_1_1 ct_greater_1_2)) ) ) 
unitype.rebuild_tree_75 !group_index_0::I !partition_1 !_x_2 !tree_3 = case _x_2 (unitype.CT_Node attr_1_0 left_1_1 right_1_2 -> let !attr_nr_2_0::I = _SystemArray.select_11 partition_1 attr_1_0 in case (<{StdInt.==_16}> attr_nr_2_0 group_index_0) (True -> unitype.rebuild_tree_75 group_index_0 partition_1 right_1_2 (unitype.rebuild_tree_75 group_index_0 partition_1 left_1_1 tree_3)) (False -> select (unitype.insert_67 (_SystemArray.select_11 partition_1 attr_1_0) (unitype.rebuild_tree_75 group_index_0 partition_1 right_1_2 (unitype.rebuild_tree_75 group_index_0 partition_1 left_1_1 tree_3)))::unitype._CoercionTreeRecord 0) ) (_ -> tree_3)
unitype.combine_coercion_trees_74 !_vArray_0 !_vArray_1 group_index_2::I !_x_3 partition_4 merged_tree_5 coer_offered_6 coer_demanded_7 = case _x_3 (_predefined._Cons attr_1_0 attrs_1_1 -> case (unitype.isNonUnique (select _vArray_0::<{_SystemArray.Array;}> 3 coer_offered_6 attr_1_0)) (True -> _Tuple2 unitype.CT_NonUnique coer_demanded_7) (False -> let _x_3_0 = select _vArray_1::<{_SystemArray.Array;}> 2 coer_demanded_7 attr_1_0 unitype.CT_Empty, next_tree_3_1 = select _x_3_0::_Tuple2 0 in case (unitype.isUnique next_tree_3_1) (True -> _Tuple2 unitype.CT_Unique (select _x_3_0::_Tuple2 1)) (False -> unitype.combine_coercion_trees_74 _vArray_0 _vArray_1 group_index_2 attrs_1_1 partition_4 (unitype.rebuild_tree_75 group_index_2 partition_4 next_tree_3_1 merged_tree_5) coer_offered_6 (select _x_3_0::_Tuple2 1)) ) ) (_predefined._Nil -> _Tuple2 merged_tree_5 coer_demanded_7) 
unitype.adjust_coercions_73 !_vArray_0 !_vArray_1 !_vArray_2 group_index_3::I !_x_4 partition_5 coer_offered_6 coer_demanded_7 demanded_8 = case _x_4 (_predefined._Cons group_1_0 groups_1_1 -> let _x_2_0 = unitype.combine_coercion_trees_74 _vArray_0 _vArray_1 group_index_3 group_1_0 partition_5 unitype.CT_Empty coer_offered_6 coer_demanded_7 in unitype.adjust_coercions_73 _vArray_0 _vArray_1 _vArray_2 (<{StdInt.+_6}> group_index_3 StdInt.one_11) groups_1_1 partition_5 coer_offered_6 (select _x_2_0::_Tuple2 1) (select _vArray_2::<{_SystemArray.Array;}> 5 demanded_8 group_index_3 (select _x_2_0::_Tuple2 0))) (_predefined._Nil -> demanded_8) 
unitype.build_partition_156 !<{_v+_0}> !_vArray_1 group_nr_2::I !_x_3 partition_4 = case _x_3 (_predefined._Nil -> partition_4) (_predefined._Cons group_1_0 groups_1_1 -> unitype.build_partition_156 <{_v+_0}> _vArray_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 group_nr_2 StdInt.one_11) groups_1_1 (unitype.build_partition_of_group_66 _vArray_1 group_nr_2 group_1_0 partition_4)) 
<{unitype.cu;84;29_157}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{unitype.cu;84;29_157}> (_SystemArray.update_5 c_a_0 c_i_1 unitype.CT_Empty) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
unitype.combine_coercion_trees_159 !_vArray_0 group_index_1::I !_x_2 partition_3 merged_tree_4 coer_offered_5 coer_demanded_6 = case _x_2 (_predefined._Cons attr_1_0 attrs_1_1 -> case (unitype.isNonUnique (_SystemArray.select_3 coer_offered_5 attr_1_0)) (True -> _Tuple2 unitype.CT_NonUnique coer_demanded_6) (False -> let _x_3_0 = select _vArray_0::<{_SystemArray.Array;}> 2 coer_demanded_6 attr_1_0 unitype.CT_Empty, next_tree_3_1 = select _x_3_0::_Tuple2 0 in case (unitype.isUnique next_tree_3_1) (True -> _Tuple2 unitype.CT_Unique (select _x_3_0::_Tuple2 1)) (False -> unitype.combine_coercion_trees_159 _vArray_0 group_index_1 attrs_1_1 partition_3 (unitype.rebuild_tree_75 group_index_1 partition_3 next_tree_3_1 merged_tree_4) coer_offered_5 (select _x_3_0::_Tuple2 1)) ) ) (_predefined._Nil -> _Tuple2 merged_tree_4 coer_demanded_6) 
unitype.adjust_coercions_158 !_vArray_0 !_vArray_1 group_index_2::I !_x_3 partition_4 coer_offered_5 coer_demanded_6 demanded_7 = case _x_3 (_predefined._Cons group_1_0 groups_1_1 -> let _x_2_0 = unitype.combine_coercion_trees_159 _vArray_0 group_index_2 group_1_0 partition_4 unitype.CT_Empty coer_offered_5 coer_demanded_6 in unitype.adjust_coercions_158 _vArray_0 _vArray_1 (<{StdInt.+_6}> group_index_2 StdInt.one_11) groups_1_1 partition_4 coer_offered_5 (select _x_2_0::_Tuple2 1) (select _vArray_1::<{_SystemArray.Array;}> 5 demanded_7 group_index_2 (select _x_2_0::_Tuple2 0))) (_predefined._Nil -> demanded_7) 
unitype.build_partition_160 !_vArray_0 group_nr_1::I !_x_2 partition_3 = case _x_2 (_predefined._Nil -> partition_3) (_predefined._Cons group_1_0 groups_1_1 -> unitype.build_partition_160 _vArray_0 (<{StdInt.+_6}> group_nr_1 StdInt.one_11) groups_1_1 (unitype.build_partition_of_group_66 _vArray_0 group_nr_1 group_1_0 partition_3)) 
unitype.combine_coercion_trees_162 group_index_0::I !_x_1 partition_2 merged_tree_3 coer_offered_4 coer_demanded_5 = case _x_1 (_predefined._Cons attr_1_0 attrs_1_1 -> case (unitype.isNonUnique (_SystemArray.select_3 coer_offered_4 attr_1_0)) (True -> _Tuple2 unitype.CT_NonUnique coer_demanded_5) (False -> let _x_3_0 = _SystemArray.replace_2 coer_demanded_5 attr_1_0 unitype.CT_Empty, next_tree_3_1 = select _x_3_0::_Tuple2 0 in case (unitype.isUnique next_tree_3_1) (True -> _Tuple2 unitype.CT_Unique (select _x_3_0::_Tuple2 1)) (False -> unitype.combine_coercion_trees_162 group_index_0 attrs_1_1 partition_2 (unitype.rebuild_tree_75 group_index_0 partition_2 next_tree_3_1 merged_tree_3) coer_offered_4 (select _x_3_0::_Tuple2 1)) ) ) (_predefined._Nil -> _Tuple2 merged_tree_3 coer_demanded_5) 
unitype.adjust_coercions_161 !_vArray_0 group_index_1::I !_x_2 partition_3 coer_offered_4 coer_demanded_5 demanded_6 = case _x_2 (_predefined._Cons group_1_0 groups_1_1 -> let _x_2_0 = unitype.combine_coercion_trees_162 group_index_1 group_1_0 partition_3 unitype.CT_Empty coer_offered_4 coer_demanded_5 in unitype.adjust_coercions_161 _vArray_0 (<{StdInt.+_6}> group_index_1 StdInt.one_11) groups_1_1 partition_3 coer_offered_4 (select _x_2_0::_Tuple2 1) (select _vArray_0::<{_SystemArray.Array;}> 5 demanded_6 group_index_1 (select _x_2_0::_Tuple2 0))) (_predefined._Nil -> demanded_6) 
unitype.build_partition_of_group_164 group_nr_0::I !_x_1 !partition_2 = case _x_1 (_predefined._Cons attr_1_0 attrs_1_1 -> unitype.build_partition_of_group_164 group_nr_0 attrs_1_1 (_SystemArray.update_13 partition_2 attr_1_0 group_nr_0)) (_predefined._Nil -> partition_2) 
unitype.build_partition_163 group_nr_0::I !_x_1 !partition_2 = case _x_1 (_predefined._Nil -> partition_2) (_predefined._Cons group_1_0 groups_1_1 -> unitype.build_partition_163 (<{StdInt.+_6}> group_nr_0 StdInt.one_11) groups_1_1 (unitype.build_partition_of_group_164 group_nr_0 group_1_0 partition_2)) 
unitype.adjust_coercions_165 group_index_0::I !_x_1 partition_2 coer_offered_3 coer_demanded_4 !demanded_5 = case _x_1 (_predefined._Cons group_1_0 groups_1_1 -> let _x_2_0 = unitype.combine_coercion_trees_162 group_index_0 group_1_0 partition_2 unitype.CT_Empty coer_offered_3 coer_demanded_4 in unitype.adjust_coercions_165 (<{StdInt.+_6}> group_index_0 StdInt.one_11) groups_1_1 partition_2 coer_offered_3 (select _x_2_0::_Tuple2 1) (_SystemArray.update_5 demanded_5 group_index_0 (select _x_2_0::_Tuple2 0))) (_predefined._Nil -> demanded_5) 
unitype.partitionateAttributes !coer_offered_0 !coer_demanded_1 = let !max_attr_nr_1_0::I = _SystemArray.size_4 coer_offered_0, _x_1_1::I = unitype.partitionate_attributes_70 3 max_attr_nr_1_0 coer_offered_0 (unitype._PartitioningInfo (_SystemArray.createArray_9 max_attr_nr_1_0 -1) 0 _predefined._Nil _predefined._Nil), _x_1_2 = unitype.reverse_and_length_69 (select _x_1_1::unitype._PartitioningInfo 2) 0 _predefined._Nil, groups_1_3 = select _x_1_2::_Tuple2 1, partition_1_4 = unitype.build_partition_163 0 groups_1_3 (select _x_1_1::unitype._PartitioningInfo 0), g_s_1_5 = <{StdInt.-_7}> (select _x_1_2::_Tuple2 0) 1 in <{_Tuple2!3}> partition_1_4 (unitype.adjust_coercions_165 0 groups_1_3 partition_1_4 coer_offered_0 coer_demanded_1 (<{unitype.cu;84;29_157}> (_SystemArray._createArray_0 (<{StdInt.+_6}> g_s_1_5 StdInt.one_11)) 0 g_s_1_5))
unitype.tryToMakeNonUnique !attr_0::I !coercions_1 = case coercions_1 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> case (unitype.isUnique (_SystemArray.select_3 coer_demanded_1_0 attr_0)) (True -> <{_Tuple2!3}> False coercions_1) (False -> <{_Tuple2!3}> True (unitype.makeNonUnique attr_0 coercions_1)) ) 
unitype.tryToMakeUnique !attr_0::I !coercions_1 = case coercions_1 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> case (unitype.isNonUnique (_SystemArray.select_3 coer_offered_1_1 attr_0)) (True -> <{_Tuple2!3}> False coercions_1) (False -> <{_Tuple2!3}> True (unitype.makeUnique attr_0 coercions_1)) ) 
unitype.var_in_free_vars::B var_ptr_0 !_x_1 = case _x_1 (_predefined._Nil -> False) (_predefined._Cons _x_1_0 vars_1_1 -> case _x_1_0 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> case (<{Heap.==_10}> var_ptr_0 fv_info_ptr_2_2) (True -> True) (False -> unitype.var_in_free_vars var_ptr_0 vars_1_1) ) ) 
unitype.uniquenessError !position_0 !mess_1 !err_2 = case err_2 (checksupport._ErrorAdmin ea_file_1_0 ea_loc_1_1 ea_ok_1_2 -> update err_2::checksupport._ErrorAdmin [0:<{StdFile.<<<_37}> (<{StdFile.<<<_38}> (<{StdFile.<<<_37}> (<{syntax.<<<_57}> (<{StdFile.<<<_38}> (<{checksupport.<<<_53}> (<{StdFile.<<<_38}> ea_file_1_0 "Uniqueness error ") (StdList.hd ea_loc_1_1)) ": \"") position_0) '\"') mess_1) '\n',2:False]) 
unitype.find_var_position_in_let_binds_94 var_ptr_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 let_binds_1_1 -> case _x_1_0 (syntax._LetBind _x_2_0 lb_src_2_1 lb_position_2_2 -> case _x_2_0 (syntax._FreeVar fv_def_level_3_0 fv_ident_3_1 fv_info_ptr_3_2 fv_count_3_3 -> case (<{Heap.==_10}> var_ptr_0 fv_info_ptr_3_2) (True -> _Tuple2 True lb_position_2_2) (False -> unitype.find_var_position_in_let_binds_94 var_ptr_0 let_binds_1_1) ) ) ) (_predefined._Nil -> _Tuple2 False syntax.NoPos) 
unitype.find_var_position_in_case_default_99 var_ptr_0 !_x_1 = case _x_1 (general.Yes expr_1_0 -> unitype.find_var_position_in_expression_100 var_ptr_0 expr_1_0) (general.No -> _Tuple2 False syntax.NoPos) 
unitype.find_var_position_in_dynamic_patterns_96 var_ptr_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 dynamic_patterns_1_1 -> case _x_1_0 (syntax._DynamicPattern dp_var_2_0 dp_type_2_1 dp_type_code_2_2 dp_rhs_2_3 dp_position_2_4 -> case (<{Heap.==_10}> var_ptr_0 (select dp_var_2_0::syntax._FreeVar 2)) (True -> _Tuple2 True dp_position_2_4) (False -> let _x_4_0 = unitype.find_var_position_in_expression_100 var_ptr_0 dp_rhs_2_3 in case (select _x_4_0::_Tuple2 0) (True -> _Tuple2 True (select _x_4_0::_Tuple2 1)) (False -> unitype.find_var_position_in_dynamic_patterns_96 var_ptr_0 dynamic_patterns_1_1) ) ) ) (_predefined._Nil -> _Tuple2 False syntax.NoPos) 
unitype.find_var_position_in_basic_patterns_95 var_ptr_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 basic_patterns_1_1 -> case _x_1_0 (syntax._BasicPattern bp_value_2_0 bp_expr_2_1 bp_position_2_2 -> let _x_3_0 = unitype.find_var_position_in_expression_100 var_ptr_0 bp_expr_2_1 in case (select _x_3_0::_Tuple2 0) (True -> _Tuple2 True (select _x_3_0::_Tuple2 1)) (False -> unitype.find_var_position_in_basic_patterns_95 var_ptr_0 basic_patterns_1_1) ) ) (_predefined._Nil -> _Tuple2 False syntax.NoPos) 
unitype.find_var_position_in_algebraic_patterns_98 var_ptr_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 algebraic_patterns_1_1 -> case _x_1_0 (syntax._AlgebraicPattern ap_symbol_2_0 ap_vars_2_1 ap_expr_2_2 ap_position_2_3 -> case (unitype.var_in_free_vars var_ptr_0 ap_vars_2_1) (True -> _Tuple2 True ap_position_2_3) (False -> let _x_4_0 = unitype.find_var_position_in_expression_100 var_ptr_0 ap_expr_2_2 in case (select _x_4_0::_Tuple2 0) (True -> _Tuple2 True (select _x_4_0::_Tuple2 1)) (False -> unitype.find_var_position_in_algebraic_patterns_98 var_ptr_0 algebraic_patterns_1_1) ) ) ) (_predefined._Nil -> _Tuple2 False syntax.NoPos) 
unitype.find_var_position_in_case_guards_97 var_ptr_0 !_x_1 = case _x_1 (syntax.AlgebraicPatterns _x_1_0 algebraic_patterns_1_1 -> unitype.find_var_position_in_algebraic_patterns_98 var_ptr_0 algebraic_patterns_1_1) (syntax.BasicPatterns _x_1_0 basic_patterns_1_1 -> unitype.find_var_position_in_basic_patterns_95 var_ptr_0 basic_patterns_1_1) (syntax.OverloadedListPatterns _x_1_0 _x_1_1 algebraic_patterns_1_2 -> unitype.find_var_position_in_algebraic_patterns_98 var_ptr_0 algebraic_patterns_1_2) (syntax.NewTypePatterns _x_1_0 algebraic_patterns_1_1 -> unitype.find_var_position_in_algebraic_patterns_98 var_ptr_0 algebraic_patterns_1_1) (syntax.DynamicPatterns dynamic_patterns_1_0 -> unitype.find_var_position_in_dynamic_patterns_96 var_ptr_0 dynamic_patterns_1_0) (syntax.NoPattern -> _Tuple2 False syntax.NoPos) 
unitype.find_var_position_in_updated_fields_93 var_ptr_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 updated_fields_1_1 -> case _x_1_0 (general._Bind bind_src_2_0 bind_dst_2_1 -> let _x_3_0 = unitype.find_var_position_in_expression_100 var_ptr_0 bind_src_2_0 in case (select _x_3_0::_Tuple2 0) (True -> _Tuple2 True (select _x_3_0::_Tuple2 1)) (False -> unitype.find_var_position_in_updated_fields_93 var_ptr_0 updated_fields_1_1) ) ) (_predefined._Nil -> _Tuple2 False syntax.NoPos) 
unitype.find_var_position_in_selections_102 var_ptr_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 selections_1_1 -> case _x_1_0 (syntax.RecordSelection _x_2_0 _x_2_1 -> unitype.find_var_position_in_selections_102 var_ptr_0 selections_1_1) (syntax.ArraySelection _x_2_0 _x_2_1 expr_2_2 -> let _x_3_0 = unitype.find_var_position_in_expression_100 var_ptr_0 expr_2_2 in case (select _x_3_0::_Tuple2 0) (True -> _Tuple2 True (select _x_3_0::_Tuple2 1)) (False -> unitype.find_var_position_in_selections_102 var_ptr_0 selections_1_1) ) (syntax.DictionarySelection _x_2_0 d_selections_2_1 _x_2_2 expr_2_3 -> let _x_3_0 = unitype.find_var_position_in_expression_100 var_ptr_0 expr_2_3 in case (select _x_3_0::_Tuple2 0) (True -> _Tuple2 True (select _x_3_0::_Tuple2 1)) (False -> let _x_5_0 = unitype.find_var_position_in_selections_102 var_ptr_0 d_selections_2_1 in case (select _x_5_0::_Tuple2 0) (True -> _Tuple2 True (select _x_5_0::_Tuple2 1)) (False -> unitype.find_var_position_in_selections_102 var_ptr_0 selections_1_1) ) ) ) (_predefined._Nil -> _Tuple2 False syntax.NoPos) 
unitype.find_var_position_in_expressions_101 var_ptr_0 !_x_1 = case _x_1 (_predefined._Cons expr_1_0 exprs_1_1 -> let _x_2_0 = unitype.find_var_position_in_expression_100 var_ptr_0 expr_1_0 in case (select _x_2_0::_Tuple2 0) (True -> _Tuple2 True (select _x_2_0::_Tuple2 1)) (False -> unitype.find_var_position_in_expressions_101 var_ptr_0 exprs_1_1) ) (_predefined._Nil -> _Tuple2 False syntax.NoPos) 
unitype.find_var_position_in_expression_100 var_ptr_0 !_x_1 = case _x_1 (syntax.App _x_1_0 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> unitype.find_var_position_in_expressions_101 var_ptr_0 app_args_2_1) ) (<{syntax.@}> f_1_0 a_1_1 -> let _x_2_0 = unitype.find_var_position_in_expression_100 var_ptr_0 f_1_0 in case (select _x_2_0::_Tuple2 0) (True -> _Tuple2 True (select _x_2_0::_Tuple2 1)) (False -> unitype.find_var_position_in_expressions_101 var_ptr_0 a_1_1) ) (syntax.Selection _x_1_0 expr_1_1 selections_1_2 -> let _x_2_0 = unitype.find_var_position_in_selections_102 var_ptr_0 selections_1_2 in case (select _x_2_0::_Tuple2 0) (True -> _Tuple2 True (select _x_2_0::_Tuple2 1)) (False -> unitype.find_var_position_in_expression_100 var_ptr_0 expr_1_1) ) (syntax.TupleSelect _x_1_0 _x_1_1 expr_1_2 -> unitype.find_var_position_in_expression_100 var_ptr_0 expr_1_2) (syntax.Update expr1_1_0 selections_1_1 expr2_1_2 -> let _x_2_0 = unitype.find_var_position_in_expression_100 var_ptr_0 expr1_1_0 in case (select _x_2_0::_Tuple2 0) (True -> _Tuple2 True (select _x_2_0::_Tuple2 1)) (False -> let _x_4_0 = unitype.find_var_position_in_selections_102 var_ptr_0 selections_1_1 in case (select _x_4_0::_Tuple2 0) (True -> _Tuple2 True (select _x_4_0::_Tuple2 1)) (False -> unitype.find_var_position_in_expression_100 var_ptr_0 expr2_1_2) ) ) (syntax.RecordUpdate _x_1_0 expr_1_1 updated_fields_1_2 -> let _x_2_0 = unitype.find_var_position_in_updated_fields_93 var_ptr_0 updated_fields_1_2 in case (select _x_2_0::_Tuple2 0) (True -> _Tuple2 True (select _x_2_0::_Tuple2 1)) (False -> unitype.find_var_position_in_expression_100 var_ptr_0 expr_1_1) ) (syntax.MatchExpr _x_1_0 expr_1_1 -> unitype.find_var_position_in_expression_100 var_ptr_0 expr_1_1) (syntax.IsConstructor expr_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 _x_1_5 -> unitype.find_var_position_in_expression_100 var_ptr_0 expr_1_0) (syntax.Let _x_1_0 -> case _x_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> let _x_3_0 = unitype.find_var_position_in_let_binds_94 var_ptr_0 let_strict_binds_2_0 in case (select _x_3_0::_Tuple2 0) (True -> _Tuple2 True (select _x_3_0::_Tuple2 1)) (False -> let _x_5_0 = unitype.find_var_position_in_let_binds_94 var_ptr_0 let_lazy_binds_2_1 in case (select _x_5_0::_Tuple2 0) (True -> _Tuple2 True (select _x_5_0::_Tuple2 1)) (False -> unitype.find_var_position_in_expression_100 var_ptr_0 let_expr_2_2) ) ) ) (syntax.Case _x_1_0 -> case _x_1_0 (syntax._Case case_expr_2_0 case_guards_2_1 case_default_2_2 case_ident_2_3 case_info_ptr_2_4 case_explicit_2_5 case_default_pos_2_6 -> let _x_3_0 = unitype.find_var_position_in_expression_100 var_ptr_0 case_expr_2_0 in case (select _x_3_0::_Tuple2 0) (True -> _Tuple2 True (select _x_3_0::_Tuple2 1)) (False -> let _x_5_0 = unitype.find_var_position_in_case_guards_97 var_ptr_0 case_guards_2_1 in case (select _x_5_0::_Tuple2 0) (True -> _Tuple2 True (select _x_5_0::_Tuple2 1)) (False -> unitype.find_var_position_in_case_default_99 var_ptr_0 case_default_2_2) ) ) ) (syntax.DynamicExpr _x_1_0 -> case _x_1_0 (syntax._DynamicExpr dyn_expr_2_0 dyn_opt_type_2_1 dyn_info_ptr_2_2 dyn_type_code_2_3 -> unitype.find_var_position_in_expression_100 var_ptr_0 dyn_expr_2_0) ) (_ -> _Tuple2 False syntax.NoPos)
unitype.find_var_position_in_expression var_ptr_0 !expr_1 = let _x_1_0 = unitype.find_var_position_in_expression_100 var_ptr_0 expr_1 in case (select _x_1_0::_Tuple2 0) (True -> select _x_1_0::_Tuple2 1) (False -> syntax.NoPos) 
unitype.uniquenessErrorVar !free_var_0 !_x_1 !mess_2 !err_3 = case free_var_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> case _x_1 (syntax.TransformedBody _x_2_0 -> case _x_2_0 (syntax._TransformedBody tb_args_3_0 tb_rhs_3_1 -> case (unitype.var_in_free_vars fv_info_ptr_1_2 tb_args_3_0) (True -> unitype.uniquenessError (syntax.CP_Expression (syntax.FreeVar free_var_0)) mess_2 err_3) (False -> <{unitype._c;1034;7_195}> (unitype.find_var_position_in_expression fv_info_ptr_1_2 tb_rhs_3_1) err_3 free_var_0 mess_2) ) ) ) 
<{unitype._c;1034;7_195}> !_x_0 !err_1 free_var_2 !mess_3 = case _x_0 (syntax.LinePos file_name_1_0 line_n_1_1 -> update err_1::checksupport._ErrorAdmin [0:<{StdFile.<<<_37}> (<{StdFile.<<<_38}> (<{StdFile.<<<_37}> (<{checksupport.<<<_53}> (<{StdFile.<<<_38}> (select err_1::checksupport._ErrorAdmin 0) "Uniqueness error ") (syntax._IdentPos (select free_var_2::syntax._FreeVar 1) line_n_1_1 file_name_1_0)) '\"') mess_3) '\n',2:False]) (syntax.FunPos file_name_1_0 line_n_1_1 fun_name_1_2 -> update err_1::checksupport._ErrorAdmin [0:<{StdFile.<<<_37}> (<{StdFile.<<<_38}> (<{StdFile.<<<_37}> (<{checksupport.<<<_53}> (<{StdFile.<<<_38}> (select err_1::checksupport._ErrorAdmin 0) "Uniqueness error ") (syntax._IdentPos (select free_var_2::syntax._FreeVar 1) line_n_1_1 file_name_1_0)) '\"') mess_3) '\n',2:False]) (_ -> unitype.uniquenessError (syntax.CP_Expression (syntax.FreeVar free_var_2)) mess_3 err_1)
unitype.any__128::B !_vList_0 p_1 !_x_2 = case _x_2 (<{_predefined._|Nil}> -> False) (<{_predefined._|Cons}> b_1_0 tl_1_1 -> case (p_1 b_1_0) (True -> True) (False -> unitype.any__128 _vList_0 p_1 tl_1_1) ) 
unitype.any__166::B p_0 !_x_1 = case _x_1 (<{_predefined._|Nil}> -> False) (<{_predefined._|Cons}> b_1_0 tl_1_1 -> case (p_0 b_1_0) (True -> True) (False -> unitype.any__166 p_0 tl_1_1) ) 
unitype.any__167::B !_x_0 = case _x_0 (<{_predefined._|Nil}> -> False) (<{_predefined._|Cons}> b_1_0 tl_1_1 -> case (unitype.IsArrowKind b_1_0) (True -> True) (False -> unitype.any__167 tl_1_1) ) 
unitype.has_no_ArrowKind::B !kinds_0 = StdBool.not (unitype.any__167 kinds_0)
unitype.is_positive_sign_104::B !_x_0 !arity_1::I = case _x_0 (typeproperties._SignClassification sc_pos_vect_1_0 sc_neg_vect_1_1 -> case (<{StdInt.==_16}> arity_1 0) (True -> True) (False -> case (<{StdInt.<_17}> arity_1 32) (True -> let m_4_0::I = <{StdInt.-_7}> (<{StdInt.<<}> 1 arity_1) 1 in case (<{StdInt.==_16}> (StdInt.bitand sc_pos_vect_1_0 m_4_0) m_4_0) (True -> <{StdInt.==_16}> (StdInt.bitand sc_neg_vect_1_1 m_4_0) 0) (False -> False) ) (False -> case (<{StdInt.==_16}> sc_pos_vect_1_0 -1) (True -> <{StdInt.==_16}> sc_neg_vect_1_1 0) (False -> False) ) ) ) 
unitype.typeIsNonCoercible::B _x_0 !_x_1 = case _x_1 (syntax.TempV _x_1_0 -> True) (syntax.TempQV _x_1_0 -> True) (syntax.TempQDV _x_1_0 -> True) (<{syntax.-->}> _x_1_0 _x_1_1 -> True) (syntax.TArrow -> True) (syntax.TArrow1 t_1_0 -> True) (<{syntax.:@:}> _x_1_0 _x_1_1 -> case _x_1_0 (syntax.TempCV tmp_var_id_2_0 -> StdBool.not (unitype.isPositive tmp_var_id_2_0 _x_0)) (_ -> True)) (_ -> False)
unitype.add_sign_and_prop_of_arrow_kind_in_lift !_x_0 cons_vars_1 sign_classes_2 prop_classes_3 = case _x_0 (syntax.TA _x_1_0 _x_1_1 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop_2_3 -> _Tuple2 (_predefined._Cons (unitype.adjustSignClass (select type_prop_2_3::syntax._TypeSymbProperties 0) type_arity_2_1) sign_classes_2) (_predefined._Cons (<{StdInt.>>}> (select type_prop_2_3::syntax._TypeSymbProperties 1) type_arity_2_1) prop_classes_3)) ) (syntax.TAS _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop_2_3 -> _Tuple2 (_predefined._Cons (unitype.adjustSignClass (select type_prop_2_3::syntax._TypeSymbProperties 0) type_arity_2_1) sign_classes_2) (_predefined._Cons (<{StdInt.>>}> (select type_prop_2_3::syntax._TypeSymbProperties 1) type_arity_2_1) prop_classes_3)) ) (syntax.TempV tmp_var_id_1_0 -> case (unitype.isPositive tmp_var_id_1_0 cons_vars_1) (True -> _Tuple2 (_predefined._Cons (typeproperties._SignClassification (StdInt.bitnot 0) 0) sign_classes_2) (_predefined._Cons (StdInt.bitnot 0) prop_classes_3)) (False -> _Tuple2 (_predefined._Cons (typeproperties._SignClassification (StdInt.bitnot 0) (StdInt.bitnot 0)) sign_classes_2) (_predefined._Cons 0 prop_classes_3)) ) (_ -> _Tuple2 (_predefined._Cons (typeproperties._SignClassification (StdInt.bitnot 0) (StdInt.bitnot 0)) sign_classes_2) (_predefined._Cons (StdInt.bitnot 0) prop_classes_3))
unitype.lift_list_106 !_vlift_0 !modules_1 !cons_vars_2 !_x_3 !subst_4 !ls_5 = case _x_3 (_predefined._Nil -> <{_Tuple4!15}> False _predefined._Nil subst_4 ls_5) (_predefined._Cons t0_1_0 ts_1_1 -> let _x_2_0 = select _vlift_0::<{unitype.lift;}> 0 modules_1 cons_vars_2 t0_1_0 subst_4 ls_5 in case (select _x_2_0::_Tuple4 0) (True -> let _x_4_0 = unitype.lift_list_106 _vlift_0 modules_1 cons_vars_2 ts_1_1 (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3) in <{_Tuple4!15}> True (_predefined._Cons (select _x_2_0::_Tuple4 1) (select _x_4_0::_Tuple4 1)) (select _x_4_0::_Tuple4 2) (select _x_4_0::_Tuple4 3)) (False -> let subst_4_0 = select _x_2_0::_Tuple4 2, ls_4_1 = select _x_2_0::_Tuple4 3, _x_4_2 = unitype.lift_list_106 _vlift_0 modules_1 cons_vars_2 ts_1_1 subst_4_0 ls_4_1 in case (select _x_4_2::_Tuple4 0) (True -> <{_Tuple4!15}> True (_predefined._Cons t0_1_0 (select _x_4_2::_Tuple4 1)) (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) (False -> <{_Tuple4!15}> False _x_3 (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) ) ) 
unitype.lift_list !modules_0 !cons_vars_1 !_x_2 !_x_3 !subst_4 !ls_5 = case _x_2 (_predefined._Nil -> <{_Tuple6!63}> False _predefined._Nil _predefined._Nil _predefined._Nil subst_4 ls_5) (_predefined._Cons t0_1_0 ts_1_1 -> case _x_3 (_predefined._Cons tk_2_0 tks_2_1 -> let _x_3_0 = unitype.lift_119 modules_0 cons_vars_1 t0_1_0 subst_4 ls_5 in case (select _x_3_0::_Tuple4 0) (True -> case (unitype.IsArrowKind tk_2_0) (True -> let t_6_0 = select _x_3_0::_Tuple4 1, _x_6_1 = unitype.lift_list modules_0 cons_vars_1 ts_1_1 tks_2_1 (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3), _x_6_2 = unitype.add_sign_and_prop_of_arrow_kind_in_lift (select t_6_0::syntax._AType 1) cons_vars_1 (select _x_6_1::_Tuple6 2) (select _x_6_1::_Tuple6 3) in <{_Tuple6!63}> True (_predefined._Cons t_6_0 (select _x_6_1::_Tuple6 1)) (select _x_6_2::_Tuple2 0) (select _x_6_2::_Tuple2 1) (select _x_6_1::_Tuple6 4) (select _x_6_1::_Tuple6 5)) (False -> let _x_6_0 = unitype.lift_list modules_0 cons_vars_1 ts_1_1 tks_2_1 (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3) in <{_Tuple6!63}> True (_predefined._Cons (select _x_3_0::_Tuple4 1) (select _x_6_0::_Tuple6 1)) (select _x_6_0::_Tuple6 2) (select _x_6_0::_Tuple6 3) (select _x_6_0::_Tuple6 4) (select _x_6_0::_Tuple6 5)) ) (False -> let subst_5_0 = select _x_3_0::_Tuple4 2, ls_5_1 = select _x_3_0::_Tuple4 3, _x_5_2 = unitype.lift_list modules_0 cons_vars_1 ts_1_1 tks_2_1 subst_5_0 ls_5_1 in case (select _x_5_2::_Tuple6 0) (True -> case (unitype.IsArrowKind tk_2_0) (True -> let _x_8_0 = unitype.add_sign_and_prop_of_arrow_kind_in_lift (select (select _x_3_0::_Tuple4 1)::syntax._AType 1) cons_vars_1 (select _x_5_2::_Tuple6 2) (select _x_5_2::_Tuple6 3) in <{_Tuple6!63}> True (_predefined._Cons t0_1_0 (select _x_5_2::_Tuple6 1)) (select _x_8_0::_Tuple2 0) (select _x_8_0::_Tuple2 1) (select _x_5_2::_Tuple6 4) (select _x_5_2::_Tuple6 5)) (False -> <{_Tuple6!63}> True (_predefined._Cons (select _x_3_0::_Tuple4 1) (select _x_5_2::_Tuple6 1)) (select _x_5_2::_Tuple6 2) (select _x_5_2::_Tuple6 3) (select _x_5_2::_Tuple6 4) (select _x_5_2::_Tuple6 5)) ) (False -> case (unitype.IsArrowKind tk_2_0) (True -> let _x_8_0 = unitype.add_sign_and_prop_of_arrow_kind_in_lift (select (select _x_3_0::_Tuple4 1)::syntax._AType 1) cons_vars_1 (select _x_5_2::_Tuple6 2) (select _x_5_2::_Tuple6 3) in <{_Tuple6!63}> False _x_2 (select _x_8_0::_Tuple2 0) (select _x_8_0::_Tuple2 1) (select _x_5_2::_Tuple6 4) (select _x_5_2::_Tuple6 5)) (False -> <{_Tuple6!63}> False _x_2 (select _x_5_2::_Tuple6 2) (select _x_5_2::_Tuple6 3) (select _x_5_2::_Tuple6 4) (select _x_5_2::_Tuple6 5)) ) ) ) ) 
unitype.liftTypeApplication !modules_0 !cons_vars_1 !t0_2 !subst_3 !ls_4 = case t0_2 (syntax.TA cons_id_1_0 cons_args_1_1 -> case cons_id_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop0_2_3 -> case type_index_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> let _x_4_0 = unitype.select_150 (_SystemArray.select_43 (select ls_4::unitype._LiftState 2) glob_module_3_1) glob_object_3_0, _x_4_1 = select _x_4_0::_Tuple2 0, tdi_kinds_4_2 = select _x_4_1::syntax._TypeDefInfo 0, ls_4_3 = select _x_4_0::_Tuple2 1, _x_4_4 = unitype.lift_list modules_0 cons_vars_1 cons_args_1_1 tdi_kinds_4_2 subst_3 ls_4_3 in case (select _x_4_4::_Tuple6 0) (True -> let sign_classes_6_0 = select _x_4_4::_Tuple6 2, prop_classes_6_1 = select _x_4_4::_Tuple6 3, ls_6_2 = select _x_4_4::_Tuple6 5, ls_type_heaps_6_3 = select ls_6_2::unitype._LiftState 1, _x_6_4 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 sign_classes_6_0 prop_classes_6_1 modules_0 (select ls_type_heaps_6_3::syntax._TypeHeaps 0) (select ls_6_2::unitype._LiftState 2), type_prop_6_5 = select _x_6_4::_Tuple3 0 in case (unitype.equal_type_prop type_prop_6_5 type_prop0_2_3) (True -> <{_Tuple4!15}> True (syntax.TA cons_id_1_0 (select _x_4_4::_Tuple6 1)) (select _x_4_4::_Tuple6 4) (update ls_6_2::unitype._LiftState [1:update ls_type_heaps_6_3::syntax._TypeHeaps [0:select _x_6_4::_Tuple3 1],2:select _x_6_4::_Tuple3 2])) (False -> <{_Tuple4!15}> True (syntax.TA (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_6_5]) (select _x_4_4::_Tuple6 1)) (select _x_4_4::_Tuple6 4) (update ls_6_2::unitype._LiftState [1:update ls_type_heaps_6_3::syntax._TypeHeaps [0:select _x_6_4::_Tuple3 1],2:select _x_6_4::_Tuple3 2])) ) (False -> let sign_classes_6_0 = select _x_4_4::_Tuple6 2, prop_classes_6_1 = select _x_4_4::_Tuple6 3, ls_6_2 = select _x_4_4::_Tuple6 5, ls_type_heaps_6_3 = select ls_6_2::unitype._LiftState 1, _x_6_4 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 sign_classes_6_0 prop_classes_6_1 modules_0 (select ls_type_heaps_6_3::syntax._TypeHeaps 0) (select ls_6_2::unitype._LiftState 2), type_prop_6_5 = select _x_6_4::_Tuple3 0 in case (unitype.equal_type_prop type_prop_6_5 type_prop0_2_3) (True -> <{_Tuple4!15}> False t0_2 (select _x_4_4::_Tuple6 4) (update ls_6_2::unitype._LiftState [1:update ls_type_heaps_6_3::syntax._TypeHeaps [0:select _x_6_4::_Tuple3 1],2:select _x_6_4::_Tuple3 2])) (False -> <{_Tuple4!15}> True (syntax.TA (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_6_5]) (select _x_4_4::_Tuple6 1)) (select _x_4_4::_Tuple6 4) (update ls_6_2::unitype._LiftState [1:update ls_type_heaps_6_3::syntax._TypeHeaps [0:select _x_6_4::_Tuple3 1],2:select _x_6_4::_Tuple3 2])) ) ) ) ) (syntax.TAS cons_id_1_0 cons_args_1_1 strictness_1_2 -> case cons_id_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop0_2_3 -> case type_index_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> let _x_4_0 = unitype.select_150 (_SystemArray.select_43 (select ls_4::unitype._LiftState 2) glob_module_3_1) glob_object_3_0, _x_4_1 = select _x_4_0::_Tuple2 0, tdi_kinds_4_2 = select _x_4_1::syntax._TypeDefInfo 0, ls_4_3 = select _x_4_0::_Tuple2 1, _x_4_4 = unitype.lift_list modules_0 cons_vars_1 cons_args_1_1 tdi_kinds_4_2 subst_3 ls_4_3 in case (select _x_4_4::_Tuple6 0) (True -> let sign_classes_6_0 = select _x_4_4::_Tuple6 2, prop_classes_6_1 = select _x_4_4::_Tuple6 3, ls_6_2 = select _x_4_4::_Tuple6 5, ls_type_heaps_6_3 = select ls_6_2::unitype._LiftState 1, _x_6_4 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 sign_classes_6_0 prop_classes_6_1 modules_0 (select ls_type_heaps_6_3::syntax._TypeHeaps 0) (select ls_6_2::unitype._LiftState 2), type_prop_6_5 = select _x_6_4::_Tuple3 0 in case (unitype.equal_type_prop type_prop_6_5 type_prop0_2_3) (True -> <{_Tuple4!15}> True (syntax.TAS cons_id_1_0 (select _x_4_4::_Tuple6 1) strictness_1_2) (select _x_4_4::_Tuple6 4) (update ls_6_2::unitype._LiftState [1:update ls_type_heaps_6_3::syntax._TypeHeaps [0:select _x_6_4::_Tuple3 1],2:select _x_6_4::_Tuple3 2])) (False -> <{_Tuple4!15}> True (syntax.TAS (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_6_5]) (select _x_4_4::_Tuple6 1) strictness_1_2) (select _x_4_4::_Tuple6 4) (update ls_6_2::unitype._LiftState [1:update ls_type_heaps_6_3::syntax._TypeHeaps [0:select _x_6_4::_Tuple3 1],2:select _x_6_4::_Tuple3 2])) ) (False -> let sign_classes_6_0 = select _x_4_4::_Tuple6 2, prop_classes_6_1 = select _x_4_4::_Tuple6 3, ls_6_2 = select _x_4_4::_Tuple6 5, ls_type_heaps_6_3 = select ls_6_2::unitype._LiftState 1, _x_6_4 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 sign_classes_6_0 prop_classes_6_1 modules_0 (select ls_type_heaps_6_3::syntax._TypeHeaps 0) (select ls_6_2::unitype._LiftState 2), type_prop_6_5 = select _x_6_4::_Tuple3 0 in case (unitype.equal_type_prop type_prop_6_5 type_prop0_2_3) (True -> <{_Tuple4!15}> False t0_2 (select _x_4_4::_Tuple6 4) (update ls_6_2::unitype._LiftState [1:update ls_type_heaps_6_3::syntax._TypeHeaps [0:select _x_6_4::_Tuple3 1],2:select _x_6_4::_Tuple3 2])) (False -> <{_Tuple4!15}> True (syntax.TAS (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_6_5]) (select _x_4_4::_Tuple6 1) strictness_1_2) (select _x_4_4::_Tuple6 4) (update ls_6_2::unitype._LiftState [1:update ls_type_heaps_6_3::syntax._TypeHeaps [0:select _x_6_4::_Tuple3 1],2:select _x_6_4::_Tuple3 2])) ) ) ) ) (_ -> unitype.lift_118 modules_0 cons_vars_1 t0_2 subst_3 ls_4)
unitype.lift_list_168 !modules_0 !cons_vars_1 !_x_2 !subst_3 !ls_4 = case _x_2 (_predefined._Nil -> <{_Tuple4!15}> False _predefined._Nil subst_3 ls_4) (_predefined._Cons t0_1_0 ts_1_1 -> let _x_2_0 = unitype.lift_119 modules_0 cons_vars_1 t0_1_0 subst_3 ls_4 in case (select _x_2_0::_Tuple4 0) (True -> let _x_4_0 = unitype.lift_list_168 modules_0 cons_vars_1 ts_1_1 (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3) in <{_Tuple4!15}> True (_predefined._Cons (select _x_2_0::_Tuple4 1) (select _x_4_0::_Tuple4 1)) (select _x_4_0::_Tuple4 2) (select _x_4_0::_Tuple4 3)) (False -> let subst_4_0 = select _x_2_0::_Tuple4 2, ls_4_1 = select _x_2_0::_Tuple4 3, _x_4_2 = unitype.lift_list_168 modules_0 cons_vars_1 ts_1_1 subst_4_0 ls_4_1 in case (select _x_4_2::_Tuple4 0) (True -> <{_Tuple4!15}> True (_predefined._Cons t0_1_0 (select _x_4_2::_Tuple4 1)) (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) (False -> <{_Tuple4!15}> False _x_2 (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) ) ) 
unitype.liftTempTypeVariable !modules_0 !cons_vars_1 !tv_number_2::I !subst_3 !ls_4 = let _x_1_0 = _SystemArray.uselect_6 subst_3 tv_number_2, type_1_1 = select _x_1_0::_Tuple2 0, subst_1_2 = select _x_1_0::_Tuple2 1 in <{unitype._c;251;7_199}> type_1_1 tv_number_2 subst_1_2 ls_4 modules_0 cons_vars_1
unitype.lift_118 !modules_0 !cons_vars_1 !_x_2 !subst_3 !ls_4 = case _x_2 (syntax.TempV temp_var_1_0 -> unitype.liftTempTypeVariable modules_0 cons_vars_1 temp_var_1_0 subst_3 ls_4) (<{syntax.-->}> arg_type0_1_0 res_type0_1_1 -> let _x_2_0 = unitype.lift_119 modules_0 cons_vars_1 arg_type0_1_0 subst_3 ls_4 in case (select _x_2_0::_Tuple4 0) (True -> let subst_4_0 = select _x_2_0::_Tuple4 2, ls_4_1 = select _x_2_0::_Tuple4 3, _x_4_2 = unitype.lift_119 modules_0 cons_vars_1 res_type0_1_1 subst_4_0 ls_4_1 in case (select _x_4_2::_Tuple4 0) (True -> <{_Tuple4!15}> True (<{syntax.-->}> (select _x_2_0::_Tuple4 1) (select _x_4_2::_Tuple4 1)) (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) (False -> <{_Tuple4!15}> True (<{syntax.-->}> (select _x_2_0::_Tuple4 1) res_type0_1_1) (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) ) (False -> let subst_4_0 = select _x_2_0::_Tuple4 2, ls_4_1 = select _x_2_0::_Tuple4 3, _x_4_2 = unitype.lift_119 modules_0 cons_vars_1 res_type0_1_1 subst_4_0 ls_4_1 in case (select _x_4_2::_Tuple4 0) (True -> <{_Tuple4!15}> True (<{syntax.-->}> arg_type0_1_0 (select _x_4_2::_Tuple4 1)) (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) (False -> <{_Tuple4!15}> False _x_2 (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) ) ) (syntax.TA cons_id_1_0 cons_args_1_1 -> case ls_4 (unitype._LiftState ls_next_attr_2_0 ls_type_heaps_2_1 ls_td_infos_2_2 -> let _x_3_0 = type.tryToExpand _x_2 syntax.TA_Multi modules_0 ls_type_heaps_2_1 in unitype.liftTypeApplication modules_0 cons_vars_1 (select _x_3_0::_Tuple3 1) subst_3 (update ls_4::unitype._LiftState [1:select _x_3_0::_Tuple3 2])) ) (syntax.TAS cons_id_1_0 cons_args_1_1 _x_1_2 -> case ls_4 (unitype._LiftState ls_next_attr_2_0 ls_type_heaps_2_1 ls_td_infos_2_2 -> let _x_3_0 = type.tryToExpand _x_2 syntax.TA_Multi modules_0 ls_type_heaps_2_1 in unitype.liftTypeApplication modules_0 cons_vars_1 (select _x_3_0::_Tuple3 1) subst_3 (update ls_4::unitype._LiftState [1:select _x_3_0::_Tuple3 2])) ) (syntax.TArrow1 arg_type_1_0 -> let _x_2_0 = unitype.lift_119 modules_0 cons_vars_1 arg_type_1_0 subst_3 ls_4 in case (select _x_2_0::_Tuple4 0) (True -> <{_Tuple4!15}> True (syntax.TArrow1 (select _x_2_0::_Tuple4 1)) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (False -> <{_Tuple4!15}> False _x_2 (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) ) (<{syntax.:@:}> _x_1_0 types_1_1 -> case _x_1_0 (syntax.TempCV temp_var_2_0 -> let _x_3_0 = unitype.liftTempTypeVariable modules_0 cons_vars_1 temp_var_2_0 subst_3 ls_4, subst_3_1 = select _x_3_0::_Tuple4 2, ls_3_2 = select _x_3_0::_Tuple4 3, _x_3_3 = unitype.lift_list_168 modules_0 cons_vars_1 types_1_1 subst_3_1 ls_3_2 in case (case (select _x_3_0::_Tuple4 0) (True -> True) (False -> select _x_3_3::_Tuple4 0) ) (True -> let subst_5_0 = select _x_3_3::_Tuple4 2, ls_5_1 = select _x_3_3::_Tuple4 3, types_5_2 = select _x_3_3::_Tuple4 1 in <{unitype._c;377;15_198}> (select _x_3_0::_Tuple4 1) types_5_2 subst_5_0 ls_5_1 _x_2) (False -> <{_Tuple4!15}> False _x_2 (select _x_3_3::_Tuple4 2) (select _x_3_3::_Tuple4 3)) ) ) (syntax.TFA vars_1_0 type_1_1 -> StdMisc.abort "lift (TFA) (unitype.icl)") (_ -> <{_Tuple4!15}> False _x_2 subst_3 ls_4)
unitype.lift_119 !modules_0 !cons_vars_1 !attr_type_2 !subst_3 !ls_4 = case attr_type_2 (syntax._AType at_attribute_1_0 at_type_1_1 -> let _x_2_0 = unitype.lift_118 modules_0 cons_vars_1 at_type_1_1 subst_3 ls_4 in case (select _x_2_0::_Tuple4 0) (True -> let at_type_4_0 = select _x_2_0::_Tuple4 1 in case (unitype.typeIsNonCoercible cons_vars_1 at_type_4_0) (True -> <{_Tuple4!15}> True (update attr_type_2::syntax._AType [1:at_type_4_0]) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (False -> let ls_6_0 = select _x_2_0::_Tuple4 3 in <{_Tuple4!15}> True (update attr_type_2::syntax._AType [0:syntax.TA_TempVar (select ls_6_0::unitype._LiftState 0),1:at_type_4_0]) (select _x_2_0::_Tuple4 2) (update ls_6_0::unitype._LiftState [0:<{StdInt.+_6}> (select ls_6_0::unitype._LiftState 0) StdInt.one_11])) ) (False -> case (unitype.typeIsNonCoercible cons_vars_1 (select _x_2_0::_Tuple4 1)) (True -> <{_Tuple4!15}> False attr_type_2 (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (False -> let ls_5_0 = select _x_2_0::_Tuple4 3 in <{_Tuple4!15}> True (update attr_type_2::syntax._AType [0:syntax.TA_TempVar (select ls_5_0::unitype._LiftState 0)]) (select _x_2_0::_Tuple4 2) (update ls_5_0::unitype._LiftState [0:<{StdInt.+_6}> (select ls_5_0::unitype._LiftState 0) StdInt.one_11])) ) ) 
<{unitype._c;251;7_199}> !type_0 tv_number_1::I !subst_2 !ls_3 modules_4 cons_vars_5 = case type_0 (syntax.TE -> <{_Tuple4!15}> False (syntax.TempV tv_number_1) subst_2 ls_3) (syntax.TLiftedSubst type_1_0 -> let _x_2_0 = unitype.lift_118 modules_4 cons_vars_5 type_1_0 subst_2 ls_3 in <{_Tuple4!15}> True (select _x_2_0::_Tuple4 1) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (_ -> let _x_1_0 = unitype.lift_118 modules_4 cons_vars_5 type_0 subst_2 ls_3 in <{_Tuple4!15}> True (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3))
<{unitype._c;377;15_198}> !_x_0 types_1 !subst_2 !ls_3 _x_4 = case _x_0 (syntax.TA type_cons_1_0 cons_args_1_1 -> <{_Tuple4!15}> True (syntax.TA (update type_cons_1_0::syntax._TypeSymbIdent [1:<{StdInt.+_6}> (select type_cons_1_0::syntax._TypeSymbIdent 1) (StdList.length_47 types_1)]) (<{StdList.++}> cons_args_1_1 types_1)) subst_2 ls_3) (syntax.TAS type_cons_1_0 cons_args_1_1 strictness_1_2 -> <{_Tuple4!15}> True (syntax.TAS (update type_cons_1_0::syntax._TypeSymbIdent [1:<{StdInt.+_6}> (select type_cons_1_0::syntax._TypeSymbIdent 1) (StdList.length_47 types_1)]) (<{StdList.++}> cons_args_1_1 types_1) strictness_1_2) subst_2 ls_3) (syntax.TempV tv_number_1_0 -> <{_Tuple4!15}> True (<{syntax.:@:}> (syntax.TempCV tv_number_1_0) types_1) subst_2 ls_3) (syntax.TempQV tv_number_1_0 -> <{_Tuple4!15}> True (<{syntax.:@:}> (syntax.TempQCV tv_number_1_0) types_1) subst_2 ls_3) (syntax.TempQDV tv_number_1_0 -> <{_Tuple4!15}> True (<{syntax.:@:}> (syntax.TempQCDV tv_number_1_0) types_1) subst_2 ls_3) (<{syntax.:@:}> cons_var_1_0 cv_types_1_1 -> <{_Tuple4!15}> True (<{syntax.:@:}> cons_var_1_0 (<{StdList.++}> cv_types_1_1 types_1)) subst_2 ls_3) (syntax.TArrow -> <{unitype._c;390;27_196}> types_1 subst_2 ls_3 _x_4) (syntax.TArrow1 t1_1_0 -> <{unitype._c;394;33_197}> types_1 t1_1_0 subst_2 ls_3 _x_4) 
<{unitype._c;394;33_197}> !types_0 t1_1 !subst_2 !ls_3 _x_4 = case types_0 (_predefined._Cons t2_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> <{_Tuple4!15}> True (<{syntax.-->}> t1_1 t2_1_0) subst_2 ls_3) ) (_ -> <{_Tuple4!15}> False _x_4 subst_2 ls_3)
<{unitype._c;390;27_196}> !types_0 !subst_1 !ls_2 _x_3 = case types_0 (_predefined._Cons t1_1_0 _x_1_1 -> case _x_1_1 (_predefined._Cons t2_2_0 _x_2_1 -> case _x_2_1 (_predefined._Nil -> <{_Tuple4!15}> True (<{syntax.-->}> t1_1_0 t2_2_0) subst_1 ls_2) ) (_predefined._Nil -> <{_Tuple4!15}> True (syntax.TArrow1 t1_1_0) subst_1 ls_2) ) (_ -> <{_Tuple4!15}> False _x_3 subst_1 ls_2)
unitype.lift_pos_TAS_application_with_offered_type !modules_0 !cons_vars_1 !off_type_2 !t0_3 !subst_4 !ls_5 = case t0_3 (syntax.TAS cons_id_1_0 cons_args_1_1 strictness_1_2 -> case cons_id_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop0_2_3 -> case type_index_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> case ls_5 (unitype._LiftState ls_next_attr_4_0 ls_type_heaps_4_1 ls_td_infos_4_2 -> case (unitype.has_no_ArrowKind (select (unitype.select_150 (_SystemArray.select_43 (select ls_5::unitype._LiftState 2) glob_module_3_1) glob_object_3_0)::syntax._TypeDefInfo 0)) (True -> let _x_6_0 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 _predefined._Nil _predefined._Nil modules_0 (select ls_type_heaps_4_1::syntax._TypeHeaps 0) (select ls_5::unitype._LiftState 2), type_prop_6_1 = select _x_6_0::_Tuple3 0, th_vars_6_2 = select _x_6_0::_Tuple3 1, ls_td_infos_6_3 = select _x_6_0::_Tuple3 2, ls_6_4 = update ls_5::unitype._LiftState [1:update ls_type_heaps_4_1::syntax._TypeHeaps [0:th_vars_6_2],2:ls_td_infos_6_3], _x_6_5 = unitype.lift_pos_list_with_offered_type modules_0 cons_vars_1 off_type_2 cons_args_1_1 (select type_prop_6_1::syntax._TypeSymbProperties 0) subst_4 ls_6_4 in case (select _x_6_5::_Tuple4 0) (True -> case (unitype.equal_type_prop type_prop_6_1 type_prop0_2_3) (True -> <{_Tuple4!15}> True (syntax.TAS cons_id_1_0 (select _x_6_5::_Tuple4 1) strictness_1_2) (select _x_6_5::_Tuple4 2) (select _x_6_5::_Tuple4 3)) (False -> <{_Tuple4!15}> True (syntax.TAS (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_6_1]) (select _x_6_5::_Tuple4 1) strictness_1_2) (select _x_6_5::_Tuple4 2) (select _x_6_5::_Tuple4 3)) ) (False -> case (unitype.equal_type_prop type_prop_6_1 type_prop0_2_3) (True -> <{_Tuple4!15}> False t0_3 (select _x_6_5::_Tuple4 2) (select _x_6_5::_Tuple4 3)) (False -> <{_Tuple4!15}> True (syntax.TAS (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_6_1]) (select _x_6_5::_Tuple4 1) strictness_1_2) (select _x_6_5::_Tuple4 2) (select _x_6_5::_Tuple4 3)) ) ) (False -> unitype.liftTypeApplication modules_0 cons_vars_1 t0_3 subst_4 ls_5) ) ) ) ) 
unitype.lift_pos_list_with_offered_type !modules_0 !cons_vars_1 !_x_2 !ts0_3 !_x_4 !subst_5 !ls_6 = case _x_2 (_predefined._Cons off_type_1_0 off_types_1_1 -> case ts0_3 (_predefined._Cons t0_2_0 ts_2_1 -> case _x_4 (typeproperties._SignClassification sc_pos_vect_3_0 sc_neg_vect_3_1 -> case (<{StdInt.<_17}> (StdInt.bitand sc_neg_vect_3_1 1) (StdInt.bitand sc_pos_vect_3_0 1)) (True -> let _x_5_0 = unitype.lift_pos_atype_with_offered_type modules_0 cons_vars_1 off_type_1_0 t0_2_0 subst_5 ls_6 in case (select _x_5_0::_Tuple4 0) (True -> let _x_7_0 = unitype.lift_pos_list_with_offered_type modules_0 cons_vars_1 off_types_1_1 ts_2_1 (typeproperties._SignClassification (<{StdInt.>>}> sc_pos_vect_3_0 1) (<{StdInt.>>}> sc_neg_vect_3_1 1)) (select _x_5_0::_Tuple4 2) (select _x_5_0::_Tuple4 3) in <{_Tuple4!15}> True (_predefined._Cons (select _x_5_0::_Tuple4 1) (select _x_7_0::_Tuple4 1)) (select _x_7_0::_Tuple4 2) (select _x_7_0::_Tuple4 3)) (False -> let next_sc_7_0 = typeproperties._SignClassification (<{StdInt.>>}> sc_pos_vect_3_0 1) (<{StdInt.>>}> sc_neg_vect_3_1 1), subst_7_1 = select _x_5_0::_Tuple4 2, ls_7_2 = select _x_5_0::_Tuple4 3, _x_7_3 = unitype.lift_pos_list_with_offered_type modules_0 cons_vars_1 off_types_1_1 ts_2_1 next_sc_7_0 subst_7_1 ls_7_2 in case (select _x_7_3::_Tuple4 0) (True -> <{_Tuple4!15}> True (_predefined._Cons (select _x_5_0::_Tuple4 1) (select _x_7_3::_Tuple4 1)) (select _x_7_3::_Tuple4 2) (select _x_7_3::_Tuple4 3)) (False -> <{_Tuple4!15}> False ts0_3 (select _x_7_3::_Tuple4 2) (select _x_7_3::_Tuple4 3)) ) ) (False -> let _x_5_0 = unitype.lift_119 modules_0 cons_vars_1 t0_2_0 subst_5 ls_6 in case (select _x_5_0::_Tuple4 0) (True -> let _x_7_0 = unitype.lift_pos_list_with_offered_type modules_0 cons_vars_1 ts_2_1 off_types_1_1 (typeproperties._SignClassification (<{StdInt.>>}> sc_pos_vect_3_0 1) (<{StdInt.>>}> sc_neg_vect_3_1 1)) (select _x_5_0::_Tuple4 2) (select _x_5_0::_Tuple4 3) in <{_Tuple4!15}> True (_predefined._Cons (select _x_5_0::_Tuple4 1) (select _x_7_0::_Tuple4 1)) (select _x_7_0::_Tuple4 2) (select _x_7_0::_Tuple4 3)) (False -> let next_sc_7_0 = typeproperties._SignClassification (<{StdInt.>>}> sc_pos_vect_3_0 1) (<{StdInt.>>}> sc_neg_vect_3_1 1), subst_7_1 = select _x_5_0::_Tuple4 2, ls_7_2 = select _x_5_0::_Tuple4 3, _x_7_3 = unitype.lift_pos_list_with_offered_type modules_0 cons_vars_1 ts_2_1 off_types_1_1 next_sc_7_0 subst_7_1 ls_7_2 in case (select _x_7_3::_Tuple4 0) (True -> <{_Tuple4!15}> True (_predefined._Cons (select _x_5_0::_Tuple4 1) (select _x_7_3::_Tuple4 1)) (select _x_7_3::_Tuple4 2) (select _x_7_3::_Tuple4 3)) (False -> <{_Tuple4!15}> False ts0_3 (select _x_7_3::_Tuple4 2) (select _x_7_3::_Tuple4 3)) ) ) ) ) ) (_predefined._Nil -> case ts0_3 (_predefined._Nil -> <{_Tuple4!15}> False _predefined._Nil subst_5 ls_6) ) 
unitype.lift_pos_TA_application_with_offered_type !modules_0 !cons_vars_1 !off_type_args_2 !t0_3 !subst_4 !ls_5 = case t0_3 (syntax.TA cons_id_1_0 cons_args_1_1 -> case cons_id_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop0_2_3 -> case type_index_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> case ls_5 (unitype._LiftState ls_next_attr_4_0 ls_type_heaps_4_1 ls_td_infos_4_2 -> case (unitype.has_no_ArrowKind (select (unitype.select_150 (_SystemArray.select_43 (select ls_5::unitype._LiftState 2) glob_module_3_1) glob_object_3_0)::syntax._TypeDefInfo 0)) (True -> let _x_6_0 = analunitypes.typeProperties glob_object_3_0 glob_module_3_1 _predefined._Nil _predefined._Nil modules_0 (select ls_type_heaps_4_1::syntax._TypeHeaps 0) (select ls_5::unitype._LiftState 2), type_prop_6_1 = select _x_6_0::_Tuple3 0, th_vars_6_2 = select _x_6_0::_Tuple3 1, ls_td_infos_6_3 = select _x_6_0::_Tuple3 2, ls_6_4 = update ls_5::unitype._LiftState [1:update ls_type_heaps_4_1::syntax._TypeHeaps [0:th_vars_6_2],2:ls_td_infos_6_3], _x_6_5 = unitype.lift_pos_list_with_offered_type modules_0 cons_vars_1 off_type_args_2 cons_args_1_1 (select type_prop_6_1::syntax._TypeSymbProperties 0) subst_4 ls_6_4 in case (select _x_6_5::_Tuple4 0) (True -> case (unitype.equal_type_prop type_prop_6_1 type_prop0_2_3) (True -> <{_Tuple4!15}> True (syntax.TA cons_id_1_0 (select _x_6_5::_Tuple4 1)) (select _x_6_5::_Tuple4 2) (select _x_6_5::_Tuple4 3)) (False -> <{_Tuple4!15}> True (syntax.TA (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_6_1]) (select _x_6_5::_Tuple4 1)) (select _x_6_5::_Tuple4 2) (select _x_6_5::_Tuple4 3)) ) (False -> case (unitype.equal_type_prop type_prop_6_1 type_prop0_2_3) (True -> <{_Tuple4!15}> False t0_3 (select _x_6_5::_Tuple4 2) (select _x_6_5::_Tuple4 3)) (False -> <{_Tuple4!15}> True (syntax.TA (update cons_id_1_0::syntax._TypeSymbIdent [3:type_prop_6_1]) (select _x_6_5::_Tuple4 1)) (select _x_6_5::_Tuple4 2) (select _x_6_5::_Tuple4 3)) ) ) (False -> unitype.liftTypeApplication modules_0 cons_vars_1 t0_3 subst_4 ls_5) ) ) ) ) 
unitype.lift_pos_type_application_with_offered_type !modules_0 !cons_vars_1 !_x_2 !type_3 !subst_4 !ls_5 = case _x_2 (syntax.TA _x_1_0 off_type_args_1_1 -> case type_3 (syntax.TA _x_2_0 _x_2_1 -> unitype.lift_pos_TA_application_with_offered_type modules_0 cons_vars_1 off_type_args_1_1 type_3 subst_4 ls_5) (syntax.TAS _x_2_0 _x_2_1 _x_2_2 -> unitype.lift_pos_TAS_application_with_offered_type modules_0 cons_vars_1 off_type_args_1_1 type_3 subst_4 ls_5) ) (syntax.TAS _x_1_0 off_type_args_1_1 _x_1_2 -> case type_3 (syntax.TA _x_2_0 _x_2_1 -> unitype.lift_pos_TA_application_with_offered_type modules_0 cons_vars_1 off_type_args_1_1 type_3 subst_4 ls_5) (syntax.TAS _x_2_0 _x_2_1 _x_2_2 -> unitype.lift_pos_TAS_application_with_offered_type modules_0 cons_vars_1 off_type_args_1_1 type_3 subst_4 ls_5) ) (_ -> unitype.lift_pos_type_with_offered_type modules_0 cons_vars_1 _x_2 type_3 subst_4 ls_5)
unitype.lift_pos_atype_with_offered_type !modules_0 !cons_vars_1 !_x_2 !attr_type_3 !subst_4 !ls_5 = case _x_2 (syntax._AType _x_1_0 off_type_1_1 -> case _x_1_0 (syntax.TA_Multi -> case attr_type_3 (syntax._AType at_attribute_3_0 at_type_3_1 -> case at_attribute_3_0 (syntax.TA_Multi -> let _x_5_0 = unitype.lift_pos_type_with_offered_type modules_0 cons_vars_1 off_type_1_1 at_type_3_1 subst_4 ls_5 in case (select _x_5_0::_Tuple4 0) (True -> <{_Tuple4!15}> True (update attr_type_3::syntax._AType [1:select _x_5_0::_Tuple4 1]) (select _x_5_0::_Tuple4 2) (select _x_5_0::_Tuple4 3)) (False -> <{_Tuple4!15}> False attr_type_3 (select _x_5_0::_Tuple4 2) (select _x_5_0::_Tuple4 3)) ) ) ) (_ -> case attr_type_3 (syntax._AType at_attribute_2_0 at_type_2_1 -> let _x_3_0 = unitype.lift_pos_type_with_offered_type modules_0 cons_vars_1 off_type_1_1 at_type_2_1 subst_4 ls_5 in case (select _x_3_0::_Tuple4 0) (True -> let at_type_5_0 = select _x_3_0::_Tuple4 1 in case (unitype.typeIsNonCoercible cons_vars_1 at_type_5_0) (True -> <{_Tuple4!15}> True (update attr_type_3::syntax._AType [1:at_type_5_0]) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) (False -> let ls_7_0 = select _x_3_0::_Tuple4 3 in <{_Tuple4!15}> True (update attr_type_3::syntax._AType [0:syntax.TA_TempVar (select ls_7_0::unitype._LiftState 0),1:at_type_5_0]) (select _x_3_0::_Tuple4 2) (update ls_7_0::unitype._LiftState [0:<{StdInt.+_6}> (select ls_7_0::unitype._LiftState 0) StdInt.one_11])) ) (False -> case (unitype.typeIsNonCoercible cons_vars_1 (select _x_3_0::_Tuple4 1)) (True -> <{_Tuple4!15}> False attr_type_3 (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) (False -> let ls_6_0 = select _x_3_0::_Tuple4 3 in <{_Tuple4!15}> True (update attr_type_3::syntax._AType [0:syntax.TA_TempVar (select ls_6_0::unitype._LiftState 0)]) (select _x_3_0::_Tuple4 2) (update ls_6_0::unitype._LiftState [0:<{StdInt.+_6}> (select ls_6_0::unitype._LiftState 0) StdInt.one_11])) ) ) )) 
unitype.lift_pos_type_with_offered_type !modules_0 !cons_vars_1 !_x_2 !type_3 !subst_4 !ls_5 = case _x_2 (syntax.TempV _x_1_0 -> unitype.lift_118 modules_0 cons_vars_1 type_3 subst_4 ls_5) (<{syntax.:@:}> _x_1_0 _x_1_1 -> unitype.lift_118 modules_0 cons_vars_1 type_3 subst_4 ls_5) (_ -> case type_3 (syntax.TempV tv_number_1_0 -> let _x_2_0 = _SystemArray.uselect_6 subst_4 tv_number_1_0, type_2_1 = select _x_2_0::_Tuple2 0, subst_2_2 = select _x_2_0::_Tuple2 1 in <{unitype._c;1301;7_200}> type_2_1 subst_2_2 ls_5 modules_0 cons_vars_1 _x_2) (<{syntax.-->}> arg_type0_1_0 res_type0_1_1 -> case _x_2 (<{syntax.-->}> _x_2_0 off_res_type_2_1 -> let _x_3_0 = unitype.lift_119 modules_0 cons_vars_1 arg_type0_1_0 subst_4 ls_5 in case (select _x_3_0::_Tuple4 0) (True -> let subst_5_0 = select _x_3_0::_Tuple4 2, ls_5_1 = select _x_3_0::_Tuple4 3, _x_5_2 = unitype.lift_pos_atype_with_offered_type modules_0 cons_vars_1 off_res_type_2_1 res_type0_1_1 subst_5_0 ls_5_1 in case (select _x_5_2::_Tuple4 0) (True -> <{_Tuple4!15}> True (<{syntax.-->}> (select _x_3_0::_Tuple4 1) (select _x_5_2::_Tuple4 1)) (select _x_5_2::_Tuple4 2) (select _x_5_2::_Tuple4 3)) (False -> <{_Tuple4!15}> True (<{syntax.-->}> (select _x_3_0::_Tuple4 1) res_type0_1_1) (select _x_5_2::_Tuple4 2) (select _x_5_2::_Tuple4 3)) ) (False -> let subst_5_0 = select _x_3_0::_Tuple4 2, ls_5_1 = select _x_3_0::_Tuple4 3, _x_5_2 = unitype.lift_pos_atype_with_offered_type modules_0 cons_vars_1 off_res_type_2_1 res_type0_1_1 subst_5_0 ls_5_1 in case (select _x_5_2::_Tuple4 0) (True -> <{_Tuple4!15}> True (<{syntax.-->}> arg_type0_1_0 (select _x_5_2::_Tuple4 1)) (select _x_5_2::_Tuple4 2) (select _x_5_2::_Tuple4 3)) (False -> <{_Tuple4!15}> False type_3 (select _x_5_2::_Tuple4 2) (select _x_5_2::_Tuple4 3)) ) ) ) (syntax.TA _x_1_0 _x_1_1 -> case _x_2 (syntax.TA _x_2_0 _x_2_1 -> case ls_5 (unitype._LiftState ls_next_attr_3_0 ls_type_heaps_3_1 ls_td_infos_3_2 -> let _x_4_0 = type.tryToExpand _x_2 syntax.TA_Multi modules_0 ls_type_heaps_3_1, _x_4_1 = type.tryToExpand type_3 syntax.TA_Multi modules_0 (select _x_4_0::_Tuple3 2) in unitype.lift_pos_type_application_with_offered_type modules_0 cons_vars_1 (select _x_4_0::_Tuple3 1) (select _x_4_1::_Tuple3 1) subst_4 (update ls_5::unitype._LiftState [1:select _x_4_1::_Tuple3 2])) ) (syntax.TAS _x_2_0 _x_2_1 _x_2_2 -> case ls_5 (unitype._LiftState ls_next_attr_3_0 ls_type_heaps_3_1 ls_td_infos_3_2 -> let _x_4_0 = type.tryToExpand _x_2 syntax.TA_Multi modules_0 ls_type_heaps_3_1, _x_4_1 = type.tryToExpand type_3 syntax.TA_Multi modules_0 (select _x_4_0::_Tuple3 2) in unitype.lift_pos_type_application_with_offered_type modules_0 cons_vars_1 (select _x_4_0::_Tuple3 1) (select _x_4_1::_Tuple3 1) subst_4 (update ls_5::unitype._LiftState [1:select _x_4_1::_Tuple3 2])) ) ) (syntax.TAS _x_1_0 _x_1_1 _x_1_2 -> case _x_2 (syntax.TA _x_2_0 _x_2_1 -> case ls_5 (unitype._LiftState ls_next_attr_3_0 ls_type_heaps_3_1 ls_td_infos_3_2 -> let _x_4_0 = type.tryToExpand _x_2 syntax.TA_Multi modules_0 ls_type_heaps_3_1, _x_4_1 = type.tryToExpand type_3 syntax.TA_Multi modules_0 (select _x_4_0::_Tuple3 2) in unitype.lift_pos_type_application_with_offered_type modules_0 cons_vars_1 (select _x_4_0::_Tuple3 1) (select _x_4_1::_Tuple3 1) subst_4 (update ls_5::unitype._LiftState [1:select _x_4_1::_Tuple3 2])) ) (syntax.TAS _x_2_0 _x_2_1 _x_2_2 -> case ls_5 (unitype._LiftState ls_next_attr_3_0 ls_type_heaps_3_1 ls_td_infos_3_2 -> let _x_4_0 = type.tryToExpand _x_2 syntax.TA_Multi modules_0 ls_type_heaps_3_1, _x_4_1 = type.tryToExpand type_3 syntax.TA_Multi modules_0 (select _x_4_0::_Tuple3 2) in unitype.lift_pos_type_application_with_offered_type modules_0 cons_vars_1 (select _x_4_0::_Tuple3 1) (select _x_4_1::_Tuple3 1) subst_4 (update ls_5::unitype._LiftState [1:select _x_4_1::_Tuple3 2])) ) ) (syntax.TArrow1 arg_type_1_0 -> let _x_2_0 = unitype.lift_119 modules_0 cons_vars_1 arg_type_1_0 subst_4 ls_5 in case (select _x_2_0::_Tuple4 0) (True -> <{_Tuple4!15}> True (syntax.TArrow1 (select _x_2_0::_Tuple4 1)) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (False -> <{_Tuple4!15}> False type_3 (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) ) (<{syntax.:@:}> _x_1_0 types_1_1 -> case _x_1_0 (syntax.TempCV temp_var_2_0 -> unitype.lift_118 modules_0 cons_vars_1 type_3 subst_4 ls_5) ) (syntax.TFA vars_1_0 type_1_1 -> StdMisc.abort "lift_pos_type_with_offered_type TFA") (_ -> <{_Tuple4!15}> False type_3 subst_4 ls_5))
<{unitype._c;1301;7_200}> !type_0 !subst_1 !ls_2 modules_3 cons_vars_4 _x_5 = case type_0 (syntax.TE -> <{_Tuple4!15}> False type_0 subst_1 ls_2) (syntax.TLiftedSubst type_1_0 -> let _x_2_0 = unitype.lift_pos_type_with_offered_type modules_3 cons_vars_4 _x_5 type_1_0 subst_1 ls_2 in <{_Tuple4!15}> True (select _x_2_0::_Tuple4 1) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (_ -> let _x_1_0 = unitype.lift_pos_type_with_offered_type modules_3 cons_vars_4 _x_5 type_0 subst_1 ls_2 in <{_Tuple4!15}> True (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3))
unitype.lift_offered_substitutions_args_103 !_x_0 !_x_1 common_defs_2 cons_vars_3 subst_4 ls_5 = case _x_0 (_predefined._Cons off_arg_1_0 off_args_1_1 -> case _x_1 (_predefined._Cons dem_arg_2_0 dem_args_2_1 -> let _x_3_0 = unitype.lift_offered_substitutions_args_103 off_args_1_1 dem_args_2_1 common_defs_2 cons_vars_3 subst_4 ls_5 in unitype.lift_offered_substitutions off_arg_1_0 dem_arg_2_0 common_defs_2 cons_vars_3 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> <{_Tuple2!3}> subst_4 ls_5) ) 
unitype.lift_offered_substitutions_type_application !off_type_index_0 off_args_1 !dem_type_index_2 dem_args_3 type_arity_4::I !common_defs_5 !cons_vars_6 !subst_7 !ls_8 = case dem_type_index_2 (syntax._Global glob_object_1_0 glob_module_1_1 -> case (<{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) off_type_index_0 dem_type_index_2) (True -> case (unitype.has_no_ArrowKind (select (unitype.select_150 (_SystemArray.select_43 (select ls_8::unitype._LiftState 2) glob_module_1_1) glob_object_1_0)::syntax._TypeDefInfo 0)) (True -> let ls_type_heaps_4_0 = select ls_8::unitype._LiftState 1, ls_td_infos_4_1 = select ls_8::unitype._LiftState 2, _x_4_2 = analunitypes.typeProperties glob_object_1_0 glob_module_1_1 _predefined._Nil _predefined._Nil common_defs_5 (select ls_type_heaps_4_0::syntax._TypeHeaps 0) ls_td_infos_4_1 in case (unitype.is_positive_sign_104 (select (select _x_4_2::_Tuple3 0)::syntax._TypeSymbProperties 0) type_arity_4) (True -> unitype.lift_offered_substitutions_args_103 off_args_1 dem_args_3 common_defs_5 cons_vars_6 subst_7 (update ls_8::unitype._LiftState [1:update ls_type_heaps_4_0::syntax._TypeHeaps [0:select _x_4_2::_Tuple3 1],2:select _x_4_2::_Tuple3 2])) (False -> <{_Tuple2!3}> subst_7 (update ls_8::unitype._LiftState [1:update ls_type_heaps_4_0::syntax._TypeHeaps [0:select _x_4_2::_Tuple3 1],2:select _x_4_2::_Tuple3 2])) ) (False -> <{_Tuple2!3}> subst_7 ls_8) ) (False -> <{_Tuple2!3}> subst_7 ls_8) ) 
unitype.lift_offered_substitutions !_x_0 !_x_1 !common_defs_2 !cons_vars_3 !subst_4 !ls_5 = case _x_0 (syntax._AType at_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax.TA off_cons_2_0 off_args_2_1 -> case _x_1 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (syntax.TA _x_4_0 dem_args_4_1 -> case _x_4_0 (syntax._TypeSymbIdent type_ident_5_0 type_arity_5_1 type_index_5_2 type_prop_5_3 -> unitype.lift_offered_substitutions_type_application (select off_cons_2_0::syntax._TypeSymbIdent 2) off_args_2_1 type_index_5_2 dem_args_4_1 type_arity_5_1 common_defs_2 cons_vars_3 subst_4 ls_5) ) (syntax.TAS _x_4_0 dem_args_4_1 _x_4_2 -> case _x_4_0 (syntax._TypeSymbIdent type_ident_5_0 type_arity_5_1 type_index_5_2 type_prop_5_3 -> unitype.lift_offered_substitutions_type_application (select off_cons_2_0::syntax._TypeSymbIdent 2) off_args_2_1 type_index_5_2 dem_args_4_1 type_arity_5_1 common_defs_2 cons_vars_3 subst_4 ls_5) ) ) ) (syntax.TAS off_cons_2_0 off_args_2_1 _x_2_2 -> case _x_1 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (syntax.TA _x_4_0 dem_args_4_1 -> case _x_4_0 (syntax._TypeSymbIdent type_ident_5_0 type_arity_5_1 type_index_5_2 type_prop_5_3 -> unitype.lift_offered_substitutions_type_application (select off_cons_2_0::syntax._TypeSymbIdent 2) off_args_2_1 type_index_5_2 dem_args_4_1 type_arity_5_1 common_defs_2 cons_vars_3 subst_4 ls_5) ) (syntax.TAS _x_4_0 dem_args_4_1 _x_4_2 -> case _x_4_0 (syntax._TypeSymbIdent type_ident_5_0 type_arity_5_1 type_index_5_2 type_prop_5_3 -> unitype.lift_offered_substitutions_type_application (select off_cons_2_0::syntax._TypeSymbIdent 2) off_args_2_1 type_index_5_2 dem_args_4_1 type_arity_5_1 common_defs_2 cons_vars_3 subst_4 ls_5) ) ) ) (<{syntax.-->}> _x_2_0 atype1_2_1 -> case _x_1 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (<{syntax.-->}> _x_4_0 atype2_4_1 -> unitype.lift_offered_substitutions atype1_2_1 atype2_4_1 common_defs_2 cons_vars_3 subst_4 ls_5) ) ) (syntax.TempV _x_2_0 -> case _x_1 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (syntax.TempV _x_4_0 -> <{_Tuple2!3}> subst_4 ls_5) ) ) (_ -> case _x_1 (syntax._AType at_attribute_2_0 _x_2_1 -> case _x_2_1 (syntax.TempV tv_number_3_0 -> let _x_4_0 = _SystemArray.uselect_6 subst_4 tv_number_3_0, subst_type_4_1 = select _x_4_0::_Tuple2 0, subst_4_2 = select _x_4_0::_Tuple2 1 in <{unitype._c;1222;7_201}> subst_type_4_1 subst_4_2 ls_5 common_defs_2 cons_vars_3 _x_1_1 tv_number_3_0) ) (_ -> case _x_1_1 (syntax.TempV _x_2_0 -> <{_Tuple2!3}> subst_4 ls_5) (syntax.TV _x_2_0 -> case _x_2_0 (syntax._TypeVar tv_ident_3_0 tv_info_ptr_3_1 -> case ls_5 (unitype._LiftState ls_next_attr_4_0 ls_type_heaps_4_1 ls_td_infos_4_2 -> let _x_5_0 = Heap.readPtr tv_info_ptr_3_1 (select ls_type_heaps_4_1::syntax._TypeHeaps 0) in unitype.lift_offered_substitutions (syntax._AType at_attribute_1_0 (select (select _x_5_0::_Tuple2 0)::_Tuple1 0)) _x_1 common_defs_2 cons_vars_3 subst_4 (update ls_5::unitype._LiftState [1:update ls_type_heaps_4_1::syntax._TypeHeaps [0:select _x_5_0::_Tuple2 1]])) ) ) ))) (_ -> case _x_1 (syntax._AType at_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax.TV _x_2_0 -> case _x_2_0 (syntax._TypeVar tv_ident_3_0 tv_info_ptr_3_1 -> case ls_5 (unitype._LiftState ls_next_attr_4_0 ls_type_heaps_4_1 ls_td_infos_4_2 -> let _x_5_0 = Heap.readPtr tv_info_ptr_3_1 (select ls_type_heaps_4_1::syntax._TypeHeaps 0) in unitype.lift_offered_substitutions _x_0 (syntax._AType at_attribute_1_0 (select (select _x_5_0::_Tuple2 0)::_Tuple1 0)) common_defs_2 cons_vars_3 subst_4 (update ls_5::unitype._LiftState [1:update ls_type_heaps_4_1::syntax._TypeHeaps [0:select _x_5_0::_Tuple2 1]])) ) ) (syntax.TB _x_2_0 -> case _x_0 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (syntax.TB _x_4_0 -> <{_Tuple2!3}> subst_4 ls_5) ) ) ) (_ -> <{_Tuple2!3}> subst_4 ls_5))
<{unitype._c;1222;7_201}> !subst_type_0 !subst_1 !ls_2 common_defs_3 cons_vars_4 _x_5 tv_number_6::I = case subst_type_0 (syntax.TLiftedSubst _x_1_0 -> <{_Tuple2!3}> subst_1 ls_2) (_ -> let !lifted_subst_type_1_0 = _predefined._dummyForStrictAlias (select _x_1_1::_Tuple4 1), _x_1_1 = unitype.lift_pos_type_with_offered_type common_defs_3 cons_vars_4 _x_5 subst_type_0 subst_1 ls_2 in <{_Tuple2!3}> (_SystemArray.update_5 (select _x_1_1::_Tuple4 2) tv_number_6 (syntax.TLiftedSubst lifted_subst_type_1_0)) (select _x_1_1::_Tuple4 3))
unitype.liftOfferedSubstitutions !off_type_0 !dem_type_1 !common_defs_2 !cons_vars_3 !next_attr_n_4::I !subst_5 !td_infos_6 !type_heaps_7 = let _x_1_0 = unitype.lift_offered_substitutions off_type_0 dem_type_1 common_defs_2 cons_vars_3 subst_5 (unitype._LiftState next_attr_n_4 type_heaps_7 td_infos_6), ls_1_1 = select _x_1_0::_Tuple2 1 in <{_Tuple4!15}> (select ls_1_1::unitype._LiftState 0) (select _x_1_0::_Tuple2 0) (select ls_1_1::unitype._LiftState 2) (select ls_1_1::unitype._LiftState 1)
unitype.lift_substitution_76 !var_index_0::I modules_1 cons_vars_2 !subst_3 ls_4 = case (<{StdInt.<_17}> var_index_0 (_SystemArray.size_4 subst_3)) (True -> let _x_2_0 = _SystemArray.uselect_6 subst_3 var_index_0, _x_2_1 = unitype.lift_118 modules_1 cons_vars_2 (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1) ls_4 in unitype.lift_substitution_76 (<{StdInt.+_6}> var_index_0 StdInt.one_11) modules_1 cons_vars_2 (_SystemArray.update_5 (select _x_2_1::_Tuple4 2) var_index_0 (select _x_2_1::_Tuple4 1)) (select _x_2_1::_Tuple4 3)) (False -> _Tuple4 subst_3 (select ls_4::unitype._LiftState 0) (select ls_4::unitype._LiftState 1) (select ls_4::unitype._LiftState 2)) 
unitype.liftSubstitution !subst_0 !modules_1 !cons_vars_2 !attr_store_3::I !type_heaps_4 !td_infos_5 = unitype.lift_substitution_76 0 modules_1 cons_vars_2 subst_0 (unitype._LiftState attr_store_3 type_heaps_4 td_infos_5)
unitype.lift_substitution_105 !var_index_0::I modules_1 cons_vars_2 !subst_3 ls_4 = case (<{StdInt.<_17}> var_index_0 (_SystemArray.size_4 subst_3)) (True -> let _x_2_0 = _SystemArray.uselect_6 subst_3 var_index_0, type_2_1 = select _x_2_0::_Tuple2 0, subst_2_2 = select _x_2_0::_Tuple2 1 in <{unitype._c;1422;15_202}> type_2_1 var_index_0 modules_1 cons_vars_2 subst_2_2 ls_4) (False -> _Tuple4 subst_3 (select ls_4::unitype._LiftState 0) (select ls_4::unitype._LiftState 1) (select ls_4::unitype._LiftState 2)) 
<{unitype._c;1422;15_202}> !type_0 !var_index_1::I modules_2 cons_vars_3 !subst_4 ls_5 = case type_0 (syntax.TLiftedSubst type_1_0 -> unitype.lift_substitution_105 (<{StdInt.+_6}> var_index_1 StdInt.one_11) modules_2 cons_vars_3 (_SystemArray.update_5 subst_4 var_index_1 type_1_0) ls_5) (_ -> let _x_1_0 = unitype.lift_118 modules_2 cons_vars_3 type_0 subst_4 ls_5 in unitype.lift_substitution_105 (<{StdInt.+_6}> var_index_1 StdInt.one_11) modules_2 cons_vars_3 (_SystemArray.update_5 (select _x_1_0::_Tuple4 2) var_index_1 (select _x_1_0::_Tuple4 1)) (select _x_1_0::_Tuple4 3))
unitype.liftRemainingSubstitutions !subst_0 !modules_1 !cons_vars_2 !attr_store_3::I !type_heaps_4 !td_infos_5 = unitype.lift_substitution_105 0 modules_1 cons_vars_2 subst_0 (unitype._LiftState attr_store_3 type_heaps_4 td_infos_5)
unitype.fold_st_129 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> unitype.fold_st_129 op_0 x_1_1 (op_0 a_1_0 st_2)) 
unitype.check_demanded_attribute_vars_90 !_vArray_0 !_vArray_1 av_group_nr_2::I !_x_3 partition_4 !_x_5 = case _x_3 (unitype.CT_Node dem_attr_1_0 left_1_1 right_1_2 -> case _x_5 (_Tuple2 ok_2_0 coercions_2_1 -> let _x_3_0 = unitype.check_existentional_attribute_var_89 _vArray_0 _vArray_1 partition_4 dem_attr_1_0 (_Tuple2 ok_2_0 (select _vArray_1::<{_SystemArray.Array;}> 5 coercions_2_1 av_group_nr_2 unitype.CT_Existential)) in case (select _x_3_0::_Tuple2 0) (True -> unitype.check_demanded_attribute_vars_90 _vArray_0 _vArray_1 av_group_nr_2 right_1_2 partition_4 (unitype.check_demanded_attribute_vars_90 _vArray_0 _vArray_1 av_group_nr_2 left_1_1 partition_4 (_Tuple2 True (select _x_3_0::_Tuple2 1)))) (False -> _Tuple2 False (select _x_3_0::_Tuple2 1)) ) ) (unitype.CT_Empty -> _x_5) (_ -> case _x_5 (_Tuple2 ok_1_0 coercions_1_1 -> _Tuple2 False coercions_1_1) )
unitype.check_existentional_attribute_var_89 !_vArray_0 !_vArray_1 partition_2 tmp_attr_3::I !_x_4 = case _x_4 (_Tuple2 ok_1_0 coercions_1_1 -> let av_group_nr_2_0 = select _vArray_0::<{_SystemArray.Array;}> 3 partition_2 tmp_attr_3, _x_2_1::I = select _vArray_1::<{_SystemArray.Array;}> 6 coercions_1_1 av_group_nr_2_0 in unitype.check_demanded_attribute_vars_90 _vArray_0 _vArray_1 av_group_nr_2_0 (select _x_2_1::_Tuple2 0) partition_2 (_Tuple2 ok_1_0 (select _x_2_1::_Tuple2 1))) 
unitype.check_demanded_attribute_vars_170 !_vArray_0 av_group_nr_1::I !_x_2 partition_3 !_x_4 = case _x_2 (unitype.CT_Node dem_attr_1_0 left_1_1 right_1_2 -> case _x_4 (_Tuple2 ok_2_0 coercions_2_1 -> let _x_3_0 = unitype.check_existentional_attribute_var_169 _vArray_0 partition_3 dem_attr_1_0 (_Tuple2 ok_2_0 (select _vArray_0::<{_SystemArray.Array;}> 5 coercions_2_1 av_group_nr_1 unitype.CT_Existential)) in case (select _x_3_0::_Tuple2 0) (True -> unitype.check_demanded_attribute_vars_170 _vArray_0 av_group_nr_1 right_1_2 partition_3 (unitype.check_demanded_attribute_vars_170 _vArray_0 av_group_nr_1 left_1_1 partition_3 (_Tuple2 True (select _x_3_0::_Tuple2 1)))) (False -> _Tuple2 False (select _x_3_0::_Tuple2 1)) ) ) (unitype.CT_Empty -> _x_4) (_ -> case _x_4 (_Tuple2 ok_1_0 coercions_1_1 -> _Tuple2 False coercions_1_1) )
unitype.check_existentional_attribute_var_169 !_vArray_0 partition_1 tmp_attr_2::I !_x_3 = case _x_3 (_Tuple2 ok_1_0 coercions_1_1 -> let av_group_nr_2_0 = _SystemArray.select_11 partition_1 tmp_attr_2, _x_2_1::I = select _vArray_0::<{_SystemArray.Array;}> 6 coercions_1_1 av_group_nr_2_0 in unitype.check_demanded_attribute_vars_170 _vArray_0 av_group_nr_2_0 (select _x_2_1::_Tuple2 0) partition_1 (_Tuple2 ok_1_0 (select _x_2_1::_Tuple2 1))) 
unitype.fold_st_171 !_vArray_0 partition_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> unitype.fold_st_171 _vArray_0 partition_1 x_1_1 (unitype.check_existentional_attribute_var_169 _vArray_0 partition_1 a_1_0 st_3)) 
unitype.check_demanded_attribute_vars_174 av_group_nr_0::I !_x_1 partition_2 !_x_3 = case _x_1 (unitype.CT_Node dem_attr_1_0 left_1_1 right_1_2 -> case _x_3 (_Tuple2 ok_2_0 coercions_2_1 -> let _x_3_0 = unitype.check_existentional_attribute_var_173 partition_2 dem_attr_1_0 (_Tuple2 ok_2_0 (_SystemArray.update_5 coercions_2_1 av_group_nr_0 unitype.CT_Existential)) in case (select _x_3_0::_Tuple2 0) (True -> unitype.check_demanded_attribute_vars_174 av_group_nr_0 right_1_2 partition_2 (unitype.check_demanded_attribute_vars_174 av_group_nr_0 left_1_1 partition_2 (_Tuple2 True (select _x_3_0::_Tuple2 1)))) (False -> _Tuple2 False (select _x_3_0::_Tuple2 1)) ) ) (unitype.CT_Empty -> _x_3) (_ -> case _x_3 (_Tuple2 ok_1_0 coercions_1_1 -> _Tuple2 False coercions_1_1) )
unitype.check_existentional_attribute_var_173 !partition_0 !tmp_attr_1::I !_x_2 = case _x_2 (_Tuple2 ok_1_0 coercions_1_1 -> let av_group_nr_2_0 = _SystemArray.select_11 partition_0 tmp_attr_1, _x_2_1::I = _SystemArray.uselect_6 coercions_1_1 av_group_nr_2_0 in unitype.check_demanded_attribute_vars_174 av_group_nr_2_0 (select _x_2_1::_Tuple2 0) partition_0 (_Tuple2 ok_1_0 (select _x_2_1::_Tuple2 1))) 
unitype.fold_st_172 partition_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> unitype.fold_st_172 partition_0 x_1_1 (unitype.check_existentional_attribute_var_173 partition_0 a_1_0 st_2)) 
unitype.checkExistentionalAttributeVars !tmp_attr_vars_0 !partition_1 !coercions_2 = unitype.fold_st_172 partition_1 tmp_attr_vars_0 (_Tuple2 True coercions_2)
unitype.copy_130 !_vArray_0 !_vArray_1 copy_element_function_2 array_3 array_copy_4 !i_5::I !n_6::I = case (<{StdInt.==_16}> i_5 n_6) (True -> _Tuple2 array_copy_4 array_3) (False -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 array_3 i_5, _x_2_1 = copy_element_function_2 (select _x_2_0::_Tuple2 0) in unitype.copy_130 _vArray_0 _vArray_1 copy_element_function_2 (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_2_0::_Tuple2 1) i_5 (select _x_2_1::_Tuple2 1)) (select _vArray_1::<{_SystemArray.Array;}> 5 array_copy_4 i_5 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> i_5 1) n_6) 
unitype.copy_coercion_tree_92 !_x_0 = case _x_0 (unitype.CT_Node attr_1_0 left_1_1 right_1_2 -> let _x_2_0 = unitype.copy_coercion_tree_92 left_1_1, _x_2_1 = unitype.copy_coercion_tree_92 right_1_2 in _Tuple2 (unitype.CT_Node attr_1_0 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (unitype.CT_Node attr_1_0 (select _x_2_0::_Tuple2 1) (select _x_2_1::_Tuple2 1))) (unitype.CT_Empty -> _Tuple2 unitype.CT_Empty _x_0) (unitype.CT_Unique -> _Tuple2 unitype.CT_Unique _x_0) (unitype.CT_NonUnique -> _Tuple2 unitype.CT_NonUnique _x_0) (unitype.CT_Existential -> _Tuple2 unitype.CT_Existential _x_0) 
unitype.copy_175 !_vArray_0 !_vArray_1 array_2 array_copy_3 !i_4::I !n_5::I = case (<{StdInt.==_16}> i_4 n_5) (True -> _Tuple2 array_copy_3 array_2) (False -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 array_2 i_4, _x_2_1 = unitype.copy_coercion_tree_92 (select _x_2_0::_Tuple2 0) in unitype.copy_175 _vArray_0 _vArray_1 (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_2_0::_Tuple2 1) i_4 (select _x_2_1::_Tuple2 1)) (select _vArray_1::<{_SystemArray.Array;}> 5 array_copy_3 i_4 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> i_4 1) n_5) 
unitype.copy_coercion_trees_91 !_vArray_0 !_vArray_1 trees_2 = let _x_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 7 trees_2, n_1_1 = select _x_1_0::_Tuple2 0 in unitype.copy_175 _vArray_0 _vArray_1 (select _x_1_0::_Tuple2 1) (select _vArray_1::<{_SystemArray.Array;}> 0 n_1_1) 0 n_1_1
unitype.copy_177 !_vArray_0 array_1 array_copy_2 !i_3::I !n_4::I = case (<{StdInt.==_16}> i_3 n_4) (True -> _Tuple2 array_copy_2 array_1) (False -> let _x_2_0 = _SystemArray.uselect_6 array_1 i_3, _x_2_1 = unitype.copy_coercion_tree_92 (select _x_2_0::_Tuple2 0) in unitype.copy_177 _vArray_0 (_SystemArray.update_5 (select _x_2_0::_Tuple2 1) i_3 (select _x_2_1::_Tuple2 1)) (select _vArray_0::<{_SystemArray.Array;}> 5 array_copy_2 i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> i_3 1) n_4) 
unitype.copy_coercion_trees_176 !_vArray_0 !trees_1 = let _x_1_0::I = _SystemArray.usize_7 trees_1, n_1_1 = select _x_1_0::_Tuple2 0 in unitype.copy_177 _vArray_0 (select _x_1_0::_Tuple2 1) (select _vArray_0::<{_SystemArray.Array;}> 0 n_1_1) 0 n_1_1
unitype.copy_179 array_0 array_copy_1 !i_2::I !n_3::I = case (<{StdInt.==_16}> i_2 n_3) (True -> _Tuple2 array_copy_1 array_0) (False -> let _x_2_0 = _SystemArray.uselect_6 array_0 i_2, _x_2_1 = unitype.copy_coercion_tree_92 (select _x_2_0::_Tuple2 0) in unitype.copy_179 (_SystemArray.update_5 (select _x_2_0::_Tuple2 1) i_2 (select _x_2_1::_Tuple2 1)) (_SystemArray.update_5 array_copy_1 i_2 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> i_2 1) n_3) 
unitype.copy_coercion_trees_178 !trees_0 = let _x_1_0::I = _SystemArray.usize_7 trees_0, n_1_1 = select _x_1_0::_Tuple2 0 in unitype.copy_179 (select _x_1_0::_Tuple2 1) (_SystemArray._createArray_0 n_1_1) 0 n_1_1
unitype.copyCoercions !coercions_0 = case coercions_0 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> let _x_2_0 = unitype.copy_coercion_trees_178 coer_demanded_1_0, _x_2_1 = unitype.copy_coercion_trees_178 coer_offered_1_1 in _Tuple2 (update coercions_0::unitype._Coercions [0:select _x_2_0::_Tuple2 1,1:select _x_2_1::_Tuple2 1]) (update coercions_0::unitype._Coercions [0:select _x_2_0::_Tuple2 0,1:select _x_2_1::_Tuple2 0])) 
unitype.lift_substitution_77 !var_index_0::I !n_type_variables_1::I modules_2 cons_vars_3 subst_4 ls_5 = case (<{StdInt.<_17}> var_index_0 n_type_variables_1) (True -> let _x_2_0 = _SystemArray.uselect_6 subst_4 var_index_0, _x_2_1 = unitype.lift_118 modules_2 cons_vars_3 (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1) ls_5 in unitype.lift_substitution_77 (<{StdInt.+_6}> var_index_0 StdInt.one_11) n_type_variables_1 modules_2 cons_vars_3 (_SystemArray.update_5 (select _x_2_1::_Tuple4 2) var_index_0 (select _x_2_1::_Tuple4 1)) (select _x_2_1::_Tuple4 3)) (False -> _Tuple2 subst_4 ls_5) 
unitype.lift_marked_substitutions_78 !_vArray_0 !var_index_1::I n_type_variables_2::I marked_new_vars_3 modules_4 cons_vars_5 !subst_6 ls_7 = case (<{StdInt.<_17}> var_index_1 (_SystemArray.size_4 subst_6)) (True -> let mi_2_0::I = <{StdInt.-_7}> var_index_1 n_type_variables_2 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select _vArray_0::<{_SystemArray.Array;}> 3 marked_new_vars_3 (<{StdInt.>>}> mi_2_0 5)) (<{StdInt.<<}> 1 (StdInt.bitand mi_2_0 31))) 0)) (True -> let _x_4_0 = _SystemArray.uselect_6 subst_6 var_index_1, _x_4_1 = unitype.lift_118 modules_4 cons_vars_5 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1) ls_7 in unitype.lift_marked_substitutions_78 _vArray_0 (<{StdInt.+_6}> var_index_1 StdInt.one_11) n_type_variables_2 marked_new_vars_3 modules_4 cons_vars_5 (_SystemArray.update_5 (select _x_4_1::_Tuple4 2) var_index_1 (select _x_4_1::_Tuple4 1)) (select _x_4_1::_Tuple4 3)) (False -> unitype.lift_marked_substitutions_78 _vArray_0 (<{StdInt.+_6}> var_index_1 StdInt.one_11) n_type_variables_2 marked_new_vars_3 modules_4 cons_vars_5 subst_6 ls_7) ) (False -> _Tuple2 subst_6 ls_7) 
unitype.remove_unmarked_substitutions_79 !_vArray_0 !_vArray_1 !var_index_2::I n_type_variables_3::I marked_new_vars_4 subst_5 ls_6 = case (<{StdInt.<_17}> var_index_2 (select _vArray_0::<{_SystemArray.Array;}> 4 subst_5)) (True -> let mi_2_0::I = <{StdInt.-_7}> var_index_2 n_type_variables_3 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select _vArray_1::<{_SystemArray.Array;}> 3 marked_new_vars_4 (<{StdInt.>>}> mi_2_0 5)) (<{StdInt.<<}> 1 (StdInt.bitand mi_2_0 31))) 0)) (True -> unitype.remove_unmarked_substitutions_79 _vArray_0 _vArray_1 (<{StdInt.+_6}> var_index_2 StdInt.one_11) n_type_variables_3 marked_new_vars_4 subst_5 ls_6) (False -> unitype.remove_unmarked_substitutions_79 _vArray_0 _vArray_1 (<{StdInt.+_6}> var_index_2 StdInt.one_11) n_type_variables_3 marked_new_vars_4 (select _vArray_0::<{_SystemArray.Array;}> 5 subst_5 var_index_2 syntax.TE) ls_6) ) (False -> _Tuple4 subst_5 (select ls_6::unitype._LiftState 0) (select ls_6::unitype._LiftState 1) (select ls_6::unitype._LiftState 2)) 
unitype.lift_marked_substitutions_180 !var_index_0::I n_type_variables_1::I marked_new_vars_2 modules_3 cons_vars_4 !subst_5 ls_6 = case (<{StdInt.<_17}> var_index_0 (_SystemArray.size_4 subst_5)) (True -> let mi_2_0::I = <{StdInt.-_7}> var_index_0 n_type_variables_1 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (_SystemArray.select_11 marked_new_vars_2 (<{StdInt.>>}> mi_2_0 5)) (<{StdInt.<<}> 1 (StdInt.bitand mi_2_0 31))) 0)) (True -> let _x_4_0 = _SystemArray.uselect_6 subst_5 var_index_0, _x_4_1 = unitype.lift_118 modules_3 cons_vars_4 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1) ls_6 in unitype.lift_marked_substitutions_180 (<{StdInt.+_6}> var_index_0 StdInt.one_11) n_type_variables_1 marked_new_vars_2 modules_3 cons_vars_4 (_SystemArray.update_5 (select _x_4_1::_Tuple4 2) var_index_0 (select _x_4_1::_Tuple4 1)) (select _x_4_1::_Tuple4 3)) (False -> unitype.lift_marked_substitutions_180 (<{StdInt.+_6}> var_index_0 StdInt.one_11) n_type_variables_1 marked_new_vars_2 modules_3 cons_vars_4 subst_5 ls_6) ) (False -> _Tuple2 subst_5 ls_6) 
unitype.remove_unmarked_substitutions_181 !_vArray_0 !var_index_1::I n_type_variables_2::I marked_new_vars_3 !subst_4 ls_5 = case (<{StdInt.<_17}> var_index_1 (_SystemArray.size_4 subst_4)) (True -> let mi_2_0::I = <{StdInt.-_7}> var_index_1 n_type_variables_2 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select _vArray_0::<{_SystemArray.Array;}> 3 marked_new_vars_3 (<{StdInt.>>}> mi_2_0 5)) (<{StdInt.<<}> 1 (StdInt.bitand mi_2_0 31))) 0)) (True -> unitype.remove_unmarked_substitutions_181 _vArray_0 (<{StdInt.+_6}> var_index_1 StdInt.one_11) n_type_variables_2 marked_new_vars_3 subst_4 ls_5) (False -> unitype.remove_unmarked_substitutions_181 _vArray_0 (<{StdInt.+_6}> var_index_1 StdInt.one_11) n_type_variables_2 marked_new_vars_3 (_SystemArray.update_5 subst_4 var_index_1 syntax.TE) ls_5) ) (False -> _Tuple4 subst_4 (select ls_5::unitype._LiftState 0) (select ls_5::unitype._LiftState 1) (select ls_5::unitype._LiftState 2)) 
unitype.remove_unmarked_substitutions_182 !var_index_0::I n_type_variables_1::I marked_new_vars_2 !subst_3 ls_4 = case (<{StdInt.<_17}> var_index_0 (_SystemArray.size_4 subst_3)) (True -> let mi_2_0::I = <{StdInt.-_7}> var_index_0 n_type_variables_1 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (_SystemArray.select_11 marked_new_vars_2 (<{StdInt.>>}> mi_2_0 5)) (<{StdInt.<<}> 1 (StdInt.bitand mi_2_0 31))) 0)) (True -> unitype.remove_unmarked_substitutions_182 (<{StdInt.+_6}> var_index_0 StdInt.one_11) n_type_variables_1 marked_new_vars_2 subst_3 ls_4) (False -> unitype.remove_unmarked_substitutions_182 (<{StdInt.+_6}> var_index_0 StdInt.one_11) n_type_variables_1 marked_new_vars_2 (_SystemArray.update_5 subst_3 var_index_0 syntax.TE) ls_4) ) (False -> _Tuple4 subst_3 (select ls_4::unitype._LiftState 0) (select ls_4::unitype._LiftState 1) (select ls_4::unitype._LiftState 2)) 
unitype.liftSubstitutionFunDep !n_type_variables_0::I !marked_new_vars_1 !modules_2 !cons_vars_3 !subst_4 !attr_store_5::I !type_heaps_6 !td_infos_7 = let _x_1_0 = unitype.lift_substitution_77 0 n_type_variables_0 modules_2 cons_vars_3 subst_4 (unitype._LiftState attr_store_5 type_heaps_6 td_infos_7), _x_1_1 = unitype.lift_marked_substitutions_180 n_type_variables_0 n_type_variables_0 marked_new_vars_1 modules_2 cons_vars_3 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1) in unitype.remove_unmarked_substitutions_182 n_type_variables_0 n_type_variables_0 marked_new_vars_1 (select _x_1_1::_Tuple2 0) (select _x_1_1::_Tuple2 1)
unitype.toInt_20::I !_x_0 = case _x_0 (syntax.TA_Unique -> 0) (syntax.TA_TempVar av_number_1_0 -> av_number_1_0) (syntax.TA_Multi -> 1) (syntax.TA_None -> 1) 
<{unitype.<<<_122}> !file_0 !_x_1 = case _x_1 (unitype.CT_Node attr_1_0 left_1_1 right_1_2 -> <{unitype.<<<_122}> (<{StdFile.<<<_37}> (<{StdFile.<<<_36}> (<{StdFile.<<<_37}> (<{unitype.<<<_122}> file_0 left_1_1) ' ') attr_1_0) ' ') right_1_2) (unitype.CT_Unique -> <{StdFile.<<<_38}> file_0 "CT_Unique") (unitype.CT_NonUnique -> <{StdFile.<<<_38}> file_0 "CT_NonUnique") (unitype.CT_Empty -> <{StdFile.<<<_38}> file_0 "##") 
<{unitype.TD;CoercionState}> _x_0::B = _predefined._Nil
<{unitype.TD;TypePosition}> _x_0::B = _predefined._Nil
<{unitype.TD;CoercionTree}> _x_0::B = _predefined._Nil
<{unitype.TD;Coercions}> _x_0::B = _predefined._Nil
<{unitype.TD;BOOLVECT}> _x_0::B = _predefined._Nil
<{unitype.TD;AttributePartition}> _x_0::B = _predefined._Nil
<{unitype.TD;ExpansionState}> _x_0::B = _predefined._Nil
<{unitype.TD;expandType;}> _x_0::B = _predefined._Nil
<{unitype.TD;PartitioningInfo}> _x_0::B = _predefined._Nil
<{unitype.TD;AttributeGroups}> _x_0::B = _predefined._Nil
<{unitype.TD;CoercionTreeRecord}> _x_0::B = _predefined._Nil
<{unitype.TD;LiftState}> _x_0::B = _predefined._Nil
<{unitype.TD;lift;}> _x_0::B = _predefined._Nil

:: unitype.CoercionTree = unitype.CT_Node !a1::I !a2 !a3 | unitype.CT_Empty | unitype.CT_Unique | unitype.CT_NonUnique | unitype.CT_Existential

|| Converted Records
:: unitype._CoercionState = {!unitype.crc_type_heaps, !unitype.crc_coercions, !unitype.crc_td_infos}

:: unitype._Coercions = {!unitype.coer_demanded, !unitype.coer_offered}

:: unitype._ExpansionState = {!unitype.es_type_heaps, !unitype.es_td_infos}

:: <{unitype.expandType;}> = {!unitype.expandType}

:: unitype._PartitioningInfo = {!unitype.pi_marks, !unitype.pi_next_num::I, !unitype.pi_groups, !unitype.pi_deps}

:: unitype._CoercionTreeRecord = {!unitype.tree}

:: unitype._LiftState = {!unitype.ls_next_attr::I, !unitype.ls_type_heaps, !unitype.ls_td_infos}

:: <{unitype.lift;}> = {!unitype.lift}

