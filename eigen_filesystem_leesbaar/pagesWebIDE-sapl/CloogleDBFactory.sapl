|| ?module? CloogleDBFactory


CloogleDBFactory.newTemporaryDb = CloogleDBFactory._TemporaryDB _predefined._Nil _predefined._Nil _predefined._Nil _predefined._Nil _predefined._Nil _predefined._Nil
CloogleDBFactory.foldr_81 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (CloogleDBFactory.foldr_81 op_0 r_1 x_1_1)) 
CloogleDBFactory.foldr_80 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (CloogleDBFactory.foldr_80 op_0 r_1 x_1_1)) 
CloogleDBFactory.foldr_79 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (CloogleDBFactory.foldr_79 op_0 r_1 x_1_1)) 
CloogleDBFactory.foldr_78 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (CloogleDBFactory.foldr_78 op_0 r_1 x_1_1)) 
CloogleDBFactory.foldr_77 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (CloogleDBFactory.foldr_77 op_0 r_1 x_1_1)) 
CloogleDBFactory.foldr_76 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (CloogleDBFactory.foldr_76 op_0 r_1 x_1_1)) 
<{CloogleDBFactory.c;100;60_9}> !<{_v==_0}> !<{_v==_1}> l_2 m_3 !g_l_4 = <{CloogleDBFactory.g_c1;100;73_486}> g_l_4 <{_v==_0}> l_2 <{_v==_1}> m_3
<{CloogleDBFactory.g_c1;100;73_486}> !g_l_0 <{_v==_1}> l_2 <{_v==_3}> m_4 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;100;73_485}> g_h_1_0 <{_v==_1}> l_2 <{_v==_3}> m_4 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;100;73_485}> !g_h_0 !<{_v==_1}> l_2 !<{_v==_3}> m_4 g_t_5 = case g_h_0 (_Tuple3 l`_1_0 m`_1_1 _x_1_2 -> case (case (select <{_v==_1}>::<{StdOverloaded.==;}> 0 l_2 <{l`_1_0}>) (True -> select <{_v==_3}>::<{StdOverloaded.==;}> 0 m_4 <{m`_1_1}>) (False -> False) ) (True -> _predefined._Cons _predefined._Unit (<{CloogleDBFactory.c;100;60_9}> <{_v==_1}> <{_v==_3}> l_2 m_4 g_t_5)) ) (_ -> <{CloogleDBFactory.c;100;60_9}> <{_v==_1}> <{_v==_3}> l_2 m_4 g_t_5)
<{CloogleDBFactory.c;100;60_444}> !<{_v==_0}> l_1 m_2 !g_l_3 = <{CloogleDBFactory.g_c1;100;73_488}> g_l_3 l_1 <{_v==_0}> m_2
<{CloogleDBFactory.g_c1;100;73_488}> !g_l_0 l_1 <{_v==_2}> m_3 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;100;73_487}> g_h_1_0 l_1 <{_v==_2}> m_3 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;100;73_487}> !g_h_0 !l_1 !<{_v==_2}> m_3 g_t_4 = case g_h_0 (_Tuple3 l`_1_0 m`_1_1 _x_1_2 -> case (case (<{StdString.==_2}> l_1 <{l`_1_0}>) (True -> select <{_v==_2}>::<{StdOverloaded.==;}> 0 m_3 <{m`_1_1}>) (False -> False) ) (True -> _predefined._Cons _predefined._Unit (<{CloogleDBFactory.c;100;60_444}> <{_v==_2}> l_1 m_3 g_t_4)) ) (_ -> <{CloogleDBFactory.c;100;60_444}> <{_v==_2}> l_1 m_3 g_t_4)
<{CloogleDBFactory.c;100;60_445}> l_0 m_1 !g_l_2 = <{CloogleDBFactory.g_c1;100;73_490}> g_l_2 l_0 m_1
<{CloogleDBFactory.g_c1;100;73_490}> !g_l_0 l_1 m_2 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;100;73_489}> g_h_1_0 l_1 m_2 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;100;73_489}> !g_h_0 !l_1 m_2 g_t_3 = case g_h_0 (_Tuple3 l`_1_0 m`_1_1 _x_1_2 -> case (case (<{StdString.==_2}> l_1 <{l`_1_0}>) (True -> <{StdString.==_2}> m_2 <{m`_1_1}>) (False -> False) ) (True -> _predefined._Cons _predefined._Unit (<{CloogleDBFactory.c;100;60_445}> l_1 m_2 g_t_3)) ) (_ -> <{CloogleDBFactory.c;100;60_445}> l_1 m_2 g_t_3)
CloogleDBFactory.filterFun_10::B !mods_0 !_x_1 = case _x_1 (CloogleDB.Location l_1_0 m_1_1 _x_1_2 _x_1_3 _x_1_4 -> StdList.isEmpty (<{CloogleDBFactory.c;100;60_445}> l_1_0 m_1_1 mods_0)) (CloogleDB.Builtin _x_1_0 -> True) 
CloogleDBFactory.anon_8 !_x_0 = case _x_0 (_Tuple3 l_1_0 m_1_1 e_1_2 -> CloogleDB.putModule l_1_0 m_1_1 e_1_2) 
CloogleDBFactory.foldr_446 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> CloogleDBFactory.anon_8 a_1_0 (CloogleDBFactory.foldr_446 r_0 x_1_1)) 
CloogleDBFactory.foldr_447 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> CloogleDB.putFunctions a_1_0 (CloogleDBFactory.foldr_447 r_0 x_1_1)) 
CloogleDBFactory.foldr_448 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> CloogleDB.putClasses a_1_0 (CloogleDBFactory.foldr_448 r_0 x_1_1)) 
CloogleDBFactory.foldr_449 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> CloogleDB.putTypes a_1_0 (CloogleDBFactory.foldr_449 r_0 x_1_1)) 
CloogleDBFactory.foldr_450 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> CloogleDB.putInstances a_1_0 (CloogleDBFactory.foldr_450 r_0 x_1_1)) 
CloogleDBFactory.foldr_451 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> CloogleDB.putDerivationss a_1_0 (CloogleDBFactory.foldr_451 r_0 x_1_1)) 
CloogleDBFactory.finaliseDb !tdb_0 !db_1 = let !db_1_0 = CloogleDB.filterLocations (CloogleDBFactory.filterFun_10 (select tdb_0::CloogleDBFactory._TemporaryDB 5)) db_1, !db_1_1 = CloogleDBFactory.foldr_446 db_1_0 (select tdb_0::CloogleDBFactory._TemporaryDB 5), !db_1_2 = CloogleDBFactory.foldr_447 db_1_1 (select tdb_0::CloogleDBFactory._TemporaryDB 0), !db_1_3 = CloogleDBFactory.foldr_448 db_1_2 (select tdb_0::CloogleDBFactory._TemporaryDB 1), !db_1_4 = CloogleDBFactory.foldr_449 db_1_3 (select tdb_0::CloogleDBFactory._TemporaryDB 3), !db_1_5 = CloogleDBFactory.foldr_450 db_1_4 (select tdb_0::CloogleDBFactory._TemporaryDB 2), !db_1_6 = CloogleDBFactory.foldr_451 db_1_5 (select tdb_0::CloogleDBFactory._TemporaryDB 4) in CloogleDB.syncDb db_1_6
CloogleDBFactory.anon_90 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.anon_89 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.flip_88 !f_0 a_1 b_2 = f_0 b_2 a_1
<{CloogleDBFactory.<>_87}>::B !_vEq_0 !x_1 !y_2 = StdBool.not (select (select _vEq_0::<{StdClass.Eq;}> 0)::<{StdOverloaded.==;}> 0 x_1 y_2)
CloogleDBFactory.isDclModule_13::B !s_0 = <{StdString.==_2}> (<{StdString.%_10}> s_0 (_Tuple2 (<{StdInt.-_7}> (_SystemArray.size_20 s_0) 4) (<{StdInt.-_7}> (_SystemArray.size_20 s_0) 1))) ".dcl"
CloogleDBFactory.anon_86 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.flip_85 !f_0 a_1 b_2 = f_0 b_2 a_1
<{CloogleDBFactory.<>_84}>::B !_vEq_0 !x_1 !y_2 = StdBool.not (select (select _vEq_0::<{StdClass.Eq;}> 0)::<{StdOverloaded.==;}> 0 x_1 y_2)
CloogleDBFactory.flip_453::I !a_0 !b_1 = Text.indexOf_4 b_1 a_0
<{CloogleDBFactory.<>_452}>::B !x_0::I !y_1::I = StdBool.not (<{StdInt.==_16}> x_0 y_1)
CloogleDBFactory.anon_454::B !x_0::I !g_1 x_2 = <{CloogleDBFactory.<>_452}> x_0 (g_1 x_2)
CloogleDBFactory.anon_455::B !x_0::I !a_1 !x_2 = <{CloogleDBFactory.<>_452}> x_0 (CloogleDBFactory.flip_453 a_1 x_2)
CloogleDBFactory.included_12::B !ex_0 path_1 s_2 = StdBool.not (StdList.any (CloogleDBFactory.anon_455 -1 (<{StdString.+++_11}> path_1 (<{StdString.+++_11}> "/" s_2))) ex_0)
CloogleDBFactory.anon_11 !_vArray_0 !<{_v%_1}> !<{_v+++_2}> iscore_3 lib_4 basedot_5 s_6 = let mod_1_0 = select <{_v+++_2}>::<{StdOverloaded.+++;}> 0 basedot_5 (select <{_v%_1}>::<{StdOverloaded.%;}> 0 s_6 (_Tuple2 0 (<{StdInt.-_7}> (select _vArray_0::<{_SystemArray.Array;}> 4 s_6) 5))) in _Tuple3 lib_4 mod_1_0 (iscore_3 mod_1_0)
CloogleDBFactory.anon_83 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.anon_82 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.anon_456::B _x_0::C !g_1 x_2 = StdList.isMember_52 _x_0 (g_1 x_2)
CloogleDBFactory.anon_457::B !g_0 x_1 = StdBool.not (g_0 x_1)
CloogleDBFactory.anon_458::B _x_0::C !x_1 = StdList.isMember_52 _x_0 (StdList.fromString_78 x_1)
CloogleDBFactory.anon_459::B _x_0::C !x_1 = StdBool.not (CloogleDBFactory.anon_458 _x_0 x_1)
CloogleDBFactory.isDirectory_14 = CloogleDBFactory.anon_459 '.'
CloogleDBFactory.anon_463 !<{_v%_0}> !<{_v+++_1}> iscore_2 lib_3 basedot_4 s_5 = let mod_1_0 = select <{_v+++_1}>::<{StdOverloaded.+++;}> 0 basedot_4 (select <{_v%_0}>::<{StdOverloaded.%;}> 0 s_5 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 s_5) 5))) in _Tuple3 lib_3 mod_1_0 (iscore_2 mod_1_0)
CloogleDBFactory.flip_461::I !a_0 !b_1 = Text.indexOf_4 b_1 a_0
<{CloogleDBFactory.<>_460}>::B !x_0::I !y_1::I = StdBool.not (<{StdInt.==_16}> x_0 y_1)
CloogleDBFactory.anon_462::B !x_0::I !g_1 x_2 = <{CloogleDBFactory.<>_460}> x_0 (g_1 x_2)
CloogleDBFactory.anon_466 !<{_v+++_0}> iscore_1 lib_2 basedot_3 s_4 = let mod_1_0 = select <{_v+++_0}>::<{StdOverloaded.+++;}> 0 basedot_3 (<{StdString.%_10}> s_4 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 s_4) 5))) in _Tuple3 lib_2 mod_1_0 (iscore_1 mod_1_0)
CloogleDBFactory.anon_465::B !x_0::I !a_1 !x_2 = <{CloogleDBFactory.<>_460}> x_0 (CloogleDBFactory.flip_461 a_1 x_2)
CloogleDBFactory.anon_467 iscore_0 lib_1 basedot_2 s_3 = let mod_1_0 = <{StdString.+++_11}> basedot_2 (<{StdString.%_10}> s_3 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 s_3) 5))) in _Tuple3 lib_1 mod_1_0 (iscore_0 mod_1_0)
CloogleDBFactory.anon_464 ex_0 root_1 lib_2 iscore_3 g_4 x_5 = CloogleDBFactory.findModules ex_0 root_1 lib_2 iscore_3 (g_4 x_5)
CloogleDBFactory.findModules !ex_0 !root_1 !lib_2 iscore_3 !base_4 !w_5 = let path_1_0 = <{StdString.+++_11}> root_1 (<{StdString.+++_11}> "/" (<{StdString.+++_11}> lib_2 (<{StdString.+++_11}> (<{CloogleDBFactory._if;116;37_491}> (<{StdString.==_2}> base_4 "")) (Text.replaceSubString_10 "." "/" base_4)))) in case (StdList.any (CloogleDBFactory.anon_465 -1 path_1_0) ex_0) (True -> <{_Tuple2!3}> _predefined._Nil w_5) (False -> let !_x_3_0 = System.Directory.readDirectory path_1_0 w_5, fps_3_1 = select _x_3_0::_Tuple2 0 in case (Data.Error.isError fps_3_1) (True -> <{_Tuple2!3}> _predefined._Nil (select _x_3_0::_Tuple2 1)) (False -> let !_x_5_0 = _predefined._dummyForStrictAlias fps_3_1, !mods_5_1 = StdList.map (CloogleDBFactory.anon_467 iscore_3 lib_2 basedot_5_3) (StdList.filter (CloogleDBFactory.included_12 ex_0 path_1_0) (StdList.filter CloogleDBFactory.isDclModule_13 fps_5_4)), !_x_5_2 = Data.Func.mapSt (CloogleDBFactory.anon_464 ex_0 root_1 lib_2 iscore_3 (<{StdString.+++_11}> basedot_5_3)) (StdList.filter CloogleDBFactory.isDirectory_14 fps_5_4) (select _x_3_0::_Tuple2 1), basedot_5_3 = <{CloogleDBFactory._if;117;15_492}> (<{StdString.==_2}> base_4 "") base_4, fps_5_4 = select _x_5_0::_Tuple1 0 in <{_Tuple2!3}> (StdList.removeDup (<{StdClass.Eq;}> (<{StdOverloaded.==;}> (<{StdTuple.==_5}> (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdString.==_2}>)) (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdString.==_2}>)) (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdBool.==_3}>))))) (<{StdList.++}> mods_5_1 (StdList.flatten (select _x_5_2::_Tuple2 0)))) (select _x_5_2::_Tuple2 1)) ) 
<{CloogleDBFactory._if;117;15_492}> !_x_0::B base_1 = case _x_0 (True -> "") (_ -> <{StdString.+++_11}> base_1 ".")
<{CloogleDBFactory._if;116;37_491}> !_x_0::B = case _x_0 (True -> "") (_ -> "/")
<{CloogleDBFactory.cu;159;37_19}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3, c_2_2 = select _x_2_1::_Tuple2 0 in <{CloogleDBFactory.cu;159;37_19}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (<{CloogleDBFactory._if;159;17_493}> (<{StdChar.==_18}> c_2_2 '.') c_2_2)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{CloogleDBFactory._if;159;17_493}>::C !_x_0::B c_1::C = case _x_0 (True -> '/') (_ -> c_1)
<{CloogleDBFactory.cu;159;37_468}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_4 c_i_2, c_2_2 = select _x_2_1::_Tuple2 0 in <{CloogleDBFactory.cu;159;37_468}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (<{CloogleDBFactory._if;159;17_494}> (<{StdChar.==_18}> c_2_2 '.') c_2_2)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
<{CloogleDBFactory._if;159;17_494}>::C !_x_0::B c_1::C = case _x_0 (True -> '/') (_ -> c_1)
<{CloogleDBFactory.cu;159;37_469}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1::C = _SystemArray.uselect_22 g_a_3 c_i_1, c_2_2 = select _x_2_1::_Tuple2 0 in <{CloogleDBFactory.cu;159;37_469}> (_SystemArray.update_21 c_a_0 c_i_1 (<{CloogleDBFactory._if;159;17_495}> (<{StdChar.==_18}> c_2_2 '.') c_2_2)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
<{CloogleDBFactory._if;159;17_495}>::C !_x_0::B c_1::C = case _x_0 (True -> '/') (_ -> c_1)
CloogleDBFactory.mkdir_57 !s_0 = let _x_1_0::I = _SystemArray.usize_23 s_0, g_s2_1_1 = <{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1 in <{CloogleDBFactory.cu;159;37_469}> (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (select _x_1_0::_Tuple2 1)
<{CloogleDBFactory.wantModule`_56}> !f_0 !s_1 !b1_2::B !i_3 !p_4 !b2_5::B !ht_6 !io_7 !fs_8 = let _x_1_0 = parse.wantModule f_0 s_1 b1_2 i_3 p_4 b2_5 ht_6 io_7 fs_8 in <{_Tuple2!2}> (_Tuple5 (select _x_1_0::_Tuple6 0) (select _x_1_0::_Tuple6 1) (select _x_1_0::_Tuple6 2) (select _x_1_0::_Tuple6 3) (select _x_1_0::_Tuple6 4)) (select _x_1_0::_Tuple6 5)
CloogleDBFactory.readModule_67 !root_0 !lib_1 !mod_2 !icl_3::B !w_4 = let filename_1_0 = <{StdString.+++_11}> root_0 (<{StdString.+++_11}> "/" (<{StdString.+++_11}> lib_1 (<{StdString.+++_11}> "/" (<{StdString.+++_11}> (CloogleDBFactory.mkdir_57 mod_2) (<{CloogleDBFactory._if;346;65_496}> icl_3))))), _x_1_1 = StdFile.fopen_31 filename_1_0 0 w_4 in case (StdBool.not (select _x_1_1::_Tuple3 0)) (True -> <{_Tuple3!5}> (Data.Either.Left (<{StdString.+++_11}> "Couldn't open " filename_1_0)) (StdMisc.abort "no symboltable\n") (select _x_1_1::_Tuple3 2)) (False -> let f_3_0 = select _x_1_1::_Tuple3 1, ht_3_1 = hashtable.newHashTable Heap.newHeap, ht_3_2 = hashtable.set_hte_mark (<{CloogleDBFactory._if;345;26_497}> icl_3) ht_3_1, _x_3_3 = hashtable.putIdentInHashTable mod_2 (hashtable.IC_Module hashtable.NoQualifiedIdents) ht_3_2, mod_id_3_4 = select _x_3_3::_Tuple2 0, ht_3_5 = select _x_3_3::_Tuple2 1, w_3_6 = select _x_1_1::_Tuple3 2, _x_3_7 = StdFile.accFiles_34 (<{CloogleDBFactory.wantModule`_56}> f_3_0 "" icl_3 (select mod_id_3_4::hashtable._BoxedIdent 0) syntax.NoPos True ht_3_5 StdFile.stderr) w_3_6, _x_3_8 = select _x_3_7::_Tuple2 0, f_3_9 = select _x_3_8::_Tuple5 4, w_3_10 = select _x_3_7::_Tuple2 1, _x_3_11 = StdFile.fclose_30 f_3_9 w_3_10 in case (StdBool.not (select _x_3_11::_Tuple2 0)) (True -> <{_Tuple3!5}> (Data.Either.Left (<{StdString.+++_11}> "Couldn't open " filename_1_0)) (StdMisc.abort "no symboltable\n") (select _x_3_11::_Tuple2 1)) (False -> <{_Tuple3!5}> (Data.Either.Right (select _x_3_8::_Tuple5 2)) (select (select _x_3_8::_Tuple5 3)::hashtable._HashTable 0) (select _x_3_11::_Tuple2 1)) ) 
<{CloogleDBFactory._if;345;26_497}>::I !icl_0::B = case icl_0 (True -> 1) (_ -> 0)
<{CloogleDBFactory._if;346;65_496}> !icl_0::B = case icl_0 (True -> ".icl") (_ -> ".dcl")
<{CloogleDBFactory.c;303;28_50}> name_0 !g_l_1 = <{CloogleDBFactory.g_c1;303;57_499}> g_l_1 name_0
<{CloogleDBFactory.g_c1;303;57_499}> !g_l_0 name_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;303;57_498}> g_h_1_0 name_1 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;303;57_498}> !g_h_0 name_1 g_t_2 = case g_h_0 (syntax.PD_Type _x_1_0 -> case _x_1_0 (syntax._TypeDef td_ident_2_0 td_index_2_1 td_arity_2_2 td_args_2_3 td_attrs_2_4 td_rhs_2_5 td_attribute_2_6 td_pos_2_7 td_used_types_2_8 td_fun_index_2_9 -> case (<{StdString.==_2}> (select td_ident_2_0::syntax._Ident 0) name_1) (True -> _predefined._Cons td_pos_2_7 (<{CloogleDBFactory.c;303;28_50}> name_1 g_t_2)) ) ) (_ -> <{CloogleDBFactory.c;303;28_50}> name_1 g_t_2)
CloogleDBFactory.findIclLine_51 name_0 !_x_1 = case _x_1 (syntax._Module mod_ident_1_0 mod_modification_time_1_1 mod_type_1_2 mod_imports_1_3 mod_imported_objects_1_4 mod_foreign_exports_1_5 pms_1_6 -> <{CloogleDBFactory._c;303;15_500}> (<{CloogleDBFactory.c;303;28_50}> name_0 pms_1_6)) 
<{CloogleDBFactory._c;303;15_500}> !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (syntax.LinePos _x_2_0 l_2_1 -> Data.Maybe.Just l_2_1) ) (_ -> Data.Maybe.Nothing)
CloogleDBFactory.toLine_66 !_x_0 = case _x_0 (syntax.FunPos _x_1_0 l_1_1 _x_1_2 -> Data.Maybe.Just l_1_1) (syntax.LinePos _x_1_0 l_1_1 -> Data.Maybe.Just l_1_1) (_ -> Data.Maybe.Nothing)
CloogleDBFactory.parsef_52 !_x_0 = case _x_0 (syntax.ConsList _x_1_0 -> Doc.parseADTypeDoc) (syntax.ExtensibleConses _x_1_0 -> Doc.parseADTypeDoc) (syntax.SelectorList _x_1_0 _x_1_1 _x_1_2 _x_1_3 -> Doc.parseRecordTypeDoc) (syntax.TypeSpec _x_1_0 -> Doc.parseSynonymTypeDoc) (syntax.EmptyRhs _x_1_0 -> Doc.parseAbstractTypeDoc) (_ -> StdFunc.const (Data.Either.Left (Doc.IllegalState "Unknown RhsDefsOfType")))
CloogleDBFactory.anon_91 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.isUsedReturn_70::B !_x_0 = case _x_0 (Doc.UsedReturn -> True) (_ -> False)
CloogleDBFactory.anon_470::B !g_0 x_1 = StdBool.not (g_0 x_1)
CloogleDBFactory.anon_471::B !x_0 = StdBool.not (CloogleDBFactory.isUsedReturn_70 x_0)
CloogleDBFactory.docParseResultToMaybe_68 !_x_0 = case _x_0 (Data.Either.Left e_1_0 -> Doc.traceParseError e_1_0 Data.Maybe.Nothing) (Data.Either.Right _x_1_0 -> case _x_1_0 (_Tuple2 doc_2_0 ws_2_1 -> Doc.traceParseWarnings (StdList.filter CloogleDBFactory.anon_471 ws_2_1) (Data.Maybe.Just doc_2_0)) ) 
CloogleDBFactory.findDoc_69 parse_0 !_x_1 !st_2 = case _x_1 (syntax._Ident id_name_1_0 id_info_1_1 -> <{CloogleDBFactory._c;370;34_501}> (Heap.sreadPtr id_info_1_1 st_2) parse_0) 
<{CloogleDBFactory._c;370;34_501}> !_x_0 parse_1 = case _x_0 (syntax._SymbolTableEntry ste_kind_1_0 ste_index_1_1 ste_def_level_1_2 ste_previous_1_3 _x_1_4 -> case _x_1_4 (general.Yes doc_2_0 -> CloogleDBFactory.docParseResultToMaybe_68 (parse_1 doc_2_0)) ) (_ -> Data.Maybe.Nothing)
CloogleDBFactory.anon_100 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.anon_472 !g_0 x_1 = CloogleDBFactory.docParseResultToMaybe_68 (g_0 x_1)
CloogleDBFactory.anon_473 _x_0 x_1 = CloogleDBFactory.docParseResultToMaybe_68 (Doc.parseConstructorDoc _x_0 x_1)
CloogleDBFactory.addConses_55 !_x_0 doc_1 = case _x_0 (_predefined._Nil -> Data.Maybe.Just doc_1) (_predefined._Cons _x_1_0 cs_1_1 -> case _x_1_0 (syntax._ParsedConstructor pc_cons_ident_2_0 pc_cons_arity_2_1 pc_exi_vars_2_2 pc_arg_types_2_3 pc_args_strictness_2_4 pc_context_2_5 pc_cons_prio_2_6 pc_cons_pos_2_7 _x_2_8 -> case _x_2_8 (general.Yes d_3_0 -> <{Control.Monad.>>=}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) (CloogleDBFactory.addConses_55 cs_1_1 doc_1) (CloogleDBFactory.anon_473 d_3_0)) ) (_ -> CloogleDBFactory.addConses_55 cs_1_1 doc_1)) 
CloogleDBFactory.anon_99 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.anon_474 !g_0 x_1 = CloogleDBFactory.docParseResultToMaybe_68 (g_0 x_1)
CloogleDBFactory.anon_475 _x_0 x_1 = CloogleDBFactory.docParseResultToMaybe_68 (Doc.parseFieldDoc _x_0 x_1)
CloogleDBFactory.addFields_54 !_x_0 doc_1 = case _x_0 (_predefined._Nil -> Data.Maybe.Just doc_1) (_predefined._Cons _x_1_0 fs_1_1 -> case _x_1_0 (syntax._ParsedSelector ps_field_ident_2_0 ps_selector_ident_2_1 ps_field_annotation_2_2 ps_field_type_2_3 ps_field_var_2_4 ps_field_pos_2_5 _x_2_6 -> case _x_2_6 (general.Yes d_3_0 -> <{Control.Monad.>>=}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) (CloogleDBFactory.addFields_54 fs_1_1 doc_1) (CloogleDBFactory.anon_475 d_3_0)) ) (_ -> CloogleDBFactory.addFields_54 fs_1_1 doc_1)) 
CloogleDBFactory.findRhsDoc_53 !_x_0 doc_1 = case _x_0 (syntax._TypeDef td_ident_1_0 td_index_1_1 td_arity_1_2 td_args_1_3 td_attrs_1_4 _x_1_5 td_attribute_1_6 td_pos_1_7 td_used_types_1_8 td_fun_index_1_9 -> case _x_1_5 (syntax.ConsList cs_2_0 -> CloogleDBFactory.addConses_55 cs_2_0 doc_1) (syntax.ExtensibleConses cs_2_0 -> CloogleDBFactory.addConses_55 cs_2_0 doc_1) (syntax.SelectorList _x_2_0 _x_2_1 _x_2_2 fs_2_3 -> CloogleDBFactory.addFields_54 fs_2_3 doc_1) ) (_ -> Data.Maybe.Just doc_1)
<{CloogleDBFactory.c;299;36_48}> st_0 lib_1 mod_2 icl_3 g_t_4 ptd_5 !g_l_6 = <{CloogleDBFactory.g_c1;299;41_505}> g_l_6 lib_1 mod_2 ptd_5 icl_3 st_0 g_t_4
<{CloogleDBFactory.c;299;15_49}> st_0 lib_1 mod_2 icl_3 !g_l_4 = <{CloogleDBFactory.g_c1;299;30_503}> g_l_4 st_0 lib_1 mod_2 icl_3
<{CloogleDBFactory.g_c1;299;41_505}> !g_l_0 lib_1 mod_2 ptd_3 icl_4 st_5 g_t_6 = case g_l_0 (_predefined._Cons td_1_0 g_t_1_1 -> let name_2_0 = TypeDef.td_name td_1_0 in _predefined._Cons (_Tuple2 (CloogleDB.Location lib_1 mod_2 (CloogleDBFactory.toLine_66 (select ptd_3::syntax._TypeDef 7)) (<{Control.Monad.=<<}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) (CloogleDBFactory.findIclLine_51 name_2_0) icl_4) name_2_0) (CloogleDB.toTypeDefEntry td_1_0 (<{Control.Monad.=<<}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) (CloogleDBFactory.findRhsDoc_53 ptd_3) (<{CloogleDBFactory._c;295;18_504}> (CloogleDBFactory.findDoc_69 (CloogleDBFactory.parsef_52 (select ptd_3::syntax._TypeDef 5)) (select ptd_3::syntax._TypeDef 0) st_5) ptd_3)))) (<{CloogleDBFactory.c;299;36_48}> st_5 lib_1 mod_2 icl_4 g_t_6 ptd_3 g_t_1_1)) (_ -> <{CloogleDBFactory.c;299;15_49}> st_5 lib_1 mod_2 icl_4 g_t_6)
<{CloogleDBFactory._c;295;18_504}> !_x_0 ptd_1 = case _x_0 (Data.Maybe.Just d_1_0 -> Data.Maybe.Just d_1_0) (Data.Maybe.Nothing -> CloogleDBFactory.docParseResultToMaybe_68 (CloogleDBFactory.parsef_52 (select ptd_1::syntax._TypeDef 5) "")) 
<{CloogleDBFactory.g_c1;299;30_503}> !g_l_0 st_1 lib_2 mod_3 icl_4 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;299;30_502}> g_h_1_0 st_1 lib_2 mod_3 icl_4 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;299;30_502}> !g_h_0 st_1 lib_2 mod_3 icl_4 g_t_5 = case g_h_0 (syntax.PD_Type ptd_1_0 -> <{CloogleDBFactory.c;299;36_48}> st_1 lib_2 mod_3 icl_4 g_t_5 ptd_1_0 (_predefined._Cons (CoclUtils.toTypeDef_5 ptd_1_0) _predefined._Nil)) (_ -> <{CloogleDBFactory.c;299;15_49}> st_1 lib_2 mod_3 icl_4 g_t_5)
CloogleDBFactory.pd_types_65 lib_0 mod_1 !dcl_2 !icl_3 st_4 = <{CloogleDBFactory.c;299;15_49}> st_4 lib_0 mod_1 icl_3 dcl_2
<{CloogleDBFactory.loc`_75}> !loc_0 !f_1 = <{CloogleDBFactory._c;410;14_506}> loc_0 f_1
<{CloogleDBFactory._c;410;14_506}> !loc_0 !f_1 = case loc_0 (CloogleDB.Builtin _x_1_0 -> CloogleDB.Builtin f_1) (CloogleDB.Location lib_1_0 mod_1_1 line_1_2 iclline_1_3 _x_1_4 -> CloogleDB.Location lib_1_0 mod_1_1 line_1_2 iclline_1_3 f_1) 
CloogleDBFactory.anon_73 d_0 = Doc.FunctionDoc (Data.Maybe.Just d_0) _predefined._Nil _predefined._Nil Data.Maybe.Nothing
<{CloogleDBFactory.c;408;10_74}> loc_0 !g_l_1 g_l_2 = <{CloogleDBFactory.g_c1;407;18_509}> g_l_1 g_l_2 loc_0
<{CloogleDBFactory.g_c1;407;18_509}> !g_l_0 g_l_1 loc_2 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c1;408;16_508}> g_l_1 g_h_1_0 loc_2 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c1;408;16_508}> !g_l_0 g_h_1 loc_2 g_t_3 = case g_l_0 (_predefined._Cons doc_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;407;18_507}> g_h_1 loc_2 doc_1_0 g_t_3 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;407;18_507}> !g_h_0 loc_1 doc_2 g_t_3 g_t_4 = case g_h_0 (_Tuple2 f_1_0 t_1_1 -> _predefined._Cons (_Tuple2 (<{CloogleDBFactory.loc`_75}> loc_1 f_1_0) (update CloogleDB.zero_51::CloogleDB._FunctionEntry [0:Cloogle.RecordField,1:Data.Maybe.Just t_1_1,4:Data.Maybe.Just (Text.concat_1 (_predefined._Cons "." (_predefined._Cons f_1_0 (_predefined._Cons " :: " (TypeUtil.print_11 False t_1_1))))),5:<{Data.Functor.<$>}> (<{Data.Functor.Functor;}> Data.Maybe.fmap_12) CloogleDBFactory.anon_73 doc_2])) (<{CloogleDBFactory.c;408;10_74}> loc_1 g_t_3 g_t_4)) (_ -> <{CloogleDBFactory.c;408;10_74}> loc_1 g_t_3 g_t_4)
CloogleDBFactory.record_functions !_x_0 = case _x_0 (_Tuple2 loc_1_0 etd_1_1 -> <{CloogleDBFactory.c;408;10_74}> loc_1_0 (TypeDef.recordsToFunctions (CloogleDB.getTypeDef etd_1_1)) (<{CloogleDBFactory._c;413;17_510}> (<{Control.Monad.=<<}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) Doc.getTypeRhsDoc (CloogleDB.getTypeDefDoc etd_1_1)))) 
<{CloogleDBFactory._c;413;17_510}> !_x_0 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (Doc.RecordDoc fields_2_0 -> <{StdList.++}> fields_2_0 (StdList.repeat Data.Maybe.Nothing)) ) (_ -> StdList.repeat Data.Maybe.Nothing)
<{CloogleDBFactory.c;147;31_17}> g_t_0 !g_l_1 = <{CloogleDBFactory.g_c1;147;35_512}> g_l_1 g_t_0
<{CloogleDBFactory.c;147;14_18}> !g_l_0 = <{CloogleDBFactory.g_c1;147;20_511}> g_l_0
<{CloogleDBFactory.g_c1;147;35_512}> !g_l_0 g_t_1 = case g_l_0 (_predefined._Cons f_1_0 g_t_1_1 -> _predefined._Cons f_1_0 (<{CloogleDBFactory.c;147;31_17}> g_t_1 g_t_1_1)) (_ -> <{CloogleDBFactory.c;147;14_18}> g_t_1)
<{CloogleDBFactory.g_c1;147;20_511}> !g_l_0 = case g_l_0 (_predefined._Cons td_1_0 g_t_1_1 -> <{CloogleDBFactory.c;147;31_17}> g_t_1_1 (CloogleDBFactory.record_functions td_1_0)) (_ -> _predefined._Nil)
<{CloogleDBFactory.loc`_72}> !loc_0 !c_1 = <{CloogleDBFactory._c;389;14_513}> loc_0 c_1
<{CloogleDBFactory._c;389;14_513}> !loc_0 !c_1 = case loc_0 (CloogleDB.Builtin _x_1_0 -> CloogleDB.Builtin c_1) (CloogleDB.Location lib_1_0 mod_1_1 line_1_2 iclline_1_3 _x_1_4 -> CloogleDB.Location lib_1_0 mod_1_1 line_1_2 iclline_1_3 c_1) 
CloogleDBFactory.print_prio !_x_0 = case _x_0 (Data.Maybe.Nothing -> _predefined._Nil) (Data.Maybe.Just p_1_0 -> <{StdList.++}> (_predefined._Cons " " _predefined._Nil) (TypeUtil.print_13 False p_1_0)) 
<{CloogleDBFactory.c;387;9_71}> loc_0 !g_l_1 = <{CloogleDBFactory.g_c1;387;20_515}> g_l_1 loc_0
<{CloogleDBFactory.g_c1;387;20_515}> !g_l_0 loc_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;387;20_514}> g_h_1_0 loc_1 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;387;20_514}> !g_h_0 loc_1 g_t_2 = case g_h_0 (_Tuple3 c_1_0 f_1_1 p_1_2 -> _predefined._Cons (_Tuple2 (<{CloogleDBFactory.loc`_72}> loc_1 c_1_0) (update CloogleDB.zero_51::CloogleDB._FunctionEntry [0:Cloogle.Constructor,1:Data.Maybe.Just f_1_1,2:p_1_2,4:Data.Maybe.Just (Text.concat_1 (<{StdList.++}> (_predefined._Cons c_1_0 _predefined._Nil) (<{StdList.++}> (CloogleDBFactory.print_prio p_1_2) (<{StdList.++}> (_predefined._Cons " :: " _predefined._Nil) (TypeUtil.print_11 False f_1_1)))))])) (<{CloogleDBFactory.c;387;9_71}> loc_1 g_t_2)) (_ -> <{CloogleDBFactory.c;387;9_71}> loc_1 g_t_2)
CloogleDBFactory.constructor_functions !_x_0 = case _x_0 (_Tuple2 loc_1_0 etd_1_1 -> <{CloogleDBFactory.c;387;9_71}> loc_1_0 (TypeDef.constructorsToFunctions (CloogleDB.getTypeDef etd_1_1))) 
<{CloogleDBFactory.c;146;31_15}> g_t_0 !g_l_1 = <{CloogleDBFactory.g_c1;146;35_517}> g_l_1 g_t_0
<{CloogleDBFactory.c;146;14_16}> !g_l_0 = <{CloogleDBFactory.g_c1;146;20_516}> g_l_0
<{CloogleDBFactory.g_c1;146;35_517}> !g_l_0 g_t_1 = case g_l_0 (_predefined._Cons f_1_0 g_t_1_1 -> _predefined._Cons f_1_0 (<{CloogleDBFactory.c;146;31_15}> g_t_1 g_t_1_1)) (_ -> <{CloogleDBFactory.c;146;14_16}> g_t_1)
<{CloogleDBFactory.g_c1;146;20_516}> !g_l_0 = case g_l_0 (_predefined._Cons td_1_0 g_t_1_1 -> <{CloogleDBFactory.c;146;31_15}> g_t_1_1 (CloogleDBFactory.constructor_functions td_1_0)) (_ -> _predefined._Nil)
<{CloogleDBFactory.c;216;31_28}> name_0 !g_l_1 = <{CloogleDBFactory.g_c1;216;47_519}> g_l_1 name_0
<{CloogleDBFactory.g_c1;216;47_519}> !g_l_0 name_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;216;47_518}> g_h_1_0 name_1 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;216;47_518}> !g_h_0 name_1 g_t_2 = case g_h_0 (syntax.PD_Generic g_1_0 -> case (<{StdString.==_2}> (select (select g_1_0::syntax._GenericDef 0)::syntax._Ident 0) name_1) (True -> _predefined._Cons (select g_1_0::syntax._GenericDef 2) (<{CloogleDBFactory.c;216;31_28}> name_1 g_t_2)) ) (_ -> <{CloogleDBFactory.c;216;31_28}> name_1 g_t_2)
CloogleDBFactory.findIclLine_29 name_0 !_x_1 = case _x_1 (syntax._Module mod_ident_1_0 mod_modification_time_1_1 mod_type_1_2 mod_imports_1_3 mod_imported_objects_1_4 mod_foreign_exports_1_5 pms_1_6 -> <{CloogleDBFactory._c;216;15_520}> (<{CloogleDBFactory.c;216;31_28}> name_0 pms_1_6)) 
<{CloogleDBFactory._c;216;15_520}> !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (syntax.FunPos _x_2_0 l_2_1 _x_2_2 -> Data.Maybe.Just l_2_1) (syntax.LinePos _x_2_0 l_2_1 -> Data.Maybe.Just l_2_1) ) (_ -> Data.Maybe.Nothing)
<{CloogleDBFactory.c;212;14_27}> st_0 lib_1 mod_2 icl_3 !g_l_4 = <{CloogleDBFactory.g_c1;212;87_522}> g_l_4 lib_1 mod_2 icl_3 st_0
<{CloogleDBFactory.g_c1;212;87_522}> !g_l_0 lib_1 mod_2 icl_3 st_4 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;212;87_521}> g_h_1_0 lib_1 mod_2 icl_3 st_4 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;212;87_521}> !g_h_0 lib_1 mod_2 icl_3 st_4 g_t_5 = case g_h_0 (syntax.PD_Generic _x_1_0 -> case _x_1_0 (syntax._GenericDef id_2_0 gen_member_ident_2_1 gen_pos_2_2 gen_type_2_3 gen_vars_2_4 gen_deps_2_5 gen_info_ptr_2_6 -> case id_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> _predefined._Cons (_Tuple2 (CloogleDB.Location lib_1 mod_2 (CloogleDBFactory.toLine_66 gen_pos_2_2) (<{Control.Monad.=<<}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) (CloogleDBFactory.findIclLine_29 id_name_3_0) icl_3) id_name_3_0) (update CloogleDB.zero_51::CloogleDB._FunctionEntry [1:Data.Maybe.Just (CoclUtils.toType_0 gen_type_2_3),3:Data.Maybe.Just (StdList.map CoclUtils.toTypeVar_2 gen_vars_2_4),4:Data.Maybe.Just (CleanPrettyPrint.cpp_2 g_h_0),5:CloogleDBFactory.findDoc_69 Doc.parseFunctionDoc id_2_0 st_4])) (<{CloogleDBFactory.c;212;14_27}> st_4 lib_1 mod_2 icl_3 g_t_5)) ) ) (_ -> <{CloogleDBFactory.c;212;14_27}> st_4 lib_1 mod_2 icl_3 g_t_5)
CloogleDBFactory.pd_generics_61 lib_0 mod_1 !dcl_2 !icl_3 st_4 = <{CloogleDBFactory.c;212;14_27}> st_4 lib_0 mod_1 icl_3 dcl_2
CloogleDBFactory.findTypeSpec_24 _x_0 !_x_1 = case _x_1 (_predefined._Nil -> Data.Maybe.Nothing) (_predefined._Cons pd_1_0 dcl_1_1 -> case pd_1_0 (syntax.PD_TypeSpec _x_2_0 id`_2_1 prio_2_2 _x_2_3 _x_2_4 -> case (<{StdString.==_2}> (select <{id`_2_1}>::syntax._Ident 0) (select _x_0::syntax._Ident 0)) (True -> Data.Maybe.Just pd_1_0) ) (_ -> CloogleDBFactory.findTypeSpec_24 _x_0 dcl_1_1)) 
CloogleDBFactory.anon_21 !_x_0 = case _x_0 (syntax.PD_TypeSpec _x_1_0 _x_1_1 p_1_2 _x_1_3 _x_1_4 -> p_1_2) 
CloogleDBFactory.findPrio_23 dcl_0 id_1 = <{Data.Functor.<$>}> (<{Data.Functor.Functor;}> Data.Maybe.fmap_12) CloogleDBFactory.anon_21 (CloogleDBFactory.findTypeSpec_24 id_1 dcl_0)
CloogleDBFactory.priostring_22 !dcl_0 id_1 = <{CloogleDBFactory._c;182;25_523}> (CloogleDBFactory.findTypeSpec_24 id_1 dcl_0)
<{CloogleDBFactory._c;182;25_523}> !_x_0 = case _x_0 (Data.Maybe.Nothing -> "") (Data.Maybe.Just pri_1_0 -> <{StdString.+++_11}> (CleanPrettyPrint.cpp_2 pri_1_0) "\n") 
<{CloogleDBFactory.c;179;14_20}> dcl_0 st_1 lib_2 mod_3 !g_l_4 = <{CloogleDBFactory.g_c1;179;68_525}> g_l_4 lib_2 mod_3 dcl_0 st_1
<{CloogleDBFactory.g_c1;179;68_525}> !g_l_0 lib_1 mod_2 dcl_3 st_4 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;179;68_524}> g_h_1_0 lib_1 mod_2 dcl_3 st_4 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;179;68_524}> !g_h_0 lib_1 mod_2 dcl_3 st_4 g_t_5 = case g_h_0 (syntax.PD_Function pos_1_0 id_1_1 isinfix_1_2 args_1_3 rhs_1_4 _x_1_5 -> case _x_1_5 (syntax.FK_Macro -> _predefined._Cons (_Tuple2 (CloogleDB.Location lib_1 mod_2 (CloogleDBFactory.toLine_66 pos_1_0) Data.Maybe.Nothing (select id_1_1::syntax._Ident 0)) (update CloogleDB.zero_51::CloogleDB._FunctionEntry [0:Cloogle.Macro,2:<{Control.Monad.>>=}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) (CloogleDBFactory.findPrio_23 dcl_3 id_1_1) CoclUtils.toMaybePriority_9,4:Data.Maybe.Just (<{StdString.+++_11}> (CloogleDBFactory.priostring_22 dcl_3 id_1_1) (CleanPrettyPrint.cpp_2 g_h_0)),5:CloogleDBFactory.findDoc_69 Doc.parseFunctionDoc id_1_1 st_4])) (<{CloogleDBFactory.c;179;14_20}> dcl_3 st_4 lib_1 mod_2 g_t_5)) ) (_ -> <{CloogleDBFactory.c;179;14_20}> dcl_3 st_4 lib_1 mod_2 g_t_5)
CloogleDBFactory.pd_macros_59 lib_0 mod_1 !dcl_2 st_3 = <{CloogleDBFactory.c;179;14_20}> dcl_2 st_3 lib_0 mod_1 dcl_2
<{CloogleDBFactory.c;235;25_31}> name_0 !g_l_1 = <{CloogleDBFactory.g_c1;235;53_527}> g_l_1 name_0
<{CloogleDBFactory.g_c1;235;53_527}> !g_l_0 name_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;235;53_526}> g_h_1_0 name_1 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;235;53_526}> !g_h_0 name_1 g_t_2 = case g_h_0 (syntax.PD_TypeSpec pos_1_0 id_1_1 _x_1_2 _x_1_3 _x_1_4 -> case (<{StdString.==_2}> (select id_1_1::syntax._Ident 0) name_1) (True -> _predefined._Cons pos_1_0 (<{CloogleDBFactory.c;235;25_31}> name_1 g_t_2)) ) (_ -> <{CloogleDBFactory.c;235;25_31}> name_1 g_t_2)
CloogleDBFactory.findIclLine_32 name_0 !_x_1 = case _x_1 (syntax._Module mod_ident_1_0 mod_modification_time_1_1 mod_type_1_2 mod_imports_1_3 mod_imported_objects_1_4 mod_foreign_exports_1_5 pms_1_6 -> <{CloogleDBFactory._c;235;15_528}> (<{CloogleDBFactory.c;235;25_31}> name_0 pms_1_6)) 
<{CloogleDBFactory._c;235;15_528}> !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (syntax.FunPos _x_2_0 l_2_1 _x_2_2 -> Data.Maybe.Just l_2_1) (syntax.LinePos _x_2_0 l_2_1 -> Data.Maybe.Just l_2_1) ) (_ -> Data.Maybe.Nothing)
<{CloogleDBFactory.c;231;14_30}> st_0 lib_1 mod_2 icl_3 !g_l_4 = <{CloogleDBFactory.g_c1;231;72_530}> g_l_4 lib_1 mod_2 icl_3 st_0
<{CloogleDBFactory.g_c1;231;72_530}> !g_l_0 lib_1 mod_2 icl_3 st_4 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;231;72_529}> g_h_1_0 lib_1 mod_2 icl_3 st_4 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;231;72_529}> !g_h_0 lib_1 mod_2 icl_3 st_4 g_t_5 = case g_h_0 (syntax.PD_TypeSpec pos_1_0 id_1_1 p_1_2 _x_1_3 funspecs_1_4 -> case id_1_1 (syntax._Ident id_name_2_0 id_info_2_1 -> case _x_1_3 (general.Yes t_3_0 -> _predefined._Cons (_Tuple2 (CloogleDB.Location lib_1 mod_2 (CloogleDBFactory.toLine_66 pos_1_0) (<{Control.Monad.=<<}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) (CloogleDBFactory.findIclLine_32 id_name_2_0) icl_3) id_name_2_0) (update CloogleDB.zero_51::CloogleDB._FunctionEntry [1:Data.Maybe.Just (CoclUtils.toType_0 t_3_0),2:CoclUtils.toMaybePriority_9 p_1_2,4:Data.Maybe.Just (CleanPrettyPrint.cpp_2 g_h_0),5:CloogleDBFactory.findDoc_69 Doc.parseFunctionDoc id_1_1 st_4])) (<{CloogleDBFactory.c;231;14_30}> st_4 lib_1 mod_2 icl_3 g_t_5)) ) ) (_ -> <{CloogleDBFactory.c;231;14_30}> st_4 lib_1 mod_2 icl_3 g_t_5)
CloogleDBFactory.pd_typespecs_62 lib_0 mod_1 !dcl_2 !icl_3 st_4 = <{CloogleDBFactory.c;231;14_30}> st_4 lib_0 mod_1 icl_3 dcl_2
CloogleDBFactory.anon_40::B !pd_0 = <{CloogleDBFactory._c;263;26_531}> pd_0
<{CloogleDBFactory._c;263;26_531}>::B !pd_0 = case pd_0 (syntax.PD_Class _x_1_0 _x_1_1 -> True) (_ -> False)
CloogleDBFactory.flip_98 !f_0 a_1 b_2 = f_0 b_2 a_1
CloogleDBFactory.foldl_97 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> CloogleDBFactory.foldl_97 op_0 (op_0 r_1 a_1_0) x_1_1) 
CloogleDBFactory.foldl_96 op_0 r_1 !l_2 = CloogleDBFactory.foldl_97 op_0 r_1 l_2
<{CloogleDBFactory.c;285;31_46}> name_0 !g_l_1 = <{CloogleDBFactory.g_c1;285;69_533}> g_l_1 name_0
<{CloogleDBFactory.g_c1;285;69_533}> !g_l_0 name_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;285;69_532}> g_h_1_0 name_1 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;285;69_532}> !g_h_0 name_1 g_t_2 = case g_h_0 (syntax.PD_Class _x_1_0 _x_1_1 -> case _x_1_0 (syntax._ClassDef class_ident_2_0 class_arity_2_1 class_args_2_2 class_context_2_3 class_members_2_4 class_dictionary_2_5 class_pos_2_6 class_cons_vars_2_7 class_fun_dep_vars_2_8 class_lazy_members_2_9 -> case (<{StdString.==_2}> (select class_ident_2_0::syntax._Ident 0) name_1) (True -> _predefined._Cons class_pos_2_6 (<{CloogleDBFactory.c;285;31_46}> name_1 g_t_2)) ) ) (_ -> <{CloogleDBFactory.c;285;31_46}> name_1 g_t_2)
CloogleDBFactory.findIclLine_47 name_0 !_x_1 = case _x_1 (syntax._Module mod_ident_1_0 mod_modification_time_1_1 mod_type_1_2 mod_imports_1_3 mod_imported_objects_1_4 mod_foreign_exports_1_5 pms_1_6 -> <{CloogleDBFactory._c;285;15_534}> (<{CloogleDBFactory.c;285;31_46}> name_0 pms_1_6)) 
<{CloogleDBFactory._c;285;15_534}> !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (syntax.LinePos _x_2_0 l_2_1 -> Data.Maybe.Just l_2_1) ) (_ -> Data.Maybe.Nothing)
CloogleDBFactory.anon_95 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.anon_94 !f_0 g_1 x_2 = f_0 (g_1 x_2)
CloogleDBFactory.fst_93 !tuple_0 = select tuple_0::_Tuple2 0
CloogleDBFactory.anon_476 g_0 x_1 = CloogleDB.getName (g_0 x_1)
CloogleDBFactory.anon_477::B !_x_0 !g_1 x_2 = <{StdString.==_2}> _x_0 (g_1 x_2)
CloogleDBFactory.anon_478 x_0 = CloogleDB.getName (CloogleDBFactory.fst_93 x_0)
CloogleDBFactory.anon_479::B !_x_0 x_1 = <{StdString.==_2}> _x_0 (CloogleDBFactory.anon_478 x_1)
CloogleDBFactory.getMacro_41 !macros_0 n_1 = <{CloogleDBFactory._c;268;26_535}> (StdList.filter (CloogleDBFactory.anon_479 n_1) macros_0)
<{CloogleDBFactory._c;268;26_535}> !_x_0 = case _x_0 (_predefined._Nil -> Data.Maybe.Nothing) (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (_Tuple2 _x_2_0 m_2_1 -> select m_2_1::CloogleDB._FunctionEntry 4) ) 
CloogleDBFactory.updateRepresentation_42 macros_0 n_1 !fe_2 = update fe_2::CloogleDB._FunctionEntry [4:<{Control.Applicative.<|>_18}> (CloogleDBFactory.getMacro_41 macros_0 n_1) (select fe_2::CloogleDB._FunctionEntry 4)]
<{CloogleDBFactory.c;280;47_44}> macros_0 !g_l_1 = <{CloogleDBFactory.g_c1;280;80_537}> g_l_1 macros_0
<{CloogleDBFactory.g_c1;280;80_537}> !g_l_0 macros_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;280;80_536}> g_h_1_0 macros_1 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;280;80_536}> !g_h_0 macros_1 g_t_2 = case g_h_0 (_Tuple2 _x_1_0 et_1_1 -> case _x_1_0 (CloogleDB.Location _x_2_0 _x_2_1 _x_2_2 _x_2_3 f_2_4 -> _predefined._Cons (_Tuple2 f_2_4 (CloogleDBFactory.updateRepresentation_42 macros_1 f_2_4 et_1_1)) (<{CloogleDBFactory.c;280;47_44}> macros_1 g_t_2)) ) (_ -> <{CloogleDBFactory.c;280;47_44}> macros_1 g_t_2)
<{CloogleDBFactory.c;278;70_43}> !g_l_0 = <{CloogleDBFactory.g_c1;278;80_539}> g_l_0
<{CloogleDBFactory.g_c1;278;80_539}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;278;80_538}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;278;80_538}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 _x_1_0 fe_1_1 -> _predefined._Cons (<{Data.Functor.<$>}> (<{Data.Functor.Functor;}> Data.Maybe.fmap_12) Doc.functionToClassMemberDoc (select fe_1_1::CloogleDB._FunctionEntry 5)) (<{CloogleDBFactory.c;278;70_43}> g_t_1)) (_ -> <{CloogleDBFactory.c;278;70_43}> g_t_1)
CloogleDBFactory.foldl_481 r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> CloogleDBFactory.foldl_481 (Doc.addClassMemberDoc r_0 a_1_0) x_1_1) 
CloogleDBFactory.foldl_480 r_0 !l_1 = CloogleDBFactory.foldl_481 r_0 l_1
CloogleDBFactory.flip_482 !a_0 b_1 = CloogleDBFactory.foldl_480 b_1 a_0
CloogleDBFactory.anon_45 st_0 lib_1 mod_2 icl_3 !_x_4 = case _x_4 (syntax.PD_Class _x_1_0 dcl_1_1 -> case _x_1_0 (syntax._ClassDef id_2_0 class_arity_2_1 class_args_2_2 class_context_2_3 class_members_2_4 class_dictionary_2_5 class_pos_2_6 class_cons_vars_2_7 class_fun_dep_vars_2_8 class_lazy_members_2_9 -> case id_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> let typespecs_4_0 = CloogleDBFactory.pd_typespecs_62 lib_1 mod_2 dcl_1_1 icl_3 st_0 in _Tuple2 (CloogleDB.Location lib_1 mod_2 (CloogleDBFactory.toLine_66 class_pos_2_6) (<{Control.Monad.=<<}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) (CloogleDBFactory.findIclLine_47 id_name_3_0) icl_3) id_name_3_0) (CloogleDB.toClass (StdList.map CoclUtils.toTypeVar_2 class_args_2_2) (StdList.flatten (StdList.map CoclUtils.toClassContext_4 class_context_2_3)) (<{Data.Functor.<$>}> (<{Data.Functor.Functor;}> Data.Maybe.fmap_12) (CloogleDBFactory.flip_482 (<{CloogleDBFactory.c;278;70_43}> typespecs_4_0)) (CloogleDBFactory.findDoc_69 Doc.parseClassDoc id_2_0 st_0)) (<{CloogleDBFactory.c;280;47_44}> (CloogleDBFactory.pd_macros_59 lib_1 mod_2 dcl_1_1 st_0) typespecs_4_0))) ) ) 
CloogleDBFactory.pd_classes_64 lib_0 mod_1 !dcl_2 !icl_3 st_4 = StdList.map (CloogleDBFactory.anon_45 st_4 lib_0 mod_1 icl_3) (StdList.filter CloogleDBFactory.anon_40 dcl_2)
CloogleDBFactory.fst_92 !tuple_0 = select tuple_0::_Tuple2 0
<{CloogleDBFactory.c;255;21_38}> name_0 types_1 !g_l_2 = <{CloogleDBFactory.g_c1;255;72_541}> g_l_2 name_0 types_1
<{CloogleDBFactory.g_c1;255;72_541}> !g_l_0 name_1 types_2 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;255;72_540}> g_h_1_0 name_1 types_2 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;255;72_540}> !g_h_0 name_1 types_2 g_t_3 = case g_h_0 (syntax.PD_Instance _x_1_0 -> case _x_1_0 (syntax._ParsedInstanceAndMembers _x_2_0 pim_members_2_1 -> case _x_2_0 (syntax._ParsedInstance pi_class_3_0 pi_ident_3_1 pi_types_3_2 pi_context_3_3 pi_pos_3_4 pi_specials_3_5 -> case (case (<{StdString.==_2}> (select pi_ident_3_1::syntax._Ident 0) name_1) (True -> <{StdList.==_45}> (<{StdOverloaded.==;}> <{TypeDef.==_22}>) (StdList.map CoclUtils.toType_1 pi_types_3_2) types_2) (False -> False) ) (True -> _predefined._Cons pi_pos_3_4 (<{CloogleDBFactory.c;255;21_38}> name_1 types_2 g_t_3)) ) ) ) (_ -> <{CloogleDBFactory.c;255;21_38}> name_1 types_2 g_t_3)
CloogleDBFactory.findIclLine_39 name_0 types_1 !_x_2 = case _x_2 (syntax._Module mod_ident_1_0 mod_modification_time_1_1 mod_type_1_2 mod_imports_1_3 mod_imported_objects_1_4 mod_foreign_exports_1_5 pms_1_6 -> <{CloogleDBFactory._c;254;15_542}> (<{CloogleDBFactory.c;255;21_38}> name_0 types_1 pms_1_6)) 
<{CloogleDBFactory._c;254;15_542}> !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (syntax.LinePos _x_2_0 l_2_1 -> Data.Maybe.Just l_2_1) ) (_ -> Data.Maybe.Nothing)
<{CloogleDBFactory.c;246;14_33}> lib_0 mod_1 icl_2 !g_l_3 = <{CloogleDBFactory.g_c1;246;32_544}> g_l_3 lib_0 mod_1 icl_2
<{CloogleDBFactory.g_c1;246;32_544}> !g_l_0 lib_1 mod_2 icl_3 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;246;32_543}> g_h_1_0 lib_1 mod_2 icl_3 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;246;32_543}> !g_h_0 lib_1 mod_2 icl_3 g_t_4 = case g_h_0 (_Tuple3 id_1_0 types_1_1 pos_1_2 -> _predefined._Cons (_Tuple3 id_1_0 types_1_1 (CloogleDB.Location lib_1 mod_2 (CloogleDBFactory.toLine_66 pos_1_2) (<{Control.Monad.=<<}> (<{Control.Monad.Monad;}> Control.Monad.bind_25 (<{Control.Applicative.Applicative;}> <{Control.Applicative.<*>_14}> Control.Applicative.pure_15 (<{Data.Functor.Functor;}> Data.Maybe.fmap_12))) (CloogleDBFactory.findIclLine_39 id_1_0 (StdList.map CloogleDBFactory.fst_92 types_1_1)) icl_3) "")) (<{CloogleDBFactory.c;246;14_33}> lib_1 mod_2 icl_3 g_t_4)) (_ -> <{CloogleDBFactory.c;246;14_33}> lib_1 mod_2 icl_3 g_t_4)
<{CloogleDBFactory.c;250;86_36}> g_t_0 !g_l_1 = <{CloogleDBFactory.g_c1;250;99_548}> g_l_1 g_t_0
<{CloogleDBFactory.c;250;60_37}> !g_l_0 = <{CloogleDBFactory.g_c1;250;80_546}> g_l_0
<{CloogleDBFactory.g_c1;250;99_548}> !g_l_0 g_t_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;250;99_547}> g_h_1_0 g_t_1 g_t_1_1) (_ -> <{CloogleDBFactory.c;250;60_37}> g_t_1)
<{CloogleDBFactory.g_c2;250;99_547}> !g_h_0 g_t_1 g_t_2 = case g_h_0 (syntax._ParsedInstanceAndMembers i_1_0 pim_members_1_1 -> _predefined._Cons (_Tuple3 (select (select i_1_0::syntax._ParsedInstance 1)::syntax._Ident 0) (select i_1_0::syntax._ParsedInstance 2) (select i_1_0::syntax._ParsedInstance 4)) (<{CloogleDBFactory.c;250;86_36}> g_t_1 g_t_2)) (_ -> <{CloogleDBFactory.c;250;86_36}> g_t_1 g_t_2)
<{CloogleDBFactory.g_c1;250;80_546}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;250;80_545}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;250;80_545}> !g_h_0 g_t_1 = case g_h_0 (syntax.PD_Instances pis_1_0 -> <{CloogleDBFactory.c;250;86_36}> g_t_1 pis_1_0) (_ -> <{CloogleDBFactory.c;250;60_37}> g_t_1)
<{CloogleDBFactory.c;249;57_35}> !g_l_0 = <{CloogleDBFactory.g_c1;249;83_550}> g_l_0
<{CloogleDBFactory.g_c1;249;83_550}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;249;83_549}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;249;83_549}> !g_h_0 g_t_1 = case g_h_0 (syntax.PD_Instance _x_1_0 -> case _x_1_0 (syntax._ParsedInstanceAndMembers i_2_0 pim_members_2_1 -> _predefined._Cons (_Tuple3 (select (select i_2_0::syntax._ParsedInstance 1)::syntax._Ident 0) (select i_2_0::syntax._ParsedInstance 2) (select i_2_0::syntax._ParsedInstance 4)) (<{CloogleDBFactory.c;249;57_35}> g_t_1)) ) (_ -> <{CloogleDBFactory.c;249;57_35}> g_t_1)
CloogleDBFactory.anon_34 !_vtoType_0 !_vcpp_1 t_2 = _Tuple2 (select _vtoType_0::<{TypeDef.toType;}> 0 t_2) (select _vcpp_1::<{CleanPrettyPrint.cpp;}> 1 t_2)
CloogleDBFactory.anon_483 !_vcpp_0 t_1 = _Tuple2 (CoclUtils.toType_1 t_1) (select _vcpp_0::<{CleanPrettyPrint.cpp;}> 1 t_1)
CloogleDBFactory.anon_484 t_0 = _Tuple2 (CoclUtils.toType_1 t_0) (CleanPrettyPrint.cppp_9 t_0)
CloogleDBFactory.pd_instances_63 lib_0 mod_1 !dcl_2 !icl_3 = <{CloogleDBFactory.c;246;14_33}> lib_0 mod_1 icl_3 (StdList.map (Data.Tuple.appSnd3 (StdList.map CloogleDBFactory.anon_484)) (<{StdList.++}> (<{CloogleDBFactory.c;249;57_35}> dcl_2) (<{CloogleDBFactory.c;250;60_37}> dcl_2)))
<{CloogleDBFactory.c;200;40_25}> lib_0 mod_1 g_t_2 !g_l_3 = <{CloogleDBFactory.g_c1;200;75_554}> g_l_3 lib_0 mod_1 g_t_2
<{CloogleDBFactory.c;200;14_26}> lib_0 mod_1 !g_l_2 = <{CloogleDBFactory.g_c1;200;34_552}> g_l_2 lib_0 mod_1
<{CloogleDBFactory.g_c1;200;75_554}> !g_l_0 lib_1 mod_2 g_t_3 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;200;75_553}> g_h_1_0 lib_1 mod_2 g_t_3 g_t_1_1) (_ -> <{CloogleDBFactory.c;200;14_26}> lib_1 mod_2 g_t_3)
<{CloogleDBFactory.g_c2;200;75_553}> !g_h_0 lib_1 mod_2 g_t_3 g_t_4 = case g_h_0 (syntax._GenericCaseDef gc_pos_1_0 gc_type_1_1 gc_type_cons_1_2 _x_1_3 -> case _x_1_3 (syntax.GCF id_2_0 _x_2_1 -> _predefined._Cons (_Tuple2 (select id_2_0::syntax._Ident 0) (_predefined._Cons (_Tuple3 (CoclUtils.toType_1 gc_type_1_1) (CleanPrettyPrint.cpp_8 gc_type_1_1) (CloogleDB.Location lib_1 mod_2 (CloogleDBFactory.toLine_66 gc_pos_1_0) Data.Maybe.Nothing "")) _predefined._Nil)) (<{CloogleDBFactory.c;200;40_25}> lib_1 mod_2 g_t_3 g_t_4)) ) (_ -> <{CloogleDBFactory.c;200;40_25}> lib_1 mod_2 g_t_3 g_t_4)
<{CloogleDBFactory.g_c1;200;34_552}> !g_l_0 lib_1 mod_2 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{CloogleDBFactory.g_c2;200;34_551}> g_h_1_0 lib_1 mod_2 g_t_1_1) (_ -> _predefined._Nil)
<{CloogleDBFactory.g_c2;200;34_551}> !g_h_0 lib_1 mod_2 g_t_3 = case g_h_0 (syntax.PD_Derive gcdefs_1_0 -> <{CloogleDBFactory.c;200;40_25}> lib_1 mod_2 g_t_3 gcdefs_1_0) (_ -> <{CloogleDBFactory.c;200;14_26}> lib_1 mod_2 g_t_3)
CloogleDBFactory.pd_derivations_60 lib_0 mod_1 !dcl_2 = <{CloogleDBFactory.c;200;14_26}> lib_0 mod_1 dcl_2
CloogleDBFactory.pd_module_58 !iscore_0::B !_x_1 = case _x_1 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (syntax.PD_Documentation _x_2_0 doc_2_1 -> update (CloogleDBFactory.pd_module_58 iscore_0 _predefined._Nil)::CloogleDB._ModuleEntry [1:CloogleDBFactory.docParseResultToMaybe_68 (Doc.parseModuleDoc doc_2_1)]) ) (_ -> update CloogleDB.zero_52::CloogleDB._ModuleEntry [0:iscore_0])
CloogleDBFactory.indexModule !root_0 !mod_1 !lib_2 !iscore_3::B !db_4 !w_5 = let !_x_1_0 = CloogleDBFactory.readModule_67 root_0 lib_2 mod_1 False w_5, !dcl_1_1 = <{CloogleDBFactory._c;132;10_555}> (select _x_1_0::_Tuple3 0), !_x_1_2 = CloogleDBFactory.readModule_67 root_0 lib_2 mod_1 True (select _x_1_0::_Tuple3 2), !icl_1_3 = <{CloogleDBFactory._c;136;10_556}> (select _x_1_2::_Tuple3 0), !modname_1_4 = select (select dcl_1_1::syntax._Module 0)::syntax._Ident 0, !lib_1_5 = <{StdString.%_10}> lib_2 (_Tuple2 0 (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.-_7}> (_SystemArray.size_20 lib_2) (_SystemArray.size_20 modname_1_4)) (_SystemArray.size_20 mod_1)) 1)), !typedefs_1_6 = CloogleDBFactory.pd_types_65 lib_1_5 modname_1_4 (select dcl_1_1::syntax._Module 6) icl_1_3 symbols_1_8, !db_1_7 = update db_4::CloogleDBFactory._TemporaryDB [0:_predefined._Cons (CloogleDBFactory.pd_typespecs_62 lib_1_5 modname_1_4 (select dcl_1_1::syntax._Module 6) icl_1_3 symbols_1_8) (_predefined._Cons (CloogleDBFactory.pd_macros_59 lib_1_5 modname_1_4 (select dcl_1_1::syntax._Module 6) symbols_1_8) (_predefined._Cons (CloogleDBFactory.pd_generics_61 lib_1_5 modname_1_4 (select dcl_1_1::syntax._Module 6) icl_1_3 symbols_1_8) (_predefined._Cons (<{CloogleDBFactory.c;146;14_16}> typedefs_1_6) (_predefined._Cons (<{CloogleDBFactory.c;147;14_18}> typedefs_1_6) (select db_4::CloogleDBFactory._TemporaryDB 0))))),1:_predefined._Cons (CloogleDBFactory.pd_classes_64 lib_1_5 modname_1_4 (select dcl_1_1::syntax._Module 6) icl_1_3 symbols_1_8) (select db_4::CloogleDBFactory._TemporaryDB 1),2:_predefined._Cons (CloogleDBFactory.pd_instances_63 lib_1_5 modname_1_4 (select dcl_1_1::syntax._Module 6) icl_1_3) (select db_4::CloogleDBFactory._TemporaryDB 2),3:_predefined._Cons typedefs_1_6 (select db_4::CloogleDBFactory._TemporaryDB 3),4:_predefined._Cons (CloogleDBFactory.pd_derivations_60 lib_1_5 modname_1_4 (select dcl_1_1::syntax._Module 6)) (select db_4::CloogleDBFactory._TemporaryDB 4),5:_predefined._Cons (_Tuple3 lib_1_5 modname_1_4 (CloogleDBFactory.pd_module_58 iscore_3 (select dcl_1_1::syntax._Module 6))) (select db_4::CloogleDBFactory._TemporaryDB 5)], symbols_1_8 = select _x_1_0::_Tuple3 1 in <{_Tuple2!3}> db_1_7 (select _x_1_2::_Tuple3 2)
<{CloogleDBFactory._c;136;10_556}> !_x_0 = case _x_0 (Data.Either.Left _x_1_0 -> Data.Maybe.Nothing) (Data.Either.Right x_1_0 -> Data.Maybe.Just x_1_0) 
<{CloogleDBFactory._c;132;10_555}> !_x_0 = case _x_0 (Data.Either.Left a_1_0 -> StdMisc.abort a_1_0) (Data.Either.Right a_1_0 -> a_1_0) 
<{CloogleDBFactory.TD;TemporaryDB}> _x_0::B = _predefined._Nil


|| Converted Records
:: CloogleDBFactory._TemporaryDB = {!CloogleDBFactory.temp_functions, !CloogleDBFactory.temp_classes, !CloogleDBFactory.temp_instances, !CloogleDBFactory.temp_types, !CloogleDBFactory.temp_derivations, !CloogleDBFactory.temp_modules}

:: <{CloogleDBFactory.gEditor_s;}> = {CloogleDBFactory.gEditor_s}

:: <{CloogleDBFactory.gEditor_ss;}> = {CloogleDBFactory.gEditor_ss}

:: <{CloogleDBFactory.gEditor_sss;}> = {CloogleDBFactory.gEditor_sss}

:: <{CloogleDBFactory.gText_s;}> = {!CloogleDBFactory.gText_s}

:: <{CloogleDBFactory.gText_ss;}> = {!CloogleDBFactory.gText_ss}

:: <{CloogleDBFactory.gText_sss;}> = {!CloogleDBFactory.gText_sss}

:: <{CloogleDBFactory.JSONEncode_s;}> = {!CloogleDBFactory.JSONEncode_s}

:: <{CloogleDBFactory.JSONEncode_ss;}> = {!CloogleDBFactory.JSONEncode_ss}

:: <{CloogleDBFactory.JSONEncode_sss;}> = {!CloogleDBFactory.JSONEncode_sss}

:: <{CloogleDBFactory.JSONDecode_s;}> = {!CloogleDBFactory.JSONDecode_s}

:: <{CloogleDBFactory.JSONDecode_ss;}> = {!CloogleDBFactory.JSONDecode_ss}

:: <{CloogleDBFactory.JSONDecode_sss;}> = {!CloogleDBFactory.JSONDecode_sss}

:: <{CloogleDBFactory.gDefault_s;}> = {CloogleDBFactory.gDefault_s}

:: <{CloogleDBFactory.gDefault_ss;}> = {CloogleDBFactory.gDefault_ss}

:: <{CloogleDBFactory.gDefault_sss;}> = {CloogleDBFactory.gDefault_sss}

:: <{CloogleDBFactory.gEq_s;}> = {!CloogleDBFactory.gEq_s}

:: <{CloogleDBFactory.gEq_ss;}> = {!CloogleDBFactory.gEq_ss}

:: <{CloogleDBFactory.gEq_sss;}> = {!CloogleDBFactory.gEq_sss}

:: <{CloogleDBFactory.gEq_ssss;}> = {!CloogleDBFactory.gEq_ssss}

:: <{CloogleDBFactory.gEq_sssss;}> = {!CloogleDBFactory.gEq_sssss}

:: <{CloogleDBFactory.gEq_ssssss;}> = {!CloogleDBFactory.gEq_ssssss}

:: <{CloogleDBFactory.gEq_sssssss;}> = {!CloogleDBFactory.gEq_sssssss}

:: <{CloogleDBFactory.gEq_ssssssss;}> = {!CloogleDBFactory.gEq_ssssssss}

:: <{CloogleDBFactory.gEq_sssssssss;}> = {!CloogleDBFactory.gEq_sssssssss}

:: <{CloogleDBFactory.bimap_s;}> = {CloogleDBFactory.bimap_s}

:: <{CloogleDBFactory.bimap_ss;}> = {CloogleDBFactory.bimap_ss}

:: <{CloogleDBFactory.bimap_sss;}> = {CloogleDBFactory.bimap_sss}

:: <{CloogleDBFactory.JSONEncode_ssss;}> = {!CloogleDBFactory.JSONEncode_ssss}

:: <{CloogleDBFactory.JSONEncode_sssss;}> = {!CloogleDBFactory.JSONEncode_sssss}

:: <{CloogleDBFactory.JSONEncode_ssssss;}> = {!CloogleDBFactory.JSONEncode_ssssss}

:: <{CloogleDBFactory.JSONEncode_sssssss;}> = {!CloogleDBFactory.JSONEncode_sssssss}

:: <{CloogleDBFactory.JSONEncode_ssssssss;}> = {!CloogleDBFactory.JSONEncode_ssssssss}

:: <{CloogleDBFactory.JSONEncode_sssssssss;}> = {!CloogleDBFactory.JSONEncode_sssssssss}

:: <{CloogleDBFactory.JSONDecode_ssss;}> = {!CloogleDBFactory.JSONDecode_ssss}

:: <{CloogleDBFactory.JSONDecode_sssss;}> = {!CloogleDBFactory.JSONDecode_sssss}

:: <{CloogleDBFactory.JSONDecode_ssssss;}> = {!CloogleDBFactory.JSONDecode_ssssss}

:: <{CloogleDBFactory.JSONDecode_sssssss;}> = {!CloogleDBFactory.JSONDecode_sssssss}

:: <{CloogleDBFactory.JSONDecode_ssssssss;}> = {!CloogleDBFactory.JSONDecode_ssssssss}

:: <{CloogleDBFactory.JSONDecode_sssssssss;}> = {!CloogleDBFactory.JSONDecode_sssssssss}

:: <{CloogleDBFactory.gText_ssss;}> = {!CloogleDBFactory.gText_ssss}

:: <{CloogleDBFactory.gText_sssss;}> = {!CloogleDBFactory.gText_sssss}

:: <{CloogleDBFactory.gText_ssssss;}> = {!CloogleDBFactory.gText_ssssss}

:: <{CloogleDBFactory.gText_sssssss;}> = {!CloogleDBFactory.gText_sssssss}

:: <{CloogleDBFactory.gText_ssssssss;}> = {!CloogleDBFactory.gText_ssssssss}

:: <{CloogleDBFactory.gText_sssssssss;}> = {!CloogleDBFactory.gText_sssssssss}

:: <{CloogleDBFactory.gDefault_ssss;}> = {CloogleDBFactory.gDefault_ssss}

:: <{CloogleDBFactory.gDefault_sssss;}> = {CloogleDBFactory.gDefault_sssss}

:: <{CloogleDBFactory.gDefault_ssssss;}> = {CloogleDBFactory.gDefault_ssssss}

:: <{CloogleDBFactory.gDefault_sssssss;}> = {CloogleDBFactory.gDefault_sssssss}

:: <{CloogleDBFactory.gDefault_ssssssss;}> = {CloogleDBFactory.gDefault_ssssssss}

:: <{CloogleDBFactory.gDefault_sssssssss;}> = {CloogleDBFactory.gDefault_sssssssss}

:: <{CloogleDBFactory.gEditor_ssss;}> = {CloogleDBFactory.gEditor_ssss}

:: <{CloogleDBFactory.gEditor_sssss;}> = {CloogleDBFactory.gEditor_sssss}

:: <{CloogleDBFactory.gEditor_ssssss;}> = {CloogleDBFactory.gEditor_ssssss}

:: <{CloogleDBFactory.gEditor_sssssss;}> = {CloogleDBFactory.gEditor_sssssss}

