|| ?module? CoclSystemDependent


CoclSystemDependent.SystemDependentDevices = _predefined._Nil
CoclSystemDependent.SystemDependentInitialIO = _predefined._Nil
CoclSystemDependent.ensureCleanSystemFilesExists !path_0 !env_1 = filesystem.ensureDirectoryExists (<{StdFile.FileSystem;}> StdFile.fclose_26 StdFile.fopen_27 StdFile.sfopen_28 StdFile.stdio_29) path_0 env_1
CoclSystemDependent.set_compiler_id::I !compiler_id_0::I = compiler_id_0
CoclSystemDependent.skip_spaces_10::I !_vArray_0 string_1 !l_2::I !i_3::I = case (StdBool.not (<{StdInt.<_17}> i_3 l_2)) (True -> l_2) (False -> let c_2_0::C = select _vArray_0::<{_SystemArray.Array;}> 3 string_1 i_3 in case (case (<{StdChar.==_18}> c_2_0 ' ') (True -> True) (False -> <{StdChar.==_18}> c_2_0 '\t') ) (True -> CoclSystemDependent.skip_spaces_10 _vArray_0 string_1 l_2 (<{StdInt.+_6}> i_3 1)) (False -> i_3) ) 
CoclSystemDependent.skip_to_double_quote_12::I !_vArray_0 string_1 !l_2::I !i_3::I = case (StdBool.not (<{StdInt.<_17}> i_3 l_2)) (True -> l_2) (False -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 string_1 i_3) '"') (True -> i_3) (False -> CoclSystemDependent.skip_to_double_quote_12 _vArray_0 string_1 l_2 (<{StdInt.+_6}> i_3 1)) ) 
CoclSystemDependent.skip_to_space_11::I !_vArray_0 string_1 !l_2::I !i_3::I = case (StdBool.not (<{StdInt.<_17}> i_3 l_2)) (True -> l_2) (False -> let c_2_0::C = select _vArray_0::<{_SystemArray.Array;}> 3 string_1 i_3 in case (case (<{StdChar.==_18}> c_2_0 ' ') (True -> True) (False -> <{StdChar.==_18}> c_2_0 '\t') ) (True -> i_3) (False -> CoclSystemDependent.skip_to_space_11 _vArray_0 string_1 l_2 (<{StdInt.+_6}> i_3 1)) ) 
CoclSystemDependent.string_to_args_9 !_vArray_0 !<{_v%_1}> string_2 !l_3::I !i_4::I = let end_spaces_i_1_0::I = CoclSystemDependent.skip_spaces_10 _vArray_0 string_2 l_3 i_4 in case (<{StdInt.==_16}> end_spaces_i_1_0 l_3) (True -> _predefined._Nil) (False -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 string_2 end_spaces_i_1_0) '"') (True -> let next_double_quote_i_4_0::I = CoclSystemDependent.skip_to_double_quote_12 _vArray_0 string_2 l_3 (<{StdInt.+_6}> end_spaces_i_1_0 1) in case (StdBool.not (<{StdInt.<_17}> next_double_quote_i_4_0 l_3)) (True -> _predefined._Cons (select <{_v%_1}>::<{StdOverloaded.%;}> 0 string_2 (_Tuple2 end_spaces_i_1_0 (<{StdInt.-_7}> l_3 1))) _predefined._Nil) (False -> _predefined._Cons (select <{_v%_1}>::<{StdOverloaded.%;}> 0 string_2 (_Tuple2 (<{StdInt.+_6}> end_spaces_i_1_0 1) (<{StdInt.-_7}> next_double_quote_i_4_0 1))) (CoclSystemDependent.string_to_args_9 _vArray_0 <{_v%_1}> string_2 l_3 (<{StdInt.+_6}> next_double_quote_i_4_0 1))) ) (False -> let space_i_4_0::I = CoclSystemDependent.skip_to_space_11 _vArray_0 string_2 l_3 (<{StdInt.+_6}> end_spaces_i_1_0 1) in case (StdBool.not (<{StdInt.<_17}> space_i_4_0 l_3)) (True -> _predefined._Cons (select <{_v%_1}>::<{StdOverloaded.%;}> 0 string_2 (_Tuple2 end_spaces_i_1_0 (<{StdInt.-_7}> l_3 1))) _predefined._Nil) (False -> _predefined._Cons (select <{_v%_1}>::<{StdOverloaded.%;}> 0 string_2 (_Tuple2 end_spaces_i_1_0 (<{StdInt.-_7}> space_i_4_0 1))) (CoclSystemDependent.string_to_args_9 _vArray_0 <{_v%_1}> string_2 l_3 (<{StdInt.+_6}> space_i_4_0 1))) ) ) 
CoclSystemDependent.string_to_args !_vArray_0 !<{_v%_1}> string_2 = CoclSystemDependent.string_to_args_9 _vArray_0 <{_v%_1}> string_2 (select _vArray_0::<{_SystemArray.Array;}> 4 string_2) 0
CoclSystemDependent.skip_spaces_17::I string_0 !l_1::I !i_2::I = case (StdBool.not (<{StdInt.<_17}> i_2 l_1)) (True -> l_1) (False -> let c_2_0::C = _SystemArray.select_19 string_0 i_2 in case (case (<{StdChar.==_18}> c_2_0 ' ') (True -> True) (False -> <{StdChar.==_18}> c_2_0 '\t') ) (True -> CoclSystemDependent.skip_spaces_17 string_0 l_1 (<{StdInt.+_6}> i_2 1)) (False -> i_2) ) 
CoclSystemDependent.skip_to_double_quote_18::I string_0 !l_1::I !i_2::I = case (StdBool.not (<{StdInt.<_17}> i_2 l_1)) (True -> l_1) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 string_0 i_2) '"') (True -> i_2) (False -> CoclSystemDependent.skip_to_double_quote_18 string_0 l_1 (<{StdInt.+_6}> i_2 1)) ) 
CoclSystemDependent.skip_to_space_19::I string_0 !l_1::I !i_2::I = case (StdBool.not (<{StdInt.<_17}> i_2 l_1)) (True -> l_1) (False -> let c_2_0::C = _SystemArray.select_19 string_0 i_2 in case (case (<{StdChar.==_18}> c_2_0 ' ') (True -> True) (False -> <{StdChar.==_18}> c_2_0 '\t') ) (True -> i_2) (False -> CoclSystemDependent.skip_to_space_19 string_0 l_1 (<{StdInt.+_6}> i_2 1)) ) 
CoclSystemDependent.string_to_args_16 !<{_v%_0}> string_1 !l_2::I !i_3::I = let end_spaces_i_1_0::I = CoclSystemDependent.skip_spaces_17 string_1 l_2 i_3 in case (<{StdInt.==_16}> end_spaces_i_1_0 l_2) (True -> _predefined._Nil) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 string_1 end_spaces_i_1_0) '"') (True -> let next_double_quote_i_4_0::I = CoclSystemDependent.skip_to_double_quote_18 string_1 l_2 (<{StdInt.+_6}> end_spaces_i_1_0 1) in case (StdBool.not (<{StdInt.<_17}> next_double_quote_i_4_0 l_2)) (True -> _predefined._Cons (select <{_v%_0}>::<{StdOverloaded.%;}> 0 string_1 (_Tuple2 end_spaces_i_1_0 (<{StdInt.-_7}> l_2 1))) _predefined._Nil) (False -> _predefined._Cons (select <{_v%_0}>::<{StdOverloaded.%;}> 0 string_1 (_Tuple2 (<{StdInt.+_6}> end_spaces_i_1_0 1) (<{StdInt.-_7}> next_double_quote_i_4_0 1))) (CoclSystemDependent.string_to_args_16 <{_v%_0}> string_1 l_2 (<{StdInt.+_6}> next_double_quote_i_4_0 1))) ) (False -> let space_i_4_0::I = CoclSystemDependent.skip_to_space_19 string_1 l_2 (<{StdInt.+_6}> end_spaces_i_1_0 1) in case (StdBool.not (<{StdInt.<_17}> space_i_4_0 l_2)) (True -> _predefined._Cons (select <{_v%_0}>::<{StdOverloaded.%;}> 0 string_1 (_Tuple2 end_spaces_i_1_0 (<{StdInt.-_7}> l_2 1))) _predefined._Nil) (False -> _predefined._Cons (select <{_v%_0}>::<{StdOverloaded.%;}> 0 string_1 (_Tuple2 end_spaces_i_1_0 (<{StdInt.-_7}> space_i_4_0 1))) (CoclSystemDependent.string_to_args_16 <{_v%_0}> string_1 l_2 (<{StdInt.+_6}> space_i_4_0 1))) ) ) 
CoclSystemDependent.string_to_args_15 !<{_v%_0}> !string_1 = CoclSystemDependent.string_to_args_16 <{_v%_0}> string_1 (_SystemArray.size_20 string_1) 0
CoclSystemDependent.string_to_args_21 string_0 !l_1::I !i_2::I = let end_spaces_i_1_0::I = CoclSystemDependent.skip_spaces_17 string_0 l_1 i_2 in case (<{StdInt.==_16}> end_spaces_i_1_0 l_1) (True -> _predefined._Nil) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 string_0 end_spaces_i_1_0) '"') (True -> let next_double_quote_i_4_0::I = CoclSystemDependent.skip_to_double_quote_18 string_0 l_1 (<{StdInt.+_6}> end_spaces_i_1_0 1) in case (StdBool.not (<{StdInt.<_17}> next_double_quote_i_4_0 l_1)) (True -> _predefined._Cons (<{StdString.%_10}> string_0 (_Tuple2 end_spaces_i_1_0 (<{StdInt.-_7}> l_1 1))) _predefined._Nil) (False -> _predefined._Cons (<{StdString.%_10}> string_0 (_Tuple2 (<{StdInt.+_6}> end_spaces_i_1_0 1) (<{StdInt.-_7}> next_double_quote_i_4_0 1))) (CoclSystemDependent.string_to_args_21 string_0 l_1 (<{StdInt.+_6}> next_double_quote_i_4_0 1))) ) (False -> let space_i_4_0::I = CoclSystemDependent.skip_to_space_19 string_0 l_1 (<{StdInt.+_6}> end_spaces_i_1_0 1) in case (StdBool.not (<{StdInt.<_17}> space_i_4_0 l_1)) (True -> _predefined._Cons (<{StdString.%_10}> string_0 (_Tuple2 end_spaces_i_1_0 (<{StdInt.-_7}> l_1 1))) _predefined._Nil) (False -> _predefined._Cons (<{StdString.%_10}> string_0 (_Tuple2 end_spaces_i_1_0 (<{StdInt.-_7}> space_i_4_0 1))) (CoclSystemDependent.string_to_args_21 string_0 l_1 (<{StdInt.+_6}> space_i_4_0 1))) ) ) 
CoclSystemDependent.string_to_args_20 !string_0 = CoclSystemDependent.string_to_args_21 string_0 (_SystemArray.size_20 string_0) 0
CoclSystemDependent.compile_files compile_0 compile_state_1 = let n_1_0::I = ipc.get_command_length in case (<{StdInt.==_16}> n_1_0 -1) (True -> StdMisc.abort "compile_files 1") (False -> let string_3_0 = _SystemArray.createArray_17 n_1_0 '\0' in case (StdBool.not (<{StdInt.==_16}> (ipc.get_command string_3_0) 0)) (True -> StdMisc.abort "compile_files 2 ") (False -> <{CoclSystemDependent._c;111;7_24}> (CoclSystemDependent.string_to_args_20 (<{StdString.%_10}> string_3_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 string_3_0) 2)))) compile_0 compile_state_1) ) 
<{CoclSystemDependent._c;111;7_24}> !_x_0 compile_1 compile_state_2 = case _x_0 (_predefined._Cons _x_1_0 cocl_args_1_1 -> case _x_1_0 ("cocl" -> let _x_3_0 = compile_1 cocl_args_1_1 compile_state_2 in case (StdBool.not (<{StdInt.==_16}> (ipc.send_result (<{CoclSystemDependent._if;114;22_23}> (select _x_3_0::_Tuple2 0))) 0)) (True -> StdMisc.abort "compile_files 3") (False -> CoclSystemDependent.compile_files compile_1 (select _x_3_0::_Tuple2 1)) ) ("quit" -> case cocl_args_1_1 (_predefined._Nil -> compile_state_2) ) ) (_ -> StdMisc.abort "compile_files 4")
<{CoclSystemDependent._if;114;22_23}>::I !_x_0::B = case _x_0 (True -> 0) (_ -> -1)
CoclSystemDependent.compile_loop compile_0 !commands_1 !results_2 compile_state_3 = case (StdBool.not (<{StdInt.==_16}> (ipc.open_pipes commands_1 results_2) 0)) (True -> StdMisc.abort "compile_loop\n") (False -> CoclSystemDependent.compile_files compile_0 compile_state_3) 
<{CoclSystemDependent.c;45;25_8}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_3 g_i_1 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{CoclSystemDependent.c;45;25_8}> _vArray_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_2_0)) (False -> _predefined._Nil) 
<{CoclSystemDependent.c;45;25_22}> !g_i_0::I !g_s_1::I g_a_2 = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_78 g_a_2 g_i_0 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{CoclSystemDependent.c;45;25_22}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1 g_a_2_0)) (False -> _predefined._Nil) 
CoclSystemDependent.compiler_loop compile_0 compile_state_1 = let _x_1_0 = _SystemArray.usize_79 ArgEnv.getCommandLine, commandArgs_1_1 = StdList.tl (<{CoclSystemDependent.c;45;25_22}> 0 (<{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1) (select _x_1_0::_Tuple2 1)) in case (case (<{StdInt.==_16}> (StdList.length_47 commandArgs_1_1) 3) (True -> <{StdString.==_2}> (<{StdList.!!}> commandArgs_1_1 0) "--pipe") (False -> False) ) (True -> <{_Tuple2!3}> True (CoclSystemDependent.compile_loop compile_0 (<{StdList.!!}> commandArgs_1_1 1) (<{StdList.!!}> commandArgs_1_1 2) compile_state_1)) (False -> let _x_3_0 = compile_0 commandArgs_1_1 compile_state_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) 


|| Converted Records
