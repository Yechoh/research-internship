|| ?module? CleanPrettyPrint.Common


CleanPrettyPrint.Common.lookup_2 !<{_v==_0}> k_1 !_x_2 = case _x_2 (_predefined._Nil -> k_1) (_predefined._Cons _x_1_0 m_1_1 -> case _x_1_0 (_Tuple2 k`_2_0 v_2_1 -> case (select <{_v==_0}>::<{StdOverloaded.==;}> 0 k_1 <{k`_2_0}>) (True -> v_2_1) (False -> CleanPrettyPrint.Common.lookup_2 <{_v==_0}> k_1 m_1_1) ) ) 
CleanPrettyPrint.Common.lookup_4 !k_0 !_x_1 = case _x_1 (_predefined._Nil -> k_0) (_predefined._Cons _x_1_0 m_1_1 -> case _x_1_0 (_Tuple2 k`_2_0 v_2_1 -> case (<{StdString.==_2}> k_0 <{k`_2_0}>) (True -> v_2_1) (False -> CleanPrettyPrint.Common.lookup_4 k_0 m_1_1) ) ) 
CleanPrettyPrint.Common.print_0 _x_0 !_x_1 = case _x_1 (syntax._Ident id_name_1_0 id_info_1_1 -> CleanPrettyPrint.Common.lookup_4 id_name_1_0 (_predefined._Cons (_Tuple2 "_Nil" "[]") (_predefined._Cons (_Tuple2 "_nil" "[|]") (_predefined._Cons (_Tuple2 "_|Nil" "[|]") (_predefined._Cons (_Tuple2 "_#Nil" "[#]") _predefined._Nil))))) 
CleanPrettyPrint.Common.print_3 st_0 !_x_1 = case _x_1 (syntax.ID_Function f_1_0 -> CleanPrettyPrint.Common.print_0 st_0 f_1_0) (syntax.ID_Class c_1_0 mems_1_1 -> CleanPrettyPrint.Util.print_5 st_0 (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_5) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) "class " c_1_0) (<{CleanPrettyPrint.Common._c;47;17_5}> mems_1_1 st_0))) (syntax.ID_Type t_1_0 conses_1_1 -> CleanPrettyPrint.Util.print_5 st_0 (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_5) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) ":: " t_1_0) (<{CleanPrettyPrint.Common._c;54;19_6}> conses_1_1 st_0))) (syntax.ID_Record t_1_0 fields_1_1 -> CleanPrettyPrint.Util.print_5 st_0 (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_5) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) ":: " t_1_0) (<{CleanPrettyPrint.Common._c;61;19_7}> fields_1_1 st_0))) (syntax.ID_Instance cls_1_0 _x_1_1 _x_1_2 -> case _x_1_2 (_Tuple2 ts_2_0 tcs_2_1 -> let glue_3_0 = " " in CleanPrettyPrint.Util.print_5 st_0 (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_5) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) cls_1_0 (<{StdString.+++_11}> (<{CleanPrettyPrint.Common._if;31;34_8}> (CleanPrettyPrint.Util.isNil_6 (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Definition.print_1) ts_2_0) st_0 glue_3_0) (CleanPrettyPrint.Util.join_7 (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Definition.print_1) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) st_0 glue_3_0 ts_2_0))) (<{CleanPrettyPrint.Common._if;66;54_9}> (StdList.isEmpty tcs_2_1) st_0 tcs_2_1))) ) (syntax.ID_Generic id_1_0 _x_1_1 -> CleanPrettyPrint.Util.print_5 st_0 (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) "generic " id_1_0)) 
<{CleanPrettyPrint.Common._if;66;54_9}> !_x_0::B st_1 tcs_2 = case _x_0 (True -> "") (_ -> <{StdString.+++_11}> " | " (CleanPrettyPrint.Util.join_7 (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Definition.print_4) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) st_1 " & " tcs_2))
<{CleanPrettyPrint.Common._if;31;34_8}> !_x_0::B st_1 glue_2 = case _x_0 (True -> "") (_ -> CleanPrettyPrint.Util.print_1 st_1 glue_2)
<{CleanPrettyPrint.Common._c;61;19_7}> !fields_0 st_1 = case fields_0 (general.Yes _x_1_0 -> case _x_1_0 (_predefined._Nil -> "{..}") (_ -> <{StdString.+++_11}> "{" (<{StdString.+++_11}> (CleanPrettyPrint.Util.join_7 (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) st_1 "," _x_1_0) "}"))) (_ -> "")
<{CleanPrettyPrint.Common._c;54;19_6}> !conses_0 st_1 = case conses_0 (general.Yes _x_1_0 -> case _x_1_0 (_predefined._Nil -> "(..)") (_ -> <{StdString.+++_11}> "(" (<{StdString.+++_11}> (CleanPrettyPrint.Util.join_7 (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) st_1 "," _x_1_0) ")"))) (_ -> "")
<{CleanPrettyPrint.Common._c;47;17_5}> !mems_0 st_1 = case mems_0 (general.Yes _x_1_0 -> case _x_1_0 (_predefined._Nil -> "(..)") (_ -> <{StdString.+++_11}> "(" (<{StdString.+++_11}> (CleanPrettyPrint.Util.join_7 (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) st_1 "," _x_1_0) ")"))) (_ -> "")
CleanPrettyPrint.Common.print_1 st_0 !ip_1 = case ip_1 (syntax._Import import_module_1_0 import_symbols_1_1 import_file_position_1_2 import_qualified_1_3 -> case import_symbols_1_1 (syntax.ImportSymbolsOnly ids_2_0 -> case import_qualified_1_3 (syntax.NotQualified -> CleanPrettyPrint.Util.print_5 st_0 (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_5) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_5) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) "from " (select ip_1::syntax._Import 0)) " import ") (CleanPrettyPrint.Util.join_7 (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_3) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) st_0 ", " ids_2_0))) (_ -> StdMisc.abort "UNKNOWN: ImportSymbolsOnly with Qualified")) (syntax.ImportSymbolsAll -> CleanPrettyPrint.Util.print_5 st_0 (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_5) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_5) (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_5) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) (<{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) "import " (<{CleanPrettyPrint.Common._c;33;13_10}> (select ip_1::syntax._Import 3))) (select ip_1::syntax._Import 0)) (<{CleanPrettyPrint.Common._c;36;15_11}> (select ip_1::syntax._Import 3)))) ) 
<{CleanPrettyPrint.Common._c;36;15_11}> !_x_0 = case _x_0 (syntax.QualifiedAs name_1_0 -> <{CleanPrettyPrint.Util.:+:}> (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Util.print_1) (<{CleanPrettyPrint.Util.print;}> CleanPrettyPrint.Common.print_0) " as " name_1_0) (_ -> CleanPrettyPrint.Util.PrintNil)
<{CleanPrettyPrint.Common._c;33;13_10}> !_x_0 = case _x_0 (syntax.NotQualified -> "") (_ -> "qualified ")


|| Converted Records
