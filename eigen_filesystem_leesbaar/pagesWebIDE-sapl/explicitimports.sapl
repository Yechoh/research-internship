|| ?module? explicitimports


explicitimports.i_fold_st_129 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> explicitimports.i_fold_st_129 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
explicitimports.get_eei_ident !eii_0 = case eii_0 (checksupport.ExplImpInfo eii_ident_1_0 _x_1_1 -> _Tuple2 eii_ident_1_0 eii_0) 
explicitimports.mark_symbol_28 !_vArray_0 component_nr_1::I i_2::I !_x_3 = case _x_3 (_Tuple3 changed_symbols_accu_1_0 expl_imp_info_from_component_1_1 cs_symbol_table_1_2 -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 expl_imp_info_from_component_1_1 i_2, eii_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = explicitimports.get_eei_ident eii_2_1, eii_ident_2_3 = select _x_2_2::_Tuple2 0, _x_2_4 = Heap.readPtr (select eii_ident_2_3::syntax._Ident 1) cs_symbol_table_1_2, ste_2_5 = select _x_2_4::_Tuple2 0, cs_symbol_table_2_6 = select _x_2_4::_Tuple2 1, eii_2_7 = select _x_2_2::_Tuple2 1, expl_imp_info_from_component_2_8 = select _x_2_0::_Tuple2 1 in <{explicitimports._c;36;11_337}> (select ste_2_5::syntax._SymbolTableEntry 0) changed_symbols_accu_1_0 expl_imp_info_from_component_2_8 i_2 _vArray_0 eii_2_7 eii_ident_2_3 ste_2_5 component_nr_1 cs_symbol_table_2_6) 
<{explicitimports._c;36;11_337}> !_x_0 changed_symbols_accu_1 expl_imp_info_from_component_2 i_3::I _vArray_4 eii_5 eii_ident_6 ste_7 component_nr_8::I cs_symbol_table_9 = case _x_0 (syntax.STE_ExplImpComponentNrs component_nrs_1_0 -> _Tuple3 changed_symbols_accu_1 (select _vArray_4::<{_SystemArray.Array;}> 5 expl_imp_info_from_component_2 i_3 eii_5) (Heap.writePtr (select eii_ident_6::syntax._Ident 1) (update ste_7::syntax._SymbolTableEntry [0:syntax.STE_ExplImpComponentNrs (_predefined._Cons (syntax._ComponentNrAndIndex component_nr_8 i_3) component_nrs_1_0)]) cs_symbol_table_9)) (_ -> _Tuple3 (_predefined._Cons eii_ident_6 changed_symbols_accu_1) (select _vArray_4::<{_SystemArray.Array;}> 5 expl_imp_info_from_component_2 i_3 eii_5) (Heap.writePtr (select eii_ident_6::syntax._Ident 1) (update ste_7::syntax._SymbolTableEntry [0:syntax.STE_ExplImpComponentNrs (_predefined._Cons (syntax._ComponentNrAndIndex component_nr_8 i_3) _predefined._Nil),3:ste_7]) cs_symbol_table_9))
explicitimports.mark_symbol_267 component_nr_0::I !i_1::I !_x_2 = case _x_2 (_Tuple3 changed_symbols_accu_1_0 expl_imp_info_from_component_1_1 cs_symbol_table_1_2 -> let _x_2_0 = _SystemArray.uselect_6 expl_imp_info_from_component_1_1 i_1, eii_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = explicitimports.get_eei_ident eii_2_1, eii_ident_2_3 = select _x_2_2::_Tuple2 0, _x_2_4 = Heap.readPtr (select eii_ident_2_3::syntax._Ident 1) cs_symbol_table_1_2, ste_2_5 = select _x_2_4::_Tuple2 0, cs_symbol_table_2_6 = select _x_2_4::_Tuple2 1, eii_2_7 = select _x_2_2::_Tuple2 1, expl_imp_info_from_component_2_8 = select _x_2_0::_Tuple2 1 in <{explicitimports._c;36;11_338}> (select ste_2_5::syntax._SymbolTableEntry 0) changed_symbols_accu_1_0 expl_imp_info_from_component_2_8 i_1 eii_2_7 eii_ident_2_3 ste_2_5 component_nr_0 cs_symbol_table_2_6) 
<{explicitimports._c;36;11_338}> !_x_0 changed_symbols_accu_1 expl_imp_info_from_component_2 i_3::I eii_4 eii_ident_5 ste_6 component_nr_7::I cs_symbol_table_8 = case _x_0 (syntax.STE_ExplImpComponentNrs component_nrs_1_0 -> _Tuple3 changed_symbols_accu_1 (_SystemArray.update_5 expl_imp_info_from_component_2 i_3 eii_4) (Heap.writePtr (select eii_ident_5::syntax._Ident 1) (update ste_6::syntax._SymbolTableEntry [0:syntax.STE_ExplImpComponentNrs (_predefined._Cons (syntax._ComponentNrAndIndex component_nr_7 i_3) component_nrs_1_0)]) cs_symbol_table_8)) (_ -> _Tuple3 (_predefined._Cons eii_ident_5 changed_symbols_accu_1) (_SystemArray.update_5 expl_imp_info_from_component_2 i_3 eii_4) (Heap.writePtr (select eii_ident_5::syntax._Ident 1) (update ste_6::syntax._SymbolTableEntry [0:syntax.STE_ExplImpComponentNrs (_predefined._Cons (syntax._ComponentNrAndIndex component_nr_7 i_3) _predefined._Nil),3:ste_6]) cs_symbol_table_8))
explicitimports.i_fold_st_268 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> explicitimports.i_fold_st_268 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
explicitimports.i_fold_st_269 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> explicitimports.i_fold_st_269 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
explicitimports.i_fold_st_270 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> explicitimports.i_fold_st_270 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
explicitimports.i_fold_st_271 component_nr_0::I !fr_1::I !to_2::I !st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> explicitimports.i_fold_st_271 component_nr_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (explicitimports.mark_symbol_267 component_nr_0 fr_1 st_3)) 
explicitimports.markExplImpSymbols !component_nr_0::I !_x_1 = case _x_1 (_Tuple2 expl_imp_info_1_0 cs_symbol_table_1_1 -> let !nr_of_expl_imp_symbols_2_0::I = _SystemArray.size_4 expl_imp_info_from_component_2_2, _x_2_1 = _SystemArray.uselect_54 expl_imp_info_1_0 component_nr_0, expl_imp_info_from_component_2_2 = select _x_2_1::_Tuple2 0, _x_2_3 = explicitimports.i_fold_st_271 component_nr_0 0 nr_of_expl_imp_symbols_2_0 (_Tuple3 _predefined._Nil expl_imp_info_from_component_2_2 cs_symbol_table_1_1) in <{_Tuple2!3}> (select _x_2_3::_Tuple3 0) (_Tuple2 (_SystemArray.update_53 (select _x_2_1::_Tuple2 1) component_nr_0 (select _x_2_3::_Tuple3 1)) (select _x_2_3::_Tuple3 2))) 
explicitimports.fold_st_139 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_139 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.anon_138 !f_0 !_x_1 st_2 = case _x_1 (syntax._DefinedSymbol ds_ident_1_0 ds_arity_1_1 ds_index_1_2 -> f_0 ds_ident_1_0 st_2) 
explicitimports.fold_a_st_137 !_vArray_0 f_1 !i_2::I a_3 st_4 = case (<{StdInt.==_16}> i_2 (select _vArray_0::<{_SystemArray.Array;}> 4 a_3)) (True -> st_4) (False -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 a_3 i_2 in explicitimports.fold_a_st_137 _vArray_0 f_1 (<{StdInt.+_6}> i_2 1) (select _x_2_0::_Tuple2 1) (f_1 (select _x_2_0::_Tuple2 0) st_4)) 
explicitimports.anon_136 !f_0 !_x_1 st_2 = case _x_1 (syntax._FieldSymbol fs_ident_1_0 fs_var_1_1 fs_index_1_2 -> f_0 fs_ident_1_0 st_2) 
explicitimports.fold_a_st_135 !_vArray_0 f_1 !i_2::I a_3 st_4 = case (<{StdInt.==_16}> i_2 (select _vArray_0::<{_SystemArray.Array;}> 4 a_3)) (True -> st_4) (False -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 a_3 i_2 in explicitimports.fold_a_st_135 _vArray_0 f_1 (<{StdInt.+_6}> i_2 1) (select _x_2_0::_Tuple2 1) (f_1 (select _x_2_0::_Tuple2 0) st_4)) 
explicitimports.anon_134 !f_0 !_x_1 st_2 = case _x_1 (syntax._DefinedSymbol ds_ident_1_0 ds_arity_1_1 ds_index_1_2 -> f_0 ds_ident_1_0 st_2) 
explicitimports.fold_st_133 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_133 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.set_bit_30 !_x_0 !_x_1 = case _x_0 (syntax._Ident id_name_1_0 id_info_1_1 -> case _x_1 (_Tuple3 bit_nr_2_0 bitvect_2_1 cs_symbol_table_2_2 -> let _x_3_0 = Heap.readPtr id_info_1_1 cs_symbol_table_2_2 in _Tuple3 (<{StdInt.+_6}> bit_nr_2_0 1) (<{explicitimports._c;74;13_339}> (select (select _x_3_0::_Tuple2 0)::syntax._SymbolTableEntry 0) bitvect_2_1 bit_nr_2_0) (select _x_3_0::_Tuple2 1)) ) 
<{explicitimports._c;74;13_339}> !_x_0 !bitvect_1 bit_nr_2::I = case _x_0 (syntax.STE_Empty -> bitvect_1) (syntax.STE_BelongingSymbolForExportedSymbol -> bitvect_1) (_ -> containers.bitvectSet bit_nr_2 bitvect_1)
explicitimports.fold_a_st_274 f_0 !i_1::I !a_2 st_3 = case (<{StdInt.==_16}> i_1 (explicitimports.size_183 a_2)) (True -> st_3) (False -> let _x_2_0 = explicitimports.uselect_185 a_2 i_1 in explicitimports.fold_a_st_274 f_0 (<{StdInt.+_6}> i_1 1) (select _x_2_0::_Tuple2 1) (f_0 (select _x_2_0::_Tuple2 0) st_3)) 
explicitimports.fold_a_st_273 f_0 !i_1::I !a_2 st_3 = case (<{StdInt.==_16}> i_1 (explicitimports.size_175 a_2)) (True -> st_3) (False -> let _x_2_0 = explicitimports.uselect_177 a_2 i_1 in explicitimports.fold_a_st_273 f_0 (<{StdInt.+_6}> i_1 1) (select _x_2_0::_Tuple2 1) (f_0 (select _x_2_0::_Tuple2 0) st_3)) 
explicitimports.fold_st_272 f_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_272 f_0 x_1_1 (explicitimports.anon_134 f_0 a_1_0 st_2)) 
explicitimports.fold_a_st_276 f_0 !i_1::I !a_2 st_3 = case (<{StdInt.==_16}> i_1 (explicitimports.size_183 a_2)) (True -> st_3) (False -> let _x_2_0 = explicitimports.uselect_185 a_2 i_1 in explicitimports.fold_a_st_276 f_0 (<{StdInt.+_6}> i_1 1) (select _x_2_0::_Tuple2 1) (explicitimports.anon_138 f_0 (select _x_2_0::_Tuple2 0) st_3)) 
explicitimports.fold_a_st_275 f_0 !i_1::I !a_2 st_3 = case (<{StdInt.==_16}> i_1 (explicitimports.size_175 a_2)) (True -> st_3) (False -> let _x_2_0 = explicitimports.uselect_177 a_2 i_1 in explicitimports.fold_a_st_275 f_0 (<{StdInt.+_6}> i_1 1) (select _x_2_0::_Tuple2 1) (explicitimports.anon_136 f_0 (select _x_2_0::_Tuple2 0) st_3)) 
explicitimports.get_belonging_symbol_nrs_29 !decl_0 !dcl_modules_1 !cs_symbol_table_2 = let _x_1_0 = checksupport.getBelongingSymbols decl_0 dcl_modules_1, all_belonging_symbols_1_1 = select _x_1_0::_Tuple2 0, _x_1_2 = <{explicitimports._c;82;9_340}> all_belonging_symbols_1_1 cs_symbol_table_2 in <{_Tuple3!7}> (containers.bitvectToNumberSet (select _x_1_2::_Tuple3 1)) (select _x_1_0::_Tuple2 1) (select _x_1_2::_Tuple3 2)
<{explicitimports._c;82;9_340}> !all_belonging_symbols_0 cs_symbol_table_1 = case all_belonging_symbols_0 (checksupport.BS_Constructors constructors_1_0 -> explicitimports.fold_st_272 explicitimports.set_bit_30 constructors_1_0 (_Tuple3 0 (containers.bitvectCreate (checksupport.nrOfBelongingSymbols all_belonging_symbols_0)) cs_symbol_table_1)) (checksupport.BS_Fields fields_1_0 -> explicitimports.fold_a_st_275 explicitimports.set_bit_30 0 fields_1_0 (_Tuple3 0 (containers.bitvectCreate (checksupport.nrOfBelongingSymbols all_belonging_symbols_0)) cs_symbol_table_1)) (checksupport.BS_Members members_1_0 -> explicitimports.fold_a_st_276 explicitimports.set_bit_30 0 members_1_0 (_Tuple3 0 (containers.bitvectCreate (checksupport.nrOfBelongingSymbols all_belonging_symbols_0)) cs_symbol_table_1)) (checksupport.BS_Nothing -> _Tuple3 0 (containers.bitvectCreate (checksupport.nrOfBelongingSymbols all_belonging_symbols_0)) cs_symbol_table_1) 
explicitimports.addExplImpInfo !mod_index_0::I !decl_1 !_x_2 !_x_3 = case _x_2 (syntax._ComponentNrAndIndex cai_component_nr_1_0 cai_index_1_1 -> case _x_3 (_Tuple3 dcl_modules_2_0 expl_imp_infos_2_1 cs_symbol_table_2_2 -> let _x_3_0 = explicitimports.get_belonging_symbol_nrs_29 decl_1 dcl_modules_2_0 cs_symbol_table_2_2, _x_3_1 = _SystemArray.select_3 (_SystemArray.select_51 expl_imp_infos_2_1 cai_component_nr_1_0) cai_index_1_1, _x_3_2 = select _x_3_1::_Tuple2 0 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 1) (_SystemArray.update_5 (_SystemArray.select_51 (select _x_3_1::_Tuple2 1) cai_component_nr_1_0) cai_index_1_1 (checksupport.ExplImpInfo (select _x_3_2::_Tuple2 0) (<{containers.ikhInsert`}> False mod_index_0 (checksupport._DeclarationInfo decl_1 (select _x_3_0::_Tuple3 0)) (select _x_3_2::_Tuple2 1)))) (select _x_3_0::_Tuple3 2)) ) 
explicitimports.fold_st_277 mod_index_0::I decl_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_277 mod_index_0 decl_1 x_1_1 (explicitimports.addExplImpInfo mod_index_0 decl_1 a_1_0 st_3)) 
explicitimports.updateExplImpForMarkedSymbol !mod_index_0::I !decl_1 !_x_2 !dcl_modules_3 !expl_imp_infos_4 !cs_symbol_table_5 = case _x_2 (syntax._SymbolTableEntry _x_1_0 ste_index_1_1 ste_def_level_1_2 ste_previous_1_3 ste_doc_1_4 -> case _x_1_0 (syntax.STE_ExplImpComponentNrs component_numbers_2_0 -> explicitimports.fold_st_277 mod_index_0 decl_1 component_numbers_2_0 (_Tuple3 dcl_modules_3 expl_imp_infos_4 cs_symbol_table_5)) ) (_ -> <{_Tuple3!7}> dcl_modules_3 expl_imp_infos_4 cs_symbol_table_5)
explicitimports.map_st_150 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = explicitimports.map_st_150 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
explicitimports.map_st_149 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = explicitimports.map_st_149 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
explicitimports.split_imports_37 !_x_0 = case _x_0 (_predefined._Cons imports_1_0 import_indices_1_1 -> <{explicitimports._c;132;11_344}> imports_1_0 import_indices_1_1 _x_0) (_ -> explicitimports._f341_341 _x_0)
<{explicitimports._c;132;11_344}> !imports_0 import_indices_1 _x_2 = case imports_0 (explicitimports._ExplicitImport ei_module_n_1_0 ei_position_1_1 _x_1_2 _x_1_3 -> explicitimports._f343_343 _x_1_2 _x_1_3 import_indices_1 imports_0 ei_module_n_1_0 ei_position_1_1 _x_2) 
explicitimports._f343_343 !_x_0 _x_1 import_indices_2 imports_3 ei_module_n_4::I ei_position_5 _x_6 = case _x_0 (syntax.ImportSymbolsOnly _x_1_0 -> explicitimports._f342_342 _x_1 import_indices_2 imports_3) (syntax.ImportSymbolsAll -> let _x_2_0 = explicitimports.split_imports_37 import_indices_2 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (_predefined._Cons (_Tuple2 ei_module_n_4 ei_position_5) (select _x_2_0::_Tuple3 2))) (_ -> explicitimports._f341_341 _x_6)
explicitimports._f342_342 !_x_0 !import_indices_1 imports_2 = case _x_0 (syntax.NotQualified -> let _x_2_0 = explicitimports.split_imports_37 import_indices_1 in <{_Tuple3!7}> (_predefined._Cons imports_2 (select _x_2_0::_Tuple3 0)) (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) (_ -> let _x_1_0 = explicitimports.split_imports_37 import_indices_1 in <{_Tuple3!7}> (select _x_1_0::_Tuple3 0) (_predefined._Cons imports_2 (select _x_1_0::_Tuple3 1)) (select _x_1_0::_Tuple3 2))
explicitimports._f341_341 !_x_0 = case _x_0 (_predefined._Nil -> <{_Tuple3!7}> _predefined._Nil _predefined._Nil _predefined._Nil) 
explicitimports.fold_st_148 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_148 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.stupid_ident =: syntax._Ident "stupid" Heap.nilPtr
explicitimports.getBelongingSymbolsFromID !_x_0 = case _x_0 (syntax.ID_Class _x_1_0 x_1_1 -> x_1_1) (syntax.ID_Type _x_1_0 x_1_1 -> x_1_1) (syntax.ID_Record _x_1_0 x_1_1 -> x_1_1) (_ -> general.No)
explicitimports.search_imported_symbol_57 !imported_symbol_0::I !_x_1 = case _x_1 (_predefined._Nil -> <{_Tuple2!3}> False general.No) (_predefined._Cons _x_1_0 t_1_1 -> case _x_1_0 (explicitimports._ImportNrAndIdents ini_symbol_nr_2_0 ini_imp_decl_2_1 -> case (<{StdInt.==_16}> imported_symbol_0 ini_symbol_nr_2_0) (True -> <{_Tuple2!3}> True (explicitimports.getBelongingSymbolsFromID ini_imp_decl_2_1)) (False -> explicitimports.search_imported_symbol_57 imported_symbol_0 t_1_1) ) ) 
explicitimports.is_member_59::B !belong_ident_0 !_x_1 = case _x_1 (_predefined._Nil -> False) (_predefined._Cons ii_ident_1_0 t_1_1 -> case (<{syntax.==_15}> belong_ident_0 ii_ident_1_0) (True -> True) (False -> explicitimports.is_member_59 belong_ident_0 t_1_1) ) 
explicitimports.belong_ident_found_58::B !belong_ident_0 !_x_1 = case _x_1 (general.No -> False) (general.Yes _x_1_0 -> case _x_1_0 (_predefined._Nil -> True) (_ -> explicitimports.is_member_59 belong_ident_0 _x_1_0)) 
explicitimports.continue_36 !imp_imp_mod_0::I imports_1 expl_imp_indices_ikh_2 modules_in_component_set_3 imported_symbol_4::I belong_nr_5::I belong_ident_6 path_7 !eii_declaring_modules_8 visited_modules_9 = let _x_1_0 = explicitimports.depth_first_search_55 expl_imp_indices_ikh_2 modules_in_component_set_3 imp_imp_mod_0 imported_symbol_4 belong_nr_5 belong_ident_6 path_7 eii_declaring_modules_8 visited_modules_9, opt_decl_1_1 = select _x_1_0::_Tuple4 0, visited_modules_1_2 = select _x_1_0::_Tuple4 3, eii_declaring_modules_1_3 = select _x_1_0::_Tuple4 2, path_1_4 = select _x_1_0::_Tuple4 1 in <{explicitimports._c;389;15_348}> opt_decl_1_1 path_1_4 eii_declaring_modules_1_3 visited_modules_1_2 imports_1 expl_imp_indices_ikh_2 modules_in_component_set_3 imported_symbol_4 belong_nr_5 belong_ident_6
explicitimports.try_children_56 !_x_0 expl_imp_indices_ikh_1 modules_in_component_set_2 imported_symbol_3::I belong_nr_4::I belong_ident_5 path_6 eii_declaring_modules_7 visited_modules_8 = case _x_0 (_predefined._Cons _x_1_0 imports_1_1 -> case _x_1_0 (explicitimports._ExplicitImport imp_imp_mod_2_0 ei_position_2_1 ei_symbols_2_2 ei_qualified_2_3 -> case (containers.bitvectSelect imp_imp_mod_2_0 visited_modules_8) (True -> explicitimports.try_children_56 imports_1_1 expl_imp_indices_ikh_1 modules_in_component_set_2 imported_symbol_3 belong_nr_4 belong_ident_5 path_6 eii_declaring_modules_7 visited_modules_8) (False -> <{explicitimports._c;370;11_347}> ei_symbols_2_2 imp_imp_mod_2_0 imports_1_1 expl_imp_indices_ikh_1 modules_in_component_set_2 imported_symbol_3 belong_nr_4 belong_ident_5 path_6 eii_declaring_modules_7 visited_modules_8) ) ) (_predefined._Nil -> _Tuple4 general.No _predefined._Nil eii_declaring_modules_7 visited_modules_8) 
explicitimports.depth_first_search_55 expl_imp_indices_ikh_0 modules_in_component_set_1 !imported_mod_2::I imported_symbol_3::I belong_nr_4::I belong_ident_5 path_6 !eii_declaring_modules_7 visited_modules_8 = let _x_1_0 = containers.ikhUSearch imported_mod_2 eii_declaring_modules_7, search_result_1_1 = select _x_1_0::_Tuple2 0, eii_declaring_modules_1_2 = select _x_1_0::_Tuple2 1 in <{explicitimports._c;348;11_345}> search_result_1_1 belong_nr_4 path_6 eii_declaring_modules_1_2 visited_modules_8 imported_mod_2 modules_in_component_set_1 expl_imp_indices_ikh_0 imported_symbol_3 belong_ident_5
<{explicitimports._c;389;15_348}> !opt_decl_0 path_1 eii_declaring_modules_2 visited_modules_3 imports_4 expl_imp_indices_ikh_5 modules_in_component_set_6 imported_symbol_7::I belong_nr_8::I belong_ident_9 = case opt_decl_0 (general.Yes _x_1_0 -> _Tuple4 opt_decl_0 path_1 eii_declaring_modules_2 visited_modules_3) (general.No -> explicitimports.try_children_56 imports_4 expl_imp_indices_ikh_5 modules_in_component_set_6 imported_symbol_7 belong_nr_8 belong_ident_9 path_1 eii_declaring_modules_2 visited_modules_3) 
<{explicitimports._c;370;11_347}> !ei_symbols_0 imp_imp_mod_1::I imports_2 expl_imp_indices_ikh_3 modules_in_component_set_4 imported_symbol_5::I belong_nr_6::I belong_ident_7 path_8 eii_declaring_modules_9 visited_modules_10 = case ei_symbols_0 (syntax.ImportSymbolsAll -> explicitimports.continue_36 imp_imp_mod_1 imports_2 expl_imp_indices_ikh_3 modules_in_component_set_4 imported_symbol_5 belong_nr_6 belong_ident_7 path_8 eii_declaring_modules_9 visited_modules_10) (syntax.ImportSymbolsOnly imp_imp_symbols_1_0 -> let _x_2_0 = explicitimports.search_imported_symbol_57 imported_symbol_5 imp_imp_symbols_1_0 in case (StdBool.not (explicitimports._f346_346 (select _x_2_0::_Tuple2 0) belong_nr_6 belong_ident_7 _x_2_0)) (True -> explicitimports.try_children_56 imports_2 expl_imp_indices_ikh_3 modules_in_component_set_4 imported_symbol_5 belong_nr_6 belong_ident_7 path_8 eii_declaring_modules_9 visited_modules_10) (False -> explicitimports.continue_36 imp_imp_mod_1 imports_2 expl_imp_indices_ikh_3 modules_in_component_set_4 imported_symbol_5 belong_nr_6 belong_ident_7 path_8 eii_declaring_modules_9 visited_modules_10) ) 
explicitimports._f346_346::B !_x_0::B belong_nr_1::I belong_ident_2 _x_3 = case _x_0 (True -> case (StdBool.not (StdBool.not (<{StdInt.==_16}> belong_nr_1 -1))) (True -> True) (False -> explicitimports.belong_ident_found_58 belong_ident_2 (select _x_3::_Tuple2 1)) ) (_ -> False)
<{explicitimports._c;348;11_345}> !search_result_0 belong_nr_1::I path_2 eii_declaring_modules_3 visited_modules_4 imported_mod_5::I modules_in_component_set_6 expl_imp_indices_ikh_7 imported_symbol_8::I belong_ident_9 = case search_result_0 (general.Yes di_1_0 -> case (<{StdInt.==_16}> belong_nr_1 -1) (True -> _Tuple4 search_result_0 path_2 eii_declaring_modules_3 visited_modules_4) (False -> case (containers.inNumberSet belong_nr_1 (select di_1_0::checksupport._DeclarationInfo 1)) (True -> _Tuple4 search_result_0 path_2 eii_declaring_modules_3 visited_modules_4) ) ) (_ -> case (StdBool.not (containers.bitvectSelect imported_mod_5 modules_in_component_set_6)) (True -> _Tuple4 general.No _predefined._Nil eii_declaring_modules_3 visited_modules_4) (False -> explicitimports.try_children_56 (<{containers.ikhSearch`}> imported_mod_5 expl_imp_indices_ikh_7) expl_imp_indices_ikh_7 modules_in_component_set_6 imported_symbol_8 belong_nr_1 belong_ident_9 (_predefined._Cons imported_mod_5 path_2) eii_declaring_modules_3 (containers.bitvectSet imported_mod_5 visited_modules_4)) )
explicitimports.is_not_STE_member_52::B !_x_0 = case _x_0 (syntax.STE_Imported _x_1_0 _x_1_1 -> case _x_1_0 (syntax.STE_Member -> False) ) (syntax.STE_Member -> False) (_ -> True)
explicitimports.fold_st_146 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_146 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.anon_35 !di_decl_0 !mod_index_1::I !eei_dm_2 = <{containers.ikhInsert`}> False mod_index_1 (checksupport._DeclarationInfo di_decl_0 containers.EndNumbers) eei_dm_2
explicitimports.fold_st_278 di_decl_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_278 di_decl_0 x_1_1 (explicitimports.anon_35 di_decl_0 a_1_0 st_2)) 
explicitimports.update_declaring_modules_53 di_decl_0 !path_1 !eii_declaring_modules_2 = explicitimports.fold_st_278 di_decl_0 path_1 eii_declaring_modules_2
explicitimports.update_belonging_accu_54 di_decl_0 !ini_1 imported_mod_2 belonging_accu_3 = <{explicitimports._c;339;11_349}> (explicitimports.getBelongingSymbolsFromID (select ini_1::explicitimports._ImportNrAndIdents 1)) belonging_accu_3 di_decl_0 ini_1 imported_mod_2
<{explicitimports._c;339;11_349}> !_x_0 belonging_accu_1 di_decl_2 ini_3 imported_mod_4 = case _x_0 (general.No -> belonging_accu_1) (general.Yes _x_1_0 -> _predefined._Cons (_Tuple3 di_decl_2 ini_3 imported_mod_4) belonging_accu_1) 
explicitimports.search_expl_imp_symbol_50 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 !imported_mod_3::I !ini_4 !_x_5 = case ini_4 (explicitimports._ImportNrAndIdents ini_symbol_nr_1_0 ini_imp_decl_1_1 -> case _x_5 (_Tuple5 not_exported_symbols_2_0 decls_accu_2_1 belonging_accu_2_2 visited_modules_2_3 expl_imp_info_2_4 -> let _x_3_0 = _SystemArray.uselect_6 expl_imp_info_2_4 ini_symbol_nr_1_0, _x_3_1 = select _x_3_0::_Tuple2 0, eii_declaring_modules_3_2 = select _x_3_1::_Tuple2 1, _x_3_3 = explicitimports.depth_first_search_55 expl_imp_indices_ikh_0 modules_in_component_set_1 imported_mod_3 ini_symbol_nr_1_0 -1 explicitimports.stupid_ident path_2 eii_declaring_modules_3_2 (containers.bitvectResetAll visited_modules_2_3), visited_modules_3_4 = select _x_3_3::_Tuple4 3, eii_declaring_modules_3_5 = select _x_3_3::_Tuple4 2, path_3_6 = select _x_3_3::_Tuple4 1, expl_imp_info_3_7 = select _x_3_0::_Tuple2 1, eii_ident_3_8 = select _x_3_1::_Tuple2 0 in <{explicitimports._c;300;11_350}> (select _x_3_3::_Tuple4 0) not_exported_symbols_2_0 decls_accu_2_1 ini_4 imported_mod_3 belonging_accu_2_2 visited_modules_3_4 expl_imp_info_3_7 ini_symbol_nr_1_0 eii_ident_3_8 path_3_6 eii_declaring_modules_3_5) ) 
<{explicitimports._c;300;11_350}> !_x_0 not_exported_symbols_1 decls_accu_2 ini_3 imported_mod_4::I belonging_accu_5 visited_modules_6 expl_imp_info_7 ini_symbol_nr_8::I eii_ident_9 path_10 eii_declaring_modules_11 = case _x_0 (general.Yes di_1_0 -> case di_1_0 (checksupport._DeclarationInfo di_decl_2_0 di_belonging_2_1 -> case di_decl_2_0 (syntax.Declaration _x_3_0 -> case _x_3_0 (syntax._DeclarationRecord decl_ident_4_0 decl_pos_4_1 decl_kind_4_2 decl_index_4_3 -> case (explicitimports.is_not_STE_member_52 decl_kind_4_2) (True -> _Tuple5 not_exported_symbols_1 (_predefined._Cons di_decl_2_0 decls_accu_2) (explicitimports.update_belonging_accu_54 di_decl_2_0 ini_3 imported_mod_4 belonging_accu_5) visited_modules_6 (_SystemArray.update_5 expl_imp_info_7 ini_symbol_nr_8 (checksupport.ExplImpInfo eii_ident_9 (explicitimports.update_declaring_modules_53 di_decl_2_0 path_10 eii_declaring_modules_11)))) ) ) ) ) (_ -> _Tuple5 (_predefined._Cons ini_3 not_exported_symbols_1) decls_accu_2 belonging_accu_5 visited_modules_6 (_SystemArray.update_5 expl_imp_info_7 ini_symbol_nr_8 (checksupport.ExplImpInfo eii_ident_9 eii_declaring_modules_11)))
explicitimports.fold_st_279 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 imported_mod_3::I !_x_4 !st_5 = case _x_4 (_predefined._Nil -> st_5) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_279 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 imported_mod_3 x_1_1 (explicitimports.search_expl_imp_symbol_50 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 imported_mod_3 a_1_0 st_5)) 
explicitimports.search_expl_imp_symbols_40 !imported_symbols_0 expl_imp_indices_ikh_1 modules_in_component_set_2 path_3 imported_mod_4::I !state_5 = explicitimports.fold_st_279 expl_imp_indices_ikh_1 modules_in_component_set_2 path_3 imported_mod_4 imported_symbols_0 state_5
explicitimports.impDeclToNameSpaceString_61 !_x_0 = case _x_0 (syntax.ID_Function _x_1_0 -> "function/macro") (syntax.ID_Class _x_1_0 _x_1_1 -> "class") (syntax.ID_Type _x_1_0 _x_1_1 -> "type") (syntax.ID_Record _x_1_0 _x_1_1 -> "type") (syntax.ID_Instance _x_1_0 _x_1_1 _x_1_2 -> "instance") 
explicitimports.report_not_exported_symbol_errors_60 !_vArray_0 !_vArray_1 !_x_2 position_3 expl_imp_info_4 imported_mod_5::I dcl_modules_6 cs_error_7 = case _x_2 (_predefined._Cons _x_1_0 not_exported_symbols_1_1 -> case _x_1_0 (explicitimports._ImportNrAndIdents ini_symbol_nr_2_0 ini_imp_decl_2_1 -> let _x_3_0 = select _vArray_0::<{_SystemArray.Array;}> 6 expl_imp_info_4 ini_symbol_nr_2_0, _x_3_1 = explicitimports.get_eei_ident (select _x_3_0::_Tuple2 0), _x_3_2 = select (select (select _vArray_1::<{_SystemArray.Array;}> 3 dcl_modules_6 imported_mod_5)::syntax._DclModule 0)::syntax._Ident 0 in explicitimports.report_not_exported_symbol_errors_60 _vArray_0 _vArray_1 not_exported_symbols_1_1 position_3 (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) ini_symbol_nr_2_0 (select _x_3_1::_Tuple2 1)) imported_mod_5 (select _x_3_2::_Tuple2 1) (checksupport.popErrorAdmin_31 (checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (select _x_3_1::_Tuple2 0) (<{StdString.+++_11}> "not exported as a " (<{StdString.+++_11}> (explicitimports.impDeclToNameSpaceString_61 ini_imp_decl_2_1) (<{StdString.+++_11}> " by module " (select _x_3_2::_Tuple2 0)))) (checksupport.pushErrorAdmin_32 (checksupport.newPosition checksupport.import_ident position_3) cs_error_7)))) ) (_predefined._Nil -> _Tuple3 expl_imp_info_4 dcl_modules_6 cs_error_7) 
explicitimports.fold_st_145 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_145 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.fold_st_144 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_144 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.fold_st_143 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_143 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.map_filter_yes_st_142 f_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> let !st_2_0 = _predefined._dummyForStrictAlias st_2 in _Tuple2 _predefined._Nil st_2_0) (_predefined._Cons h_1_0 t_1_1 -> let !_x_2_0 = f_0 h_1_0 st_2, !_x_2_1 = explicitimports.map_filter_yes_st_142 f_0 t_1_1 (select _x_2_0::_Tuple2 1), !_x_2_2 = utilities.optCons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0), !st_2_3 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1) in _Tuple2 (select _x_2_2::_Tuple2 0) st_2_3) 
explicitimports.fold_st_141 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_141 op_0 x_1_1 (op_0 a_1_0 st_2)) 
<{explicitimports.c;271;31_34}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = <{explicitimports.g_c1;271;44_352}> (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) g_a_3 g_i_1 _vArray_0 g_s_2
<{explicitimports.g_c1;271;44_352}> !_x_0::B g_a_1 g_i_2::I _vArray_3 g_s_4::I = case _x_0 (True -> <{explicitimports.g_c2;271;44_351}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 g_i_2 g_s_4 g_a_1) (_ -> _predefined._Nil)
<{explicitimports.g_c2;271;44_351}> !_x_0 _vArray_1 g_i_2::I g_s_3::I g_a_4 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> _predefined._Cons ds_ident_2_0 (<{explicitimports.c;271;31_34}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_1)) ) (_ -> <{explicitimports.c;271;31_34}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_4)
<{explicitimports.c;269;31_33}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = <{explicitimports.g_c1;269;44_354}> (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) g_a_3 g_i_1 _vArray_0 g_s_2
<{explicitimports.g_c1;269;44_354}> !_x_0::B g_a_1 g_i_2::I _vArray_3 g_s_4::I = case _x_0 (True -> <{explicitimports.g_c2;269;44_353}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 g_i_2 g_s_4 g_a_1) (_ -> _predefined._Nil)
<{explicitimports.g_c2;269;44_353}> !_x_0 _vArray_1 g_i_2::I g_s_3::I g_a_4 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._FieldSymbol fs_ident_2_0 fs_var_2_1 fs_index_2_2 -> _predefined._Cons fs_ident_2_0 (<{explicitimports.c;269;31_33}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_1)) ) (_ -> <{explicitimports.c;269;31_33}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_4)
<{explicitimports.c;267;31_32}> !g_l_0 = <{explicitimports.g_c1;267;44_356}> g_l_0
<{explicitimports.g_c1;267;44_356}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{explicitimports.g_c2;267;44_355}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{explicitimports.g_c2;267;44_355}> !g_h_0 g_t_1 = case g_h_0 (syntax._DefinedSymbol ds_ident_1_0 ds_arity_1_1 ds_index_1_2 -> _predefined._Cons ds_ident_1_0 (<{explicitimports.c;267;31_32}> g_t_1)) (_ -> <{explicitimports.c;267;31_32}> g_t_1)
<{explicitimports.c;271;31_281}> !g_i_0::I !g_s_1::I g_a_2 = <{explicitimports.g_c1;271;44_358}> (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) g_a_2 g_i_0 g_s_1
<{explicitimports.g_c1;271;44_358}> !_x_0::B g_a_1 g_i_2::I g_s_3::I = case _x_0 (True -> <{explicitimports.g_c2;271;44_357}> (explicitimports.uselect_185 g_a_1 g_i_2) g_i_2 g_s_3 g_a_1) (_ -> _predefined._Nil)
<{explicitimports.g_c2;271;44_357}> !_x_0 g_i_1::I g_s_2::I g_a_3 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> _predefined._Cons ds_ident_2_0 (<{explicitimports.c;271;31_281}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_1)) ) (_ -> <{explicitimports.c;271;31_281}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_3)
<{explicitimports.c;269;31_280}> !g_i_0::I !g_s_1::I g_a_2 = <{explicitimports.g_c1;269;44_360}> (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) g_a_2 g_i_0 g_s_1
<{explicitimports.g_c1;269;44_360}> !_x_0::B g_a_1 g_i_2::I g_s_3::I = case _x_0 (True -> <{explicitimports.g_c2;269;44_359}> (explicitimports.uselect_177 g_a_1 g_i_2) g_i_2 g_s_3 g_a_1) (_ -> _predefined._Nil)
<{explicitimports.g_c2;269;44_359}> !_x_0 g_i_1::I g_s_2::I g_a_3 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._FieldSymbol fs_ident_2_0 fs_var_2_1 fs_index_2_2 -> _predefined._Cons fs_ident_2_0 (<{explicitimports.c;269;31_280}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_1)) ) (_ -> <{explicitimports.c;269;31_280}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_3)
explicitimports.get_all_belongs_47 !decl_0 !dcl_modules_1 = case decl_0 (syntax.Declaration _x_1_0 -> case _x_1_0 (syntax._DeclarationRecord decl_ident_2_0 decl_pos_2_1 decl_kind_2_2 decl_index_2_3 -> let _x_3_0 = checksupport.getBelongingSymbols decl_0 dcl_modules_1, dcl_modules_3_1 = select _x_3_0::_Tuple2 1 in <{explicitimports._c;265;11_361}> (select _x_3_0::_Tuple2 0) dcl_modules_3_1) ) 
<{explicitimports._c;265;11_361}> !_x_0 dcl_modules_1 = case _x_0 (checksupport.BS_Constructors constructors_1_0 -> _Tuple2 (<{explicitimports.c;267;31_32}> constructors_1_0) dcl_modules_1) (checksupport.BS_Fields rt_fields_1_0 -> let _x_2_0 = explicitimports.usize_178 rt_fields_1_0 in _Tuple2 (<{explicitimports.c;269;31_280}> 0 (<{StdInt.-_7}> (select _x_2_0::_Tuple2 0) 1) (select _x_2_0::_Tuple2 1)) dcl_modules_1) (checksupport.BS_Members class_members_1_0 -> let _x_2_0 = explicitimports.usize_186 class_members_1_0 in _Tuple2 (<{explicitimports.c;271;31_281}> 0 (<{StdInt.-_7}> (select _x_2_0::_Tuple2 0) 1) (select _x_2_0::_Tuple2 1)) dcl_modules_1) (checksupport.BS_Nothing -> _Tuple2 _predefined._Nil dcl_modules_1) 
explicitimports.numerate_belongs_48 !_x_0 !_x_1 = case _x_0 (syntax._Ident id_name_1_0 id_info_1_1 -> case _x_1 (_Tuple2 i_2_0 cs_symbol_table_2_1 -> let _x_3_0 = Heap.readPtr id_info_1_1 cs_symbol_table_2_1, ste_3_1 = select _x_3_0::_Tuple2 0 in _Tuple2 (<{StdInt.+_6}> i_2_0 1) (Heap.writePtr id_info_1_1 (update ste_3_1::syntax._SymbolTableEntry [0:syntax.STE_BelongingSymbol i_2_0,3:ste_3_1]) (select _x_3_0::_Tuple2 1))) ) 
explicitimports.get_opt_nr_and_ident_49 position_0 eii_ident_1 !ii_ident_2 !_x_3 = case ii_ident_2 (syntax._Ident id_name_1_0 id_info_1_1 -> case _x_3 (_Tuple2 cs_error_2_0 cs_symbol_table_2_1 -> let _x_3_0 = Heap.readPtr id_info_1_1 cs_symbol_table_2_1, cs_symbol_table_3_1 = select _x_3_0::_Tuple2 1 in <{explicitimports._c;282;11_362}> (select (select _x_3_0::_Tuple2 0)::syntax._SymbolTableEntry 0) ii_ident_2 cs_error_2_0 cs_symbol_table_3_1 eii_ident_1 position_0) ) 
<{explicitimports._c;282;11_362}> !_x_0 ii_ident_1 cs_error_2 cs_symbol_table_3 eii_ident_4 position_5 = case _x_0 (syntax.STE_BelongingSymbol i_1_0 -> _Tuple2 (general.Yes (_Tuple2 i_1_0 ii_ident_1)) (_Tuple2 cs_error_2 cs_symbol_table_3)) (_ -> _Tuple2 general.No (_Tuple2 (checksupport.popErrorAdmin_31 (checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) ii_ident_1 (<{StdString.+++_11}> "does not belong to " (select eii_ident_4::syntax._Ident 0)) (checksupport.pushErrorAdmin_32 (checksupport.newPosition checksupport.import_ident position_5) cs_error_2))) cs_symbol_table_3))
<{explicitimports.c;193;83_31}> !_vone_0 !<{_v+_1}> belong_nr_2 !g_l_3 = <{explicitimports.g_c1;193;97_363}> g_l_3 belong_nr_2 _vone_0 <{_v+_1}>
<{explicitimports.g_c1;193;97_363}> !g_l_0 belong_nr_1 _vone_2 <{_v+_3}> = case g_l_0 (_predefined._Cons belong_ident_1_0 g_t_1_1 -> _predefined._Cons (_Tuple2 belong_nr_1 belong_ident_1_0) (<{explicitimports.c;193;83_31}> _vone_2 <{_v+_3}> (select <{_v+_3}>::<{StdOverloaded.+;}> 0 belong_nr_1 (select _vone_2::<{StdOverloaded.one;}> 0)) g_t_1_1)) (_ -> _predefined._Nil)
explicitimports.fold_st_140 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_140 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.store_belonging_45 !belong_nr_0::I ini_symbol_nr_1 !mod_index_2::I !eii_declaring_modules_3 = let _x_1_0 = containers.ikhUSearch mod_index_2 eii_declaring_modules_3, di_1_1 = select (select _x_1_0::_Tuple2 0)::_Tuple1 0, di_belonging_1_2 = select di_1_1::checksupport._DeclarationInfo 1, eii_declaring_modules_1_3 = select _x_1_0::_Tuple2 1, _x_1_4 = containers.ikhInsert True mod_index_2 (update di_1_1::checksupport._DeclarationInfo [1:containers.addNr belong_nr_0 di_belonging_1_2]) eii_declaring_modules_1_3 in case (select _x_1_4::_Tuple2 0) (True -> StdMisc.abort "sanity check failed in module explicitimports") (False -> select _x_1_4::_Tuple2 1) 
explicitimports.get_nth_belonging_decl_46 position_0 belong_nr_1::I !decl_2 !dcl_modules_3 = case decl_2 (syntax.Declaration _x_1_0 -> case _x_1_0 (syntax._DeclarationRecord decl_ident_2_0 decl_pos_2_1 decl_kind_2_2 decl_index_2_3 -> let _x_3_0 = checksupport.getBelongingSymbols decl_2 dcl_modules_3, dcl_modules_3_1 = select _x_3_0::_Tuple2 1 in <{explicitimports._c;244;11_364}> (select _x_3_0::_Tuple2 0) belong_nr_1 position_0 decl_kind_2_2 dcl_modules_3_1) ) 
<{explicitimports._c;244;11_364}> !_x_0 belong_nr_1::I position_2 decl_kind_3 dcl_modules_4 = case _x_0 (checksupport.BS_Constructors constructors_1_0 -> let _x_2_0 = <{StdList.!!}> constructors_1_0 belong_nr_1 in _Tuple2 (syntax.Declaration (syntax._DeclarationRecord (select _x_2_0::syntax._DefinedSymbol 0) position_2 (syntax.STE_Imported syntax.STE_Constructor (select decl_kind_3::_Tuple2 1)) (select _x_2_0::syntax._DefinedSymbol 2))) dcl_modules_4) (checksupport.BS_Fields rt_fields_1_0 -> let _x_2_0 = explicitimports.select_174 rt_fields_1_0 belong_nr_1, def_mod_index_2_1::I = select decl_kind_3::_Tuple2 1, fs_index_2_2::I = select _x_2_0::syntax._FieldSymbol 2, _x_2_3 = explicitimports.select_198 (select (select (explicitimports.select_190 dcl_modules_4 def_mod_index_2_1)::syntax._DclModule 7)::syntax._CommonDefs 2) fs_index_2_2 in _Tuple2 (syntax.Declaration (syntax._DeclarationRecord (select _x_2_0::syntax._FieldSymbol 0) position_2 (syntax.STE_Imported (syntax.STE_Field (select (select _x_2_3::_Tuple2 0)::syntax._SelectorDef 0)) def_mod_index_2_1) fs_index_2_2)) (select _x_2_3::_Tuple2 1)) (checksupport.BS_Members class_members_1_0 -> let _x_2_0 = explicitimports.select_182 class_members_1_0 belong_nr_1 in _Tuple2 (syntax.Declaration (syntax._DeclarationRecord (select _x_2_0::syntax._DefinedSymbol 0) position_2 (syntax.STE_Imported syntax.STE_Member (select decl_kind_3::_Tuple2 1)) (select _x_2_0::syntax._DefinedSymbol 2))) dcl_modules_4) 
explicitimports.fold_st_282 belong_nr_0::I ini_symbol_nr_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_282 belong_nr_0 ini_symbol_nr_1 x_1_1 (explicitimports.store_belonging_45 belong_nr_0 ini_symbol_nr_1 a_1_0 st_3)) 
explicitimports.search_belonging_44 need_all_0::B position_1 eii_ident_2 decl_3 expl_imp_indices_ikh_4 modules_in_component_set_5 !imported_mod_6::I ini_symbol_nr_7::I path_8 !_x_9 !_x_10 = case _x_9 (_Tuple2 belong_nr_1_0 belong_ident_1_1 -> case _x_10 (_Tuple5 decls_accu_2_0 dcl_modules_2_1 eii_declaring_modules_2_2 visited_modules_2_3 cs_error_2_4 -> let _x_3_0 = explicitimports.depth_first_search_55 expl_imp_indices_ikh_4 modules_in_component_set_5 imported_mod_6 ini_symbol_nr_7 belong_nr_1_0 belong_ident_1_1 path_8 eii_declaring_modules_2_2 (containers.bitvectResetAll visited_modules_2_3), visited_modules_3_1 = select _x_3_0::_Tuple4 3, eii_declaring_modules_3_2 = select _x_3_0::_Tuple4 2, path_3_3 = select _x_3_0::_Tuple4 1 in <{explicitimports._c;218;11_365}> (select _x_3_0::_Tuple4 0) position_1 belong_nr_1_0 decl_3 dcl_modules_2_1 decls_accu_2_0 ini_symbol_nr_7 path_3_3 eii_declaring_modules_3_2 visited_modules_3_1 cs_error_2_4 need_all_0 imported_mod_6 belong_ident_1_1 eii_ident_2) ) 
<{explicitimports._c;218;11_365}> !_x_0 position_1 belong_nr_2::I decl_3 dcl_modules_4 decls_accu_5 ini_symbol_nr_6::I path_7 eii_declaring_modules_8 visited_modules_9 cs_error_10 need_all_11::B imported_mod_12::I belong_ident_13 eii_ident_14 = case _x_0 (general.Yes _x_1_0 -> let _x_2_0 = explicitimports.get_nth_belonging_decl_46 position_1 belong_nr_2 decl_3 dcl_modules_4 in _Tuple5 (_predefined._Cons (select _x_2_0::_Tuple2 0) decls_accu_5) (select _x_2_0::_Tuple2 1) (explicitimports.fold_st_282 belong_nr_2 ini_symbol_nr_6 path_7 eii_declaring_modules_8) visited_modules_9 cs_error_10) (_ -> case need_all_11 (True -> let _x_2_0 = select (select (explicitimports.select_190 dcl_modules_4 imported_mod_12)::syntax._DclModule 0)::syntax._Ident 0 in _Tuple5 decls_accu_5 (select _x_2_0::_Tuple2 1) eii_declaring_modules_8 visited_modules_9 (checksupport.popErrorAdmin_31 (checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) belong_ident_13 (<{StdString.+++_11}> "of " (<{StdString.+++_11}> (select eii_ident_14::syntax._Ident 0) (<{StdString.+++_11}> " not exported by module " (select _x_2_0::_Tuple2 0)))) (checksupport.pushErrorAdmin_32 (checksupport.newPosition checksupport.import_ident position_1) cs_error_10)))) (False -> _Tuple5 decls_accu_5 dcl_modules_4 eii_declaring_modules_8 visited_modules_9 cs_error_10) )
<{explicitimports.c;193;83_283}> !<{_v+_0}> belong_nr_1::I !g_l_2 = <{explicitimports.g_c1;193;97_366}> g_l_2 belong_nr_1 <{_v+_0}>
<{explicitimports.g_c1;193;97_366}> !g_l_0 belong_nr_1::I <{_v+_2}> = case g_l_0 (_predefined._Cons belong_ident_1_0 g_t_1_1 -> _predefined._Cons (_Tuple2 belong_nr_1 belong_ident_1_0) (<{explicitimports.c;193;83_283}> <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 belong_nr_1 StdInt.one_11) g_t_1_1)) (_ -> _predefined._Nil)
explicitimports.fold_st_284 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_284 x_1_1 (explicitimports.numerate_belongs_48 a_1_0 st_1)) 
explicitimports.map_filter_yes_st_285 position_0 eii_ident_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> let !st_2_0 = _predefined._dummyForStrictAlias st_3 in _Tuple2 _predefined._Nil st_2_0) (_predefined._Cons h_1_0 t_1_1 -> let !_x_2_0 = explicitimports.get_opt_nr_and_ident_49 position_0 eii_ident_1 h_1_0 st_3, !_x_2_1 = explicitimports.map_filter_yes_st_285 position_0 eii_ident_1 t_1_1 (select _x_2_0::_Tuple2 1), !_x_2_2 = utilities.optCons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0), !st_2_3 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1) in _Tuple2 (select _x_2_2::_Tuple2 0) st_2_3) 
explicitimports.fold_st_286 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_286 x_1_1 (checksupport.restoreHeap a_1_0 st_1)) 
explicitimports.fold_st_287 need_all_0::B position_1 eii_ident_2 decl_3 expl_imp_indices_ikh_4 modules_in_component_set_5 imported_mod_6::I ini_symbol_nr_7::I path_8 !_x_9 !st_10 = case _x_9 (_predefined._Nil -> st_10) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_287 need_all_0 position_1 eii_ident_2 decl_3 expl_imp_indices_ikh_4 modules_in_component_set_5 imported_mod_6 ini_symbol_nr_7 path_8 x_1_1 (explicitimports.search_belonging_44 need_all_0 position_1 eii_ident_2 decl_3 expl_imp_indices_ikh_4 modules_in_component_set_5 imported_mod_6 ini_symbol_nr_7 path_8 a_1_0 st_10)) 
<{explicitimports.c;193;83_288}> belong_nr_0::I !g_l_1 = <{explicitimports.g_c1;193;97_367}> g_l_1 belong_nr_0
<{explicitimports.g_c1;193;97_367}> !g_l_0 belong_nr_1::I = case g_l_0 (_predefined._Cons belong_ident_1_0 g_t_1_1 -> _predefined._Cons (_Tuple2 belong_nr_1 belong_ident_1_0) (<{explicitimports.c;193;83_288}> (<{StdInt.+_6}> belong_nr_1 StdInt.one_11) g_t_1_1)) (_ -> _predefined._Nil)
explicitimports.solve_belonging_43 !_vArray_0 position_1 expl_imp_indices_ikh_2 modules_in_component_set_3 path_4 !_x_5 !_x_6 = case _x_5 (_Tuple3 decl_1_0 _x_1_1 imported_mod_1_2 -> case _x_1_1 (explicitimports._ImportNrAndIdents ini_symbol_nr_2_0 ini_imp_decl_2_1 -> case _x_6 (_Tuple5 decls_accu_3_0 dcl_modules_3_1 visited_modules_3_2 expl_imp_info_3_3 cs_3_4 -> case cs_3_4 (checksupport._CheckState cs_symbol_table_4_0 cs_predef_symbols_4_1 cs_error_4_2 cs_x_4_3 -> let belongs_5_0 = select (explicitimports.getBelongingSymbolsFromID ini_imp_decl_2_1)::_Tuple1 0, _x_5_1 = <{explicitimports._c;190;19_368}> belongs_5_0 all_belongs_5_7 cs_error_4_2 cs_symbol_table_4_0 position_1 eii_ident_5_4, _x_5_2 = select _vArray_0::<{_SystemArray.Array;}> 6 expl_imp_info_3_3 ini_symbol_nr_2_0, _x_5_3 = select _x_5_2::_Tuple2 0, eii_ident_5_4 = select _x_5_3::_Tuple2 0, _x_5_5 = explicitimports.get_all_belongs_47 decl_1_0 dcl_modules_3_1, _x_5_6 = explicitimports.fold_st_287 (select _x_5_1::_Tuple4 0) position_1 eii_ident_5_4 decl_1_0 expl_imp_indices_ikh_2 modules_in_component_set_3 imported_mod_1_2 ini_symbol_nr_2_0 path_4 (select _x_5_1::_Tuple4 1) (_Tuple5 decls_accu_3_0 (select _x_5_5::_Tuple2 1) (select _x_5_3::_Tuple2 1) visited_modules_3_2 (select _x_5_1::_Tuple4 2)), all_belongs_5_7 = select _x_5_5::_Tuple2 0 in _Tuple5 (select _x_5_6::_Tuple5 0) (select _x_5_6::_Tuple5 1) (select _x_5_6::_Tuple5 3) (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_5_2::_Tuple2 1) ini_symbol_nr_2_0 (checksupport.ExplImpInfo eii_ident_5_4 (select _x_5_6::_Tuple5 2))) (update cs_3_4::checksupport._CheckState [0:select _x_5_1::_Tuple4 3,2:select _x_5_6::_Tuple5 4])) ) ) ) 
<{explicitimports._c;190;19_368}> !belongs_0 all_belongs_1 cs_error_2 cs_symbol_table_3 position_4 eii_ident_5 = case belongs_0 (_predefined._Nil -> _Tuple4 False (<{explicitimports.c;193;83_288}> 0 all_belongs_1) cs_error_2 cs_symbol_table_3) (_ -> let _x_1_0 = explicitimports.map_filter_yes_st_285 position_4 eii_ident_5 belongs_0 (_Tuple2 cs_error_2 (select (explicitimports.fold_st_284 all_belongs_1 (_Tuple2 0 cs_symbol_table_3))::_Tuple2 1)), _x_1_1 = select _x_1_0::_Tuple2 1 in _Tuple4 True (select _x_1_0::_Tuple2 0) (select _x_1_1::_Tuple2 0) (explicitimports.fold_st_286 all_belongs_1 (select _x_1_1::_Tuple2 1)))
explicitimports.fold_st_289 !_vArray_0 position_1 expl_imp_indices_ikh_2 modules_in_component_set_3 path_4 !_x_5 !st_6 = case _x_5 (_predefined._Nil -> st_6) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_289 _vArray_0 position_1 expl_imp_indices_ikh_2 modules_in_component_set_3 path_4 x_1_1 (explicitimports.solve_belonging_43 _vArray_0 position_1 expl_imp_indices_ikh_2 modules_in_component_set_3 path_4 a_1_0 st_6)) 
explicitimports.solve_belongings_42 !_vArray_0 !unsolved_belonging_1 position_2 expl_imp_indices_ikh_3 modules_in_component_set_4 path_5 !state_6 = explicitimports.fold_st_289 _vArray_0 position_2 expl_imp_indices_ikh_3 modules_in_component_set_4 path_5 unsolved_belonging_1 state_6
explicitimports.report_not_exported_symbol_errors_290 !_vArray_0 !_x_1 position_2 expl_imp_info_3 imported_mod_4::I dcl_modules_5 cs_error_6 = case _x_1 (_predefined._Cons _x_1_0 not_exported_symbols_1_1 -> case _x_1_0 (explicitimports._ImportNrAndIdents ini_symbol_nr_2_0 ini_imp_decl_2_1 -> let _x_3_0 = _SystemArray.uselect_6 expl_imp_info_3 ini_symbol_nr_2_0, _x_3_1 = explicitimports.get_eei_ident (select _x_3_0::_Tuple2 0), _x_3_2 = select (select (select _vArray_0::<{_SystemArray.Array;}> 3 dcl_modules_5 imported_mod_4)::syntax._DclModule 0)::syntax._Ident 0 in explicitimports.report_not_exported_symbol_errors_290 _vArray_0 not_exported_symbols_1_1 position_2 (_SystemArray.update_5 (select _x_3_0::_Tuple2 1) ini_symbol_nr_2_0 (select _x_3_1::_Tuple2 1)) imported_mod_4 (select _x_3_2::_Tuple2 1) (checksupport.popErrorAdmin_31 (checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (select _x_3_1::_Tuple2 0) (<{StdString.+++_11}> "not exported as a " (<{StdString.+++_11}> (explicitimports.impDeclToNameSpaceString_61 ini_imp_decl_2_1) (<{StdString.+++_11}> " by module " (select _x_3_2::_Tuple2 0)))) (checksupport.pushErrorAdmin_32 (checksupport.newPosition checksupport.import_ident position_2) cs_error_6)))) ) (_predefined._Nil -> _Tuple3 expl_imp_info_3 dcl_modules_5 cs_error_6) 
explicitimports.solve_belonging_293 position_0 expl_imp_indices_ikh_1 modules_in_component_set_2 path_3 !_x_4 !_x_5 = case _x_4 (_Tuple3 decl_1_0 _x_1_1 imported_mod_1_2 -> case _x_1_1 (explicitimports._ImportNrAndIdents ini_symbol_nr_2_0 ini_imp_decl_2_1 -> case _x_5 (_Tuple5 decls_accu_3_0 dcl_modules_3_1 visited_modules_3_2 expl_imp_info_3_3 cs_3_4 -> case cs_3_4 (checksupport._CheckState cs_symbol_table_4_0 cs_predef_symbols_4_1 cs_error_4_2 cs_x_4_3 -> let belongs_5_0 = select (explicitimports.getBelongingSymbolsFromID ini_imp_decl_2_1)::_Tuple1 0, _x_5_1 = <{explicitimports._c;190;19_369}> belongs_5_0 all_belongs_5_7 cs_error_4_2 cs_symbol_table_4_0 position_0 eii_ident_5_4, _x_5_2 = _SystemArray.uselect_6 expl_imp_info_3_3 ini_symbol_nr_2_0, _x_5_3 = select _x_5_2::_Tuple2 0, eii_ident_5_4 = select _x_5_3::_Tuple2 0, _x_5_5 = explicitimports.get_all_belongs_47 decl_1_0 dcl_modules_3_1, _x_5_6 = explicitimports.fold_st_287 (select _x_5_1::_Tuple4 0) position_0 eii_ident_5_4 decl_1_0 expl_imp_indices_ikh_1 modules_in_component_set_2 imported_mod_1_2 ini_symbol_nr_2_0 path_3 (select _x_5_1::_Tuple4 1) (_Tuple5 decls_accu_3_0 (select _x_5_5::_Tuple2 1) (select _x_5_3::_Tuple2 1) visited_modules_3_2 (select _x_5_1::_Tuple4 2)), all_belongs_5_7 = select _x_5_5::_Tuple2 0 in _Tuple5 (select _x_5_6::_Tuple5 0) (select _x_5_6::_Tuple5 1) (select _x_5_6::_Tuple5 3) (_SystemArray.update_5 (select _x_5_2::_Tuple2 1) ini_symbol_nr_2_0 (checksupport.ExplImpInfo eii_ident_5_4 (select _x_5_6::_Tuple5 2))) (update cs_3_4::checksupport._CheckState [0:select _x_5_1::_Tuple4 3,2:select _x_5_6::_Tuple5 4])) ) ) ) 
<{explicitimports._c;190;19_369}> !belongs_0 all_belongs_1 cs_error_2 cs_symbol_table_3 position_4 eii_ident_5 = case belongs_0 (_predefined._Nil -> _Tuple4 False (<{explicitimports.c;193;83_288}> 0 all_belongs_1) cs_error_2 cs_symbol_table_3) (_ -> let _x_1_0 = explicitimports.map_filter_yes_st_285 position_4 eii_ident_5 belongs_0 (_Tuple2 cs_error_2 (select (explicitimports.fold_st_284 all_belongs_1 (_Tuple2 0 cs_symbol_table_3))::_Tuple2 1)), _x_1_1 = select _x_1_0::_Tuple2 1 in _Tuple4 True (select _x_1_0::_Tuple2 0) (select _x_1_1::_Tuple2 0) (explicitimports.fold_st_286 all_belongs_1 (select _x_1_1::_Tuple2 1)))
explicitimports.fold_st_292 position_0 expl_imp_indices_ikh_1 modules_in_component_set_2 path_3 !_x_4 !st_5 = case _x_4 (_predefined._Nil -> st_5) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_292 position_0 expl_imp_indices_ikh_1 modules_in_component_set_2 path_3 x_1_1 (explicitimports.solve_belonging_293 position_0 expl_imp_indices_ikh_1 modules_in_component_set_2 path_3 a_1_0 st_5)) 
explicitimports.solve_belongings_291 !unsolved_belonging_0 position_1 expl_imp_indices_ikh_2 modules_in_component_set_3 path_4 !state_5 = explicitimports.fold_st_292 position_1 expl_imp_indices_ikh_2 modules_in_component_set_3 path_4 unsolved_belonging_0 state_5
explicitimports.report_not_exported_symbol_errors_294 !_x_0 position_1 expl_imp_info_2 imported_mod_3::I dcl_modules_4 cs_error_5 = case _x_0 (_predefined._Cons _x_1_0 not_exported_symbols_1_1 -> case _x_1_0 (explicitimports._ImportNrAndIdents ini_symbol_nr_2_0 ini_imp_decl_2_1 -> let _x_3_0 = _SystemArray.uselect_6 expl_imp_info_2 ini_symbol_nr_2_0, _x_3_1 = explicitimports.get_eei_ident (select _x_3_0::_Tuple2 0), _x_3_2 = select (select (explicitimports.select_190 dcl_modules_4 imported_mod_3)::syntax._DclModule 0)::syntax._Ident 0 in explicitimports.report_not_exported_symbol_errors_294 not_exported_symbols_1_1 position_1 (_SystemArray.update_5 (select _x_3_0::_Tuple2 1) ini_symbol_nr_2_0 (select _x_3_1::_Tuple2 1)) imported_mod_3 (select _x_3_2::_Tuple2 1) (checksupport.popErrorAdmin_31 (checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (select _x_3_1::_Tuple2 0) (<{StdString.+++_11}> "not exported as a " (<{StdString.+++_11}> (explicitimports.impDeclToNameSpaceString_61 ini_imp_decl_2_1) (<{StdString.+++_11}> " by module " (select _x_3_2::_Tuple2 0)))) (checksupport.pushErrorAdmin_32 (checksupport.newPosition checksupport.import_ident position_1) cs_error_5)))) ) (_predefined._Nil -> _Tuple3 expl_imp_info_2 dcl_modules_4 cs_error_5) 
explicitimports.solve_expl_imp_from_module_38 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 !_x_3 !_x_4 = case _x_3 (explicitimports._ExplicitImport imported_mod_1_0 position_1_1 _x_1_2 ei_qualified_1_3 -> case _x_1_2 (syntax.ImportSymbolsOnly imported_symbols_2_0 -> case _x_4 (_Tuple4 dcl_modules_3_0 visited_modules_3_1 expl_imp_info_3_2 cs_3_3 -> let _x_4_0 = explicitimports.search_expl_imp_symbols_40 imported_symbols_2_0 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 imported_mod_1_0 (_Tuple5 _predefined._Nil _predefined._Nil _predefined._Nil visited_modules_3_1 expl_imp_info_3_2), _x_4_1 = explicitimports.report_not_exported_symbol_errors_294 (select _x_4_0::_Tuple5 0) position_1_1 (select _x_4_0::_Tuple5 4) imported_mod_1_0 dcl_modules_3_0 (select cs_3_3::checksupport._CheckState 2), _x_4_2 = explicitimports.solve_belongings_291 (select _x_4_0::_Tuple5 2) position_1_1 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 (_Tuple5 (select _x_4_0::_Tuple5 1) (select _x_4_1::_Tuple3 1) (select _x_4_0::_Tuple5 3) (select _x_4_1::_Tuple3 0) (update cs_3_3::checksupport._CheckState [2:select _x_4_1::_Tuple3 2])) in _Tuple2 (_Tuple2 (select _x_4_2::_Tuple5 0) position_1_1) (_Tuple4 (select _x_4_2::_Tuple5 1) (select _x_4_2::_Tuple5 2) (select _x_4_2::_Tuple5 3) (select _x_4_2::_Tuple5 4))) ) ) 
explicitimports.fold_st_147 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_147 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.search_qualified_expl_imp_symbol_51 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 !imported_mod_3::I !ini_4 !_x_5 = case ini_4 (explicitimports._ImportNrAndIdents ini_symbol_nr_1_0 ini_imp_decl_1_1 -> case _x_5 (_Tuple5 not_exported_symbols_2_0 decls_accu_2_1 belonging_accu_2_2 visited_modules_2_3 expl_imp_info_2_4 -> let _x_3_0 = _SystemArray.uselect_6 expl_imp_info_2_4 ini_symbol_nr_1_0, _x_3_1 = select _x_3_0::_Tuple2 0, eii_declaring_modules_3_2 = select _x_3_1::_Tuple2 1, _x_3_3 = explicitimports.depth_first_search_55 expl_imp_indices_ikh_0 modules_in_component_set_1 imported_mod_3 ini_symbol_nr_1_0 -1 explicitimports.stupid_ident path_2 eii_declaring_modules_3_2 (containers.bitvectResetAll visited_modules_2_3), visited_modules_3_4 = select _x_3_3::_Tuple4 3, eii_declaring_modules_3_5 = select _x_3_3::_Tuple4 2, path_3_6 = select _x_3_3::_Tuple4 1, expl_imp_info_3_7 = select _x_3_0::_Tuple2 1, eii_ident_3_8 = select _x_3_1::_Tuple2 0 in <{explicitimports._c;321;11_370}> (select _x_3_3::_Tuple4 0) not_exported_symbols_2_0 decls_accu_2_1 ini_4 imported_mod_3 belonging_accu_2_2 visited_modules_3_4 expl_imp_info_3_7 ini_symbol_nr_1_0 eii_ident_3_8 path_3_6 eii_declaring_modules_3_5) ) 
<{explicitimports._c;321;11_370}> !_x_0 not_exported_symbols_1 decls_accu_2 ini_3 imported_mod_4::I belonging_accu_5 visited_modules_6 expl_imp_info_7 ini_symbol_nr_8::I eii_ident_9 path_10 eii_declaring_modules_11 = case _x_0 (general.Yes di_1_0 -> case di_1_0 (checksupport._DeclarationInfo di_decl_2_0 di_belonging_2_1 -> _Tuple5 not_exported_symbols_1 (_predefined._Cons di_decl_2_0 decls_accu_2) (explicitimports.update_belonging_accu_54 di_decl_2_0 ini_3 imported_mod_4 belonging_accu_5) visited_modules_6 (_SystemArray.update_5 expl_imp_info_7 ini_symbol_nr_8 (checksupport.ExplImpInfo eii_ident_9 (explicitimports.update_declaring_modules_53 di_decl_2_0 path_10 eii_declaring_modules_11)))) ) (_ -> _Tuple5 (_predefined._Cons ini_3 not_exported_symbols_1) decls_accu_2 belonging_accu_5 visited_modules_6 (_SystemArray.update_5 expl_imp_info_7 ini_symbol_nr_8 (checksupport.ExplImpInfo eii_ident_9 eii_declaring_modules_11)))
explicitimports.fold_st_295 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 imported_mod_3::I !_x_4 !st_5 = case _x_4 (_predefined._Nil -> st_5) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_295 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 imported_mod_3 x_1_1 (explicitimports.search_qualified_expl_imp_symbol_51 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 imported_mod_3 a_1_0 st_5)) 
explicitimports.search_qualified_expl_imp_symbols_41 !imported_symbols_0 expl_imp_indices_ikh_1 modules_in_component_set_2 path_3 imported_mod_4::I !state_5 = explicitimports.fold_st_295 expl_imp_indices_ikh_1 modules_in_component_set_2 path_3 imported_mod_4 imported_symbols_0 state_5
explicitimports.solve_qualified_expl_imp_from_module_39 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 !_x_3 !_x_4 = case _x_3 (explicitimports._ExplicitImport imported_mod_1_0 position_1_1 _x_1_2 ei_qualified_1_3 -> case _x_1_2 (syntax.ImportSymbolsOnly imported_symbols_2_0 -> case _x_4 (_Tuple4 dcl_modules_3_0 visited_modules_3_1 expl_imp_info_3_2 cs_3_3 -> let _x_4_0 = explicitimports.search_qualified_expl_imp_symbols_41 imported_symbols_2_0 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 imported_mod_1_0 (_Tuple5 _predefined._Nil _predefined._Nil _predefined._Nil visited_modules_3_1 expl_imp_info_3_2), unsolved_belonging_4_1 = select _x_4_0::_Tuple5 2, decl_accu_4_2 = select _x_4_0::_Tuple5 1, not_exported_symbols_4_3 = select _x_4_0::_Tuple5 0, expl_imp_info_4_4 = select _x_4_0::_Tuple5 4, _x_4_5 = explicitimports.report_not_exported_symbol_errors_294 not_exported_symbols_4_3 position_1_1 expl_imp_info_4_4 imported_mod_1_0 dcl_modules_3_0 (select cs_3_3::checksupport._CheckState 2), dcl_modules_4_6 = select _x_4_5::_Tuple3 1, visited_modules_4_7 = select _x_4_0::_Tuple5 3, expl_imp_info_4_8 = select _x_4_5::_Tuple3 0, cs_error_4_9 = select _x_4_5::_Tuple3 2, _x_4_10 = explicitimports.solve_belongings_291 unsolved_belonging_4_1 position_1_1 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 (_Tuple5 decl_accu_4_2 dcl_modules_4_6 visited_modules_4_7 expl_imp_info_4_8 (update cs_3_3::checksupport._CheckState [2:cs_error_4_9])), _x_4_11 = <{explicitimports._c;164;40_371}> ei_qualified_1_3 dcl_modules_4_12 imported_mod_1_0, dcl_modules_4_12 = select _x_4_10::_Tuple5 1 in _Tuple2 (_Tuple3 (select _x_4_10::_Tuple5 0) (select _x_4_11::_Tuple2 0) position_1_1) (_Tuple4 (select _x_4_11::_Tuple2 1) (select _x_4_10::_Tuple5 2) (select _x_4_10::_Tuple5 3) (select _x_4_10::_Tuple5 4))) ) ) 
<{explicitimports._c;164;40_371}> !ei_qualified_0 dcl_modules_1 imported_mod_2::I = case ei_qualified_0 (syntax.QualifiedAs module_ident_1_0 -> _Tuple2 module_ident_1_0 dcl_modules_1) (_ -> select (explicitimports.select_190 dcl_modules_1 imported_mod_2)::syntax._DclModule 0)
explicitimports.map_st_296 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 !_x_3 !s_4 = case _x_3 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = explicitimports.solve_expl_imp_from_module_38 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 x_1_0 s_4, _x_2_2 = explicitimports.map_st_296 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_4 in _Tuple2 _predefined._Nil s_2_0) 
explicitimports.map_st_297 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 !_x_3 !s_4 = case _x_3 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = explicitimports.solve_qualified_expl_imp_from_module_39 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 x_1_0 s_4, _x_2_2 = explicitimports.map_st_297 expl_imp_indices_ikh_0 modules_in_component_set_1 path_2 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_4 in _Tuple2 _predefined._Nil s_2_0) 
explicitimports.solveExplicitImports !expl_imp_indices_ikh_0 !modules_in_component_set_1 !importing_mod_2::I !_x_3 = case _x_3 (_Tuple4 dcl_modules_1_0 visited_modules_1_1 expl_imp_info_1_2 cs_1_3 -> let _x_2_0 = explicitimports.split_imports_37 (<{containers.ikhSearch`}> importing_mod_2 expl_imp_indices_ikh_0), _x_2_1 = explicitimports.map_st_296 expl_imp_indices_ikh_0 modules_in_component_set_1 (_predefined._Cons importing_mod_2 _predefined._Nil) (select _x_2_0::_Tuple3 0) (_Tuple4 dcl_modules_1_0 visited_modules_1_1 expl_imp_info_1_2 cs_1_3), _x_2_2 = explicitimports.map_st_297 expl_imp_indices_ikh_0 modules_in_component_set_1 _predefined._Nil (select _x_2_0::_Tuple3 1) (select _x_2_1::_Tuple2 1) in <{_Tuple2!3}> (explicitimports._SolvedImports (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0) (select _x_2_0::_Tuple3 2)) (select _x_2_2::_Tuple2 1)) 
explicitimports.fold_st_154 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_154 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.fold_st_153 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_153 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.store_qualified_explicitly_imported_symbol_67 !declaration_0 !_x_1 = case declaration_0 (syntax.Declaration _x_1_0 -> case _x_1_0 (syntax._DeclarationRecord _x_2_0 decl_pos_2_1 _x_2_2 decl_index_2_3 -> case _x_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> case _x_2_2 (syntax.STE_Imported _x_4_0 module_n_4_1 -> case _x_1 (_Tuple2 modified_symbol_ptrs_5_0 symbol_table_5_1 -> let _x_6_0 = Heap.readPtr id_info_3_1 symbol_table_5_1, symbol_ste_6_1 = select _x_6_0::_Tuple2 0, ste_kind_6_2 = select symbol_ste_6_1::syntax._SymbolTableEntry 0, ste_kind_6_3 = syntax.STE_ImportedQualified declaration_0 ste_kind_6_2, symbol_table_6_4 = select _x_6_0::_Tuple2 1 in <{explicitimports._c;893;15_372}> ste_kind_6_3 id_info_3_1 modified_symbol_ptrs_5_0 symbol_ste_6_1 symbol_table_6_4) ) ) ) ) 
<{explicitimports._c;893;15_372}> !ste_kind_0 id_info_1 modified_symbol_ptrs_2 symbol_ste_3 symbol_table_4 = case ste_kind_0 (syntax.STE_ImportedQualified _x_1_0 _x_1_1 -> _Tuple2 (_predefined._Cons id_info_1 modified_symbol_ptrs_2) (Heap.writePtr id_info_1 (update symbol_ste_3::syntax._SymbolTableEntry [0:ste_kind_0]) symbol_table_4)) (_ -> _Tuple2 modified_symbol_ptrs_2 (Heap.writePtr id_info_1 (update symbol_ste_3::syntax._SymbolTableEntry [0:ste_kind_0]) symbol_table_4))
explicitimports.fold_st_298 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_298 x_1_1 (explicitimports.store_qualified_explicitly_imported_symbol_67 a_1_0 st_1)) 
explicitimports.store_qualified_explicitly_imported_symbols_in_symbol_table !_x_0 !modified_symbol_ptrs_1 !symbol_table_2 = case _x_0 (_predefined._Cons _x_1_0 qualified_explicit_imports_1_1 -> case _x_1_0 (_Tuple3 declarations_2_0 module_n_2_1 position_2_2 -> let _x_3_0 = explicitimports.fold_st_298 declarations_2_0 (_Tuple2 modified_symbol_ptrs_1 symbol_table_2) in explicitimports.store_qualified_explicitly_imported_symbols_in_symbol_table qualified_explicit_imports_1_1 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) ) (_predefined._Nil -> <{_Tuple2!3}> modified_symbol_ptrs_1 symbol_table_2) 
<{explicitimports.cu;475;50_62}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{explicitimports.cu;475;50_62}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _vArray_0::<{_SystemArray.Array;}> 0 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
explicitimports.fold_st_152 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_152 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.is_imported_66::B cci_0 !_x_1 !wanted_ste_kind_2 !symbol_index_3::I !module_n_4::I !ste_index_5::I = case _x_1 (syntax.STE_Imported ste_kind_1_0 ste_module_n_1_1 -> case (<{StdInt.==_16}> ste_module_n_1_1 module_n_4) (True -> case (<{StdInt.==_16}> ste_index_5 symbol_index_3) (True -> <{checksupport.==_30}> ste_kind_1_0 wanted_ste_kind_2) (False -> False) ) (False -> False) ) (syntax.STE_ImportedQualified _x_1_0 ste_kind_1_1 -> case _x_1_0 (syntax.Declaration _x_2_0 -> case _x_2_0 (syntax._DeclarationRecord decl_ident_3_0 decl_pos_3_1 _x_3_2 decl_index_3_3 -> case _x_3_2 (syntax.STE_Imported decl_kind_4_0 decl_module_n_4_1 -> case (case (<{StdInt.==_16}> decl_module_n_4_1 module_n_4) (True -> case (<{StdInt.==_16}> decl_index_3_3 symbol_index_3) (True -> <{checksupport.==_30}> decl_kind_4_0 wanted_ste_kind_2) (False -> False) ) (False -> False) ) (True -> True) (False -> explicitimports.is_imported_66 cci_0 ste_kind_1_1 wanted_ste_kind_2 symbol_index_3 module_n_4 ste_index_5) ) ) ) ) (syntax.STE_ExplImpSymbolNotImported ste_module_n_1_0 ste_kind_1_1 -> case (<{StdInt.==_16}> module_n_4 ste_module_n_1_0) (True -> True) (False -> explicitimports.is_imported_66 cci_0 ste_kind_1_1 wanted_ste_kind_2 symbol_index_3 module_n_4 ste_index_5) ) (_ -> case (<{StdInt.==_16}> (select (select cci_0::explicitimports._CheckCompletenessInputBox 0)::explicitimports._CheckCompletenessInput 1) module_n_4) (True -> case (<{StdInt.==_16}> ste_index_5 symbol_index_3) (True -> <{checksupport.==_30}> _x_1 wanted_ste_kind_2) (False -> False) ) (False -> False) )
explicitimports.toString_87 !_x_0 = case _x_0 (syntax.STE_FunctionOrMacro _x_1_0 -> "function/macro") (syntax.STE_DclMacroOrLocalMacroFunction _x_1_0 -> "macro") (syntax.STE_Type -> "type") (syntax.STE_Constructor -> "constructor") (syntax.STE_Field _x_1_0 -> "field") (syntax.STE_Class -> "class") (syntax.STE_Member -> "class member") (syntax.STE_Generic _x_1_0 -> "generic") (syntax.STE_Instance -> "instance") (_ -> "<<unknown symbol kind>>")
explicitimports.check_whether_ident_is_imported !ident_0 !module_n_1::I !symbol_index_2::I !wanted_ste_kind_3 !cci_4 !ccs_5 = case ccs_5 (explicitimports._CheckCompletenessStateBox box_ccs_1_0 -> case box_ccs_1_0 (explicitimports._CheckCompletenessState ccs_dcl_modules_2_0 ccs_macro_defs_2_1 ccs_set_of_visited_macros_2_2 ccs_expr_heap_2_3 ccs_symbol_table_2_4 ccs_error_2_5 ccs_heap_changes_accu_2_6 -> let !_x_3_0 = Heap.readPtr (select ident_0::syntax._Ident 1) ccs_symbol_table_2_4, !ccs_3_1 = update ccs_5::explicitimports._CheckCompletenessStateBox [0:update box_ccs_1_0::explicitimports._CheckCompletenessState [4:select _x_3_0::_Tuple2 1]], ste_3_2 = select _x_3_0::_Tuple2 0, ste_kind_3_3 = select ste_3_2::syntax._SymbolTableEntry 0 in case (explicitimports.is_imported_66 cci_4 ste_kind_3_3 wanted_ste_kind_3 symbol_index_2 module_n_1 (select ste_3_2::syntax._SymbolTableEntry 1)) (True -> ccs_3_1) (False -> let !ccs_5_0 = _predefined._dummyForStrictAlias ccs_3_1, box_ccs_5_1 = select ccs_5_0::explicitimports._CheckCompletenessStateBox 0, ccs_heap_changes_accu_5_2 = select box_ccs_5_1::explicitimports._CheckCompletenessState 6 in update ccs_5_0::explicitimports._CheckCompletenessStateBox [0:update box_ccs_5_1::explicitimports._CheckCompletenessState [4:Heap.writePtr (select ident_0::syntax._Ident 1) (update ste_3_2::syntax._SymbolTableEntry [0:syntax.STE_ExplImpSymbolNotImported module_n_1 ste_kind_3_3]) (select box_ccs_5_1::explicitimports._CheckCompletenessState 4),5:checksupport.checkErrorWithIdentPos (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (checksupport.newPosition (syntax._Ident "import" Heap.nilPtr) (select (select cci_4::explicitimports._CheckCompletenessInputBox 0)::explicitimports._CheckCompletenessInput 0)) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (explicitimports.toString_87 wanted_ste_kind_3) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_9 (select ident_0::syntax._Ident 0)) " not imported")))) (select box_ccs_5_1::explicitimports._CheckCompletenessState 5),6:<{explicitimports._c;544;36_373}> ste_kind_3_3 ccs_heap_changes_accu_5_2 ident_0]]) ) ) 
<{explicitimports._c;544;36_373}> !ste_kind_0 ccs_heap_changes_accu_1 ident_2 = case ste_kind_0 (syntax.STE_ExplImpSymbolNotImported _x_1_0 _x_1_1 -> ccs_heap_changes_accu_1) (syntax.STE_ImportedQualified _x_1_0 _x_1_1 -> ccs_heap_changes_accu_1) (_ -> _predefined._Cons (select ident_2::syntax._Ident 1) ccs_heap_changes_accu_1)
explicitimports.check_completeness_123 !_vcheck_completeness_0 !_x_1 !_x_2 !ccs_3 = case _x_1 (_predefined._Nil -> ccs_3) (_predefined._Cons h_1_0 t_1_1 -> select _vcheck_completeness_0::<{explicitimports.check_completeness;}> 0 h_1_0 _x_2 (explicitimports.check_completeness_123 _vcheck_completeness_0 t_1_1 _x_2 ccs_3)) 
explicitimports.check_completeness_90 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._AType at_attribute_1_0 at_type_1_1 -> explicitimports.check_completeness_119 at_type_1_1 cci_1 ccs_2) 
explicitimports.check_completeness_299 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_90 h_1_0 _x_1 (explicitimports.check_completeness_299 t_1_1 _x_1 ccs_2)) 
explicitimports.check_completeness_119 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax.TA _x_1_0 arguments_1_1 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 _x_2_2 type_prop_2_3 -> case _x_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> explicitimports.check_completeness_299 arguments_1_1 cci_1 (explicitimports.check_whether_ident_is_imported type_ident_2_0 glob_module_3_1 glob_object_3_0 syntax.STE_Type cci_1 ccs_2)) ) ) (syntax.TAS _x_1_0 arguments_1_1 _x_1_2 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 _x_2_2 type_prop_2_3 -> case _x_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> explicitimports.check_completeness_299 arguments_1_1 cci_1 (explicitimports.check_whether_ident_is_imported type_ident_2_0 glob_module_3_1 glob_object_3_0 syntax.STE_Type cci_1 ccs_2)) ) ) (<{syntax.-->}> l_1_0 r_1_1 -> explicitimports.check_completeness_90 l_1_0 cci_1 (explicitimports.check_completeness_90 r_1_1 cci_1 ccs_2)) (<{syntax.:@:}> _x_1_0 arguments_1_1 -> explicitimports.check_completeness_299 arguments_1_1 cci_1 ccs_2) (_ -> ccs_2)
explicitimports.check_completeness_300 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_119 h_1_0 _x_1 (explicitimports.check_completeness_300 t_1_1 _x_1 ccs_2)) 
explicitimports.check_completeness_120 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._TypeContext _x_1_0 tc_types_1_1 tc_var_1_2 -> case _x_1_0 (syntax.TCClass _x_2_0 -> case _x_2_0 (syntax._Global _x_3_0 glob_module_3_1 -> case _x_3_0 (syntax._DefinedSymbol ds_ident_4_0 ds_arity_4_1 ds_index_4_2 -> explicitimports.check_completeness_300 tc_types_1_1 cci_1 (explicitimports.check_whether_ident_is_imported ds_ident_4_0 glob_module_3_1 ds_index_4_2 syntax.STE_Class cci_1 ccs_2)) ) ) (syntax.TCGeneric _x_2_0 -> case _x_2_0 (syntax._GenericTypeContext _x_3_0 gtc_kind_3_1 gtc_class_3_2 gtc_generic_dict_3_3 -> case _x_3_0 (syntax._Global _x_4_0 glob_module_4_1 -> case _x_4_0 (syntax._DefinedSymbol ds_ident_5_0 ds_arity_5_1 ds_index_5_2 -> explicitimports.check_completeness_300 tc_types_1_1 cci_1 (explicitimports.check_whether_ident_is_imported ds_ident_5_0 glob_module_4_1 ds_index_5_2 (syntax.STE_Generic -1) cci_1 ccs_2)) ) ) ) ) 
explicitimports.check_completeness_301 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_120 h_1_0 _x_1 (explicitimports.check_completeness_301 t_1_1 _x_1 ccs_2)) 
explicitimports.check_completeness_97 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._ClassDef class_ident_1_0 class_arity_1_1 class_args_1_2 class_context_1_3 class_members_1_4 class_dictionary_1_5 class_pos_1_6 class_cons_vars_1_7 class_fun_dep_vars_1_8 class_lazy_members_1_9 -> explicitimports.check_completeness_301 class_context_1_3 cci_1 ccs_2) 
explicitimports.check_completeness_110 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._InstanceType it_vars_1_0 it_types_1_1 it_attr_vars_1_2 it_context_1_3 -> explicitimports.check_completeness_300 it_types_1_1 cci_1 (explicitimports.check_completeness_301 it_context_1_3 cci_1 ccs_2)) 
explicitimports.check_completeness_98 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._ClassInstance _x_1_0 _x_1_1 ins_ident_1_2 ins_type_1_3 ins_member_types_1_4 ins_members_1_5 ins_specials_1_6 ins_pos_1_7 -> case _x_1_0 (syntax._GlobalIndex gi_module_2_0 gi_index_2_1 -> case _x_1_1 (syntax._ClassIdent _x_3_0 ci_arity_3_1 -> case _x_3_0 (syntax.Ident class_ident_4_0 -> explicitimports.check_completeness_110 ins_type_1_3 cci_1 (explicitimports.check_whether_ident_is_imported class_ident_4_0 gi_module_2_0 gi_index_2_1 syntax.STE_Class cci_1 ccs_2)) ) ) ) 
explicitimports.anon_170 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.anon_169 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.anon_302 !_x_0 !cci_1 !g_2 x_3 = explicitimports.check_completeness_90 _x_0 cci_1 (g_2 x_3)
explicitimports.anon_303 !_x_0 !_x_1 !g_2 x_3 = explicitimports.check_completeness_299 _x_0 _x_1 (g_2 x_3)
explicitimports.anon_304 !_x_0 !cci_1 !_x_2 !_x_3 !x_4 = explicitimports.check_completeness_90 _x_0 cci_1 (explicitimports.check_completeness_301 _x_2 _x_3 x_4)
explicitimports.anon_305 !_x_0 !_x_1 !_x_2 !cci_3 !_x_4 !_x_5 !x_6 = explicitimports.check_completeness_299 _x_0 _x_1 (explicitimports.anon_304 _x_2 cci_3 _x_4 _x_5 x_6)
explicitimports.check_completeness_117 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._SymbolType st_vars_1_0 st_args_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> explicitimports.anon_305 st_args_1_1 cci_1 st_result_1_4 cci_1 st_context_1_5 cci_1 ccs_2) 
explicitimports.check_completeness_99 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._ConsDef cons_ident_1_0 cons_type_1_1 cons_priority_1_2 cons_number_1_3 cons_type_index_1_4 cons_exi_vars_1_5 cons_type_ptr_1_6 cons_pos_1_7 -> explicitimports.check_completeness_117 cons_type_1_1 cci_1 ccs_2) 
explicitimports.anon_162 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.anon_161 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.fold_st_156 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_156 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.check_completeness_102 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._DynamicType dt_uni_vars_1_0 dt_global_vars_1_1 dt_type_1_2 dt_contexts_1_3 -> explicitimports.check_completeness_90 dt_type_1_2 cci_1 ccs_2) 
explicitimports.check_completeness_of_dyn_expr_ptr !cci_0 !dyn_expr_ptr_1 !ccs_2 = case ccs_2 (explicitimports._CheckCompletenessStateBox box_ccs_1_0 -> case box_ccs_1_0 (explicitimports._CheckCompletenessState ccs_dcl_modules_2_0 ccs_macro_defs_2_1 ccs_set_of_visited_macros_2_2 ccs_expr_heap_2_3 ccs_symbol_table_2_4 ccs_error_2_5 ccs_heap_changes_accu_2_6 -> let !_x_3_0 = Heap.readPtr dyn_expr_ptr_1 ccs_expr_heap_2_3, !ccs_3_1 = update ccs_2::explicitimports._CheckCompletenessStateBox [0:update box_ccs_1_0::explicitimports._CheckCompletenessState [3:select _x_3_0::_Tuple2 1]] in <{explicitimports._c;855;7_374}> (select _x_3_0::_Tuple2 0) cci_0 ccs_3_1) ) 
explicitimports.fold_st_306 cci_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_306 cci_0 x_1_1 (explicitimports.check_completeness_of_dyn_expr_ptr cci_0 a_1_0 st_2)) 
explicitimports.check_completeness_of_dyn_expr_ptrs !cci_0 !dynamic_ptrs_1 !ccs_2 = explicitimports.fold_st_306 cci_0 dynamic_ptrs_1 ccs_2
<{explicitimports._c;855;7_374}> !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax.EI_UnmarkedDynamic _x_1_0 further_dynamic_ptrs_1_1 -> case _x_1_0 (general.No -> explicitimports.check_completeness_of_dyn_expr_ptrs cci_1 further_dynamic_ptrs_1_1 ccs_2) (general.Yes dynamic_type_2_0 -> explicitimports.check_completeness_102 dynamic_type_2_0 cci_1 (explicitimports.check_completeness_of_dyn_expr_ptrs cci_1 further_dynamic_ptrs_1_1 ccs_2)) ) (syntax.EI_Dynamic _x_1_0 further_dynamic_ptrs_1_1 -> case _x_1_0 (general.No -> explicitimports.check_completeness_of_dyn_expr_ptrs cci_1 further_dynamic_ptrs_1_1 ccs_2) (general.Yes dynamic_type_2_0 -> explicitimports.check_completeness_102 dynamic_type_2_0 cci_1 (explicitimports.check_completeness_of_dyn_expr_ptrs cci_1 further_dynamic_ptrs_1_1 ccs_2)) ) (syntax.EI_DynamicType dynamic_type_1_0 further_dynamic_ptrs_1_1 -> explicitimports.check_completeness_102 dynamic_type_1_0 cci_1 (explicitimports.check_completeness_of_dyn_expr_ptrs cci_1 further_dynamic_ptrs_1_1 ccs_2)) (syntax.EI_DynamicTypeWithVars _x_1_0 dynamic_type_1_1 further_dynamic_ptrs_1_2 -> explicitimports.check_completeness_102 dynamic_type_1_1 cci_1 (explicitimports.check_completeness_of_dyn_expr_ptrs cci_1 further_dynamic_ptrs_1_2 ccs_2)) 
explicitimports.anon_160 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.anon_159 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.get_n_macros_in_dcl_module_74 !ccs_0 !glob_module_1::I = let !n_macros_in_dcl_module_1_0::I = explicitimports.size_255 (_SystemArray.select_43 (select (select ccs_0::explicitimports._CheckCompletenessStateBox 0)::explicitimports._CheckCompletenessState 1) glob_module_1) in <{_Tuple2!3}> n_macros_in_dcl_module_1_0 ccs_0
explicitimports.check_completeness_for_function_75 !symb_ident_0 !_x_1 !cci_2 !ccs_3 = case _x_1 (syntax._Global glob_object_1_0 glob_module_1_1 -> explicitimports.check_whether_ident_is_imported symb_ident_0 glob_module_1_1 glob_object_1_0 (syntax.STE_FunctionOrMacro _predefined._Nil) cci_2 ccs_3) 
explicitimports.anon_158 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.anon_157 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.check_completeness_113 !_vcheck_completeness_0 !_x_1 !cci_2 !ccs_3 = case _x_1 (general.Yes x_1_0 -> select _vcheck_completeness_0::<{explicitimports.check_completeness;}> 0 x_1_0 cci_2 ccs_3) (general.No -> ccs_3) 
explicitimports.anon_168 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.anon_167 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.ste_field =: syntax.STE_Field (syntax._Ident "" Heap.nilPtr)
explicitimports.check_completeness_321 !_x_0 !cci_1 !ccs_2 = case _x_0 (general.Yes x_1_0 -> explicitimports.check_completeness_102 x_1_0 cci_1 ccs_2) (general.No -> ccs_2) 
explicitimports.check_completeness_307 !_x_0 !cci_1 !ccs_2 = case _x_0 (general.Yes x_1_0 -> explicitimports.check_completeness_117 x_1_0 cci_1 ccs_2) (general.No -> ccs_2) 
explicitimports.anon_309 !_x_0 !cci_1 !g_2 x_3 = explicitimports.check_completeness_307 _x_0 cci_1 (g_2 x_3)
explicitimports.check_completeness_118 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._TransformedBody tb_args_1_0 tb_rhs_1_1 -> explicitimports.check_completeness_103 tb_rhs_1_1 cci_1 ccs_2) 
explicitimports.check_completeness_for_macro_76 symb_ident_0 !global_index_1 !cci_2 !ccs_3 = case (StdBool.not (<{StdInt.==_16}> (select global_index_1::syntax._Global 1) (select (select cci_2::explicitimports._CheckCompletenessInputBox 0)::explicitimports._CheckCompletenessInput 1))) (True -> explicitimports.check_whether_ident_is_imported symb_ident_0 (select global_index_1::syntax._Global 1) (select global_index_1::syntax._Global 0) (syntax.STE_DclMacroOrLocalMacroFunction _predefined._Nil) cci_2 ccs_3) (False -> explicitimports.check_completeness_for_local_dcl_macro_77 symb_ident_0 global_index_1 cci_2 ccs_3) 
explicitimports.check_completeness_for_local_dcl_macro_77 symb_ident_0 !_x_1 cci_2 !ccs_3 = case _x_1 (syntax._Global glob_object_1_0 glob_module_1_1 -> case (<{StdInt.==_16}> (_SystemArray.size_36 (_SystemArray.select_43 (select (select ccs_3::explicitimports._CheckCompletenessStateBox 0)::explicitimports._CheckCompletenessState 2) glob_module_1_1)) 0) (True -> let _x_3_0 = explicitimports.get_n_macros_in_dcl_module_74 ccs_3 glob_module_1_1, ccs_3_1 = select _x_3_0::_Tuple2 1, s1_3_2 = select ccs_3_1::explicitimports._CheckCompletenessStateBox 0, _x_3_3 = explicitimports.select_254 (_SystemArray.select_43 (select (select (update ccs_3_1::explicitimports._CheckCompletenessStateBox [0:update s1_3_2::explicitimports._CheckCompletenessState [2:_SystemArray.update_45 (select s1_3_2::explicitimports._CheckCompletenessState 2) glob_module_1_1 (_SystemArray.update_37 (_SystemArray.createArray_33 (select _x_3_0::_Tuple2 0) False) glob_object_1_0 True)]])::explicitimports._CheckCompletenessStateBox 0)::explicitimports._CheckCompletenessState 1) glob_module_1_1) glob_object_1_0 in explicitimports.check_completeness_105 (select _x_3_3::_Tuple2 0) cci_2 (select _x_3_3::_Tuple2 1)) (False -> case (_SystemArray.select_35 (_SystemArray.select_43 (select (select ccs_3::explicitimports._CheckCompletenessStateBox 0)::explicitimports._CheckCompletenessState 2) glob_module_1_1) glob_object_1_0) (True -> ccs_3) (False -> let s1_4_0 = select ccs_3::explicitimports._CheckCompletenessStateBox 0, _x_4_1 = explicitimports.select_254 (_SystemArray.select_43 (select (select (update ccs_3::explicitimports._CheckCompletenessStateBox [0:update s1_4_0::explicitimports._CheckCompletenessState [2:_SystemArray.update_37 (_SystemArray.select_43 (select s1_4_0::explicitimports._CheckCompletenessState 2) glob_module_1_1) glob_object_1_0 True]])::explicitimports._CheckCompletenessStateBox 0)::explicitimports._CheckCompletenessState 1) glob_module_1_1) glob_object_1_0 in explicitimports.check_completeness_105 (select _x_4_1::_Tuple2 0) cci_2 (select _x_4_1::_Tuple2 1)) ) ) 
explicitimports.check_completeness_116 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._SymbIdent symb_ident_1_0 symb_kind_1_1 -> <{explicitimports._c;759;11_375}> symb_kind_1_1 symb_ident_1_0 cci_1 ccs_2) 
explicitimports.check_completeness_88 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._App app_symb_1_0 app_args_1_1 app_info_ptr_1_2 -> explicitimports.check_completeness_116 app_symb_1_0 cci_1 (explicitimports.check_completeness_311 app_args_1_1 cci_1 ccs_2)) 
explicitimports.check_completeness_311 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_103 h_1_0 _x_1 (explicitimports.check_completeness_311 t_1_1 _x_1 ccs_2)) 
explicitimports.anon_324 !_x_0 !cci_1 !g_2 x_3 = explicitimports.check_completeness_103 _x_0 cci_1 (g_2 x_3)
explicitimports.anon_323 !_x_0 !_x_1 !g_2 x_3 = explicitimports.check_completeness_322 _x_0 _x_1 (g_2 x_3)
explicitimports.check_completeness_92 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> explicitimports.check_completeness_103 lb_src_1_1 cci_1 ccs_2) 
explicitimports.check_completeness_322 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_92 h_1_0 _x_1 (explicitimports.check_completeness_322 t_1_1 _x_1 ccs_2)) 
explicitimports.check_completeness_111 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._Let let_strict_binds_1_0 let_lazy_binds_1_1 let_expr_1_2 let_info_ptr_1_3 let_expr_position_1_4 -> explicitimports.anon_324 let_expr_1_2 cci_1 (explicitimports.anon_323 let_strict_binds_1_0 cci_1 (explicitimports.check_completeness_322 let_lazy_binds_1_1 cci_1)) ccs_2) 
explicitimports.anon_317 !_x_0 !cci_1 !g_2 x_3 = explicitimports.check_completeness_103 _x_0 cci_1 (g_2 x_3)
explicitimports.check_completeness_91 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._BasicPattern bp_value_1_0 bp_expr_1_1 bp_position_1_2 -> explicitimports.check_completeness_103 bp_expr_1_1 cci_1 ccs_2) 
explicitimports.check_completeness_319 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_91 h_1_0 _x_1 (explicitimports.check_completeness_319 t_1_1 _x_1 ccs_2)) 
explicitimports.check_completeness_89 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._AlgebraicPattern _x_1_0 ap_vars_1_1 ap_expr_1_2 ap_position_1_3 -> case _x_1_0 (syntax._Global _x_2_0 glob_module_2_1 -> case _x_2_0 (syntax._DefinedSymbol ds_ident_3_0 ds_arity_3_1 ds_index_3_2 -> explicitimports.check_completeness_103 ap_expr_1_2 cci_1 (explicitimports.check_whether_ident_is_imported ds_ident_3_0 glob_module_2_1 ds_index_3_2 syntax.STE_Constructor cci_1 ccs_2)) ) ) 
explicitimports.check_completeness_318 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_89 h_1_0 _x_1 (explicitimports.check_completeness_318 t_1_1 _x_1 ccs_2)) 
explicitimports.check_completeness_100 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._DynamicPattern dp_var_1_0 dp_type_1_1 dp_type_code_1_2 dp_rhs_1_3 dp_position_1_4 -> explicitimports.check_completeness_103 dp_rhs_1_3 cci_1 (explicitimports.check_completeness_of_dyn_expr_ptr cci_1 dp_type_1_1 ccs_2)) 
explicitimports.check_completeness_320 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_100 h_1_0 _x_1 (explicitimports.check_completeness_320 t_1_1 _x_1 ccs_2)) 
explicitimports.check_completeness_94 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax.AlgebraicPatterns _x_1_0 algebraicPatterns_1_1 -> explicitimports.check_completeness_318 algebraicPatterns_1_1 cci_1 ccs_2) (syntax.BasicPatterns _x_1_0 basicPatterns_1_1 -> explicitimports.check_completeness_319 basicPatterns_1_1 cci_1 ccs_2) (syntax.OverloadedListPatterns _x_1_0 _x_1_1 algebraicPatterns_1_2 -> explicitimports.check_completeness_318 algebraicPatterns_1_2 cci_1 ccs_2) (syntax.DynamicPatterns dynamicPatterns_1_0 -> explicitimports.check_completeness_320 dynamicPatterns_1_0 cci_1 ccs_2) (syntax.NoPattern -> ccs_2) 
explicitimports.anon_316 !_x_0 !cci_1 !g_2 x_3 = explicitimports.check_completeness_94 _x_0 cci_1 (g_2 x_3)
explicitimports.check_completeness_315 !_x_0 !cci_1 !ccs_2 = case _x_0 (general.Yes x_1_0 -> explicitimports.check_completeness_103 x_1_0 cci_1 ccs_2) (general.No -> ccs_2) 
explicitimports.check_completeness_93 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> explicitimports.anon_317 case_expr_1_0 cci_1 (explicitimports.anon_316 case_guards_1_1 cci_1 (explicitimports.check_completeness_315 case_default_1_2 cci_1)) ccs_2) 
explicitimports.anon_314 !_x_0 !cci_1 !g_2 x_3 = explicitimports.check_completeness_103 _x_0 cci_1 (g_2 x_3)
explicitimports.check_completeness_114 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax.RecordSelection _x_1_0 _x_1_1 -> case _x_1_0 (syntax._Global _x_2_0 glob_module_2_1 -> case _x_2_0 (syntax._DefinedSymbol ds_ident_3_0 ds_arity_3_1 ds_index_3_2 -> let !_x_4_0 = explicitimports.select_190 (select (select ccs_2::explicitimports._CheckCompletenessStateBox 0)::explicitimports._CheckCompletenessState 0) glob_module_2_1, !_x_4_1 = explicitimports.select_198 (select (select (select _x_4_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs 2) ds_index_3_2 in explicitimports.check_whether_ident_is_imported (select _x_4_1::syntax._SelectorDef 1) glob_module_2_1 ds_index_3_2 explicitimports.ste_field cci_1 (select _x_4_0::_Tuple2 1)) ) ) (syntax.ArraySelection _x_1_0 _x_1_1 index_expr_1_2 -> explicitimports.check_completeness_103 index_expr_1_2 cci_1 ccs_2) (syntax.DictionarySelection _x_1_0 selections_1_1 _x_1_2 index_expr_1_3 -> explicitimports.check_completeness_312 selections_1_1 cci_1 (explicitimports.check_completeness_103 index_expr_1_3 cci_1 ccs_2)) 
explicitimports.check_completeness_312 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_114 h_1_0 _x_1 (explicitimports.check_completeness_312 t_1_1 _x_1 ccs_2)) 
explicitimports.anon_313 !_x_0 !_x_1 !g_2 x_3 = explicitimports.check_completeness_312 _x_0 _x_1 (g_2 x_3)
explicitimports.check_completeness_101 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._DynamicExpr dyn_expr_1_0 dyn_opt_type_1_1 dyn_info_ptr_1_2 dyn_type_code_1_3 -> explicitimports.check_completeness_103 dyn_expr_1_0 cci_1 (explicitimports.check_completeness_321 dyn_opt_type_1_1 cci_1 ccs_2)) 
explicitimports.check_completeness_103 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax.Var _x_1_0 -> ccs_2) (syntax.App app_1_0 -> explicitimports.check_completeness_88 app_1_0 cci_1 ccs_2) (<{syntax.@}> expression_1_0 expressions_1_1 -> explicitimports.check_completeness_103 expression_1_0 cci_1 (explicitimports.check_completeness_311 expressions_1_1 cci_1 ccs_2)) (syntax.Let lad_1_0 -> explicitimports.check_completeness_111 lad_1_0 cci_1 ccs_2) (syntax.Case keesje_1_0 -> explicitimports.check_completeness_93 keesje_1_0 cci_1 ccs_2) (syntax.Selection _x_1_0 expression_1_1 selections_1_2 -> explicitimports.check_completeness_103 expression_1_1 cci_1 (explicitimports.check_completeness_312 selections_1_2 cci_1 ccs_2)) (syntax.TupleSelect _x_1_0 _x_1_1 expression_1_2 -> explicitimports.check_completeness_103 expression_1_2 cci_1 ccs_2) (syntax.BasicExpr _x_1_0 -> ccs_2) (syntax.AnyCodeExpr _x_1_0 _x_1_1 _x_1_2 -> ccs_2) (syntax.ABCCodeExpr _x_1_0 _x_1_1 -> ccs_2) (syntax.Update expr1_1_0 selections_1_1 expr2_1_2 -> explicitimports.anon_314 expr1_1_0 cci_1 (explicitimports.anon_313 selections_1_1 cci_1 (explicitimports.check_completeness_103 expr2_1_2 cci_1)) ccs_2) (syntax.MatchExpr _x_1_0 expression_1_1 -> case _x_1_0 (syntax._Global _x_2_0 glob_module_2_1 -> case _x_2_0 (syntax._DefinedSymbol ds_ident_3_0 ds_arity_3_1 ds_index_3_2 -> explicitimports.check_completeness_103 expression_1_1 cci_1 (explicitimports.check_whether_ident_is_imported ds_ident_3_0 glob_module_2_1 ds_index_3_2 syntax.STE_Constructor cci_1 ccs_2)) ) ) (syntax.IsConstructor expr_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 _x_1_5 -> case _x_1_1 (syntax._Global _x_2_0 glob_module_2_1 -> case _x_2_0 (syntax._DefinedSymbol ds_ident_3_0 ds_arity_3_1 ds_index_3_2 -> explicitimports.check_completeness_103 expr_1_0 cci_1 (explicitimports.check_whether_ident_is_imported ds_ident_3_0 glob_module_2_1 ds_index_3_2 syntax.STE_Constructor cci_1 ccs_2)) ) ) (syntax.FreeVar _x_1_0 -> ccs_2) (syntax.DynamicExpr dynamicExpr_1_0 -> explicitimports.check_completeness_101 dynamicExpr_1_0 cci_1 ccs_2) (syntax.EE -> ccs_2) (_ -> StdMisc.abort "explicitimports:check_completeness (Expression) does not match")
explicitimports.check_completeness_95 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._CheckedAlternative ca_rhs_1_0 ca_position_1_1 -> explicitimports.check_completeness_103 ca_rhs_1_0 cci_1 ccs_2) 
explicitimports.check_completeness_310 !_x_0 !_x_1 !ccs_2 = case _x_0 (_predefined._Nil -> ccs_2) (_predefined._Cons h_1_0 t_1_1 -> explicitimports.check_completeness_95 h_1_0 _x_1 (explicitimports.check_completeness_310 t_1_1 _x_1 ccs_2)) 
explicitimports.check_completeness_96 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._CheckedBody cb_args_1_0 cb_rhs_1_1 -> explicitimports.check_completeness_310 cb_rhs_1_1 cci_1 ccs_2) 
explicitimports.check_completeness_104 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax.CheckedBody body_1_0 -> explicitimports.check_completeness_96 body_1_0 cci_1 ccs_2) (syntax.TransformedBody body_1_0 -> explicitimports.check_completeness_118 body_1_0 cci_1 ccs_2) (syntax.RhsMacroBody body_1_0 -> explicitimports.check_completeness_96 body_1_0 cci_1 ccs_2) 
explicitimports.anon_308 !_x_0 !cci_1 !g_2 x_3 = explicitimports.check_completeness_104 _x_0 cci_1 (g_2 x_3)
explicitimports.anon_325 !_x_0 !cci_1 !_x_2 !cci_3 !g_4 x_5 = explicitimports.check_completeness_307 _x_0 cci_1 (explicitimports.anon_308 _x_2 cci_3 g_4 x_5)
explicitimports.check_completeness_105 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._FunDef fun_ident_1_0 fun_arity_1_1 fun_priority_1_2 fun_body_1_3 fun_type_1_4 fun_pos_1_5 fun_kind_1_6 fun_lifted_1_7 fun_info_1_8 -> explicitimports.anon_325 fun_type_1_4 cci_1 fun_body_1_3 cci_1 (explicitimports.check_completeness_of_dyn_expr_ptrs cci_1 (select fun_info_1_8::syntax._FunInfo 5)) ccs_2) 
<{explicitimports._c;759;11_375}> !symb_kind_0 symb_ident_1 cci_2 !ccs_3 = case symb_kind_0 (syntax.SK_Constructor _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> explicitimports.check_whether_ident_is_imported symb_ident_1 glob_module_2_1 glob_object_2_0 syntax.STE_Constructor cci_2 ccs_3) ) (syntax.SK_Function global_index_1_0 -> explicitimports.check_completeness_for_function_75 symb_ident_1 global_index_1_0 cci_2 ccs_3) (syntax.SK_DclMacro global_index_1_0 -> explicitimports.check_completeness_for_macro_76 symb_ident_1 global_index_1_0 cci_2 ccs_3) (syntax.SK_LocalDclMacroFunction global_index_1_0 -> explicitimports.check_completeness_for_local_dcl_macro_77 symb_ident_1 global_index_1_0 cci_2 ccs_3) (syntax.SK_OverloadedFunction _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> explicitimports.check_whether_ident_is_imported symb_ident_1 glob_module_2_1 glob_object_2_0 syntax.STE_Member cci_2 ccs_3) ) 
explicitimports.check_completeness_106 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._FunType ft_ident_1_0 ft_arity_1_1 ft_priority_1_2 ft_type_1_3 ft_pos_1_4 ft_specials_1_5 ft_type_ptr_1_6 -> explicitimports.check_completeness_117 ft_type_1_3 cci_1 ccs_2) 
explicitimports.anon_166 !f_0 g_1 x_2 = f_0 (g_1 x_2)
explicitimports.fold_st_165 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_165 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.foldSt_164 op_0 !l_1 st_2 = explicitimports.fold_st_165 op_0 l_1 st_2
explicitimports.flip_163 !f_0 a_1 b_2 = f_0 b_2 a_1
explicitimports.check_completeness_108 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._GenericDependency _x_1_0 _x_1_1 gd_vars_1_2 gd_nums_1_3 -> case _x_1_0 (syntax.Ident ident_2_0 -> case _x_1_1 (syntax._GlobalIndex gi_module_3_0 gi_index_3_1 -> explicitimports.check_whether_ident_is_imported ident_2_0 gi_module_3_0 gi_index_3_1 (syntax.STE_Generic -1) cci_1 ccs_2) ) ) 
explicitimports.flip_326 a_0 b_1 = explicitimports.check_completeness_108 b_1 a_0
explicitimports.fold_st_328 a_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_328 a_0 x_1_1 (explicitimports.flip_326 a_0 a_1_0 st_2)) 
explicitimports.foldSt_327 a_0 !l_1 !st_2 = explicitimports.fold_st_328 a_0 l_1 st_2
explicitimports.anon_329 !_x_0 !cci_1 !g_2 x_3 = explicitimports.check_completeness_117 _x_0 cci_1 (g_2 x_3)
explicitimports.anon_330 !_x_0 !cci_1 a_2 !l_3 !x_4 = explicitimports.check_completeness_117 _x_0 cci_1 (explicitimports.foldSt_327 a_2 l_3 x_4)
explicitimports.check_completeness_107 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._GenericDef gen_ident_1_0 gen_member_ident_1_1 gen_pos_1_2 gen_type_1_3 gen_vars_1_4 gen_deps_1_5 gen_info_ptr_1_6 -> explicitimports.anon_330 gen_type_1_3 cci_1 cci_1 gen_deps_1_5 ccs_2) 
explicitimports.check_completeness_112 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._MemberDef me_ident_1_0 me_class_1_1 me_offset_1_2 me_type_1_3 me_type_ptr_1_4 me_class_vars_1_5 me_pos_1_6 me_priority_1_7 -> explicitimports.check_completeness_117 me_type_1_3 cci_1 ccs_2) 
explicitimports.check_completeness_115 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax._SelectorDef sd_ident_1_0 sd_field_1_1 sd_type_1_2 sd_exi_vars_1_3 sd_field_nr_1_4 sd_type_index_1_5 sd_type_ptr_1_6 sd_pos_1_7 -> explicitimports.check_completeness_117 sd_type_1_2 cci_1 ccs_2) 
explicitimports.check_completeness_122 !_x_0 !cci_1 !ccs_2 = case _x_0 (syntax.SynType aType_1_0 -> explicitimports.check_completeness_90 aType_1_0 cci_1 ccs_2) (_ -> ccs_2)
explicitimports.check_completeness_121 !td_0 !cci_1 !ccs_2 = case td_0 (syntax._TypeDef td_ident_1_0 td_index_1_1 td_arity_1_2 td_args_1_3 td_attrs_1_4 td_rhs_1_5 td_attribute_1_6 td_pos_1_7 td_used_types_1_8 td_fun_index_1_9 -> explicitimports.check_completeness_122 td_rhs_1_5 cci_1 ccs_2) 
explicitimports.continuation_64 mod_index_0::I !decl_index_1::I !_x_2 dcl_common_3 !dcl_functions_4 !cci_5 !ccs_6 = case _x_2 (syntax.STE_Type -> explicitimports.check_completeness_121 (explicitimports.select_206 (select dcl_common_3::syntax._CommonDefs 0) decl_index_1) cci_5 ccs_6) (syntax.STE_Constructor -> explicitimports.check_completeness_99 (explicitimports.select_214 (select dcl_common_3::syntax._CommonDefs 1) decl_index_1) cci_5 ccs_6) (syntax.STE_Field _x_1_0 -> explicitimports.check_completeness_115 (explicitimports.select_198 (select dcl_common_3::syntax._CommonDefs 2) decl_index_1) cci_5 ccs_6) (syntax.STE_Class -> explicitimports.check_completeness_97 (explicitimports.select_222 (select dcl_common_3::syntax._CommonDefs 3) decl_index_1) cci_5 ccs_6) (syntax.STE_Member -> explicitimports.check_completeness_112 (explicitimports.select_230 (select dcl_common_3::syntax._CommonDefs 4) decl_index_1) cci_5 ccs_6) (syntax.STE_Instance -> explicitimports.check_completeness_98 (explicitimports.select_238 (select dcl_common_3::syntax._CommonDefs 5) decl_index_1) cci_5 ccs_6) (syntax.STE_DclFunction -> explicitimports.check_completeness_106 (explicitimports.select_246 dcl_functions_4 decl_index_1) cci_5 ccs_6) (syntax.STE_DclMacroOrLocalMacroFunction _x_1_0 -> let _x_2_0 = explicitimports.select_254 (_SystemArray.select_43 (select (select ccs_6::explicitimports._CheckCompletenessStateBox 0)::explicitimports._CheckCompletenessState 1) mod_index_0) decl_index_1 in explicitimports.check_completeness_105 (select _x_2_0::_Tuple2 0) cci_5 (select _x_2_0::_Tuple2 1)) (syntax.STE_Generic _x_1_0 -> explicitimports.check_completeness_107 (explicitimports.select_262 (select dcl_common_3::syntax._CommonDefs 6) decl_index_1) cci_5 ccs_6) 
explicitimports.checkCompleteness_65 !main_dcl_module_n_0::I !import_position_1 !_x_2 !ccs_3 = case _x_2 (syntax.Declaration _x_1_0 -> case _x_1_0 (syntax._DeclarationRecord decl_ident_2_0 decl_pos_2_1 _x_2_2 decl_index_2_3 -> case _x_2_2 (syntax.STE_Imported expl_imp_kind_3_0 mod_index_3_1 -> let !_x_4_0 = explicitimports.select_190 (select (select ccs_3::explicitimports._CheckCompletenessStateBox 0)::explicitimports._CheckCompletenessState 0) mod_index_3_1, !cci_4_1 = explicitimports._CheckCompletenessInputBox (explicitimports._CheckCompletenessInput import_position_1 main_dcl_module_n_0), _x_4_2 = select _x_4_0::_Tuple2 0 in explicitimports.continuation_64 mod_index_3_1 decl_index_2_3 expl_imp_kind_3_0 (select _x_4_2::syntax._DclModule 7) (select _x_4_2::syntax._DclModule 1) cci_4_1 (select _x_4_0::_Tuple2 1)) ) ) 
explicitimports.fold_st_331 main_dcl_module_n_0::I import_position_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_331 main_dcl_module_n_0 import_position_1 x_1_1 (explicitimports.checkCompleteness_65 main_dcl_module_n_0 import_position_1 a_1_0 st_3)) 
explicitimports.anon_63 main_dcl_module_n_0::I !_x_1 !ccs_2 = case _x_1 (_Tuple2 dcls_1_0 position_1_1 -> explicitimports.fold_st_331 main_dcl_module_n_0 position_1_1 dcls_1_0 ccs_2) 
explicitimports.fold_st_151 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_151 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.restore_ste_kind_68 !_x_0 = case _x_0 (syntax.STE_ImportedQualified declaration_1_0 ste_kind_1_1 -> explicitimports.restore_ste_kind_68 ste_kind_1_1) (syntax.STE_ExplImpSymbolNotImported _x_1_0 ste_kind_1_1 -> explicitimports.restore_ste_kind_68 ste_kind_1_1) (_ -> _x_0)
explicitimports.restore_symbol_69 !symbol_ptr_0 !symbol_table_1 = let _x_1_0 = Heap.readPtr symbol_ptr_0 symbol_table_1, symbol_ste_1_1 = select _x_1_0::_Tuple2 0 in Heap.writePtr symbol_ptr_0 (update symbol_ste_1_1::syntax._SymbolTableEntry [0:explicitimports.restore_ste_kind_68 (select symbol_ste_1_1::syntax._SymbolTableEntry 0)]) (select _x_1_0::_Tuple2 1)
explicitimports.fold_st_332 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_332 x_1_1 (explicitimports.restore_symbol_69 a_1_0 st_1)) 
explicitimports.restore_symbol_table_after_checking_completeness !modified_symbol_ptrs_0 !symbol_table_1 = explicitimports.fold_st_332 modified_symbol_ptrs_0 symbol_table_1
<{explicitimports.cu;475;50_333}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{explicitimports.cu;475;50_333}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (_SystemArray._createArray_32 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
explicitimports.fold_st_334 main_dcl_module_n_0::I !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_334 main_dcl_module_n_0 x_1_1 (explicitimports.anon_63 main_dcl_module_n_0 a_1_0 st_2)) 
<{explicitimports.cu;475;50_335}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{explicitimports.cu;475;50_335}> (_SystemArray.update_45 c_a_0 c_i_1 (_SystemArray._createArray_32 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
explicitimports.checkExplicitImportCompleteness !dcls_explicit_0 !explicit_qualified_imports_1 !dcl_modules_2 !macro_defs_3 !expr_heap_4 !cs_5 = case cs_5 (checksupport._CheckState cs_symbol_table_1_0 cs_predef_symbols_1_1 cs_error_1_2 cs_x_1_3 -> let !n_dcl_modules_2_0::I = explicitimports.size_191 dcl_modules_2, g_s_2_1 = <{StdInt.-_7}> n_dcl_modules_2_0 1, _x_2_2 = explicitimports.store_qualified_explicitly_imported_symbols_in_symbol_table explicit_qualified_imports_1 _predefined._Nil cs_symbol_table_1_0, _x_2_3::I = select (explicitimports.fold_st_334 (select (select cs_5::checksupport._CheckState 3)::checksupport._CheckStateX 1) dcls_explicit_0 (explicitimports._CheckCompletenessStateBox (explicitimports._CheckCompletenessState dcl_modules_2 macro_defs_3 (<{explicitimports.cu;475;50_335}> (_SystemArray._createArray_40 (<{StdInt.+_6}> g_s_2_1 StdInt.one_11)) 0 g_s_2_1) expr_heap_4 (select _x_2_2::_Tuple2 1) cs_error_1_2 (select _x_2_2::_Tuple2 0))))::explicitimports._CheckCompletenessStateBox 0 in <{_Tuple4!15}> (select _x_2_3::explicitimports._CheckCompletenessState 0) (select _x_2_3::explicitimports._CheckCompletenessState 1) (select _x_2_3::explicitimports._CheckCompletenessState 3) (update cs_5::checksupport._CheckState [0:explicitimports.restore_symbol_table_after_checking_completeness (select _x_2_3::explicitimports._CheckCompletenessState 6) (select _x_2_3::explicitimports._CheckCompletenessState 4),2:select _x_2_3::explicitimports._CheckCompletenessState 5])) 
explicitimports.fold_st_155 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_155 op_0 x_1_1 (op_0 a_1_0 st_2)) 
explicitimports.ste_kind_to_name_space_n::I !_x_0 = case _x_0 (syntax.STE_DclFunction -> 0) (syntax.STE_Constructor -> 0) (syntax.STE_Member -> 0) (syntax.STE_DclMacroOrLocalMacroFunction _x_1_0 -> 0) (syntax.STE_Type -> 1) (syntax.STE_Class -> 2) (syntax.STE_Field _x_1_0 -> 3) (syntax.STE_Generic _x_1_0 -> 4) (_ -> 5)
explicitimports.less_imported_ste_kind::B !_x_0 _x_1 = case _x_0 (syntax.STE_Imported ste_kind1_1_0 _x_1_1 -> case _x_1 (syntax.STE_Imported ste_kind2_2_0 _x_2_1 -> <{StdInt.<_17}> (explicitimports.ste_kind_to_name_space_n ste_kind1_1_0) (explicitimports.ste_kind_to_name_space_n ste_kind2_2_0)) ) (_ -> False)
explicitimports.add_qualified_import !new_declaration_0 !_x_1 = case _x_1 (syntax.EmptySortedQualifiedImports -> syntax.SortedQualifiedImports new_declaration_0 syntax.EmptySortedQualifiedImports syntax.EmptySortedQualifiedImports) (syntax.SortedQualifiedImports declaration_1_0 sqi_left_1_1 sqi_right_1_2 -> case new_declaration_0 (syntax.Declaration _x_2_0 -> case _x_2_0 (syntax._DeclarationRecord new_ident_3_0 decl_pos_3_1 new_ste_kind_3_2 decl_index_3_3 -> case declaration_1_0 (syntax.Declaration _x_4_0 -> case _x_4_0 (syntax._DeclarationRecord decl_ident_5_0 decl_pos_5_1 decl_kind_5_2 decl_index_5_3 -> case (<{StdString.<_3}> (select new_ident_3_0::syntax._Ident 0) (select decl_ident_5_0::syntax._Ident 0)) (True -> syntax.SortedQualifiedImports declaration_1_0 (explicitimports.add_qualified_import new_declaration_0 sqi_left_1_1) sqi_right_1_2) (False -> case (case (<{StdString.==_2}> (select new_ident_3_0::syntax._Ident 0) (select decl_ident_5_0::syntax._Ident 0)) (True -> explicitimports.less_imported_ste_kind new_ste_kind_3_2 decl_kind_5_2) (False -> False) ) (True -> syntax.SortedQualifiedImports declaration_1_0 (explicitimports.add_qualified_import new_declaration_0 sqi_left_1_1) sqi_right_1_2) (False -> syntax.SortedQualifiedImports declaration_1_0 sqi_left_1_1 (explicitimports.add_qualified_import new_declaration_0 sqi_right_1_2)) ) ) ) ) ) ) 
explicitimports.fold_st_336 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> explicitimports.fold_st_336 x_1_1 (explicitimports.add_qualified_import a_1_0 st_1)) 
explicitimports.store_qualified_explicit_imports_in_symbol_table !_x_0 !modified_ste_kinds_1 !symbol_table_2 !modules_3 = case _x_0 (_predefined._Cons _x_1_0 qualified_explicit_imports_1_1 -> case _x_1_0 (_Tuple3 declarations_2_0 module_symbol_2_1 position_2_2 -> let module_symbol_ptr_3_0 = select module_symbol_2_1::syntax._Ident 1, _x_3_1 = Heap.readPtr module_symbol_ptr_3_0 symbol_table_2, module_ste_3_2 = select _x_3_1::_Tuple2 0, ste_kind_3_3 = select module_ste_3_2::syntax._SymbolTableEntry 0, _x_3_4 = <{explicitimports._c;922;11_376}> ste_kind_3_3 modified_ste_kinds_1 module_symbol_ptr_3_0 in explicitimports.store_qualified_explicit_imports_in_symbol_table qualified_explicit_imports_1_1 (select _x_3_4::_Tuple2 0) (Heap.writePtr module_symbol_ptr_3_0 (update module_ste_3_2::syntax._SymbolTableEntry [0:syntax.STE_ModuleQualifiedImports (explicitimports.fold_st_336 declarations_2_0 (select _x_3_4::_Tuple2 1))]) (select _x_3_1::_Tuple2 1)) modules_3) ) (_predefined._Nil -> <{_Tuple3!7}> modified_ste_kinds_1 symbol_table_2 modules_3) 
<{explicitimports._c;922;11_376}> !ste_kind_0 modified_ste_kinds_1 module_symbol_ptr_2 = case ste_kind_0 (syntax.STE_ModuleQualifiedImports sorted_qualified_imports_1_0 -> _Tuple2 modified_ste_kinds_1 sorted_qualified_imports_1_0) (syntax.STE_ClosedModule -> _Tuple2 (_predefined._Cons (_Tuple2 module_symbol_ptr_2 ste_kind_0) modified_ste_kinds_1) syntax.EmptySortedQualifiedImports) (syntax.STE_Module _x_1_0 -> _Tuple2 (_predefined._Cons (_Tuple2 module_symbol_ptr_2 ste_kind_0) modified_ste_kinds_1) syntax.EmptySortedQualifiedImports) (syntax.STE_Empty -> _Tuple2 (_predefined._Cons (_Tuple2 module_symbol_ptr_2 ste_kind_0) modified_ste_kinds_1) syntax.EmptySortedQualifiedImports) 
explicitimports.not_imported_error_70 module_id_0 ident_name_1 cs_2 = _Tuple3 False (syntax._DeclarationRecord (syntax._Ident "" Heap.nilPtr) syntax.NoPos syntax.STE_Empty -1) (update cs_2::checksupport._CheckState [2:checksupport.checkError (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdString.+++_11}> "'" (<{StdString.+++_11}> (select module_id_0::syntax._Ident 0) (<{StdString.+++_11}> "'." ident_name_1))) "not imported" (select cs_2::checksupport._CheckState 2)])
explicitimports.imported_ste_kind_to_name_space_n::I !_x_0 = case _x_0 (syntax.STE_Imported ste_kind1_1_0 _x_1_1 -> explicitimports.ste_kind_to_name_space_n ste_kind1_1_0) (_ -> 3)
explicitimports.search_qualified_import !name_0 !_x_1 !name_space_n_2::I = case _x_1 (syntax.EmptySortedQualifiedImports -> <{_Tuple2!3}> False (syntax._DeclarationRecord (syntax._Ident "" Heap.nilPtr) syntax.NoPos syntax.STE_Empty 0)) (syntax.SortedQualifiedImports _x_1_0 sqi_left_1_1 sqi_right_1_2 -> case _x_1_0 (syntax.Declaration declaration_2_0 -> case declaration_2_0 (syntax._DeclarationRecord decl_ident_3_0 decl_pos_3_1 decl_kind_3_2 decl_index_3_3 -> case decl_ident_3_0 (syntax._Ident id_name_4_0 id_info_4_1 -> case (<{StdString.==_2}> name_0 id_name_4_0) (True -> let decl_name_space_n_6_0::I = explicitimports.imported_ste_kind_to_name_space_n decl_kind_3_2 in case (<{StdInt.==_16}> name_space_n_2 decl_name_space_n_6_0) (True -> <{_Tuple2!3}> True declaration_2_0) (False -> case (<{StdInt.<_17}> name_space_n_2 decl_name_space_n_6_0) (True -> explicitimports.search_qualified_import name_0 sqi_left_1_1 name_space_n_2) (False -> explicitimports.search_qualified_import name_0 sqi_right_1_2 name_space_n_2) ) ) (False -> case (<{StdString.<_3}> name_0 id_name_4_0) (True -> explicitimports.search_qualified_import name_0 sqi_left_1_1 name_space_n_2) (False -> explicitimports.search_qualified_import name_0 sqi_right_1_2 name_space_n_2) ) ) ) ) ) 
explicitimports.search_qualified_ident !module_id_0 ident_name_1 !name_space_n_2::I !cs_3 = case module_id_0 (syntax._Ident id_name_1_0 id_info_1_1 -> let _x_2_0 = Heap.readPtr id_info_1_1 (select cs_3::checksupport._CheckState 0), cs_symbol_table_2_1 = select _x_2_0::_Tuple2 1 in <{explicitimports._c;981;7_377}> (select (select _x_2_0::_Tuple2 0)::syntax._SymbolTableEntry 0) ident_name_1 name_space_n_2 cs_3 cs_symbol_table_2_1 module_id_0) 
<{explicitimports._c;981;7_377}> !_x_0 ident_name_1 name_space_n_2::I cs_3 cs_symbol_table_4 module_id_5 = case _x_0 (syntax.STE_ModuleQualifiedImports sorted_qualified_imports_1_0 -> let _x_2_0 = explicitimports.search_qualified_import ident_name_1 sorted_qualified_imports_1_0 name_space_n_2 in case (select _x_2_0::_Tuple2 0) (True -> <{_Tuple3!7}> True (select _x_2_0::_Tuple2 1) (update cs_3::checksupport._CheckState [0:cs_symbol_table_4])) (False -> explicitimports.not_imported_error_70 module_id_5 ident_name_1 (update cs_3::checksupport._CheckState [0:cs_symbol_table_4])) ) (syntax.STE_ClosedModule -> explicitimports.not_imported_error_70 module_id_5 ident_name_1 (update cs_3::checksupport._CheckState [0:cs_symbol_table_4])) (syntax.STE_Module _x_1_0 -> explicitimports.not_imported_error_70 module_id_5 ident_name_1 (update cs_3::checksupport._CheckState [0:cs_symbol_table_4])) (_ -> let cs_1_0 = update cs_3::checksupport._CheckState [0:cs_symbol_table_4] in <{_Tuple3!7}> False (syntax._DeclarationRecord (syntax._Ident "" Heap.nilPtr) syntax.NoPos syntax.STE_Empty -1) (update cs_1_0::checksupport._CheckState [2:checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) module_id_5 "undefined" (select cs_1_0::checksupport._CheckState 2)]))
explicitimports.search_qualified_imports !name_0 !_x_1 !name_space_n_2::I = case _x_1 (syntax.EmptySortedQualifiedImports -> _predefined._Nil) (syntax.SortedQualifiedImports _x_1_0 sqi_left_1_1 sqi_right_1_2 -> case _x_1_0 (syntax.Declaration declaration_2_0 -> case declaration_2_0 (syntax._DeclarationRecord decl_ident_3_0 decl_pos_3_1 decl_kind_3_2 decl_index_3_3 -> case decl_ident_3_0 (syntax._Ident id_name_4_0 id_info_4_1 -> case (<{StdString.==_2}> name_0 id_name_4_0) (True -> let decl_name_space_n_6_0::I = explicitimports.imported_ste_kind_to_name_space_n decl_kind_3_2 in case (<{StdInt.==_16}> name_space_n_2 decl_name_space_n_6_0) (True -> <{StdList.++}> (explicitimports.search_qualified_imports name_0 sqi_left_1_1 name_space_n_2) (_predefined._Cons declaration_2_0 (explicitimports.search_qualified_imports name_0 sqi_right_1_2 name_space_n_2))) (False -> case (<{StdInt.<_17}> name_space_n_2 decl_name_space_n_6_0) (True -> explicitimports.search_qualified_imports name_0 sqi_left_1_1 name_space_n_2) (False -> explicitimports.search_qualified_imports name_0 sqi_right_1_2 name_space_n_2) ) ) (False -> case (<{StdString.<_3}> name_0 id_name_4_0) (True -> explicitimports.search_qualified_imports name_0 sqi_left_1_1 name_space_n_2) (False -> explicitimports.search_qualified_imports name_0 sqi_right_1_2 name_space_n_2) ) ) ) ) ) 
explicitimports.qualified_import_for_type::B !name_0 !_x_1 = case _x_1 (syntax.EmptySortedQualifiedImports -> False) (syntax.SortedQualifiedImports _x_1_0 sqi_left_1_1 sqi_right_1_2 -> case _x_1_0 (syntax.Declaration declaration_2_0 -> case declaration_2_0 (syntax._DeclarationRecord decl_ident_3_0 decl_pos_3_1 decl_kind_3_2 decl_index_3_3 -> case decl_ident_3_0 (syntax._Ident id_name_4_0 id_info_4_1 -> case (<{StdString.==_2}> name_0 id_name_4_0) (True -> let decl_name_space_n_6_0::I = explicitimports.imported_ste_kind_to_name_space_n decl_kind_3_2 in case (<{StdInt.==_16}> 1 decl_name_space_n_6_0) (True -> True) (False -> case (<{StdInt.<_17}> 1 decl_name_space_n_6_0) (True -> explicitimports.qualified_import_for_type name_0 sqi_left_1_1) (False -> explicitimports.qualified_import_for_type name_0 sqi_right_1_2) ) ) (False -> case (<{StdString.<_3}> name_0 id_name_4_0) (True -> explicitimports.qualified_import_for_type name_0 sqi_left_1_1) (False -> explicitimports.qualified_import_for_type name_0 sqi_right_1_2) ) ) ) ) ) 
explicitimports.restore_module_ste_kinds_in_symbol_table !_x_0 !symbol_table_1 = case _x_0 (_predefined._Cons _x_1_0 ptrs_and_ste_kinds_1_1 -> case _x_1_0 (_Tuple2 ptr_2_0 ste_kind_2_1 -> let _x_3_0 = Heap.readPtr ptr_2_0 symbol_table_1 in explicitimports.restore_module_ste_kinds_in_symbol_table ptrs_and_ste_kinds_1_1 (Heap.writePtr ptr_2_0 (update (select _x_3_0::_Tuple2 0)::syntax._SymbolTableEntry [0:ste_kind_2_1]) (select _x_3_0::_Tuple2 1))) ) (_predefined._Nil -> symbol_table_1) 
explicitimports.check_completeness_109 !_vcheck_completeness_0 !_x_1 !cci_2 !ccs_3 = case _x_1 (syntax._Global glob_object_1_0 glob_module_1_1 -> select _vcheck_completeness_0::<{explicitimports.check_completeness;}> 0 glob_object_1_0 cci_2 ccs_3) 
<{explicitimports.TD;ImportNrAndIdents}> _x_0::B = _predefined._Nil
<{explicitimports.TD;ExplicitImport}> _x_0::B = _predefined._Nil
<{explicitimports.TD;SolvedImports}> _x_0::B = _predefined._Nil
<{explicitimports.TD;NameSpaceN}> _x_0::B = _predefined._Nil
<{explicitimports.TD;CheckCompletenessState}> _x_0::B = _predefined._Nil
<{explicitimports.TD;CheckCompletenessStateBox}> _x_0::B = _predefined._Nil
<{explicitimports.TD;CheckCompletenessInput}> _x_0::B = _predefined._Nil
<{explicitimports.TD;CheckCompletenessInputBox}> _x_0::B = _predefined._Nil
<{explicitimports.TD;check_completeness;}> _x_0::B = _predefined._Nil


|| Converted Records
:: explicitimports._ImportNrAndIdents = {!explicitimports.ini_symbol_nr, !explicitimports.ini_imp_decl}

:: explicitimports._ExplicitImport = {!explicitimports.ei_module_n::I, !explicitimports.ei_position, !explicitimports.ei_symbols, !explicitimports.ei_qualified}

:: explicitimports._SolvedImports = {!explicitimports.si_explicit, !explicitimports.si_qualified_explicit, !explicitimports.si_implicit}

:: explicitimports._CheckCompletenessState = {!explicitimports.ccs_dcl_modules, !explicitimports.ccs_macro_defs, !explicitimports.ccs_set_of_visited_macros, !explicitimports.ccs_expr_heap, !explicitimports.ccs_symbol_table, !explicitimports.ccs_error, !explicitimports.ccs_heap_changes_accu}

:: explicitimports._CheckCompletenessStateBox = {!explicitimports.box_ccs}

:: explicitimports._CheckCompletenessInput = {!explicitimports.cci_import_position, !explicitimports.cci_main_dcl_module_n::I}

:: explicitimports._CheckCompletenessInputBox = {!explicitimports.box_cci}

:: <{explicitimports.check_completeness;}> = {!explicitimports.check_completeness}

