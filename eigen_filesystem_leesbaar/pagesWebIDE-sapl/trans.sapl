|| ?module? trans


trans.fold_st_546 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_546 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_545 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_545 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_544 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_544 op_0 x_1_1 (op_0 a_1_0 st_2)) 
<{trans.c;4069;23_365}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_3 g_i_1 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{trans.c;4069;23_365}> _vArray_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_2_0)) (False -> _predefined._Nil) 
trans.convert_function_type_389 !_vArray_0 !main_dcl_module_n_1::I !common_defs_2 fun_index_3::I !_x_4 = case _x_4 (_Tuple6 fun_defs_1_0 imported_types_1_1 collected_imports_1_2 fun_indices_with_abs_syn_types_1_3 type_heaps_1_4 var_heap_1_5 -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 fun_defs_1_0 fun_index_3, fun_def_2_1 = select _x_2_0::_Tuple2 0, _x_2_2::B = select fun_def_2_1::syntax._FunDef 8, fi_properties_2_3::I = select _x_2_2::syntax._FunInfo 6, rem_annot_2_4 = <{StdInt.==_16}> (StdInt.bitand fi_properties_2_3 2) 0, fun_type_2_5 = select (select fun_def_2_1::syntax._FunDef 4)::_Tuple1 0, _x_2_6 = expand_types.convertSymbolTypeWithoutExpandingAbstractSynTypes rem_annot_2_4 common_defs_2 fun_type_2_5 main_dcl_module_n_1 imported_types_1_1 collected_imports_1_2 type_heaps_1_4 var_heap_1_5 in case (select _x_2_6::_Tuple6 1) (True -> _Tuple6 (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_2_0::_Tuple2 1) fun_index_3 (update fun_def_2_1::syntax._FunDef [4:general.Yes (select _x_2_6::_Tuple6 0)])) (select _x_2_6::_Tuple6 2) (select _x_2_6::_Tuple6 3) (_predefined._Cons fun_index_3 fun_indices_with_abs_syn_types_1_3) (select _x_2_6::_Tuple6 4) (select _x_2_6::_Tuple6 5)) (False -> _Tuple6 (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_2_0::_Tuple2 1) fun_index_3 (update fun_def_2_1::syntax._FunDef [4:general.Yes (select _x_2_6::_Tuple6 0)])) (select _x_2_6::_Tuple6 2) (select _x_2_6::_Tuple6 3) fun_indices_with_abs_syn_types_1_3 (select _x_2_6::_Tuple6 4) (select _x_2_6::_Tuple6 5)) ) 
trans.convert_function_types_383 !_vArray_0 main_dcl_module_n_1::I !_x_2 common_defs_3 !s_4 = case _x_2 (checksupport.ComponentMember member_1_0 members_1_1 -> trans.convert_function_types_383 _vArray_0 main_dcl_module_n_1 members_1_1 common_defs_3 (trans.convert_function_type_389 _vArray_0 main_dcl_module_n_1 common_defs_3 member_1_0 s_4)) (checksupport.NoComponentMembers -> s_4) 
trans.assign_groups_377 !_x_0 !group_nr_1::I !ti_2 = case _x_0 (checksupport.ComponentMember member_1_0 members_1_1 -> let _x_2_0 = trans.uselect_654 (select ti_2::trans._TransformInfo 0) member_1_0, e1_2_1 = select _x_2_0::_Tuple2 0 in trans.assign_groups_377 members_1_1 group_nr_1 (update ti_2::trans._TransformInfo [0:trans.update_653 (select _x_2_0::_Tuple2 1) member_1_0 (update e1_2_1::syntax._FunDef [8:update (select e1_2_1::syntax._FunDef 8)::syntax._FunInfo [1:group_nr_1]])])) (checksupport.GeneratedComponentMember member_1_0 fun_ptr_1_1 members_1_2 -> case ti_2 (trans._TransformInfo ti_fun_defs_2_0 ti_instances_2_1 ti_cons_args_2_2 ti_new_functions_2_3 ti_fun_heap_2_4 ti_var_heap_2_5 ti_symbol_heap_2_6 ti_type_heaps_2_7 ti_type_def_infos_2_8 ti_next_fun_nr_2_9 ti_cleanup_info_2_10 ti_recursion_introduced_2_11 ti_error_file_2_12 ti_predef_symbols_2_13 -> let _x_3_0 = Heap.readPtr fun_ptr_1_1 ti_fun_heap_2_4, gf_3_1 = select (select _x_3_0::_Tuple2 0)::_Tuple1 0, fd_3_2 = select gf_3_1::syntax._GeneratedFunction 0 in trans.assign_groups_377 members_1_2 group_nr_1 (update ti_2::trans._TransformInfo [4:Heap.writePtr fun_ptr_1_1 (syntax.FI_Function (update gf_3_1::syntax._GeneratedFunction [0:update fd_3_2::syntax._FunDef [8:update (select fd_3_2::syntax._FunDef 8)::syntax._FunInfo [1:group_nr_1]]])) (select _x_3_0::_Tuple2 1)])) ) (checksupport.NoComponentMembers -> ti_2) 
trans.fold_st2_543 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (trans.fold_st2_543 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.setExtendedVarInfo !var_info_ptr_0 !extension_1 !var_heap_2 = let _x_1_0 = Heap.readPtr var_info_ptr_0 var_heap_2, old_var_info_1_1 = select _x_1_0::_Tuple2 0, var_heap_1_2 = select _x_1_0::_Tuple2 1 in <{trans._c;83;7_1043}> old_var_info_1_1 var_info_ptr_0 extension_1 var_heap_1_2
<{trans._c;83;7_1043}> !old_var_info_0 !var_info_ptr_1 !extension_2 !var_heap_3 = case old_var_info_0 (syntax.VI_Extended _x_1_0 original_var_info_1_1 -> Heap.writePtr var_info_ptr_1 (syntax.VI_Extended extension_2 original_var_info_1_1) var_heap_3) (_ -> Heap.writePtr var_info_ptr_1 (syntax.VI_Extended extension_2 old_var_info_0) var_heap_3)
trans.store_arg_type_info_373 !_x_0 !a_type_1 !ti_var_heap_2 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> trans.setExtendedVarInfo fv_info_ptr_1_2 (syntax.EVI_VarType a_type_1) ti_var_heap_2) 
<{trans.c;4223;73_372}> st_args_strictness_0 !g_l_1 i_2::I = <{trans.g_c1;4223;59_1044}> g_l_1 i_2 st_args_strictness_0
<{trans.g_c1;4223;59_1044}> !g_l_0 i_1::I st_args_strictness_2 = case g_l_0 (_predefined._Cons arg_1_0 g_t_1_1 -> case (containers.arg_is_strict i_1 st_args_strictness_2) (True -> _predefined._Cons arg_1_0 (<{trans.c;4223;73_372}> st_args_strictness_2 g_t_1_1 (<{StdInt.+_6}> i_1 StdInt.one_11))) (False -> <{trans.c;4223;73_372}> st_args_strictness_2 g_t_1_1 (<{StdInt.+_6}> i_1 StdInt.one_11)) ) (_ -> _predefined._Nil)
trans.get_root_case_mode_375 !_x_0 = case _x_0 (syntax._TransformedBody tb_args_1_0 _x_1_1 -> case _x_1_1 (syntax.Case _x_2_0 -> trans.RootCase) ) (_ -> trans.NotRootCase)
trans.map_st_623 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_623 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.is_SK_Function_or_SK_LocalMacroFunction::B !_x_0 = case _x_0 (syntax.SK_Function _x_1_0 -> True) (syntax.SK_LocalMacroFunction _x_1_0 -> True) (_ -> False)
trans.complete_application_283 !form_arity_0::I !args_1 !extra_args_2 = let all_args_1_0 = <{StdList.++}> args_1 extra_args_2 in <{_Tuple2!3}> (StdList.take form_arity_0 all_args_1_0) (StdList.drop form_arity_0 all_args_1_0)
trans.build_application_284 !app_0 !_x_1 = case _x_1 (_predefined._Nil -> syntax.App app_0) (_ -> <{syntax.@}> (syntax.App app_0) _x_1)
trans.is_sexy_body::B !_x_0 = case _x_0 (syntax.AnyCodeExpr _x_1_0 _x_1_1 _x_1_2 -> False) (syntax.ABCCodeExpr _x_1_0 _x_1_1 -> False) (syntax.Let _x_1_0 -> case _x_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> StdList.isEmpty let_strict_binds_2_0) ) (_ -> True)
trans.is_not_caf_276::B !_x_0 = case _x_0 (syntax.FK_Caf -> False) (_ -> True)
trans.get_fun_def !_x_0 !main_dcl_module_n_1::I !fun_defs_2 !fun_heap_3 = case _x_0 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case (StdBool.not (<{StdInt.==_16}> glob_module_2_1 main_dcl_module_n_1)) (True -> StdMisc.abort "sanity check 2 failed in module trans") (False -> let _x_4_0 = trans.uselect_654 fun_defs_2 glob_object_2_0 in <{_Tuple3!7}> (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1) fun_heap_3) ) ) (syntax.SK_LocalMacroFunction glob_object_1_0 -> let _x_2_0 = trans.uselect_654 fun_defs_2 glob_object_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1) fun_heap_3) (syntax.SK_GeneratedFunction fun_ptr_1_0 _x_1_1 -> let _x_2_0 = Heap.readPtr fun_ptr_1_0 fun_heap_3 in <{_Tuple3!7}> (select (select (select _x_2_0::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction 0) fun_defs_2 (select _x_2_0::_Tuple2 1)) 
trans.is_safe_producer::B !_vArray_0 !_x_1 ro_2 fun_heap_3 cons_args_4 = case _x_1 (syntax.SK_GeneratedFunction fun_ptr_1_0 _x_1_1 -> select (select (select (Heap.sreadPtr fun_ptr_1_0 fun_heap_3)::_Tuple1 0)::syntax._GeneratedFunction 2)::syntax._ConsClasses 3) (syntax.SK_LocalMacroFunction glob_object_1_0 -> select (select _vArray_0::<{_SystemArray.Array;}> 3 cons_args_4 glob_object_1_0)::syntax._ConsClasses 3) (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case (case (StdBool.not (<{StdInt.==_16}> glob_module_2_1 (select ro_2::trans._ReadOnlyTI 4))) (True -> True) (False -> StdBool.not (<{StdInt.<_17}> glob_object_2_0 (select _vArray_0::<{_SystemArray.Array;}> 4 cons_args_4))) ) (True -> False) (False -> select (select _vArray_0::<{_SystemArray.Array;}> 3 cons_args_4 glob_object_2_0)::syntax._ConsClasses 3) ) ) (syntax.SK_Constructor _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> True) ) 
trans.get_producer_type !_x_0 !ro_1 !fun_defs_2 !fun_heap_3 = case _x_0 (syntax._SymbIdent symb_ident_1_0 _x_1_1 -> case _x_1_1 (syntax.SK_Function _x_2_0 -> case _x_2_0 (syntax._Global glob_object_3_0 glob_module_3_1 -> case (<{StdInt.==_16}> glob_module_3_1 (select ro_1::trans._ReadOnlyTI 4)) (True -> let _x_5_0 = trans.uselect_654 fun_defs_2 glob_object_3_0, _x_5_1 = select _x_5_0::_Tuple2 0 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select _x_5_1::syntax._FunDef 8)::syntax._FunInfo 6) 2) 0)) (True -> <{_Tuple3!7}> (select (expand_types.removeAnnotations_14 (select (select _x_5_1::syntax._FunDef 4)::_Tuple1 0))::_Tuple2 1) (select _x_5_0::_Tuple2 1) fun_heap_3) (False -> <{_Tuple3!7}> (select (select _x_5_1::syntax._FunDef 4)::_Tuple1 0) (select _x_5_0::_Tuple2 1) fun_heap_3) ) (False -> let ft_type_5_0::I = select (expand_types.removeAnnotations_14 (select (trans.select_683 (_SystemArray.select_43 (select ro_1::trans._ReadOnlyTI 0) glob_module_3_1) glob_object_3_0)::syntax._FunType 3))::_Tuple2 1, st_args_5_1 = select ft_type_5_0::syntax._SymbolType 1, new_st_args_5_2 = expand_types.addTypesOfDictionaries (select ro_1::trans._ReadOnlyTI 1) (select ft_type_5_0::syntax._SymbolType 5) st_args_5_1, new_st_arity_5_3 = StdList.length_47 new_st_args_5_2 in <{_Tuple3!7}> (update ft_type_5_0::syntax._SymbolType [1:new_st_args_5_2,2:containers.insert_n_strictness_values_at_beginning (<{StdInt.-_7}> new_st_arity_5_3 (StdList.length_47 st_args_5_1)) (select ft_type_5_0::syntax._SymbolType 2),3:new_st_arity_5_3,5:_predefined._Nil]) fun_defs_2 fun_heap_3) ) ) (syntax.SK_LocalMacroFunction glob_object_2_0 -> let _x_3_0 = trans.uselect_654 fun_defs_2 glob_object_2_0 in <{_Tuple3!7}> (select (select (select _x_3_0::_Tuple2 0)::syntax._FunDef 4)::_Tuple1 0) (select _x_3_0::_Tuple2 1) fun_heap_3) (syntax.SK_GeneratedFunction fun_ptr_2_0 _x_2_1 -> let _x_3_0 = Heap.readPtr fun_ptr_2_0 fun_heap_3 in <{_Tuple3!7}> (select (select (select (select (select _x_3_0::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction 0)::syntax._FunDef 4)::_Tuple1 0) fun_defs_2 (select _x_3_0::_Tuple2 1)) (syntax.SK_Constructor _x_2_0 -> case _x_2_0 (syntax._Global glob_object_3_0 glob_module_3_1 -> <{_Tuple3!7}> (select (expand_types.removeAnnotations_14 (select (trans.select_691 (select (trans.select_667 (select ro_1::trans._ReadOnlyTI 1) glob_module_3_1)::syntax._CommonDefs 1) glob_object_3_0)::syntax._ConsDef 1))::_Tuple2 1) fun_defs_2 fun_heap_3) ) ) 
<{trans.cu;3020;41_300}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_l_3 = <{trans.g_c1;3020;58_1046}> g_l_3 _vone_0 <{_v+_1}> c_l_i_2
<{trans.g_c1;3020;58_1046}> !g_l_0 _vone_1 <{_v+_2}> c_l_i_3 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;3020;58_1045}> g_h_1_0 _vone_1 <{_v+_2}> c_l_i_3 g_t_1_1) (_ -> c_l_i_3)
<{trans.g_c2;3020;58_1045}> !g_h_0 !_vone_1 !<{_v+_2}> c_l_i_3 !g_t_4 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> <{trans.cu;3020;41_300}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_t_4) (_ -> <{trans.cu;3020;41_300}> _vone_1 <{_v+_2}> c_l_i_3 g_t_4)
<{trans.cu;3020;41_299}> !_vArray_0 c_a_1 c_i_2::I !g_l_3 = <{trans.g_c1;3020;58_1048}> g_l_3 _vArray_0 c_a_1 c_i_2
<{trans.g_c1;3020;58_1048}> !g_l_0 _vArray_1 c_a_2 c_i_3::I = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;3020;58_1047}> g_h_1_0 _vArray_1 c_a_2 c_i_3 g_t_1_1) (_ -> c_a_2)
<{trans.g_c2;3020;58_1047}> !g_h_0 !_vArray_1 c_a_2 c_i_3::I !g_t_4 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> <{trans.cu;3020;41_299}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 fv_info_ptr_1_2) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_t_4) (_ -> <{trans.cu;3020;41_299}> _vArray_1 c_a_2 c_i_3 g_t_4)
trans.lookup_lhs_arg_n_306 !i_0::I !x_1 !a_2 = case (<{StdInt.<_17}> i_0 (_SystemArray.size_4 a_2)) (True -> let ai_2_0 = _SystemArray.select_3 a_2 i_0 in case (case (Heap.isNilPtr ai_2_0) (True -> True) (False -> StdBool.not (<{Heap.==_10}> x_1 ai_2_0)) ) (True -> trans.lookup_lhs_arg_n_306 (<{StdInt.+_6}> i_0 1) x_1 a_2) (False -> <{_Tuple2!3}> i_0 (_SystemArray.update_5 a_2 i_0 Heap.nilPtr)) ) (False -> <{_Tuple2!3}> i_0 a_2) 
trans.match_args_305 !_x_0 !_x_1 !arg_n_2::I !n_f_args_3::I !lhs_args_var_ptrs_4 !reversed_perm_5 = case _x_0 (_predefined._Cons fv_1_0 fvs_1_1 -> case _x_1 (_predefined._Cons _x_2_0 bvs_2_1 -> case _x_2_0 (syntax.Var bv_3_0 -> case (<{StdInt.<_17}> arg_n_2 n_f_args_3) (True -> let _x_5_0::I = trans.lookup_lhs_arg_n_306 0 (select bv_3_0::syntax._BoundVar 1) lhs_args_var_ptrs_4, index_5_1 = select _x_5_0::_Tuple2 0 in case (<{StdInt.<_17}> index_5_1 n_f_args_3) (True -> trans.match_args_305 fvs_1_1 bvs_2_1 (<{StdInt.+_6}> arg_n_2 1) n_f_args_3 (select _x_5_0::_Tuple2 1) (_predefined._Cons index_5_1 reversed_perm_5)) (False -> general.No) ) (False -> case (<{Heap.==_10}> (select fv_1_0::syntax._FreeVar 2) (select bv_3_0::syntax._BoundVar 1)) (True -> trans.match_args_305 fvs_1_1 bvs_2_1 (<{StdInt.+_6}> arg_n_2 1) n_f_args_3 lhs_args_var_ptrs_4 (_predefined._Cons arg_n_2 reversed_perm_5)) (False -> general.No) ) ) ) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> case (<{StdInt.==_16}> arg_n_2 n_f_args_3) (True -> general.Yes (StdList.reverse reversed_perm_5)) ) ) (_ -> general.No)
trans.match_tuple_args_strictness_303 !arg_n_0::I !_x_1 !_x_2 !strictness1_3 !strictness2_4 !common_defs_5 !type_heaps_6 = case _x_1 (_predefined._Cons arg1_1_0 args1_1_1 -> case _x_2 (_predefined._Cons arg2_2_0 args2_2_1 -> case (StdBool.not (containers.arg_is_strict arg_n_0 strictness1_3)) (True -> trans.match_tuple_args_strictness_303 (<{StdInt.+_6}> arg_n_0 1) args1_1_1 args2_2_1 strictness1_3 strictness2_4 common_defs_5 type_heaps_6) (False -> case (StdBool.not (containers.arg_is_strict arg_n_0 strictness2_4)) (True -> <{_Tuple2!3}> False type_heaps_6) (False -> let _x_5_0 = trans.match_tuple_strictness_302 arg1_1_0 arg2_2_0 common_defs_5 type_heaps_6 in case (StdBool.not (select _x_5_0::_Tuple2 0)) (True -> <{_Tuple2!3}> False (select _x_5_0::_Tuple2 1)) (False -> trans.match_tuple_args_strictness_303 (<{StdInt.+_6}> arg_n_0 1) args1_1_1 args2_2_1 strictness1_3 strictness2_4 common_defs_5 (select _x_5_0::_Tuple2 1)) ) ) ) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> <{_Tuple2!3}> True type_heaps_6) ) 
trans.match_tuple_strictness_302 !_x_0 _x_1 !common_defs_2 !type_heaps_3 = case _x_0 (syntax._AType at_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax.TAS _x_2_0 args1_2_1 strictness1_2_2 -> case _x_1 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (syntax.TAS _x_4_0 args2_4_1 strictness2_4_2 -> case (StdBool.not (containers.more_or_equal_strictness_lists strictness2_4_2 strictness1_2_2)) (True -> <{_Tuple2!3}> False type_heaps_3) (False -> trans.match_tuple_args_strictness_303 0 args1_2_1 args2_4_1 strictness1_2_2 strictness2_4_2 common_defs_2 type_heaps_3) ) (syntax.TA _x_4_0 _x_4_1 -> case (containers.is_not_strict strictness1_2_2) (True -> <{_Tuple2!3}> True type_heaps_3) (False -> let _x_6_0 = type.tryToExpand _x_3_1 at_attribute_3_0 common_defs_2 type_heaps_3 in case (select _x_6_0::_Tuple3 0) (True -> trans.match_tuple_strictness_302 _x_0 (syntax._AType at_attribute_3_0 (select _x_6_0::_Tuple3 1)) common_defs_2 (select _x_6_0::_Tuple3 2)) (False -> <{_Tuple2!3}> False (select _x_6_0::_Tuple3 2)) ) ) ) ) (syntax.TA _x_2_0 _x_2_1 -> case _x_1 (syntax._AType at_attribute_3_0 at_type_3_1 -> case at_type_3_1 (syntax.TAS _x_4_0 _x_4_1 _x_4_2 -> let _x_5_0 = type.tryToExpand _x_1_1 at_attribute_1_0 common_defs_2 type_heaps_3 in case (select _x_5_0::_Tuple3 0) (True -> trans.match_tuple_strictness_302 (syntax._AType at_attribute_1_0 (select _x_5_0::_Tuple3 1)) _x_1 common_defs_2 (select _x_5_0::_Tuple3 2)) (False -> <{_Tuple2!3}> True (select _x_5_0::_Tuple3 2)) ) (syntax.TA _x_4_0 _x_4_1 -> let _x_5_0 = type.tryToExpand _x_1_1 at_attribute_1_0 common_defs_2 type_heaps_3 in case (select _x_5_0::_Tuple3 0) (True -> trans.match_tuple_strictness_302 (syntax._AType at_attribute_1_0 (select _x_5_0::_Tuple3 1)) _x_1 common_defs_2 (select _x_5_0::_Tuple3 2)) (False -> <{_Tuple2!3}> True (select _x_5_0::_Tuple3 2)) ) ) ) ) (_ -> <{_Tuple2!3}> True type_heaps_3)
trans.match_args_strictness_301 !arg_n_0::I !arity_1::I !s1_2 !s2_3 !perm_4 !arg_types1_5 !arg_types2_6 !common_defs_7 !type_heaps_8 = case (<{StdInt.<_17}> arg_n_0 arity_1) (True -> let lhs_arg_n_2_0::I = <{StdList.!!}> perm_4 arg_n_0 in case (StdBool.not (containers.arg_is_strict lhs_arg_n_2_0 s1_2)) (True -> trans.match_args_strictness_301 (<{StdInt.+_6}> arg_n_0 1) arity_1 s1_2 s2_3 perm_4 arg_types1_5 arg_types2_6 common_defs_7 type_heaps_8) (False -> case (StdBool.not (containers.arg_is_strict arg_n_0 s2_3)) (True -> <{_Tuple2!3}> False type_heaps_8) (False -> let _x_5_0 = trans.match_tuple_strictness_302 (<{StdList.!!}> arg_types1_5 lhs_arg_n_2_0) (<{StdList.!!}> arg_types2_6 arg_n_0) common_defs_7 type_heaps_8 in case (StdBool.not (select _x_5_0::_Tuple2 0)) (True -> <{_Tuple2!3}> False (select _x_5_0::_Tuple2 1)) (False -> trans.match_args_strictness_301 (<{StdInt.+_6}> arg_n_0 1) arity_1 s1_2 s2_3 perm_4 arg_types1_5 arg_types2_6 common_defs_7 (select _x_5_0::_Tuple2 1)) ) ) ) (False -> <{_Tuple2!3}> True type_heaps_8) 
trans.match_types_307 !_x_0 <{type`_1}> !perm_2 !common_defs_3 !type_heaps_4 = case _x_0 (general.No -> <{_Tuple2!3}> True type_heaps_4) (general.Yes type_1_0 -> case (containers.is_not_strict (select type_1_0::syntax._SymbolType 2)) (True -> trans.match_tuple_strictness_302 (select type_1_0::syntax._SymbolType 4) (select <{type`_1}>::syntax._SymbolType 4) common_defs_3 type_heaps_4) (False -> case (StdBool.not (<{StdInt.==_16}> (select type_1_0::syntax._SymbolType 3) (select <{type`_1}>::syntax._SymbolType 3))) (True -> <{_Tuple2!3}> False type_heaps_4) (False -> let _x_4_0 = trans.match_args_strictness_301 0 (select type_1_0::syntax._SymbolType 3) (select type_1_0::syntax._SymbolType 2) (select <{type`_1}>::syntax._SymbolType 2) perm_2 (select type_1_0::syntax._SymbolType 1) (select <{type`_1}>::syntax._SymbolType 1) common_defs_3 type_heaps_4 in case (StdBool.not (select _x_4_0::_Tuple2 0)) (True -> <{_Tuple2!3}> False (select _x_4_0::_Tuple2 1)) (False -> trans.match_tuple_strictness_302 (select type_1_0::syntax._SymbolType 4) (select <{type`_1}>::syntax._SymbolType 4) common_defs_3 (select _x_4_0::_Tuple2 1)) ) ) ) 
<{trans.c;3127;33_304}> !<{_v<_0}> !_vone_1 !<{_v+_2}> args_3 !g_l_4 arg_n_5 g_s_6 = <{trans.g_c1;3127;25_1049}> g_l_4 <{_v<_0}> g_s_6 arg_n_5 args_3 _vone_1 <{_v+_2}>
<{trans.g_c1;3127;25_1049}> !g_l_0 <{_v<_1}> g_s_2 arg_n_3 args_4 _vone_5 <{_v+_6}> = case g_l_0 (_predefined._Cons p_1_0 g_t_1_1 -> case (StdBool.not (select <{_v<_1}>::<{StdOverloaded.<;}> 0 g_s_2 arg_n_3)) (True -> _predefined._Cons (<{StdList.!!}> args_4 p_1_0) (<{trans.c;3127;33_304}> <{_v<_1}> _vone_5 <{_v+_6}> args_4 g_t_1_1 (select <{_v+_6}>::<{StdOverloaded.+;}> 0 arg_n_3 (select _vone_5::<{StdOverloaded.one;}> 0)) g_s_2)) (False -> _predefined._Nil) ) (_ -> _predefined._Nil)
<{trans.c;3127;33_744}> !_vone_0 !<{_v+_1}> args_2 !g_l_3 arg_n_4::I g_s_5::I = <{trans.g_c1;3127;25_1050}> g_l_3 g_s_5 arg_n_4 args_2 _vone_0 <{_v+_1}>
<{trans.g_c1;3127;25_1050}> !g_l_0 g_s_1::I arg_n_2::I args_3 _vone_4 <{_v+_5}> = case g_l_0 (_predefined._Cons p_1_0 g_t_1_1 -> case (StdBool.not (<{StdInt.<_17}> g_s_1 arg_n_2)) (True -> _predefined._Cons (<{StdList.!!}> args_3 p_1_0) (<{trans.c;3127;33_744}> _vone_4 <{_v+_5}> args_3 g_t_1_1 (select <{_v+_5}>::<{StdOverloaded.+;}> 0 arg_n_2 (select _vone_4::<{StdOverloaded.one;}> 0)) g_s_1)) (False -> _predefined._Nil) ) (_ -> _predefined._Nil)
<{trans.c;3127;33_745}> !<{_v+_0}> args_1 !g_l_2 arg_n_3::I g_s_4::I = <{trans.g_c1;3127;25_1051}> g_l_2 g_s_4 arg_n_3 args_1 <{_v+_0}>
<{trans.g_c1;3127;25_1051}> !g_l_0 g_s_1::I arg_n_2::I args_3 <{_v+_4}> = case g_l_0 (_predefined._Cons p_1_0 g_t_1_1 -> case (StdBool.not (<{StdInt.<_17}> g_s_1 arg_n_2)) (True -> _predefined._Cons (<{StdList.!!}> args_3 p_1_0) (<{trans.c;3127;33_745}> <{_v+_4}> args_3 g_t_1_1 (select <{_v+_4}>::<{StdOverloaded.+;}> 0 arg_n_2 StdInt.one_11) g_s_1)) (False -> _predefined._Nil) ) (_ -> _predefined._Nil)
<{trans.c;3127;33_746}> args_0 !g_l_1 arg_n_2::I g_s_3::I = <{trans.g_c1;3127;25_1052}> g_l_1 g_s_3 arg_n_2 args_0
<{trans.g_c1;3127;25_1052}> !g_l_0 g_s_1::I arg_n_2::I args_3 = case g_l_0 (_predefined._Cons p_1_0 g_t_1_1 -> case (StdBool.not (<{StdInt.<_17}> g_s_1 arg_n_2)) (True -> _predefined._Cons (<{StdList.!!}> args_3 p_1_0) (<{trans.c;3127;33_746}> args_3 g_t_1_1 (<{StdInt.+_6}> arg_n_2 StdInt.one_11) g_s_1)) (False -> _predefined._Nil) ) (_ -> _predefined._Nil)
trans.permute_args_308 args_0 !perm_1 n_f_args_2::I = <{trans.c;3127;33_746}> args_0 perm_1 0 (<{StdInt.-_7}> n_f_args_2 1)
trans.no_strict_args_309::B !_x_0 = case _x_0 (general.Yes type_1_0 -> containers.is_not_strict (select type_1_0::syntax._SymbolType 2)) (general.No -> True) 
trans.both_nil::B !_x_0 _x_1 = case _x_0 (_predefined._Nil -> case _x_1 (_predefined._Nil -> True) ) (_ -> False)
trans.same_length::B !_x_0 _x_1 = case _x_0 (_predefined._Cons _x_1_0 l1_1_1 -> case _x_1 (_predefined._Cons _x_2_0 l2_2_1 -> trans.same_length l1_1_1 l2_2_1) ) (_ -> trans.both_nil _x_0 _x_1)
<{trans.cu;3020;41_748}>::I !<{_v+_0}> c_l_i_1::I !g_l_2 = <{trans.g_c1;3020;58_1054}> g_l_2 <{_v+_0}> c_l_i_1
<{trans.g_c1;3020;58_1054}>::I !g_l_0 <{_v+_1}> c_l_i_2::I = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;3020;58_1053}> g_h_1_0 <{_v+_1}> c_l_i_2 g_t_1_1) (_ -> c_l_i_2)
<{trans.g_c2;3020;58_1053}>::I !g_h_0 !<{_v+_1}> c_l_i_2::I !g_t_3 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> <{trans.cu;3020;41_748}> <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_2 StdInt.one_11) g_t_3) (_ -> <{trans.cu;3020;41_748}> <{_v+_1}> c_l_i_2 g_t_3)
<{trans.cu;3020;41_749}> !c_a_0 c_i_1::I !g_l_2 = <{trans.g_c1;3020;58_1056}> g_l_2 c_a_0 c_i_1
<{trans.g_c1;3020;58_1056}> !g_l_0 !c_a_1 c_i_2::I = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;3020;58_1055}> g_h_1_0 c_a_1 c_i_2 g_t_1_1) (_ -> c_a_1)
<{trans.g_c2;3020;58_1055}> !g_h_0 !c_a_1 !c_i_2::I !g_t_3 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> <{trans.cu;3020;41_749}> (_SystemArray.update_5 c_a_1 c_i_2 fv_info_ptr_1_2) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_t_3) (_ -> <{trans.cu;3020;41_749}> c_a_1 c_i_2 g_t_3)
trans.is_safe_producer_747::B !_x_0 ro_1 fun_heap_2 cons_args_3 = case _x_0 (syntax.SK_GeneratedFunction fun_ptr_1_0 _x_1_1 -> select (select (select (Heap.sreadPtr fun_ptr_1_0 fun_heap_2)::_Tuple1 0)::syntax._GeneratedFunction 2)::syntax._ConsClasses 3) (syntax.SK_LocalMacroFunction glob_object_1_0 -> select (_SystemArray.select_3 cons_args_3 glob_object_1_0)::syntax._ConsClasses 3) (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case (case (StdBool.not (<{StdInt.==_16}> glob_module_2_1 (select ro_1::trans._ReadOnlyTI 4))) (True -> True) (False -> StdBool.not (<{StdInt.<_17}> glob_object_2_0 (_SystemArray.size_4 cons_args_3))) ) (True -> False) (False -> select (_SystemArray.select_3 cons_args_3 glob_object_2_0)::syntax._ConsClasses 3) ) ) (syntax.SK_Constructor _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> True) ) 
<{trans.cu;3020;41_750}>::I !c_l_i_0::I !g_l_1 = <{trans.g_c1;3020;58_1058}> g_l_1 c_l_i_0
<{trans.g_c1;3020;58_1058}>::I !g_l_0 !c_l_i_1::I = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;3020;58_1057}> g_h_1_0 c_l_i_1 g_t_1_1) (_ -> c_l_i_1)
<{trans.g_c2;3020;58_1057}>::I !g_h_0 !c_l_i_1::I !g_t_2 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> <{trans.cu;3020;41_750}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) g_t_2) (_ -> <{trans.cu;3020;41_750}> c_l_i_1 g_t_2)
trans.is_trivial_body !_x_0 !_x_1 !_x_2 !type_3 !ro_4 !fun_defs_5 !fun_heap_6 !type_heaps_7 !cons_args_8 = case _x_0 (_predefined._Cons fv_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> case _x_1 (syntax.Var bv_3_0 -> case _x_2 (_predefined._Cons arg_4_0 _x_4_1 -> case _x_4_1 (_predefined._Nil -> case (<{Heap.==_10}> (select fv_1_0::syntax._FreeVar 2) (select bv_3_0::syntax._BoundVar 1)) (True -> <{_Tuple5!31}> (general.Yes arg_4_0) fun_defs_5 fun_heap_6 type_heaps_7 cons_args_8) (False -> <{_Tuple5!31}> general.No fun_defs_5 fun_heap_6 type_heaps_7 cons_args_8) ) ) ) ) ) (_ -> case _x_1 (syntax.App app_1_0 -> case (StdBool.not (trans.is_safe_producer_747 (select (select app_1_0::syntax._App 0)::syntax._SymbIdent 1) ro_4 fun_heap_6 cons_args_8)) (True -> <{_Tuple5!31}> general.No fun_defs_5 fun_heap_6 type_heaps_7 cons_args_8) (False -> let n_f_args_3_0::I = StdList.length_47 _x_2 in <{trans._c;3023;7_1059}> (trans.match_args_305 _x_0 (select app_1_0::syntax._App 1) 0 n_f_args_3_0 (<{trans.cu;3020;41_749}> (_SystemArray._createArray_0 (<{trans.cu;3020;41_750}> 0 _x_0)) 0 _x_0) _predefined._Nil) type_3 ro_4 type_heaps_7 app_1_0 fun_defs_5 fun_heap_6 _x_2 n_f_args_3_0 cons_args_8) ) (syntax.BasicExpr _x_1_0 -> case _x_1_0 (syntax.BVB _x_2_0 -> case (case (trans.both_nil _x_0 _x_2) (True -> True) (False -> case (trans.same_length _x_0 _x_2) (True -> trans.no_strict_args_309 type_3) (False -> False) ) ) (True -> <{_Tuple5!31}> (general.Yes _x_1) fun_defs_5 fun_heap_6 type_heaps_7 cons_args_8) ) ) (_ -> <{_Tuple5!31}> general.No fun_defs_5 fun_heap_6 type_heaps_7 cons_args_8))
<{trans._c;3023;7_1059}> !_x_0 type_1 !ro_2 !type_heaps_3 !app_4 !fun_defs_5 !fun_heap_6 _x_7 n_f_args_8::I !cons_args_9 = case _x_0 (general.Yes perm_1_0 -> let _x_2_0 = trans.get_producer_type (select app_4::syntax._App 0) ro_2 fun_defs_5 fun_heap_6, <{type`_2_1}> = select _x_2_0::_Tuple3 0, _x_2_2 = trans.match_types_307 type_1 <{type`_2_1}> perm_1_0 (select ro_2::trans._ReadOnlyTI 1) type_heaps_3 in case (select _x_2_2::_Tuple2 0) (True -> <{_Tuple5!31}> (general.Yes (syntax.App (update app_4::syntax._App [1:trans.permute_args_308 _x_7 perm_1_0 n_f_args_8]))) (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2) (select _x_2_2::_Tuple2 1) cons_args_9) (False -> <{_Tuple5!31}> general.No (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2) (select _x_2_2::_Tuple2 1) cons_args_9) ) (_ -> let _x_1_0 = trans.get_producer_type (select app_4::syntax._App 0) ro_2 fun_defs_5 fun_heap_6 in <{_Tuple5!31}> general.No (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2) type_heaps_3 cons_args_9)
trans.is_trivial_function_call_281 !symb_kind_0 !app_args_1 !ro_2 !ti_3 = let _x_1_0 = trans.get_fun_def symb_kind_0 (select ro_2::trans._ReadOnlyTI 4) (select ti_3::trans._TransformInfo 0) (select ti_3::trans._TransformInfo 4), fun_def_1_1 = select _x_1_0::_Tuple3 0, _x_1_2 = select (select fun_def_1_1::syntax._FunDef 3)::_Tuple1 0, _x_1_3 = trans.is_trivial_body (select _x_1_2::syntax._TransformedBody 0) (select _x_1_2::syntax._TransformedBody 1) app_args_1 (select fun_def_1_1::syntax._FunDef 4) ro_2 (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2) (select ti_3::trans._TransformInfo 7) (select ti_3::trans._TransformInfo 2) in <{_Tuple2!3}> (select _x_1_3::_Tuple5 0) (update ti_3::trans._TransformInfo [0:select _x_1_3::_Tuple5 1,2:select _x_1_3::_Tuple5 4,4:select _x_1_3::_Tuple5 2,7:select _x_1_3::_Tuple5 3])
trans.any__622::B !_vList_0 p_1 !_x_2 = case _x_2 (<{_predefined._|Nil}> -> False) (<{_predefined._|Cons}> b_1_0 tl_1_1 -> case (p_1 b_1_0) (True -> True) (False -> trans.any__622 _vList_0 p_1 tl_1_1) ) 
trans.is_main_module_function_symbol_274::B !_x_0 main_dcl_module_n_1::I = case _x_0 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> <{StdInt.==_16}> glob_module_2_1 main_dcl_module_n_1) ) (syntax.SK_LocalMacroFunction _x_1_0 -> True) (syntax.SK_GeneratedFunction _x_1_0 _x_1_1 -> True) (_ -> False)
trans.equal_function_275::B !_x_0 _x_1 = case _x_0 (syntax.SK_Function i1_1_0 -> case _x_1 (syntax.SK_Function i2_2_0 -> <{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) i1_1_0 i2_2_0) ) (syntax.SK_LocalMacroFunction i1_1_0 -> case _x_1 (syntax.SK_LocalMacroFunction i2_2_0 -> <{StdInt.==_16}> i1_1_0 i2_2_0) ) (syntax.SK_GeneratedFunction _x_1_0 i1_1_1 -> case _x_1 (syntax.SK_GeneratedFunction _x_2_0 i2_2_1 -> <{StdInt.==_16}> i1_1_1 i2_2_1) ) (_ -> False)
trans.any__751::B p_0 !_x_1 = case _x_1 (<{_predefined._|Nil}> -> False) (<{_predefined._|Cons}> b_1_0 tl_1_1 -> case (p_0 b_1_0) (True -> True) (False -> trans.any__751 p_0 tl_1_1) ) 
trans.any__752::B _x_0 !_x_1 = case _x_1 (<{_predefined._|Nil}> -> False) (<{_predefined._|Cons}> b_1_0 tl_1_1 -> case (trans.equal_function_275 _x_0 b_1_0) (True -> True) (False -> trans.any__752 _x_0 tl_1_1) ) 
trans.is_cycle_of_trivial_function_calls_279 !symb_kind_0 !app_args_1 !previous_function_symb_kinds_2 !ro_3 !ti_4 = case (StdBool.not (trans.is_main_module_function_symbol_274 symb_kind_0 (select ro_3::trans._ReadOnlyTI 4))) (True -> <{_Tuple2!3}> False ti_4) (False -> case (trans.any__752 symb_kind_0 previous_function_symb_kinds_2) (True -> <{_Tuple2!3}> True ti_4) (False -> let _x_3_0 = trans.is_trivial_function_call_281 symb_kind_0 app_args_1 ro_3 ti_4, ti_3_1 = select _x_3_0::_Tuple2 1 in <{trans._c;2807;11_1060}> (select _x_3_0::_Tuple2 0) symb_kind_0 previous_function_symb_kinds_2 ro_3 ti_3_1) ) 
<{trans._c;2807;11_1060}> !_x_0 symb_kind_1 previous_function_symb_kinds_2 ro_3 !ti_4 = case _x_0 (general.Yes _x_1_0 -> case _x_1_0 (syntax.App _x_2_0 -> case _x_2_0 (syntax._App app_symb_3_0 app_args_3_1 app_info_ptr_3_2 -> trans.is_cycle_of_trivial_function_calls_279 (select app_symb_3_0::syntax._SymbIdent 1) app_args_3_1 (_predefined._Cons symb_kind_1 previous_function_symb_kinds_2) ro_3 ti_4) ) ) (_ -> <{_Tuple2!3}> False ti_4)
trans.is_trivial_function_280 !app_symb_0 !app_args_1 !fun_kind_2 !rhs_3 !ro_4 !ti_5 = case (case (select ro_4::trans._ReadOnlyTI 5) (True -> case (trans.is_not_caf_276 fun_kind_2) (True -> trans.is_sexy_body rhs_3) (False -> False) ) (False -> False) ) (True -> trans.is_trivial_function_call_281 (select app_symb_0::syntax._SymbIdent 1) app_args_1 ro_4 ti_5) (False -> <{_Tuple2!3}> general.No ti_5) 
trans.non_var_273::B !_x_0 = case _x_0 (syntax.Var _x_1_0 -> False) (_ -> True)
trans.unsafe_272::B !_x_0::I = case _x_0 (-5 -> True) (-6 -> True) (_ -> False)
<{trans.c;2712;47_271}> !g_l_0 g_l_1 = <{trans.g_c1;2712;35_1062}> g_l_0 g_l_1
<{trans.g_c1;2712;35_1062}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons arg_1_0 g_t_1_1 -> <{trans.g_c1;2712;56_1061}> g_l_1 arg_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;2712;56_1061}> !g_l_0 arg_1 g_t_2 = case g_l_0 (_predefined._Cons cc_arg_1_0 g_t_1_1 -> case (case (trans.unsafe_272 cc_arg_1_0) (True -> trans.non_var_273 arg_1) (False -> False) ) (True -> _predefined._Cons arg_1 (<{trans.c;2712;47_271}> g_t_2 g_t_1_1)) (False -> <{trans.c;2712;47_271}> g_t_2 g_t_1_1) ) (_ -> _predefined._Nil)
trans.fold_st_621 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_621 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.map_st_620 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_620 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st_619 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_619 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_618 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_618 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.map_st_617 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_617 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_616 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_616 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_615 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_615 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_614 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_614 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_613 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_613 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.writeVarInfo !var_info_ptr_0 !new_var_info_1 !var_heap_2 = let _x_1_0 = Heap.readPtr var_info_ptr_0 var_heap_2, var_heap_1_1 = select _x_1_0::_Tuple2 1 in <{trans._c;76;7_1063}> (select _x_1_0::_Tuple2 0) var_info_ptr_0 new_var_info_1 var_heap_1_1
<{trans._c;76;7_1063}> !_x_0 !var_info_ptr_1 !new_var_info_2 !var_heap_3 = case _x_0 (syntax.VI_Extended extensions_1_0 _x_1_1 -> Heap.writePtr var_info_ptr_1 (syntax.VI_Extended extensions_1_0 new_var_info_2) var_heap_3) (_ -> Heap.writePtr var_info_ptr_1 new_var_info_2 var_heap_3)
trans.allocate_and_bind_new_var_358 var_ident_0 var_info_ptr_1 evi_2 var_heap_3 = let _x_1_0 = Heap.newPtr (syntax.VI_Extended evi_2 syntax.VI_Empty) var_heap_3, new_var_1_1 = syntax._BoundVar var_ident_0 (select _x_1_0::_Tuple2 0) Heap.nilPtr in _Tuple2 new_var_1_1 (trans.writeVarInfo var_info_ptr_1 (syntax.VI_Forward new_var_1_1) (select _x_1_0::_Tuple2 1))
trans.readExtendedVarInfo !var_info_ptr_0 !var_heap_1 = let _x_1_0 = Heap.readPtr var_info_ptr_0 var_heap_1, var_heap_1_1 = select _x_1_0::_Tuple2 1 in <{trans._c;69;7_1064}> (select _x_1_0::_Tuple2 0) var_heap_1_1
<{trans._c;69;7_1064}> !_x_0 !var_heap_1 = case _x_0 (syntax.VI_Extended extensions_1_0 _x_1_1 -> <{_Tuple2!2}> extensions_1_0 var_heap_1) (_ -> StdMisc.abort "Error in compiler: 'readExtendedVarInfo' failed in module trans.\n")
trans.preprocess_local_var_357 !fv_0 !_x_1 = case fv_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> case _x_1 (_Tuple3 new_vars_accu_2_0 free_vars_accu_2_1 var_heap_2_2 -> let _x_3_0 = trans.readExtendedVarInfo fv_info_ptr_1_2 var_heap_2_2, _x_3_1 = trans.allocate_and_bind_new_var_358 fv_ident_1_1 fv_info_ptr_1_2 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1) in <{_Tuple2!3}> (update fv_0::syntax._FreeVar [2:select (select _x_3_1::_Tuple2 0)::syntax._BoundVar 1]) (_Tuple3 new_vars_accu_2_0 free_vars_accu_2_1 (select _x_3_1::_Tuple2 1))) ) 
trans.anon_350 !_x_0 !st_1 = case _x_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.preprocess_local_var_357 lb_dst_1_0 st_1) 
trans.anon_351 !_x_0 !st_1 = case _x_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.preprocess_local_var_357 lb_dst_1_0 st_1) 
trans.postprocess_local_var_359 !_x_0 !_x_1 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> case _x_1 (_Tuple3 a_2_0 b_2_1 var_heap_2_2 -> <{_Tuple3!7}> a_2_0 b_2_1 (trans.writeVarInfo fv_info_ptr_1_2 syntax.VI_Empty var_heap_2_2)) ) 
trans.anon_354 !_x_0 !st_1 = case _x_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.postprocess_local_var_359 lb_dst_1_0 st_1) 
trans.anon_355 !_x_0 !st_1 = case _x_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.postprocess_local_var_359 lb_dst_1_0 st_1) 
<{trans.c;3983;49_360}> !g_l_0 g_l_1 g_l_2 = <{trans.g_c1;3983;19_1067}> g_l_0 g_l_1 g_l_2
<{trans.g_c1;3983;19_1067}> !g_l_0 g_l_1 g_l_2 = case g_l_0 (_predefined._Cons lb_dst_1_0 g_t_1_1 -> <{trans.g_c1;3983;41_1066}> g_l_1 g_l_2 lb_dst_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;3983;41_1066}> !g_l_0 g_l_1 lb_dst_2 g_t_3 = case g_l_0 (_predefined._Cons lb_src_1_0 g_t_1_1 -> <{trans.g_c1;3983;65_1065}> g_l_1 lb_dst_2 lb_src_1_0 g_t_3 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;3983;65_1065}> !g_l_0 lb_dst_1 lb_src_2 g_t_3 g_t_4 = case g_l_0 (_predefined._Cons original_bind_1_0 g_t_1_1 -> _predefined._Cons (update original_bind_1_0::syntax._LetBind [0:lb_dst_1,1:lb_src_2]) (<{trans.c;3983;49_360}> g_t_3 g_t_4 g_t_1_1)) (_ -> _predefined._Nil)
trans.add_let_binds !free_vars_0 rhss_1 original_binds_2 = <{trans.c;3983;49_360}> free_vars_0 rhss_1 original_binds_2
trans.map_st_754 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.anon_350 x_1_0 s_1, _x_2_2 = trans.map_st_754 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_755 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.anon_351 x_1_0 s_1, _x_2_2 = trans.map_st_755 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st_758 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_758 x_1_1 (trans.anon_354 a_1_0 st_1)) 
trans.fold_st_759 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_759 x_1_1 (trans.anon_355 a_1_0 st_1)) 
trans.map_st_753 normalise_symbol_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.map_expr_st_356 normalise_symbol_0 x_1_0 s_2, _x_2_2 = trans.map_st_753 normalise_symbol_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.anon_353 normalise_symbol_0 !_x_1 st_2 = case _x_1 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.map_expr_st_356 normalise_symbol_0 lb_src_1_1 st_2) 
trans.map_st_757 normalise_symbol_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.anon_353 normalise_symbol_0 x_1_0 s_2, _x_2_2 = trans.map_st_757 normalise_symbol_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.anon_352 normalise_symbol_0 !_x_1 st_2 = case _x_1 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.map_expr_st_356 normalise_symbol_0 lb_src_1_1 st_2) 
trans.map_st_756 normalise_symbol_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.anon_352 normalise_symbol_0 x_1_0 s_2, _x_2_2 = trans.map_st_756 normalise_symbol_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_expr_st_356 normalise_symbol_0 !_x_1 _x_2 = case _x_1 (syntax.Var var_1_0 -> case var_1_0 (syntax._BoundVar var_ident_2_0 var_info_ptr_2_1 var_expr_ptr_2_2 -> case _x_2 (_Tuple3 new_vars_accu_3_0 free_vars_accu_3_1 var_heap_3_2 -> let _x_4_0 = Heap.readPtr var_info_ptr_2_1 var_heap_3_2, var_heap_4_1 = select _x_4_0::_Tuple2 1 in <{trans._c;3904;11_1068}> (select _x_4_0::_Tuple2 0) new_vars_accu_3_0 free_vars_accu_3_1 var_heap_4_1 var_ident_2_0 var_info_ptr_2_1 var_1_0) ) ) (syntax.App app_1_0 -> case app_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> case app_symb_2_0 (syntax._SymbIdent symb_ident_3_0 _x_3_1 -> case _x_3_1 (syntax.SK_Function _x_4_0 -> case _x_4_0 (syntax._Global glob_object_5_0 glob_module_5_1 -> case _x_2 (_Tuple3 new_vars_accu_6_0 free_vars_accu_6_1 var_heap_6_2 -> case (case (<{StdInt.==_16}> glob_module_5_1 (select normalise_symbol_0::predef._PredefinedSymbol 0)) (True -> <{StdInt.==_16}> glob_object_5_0 (select normalise_symbol_0::predef._PredefinedSymbol 1)) (False -> False) ) (True -> let _x_8_0 = Heap.newPtr syntax.VI_Empty var_heap_6_2, new_var_8_1 = syntax._BoundVar symb_ident_3_0 (select _x_8_0::_Tuple2 0) Heap.nilPtr in _Tuple2 (syntax.Var new_var_8_1) (_Tuple3 (_predefined._Cons (_Tuple2 new_var_8_1 syntax.TE) new_vars_accu_6_0) (_predefined._Cons _x_1 free_vars_accu_6_1) (select _x_8_0::_Tuple2 1))) ) ) ) ) (_ -> let _x_3_0 = trans.map_st_753 normalise_symbol_0 app_args_2_1 _x_2 in _Tuple2 (syntax.App (update app_1_0::syntax._App [1:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1))) ) (syntax.Let lad_1_0 -> case lad_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> let _x_3_0 = trans.map_st_754 let_lazy_binds_2_1 _x_2, _x_3_1 = trans.map_st_755 let_strict_binds_2_0 (select _x_3_0::_Tuple2 1), _x_3_2 = trans.map_st_756 normalise_symbol_0 let_lazy_binds_2_1 (select _x_3_1::_Tuple2 1), _x_3_3 = trans.map_st_757 normalise_symbol_0 let_strict_binds_2_0 (select _x_3_2::_Tuple2 1), _x_3_4 = trans.map_expr_st_356 normalise_symbol_0 let_expr_2_2 (select _x_3_3::_Tuple2 1) in _Tuple2 (syntax.Let (update lad_1_0::syntax._Let [0:trans.add_let_binds (select _x_3_1::_Tuple2 0) (select _x_3_3::_Tuple2 0) let_strict_binds_2_0,1:trans.add_let_binds (select _x_3_0::_Tuple2 0) (select _x_3_2::_Tuple2 0) let_lazy_binds_2_1,2:select _x_3_4::_Tuple2 0])) (trans.fold_st_759 let_strict_binds_2_0 (trans.fold_st_758 let_lazy_binds_2_1 (select _x_3_4::_Tuple2 1)))) ) (syntax.Selection a_1_0 expr_1_1 b_1_2 -> let _x_2_0 = trans.map_expr_st_356 normalise_symbol_0 expr_1_1 _x_2 in _Tuple2 (syntax.Selection a_1_0 (select _x_2_0::_Tuple2 0) b_1_2) (select _x_2_0::_Tuple2 1)) (syntax.BasicExpr _x_1_0 -> _Tuple2 _x_1 _x_2) 
<{trans._c;3904;11_1068}> !_x_0 new_vars_accu_1 free_vars_accu_2 var_heap_3 var_ident_4 var_info_ptr_5 var_6 = case _x_0 (syntax.VI_Extended _x_1_0 _x_1_1 -> case _x_1_1 (syntax.VI_Forward new_var_2_0 -> _Tuple2 (syntax.Var new_var_2_0) (_Tuple3 new_vars_accu_1 free_vars_accu_2 var_heap_3)) (_ -> case _x_1_0 (syntax.EVI_VarType var_type_2_0 -> let _x_3_0 = trans.allocate_and_bind_new_var_358 var_ident_4 var_info_ptr_5 _x_1_0 var_heap_3, new_var_3_1 = select _x_3_0::_Tuple2 0 in _Tuple2 (syntax.Var new_var_3_1) (_Tuple3 (_predefined._Cons (_Tuple2 new_var_3_1 (select var_type_2_0::syntax._AType 1)) new_vars_accu_1) (_predefined._Cons (syntax.Var var_6) free_vars_accu_2) (select _x_3_0::_Tuple2 1))) )) 
trans.anon_349 !expr_0 !var_heap_1 = <{trans._c;3896;32_1069}> expr_0 var_heap_1
<{trans._c;3896;32_1069}> !expr_0 !var_heap_1 = case expr_0 (syntax.Var _x_1_0 -> case _x_1_0 (syntax._BoundVar var_ident_2_0 var_info_ptr_2_1 var_expr_ptr_2_2 -> trans.writeVarInfo var_info_ptr_2_1 syntax.VI_Empty var_heap_1) ) (_ -> var_heap_1)
trans.map_st_760 normalise_symbol_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.map_expr_st_356 normalise_symbol_0 x_1_0 s_2, _x_2_2 = trans.map_st_760 normalise_symbol_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st_761 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_761 x_1_1 (trans.anon_349 a_1_0 st_1)) 
trans.renewVariables !exprs_0 !normalise_symbol_1 !var_heap_2 = let _x_1_0 = trans.map_st_760 normalise_symbol_1 exprs_0 (_Tuple3 _predefined._Nil _predefined._Nil var_heap_2), _x_1_1 = select _x_1_0::_Tuple2 1, free_vars_1_2 = select _x_1_1::_Tuple3 1 in <{_Tuple2!3}> (select _x_1_0::_Tuple2 0) (_Tuple3 (select _x_1_1::_Tuple3 0) free_vars_1_2 (trans.fold_st_761 free_vars_1_2 (select _x_1_1::_Tuple3 2)))
trans.rnf_app_args_342::B !_x_0 args_1 index_2::I strictness_3 ro_4 = case _x_0 (syntax._App symb_1_0 app_args_1_1 app_info_ptr_1_2 -> case symb_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> case symb_kind_2_1 (syntax.SK_Constructor cons_index_3_0 -> case (trans.rnf_args_341 app_args_1_1 0 (select (select (trans.select_691 (select (trans.select_667 (select ro_4::trans._ReadOnlyTI 1) (select cons_index_3_0::syntax._Global 1))::syntax._CommonDefs 1) (select cons_index_3_0::syntax._Global 0))::syntax._ConsDef 1)::syntax._SymbolType 2) ro_4) (True -> trans.rnf_args_341 args_1 (<{StdInt.+_6}> index_2 StdInt.one_11) strictness_3 ro_4) (False -> False) ) (_ -> False)) ) 
trans.rnf_args_341::B !_x_0 index_1::I strictness_2 ro_3 = case _x_0 (_predefined._Nil -> True) (_predefined._Cons arg_1_0 args_1_1 -> case (containers.arg_is_strict index_1 strictness_2) (True -> <{trans._c;3669;15_1070}> arg_1_0 args_1_1 index_1 strictness_2 ro_3) (False -> trans.rnf_args_341 args_1_1 (<{StdInt.+_6}> index_1 StdInt.one_11) strictness_2 ro_3) ) 
<{trans._c;3669;15_1070}>::B !arg_0 args_1 index_2::I strictness_3 ro_4 = case arg_0 (syntax.BasicExpr _x_1_0 -> trans.rnf_args_341 args_1 (<{StdInt.+_6}> index_2 StdInt.one_11) strictness_3 ro_4) (syntax.App app_1_0 -> trans.rnf_app_args_342 app_1_0 args_1 index_2 strictness_3 ro_4) (_ -> False)
trans.expressions_may_be_copied_347 !_x_0 ro_1 ti_2 = case _x_0 (_predefined._Cons expr_1_0 exprs_1_1 -> let _x_2_0 = trans.expression_may_be_copied_346 expr_1_0 ro_1 ti_2 in case (select _x_2_0::_Tuple2 0) (True -> trans.expressions_may_be_copied_347 exprs_1_1 ro_1 (select _x_2_0::_Tuple2 1)) (False -> _Tuple2 False (select _x_2_0::_Tuple2 1)) ) (_predefined._Nil -> _Tuple2 True ti_2) 
trans.expression_may_be_copied_346 !_x_0 ro_1 ti_2 = case _x_0 (syntax.Var _x_1_0 -> _Tuple2 True ti_2) (syntax.App _x_1_0 -> case _x_1_0 (syntax._App _x_2_0 app_args_2_1 app_info_ptr_2_2 -> case _x_2_0 (syntax._SymbIdent symb_ident_3_0 _x_3_1 -> case _x_3_1 (syntax.SK_Constructor cons_index_4_0 -> case (case (<{StdInt.==_16}> (select cons_index_4_0::syntax._Global 1) (select ro_1::trans._ReadOnlyTI 7)) (True -> containers.is_not_strict (select (select (trans.select_691 (select (trans.select_667 (select ro_1::trans._ReadOnlyTI 1) (select cons_index_4_0::syntax._Global 1))::syntax._CommonDefs 1) (select cons_index_4_0::syntax._Global 0))::syntax._ConsDef 1)::syntax._SymbolType 2)) (False -> False) ) (True -> trans.expressions_may_be_copied_347 app_args_2_1 ro_1 ti_2) (False -> _Tuple2 False ti_2) ) (syntax.SK_Function _x_4_0 -> case _x_4_0 (syntax._Global glob_object_5_0 glob_module_5_1 -> case (StdBool.not (<{StdInt.==_16}> glob_module_5_1 (select ro_1::trans._ReadOnlyTI 4))) (True -> let fun_type_7_0 = select (trans.select_683 (_SystemArray.select_43 (select ro_1::trans._ReadOnlyTI 0) glob_module_5_1) glob_object_5_0)::syntax._FunType 3 in case (<{StdInt.<_17}> (StdList.length_47 app_args_2_1) (<{StdInt.+_6}> (select fun_type_7_0::syntax._SymbolType 3) (StdList.length_47 (select fun_type_7_0::syntax._SymbolType 5)))) (True -> trans.expressions_may_be_copied_347 app_args_2_1 ro_1 ti_2) (False -> _Tuple2 False ti_2) ) (False -> let _x_7_0 = select (trans.select_651 (select ti_2::trans._TransformInfo 0) glob_object_5_0)::syntax._FunDef 1 in case (<{StdInt.<_17}> (StdList.length_47 app_args_2_1) (select _x_7_0::_Tuple2 0)) (True -> trans.expressions_may_be_copied_347 app_args_2_1 ro_1 (select _x_7_0::_Tuple2 1)) (False -> _Tuple2 False (select _x_7_0::_Tuple2 1)) ) ) ) (syntax.SK_LocalMacroFunction glob_object_4_0 -> let _x_5_0 = select (trans.select_651 (select ti_2::trans._TransformInfo 0) glob_object_4_0)::syntax._FunDef 1 in case (<{StdInt.<_17}> (StdList.length_47 app_args_2_1) (select _x_5_0::_Tuple2 0)) (True -> trans.expressions_may_be_copied_347 app_args_2_1 ro_1 (select _x_5_0::_Tuple2 1)) (False -> _Tuple2 False (select _x_5_0::_Tuple2 1)) ) (syntax.SK_GeneratedFunction fun_ptr_4_0 _x_4_1 -> case (<{StdInt.<_17}> (StdList.length_47 app_args_2_1) (select (select (select (Heap.sreadPtr fun_ptr_4_0 (select ti_2::trans._TransformInfo 4))::_Tuple1 0)::syntax._GeneratedFunction 0)::syntax._FunDef 1)) (True -> trans.expressions_may_be_copied_347 app_args_2_1 ro_1 ti_2) (False -> _Tuple2 False ti_2) ) ) ) ) (syntax.Selection _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax.NormalSelector -> case _x_1_1 (syntax.Var _x_3_0 -> case _x_1_2 (_predefined._Cons _x_4_0 _x_4_1 -> case _x_4_0 (syntax.RecordSelection _x_5_0 _x_5_1 -> case _x_5_0 (syntax._Global _x_6_0 glob_module_6_1 -> case _x_6_0 (syntax._DefinedSymbol ds_ident_7_0 ds_arity_7_1 ds_index_7_2 -> case _x_4_1 (_predefined._Nil -> case (case (<{StdInt.==_16}> glob_module_6_1 (select ro_1::trans._ReadOnlyTI 7)) (True -> containers.is_not_strict (select (select (trans.select_723 (select (trans.select_667 (select ro_1::trans._ReadOnlyTI 1) glob_module_6_1)::syntax._CommonDefs 2) ds_index_7_2)::syntax._SelectorDef 2)::syntax._SymbolType 2)) (False -> False) ) (True -> _Tuple2 True ti_2) (False -> _Tuple2 False ti_2) ) ) ) ) ) ) ) ) (_ -> _Tuple2 False ti_2)
trans.function_may_be_copied_345 !_x_0 rhs_1 ro_2 ti_3 = case _x_0 (general.Yes _x_1_0 -> case _x_1_0 (syntax._SymbolType st_vars_2_0 st_args_2_1 st_args_strictness_2_2 st_arity_2_3 st_result_2_4 st_context_2_5 st_attr_vars_2_6 st_attr_env_2_7 -> case (containers.is_not_strict st_args_strictness_2_2) (True -> trans.expression_may_be_copied_346 rhs_1 ro_2 ti_3) (False -> _Tuple2 False ti_3) ) ) (general.No -> trans.expression_may_be_copied_346 rhs_1 ro_2 ti_3) 
trans.function_is_good_producer !_x_0 fun_type_1 linear_bit_2::B ro_3 ti_4 = case _x_0 (syntax.Expanding _x_1_0 -> _Tuple2 False ti_4) (syntax.TransformedBody _x_1_0 -> case _x_1_0 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> case (select ro_3::trans._ReadOnlyTI 5) (True -> case (case linear_bit_2 (True -> trans.is_sexy_body tb_rhs_2_1) (False -> False) ) (True -> _Tuple2 True ti_4) (False -> trans.function_may_be_copied_345 fun_type_1 tb_rhs_2_1 ro_3 ti_4) ) (False -> _Tuple2 False ti_4) ) ) 
trans.is_higher_order_function::B !_x_0 = case _x_0 (general.Yes _x_1_0 -> case _x_1_0 (syntax._SymbolType st_vars_2_0 st_args_2_1 st_args_strictness_2_2 st_arity_2_3 _x_2_4 st_context_2_5 st_attr_vars_2_6 st_attr_env_2_7 -> case _x_2_4 (syntax._AType at_attribute_3_0 _x_3_1 -> case _x_3_1 (<{syntax.-->}> _x_4_0 _x_4_1 -> True) ) ) ) (_ -> False)
trans.get_fun_arity_344 !glob_module_0::I glob_object_1::I !ro_2 ti_3 = case (StdBool.not (<{StdInt.==_16}> glob_module_0 (select ro_2::trans._ReadOnlyTI 4))) (True -> let _x_2_0 = select (trans.select_683 (_SystemArray.select_43 (select ro_2::trans._ReadOnlyTI 0) glob_module_0) glob_object_1)::syntax._FunType 3 in _Tuple2 (<{StdInt.+_6}> (select _x_2_0::syntax._SymbolType 3) (StdList.length_47 (select _x_2_0::syntax._SymbolType 5))) ti_3) (False -> select (trans.select_651 (select ti_3::trans._TransformInfo 0) glob_object_1)::syntax._FunDef 1) 
trans.determineProducer !app_0 _x_1 _x_2::I _x_3::B _x_4::B _x_5::B new_args_6 prod_index_7::I producers_8 _x_9 ti_10 = case app_0 (syntax._App symb_1_0 app_args_1_1 app_info_ptr_1_2 -> case symb_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> case symb_kind_2_1 (syntax.SK_Constructor _x_3_0 -> case _x_1 (syntax.EI_DictionaryType type_4_0 -> case ti_10 (trans._TransformInfo ti_fun_defs_5_0 ti_instances_5_1 ti_cons_args_5_2 ti_new_functions_5_3 ti_fun_heap_5_4 ti_var_heap_5_5 ti_symbol_heap_5_6 ti_type_heaps_5_7 ti_type_def_infos_5_8 ti_next_fun_nr_5_9 ti_cleanup_info_5_10 ti_recursion_introduced_5_11 ti_error_file_5_12 ti_predef_symbols_5_13 -> let _x_6_0 = trans.uselect_662 ti_predef_symbols_5_13 177, _x_6_1 = trans.renewVariables app_args_1_1 (select _x_6_0::_Tuple2 0) ti_var_heap_5_5, _x_6_2 = select _x_6_1::_Tuple2 1 in <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Class (update app_0::syntax._App [1:select _x_6_1::_Tuple2 0]) (select _x_6_2::_Tuple3 0) type_4_0)) (<{StdList.++}> (select _x_6_2::_Tuple3 1) new_args_6) (update ti_10::trans._TransformInfo [5:select _x_6_2::_Tuple3 2,13:select _x_6_0::_Tuple2 1])) ) (_ -> case (case (select _x_9::trans._ReadOnlyTI 5) (True -> case (case (<{StdInt.==_16}> (select _x_3_0::syntax._Global 1) (select _x_9::trans._ReadOnlyTI 7)) (True -> True) (False -> StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_2 32) 0)) ) (True -> case _x_5 (True -> True) (False -> trans.rnf_args_341 app_args_1_1 0 (select (select (trans.select_691 (select (trans.select_667 (select _x_9::trans._ReadOnlyTI 1) (select _x_3_0::syntax._Global 1))::syntax._CommonDefs 1) (select _x_3_0::syntax._Global 0))::syntax._ConsDef 1)::syntax._SymbolType 2) _x_9) ) (False -> False) ) (False -> False) ) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Constructor symb_1_0 (StdList.length_47 app_args_1_1) app_args_1_1)) (<{StdList.++}> app_args_1_1 new_args_6) ti_10) (False -> <{_Tuple3!7}> producers_8 (_predefined._Cons (syntax.App app_0) new_args_6) ti_10) )) (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let n_app_args_4_0::I = StdList.length_47 app_args_1_1 in case (case (<{StdInt.<_17}> 1 n_app_args_4_0) (True -> <{StdInt.<_17}> 32 (<{StdInt.-_7}> (<{StdInt.+_6}> (_SystemArray.size_4 producers_8) n_app_args_4_0) 1)) (False -> False) ) (True -> let ti_6_0 = update ti_10::trans._TransformInfo [4:select (Heap.readPtr fun_ptr_3_0 (select ti_10::trans._TransformInfo 4))::_Tuple2 1] in <{_Tuple3!7}> producers_8 (_predefined._Cons (syntax.App app_0) new_args_6) (update ti_6_0::trans._TransformInfo [12:<{StdFile.<<<_38}> (select ti_6_0::trans._TransformInfo 12) "Possibly missed fusion oppurtunity: Function Arity > 32\n"])) (False -> let _x_6_0 = Heap.readPtr fun_ptr_3_0 (select ti_10::trans._TransformInfo 4), _x_6_1 = select (select _x_6_0::_Tuple2 0)::_Tuple1 0, _x_6_2 = select _x_6_1::syntax._GeneratedFunction 0 in case (StdBool.not (<{StdInt.==_16}> n_app_args_4_0 (select _x_6_2::syntax._FunDef 1))) (True -> case (select _x_9::trans._ReadOnlyTI 5) (True -> let fun_body_9_0 = select _x_6_2::syntax._FunDef 3, fun_type_9_1 = select _x_6_2::syntax._FunDef 4, ti_fun_heap_9_2 = select _x_6_0::_Tuple2 1, ti_9_3 = update ti_10::trans._TransformInfo [4:ti_fun_heap_9_2], _x_9_4 = trans.function_is_good_producer fun_body_9_0 fun_type_9_1 _x_5 _x_9 ti_9_3 in case (case (select (select _x_6_1::syntax._GeneratedFunction 2)::syntax._ConsClasses 3) (True -> select _x_9_4::_Tuple2 0) (False -> False) ) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_CurriedFunction symb_1_0 n_app_args_4_0 fun_index_3_1)) (<{StdList.++}> app_args_1_1 new_args_6) (select _x_9_4::_Tuple2 1)) (False -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Curried symb_1_0 n_app_args_4_0)) (<{StdList.++}> app_args_1_1 new_args_6) (select _x_9_4::_Tuple2 1)) ) (False -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_2 1) 0)) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Curried symb_1_0 n_app_args_4_0)) (<{StdList.++}> app_args_1_1 new_args_6) (update ti_10::trans._TransformInfo [4:select _x_6_0::_Tuple2 1])) (False -> <{_Tuple3!7}> producers_8 (_predefined._Cons (syntax.App app_0) new_args_6) (update ti_10::trans._TransformInfo [4:select _x_6_0::_Tuple2 1])) ) ) (False -> let fun_body_8_0 = select _x_6_2::syntax._FunDef 3, fun_type_8_1 = select _x_6_2::syntax._FunDef 4, ti_fun_heap_8_2 = select _x_6_0::_Tuple2 1, ti_8_3 = update ti_10::trans._TransformInfo [4:ti_fun_heap_8_2], _x_8_4 = trans.function_is_good_producer fun_body_8_0 fun_type_8_1 _x_5 _x_9 ti_8_3 in case (case (select (select _x_6_1::syntax._GeneratedFunction 2)::syntax._ConsClasses 3) (True -> select _x_8_4::_Tuple2 0) (False -> False) ) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_GeneratedFunction symb_1_0 n_app_args_4_0 fun_index_3_1)) (<{StdList.++}> app_args_1_1 new_args_6) (select _x_8_4::_Tuple2 1)) (False -> let not_expanding_producer_10_0::B = <{trans._c;3710;11_1071}> fun_body_8_0 in case (case (case (StdBool.not _x_3) (True -> not_expanding_producer_10_0) (False -> False) ) (True -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_2 1) 0)) (True -> case _x_5 (True -> trans.is_higher_order_function fun_type_8_1) (False -> False) ) (False -> False) ) (False -> False) ) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Curried symb_1_0 n_app_args_4_0)) (<{StdList.++}> app_args_1_1 new_args_6) (select _x_8_4::_Tuple2 1)) (False -> case (case (case (StdBool.not _x_3) (True -> not_expanding_producer_10_0) (False -> False) ) (True -> case _x_4 (True -> case _x_5 (True -> trans.is_higher_order_function fun_type_8_1) (False -> False) ) (False -> False) ) (False -> False) ) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Curried symb_1_0 n_app_args_4_0)) (<{StdList.++}> app_args_1_1 new_args_6) (select _x_8_4::_Tuple2 1)) (False -> <{_Tuple3!7}> producers_8 (_predefined._Cons (syntax.App app_0) new_args_6) (select _x_8_4::_Tuple2 1)) ) ) ) ) ) (_ -> case (trans.is_SK_Function_or_SK_LocalMacroFunction symb_kind_2_1) (True -> let n_app_args_4_0 = StdList.length_47 app_args_1_1, _x_4_1::I = <{trans._c;3737;15_1072}> symb_kind_2_1 _x_9, glob_module_4_2::I = select _x_4_1::syntax._Global 1, glob_object_4_3 = select _x_4_1::syntax._Global 0, _x_4_4::I = trans.get_fun_arity_344 glob_module_4_2 glob_object_4_3 _x_9 ti_10 in case (StdBool.not (<{StdInt.==_16}> n_app_args_4_0 (select _x_4_4::_Tuple2 0))) (True -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_2 1) 0)) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Curried symb_1_0 n_app_args_4_0)) (<{StdList.++}> app_args_1_1 new_args_6) (select _x_4_4::_Tuple2 1)) (False -> case (select _x_9::trans._ReadOnlyTI 5) (True -> let !max_index_8_0::I = _SystemArray.size_4 (select ti_8_10::trans._TransformInfo 2), ti_8_1 = select _x_4_4::_Tuple2 1, _x_8_2 = _SystemArray.select_3 (select ti_8_1::trans._TransformInfo 2) glob_object_4_3, ti_8_3 = select _x_8_2::_Tuple2 1, _x_8_4 = trans.select_651 (select ti_8_3::trans._TransformInfo 0) glob_object_4_3, _x_8_5 = select _x_8_4::_Tuple2 0, fun_body_8_6 = select _x_8_5::syntax._FunDef 3, fun_type_8_7 = select _x_8_5::syntax._FunDef 4, ti_8_8 = select _x_8_4::_Tuple2 1, _x_8_9 = trans.function_is_good_producer fun_body_8_6 fun_type_8_7 _x_5 _x_9 ti_8_8, ti_8_10 = select _x_8_9::_Tuple2 1 in case (case (<{StdInt.==_16}> glob_module_4_2 (select _x_9::trans._ReadOnlyTI 4)) (True -> case (<{StdInt.<_17}> glob_object_4_3 max_index_8_0) (True -> case (select _x_8_9::_Tuple2 0) (True -> case (select (select _x_8_2::_Tuple2 0)::syntax._ConsClasses 3) (True -> StdBool.not _x_3) (False -> False) ) (False -> False) ) (False -> False) ) (False -> False) ) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_CurriedFunction symb_1_0 n_app_args_4_0 glob_object_4_3)) (<{StdList.++}> app_args_1_1 new_args_6) ti_8_10) (False -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Curried symb_1_0 n_app_args_4_0)) (<{StdList.++}> app_args_1_1 new_args_6) ti_8_10) ) (False -> <{_Tuple3!7}> producers_8 (_predefined._Cons (syntax.App app_0) new_args_6) (select (_SystemArray.select_3 (select (select _x_4_4::_Tuple2 1)::trans._TransformInfo 2) glob_object_4_3)::_Tuple2 1)) ) ) (False -> let !max_index_6_0::I = _SystemArray.size_4 (select ti_6_1::trans._TransformInfo 2), ti_6_1 = select _x_4_4::_Tuple2 1 in case (case (StdBool.not (<{StdInt.==_16}> glob_module_4_2 (select _x_9::trans._ReadOnlyTI 4))) (True -> True) (False -> StdBool.not (<{StdInt.<_17}> glob_object_4_3 max_index_6_0)) ) (True -> <{_Tuple3!7}> producers_8 (_predefined._Cons (syntax.App app_0) new_args_6) ti_6_1) (False -> let _x_8_0 = trans.select_651 (select ti_6_1::trans._TransformInfo 0) glob_object_4_3, _x_8_1 = select _x_8_0::_Tuple2 0, fun_body_8_2 = select _x_8_1::syntax._FunDef 3, fun_type_8_3 = select _x_8_1::syntax._FunDef 4, ti_8_4 = select _x_8_0::_Tuple2 1, _x_8_5 = trans.function_is_good_producer fun_body_8_2 fun_type_8_3 _x_5 _x_9 ti_8_4, ti_8_6 = select _x_8_5::_Tuple2 1 in case (case (select _x_8_5::_Tuple2 0) (True -> case (select (_SystemArray.select_3 (select ti_8_6::trans._TransformInfo 2) glob_object_4_3)::syntax._ConsClasses 3) (True -> StdBool.not _x_3) (False -> False) ) (False -> False) ) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Function symb_1_0 n_app_args_4_0 glob_object_4_3)) (<{StdList.++}> app_args_1_1 new_args_6) ti_8_6) (False -> case (trans._f1075_1075 (trans._f1074_1074 (StdBool.not _x_3) fun_body_8_2) _x_2 _x_5 fun_type_8_3) (True -> <{_Tuple3!7}> (_SystemArray.update_5 producers_8 prod_index_7 (syntax.PR_Curried symb_1_0 n_app_args_4_0)) (<{StdList.++}> app_args_1_1 new_args_6) ti_8_6) (False -> <{_Tuple3!7}> producers_8 (_predefined._Cons (syntax.App app_0) new_args_6) ti_8_6) ) ) ) ) (False -> <{_Tuple3!7}> producers_8 (_predefined._Cons (syntax.App app_0) new_args_6) ti_10) )) ) 
trans._f1075_1075::B !_x_0::B _x_1::I _x_2::B fun_type_3 = case _x_0 (True -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_1 1) 0)) (True -> case _x_2 (True -> trans.is_higher_order_function fun_type_3) (False -> False) ) (False -> False) ) (_ -> False)
trans._f1074_1074::B !_x_0::B fun_body_1 = case _x_0 (True -> <{trans._c;3771;15_1073}> fun_body_1) (_ -> False)
<{trans._c;3771;15_1073}>::B !fun_body_0 = case fun_body_0 (syntax.Expanding _x_1_0 -> False) (_ -> True)
<{trans._c;3737;15_1072}> !symb_kind_0 _x_1 = case symb_kind_0 (syntax.SK_Function global_index_1_0 -> global_index_1_0) (syntax.SK_LocalMacroFunction index_1_0 -> syntax._Global index_1_0 (select _x_1::trans._ReadOnlyTI 4)) 
<{trans._c;3710;11_1071}>::B !fun_body_0 = case fun_body_0 (syntax.Expanding _x_1_0 -> False) (_ -> True)
trans.determine_producer_330 consumer_properties_0::I consumer_is_curried_1::B ok_non_rec_consumer_2::B linear_bit_3::B !arg_4 new_args_5 prod_index_6::I producers_7 ro_8 ti_9 = case arg_4 (syntax.App app_1_0 -> case app_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> case (Heap.isNilPtr app_info_ptr_2_2) (True -> trans.determineProducer app_1_0 syntax.EI_Empty consumer_properties_0 consumer_is_curried_1 ok_non_rec_consumer_2 linear_bit_3 new_args_5 prod_index_6 producers_7 ro_8 ti_9) (False -> let _x_4_0 = Heap.readPtr app_info_ptr_2_2 (select ti_9::trans._TransformInfo 6) in trans.determineProducer app_1_0 (select _x_4_0::_Tuple2 0) consumer_properties_0 consumer_is_curried_1 ok_non_rec_consumer_2 linear_bit_3 new_args_5 prod_index_6 producers_7 ro_8 (update ti_9::trans._TransformInfo [6:select _x_4_0::_Tuple2 1])) ) ) (_ -> _Tuple3 producers_7 (_predefined._Cons arg_4 new_args_5) ti_9)
trans.isProducer_325::B !_x_0 = case _x_0 (syntax.PR_Empty -> False) (_ -> True)
trans.isStrictArg_326::B !_x_0 _x_1::I = case _x_0 (general.No -> False) (general.Yes _x_1_0 -> case _x_1_0 (syntax._SymbolType st_vars_2_0 st_args_2_1 st_args_strictness_2_2 st_arity_2_3 st_result_2_4 st_context_2_5 st_attr_vars_2_6 st_attr_env_2_7 -> containers.arg_is_strict _x_1 st_args_strictness_2_2) ) 
<{trans.c;3530;28_321}> bv_0 !g_l_1 = <{trans.g_c1;3530;34_1076}> g_l_1 bv_0
<{trans.g_c1;3530;34_1076}> !g_l_0 bv_1 = case g_l_0 (_predefined._Cons fv_1_0 g_t_1_1 -> case (<{Heap.==_10}> (select fv_1_0::syntax._FreeVar 2) (select bv_1::syntax._BoundVar 1)) (True -> _predefined._Cons fv_1_0 (<{trans.c;3530;28_321}> bv_1 g_t_1_1)) (False -> <{trans.c;3530;28_321}> bv_1 g_t_1_1) ) (_ -> _predefined._Nil)
trans.isStrictVarOrSimpleExpression_329::B ro_0 !_x_1 = case _x_1 (syntax.Var bv_1_0 -> StdBool.not (StdList.isEmpty (<{trans.c;3530;28_321}> bv_1_0 (select (select ro_0::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 3)))) (syntax.App _x_1_0 -> case _x_1_0 (syntax._App _x_2_0 _x_2_1 app_info_ptr_2_2 -> case _x_2_0 (syntax._SymbIdent symb_ident_3_0 _x_3_1 -> case _x_3_1 (syntax.SK_Constructor _x_4_0 -> case _x_2_1 (_predefined._Nil -> True) ) ) ) ) (syntax.BasicExpr _x_1_0 -> True) (_ -> False)
trans.getArgType_327 !_x_0 !index_1::I = case _x_0 (general.Yes _x_1_0 -> case _x_1_0 (syntax._SymbolType st_vars_2_0 st_args_2_1 st_args_strictness_2_2 st_arity_2_3 st_result_2_4 st_context_2_5 st_attr_vars_2_6 st_attr_env_2_7 -> <{StdList.!!}> st_args_2_1 index_1) ) 
<{trans.c;3526;45_320}> bv_0 !g_l_1 = <{trans.g_c1;3526;51_1077}> g_l_1 bv_0
<{trans.g_c1;3526;51_1077}> !g_l_0 bv_1 = case g_l_0 (_predefined._Cons fv_1_0 g_t_1_1 -> case (<{Heap.==_10}> (select fv_1_0::syntax._FreeVar 2) (select bv_1::syntax._BoundVar 1)) (True -> _predefined._Cons fv_1_0 (<{trans.c;3526;45_320}> bv_1 g_t_1_1)) (False -> <{trans.c;3526;45_320}> bv_1 g_t_1_1) ) (_ -> _predefined._Nil)
trans.isStrictVar_328::B ro_0 !_x_1 = case _x_1 (syntax.Var bv_1_0 -> StdBool.not (StdList.isEmpty (<{trans.c;3526;45_320}> bv_1_0 (select (select ro_0::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 3)))) (_ -> False)
trans.determineUnusedProducersInNextArgs_324 !_vArray_0 ro_1 consumer_type_2 !_x_3 !arg_and_args_4 prod_index_5::I producers_6 ro_7 ti_8 = case _x_3 (_predefined._Cons cons_arg_1_0 cons_args_1_1 -> case arg_and_args_4 (_predefined._Cons arg_2_0 args_2_1 -> case (case (<{StdInt.==_16}> cons_arg_1_0 -2) (True -> trans.isStrictArg_326 consumer_type_2 prod_index_5) (False -> False) ) (True -> let _x_4_0 = <{trans._c;3498;25_1078}> (trans.isStrictVarOrSimpleExpression_329 ro_1 arg_2_0) ti_8 arg_2_0 consumer_type_2 prod_index_5 in _Tuple4 (select _vArray_0::<{_SystemArray.Array;}> 5 producers_6 prod_index_5 syntax.PR_Unused) args_2_1 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1)) (False -> case (case (<{StdInt.==_16}> cons_arg_1_0 -2) (True -> case (StdBool.not (trans.isStrictArg_326 consumer_type_2 prod_index_5)) (True -> trans.isStrictVar_328 ro_1 arg_2_0) (False -> False) ) (False -> False) ) (True -> trans.determineUnusedProducersInNextArgs_324 _vArray_0 ro_1 consumer_type_2 cons_args_1_1 args_2_1 (<{StdInt.+_6}> prod_index_5 1) (select _vArray_0::<{_SystemArray.Array;}> 5 producers_6 prod_index_5 syntax.PR_Unused) ro_7 ti_8) (False -> case (<{StdInt.==_16}> cons_arg_1_0 -1) (True -> trans.determineUnusedProducersInNextArgs_324 _vArray_0 ro_1 consumer_type_2 cons_args_1_1 args_2_1 (<{StdInt.+_6}> prod_index_5 1) (select _vArray_0::<{_SystemArray.Array;}> 5 producers_6 prod_index_5 syntax.PR_Unused) ro_7 ti_8) (False -> _Tuple4 producers_6 arg_and_args_4 _predefined._Nil ti_8) ) ) ) ) (_ -> case arg_and_args_4 (_predefined._Nil -> _Tuple4 producers_6 _predefined._Nil _predefined._Nil ti_8) )
<{trans._c;3498;25_1078}> !_x_0::B ti_1 arg_2 consumer_type_3 prod_index_4::I = case _x_0 (True -> _Tuple2 _predefined._Nil ti_1) (_ -> let _x_1_0 = Heap.newPtr syntax.VI_Empty (select ti_1::trans._TransformInfo 5) in _Tuple2 (_predefined._Cons (_Tuple2 (syntax._LetBind (syntax._FreeVar -1 (syntax._Ident "dummy_for_strict_unused" Heap.nilPtr) (select _x_1_0::_Tuple2 0) 0) arg_2 syntax.NoPos) (trans.getArgType_327 consumer_type_3 prod_index_4)) _predefined._Nil) (update ti_1::trans._TransformInfo [5:select _x_1_0::_Tuple2 1]))
trans.find_same_Var_336::I !_x_0 !var_info_ptr_1 !arg_n_2::I = case _x_0 (_predefined._Cons _x_1_0 args_1_1 -> case _x_1_0 (syntax.Var var_2_0 -> case (<{Heap.==_10}> (select var_2_0::syntax._BoundVar 1) var_info_ptr_1) (True -> arg_n_2) (False -> trans.find_same_Var_336 args_1_1 var_info_ptr_1 (<{StdInt.+_6}> arg_n_2 1)) ) (_ -> trans.find_same_Var_336 args_1_1 var_info_ptr_1 (<{StdInt.+_6}> arg_n_2 1))) (_predefined._Nil -> -1) 
trans.get_arg_type_322 !arg_i_0::I !arg_n_1::I !_x_2 = case _x_2 (_predefined._Cons arg_type_1_0 arg_types_1_1 -> case (<{StdInt.<_17}> arg_i_0 arg_n_1) (True -> trans.get_arg_type_322 (<{StdInt.+_6}> arg_i_0 1) arg_n_1 arg_types_1_1) (False -> _Tuple2 arg_type_1_0 arg_types_1_1) ) 
trans.get2ArgTypes_337 !_x_0 !arg_n1_1::I !arg_n2_2::I = case _x_0 (general.Yes _x_1_0 -> case _x_1_0 (syntax._SymbolType st_vars_2_0 st_args_2_1 st_args_strictness_2_2 st_arity_2_3 st_result_2_4 st_context_2_5 st_attr_vars_2_6 st_attr_env_2_7 -> let _x_3_0 = trans.get_arg_type_322 0 arg_n1_1 st_args_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (select (trans.get_arg_type_322 (<{StdInt.+_6}> arg_n1_1 1) arg_n2_2 (select _x_3_0::_Tuple2 1))::_Tuple2 0)) ) 
trans.equal_non_unique_atypes_340::B !_x_0 _x_1 = case _x_0 (_predefined._Cons atype1_1_0 atypes1_1_1 -> case _x_1 (_predefined._Cons atype2_2_0 atypes2_2_1 -> case (trans.equal_non_unique_atype_338 atype1_1_0 atype2_2_0) (True -> trans.equal_non_unique_atypes_340 atypes1_1_1 atypes2_2_1) (False -> False) ) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> True) ) (_ -> False)
trans.equal_non_unique_type_339::B !_x_0 !_x_1 = case _x_0 (syntax.TA _x_1_0 atypes1_1_1 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index1_2_2 type_prop_2_3 -> case _x_1 (syntax.TA _x_3_0 atypes2_3_1 -> case _x_3_0 (syntax._TypeSymbIdent type_ident_4_0 type_arity_4_1 type_index2_4_2 type_prop_4_3 -> case (<{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) type_index1_2_2 type_index2_4_2) (True -> trans.equal_non_unique_atypes_340 atypes1_1_1 atypes2_3_1) (False -> False) ) ) ) ) (syntax.TAS _x_1_0 atypes1_1_1 strictness1_1_2 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index1_2_2 type_prop_2_3 -> case _x_1 (syntax.TAS _x_3_0 atypes2_3_1 strictness2_3_2 -> case _x_3_0 (syntax._TypeSymbIdent type_ident_4_0 type_arity_4_1 type_index2_4_2 type_prop_4_3 -> case (<{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) type_index1_2_2 type_index2_4_2) (True -> case (containers.equal_strictness_lists strictness1_1_2 strictness2_3_2) (True -> trans.equal_non_unique_atypes_340 atypes1_1_1 atypes2_3_1) (False -> False) ) (False -> False) ) ) ) ) (<{syntax.-->}> a_atype1_1_0 r_atype1_1_1 -> case _x_1 (<{syntax.-->}> a_atype2_2_0 r_atype2_2_1 -> case (trans.equal_non_unique_atype_338 a_atype1_1_0 a_atype2_2_0) (True -> trans.equal_non_unique_atype_338 r_atype1_1_1 r_atype2_2_1) (False -> False) ) ) (syntax.TB _x_1_0 -> case _x_1_0 (syntax.BT_Int -> case _x_1 (syntax.TB _x_3_0 -> case _x_3_0 (syntax.BT_Int -> True) ) ) (syntax.BT_Char -> case _x_1 (syntax.TB _x_3_0 -> case _x_3_0 (syntax.BT_Char -> True) ) ) (syntax.BT_Bool -> case _x_1 (syntax.TB _x_3_0 -> case _x_3_0 (syntax.BT_Bool -> True) ) ) (syntax.BT_Real -> case _x_1 (syntax.TB _x_3_0 -> case _x_3_0 (syntax.BT_Real -> True) ) ) ) (syntax.TV _x_1_0 -> case _x_1_0 (syntax._TypeVar tv_ident_2_0 tv_info_ptr1_2_1 -> case _x_1 (syntax.TV _x_3_0 -> case _x_3_0 (syntax._TypeVar tv_ident_4_0 tv_info_ptr2_4_1 -> <{Heap.==_10}> tv_info_ptr1_2_1 tv_info_ptr2_4_1) ) ) ) (_ -> False)
trans.equal_non_unique_atype_338::B !_x_0 !_x_1 = case _x_0 (syntax._AType _x_1_0 type1_1_1 -> case _x_1_0 (syntax.TA_Multi -> case _x_1 (syntax._AType _x_3_0 type2_3_1 -> case _x_3_0 (syntax.TA_Multi -> trans.equal_non_unique_type_339 type1_1_1 type2_3_1) ) ) (syntax.TA_None -> case _x_1 (syntax._AType _x_3_0 type2_3_1 -> case _x_3_0 (syntax.TA_None -> trans.equal_non_unique_type_339 type1_1_1 type2_3_1) ) ) (syntax.TA_Var _x_2_0 -> case _x_2_0 (syntax._AttributeVar av_ident_3_0 av_info_ptr1_3_1 -> case _x_1 (syntax._AType _x_4_0 type2_4_1 -> case _x_4_0 (syntax.TA_Var _x_5_0 -> case _x_5_0 (syntax._AttributeVar av_ident_6_0 av_info_ptr2_6_1 -> case (<{Heap.==_10}> av_info_ptr1_3_1 av_info_ptr2_6_1) (True -> trans.equal_non_unique_type_339 type1_1_1 type2_4_1) (False -> False) ) ) ) ) ) ) (_ -> False)
trans.remove_arg_n_334 !_x_0::I !_x_1 = case _x_0 (0 -> case _x_1 (_predefined._Cons _x_2_0 args_2_1 -> args_2_1) ) (_ -> case _x_1 (_predefined._Cons arg_1_0 args_1_1 -> _predefined._Cons arg_1_0 (trans.remove_arg_n_334 (<{StdInt.-_7}> _x_0 1) args_1_1)) )
trans.find_same_SK_GeneratedFunction_arg_333::I !_x_0 !fun_index_1::I !arg_n_2::I = case _x_0 (_predefined._Cons _x_1_0 args_1_1 -> case _x_1_0 (syntax.App _x_2_0 -> case _x_2_0 (syntax._App _x_3_0 _x_3_1 app_info_ptr_3_2 -> case _x_3_0 (syntax._SymbIdent symb_ident_4_0 _x_4_1 -> case _x_4_1 (syntax.SK_GeneratedFunction fun_ptr_5_0 arg_fun_index_5_1 -> case _x_3_1 (_predefined._Nil -> case (<{StdInt.==_16}> arg_fun_index_5_1 fun_index_1) (True -> arg_n_2) (False -> trans.find_same_SK_GeneratedFunction_arg_333 args_1_1 fun_index_1 (<{StdInt.+_6}> arg_n_2 1)) ) ) ) ) ) (_ -> trans.find_same_SK_GeneratedFunction_arg_333 args_1_1 fun_index_1 (<{StdInt.+_6}> arg_n_2 1))) (_predefined._Nil -> -1) 
trans.is_monomorphic_symbol_type_335::B !_x_0 = case _x_0 (general.Yes _x_1_0 -> case _x_1_0 (syntax._SymbolType _x_2_0 st_args_2_1 st_args_strictness_2_2 st_arity_2_3 st_result_2_4 st_context_2_5 _x_2_6 st_attr_env_2_7 -> case _x_2_0 (_predefined._Nil -> case _x_2_6 (_predefined._Nil -> True) ) ) ) (general.No -> False) 
trans.find_same_SK_LocalMacroFunction_arg_332::I !_x_0 !fun_index_1::I !arg_n_2::I = case _x_0 (_predefined._Cons _x_1_0 args_1_1 -> case _x_1_0 (syntax.App _x_2_0 -> case _x_2_0 (syntax._App _x_3_0 _x_3_1 app_info_ptr_3_2 -> case _x_3_0 (syntax._SymbIdent symb_ident_4_0 _x_4_1 -> case _x_4_1 (syntax.SK_LocalMacroFunction arg_fun_index_5_0 -> case _x_3_1 (_predefined._Nil -> case (<{StdInt.==_16}> arg_fun_index_5_0 fun_index_1) (True -> arg_n_2) (False -> trans.find_same_SK_LocalMacroFunction_arg_332 args_1_1 fun_index_1 (<{StdInt.+_6}> arg_n_2 1)) ) ) ) ) ) (_ -> trans.find_same_SK_LocalMacroFunction_arg_332 args_1_1 fun_index_1 (<{StdInt.+_6}> arg_n_2 1))) (_predefined._Nil -> -1) 
trans.find_same_SK_Function_arg_331::I !_x_0 !fun_module_1::I !fun_index_2::I !arg_n_3::I = case _x_0 (_predefined._Cons _x_1_0 args_1_1 -> case _x_1_0 (syntax.App _x_2_0 -> case _x_2_0 (syntax._App _x_3_0 _x_3_1 app_info_ptr_3_2 -> case _x_3_0 (syntax._SymbIdent symb_ident_4_0 _x_4_1 -> case _x_4_1 (syntax.SK_Function _x_5_0 -> case _x_5_0 (syntax._Global glob_object_6_0 glob_module_6_1 -> case _x_3_1 (_predefined._Nil -> case (case (<{StdInt.==_16}> glob_module_6_1 fun_module_1) (True -> <{StdInt.==_16}> glob_object_6_0 fun_index_2) (False -> False) ) (True -> arg_n_3) (False -> trans.find_same_SK_Function_arg_331 args_1_1 fun_module_1 fun_index_2 (<{StdInt.+_6}> arg_n_3 1)) ) ) ) ) ) ) (_ -> trans.find_same_SK_Function_arg_331 args_1_1 fun_module_1 fun_index_2 (<{StdInt.+_6}> arg_n_3 1))) (_predefined._Nil -> -1) 
trans.determineUnusedProducersInNextArgs_762 ro_0 consumer_type_1 !_x_2 !arg_and_args_3 prod_index_4::I producers_5 ro_6 ti_7 = case _x_2 (_predefined._Cons cons_arg_1_0 cons_args_1_1 -> case arg_and_args_3 (_predefined._Cons arg_2_0 args_2_1 -> case (case (<{StdInt.==_16}> cons_arg_1_0 -2) (True -> trans.isStrictArg_326 consumer_type_1 prod_index_4) (False -> False) ) (True -> let _x_4_0 = <{trans._c;3498;25_1079}> (trans.isStrictVarOrSimpleExpression_329 ro_0 arg_2_0) ti_7 arg_2_0 consumer_type_1 prod_index_4 in _Tuple4 (_SystemArray.update_5 producers_5 prod_index_4 syntax.PR_Unused) args_2_1 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1)) (False -> case (case (<{StdInt.==_16}> cons_arg_1_0 -2) (True -> case (StdBool.not (trans.isStrictArg_326 consumer_type_1 prod_index_4)) (True -> trans.isStrictVar_328 ro_0 arg_2_0) (False -> False) ) (False -> False) ) (True -> trans.determineUnusedProducersInNextArgs_762 ro_0 consumer_type_1 cons_args_1_1 args_2_1 (<{StdInt.+_6}> prod_index_4 1) (_SystemArray.update_5 producers_5 prod_index_4 syntax.PR_Unused) ro_6 ti_7) (False -> case (<{StdInt.==_16}> cons_arg_1_0 -1) (True -> trans.determineUnusedProducersInNextArgs_762 ro_0 consumer_type_1 cons_args_1_1 args_2_1 (<{StdInt.+_6}> prod_index_4 1) (_SystemArray.update_5 producers_5 prod_index_4 syntax.PR_Unused) ro_6 ti_7) (False -> _Tuple4 producers_5 arg_and_args_3 _predefined._Nil ti_7) ) ) ) ) (_ -> case arg_and_args_3 (_predefined._Nil -> _Tuple4 producers_5 _predefined._Nil _predefined._Nil ti_7) )
<{trans._c;3498;25_1079}> !_x_0::B ti_1 arg_2 consumer_type_3 prod_index_4::I = case _x_0 (True -> _Tuple2 _predefined._Nil ti_1) (_ -> let _x_1_0 = Heap.newPtr syntax.VI_Empty (select ti_1::trans._TransformInfo 5) in _Tuple2 (_predefined._Cons (_Tuple2 (syntax._LetBind (syntax._FreeVar -1 (syntax._Ident "dummy_for_strict_unused" Heap.nilPtr) (select _x_1_0::_Tuple2 0) 0) arg_2 syntax.NoPos) (trans.getArgType_327 consumer_type_3 prod_index_4)) _predefined._Nil) (update ti_1::trans._TransformInfo [5:select _x_1_0::_Tuple2 1]))
trans.determineProducersInNextArgs_323 !consumer_properties_0::I !consumer_is_curried_1::B !ok_non_rec_consumer_2::B !consumer_type_3 !linear_bits_4 !cons_args_5 arg_6 !args_7 !prod_index_8::I producers_9 !ro_10 !ti_11 = let !_x_1_0 = trans.determineProducers consumer_properties_0 consumer_is_curried_1 ok_non_rec_consumer_2 consumer_type_3 linear_bits_4 cons_args_5 args_7 (<{StdInt.+_6}> prod_index_8 StdInt.one_11) producers_9 ro_10 ti_11 in <{_Tuple4!15}> (select _x_1_0::_Tuple4 0) (_predefined._Cons arg_6 (select _x_1_0::_Tuple4 1)) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)
trans.determineProducers !_x_0::I !_x_1::B !_x_2::B !_x_3 !_x_4 !_x_5 !_x_6 !_x_7::I producers_8 !_x_9 !ti_10 = case _x_6 (_predefined._Nil -> <{_Tuple4!15}> producers_8 _predefined._Nil _predefined._Nil ti_10) (_predefined._Cons arg_1_0 args_1_1 -> case _x_4 (<{_predefined._#Cons!}> linear_bit_2_0 linear_bits_2_1 -> case _x_5 (_predefined._Cons cons_arg_3_0 cons_args_3_1 -> case (<{StdInt.==_16}> cons_arg_3_0 -4) (True -> let _x_5_0 = trans.determine_producer_330 _x_0 _x_1 _x_2 linear_bit_2_0 arg_1_0 _predefined._Nil _x_7 producers_8 _x_9 ti_10, producers_5_1 = select _x_5_0::_Tuple3 0 in case (trans.isProducer_325 (_SystemArray.select_3 producers_5_1 _x_7)) (True -> <{_Tuple4!15}> producers_5_1 (<{StdList.++}> (select _x_5_0::_Tuple3 1) args_1_1) _predefined._Nil (select _x_5_0::_Tuple3 2)) (False -> case (case (StdBool.not (select _x_9::trans._ReadOnlyTI 5)) (True -> True) (False -> <{StdInt.==_16}> (StdInt.bitand _x_0 32) 0) ) (True -> let !_x_8_0 = trans.determineProducers _x_0 _x_1 _x_2 _x_3 linear_bits_2_1 cons_args_3_1 args_1_1 (<{StdInt.+_6}> _x_7 StdInt.one_11) producers_5_1 _x_9 (select _x_5_0::_Tuple3 2) in <{_Tuple4!15}> (select _x_8_0::_Tuple4 0) (<{StdList.++}> (select _x_5_0::_Tuple3 1) (select _x_8_0::_Tuple4 1)) (select _x_8_0::_Tuple4 2) (select _x_8_0::_Tuple4 3)) (False -> let new_arg_8_0 = select _x_5_0::_Tuple3 1, ti_8_1 = select _x_5_0::_Tuple3 2 in <{trans._c;3387;15_1080}> arg_1_0 producers_5_1 _x_7 args_1_1 ti_8_1 _x_0 _x_1 _x_2 _x_3 linear_bits_2_1 cons_args_3_1 _x_9 new_arg_8_0) ) ) (False -> case (StdBool.not (select _x_9::trans._ReadOnlyTI 5)) (True -> let !_x_6_0 = trans.determineProducers _x_0 _x_1 _x_2 _x_3 linear_bits_2_1 cons_args_3_1 args_1_1 (<{StdInt.+_6}> _x_7 StdInt.one_11) producers_8 _x_9 ti_10 in <{_Tuple4!15}> (select _x_6_0::_Tuple4 0) (_predefined._Cons arg_1_0 (select _x_6_0::_Tuple4 1)) (select _x_6_0::_Tuple4 2) (select _x_6_0::_Tuple4 3)) (False -> case (case (<{StdInt.==_16}> cons_arg_3_0 -2) (True -> trans.isStrictArg_326 _x_3 _x_7) (False -> False) ) (True -> let _x_7_0 = <{trans._c;3403;21_1081}> (trans.isStrictVarOrSimpleExpression_329 _x_9 arg_1_0) ti_10 arg_1_0 _x_3 _x_7 in <{_Tuple4!15}> (_SystemArray.update_5 producers_8 _x_7 syntax.PR_Unused) args_1_1 (select _x_7_0::_Tuple2 0) (select _x_7_0::_Tuple2 1)) (False -> case (case (<{StdInt.==_16}> cons_arg_3_0 -2) (True -> case (StdBool.not (trans.isStrictArg_326 _x_3 _x_7)) (True -> trans.isStrictVar_328 _x_9 arg_1_0) (False -> False) ) (False -> False) ) (True -> trans.determineUnusedProducersInNextArgs_762 _x_9 _x_3 cons_args_3_1 args_1_1 (<{StdInt.+_6}> _x_7 1) (_SystemArray.update_5 producers_8 _x_7 syntax.PR_Unused) _x_9 ti_10) (False -> case (<{StdInt.==_16}> cons_arg_3_0 -1) (True -> trans.determineUnusedProducersInNextArgs_762 _x_9 _x_3 cons_args_3_1 args_1_1 (<{StdInt.+_6}> _x_7 1) (_SystemArray.update_5 producers_8 _x_7 syntax.PR_Unused) _x_9 ti_10) (False -> <{trans._c;3425;11_1083}> arg_1_0 _x_9 ti_10 _x_0 producers_8 _x_7 args_1_1 _x_1 _x_2 _x_3 linear_bits_2_1 cons_args_3_1 cons_arg_3_0) ) ) ) ) ) ) ) 
<{trans._c;3425;11_1083}> !arg_0 _x_1 ti_2 _x_3::I producers_4 _x_5::I args_6 _x_7::B _x_8::B _x_9 linear_bits_10 cons_args_11 cons_arg_12::I = case arg_0 (syntax.App _x_1_0 -> case _x_1_0 (syntax._App symb_2_0 _x_2_1 app_info_ptr_2_2 -> case symb_2_0 (syntax._SymbIdent symb_ident_3_0 symb_kind_3_1 -> case symb_kind_3_1 (syntax.SK_Function _x_4_0 -> case _x_4_0 (syntax._Global glob_object_5_0 glob_module_5_1 -> case _x_2_1 (_predefined._Nil -> case (<{StdInt.==_16}> glob_module_5_1 (select _x_1::trans._ReadOnlyTI 4)) (True -> let _x_8_0 = trans.select_651 (select ti_2::trans._TransformInfo 0) glob_object_5_0, _x_8_1 = select _x_8_0::_Tuple2 0 in case (<{StdInt.<_17}> 0 (select _x_8_1::syntax._FunDef 1)) (True -> case (case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select _x_8_1::syntax._FunDef 8)::syntax._FunInfo 6) 4) 0)) (True -> StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_3 32) 0)) (False -> False) ) (True -> <{_Tuple4!15}> (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_Curried symb_2_0 0)) args_6 _predefined._Nil (select _x_8_0::_Tuple2 1)) (False -> let arg_n_11_0::I = trans.find_same_SK_Function_arg_331 args_6 glob_module_5_1 glob_object_5_0 (<{StdInt.+_6}> _x_5 1) in case (case (StdBool.not (<{StdInt.<_17}> arg_n_11_0 0)) (True -> trans.is_monomorphic_symbol_type_335 (select _x_8_1::syntax._FunDef 4)) (False -> False) ) (True -> <{_Tuple4!15}> (_SystemArray.update_5 (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_Equal arg_n_11_0)) arg_n_11_0 (syntax.PR_EqualRemove _x_5)) (_predefined._Cons arg_0 (trans.remove_arg_n_334 (<{StdInt.-_7}> (<{StdInt.-_7}> arg_n_11_0 _x_5) 1) args_6)) _predefined._Nil (select _x_8_0::_Tuple2 1)) (False -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 (select _x_8_0::_Tuple2 1)) ) ) (False -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 (select _x_8_0::_Tuple2 1)) ) (False -> let _x_8_0 = select (trans.select_683 (_SystemArray.select_43 (select _x_1::trans._ReadOnlyTI 0) glob_module_5_1) glob_object_5_0)::syntax._FunType 3 in case (case (case (<{StdInt.<_17}> 0 (select _x_8_0::syntax._SymbolType 3)) (True -> True) (False -> StdBool.not (StdList.isEmpty (select _x_8_0::syntax._SymbolType 5))) ) (True -> StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_3 32) 0)) (False -> False) ) (True -> <{_Tuple4!15}> (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_Curried symb_2_0 0)) args_6 _predefined._Nil ti_2) (False -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 ti_2) ) ) ) ) (syntax.SK_LocalMacroFunction fun_index_4_0 -> case _x_2_1 (_predefined._Nil -> let _x_6_0 = trans.select_651 (select ti_2::trans._TransformInfo 0) fun_index_4_0, _x_6_1 = select _x_6_0::_Tuple2 0 in case (<{StdInt.<_17}> 0 (select _x_6_1::syntax._FunDef 1)) (True -> case (case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select _x_6_1::syntax._FunDef 8)::syntax._FunInfo 6) 4) 0)) (True -> StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_3 32) 0)) (False -> False) ) (True -> <{_Tuple4!15}> (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_Curried symb_2_0 0)) args_6 _predefined._Nil (select _x_6_0::_Tuple2 1)) (False -> let arg_n_9_0::I = trans.find_same_SK_LocalMacroFunction_arg_332 args_6 fun_index_4_0 (<{StdInt.+_6}> _x_5 1) in case (case (StdBool.not (<{StdInt.<_17}> arg_n_9_0 0)) (True -> trans.is_monomorphic_symbol_type_335 (select _x_6_1::syntax._FunDef 4)) (False -> False) ) (True -> <{_Tuple4!15}> (_SystemArray.update_5 (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_Equal arg_n_9_0)) arg_n_9_0 (syntax.PR_EqualRemove _x_5)) (_predefined._Cons arg_0 (trans.remove_arg_n_334 (<{StdInt.-_7}> (<{StdInt.-_7}> arg_n_9_0 _x_5) 1) args_6)) _predefined._Nil (select _x_6_0::_Tuple2 1)) (False -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 (select _x_6_0::_Tuple2 1)) ) ) (False -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 (select _x_6_0::_Tuple2 1)) ) ) (syntax.SK_GeneratedFunction fun_ptr_4_0 fun_index_4_1 -> case _x_2_1 (_predefined._Nil -> let _x_6_0 = Heap.readPtr fun_ptr_4_0 (select ti_2::trans._TransformInfo 4), _x_6_1 = select (select _x_6_0::_Tuple2 0)::_Tuple1 0, _x_6_2 = select _x_6_1::syntax._GeneratedFunction 0 in case (<{StdInt.<_17}> 0 (select _x_6_2::syntax._FunDef 1)) (True -> case (case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select _x_6_2::syntax._FunDef 8)::syntax._FunInfo 6) 4) 0)) (True -> StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_3 32) 0)) (False -> False) ) (True -> <{_Tuple4!15}> (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_Curried symb_2_0 0)) args_6 _predefined._Nil (update ti_2::trans._TransformInfo [4:select _x_6_0::_Tuple2 1])) (False -> let arg_n_9_0::I = trans.find_same_SK_GeneratedFunction_arg_333 args_6 fun_index_4_1 (<{StdInt.+_6}> _x_5 1) in case (case (StdBool.not (<{StdInt.<_17}> arg_n_9_0 0)) (True -> trans.is_monomorphic_symbol_type_335 (select _x_6_2::syntax._FunDef 4)) (False -> False) ) (True -> <{_Tuple4!15}> (_SystemArray.update_5 (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_Equal arg_n_9_0)) arg_n_9_0 (syntax.PR_EqualRemove _x_5)) (_predefined._Cons arg_0 (trans.remove_arg_n_334 (<{StdInt.-_7}> (<{StdInt.-_7}> arg_n_9_0 _x_5) 1) args_6)) _predefined._Nil (update ti_2::trans._TransformInfo [4:select _x_6_0::_Tuple2 1])) (False -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 (update ti_2::trans._TransformInfo [4:select _x_6_0::_Tuple2 1])) ) ) (False -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 (update ti_2::trans._TransformInfo [4:select _x_6_0::_Tuple2 1])) ) ) ) ) ) (syntax.Var _x_1_0 -> case _x_1_0 (syntax._BoundVar var_ident_2_0 var_info_ptr_2_1 var_expr_ptr_2_2 -> case (StdBool.not (trans._f1082_1082 (<{StdInt.==_16}> cons_arg_12 -2) cons_arg_12)) (True -> let arg_n_4_0::I = trans.find_same_Var_336 args_6 var_info_ptr_2_1 (<{StdInt.+_6}> _x_5 1) in case (StdBool.not (<{StdInt.<_17}> arg_n_4_0 0)) (True -> let _x_6_0 = trans.get2ArgTypes_337 _x_9 _x_5 arg_n_4_0 in case (trans.equal_non_unique_atype_338 (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1)) (True -> <{_Tuple4!15}> (_SystemArray.update_5 (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_Equal arg_n_4_0)) arg_n_4_0 (syntax.PR_EqualRemove _x_5)) (_predefined._Cons arg_0 (trans.remove_arg_n_334 (<{StdInt.-_7}> (<{StdInt.-_7}> arg_n_4_0 _x_5) 1) args_6)) _predefined._Nil ti_2) (False -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 ti_2) ) (False -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 ti_2) ) ) ) (syntax.BasicExpr _x_1_0 -> case _x_1_0 (syntax.BVS s_2_0 -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_3 32) 0)) (True -> <{_Tuple4!15}> (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_String s_2_0)) args_6 _predefined._Nil ti_2) ) (syntax.BVInt i_2_0 -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand _x_3 32) 0)) (True -> <{_Tuple4!15}> (_SystemArray.update_5 producers_4 _x_5 (syntax.PR_Int i_2_0)) args_6 _predefined._Nil ti_2) ) ) (_ -> trans.determineProducersInNextArgs_323 _x_3 _x_7 _x_8 _x_9 linear_bits_10 cons_args_11 arg_0 args_6 _x_5 producers_4 _x_1 ti_2)
trans._f1082_1082::B !_x_0::B cons_arg_1::I = case _x_0 (True -> True) (_ -> <{StdInt.==_16}> cons_arg_1 -1)
<{trans._c;3403;21_1081}> !_x_0::B ti_1 arg_2 _x_3 _x_4::I = case _x_0 (True -> _Tuple2 _predefined._Nil ti_1) (_ -> let _x_1_0 = Heap.newPtr syntax.VI_Empty (select ti_1::trans._TransformInfo 5) in _Tuple2 (_predefined._Cons (_Tuple2 (syntax._LetBind (syntax._FreeVar -1 (syntax._Ident "dummy_for_strict_unused" Heap.nilPtr) (select _x_1_0::_Tuple2 0) 0) arg_2 syntax.NoPos) (trans.getArgType_327 _x_3 _x_4)) _predefined._Nil) (update ti_1::trans._TransformInfo [5:select _x_1_0::_Tuple2 1]))
<{trans._c;3387;15_1080}> !arg_0 producers_1 !_x_2::I !args_3 !ti_4 _x_5::I _x_6::B _x_7::B _x_8 linear_bits_9 cons_args_10 _x_11 new_arg_12 = case arg_0 (syntax.BasicExpr _x_1_0 -> case _x_1_0 (syntax.BVS s_2_0 -> <{_Tuple4!15}> (_SystemArray.update_5 producers_1 _x_2 (syntax.PR_String s_2_0)) args_3 _predefined._Nil ti_4) (syntax.BVInt i_2_0 -> <{_Tuple4!15}> (_SystemArray.update_5 producers_1 _x_2 (syntax.PR_Int i_2_0)) args_3 _predefined._Nil ti_4) ) (_ -> let !_x_1_0 = trans.determineProducers _x_5 _x_6 _x_7 _x_8 linear_bits_9 cons_args_10 args_3 (<{StdInt.+_6}> _x_2 StdInt.one_11) producers_1 _x_11 ti_4 in <{_Tuple4!15}> (select _x_1_0::_Tuple4 0) (<{StdList.++}> new_arg_12 (select _x_1_0::_Tuple4 1)) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3))
<{trans.++||_612}> !_vList_0 !_vList_1 !_x_2 list_3 = case _x_2 (<{_predefined._|Cons}> hd_1_0 tl_1_1 -> select _vList_0::<{_SystemStrictLists.List;}> 0 hd_1_0 (<{trans.++||_612}> _vList_0 _vList_1 tl_1_1 list_3)) (_ -> list_3)
<{trans.cu;18;39_611}> !_vArray_0 s1_1::I a_2 !i_3::I !g_s_4::I g_l_5 = <{trans.g_c1;18;27_1085}> (StdBool.not (<{StdInt.<_17}> g_s_4 i_3)) g_l_5 _vArray_0 s1_1 a_2 i_3 g_s_4
<{trans.g_c1;18;27_1085}> !_x_0::B g_l_1 _vArray_2 s1_3::I a_4 i_5::I g_s_6::I = case _x_0 (True -> <{trans.g_c1;18;42_1084}> g_l_1 _vArray_2 s1_3 a_4 i_5 g_s_6) (_ -> a_4)
<{trans.g_c1;18;42_1084}> !g_l_0 _vArray_1 s1_2::I a_3 i_4::I g_s_5::I = case g_l_0 (_predefined._Cons e_1_0 g_t_1_1 -> <{trans.cu;18;39_611}> _vArray_1 s1_2 (select _vArray_1::<{_SystemArray.Array;}> 5 a_3 (<{StdInt.+_6}> i_4 s1_2) e_1_0) (<{StdInt.+_6}> i_4 StdInt.one_11) g_s_5 g_t_1_1) (_ -> a_3)
<{trans.cu;19;24_610}> !_vArray_0 !_vArray_1 a_2 a_3 !i_4::I !g_s_5::I = case (StdBool.not (<{StdInt.<_17}> g_s_5 i_4)) (True -> <{trans.cu;19;24_610}> _vArray_0 _vArray_1 a_2 (select _vArray_1::<{_SystemArray.Array;}> 5 a_3 i_4 (select _vArray_0::<{_SystemArray.Array;}> 3 a_2 i_4)) (<{StdInt.+_6}> i_4 StdInt.one_11) g_s_5) (False -> a_3) 
trans.get_new_args_types_from_result_type_289 type_0 !_x_1::I = case _x_1 (0 -> _Tuple3 True _predefined._Nil type_0) (_ -> case type_0 (syntax._AType at_attribute_1_0 _x_1_1 -> case _x_1_1 (<{syntax.-->}> a_2_0 b_2_1 -> let _x_3_0 = trans.get_new_args_types_from_result_type_289 b_2_1 (<{StdInt.-_7}> _x_1 1) in _Tuple3 (select _x_3_0::_Tuple3 0) (_predefined._Cons a_2_0 (select _x_3_0::_Tuple3 1)) (select _x_3_0::_Tuple3 2)) ) (_ -> _Tuple3 False _predefined._Nil type_0))
trans.create_new_args_290 !n_new_args_0::I var_heap_1 = case (<{StdInt.==_16}> n_new_args_0 0) (True -> _Tuple2 _predefined._Nil var_heap_1) (False -> let _x_2_0 = Heap.newPtr syntax.VI_Empty var_heap_1, _x_2_1 = trans.create_new_args_290 (<{StdInt.-_7}> n_new_args_0 1) (select _x_2_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (syntax._FreeVar -1 (syntax._Ident "_a" Heap.nilPtr) (select _x_2_0::_Tuple2 0) 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
trans.add_args_to_fun_args form_args_0 !tb_args_1 = <{StdList.++}> tb_args_1 form_args_0
<{trans.c;2902;77_286}> !<{_v<_0}> !_vone_1 !<{_v+_2}> i_3 g_s_4 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_4 i_3)) (True -> _predefined._Cons syntax.PR_Empty (<{trans.c;2902;77_286}> <{_v<_0}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_4)) (False -> _predefined._Nil) 
<{trans.c;2903;64_287}> !<{_v<_0}> !_vone_1 !<{_v+_2}> i_3 g_s_4 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_4 i_3)) (True -> _predefined._Cons -3 (<{trans.c;2903;64_287}> <{_v<_0}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_4)) (False -> _predefined._Nil) 
<{trans.c;2904;69_288}> !<{_v<_0}> !_vone_1 !<{_v+_2}> i_3 g_s_4 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_4 i_3)) (True -> _SystemStrictLists._cons_uts_41 True (<{trans.c;2904;69_288}> <{_v<_0}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_4)) (False -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) 
<{trans.c;2902;77_763}> !_vone_0 !<{_v+_1}> !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> _predefined._Cons syntax.PR_Empty (<{trans.c;2902;77_763}> _vone_0 <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_2 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_3)) (False -> _predefined._Nil) 
<{trans.cu;18;39_765}> s1_0::I !a_1 !i_2::I !g_s_3::I g_l_4 = <{trans.g_c1;18;27_1087}> (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) g_l_4 s1_0 a_1 i_2 g_s_3
<{trans.g_c1;18;27_1087}> !_x_0::B g_l_1 s1_2::I !a_3 i_4::I g_s_5::I = case _x_0 (True -> <{trans.g_c1;18;42_1086}> g_l_1 s1_2 a_3 i_4 g_s_5) (_ -> a_3)
<{trans.g_c1;18;42_1086}> !g_l_0 s1_1::I !a_2 i_3::I g_s_4::I = case g_l_0 (_predefined._Cons e_1_0 g_t_1_1 -> <{trans.cu;18;39_765}> s1_1 (_SystemArray.update_5 a_2 (<{StdInt.+_6}> i_3 s1_1) e_1_0) (<{StdInt.+_6}> i_3 StdInt.one_11) g_s_4 g_t_1_1) (_ -> a_2)
<{trans.cu;19;24_764}> !_vArray_0 a_1 a_2 !i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 i_3)) (True -> <{trans.cu;19;24_764}> _vArray_0 a_1 (select _vArray_0::<{_SystemArray.Array;}> 5 a_2 i_3 (_SystemArray.select_3 a_1 i_3)) (<{StdInt.+_6}> i_3 StdInt.one_11) g_s_4) (False -> a_2) 
<{trans.c;2903;64_766}> !_vone_0 !<{_v+_1}> !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> _predefined._Cons -3 (<{trans.c;2903;64_766}> _vone_0 <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_2 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_3)) (False -> _predefined._Nil) 
<{trans.c;2904;69_768}> !_vone_0 !<{_v+_1}> !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> _SystemStrictLists._cons_uts_41 True (<{trans.c;2904;69_768}> _vone_0 <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_2 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_3)) (False -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) 
<{trans.++||_767}> !_vList_0 !_x_1 !list_2 = case _x_1 (<{_predefined._|Cons}> hd_1_0 tl_1_1 -> _SystemStrictLists._cons_uts_41 hd_1_0 (<{trans.++||_767}> _vList_0 tl_1_1 list_2)) (_ -> list_2)
<{trans.c;2902;77_769}> !<{_v+_0}> !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> _predefined._Cons syntax.PR_Empty (<{trans.c;2902;77_769}> <{_v+_0}> (select <{_v+_0}>::<{StdOverloaded.+;}> 0 i_1 StdInt.one_11) g_s_2)) (False -> _predefined._Nil) 
<{trans.cu;19;24_770}> a_0 !a_1 !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> <{trans.cu;19;24_770}> a_0 (_SystemArray.update_5 a_1 i_2 (_SystemArray.select_3 a_0 i_2)) (<{StdInt.+_6}> i_2 StdInt.one_11) g_s_3) (False -> a_1) 
<{trans.c;2903;64_771}> !<{_v+_0}> !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> _predefined._Cons -3 (<{trans.c;2903;64_771}> <{_v+_0}> (select <{_v+_0}>::<{StdOverloaded.+;}> 0 i_1 StdInt.one_11) g_s_2)) (False -> _predefined._Nil) 
<{trans.c;2904;69_772}> !<{_v+_0}> !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> _SystemStrictLists._cons_uts_41 True (<{trans.c;2904;69_772}> <{_v+_0}> (select <{_v+_0}>::<{StdOverloaded.+;}> 0 i_1 StdInt.one_11) g_s_2)) (False -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) 
<{trans.++||_773}> !_x_0 !list_1 = case _x_0 (<{_predefined._|Cons}> hd_1_0 tl_1_1 -> _SystemStrictLists._cons_uts_41 hd_1_0 (<{trans.++||_773}> tl_1_1 list_1)) (_ -> list_1)
<{trans.c;2902;77_774}> !i_0::I !g_s_1::I = case (StdBool.not (<{StdInt.<_17}> g_s_1 i_0)) (True -> _predefined._Cons syntax.PR_Empty (<{trans.c;2902;77_774}> (<{StdInt.+_6}> i_0 StdInt.one_11) g_s_1)) (False -> _predefined._Nil) 
<{trans.c;2903;64_775}> !i_0::I !g_s_1::I = case (StdBool.not (<{StdInt.<_17}> g_s_1 i_0)) (True -> _predefined._Cons -3 (<{trans.c;2903;64_775}> (<{StdInt.+_6}> i_0 StdInt.one_11) g_s_1)) (False -> _predefined._Nil) 
<{trans.c;2904;69_776}> !i_0::I !g_s_1::I = case (StdBool.not (<{StdInt.<_17}> g_s_1 i_0)) (True -> _SystemStrictLists._cons_uts_41 True (<{trans.c;2904;69_776}> (<{StdInt.+_6}> i_0 StdInt.one_11) g_s_1)) (False -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) 
trans.determineCurriedProducersInExtraArgs !new_args_0 !_x_1 !consumer_properties_2::I !producers_3 !cc_args_4 !cc_linear_bits_5 !fun_def_6 !ro_7 !ti_8 = case _x_1 (_predefined._Nil -> <{_Tuple9!511}> False new_args_0 _predefined._Nil producers_3 cc_args_4 cc_linear_bits_5 fun_def_6 0 ti_8) (_ -> case (StdBool.not (select ro_7::trans._ReadOnlyTI 5)) (True -> <{_Tuple9!511}> False new_args_0 _x_1 producers_3 cc_args_4 cc_linear_bits_5 fun_def_6 0 ti_8) (False -> let symbol_type_2_0 = select (select fun_def_6::syntax._FunDef 4)::_Tuple1 0, st_result_2_1::I = select symbol_type_2_0::syntax._SymbolType 4, n_extra_args_2_2 = StdList.length_47 _x_1, _x_2_3 = trans.get_new_args_types_from_result_type_289 st_result_2_1 n_extra_args_2_2 in case (StdBool.not (select _x_2_3::_Tuple3 0)) (True -> <{_Tuple9!511}> False new_args_0 _x_1 producers_3 cc_args_4 cc_linear_bits_5 fun_def_6 0 ti_8) (False -> let s1_4_0 = _SystemArray.size_4 producers_3, l_4_1 = <{trans.c;2902;77_774}> 0 (<{StdInt.-_7}> n_extra_args_2_2 1), s2_4_2 = StdList.length_47 l_4_1, st_args_4_3 = select symbol_type_2_0::syntax._SymbolType 1, new_args_types_4_4 = select _x_2_3::_Tuple3 1, st_arity_4_5::I = select symbol_type_2_0::syntax._SymbolType 3, new_result_type_4_6 = select _x_2_3::_Tuple3 2, symbol_type_4_7 = update symbol_type_2_0::syntax._SymbolType [1:<{StdList.++}> st_args_4_3 new_args_types_4_4,3:<{StdInt.+_6}> st_arity_4_5 n_extra_args_2_2,4:new_result_type_4_6], fun_def_4_8::I = update fun_def_6::syntax._FunDef [4:general.Yes symbol_type_4_7], _x_4_9 = trans.create_new_args_290 n_extra_args_2_2 (select ti_8::trans._TransformInfo 5), form_args_4_10::I = select _x_4_9::_Tuple2 0 in <{_Tuple9!511}> True (<{StdList.++}> new_args_0 _x_1) _predefined._Nil (<{trans.cu;18;39_765}> s1_4_0 (<{trans.cu;19;24_770}> producers_3 (_SystemArray._createArray_0 (<{StdInt.+_6}> s1_4_0 s2_4_2)) 0 (<{StdInt.-_7}> s1_4_0 1)) 0 (<{StdInt.-_7}> s2_4_2 1) l_4_1) (<{StdList.++}> cc_args_4 (<{trans.c;2903;64_775}> 0 (<{StdInt.-_7}> n_extra_args_2_2 1))) (<{trans.++||_773}> cc_linear_bits_5 (<{trans.c;2904;69_776}> 0 (<{StdInt.-_7}> n_extra_args_2_2 1))) (<{trans._c;2897;43_1088}> (select fun_def_4_8::syntax._FunDef 3) fun_def_4_8 form_args_4_10) n_extra_args_2_2 (update ti_8::trans._TransformInfo [5:select _x_4_9::_Tuple2 1])) ) )
<{trans._c;2897;43_1088}> !_x_0 !fun_def_1 form_args_2 = case _x_0 (syntax.TransformedBody tb_1_0 -> update fun_def_1::syntax._FunDef [3:syntax.TransformedBody (update tb_1_0::syntax._TransformedBody [0:trans.add_args_to_fun_args form_args_2 (select tb_1_0::syntax._TransformedBody 0)])]) 
trans.is_a_producer_348::B !_x_0 = case _x_0 (syntax.PR_Empty -> False) (_ -> True)
trans.containsProducer::B !_vArray_0 !prod_index_1::I producers_2 = case (<{StdInt.==_16}> prod_index_1 0) (True -> False) (False -> let !prod_index_2_0::I = <{StdInt.-_7}> prod_index_1 StdInt.one_11 in case (trans.is_a_producer_348 (select _vArray_0::<{_SystemArray.Array;}> 3 producers_2 prod_index_2_0)) (True -> True) (False -> trans.containsProducer _vArray_0 prod_index_2_0 producers_2) ) 
trans.compare_producers_192::I !_vArray_0 !_vArray_1 !<{_v=<_2}> !prod_index_3::I !nr_of_prods_4::I prods1_5 prods2_6 = case (<{StdInt.==_16}> prod_index_3 nr_of_prods_4) (True -> 0) (False -> let cmp_2_0::I = select <{_v=<_2}>::<{compare_types.=<;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 prods1_5 prod_index_3) (select _vArray_1::<{_SystemArray.Array;}> 3 prods2_6 prod_index_3) in case (<{StdInt.==_16}> cmp_2_0 0) (True -> trans.compare_producers_192 _vArray_0 _vArray_1 <{_v=<_2}> (<{StdInt.+_6}> prod_index_3 StdInt.one_11) nr_of_prods_4 prods1_5 prods2_6) (False -> cmp_2_0) ) 
trans.compareProducers::I !_vArray_0 !_vArray_1 !<{_v=<_2}> prods1_3 prods2_4 = let !nr_of_prods_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 prods1_3 in trans.compare_producers_192 _vArray_0 _vArray_1 <{_v=<_2}> 0 nr_of_prods_1_0 prods1_3 prods2_4
trans.compare_types_426::I !_x_0 !_x_1 = case _x_0 (_predefined._Cons _x_1_0 types1_1_1 -> case _x_1_0 (_Tuple2 _x_2_0 type1_2_1 -> case _x_1 (_predefined._Cons _x_3_0 types2_3_1 -> case _x_3_0 (_Tuple2 _x_4_0 type2_4_1 -> let cmp_5_0::I = compare_types.smallerOrEqual type1_2_1 type2_4_1 in case (StdBool.not (<{StdInt.==_16}> cmp_5_0 0)) (True -> cmp_5_0) (False -> trans.compare_types_426 types1_1_1 types2_3_1) ) ) ) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> 0) (_ -> -1)) (_ -> case _x_1 (_predefined._Nil -> 1) )
trans.compare_constructor_arguments_425::I !_x_0 !_x_1 = case _x_0 (syntax.PR_Function _x_1_0 _x_1_1 index1_1_2 -> case _x_1 (syntax.PR_Function _x_2_0 _x_2_1 index2_2_2 -> <{compare_types.=<_3}> index1_1_2 index2_2_2) ) (syntax.PR_GeneratedFunction _x_1_0 _x_1_1 index1_1_2 -> case _x_1 (syntax.PR_GeneratedFunction _x_2_0 _x_2_1 index2_2_2 -> <{compare_types.=<_3}> index1_1_2 index2_2_2) ) (syntax.PR_Class app1_1_0 lifted_vars_with_types1_1_1 t1_1_2 -> case _x_1 (syntax.PR_Class app2_2_0 lifted_vars_with_types2_2_1 t2_2_2 -> let cmp_3_0::I = compare_types.smallerOrEqual t1_1_2 t2_2_2 in case (StdBool.not (<{StdInt.==_16}> cmp_3_0 0)) (True -> cmp_3_0) (False -> trans.compare_types_426 lifted_vars_with_types1_1_1 lifted_vars_with_types2_2_1) ) ) (syntax.PR_Curried symb_ident1_1_0 _x_1_1 -> case _x_1 (syntax.PR_Curried symb_ident2_2_0 _x_2_1 -> <{compare_types.=<_10}> symb_ident1_1_0 symb_ident2_2_0) ) (syntax.PR_Empty -> case _x_1 (syntax.PR_Empty -> 0) ) (syntax.PR_Unused -> case _x_1 (syntax.PR_Unused -> 0) ) (syntax.PR_Constructor symb_ident1_1_0 _x_1_1 _x_1_2 -> case _x_1 (syntax.PR_Constructor symb_ident2_2_0 _x_2_1 _x_2_2 -> <{compare_types.=<_10}> symb_ident1_1_0 symb_ident2_2_0) ) (syntax.PR_CurriedFunction symb_ident1_1_0 _x_1_1 _x_1_2 -> case _x_1 (syntax.PR_CurriedFunction symb_ident2_2_0 _x_2_1 _x_2_2 -> <{compare_types.=<_10}> symb_ident1_1_0 symb_ident2_2_0) ) (syntax.PR_String s1_1_0 -> case _x_1 (syntax.PR_String s2_2_0 -> case (<{StdString.==_2}> s1_1_0 s2_2_0) (True -> 0) (False -> case (<{StdString.<_3}> s1_1_0 s2_2_0) (True -> -1) (False -> 1) ) ) ) (syntax.PR_Int i1_1_0 -> case _x_1 (syntax.PR_Int i2_2_0 -> case (<{StdInt.==_16}> i1_1_0 i2_2_0) (True -> 0) (False -> case (<{StdInt.<_17}> i1_1_0 i2_2_0) (True -> -1) (False -> 1) ) ) ) (syntax.PR_Equal i1_1_0 -> case _x_1 (syntax.PR_Equal i2_2_0 -> case (<{StdInt.==_16}> i1_1_0 i2_2_0) (True -> 0) (False -> case (<{StdInt.<_17}> i1_1_0 i2_2_0) (True -> -1) (False -> 1) ) ) ) (syntax.PR_EqualRemove i1_1_0 -> case _x_1 (syntax.PR_EqualRemove i2_2_0 -> case (<{StdInt.==_16}> i1_1_0 i2_2_0) (True -> 0) (False -> case (<{StdInt.<_17}> i1_1_0 i2_2_0) (True -> -1) (False -> 1) ) ) ) 
<{trans.=<_478}>::I !pr1_0 !pr2_1 = case (compare_constructor.equal_constructor pr1_0 pr2_1) (True -> trans.compare_constructor_arguments_425 pr1_0 pr2_1) (False -> case (compare_constructor.less_constructor pr1_0 pr2_1) (True -> -1) (False -> 1) ) 
trans.compare_producers_778::I !_vArray_0 !<{_v=<_1}> !prod_index_2::I !nr_of_prods_3::I prods1_4 prods2_5 = case (<{StdInt.==_16}> prod_index_2 nr_of_prods_3) (True -> 0) (False -> let cmp_2_0::I = select <{_v=<_1}>::<{compare_types.=<;}> 0 (_SystemArray.select_3 prods1_4 prod_index_2) (select _vArray_0::<{_SystemArray.Array;}> 3 prods2_5 prod_index_2) in case (<{StdInt.==_16}> cmp_2_0 0) (True -> trans.compare_producers_778 _vArray_0 <{_v=<_1}> (<{StdInt.+_6}> prod_index_2 StdInt.one_11) nr_of_prods_3 prods1_4 prods2_5) (False -> cmp_2_0) ) 
trans.compareProducers_777::I !_vArray_0 !<{_v=<_1}> !prods1_2 prods2_3 = let !nr_of_prods_1_0::I = _SystemArray.size_4 prods1_2 in trans.compare_producers_778 _vArray_0 <{_v=<_1}> 0 nr_of_prods_1_0 prods1_2 prods2_3
trans.compare_producers_780::I !<{_v=<_0}> !prod_index_1::I !nr_of_prods_2::I prods1_3 prods2_4 = case (<{StdInt.==_16}> prod_index_1 nr_of_prods_2) (True -> 0) (False -> let cmp_2_0::I = select <{_v=<_0}>::<{compare_types.=<;}> 0 (_SystemArray.select_3 prods1_3 prod_index_1) (_SystemArray.select_3 prods2_4 prod_index_1) in case (<{StdInt.==_16}> cmp_2_0 0) (True -> trans.compare_producers_780 <{_v=<_0}> (<{StdInt.+_6}> prod_index_1 StdInt.one_11) nr_of_prods_2 prods1_3 prods2_4) (False -> cmp_2_0) ) 
trans.compareProducers_779::I !<{_v=<_0}> !prods1_1 prods2_2 = let !nr_of_prods_1_0::I = _SystemArray.size_4 prods1_1 in trans.compare_producers_780 <{_v=<_0}> 0 nr_of_prods_1_0 prods1_1 prods2_2
trans.compare_producers_782::I !prod_index_0::I !nr_of_prods_1::I prods1_2 prods2_3 = case (<{StdInt.==_16}> prod_index_0 nr_of_prods_1) (True -> 0) (False -> let cmp_2_0::I = <{trans.=<_478}> (_SystemArray.select_3 prods1_2 prod_index_0) (_SystemArray.select_3 prods2_3 prod_index_0) in case (<{StdInt.==_16}> cmp_2_0 0) (True -> trans.compare_producers_782 (<{StdInt.+_6}> prod_index_0 StdInt.one_11) nr_of_prods_1 prods1_2 prods2_3) (False -> cmp_2_0) ) 
trans.compareProducers_781::I !prods1_0 prods2_1 = let !nr_of_prods_1_0::I = _SystemArray.size_4 prods1_0 in trans.compare_producers_782 0 nr_of_prods_1_0 prods1_0 prods2_1
trans.tryToFindInstance !new_prods_0 !_x_1 !fun_heap_2 = case _x_1 (syntax.II_Empty -> let _x_2_0 = Heap.newPtr syntax.FI_Empty fun_heap_2, fun_def_ptr_2_1 = select _x_2_0::_Tuple2 0 in <{_Tuple4!15}> True fun_def_ptr_2_1 (syntax.II_Node new_prods_0 fun_def_ptr_2_1 syntax.II_Empty syntax.II_Empty) (select _x_2_0::_Tuple2 1)) (syntax.II_Node prods_1_0 fun_def_ptr_1_1 left_1_2 right_1_3 -> case (<{StdInt.<_17}> (_SystemArray.size_4 prods_1_0) (_SystemArray.size_4 new_prods_0)) (True -> let _x_3_0 = trans.tryToFindInstance new_prods_0 right_1_3 fun_heap_2 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (select _x_3_0::_Tuple4 1) (syntax.II_Node prods_1_0 fun_def_ptr_1_1 left_1_2 (select _x_3_0::_Tuple4 2)) (select _x_3_0::_Tuple4 3)) (False -> case (<{StdInt.<_17}> (_SystemArray.size_4 new_prods_0) (_SystemArray.size_4 prods_1_0)) (True -> let _x_4_0 = trans.tryToFindInstance new_prods_0 left_1_2 fun_heap_2 in <{_Tuple4!15}> (select _x_4_0::_Tuple4 0) (select _x_4_0::_Tuple4 1) (syntax.II_Node prods_1_0 fun_def_ptr_1_1 (select _x_4_0::_Tuple4 2) right_1_3) (select _x_4_0::_Tuple4 3)) (False -> let cmp_4_0::I = trans.compareProducers_781 new_prods_0 prods_1_0 in case (<{StdInt.==_16}> cmp_4_0 0) (True -> <{_Tuple4!15}> False fun_def_ptr_1_1 _x_1 fun_heap_2) (False -> case (<{StdInt.==_16}> cmp_4_0 1) (True -> let _x_7_0 = trans.tryToFindInstance new_prods_0 right_1_3 fun_heap_2 in <{_Tuple4!15}> (select _x_7_0::_Tuple4 0) (select _x_7_0::_Tuple4 1) (syntax.II_Node prods_1_0 fun_def_ptr_1_1 left_1_2 (select _x_7_0::_Tuple4 2)) (select _x_7_0::_Tuple4 3)) (False -> let _x_7_0 = trans.tryToFindInstance new_prods_0 left_1_2 fun_heap_2 in <{_Tuple4!15}> (select _x_7_0::_Tuple4 0) (select _x_7_0::_Tuple4 1) (syntax.II_Node prods_1_0 fun_def_ptr_1_1 (select _x_7_0::_Tuple4 2) right_1_3) (select _x_7_0::_Tuple4 3)) ) ) ) ) 
trans.update_instance_info_282 !_x_0 !instances_1 !ti_2 = case _x_0 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case ti_2 (trans._TransformInfo ti_fun_defs_3_0 ti_instances_3_1 ti_cons_args_3_2 ti_new_functions_3_3 ti_fun_heap_3_4 ti_var_heap_3_5 ti_symbol_heap_3_6 ti_type_heaps_3_7 ti_type_def_infos_3_8 ti_next_fun_nr_3_9 ti_cleanup_info_3_10 ti_recursion_introduced_3_11 ti_error_file_3_12 ti_predef_symbols_3_13 -> update ti_2::trans._TransformInfo [1:_SystemArray.update_5 ti_instances_3_1 glob_object_2_0 instances_1]) ) ) (syntax.SK_LocalMacroFunction glob_object_1_0 -> case ti_2 (trans._TransformInfo ti_fun_defs_2_0 ti_instances_2_1 ti_cons_args_2_2 ti_new_functions_2_3 ti_fun_heap_2_4 ti_var_heap_2_5 ti_symbol_heap_2_6 ti_type_heaps_2_7 ti_type_def_infos_2_8 ti_next_fun_nr_2_9 ti_cleanup_info_2_10 ti_recursion_introduced_2_11 ti_error_file_2_12 ti_predef_symbols_2_13 -> update ti_2::trans._TransformInfo [1:_SystemArray.update_5 ti_instances_2_1 glob_object_1_0 instances_1]) ) (syntax.SK_GeneratedFunction fun_def_ptr_1_0 fun_index_1_1 -> case ti_2 (trans._TransformInfo ti_fun_defs_2_0 ti_instances_2_1 ti_cons_args_2_2 ti_new_functions_2_3 ti_fun_heap_2_4 ti_var_heap_2_5 ti_symbol_heap_2_6 ti_type_heaps_2_7 ti_type_def_infos_2_8 ti_next_fun_nr_2_9 ti_cleanup_info_2_10 ti_recursion_introduced_2_11 ti_error_file_2_12 ti_predef_symbols_2_13 -> case (<{StdInt.<_17}> fun_index_1_1 (_SystemArray.size_4 ti_instances_2_1)) (True -> update ti_2::trans._TransformInfo [1:_SystemArray.update_5 ti_instances_2_1 fun_index_1_1 instances_1]) (False -> let _x_4_0 = Heap.readPtr fun_def_ptr_1_0 ti_fun_heap_2_4, ptr_and_val_4_1 = _Tuple2 fun_def_ptr_1_0 (syntax.FI_Function (update (select (select _x_4_0::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction [1:instances_1])) in update ti_2::trans._TransformInfo [4:Heap.writePtr (select ptr_and_val_4_1::_Tuple2 0) (select ptr_and_val_4_1::_Tuple2 1) (select _x_4_0::_Tuple2 1)]) ) ) 
trans.fold_st2_609 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (trans.fold_st2_609 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.fold_st_608 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_608 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_607 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_607 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.i_fold_st_606 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> trans.i_fold_st_606 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
trans.map_st_605 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_605 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st_604 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_604 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_603 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_603 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_602 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_602 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.map_st_601 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_601 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st_600 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_600 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_599 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_599 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_598 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_598 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.map_st_597 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_597 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_596 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_596 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_595 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_595 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.i_fold_st_594 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> trans.i_fold_st_594 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
trans.fold_st_593 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_593 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_588 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_588 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_589 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_589 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_591 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_591 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_783 f_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_783 f_0 x_1_1 (trans.foldr_expr_st_587 f_0 a_1_0 st_2)) 
trans.anon_592 !f_0 !_x_1 st_2 = case _x_1 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.foldr_expr_st_587 f_0 lb_src_1_1 st_2) 
trans.fold_st_785 f_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_785 f_0 x_1_1 (trans.anon_592 f_0 a_1_0 st_2)) 
trans.anon_590 !f_0 !_x_1 st_2 = case _x_1 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.foldr_expr_st_587 f_0 lb_src_1_1 st_2) 
trans.fold_st_784 f_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_784 f_0 x_1_1 (trans.anon_590 f_0 a_1_0 st_2)) 
trans.foldr_expr_st_587 !f_0 !expr_1 st_2 = case expr_1 (syntax.Var _x_1_0 -> f_0 expr_1 st_2) (syntax.App _x_1_0 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> f_0 expr_1 (trans.fold_st_783 f_0 app_args_2_1 st_2)) ) (syntax.Let _x_1_0 -> case _x_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> f_0 expr_1 (f_0 let_expr_2_2 (trans.fold_st_785 f_0 let_strict_binds_2_0 (trans.fold_st_784 f_0 let_lazy_binds_2_1 st_2)))) ) (syntax.Selection a_1_0 expr_1_1 b_1_2 -> f_0 expr_1 (trans.foldr_expr_st_587 f_0 expr_1_1 st_2)) (syntax.BasicExpr _x_1_0 -> f_0 expr_1 st_2) 
trans.foldrExprSt_586 !f_0 !expr_1 st_2 = trans.foldr_expr_st_587 f_0 expr_1 st_2
trans.max_group_index_of_member_265 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !_x_3 !_x_4 = case _x_3 (syntax.App _x_1_0 -> case _x_1_0 (syntax._App _x_2_0 app_args_2_1 app_info_ptr_2_2 -> case _x_2_0 (syntax._SymbIdent symb_ident_3_0 _x_3_1 -> case _x_3_1 (syntax.SK_Function _x_4_0 -> case _x_4_0 (syntax._Global fun_index_5_0 mod_index_5_1 -> case _x_4 (_Tuple4 current_max_6_0 cons_args_6_1 fun_defs_6_2 fun_heap_6_3 -> case (<{StdInt.==_16}> mod_index_5_1 ro_main_dcl_module_n_2) (True -> let _x_8_0 = select _vArray_0::<{_SystemArray.Array;}> 7 cons_args_6_1 in case (<{StdInt.<_17}> fun_index_5_0 (select _x_8_0::_Tuple2 0)) (True -> let _x_10_0::I = select _vArray_1::<{_SystemArray.Array;}> 6 fun_defs_6_2 fun_index_5_0, _x_10_1 = select _x_10_0::_Tuple2 0, _x_10_2 = select _x_10_1::syntax._FunDef 8, fi_group_index_10_3 = select _x_10_2::syntax._FunInfo 1 in _Tuple4 (<{trans._c;51;16_1089}> (<{StdInt.<_17}> fi_group_index_10_3 current_max_6_0) current_max_6_0 fi_group_index_10_3) (select _x_8_0::_Tuple2 1) (select _x_10_0::_Tuple2 1) fun_heap_6_3) (False -> _Tuple4 current_max_6_0 (select _x_8_0::_Tuple2 1) fun_defs_6_2 fun_heap_6_3) ) (False -> _Tuple4 current_max_6_0 cons_args_6_1 fun_defs_6_2 fun_heap_6_3) ) ) ) (syntax.SK_LocalMacroFunction fun_index_4_0 -> case _x_4 (_Tuple4 current_max_5_0 cons_args_5_1 fun_defs_5_2 fun_heap_5_3 -> let _x_6_0 = select _vArray_0::<{_SystemArray.Array;}> 7 cons_args_5_1 in case (<{StdInt.<_17}> fun_index_4_0 (select _x_6_0::_Tuple2 0)) (True -> let _x_8_0::I = select _vArray_1::<{_SystemArray.Array;}> 6 fun_defs_5_2 fun_index_4_0, _x_8_1 = select _x_8_0::_Tuple2 0, _x_8_2 = select _x_8_1::syntax._FunDef 8, fi_group_index_8_3 = select _x_8_2::syntax._FunInfo 1 in _Tuple4 (<{trans._c;51;16_1090}> (<{StdInt.<_17}> fi_group_index_8_3 current_max_5_0) current_max_5_0 fi_group_index_8_3) (select _x_6_0::_Tuple2 1) (select _x_8_0::_Tuple2 1) fun_heap_5_3) (False -> _Tuple4 current_max_5_0 (select _x_6_0::_Tuple2 1) fun_defs_5_2 fun_heap_5_3) ) ) (syntax.SK_GeneratedFunction fun_ptr_4_0 _x_4_1 -> case _x_4 (_Tuple4 current_max_5_0 cons_args_5_1 fun_defs_5_2 fun_heap_5_3 -> let _x_6_0::I = Heap.readPtr fun_ptr_4_0 fun_heap_5_3, _x_6_1 = select (select _x_6_0::_Tuple2 0)::_Tuple1 0, _x_6_2 = select _x_6_1::syntax._GeneratedFunction 0, _x_6_3 = select _x_6_2::syntax._FunDef 8, fi_group_index_6_4 = select _x_6_3::syntax._FunInfo 1 in _Tuple4 (<{trans._c;51;16_1091}> (<{StdInt.<_17}> fi_group_index_6_4 current_max_5_0) current_max_5_0 fi_group_index_6_4) cons_args_5_1 fun_defs_5_2 (select _x_6_0::_Tuple2 1)) ) ) ) ) (_ -> case _x_4 (_Tuple4 current_max_1_0 cons_args_1_1 fun_defs_1_2 fun_heap_1_3 -> _Tuple4 current_max_1_0 cons_args_1_1 fun_defs_1_2 fun_heap_1_3) )
<{trans._c;51;16_1091}>::I !_x_0::B current_max_1::I fi_group_index_2::I = case _x_0 (True -> current_max_1) (_ -> fi_group_index_2)
<{trans._c;51;16_1090}>::I !_x_0::B current_max_1::I fi_group_index_2::I = case _x_0 (True -> current_max_1) (_ -> fi_group_index_2)
<{trans._c;51;16_1089}>::I !_x_0::B current_max_1::I fi_group_index_2::I = case _x_0 (True -> current_max_1) (_ -> fi_group_index_2)
trans.max_group_index_of_fun_with_fun_index_266 !_vArray_0 fun_index_1::I current_max_2::I fun_defs_3 = let _x_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 6 fun_defs_3 fun_index_1, fun_def_1_1 = select _x_1_0::_Tuple2 0, x_1_2 = select (select fun_def_1_1::syntax._FunDef 8)::syntax._FunInfo 1 in _Tuple2 (<{trans._c;51;16_1092}> (<{StdInt.<_17}> x_1_2 current_max_2) current_max_2 x_1_2) (select _x_1_0::_Tuple2 1)
<{trans._c;51;16_1092}>::I !_x_0::B current_max_1::I x_2::I = case _x_0 (True -> current_max_1) (_ -> x_2)
trans.max_group_index_of_fun_with_fun_index_and_ptr_267 !_vArray_0 fun_ptr_1 !fun_index_2::I current_max_3::I fun_defs_4 fun_heap_5 = let _x_1_0 = select _vArray_0::<{_SystemArray.Array;}> 7 fun_defs_4 in case (<{StdInt.<_17}> fun_index_2 (select _x_1_0::_Tuple2 0)) (True -> let fun_defs_3_0::I = select _x_1_0::_Tuple2 1, _x_3_1 = select _vArray_0::<{_SystemArray.Array;}> 6 fun_defs_3_0 fun_index_2, _x_3_2 = select _x_3_1::_Tuple2 0, fun_info_3_3 = select _x_3_2::syntax._FunDef 8, x_3_4 = select fun_info_3_3::syntax._FunInfo 1 in _Tuple3 (<{trans._c;51;16_1093}> (<{StdInt.<_17}> x_3_4 current_max_3) current_max_3 x_3_4) (select _x_3_1::_Tuple2 1) fun_heap_5) (False -> let _x_3_0::I = Heap.readPtr fun_ptr_1 fun_heap_5, generated_function_3_1 = select (select _x_3_0::_Tuple2 0)::_Tuple1 0, x_3_2 = select (select (select generated_function_3_1::syntax._GeneratedFunction 0)::syntax._FunDef 8)::syntax._FunInfo 1 in _Tuple3 (<{trans._c;51;16_1094}> (<{StdInt.<_17}> x_3_2 current_max_3) current_max_3 x_3_2) (select _x_1_0::_Tuple2 1) (select _x_3_0::_Tuple2 1)) 
<{trans._c;51;16_1094}>::I !_x_0::B current_max_1::I x_2::I = case _x_0 (True -> current_max_1) (_ -> x_2)
<{trans._c;51;16_1093}>::I !_x_0::B current_max_1::I x_2::I = case _x_0 (True -> current_max_1) (_ -> x_2)
trans.fold_st_788 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !_x_3 st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_788 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 x_1_1 (trans.foldr_expr_st_787 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 a_1_0 st_4)) 
trans.anon_792 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !_x_3 st_4 = case _x_3 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.foldr_expr_st_787 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 lb_src_1_1 st_4) 
trans.fold_st_791 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !_x_3 st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_791 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 x_1_1 (trans.anon_792 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 a_1_0 st_4)) 
trans.anon_790 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !_x_3 st_4 = case _x_3 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.foldr_expr_st_787 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 lb_src_1_1 st_4) 
trans.fold_st_789 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !_x_3 st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_789 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 x_1_1 (trans.anon_790 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 a_1_0 st_4)) 
trans.foldr_expr_st_787 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !expr_3 st_4 = case expr_3 (syntax.Var _x_1_0 -> trans.max_group_index_of_member_265 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 expr_3 st_4) (syntax.App _x_1_0 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> trans.max_group_index_of_member_265 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 expr_3 (trans.fold_st_788 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 app_args_2_1 st_4)) ) (syntax.Let _x_1_0 -> case _x_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> trans.max_group_index_of_member_265 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 expr_3 (trans.max_group_index_of_member_265 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 let_expr_2_2 (trans.fold_st_791 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 let_strict_binds_2_0 (trans.fold_st_789 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 let_lazy_binds_2_1 st_4)))) ) (syntax.Selection a_1_0 expr_1_1 b_1_2 -> trans.max_group_index_of_member_265 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 expr_3 (trans.foldr_expr_st_787 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 expr_1_1 st_4)) (syntax.BasicExpr _x_1_0 -> trans.max_group_index_of_member_265 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 expr_3 st_4) 
trans.foldrExprSt_786 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !expr_3 st_4 = trans.foldr_expr_st_787 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 expr_3 st_4
trans.fold_st_793 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !_x_3 st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_793 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 x_1_1 (trans.foldrExprSt_786 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 a_1_0 st_4)) 
trans.max_group_index_of_producer_264 !_vArray_0 !_vArray_1 ro_main_dcl_module_n_2::I !_x_3 current_max_4::I fun_defs_5 fun_heap_6 cons_args_7 = case _x_3 (syntax.PR_Empty -> _Tuple4 current_max_4 cons_args_7 fun_defs_5 fun_heap_6) (syntax.PR_Unused -> _Tuple4 current_max_4 cons_args_7 fun_defs_5 fun_heap_6) (syntax.PR_Class _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> trans.fold_st_793 _vArray_0 _vArray_1 ro_main_dcl_module_n_2 app_args_2_1 (_Tuple4 current_max_4 cons_args_7 fun_defs_5 fun_heap_6)) ) (syntax.PR_Curried _x_1_0 _x_1_1 -> case _x_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_Function _x_3_0 -> case _x_3_0 (syntax._Global fun_index_4_0 glob_module_4_1 -> case (StdBool.not (<{StdInt.==_16}> glob_module_4_1 ro_main_dcl_module_n_2)) (True -> _Tuple4 current_max_4 cons_args_7 fun_defs_5 fun_heap_6) (False -> let _x_6_0 = trans.max_group_index_of_fun_with_fun_index_266 _vArray_1 fun_index_4_0 current_max_4 fun_defs_5 in _Tuple4 (select _x_6_0::_Tuple2 0) cons_args_7 (select _x_6_0::_Tuple2 1) fun_heap_6) ) ) (syntax.SK_LocalMacroFunction fun_index_3_0 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_266 _vArray_1 fun_index_3_0 current_max_4 fun_defs_5 in _Tuple4 (select _x_4_0::_Tuple2 0) cons_args_7 (select _x_4_0::_Tuple2 1) fun_heap_6) (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_and_ptr_267 _vArray_1 fun_ptr_3_0 fun_index_3_1 current_max_4 fun_defs_5 fun_heap_6 in _Tuple4 (select _x_4_0::_Tuple3 0) cons_args_7 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) ) (syntax.PR_Function _x_1_0 _x_1_1 fun_index_1_2 -> let _x_2_0 = trans.max_group_index_of_fun_with_fun_index_266 _vArray_1 fun_index_1_2 current_max_4 fun_defs_5 in _Tuple4 (select _x_2_0::_Tuple2 0) cons_args_7 (select _x_2_0::_Tuple2 1) fun_heap_6) (syntax.PR_GeneratedFunction _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_and_ptr_267 _vArray_1 fun_ptr_3_0 fun_index_3_1 current_max_4 fun_defs_5 fun_heap_6 in _Tuple4 (select _x_4_0::_Tuple3 0) cons_args_7 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) ) (syntax.PR_Constructor symb_1_0 _x_1_1 args_1_2 -> _Tuple4 current_max_4 cons_args_7 fun_defs_5 fun_heap_6) (syntax.PR_CurriedFunction _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_and_ptr_267 _vArray_1 fun_ptr_3_0 fun_index_3_1 current_max_4 fun_defs_5 fun_heap_6 in _Tuple4 (select _x_4_0::_Tuple3 0) cons_args_7 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) (_ -> let _x_2_0 = trans.max_group_index_of_fun_with_fun_index_266 _vArray_1 _x_1_2 current_max_4 fun_defs_5 in _Tuple4 (select _x_2_0::_Tuple2 0) cons_args_7 (select _x_2_0::_Tuple2 1) fun_heap_6)) (syntax.PR_String _x_1_0 -> _Tuple4 current_max_4 cons_args_7 fun_defs_5 fun_heap_6) (syntax.PR_Int _x_1_0 -> _Tuple4 current_max_4 cons_args_7 fun_defs_5 fun_heap_6) (syntax.PR_Equal _x_1_0 -> _Tuple4 current_max_4 cons_args_7 fun_defs_5 fun_heap_6) (syntax.PR_EqualRemove _x_1_0 -> _Tuple4 current_max_4 cons_args_7 fun_defs_5 fun_heap_6) 
trans.max_group_index_of_member_798 !_vArray_0 ro_main_dcl_module_n_1::I !_x_2 !_x_3 = case _x_2 (syntax.App _x_1_0 -> case _x_1_0 (syntax._App _x_2_0 app_args_2_1 app_info_ptr_2_2 -> case _x_2_0 (syntax._SymbIdent symb_ident_3_0 _x_3_1 -> case _x_3_1 (syntax.SK_Function _x_4_0 -> case _x_4_0 (syntax._Global fun_index_5_0 mod_index_5_1 -> case _x_3 (_Tuple4 current_max_6_0 cons_args_6_1 fun_defs_6_2 fun_heap_6_3 -> case (<{StdInt.==_16}> mod_index_5_1 ro_main_dcl_module_n_1) (True -> let _x_8_0 = _SystemArray.usize_7 cons_args_6_1 in case (<{StdInt.<_17}> fun_index_5_0 (select _x_8_0::_Tuple2 0)) (True -> let _x_10_0::I = select _vArray_0::<{_SystemArray.Array;}> 6 fun_defs_6_2 fun_index_5_0, _x_10_1 = select _x_10_0::_Tuple2 0, _x_10_2 = select _x_10_1::syntax._FunDef 8, fi_group_index_10_3 = select _x_10_2::syntax._FunInfo 1 in _Tuple4 (<{trans._c;51;16_1095}> (<{StdInt.<_17}> fi_group_index_10_3 current_max_6_0) current_max_6_0 fi_group_index_10_3) (select _x_8_0::_Tuple2 1) (select _x_10_0::_Tuple2 1) fun_heap_6_3) (False -> _Tuple4 current_max_6_0 (select _x_8_0::_Tuple2 1) fun_defs_6_2 fun_heap_6_3) ) (False -> _Tuple4 current_max_6_0 cons_args_6_1 fun_defs_6_2 fun_heap_6_3) ) ) ) (syntax.SK_LocalMacroFunction fun_index_4_0 -> case _x_3 (_Tuple4 current_max_5_0 cons_args_5_1 fun_defs_5_2 fun_heap_5_3 -> let _x_6_0 = _SystemArray.usize_7 cons_args_5_1 in case (<{StdInt.<_17}> fun_index_4_0 (select _x_6_0::_Tuple2 0)) (True -> let _x_8_0::I = select _vArray_0::<{_SystemArray.Array;}> 6 fun_defs_5_2 fun_index_4_0, _x_8_1 = select _x_8_0::_Tuple2 0, _x_8_2 = select _x_8_1::syntax._FunDef 8, fi_group_index_8_3 = select _x_8_2::syntax._FunInfo 1 in _Tuple4 (<{trans._c;51;16_1096}> (<{StdInt.<_17}> fi_group_index_8_3 current_max_5_0) current_max_5_0 fi_group_index_8_3) (select _x_6_0::_Tuple2 1) (select _x_8_0::_Tuple2 1) fun_heap_5_3) (False -> _Tuple4 current_max_5_0 (select _x_6_0::_Tuple2 1) fun_defs_5_2 fun_heap_5_3) ) ) (syntax.SK_GeneratedFunction fun_ptr_4_0 _x_4_1 -> case _x_3 (_Tuple4 current_max_5_0 cons_args_5_1 fun_defs_5_2 fun_heap_5_3 -> let _x_6_0::I = Heap.readPtr fun_ptr_4_0 fun_heap_5_3, _x_6_1 = select (select _x_6_0::_Tuple2 0)::_Tuple1 0, _x_6_2 = select _x_6_1::syntax._GeneratedFunction 0, _x_6_3 = select _x_6_2::syntax._FunDef 8, fi_group_index_6_4 = select _x_6_3::syntax._FunInfo 1 in _Tuple4 (<{trans._c;51;16_1097}> (<{StdInt.<_17}> fi_group_index_6_4 current_max_5_0) current_max_5_0 fi_group_index_6_4) cons_args_5_1 fun_defs_5_2 (select _x_6_0::_Tuple2 1)) ) ) ) ) (_ -> case _x_3 (_Tuple4 current_max_1_0 cons_args_1_1 fun_defs_1_2 fun_heap_1_3 -> _Tuple4 current_max_1_0 cons_args_1_1 fun_defs_1_2 fun_heap_1_3) )
<{trans._c;51;16_1097}>::I !_x_0::B current_max_1::I fi_group_index_2::I = case _x_0 (True -> current_max_1) (_ -> fi_group_index_2)
<{trans._c;51;16_1096}>::I !_x_0::B current_max_1::I fi_group_index_2::I = case _x_0 (True -> current_max_1) (_ -> fi_group_index_2)
<{trans._c;51;16_1095}>::I !_x_0::B current_max_1::I fi_group_index_2::I = case _x_0 (True -> current_max_1) (_ -> fi_group_index_2)
trans.fold_st_799 !_vArray_0 ro_main_dcl_module_n_1::I !_x_2 st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_799 _vArray_0 ro_main_dcl_module_n_1 x_1_1 (trans.foldr_expr_st_797 _vArray_0 ro_main_dcl_module_n_1 a_1_0 st_3)) 
trans.anon_803 !_vArray_0 ro_main_dcl_module_n_1::I !_x_2 st_3 = case _x_2 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.foldr_expr_st_797 _vArray_0 ro_main_dcl_module_n_1 lb_src_1_1 st_3) 
trans.fold_st_802 !_vArray_0 ro_main_dcl_module_n_1::I !_x_2 st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_802 _vArray_0 ro_main_dcl_module_n_1 x_1_1 (trans.anon_803 _vArray_0 ro_main_dcl_module_n_1 a_1_0 st_3)) 
trans.anon_801 !_vArray_0 ro_main_dcl_module_n_1::I !_x_2 st_3 = case _x_2 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.foldr_expr_st_797 _vArray_0 ro_main_dcl_module_n_1 lb_src_1_1 st_3) 
trans.fold_st_800 !_vArray_0 ro_main_dcl_module_n_1::I !_x_2 st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_800 _vArray_0 ro_main_dcl_module_n_1 x_1_1 (trans.anon_801 _vArray_0 ro_main_dcl_module_n_1 a_1_0 st_3)) 
trans.foldr_expr_st_797 !_vArray_0 ro_main_dcl_module_n_1::I !expr_2 st_3 = case expr_2 (syntax.Var _x_1_0 -> trans.max_group_index_of_member_798 _vArray_0 ro_main_dcl_module_n_1 expr_2 st_3) (syntax.App _x_1_0 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> trans.max_group_index_of_member_798 _vArray_0 ro_main_dcl_module_n_1 expr_2 (trans.fold_st_799 _vArray_0 ro_main_dcl_module_n_1 app_args_2_1 st_3)) ) (syntax.Let _x_1_0 -> case _x_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> trans.max_group_index_of_member_798 _vArray_0 ro_main_dcl_module_n_1 expr_2 (trans.max_group_index_of_member_798 _vArray_0 ro_main_dcl_module_n_1 let_expr_2_2 (trans.fold_st_802 _vArray_0 ro_main_dcl_module_n_1 let_strict_binds_2_0 (trans.fold_st_800 _vArray_0 ro_main_dcl_module_n_1 let_lazy_binds_2_1 st_3)))) ) (syntax.Selection a_1_0 expr_1_1 b_1_2 -> trans.max_group_index_of_member_798 _vArray_0 ro_main_dcl_module_n_1 expr_2 (trans.foldr_expr_st_797 _vArray_0 ro_main_dcl_module_n_1 expr_1_1 st_3)) (syntax.BasicExpr _x_1_0 -> trans.max_group_index_of_member_798 _vArray_0 ro_main_dcl_module_n_1 expr_2 st_3) 
trans.foldrExprSt_796 !_vArray_0 ro_main_dcl_module_n_1::I !expr_2 st_3 = trans.foldr_expr_st_797 _vArray_0 ro_main_dcl_module_n_1 expr_2 st_3
trans.fold_st_795 !_vArray_0 ro_main_dcl_module_n_1::I !_x_2 st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_795 _vArray_0 ro_main_dcl_module_n_1 x_1_1 (trans.foldrExprSt_796 _vArray_0 ro_main_dcl_module_n_1 a_1_0 st_3)) 
trans.max_group_index_of_producer_794 !_vArray_0 ro_main_dcl_module_n_1::I !_x_2 current_max_3::I fun_defs_4 fun_heap_5 cons_args_6 = case _x_2 (syntax.PR_Empty -> _Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5) (syntax.PR_Unused -> _Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5) (syntax.PR_Class _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> trans.fold_st_795 _vArray_0 ro_main_dcl_module_n_1 app_args_2_1 (_Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5)) ) (syntax.PR_Curried _x_1_0 _x_1_1 -> case _x_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_Function _x_3_0 -> case _x_3_0 (syntax._Global fun_index_4_0 glob_module_4_1 -> case (StdBool.not (<{StdInt.==_16}> glob_module_4_1 ro_main_dcl_module_n_1)) (True -> _Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5) (False -> let _x_6_0 = trans.max_group_index_of_fun_with_fun_index_266 _vArray_0 fun_index_4_0 current_max_3 fun_defs_4 in _Tuple4 (select _x_6_0::_Tuple2 0) cons_args_6 (select _x_6_0::_Tuple2 1) fun_heap_5) ) ) (syntax.SK_LocalMacroFunction fun_index_3_0 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_266 _vArray_0 fun_index_3_0 current_max_3 fun_defs_4 in _Tuple4 (select _x_4_0::_Tuple2 0) cons_args_6 (select _x_4_0::_Tuple2 1) fun_heap_5) (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_and_ptr_267 _vArray_0 fun_ptr_3_0 fun_index_3_1 current_max_3 fun_defs_4 fun_heap_5 in _Tuple4 (select _x_4_0::_Tuple3 0) cons_args_6 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) ) (syntax.PR_Function _x_1_0 _x_1_1 fun_index_1_2 -> let _x_2_0 = trans.max_group_index_of_fun_with_fun_index_266 _vArray_0 fun_index_1_2 current_max_3 fun_defs_4 in _Tuple4 (select _x_2_0::_Tuple2 0) cons_args_6 (select _x_2_0::_Tuple2 1) fun_heap_5) (syntax.PR_GeneratedFunction _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_and_ptr_267 _vArray_0 fun_ptr_3_0 fun_index_3_1 current_max_3 fun_defs_4 fun_heap_5 in _Tuple4 (select _x_4_0::_Tuple3 0) cons_args_6 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) ) (syntax.PR_Constructor symb_1_0 _x_1_1 args_1_2 -> _Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5) (syntax.PR_CurriedFunction _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_and_ptr_267 _vArray_0 fun_ptr_3_0 fun_index_3_1 current_max_3 fun_defs_4 fun_heap_5 in _Tuple4 (select _x_4_0::_Tuple3 0) cons_args_6 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) (_ -> let _x_2_0 = trans.max_group_index_of_fun_with_fun_index_266 _vArray_0 _x_1_2 current_max_3 fun_defs_4 in _Tuple4 (select _x_2_0::_Tuple2 0) cons_args_6 (select _x_2_0::_Tuple2 1) fun_heap_5)) (syntax.PR_String _x_1_0 -> _Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5) (syntax.PR_Int _x_1_0 -> _Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5) (syntax.PR_Equal _x_1_0 -> _Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5) (syntax.PR_EqualRemove _x_1_0 -> _Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5) 
trans.max_group_index_of_fun_with_fun_index_and_ptr_815 fun_ptr_0 !fun_index_1::I current_max_2::I !fun_defs_3 fun_heap_4 = let _x_1_0 = trans.usize_655 fun_defs_3 in case (<{StdInt.<_17}> fun_index_1 (select _x_1_0::_Tuple2 0)) (True -> let fun_defs_3_0::I = select _x_1_0::_Tuple2 1, _x_3_1 = trans.uselect_654 fun_defs_3_0 fun_index_1, _x_3_2 = select _x_3_1::_Tuple2 0, fun_info_3_3 = select _x_3_2::syntax._FunDef 8, x_3_4 = select fun_info_3_3::syntax._FunInfo 1 in _Tuple3 (<{trans._c;51;16_1098}> (<{StdInt.<_17}> x_3_4 current_max_2) current_max_2 x_3_4) (select _x_3_1::_Tuple2 1) fun_heap_4) (False -> let _x_3_0::I = Heap.readPtr fun_ptr_0 fun_heap_4, generated_function_3_1 = select (select _x_3_0::_Tuple2 0)::_Tuple1 0, x_3_2 = select (select (select generated_function_3_1::syntax._GeneratedFunction 0)::syntax._FunDef 8)::syntax._FunInfo 1 in _Tuple3 (<{trans._c;51;16_1099}> (<{StdInt.<_17}> x_3_2 current_max_2) current_max_2 x_3_2) (select _x_1_0::_Tuple2 1) (select _x_3_0::_Tuple2 1)) 
<{trans._c;51;16_1099}>::I !_x_0::B current_max_1::I x_2::I = case _x_0 (True -> current_max_1) (_ -> x_2)
<{trans._c;51;16_1098}>::I !_x_0::B current_max_1::I x_2::I = case _x_0 (True -> current_max_1) (_ -> x_2)
trans.max_group_index_of_fun_with_fun_index_814 fun_index_0::I current_max_1::I fun_defs_2 = let _x_1_0::I = trans.uselect_654 fun_defs_2 fun_index_0, fun_def_1_1 = select _x_1_0::_Tuple2 0, x_1_2 = select (select fun_def_1_1::syntax._FunDef 8)::syntax._FunInfo 1 in _Tuple2 (<{trans._c;51;16_1100}> (<{StdInt.<_17}> x_1_2 current_max_1) current_max_1 x_1_2) (select _x_1_0::_Tuple2 1)
<{trans._c;51;16_1100}>::I !_x_0::B current_max_1::I x_2::I = case _x_0 (True -> current_max_1) (_ -> x_2)
trans.max_group_index_of_member_808 ro_main_dcl_module_n_0::I !_x_1 !_x_2 = case _x_1 (syntax.App _x_1_0 -> case _x_1_0 (syntax._App _x_2_0 app_args_2_1 app_info_ptr_2_2 -> case _x_2_0 (syntax._SymbIdent symb_ident_3_0 _x_3_1 -> case _x_3_1 (syntax.SK_Function _x_4_0 -> case _x_4_0 (syntax._Global fun_index_5_0 mod_index_5_1 -> case _x_2 (_Tuple4 current_max_6_0 cons_args_6_1 fun_defs_6_2 fun_heap_6_3 -> case (<{StdInt.==_16}> mod_index_5_1 ro_main_dcl_module_n_0) (True -> let _x_8_0 = _SystemArray.usize_7 cons_args_6_1 in case (<{StdInt.<_17}> fun_index_5_0 (select _x_8_0::_Tuple2 0)) (True -> let _x_10_0::I = trans.uselect_654 fun_defs_6_2 fun_index_5_0, _x_10_1 = select _x_10_0::_Tuple2 0, _x_10_2 = select _x_10_1::syntax._FunDef 8, fi_group_index_10_3 = select _x_10_2::syntax._FunInfo 1 in _Tuple4 (<{trans._c;51;16_1101}> (<{StdInt.<_17}> fi_group_index_10_3 current_max_6_0) current_max_6_0 fi_group_index_10_3) (select _x_8_0::_Tuple2 1) (select _x_10_0::_Tuple2 1) fun_heap_6_3) (False -> _Tuple4 current_max_6_0 (select _x_8_0::_Tuple2 1) fun_defs_6_2 fun_heap_6_3) ) (False -> _Tuple4 current_max_6_0 cons_args_6_1 fun_defs_6_2 fun_heap_6_3) ) ) ) (syntax.SK_LocalMacroFunction fun_index_4_0 -> case _x_2 (_Tuple4 current_max_5_0 cons_args_5_1 fun_defs_5_2 fun_heap_5_3 -> let _x_6_0 = _SystemArray.usize_7 cons_args_5_1 in case (<{StdInt.<_17}> fun_index_4_0 (select _x_6_0::_Tuple2 0)) (True -> let _x_8_0::I = trans.uselect_654 fun_defs_5_2 fun_index_4_0, _x_8_1 = select _x_8_0::_Tuple2 0, _x_8_2 = select _x_8_1::syntax._FunDef 8, fi_group_index_8_3 = select _x_8_2::syntax._FunInfo 1 in _Tuple4 (<{trans._c;51;16_1102}> (<{StdInt.<_17}> fi_group_index_8_3 current_max_5_0) current_max_5_0 fi_group_index_8_3) (select _x_6_0::_Tuple2 1) (select _x_8_0::_Tuple2 1) fun_heap_5_3) (False -> _Tuple4 current_max_5_0 (select _x_6_0::_Tuple2 1) fun_defs_5_2 fun_heap_5_3) ) ) (syntax.SK_GeneratedFunction fun_ptr_4_0 _x_4_1 -> case _x_2 (_Tuple4 current_max_5_0 cons_args_5_1 fun_defs_5_2 fun_heap_5_3 -> let _x_6_0::I = Heap.readPtr fun_ptr_4_0 fun_heap_5_3, _x_6_1 = select (select _x_6_0::_Tuple2 0)::_Tuple1 0, _x_6_2 = select _x_6_1::syntax._GeneratedFunction 0, _x_6_3 = select _x_6_2::syntax._FunDef 8, fi_group_index_6_4 = select _x_6_3::syntax._FunInfo 1 in _Tuple4 (<{trans._c;51;16_1103}> (<{StdInt.<_17}> fi_group_index_6_4 current_max_5_0) current_max_5_0 fi_group_index_6_4) cons_args_5_1 fun_defs_5_2 (select _x_6_0::_Tuple2 1)) ) ) ) ) (_ -> case _x_2 (_Tuple4 current_max_1_0 cons_args_1_1 fun_defs_1_2 fun_heap_1_3 -> _Tuple4 current_max_1_0 cons_args_1_1 fun_defs_1_2 fun_heap_1_3) )
<{trans._c;51;16_1103}>::I !_x_0::B current_max_1::I fi_group_index_2::I = case _x_0 (True -> current_max_1) (_ -> fi_group_index_2)
<{trans._c;51;16_1102}>::I !_x_0::B current_max_1::I fi_group_index_2::I = case _x_0 (True -> current_max_1) (_ -> fi_group_index_2)
<{trans._c;51;16_1101}>::I !_x_0::B current_max_1::I fi_group_index_2::I = case _x_0 (True -> current_max_1) (_ -> fi_group_index_2)
trans.fold_st_809 ro_main_dcl_module_n_0::I !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_809 ro_main_dcl_module_n_0 x_1_1 (trans.foldr_expr_st_807 ro_main_dcl_module_n_0 a_1_0 st_2)) 
trans.anon_813 ro_main_dcl_module_n_0::I !_x_1 st_2 = case _x_1 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.foldr_expr_st_807 ro_main_dcl_module_n_0 lb_src_1_1 st_2) 
trans.fold_st_812 ro_main_dcl_module_n_0::I !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_812 ro_main_dcl_module_n_0 x_1_1 (trans.anon_813 ro_main_dcl_module_n_0 a_1_0 st_2)) 
trans.anon_811 ro_main_dcl_module_n_0::I !_x_1 st_2 = case _x_1 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.foldr_expr_st_807 ro_main_dcl_module_n_0 lb_src_1_1 st_2) 
trans.fold_st_810 ro_main_dcl_module_n_0::I !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_810 ro_main_dcl_module_n_0 x_1_1 (trans.anon_811 ro_main_dcl_module_n_0 a_1_0 st_2)) 
trans.foldr_expr_st_807 ro_main_dcl_module_n_0::I !expr_1 st_2 = case expr_1 (syntax.Var _x_1_0 -> trans.max_group_index_of_member_808 ro_main_dcl_module_n_0 expr_1 st_2) (syntax.App _x_1_0 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> trans.max_group_index_of_member_808 ro_main_dcl_module_n_0 expr_1 (trans.fold_st_809 ro_main_dcl_module_n_0 app_args_2_1 st_2)) ) (syntax.Let _x_1_0 -> case _x_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> trans.max_group_index_of_member_808 ro_main_dcl_module_n_0 expr_1 (trans.max_group_index_of_member_808 ro_main_dcl_module_n_0 let_expr_2_2 (trans.fold_st_812 ro_main_dcl_module_n_0 let_strict_binds_2_0 (trans.fold_st_810 ro_main_dcl_module_n_0 let_lazy_binds_2_1 st_2)))) ) (syntax.Selection a_1_0 expr_1_1 b_1_2 -> trans.max_group_index_of_member_808 ro_main_dcl_module_n_0 expr_1 (trans.foldr_expr_st_807 ro_main_dcl_module_n_0 expr_1_1 st_2)) (syntax.BasicExpr _x_1_0 -> trans.max_group_index_of_member_808 ro_main_dcl_module_n_0 expr_1 st_2) 
trans.foldrExprSt_806 ro_main_dcl_module_n_0::I !expr_1 st_2 = trans.foldr_expr_st_807 ro_main_dcl_module_n_0 expr_1 st_2
trans.fold_st_805 ro_main_dcl_module_n_0::I !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_805 ro_main_dcl_module_n_0 x_1_1 (trans.foldrExprSt_806 ro_main_dcl_module_n_0 a_1_0 st_2)) 
trans.max_group_index_of_producer_804 ro_main_dcl_module_n_0::I !_x_1 current_max_2::I fun_defs_3 fun_heap_4 cons_args_5 = case _x_1 (syntax.PR_Empty -> _Tuple4 current_max_2 cons_args_5 fun_defs_3 fun_heap_4) (syntax.PR_Unused -> _Tuple4 current_max_2 cons_args_5 fun_defs_3 fun_heap_4) (syntax.PR_Class _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> trans.fold_st_805 ro_main_dcl_module_n_0 app_args_2_1 (_Tuple4 current_max_2 cons_args_5 fun_defs_3 fun_heap_4)) ) (syntax.PR_Curried _x_1_0 _x_1_1 -> case _x_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_Function _x_3_0 -> case _x_3_0 (syntax._Global fun_index_4_0 glob_module_4_1 -> case (StdBool.not (<{StdInt.==_16}> glob_module_4_1 ro_main_dcl_module_n_0)) (True -> _Tuple4 current_max_2 cons_args_5 fun_defs_3 fun_heap_4) (False -> let _x_6_0 = trans.max_group_index_of_fun_with_fun_index_814 fun_index_4_0 current_max_2 fun_defs_3 in _Tuple4 (select _x_6_0::_Tuple2 0) cons_args_5 (select _x_6_0::_Tuple2 1) fun_heap_4) ) ) (syntax.SK_LocalMacroFunction fun_index_3_0 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_814 fun_index_3_0 current_max_2 fun_defs_3 in _Tuple4 (select _x_4_0::_Tuple2 0) cons_args_5 (select _x_4_0::_Tuple2 1) fun_heap_4) (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_and_ptr_815 fun_ptr_3_0 fun_index_3_1 current_max_2 fun_defs_3 fun_heap_4 in _Tuple4 (select _x_4_0::_Tuple3 0) cons_args_5 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) ) (syntax.PR_Function _x_1_0 _x_1_1 fun_index_1_2 -> let _x_2_0 = trans.max_group_index_of_fun_with_fun_index_814 fun_index_1_2 current_max_2 fun_defs_3 in _Tuple4 (select _x_2_0::_Tuple2 0) cons_args_5 (select _x_2_0::_Tuple2 1) fun_heap_4) (syntax.PR_GeneratedFunction _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_and_ptr_815 fun_ptr_3_0 fun_index_3_1 current_max_2 fun_defs_3 fun_heap_4 in _Tuple4 (select _x_4_0::_Tuple3 0) cons_args_5 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) ) (syntax.PR_Constructor symb_1_0 _x_1_1 args_1_2 -> _Tuple4 current_max_2 cons_args_5 fun_defs_3 fun_heap_4) (syntax.PR_CurriedFunction _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_GeneratedFunction fun_ptr_3_0 fun_index_3_1 -> let _x_4_0 = trans.max_group_index_of_fun_with_fun_index_and_ptr_815 fun_ptr_3_0 fun_index_3_1 current_max_2 fun_defs_3 fun_heap_4 in _Tuple4 (select _x_4_0::_Tuple3 0) cons_args_5 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) (_ -> let _x_2_0 = trans.max_group_index_of_fun_with_fun_index_814 _x_1_2 current_max_2 fun_defs_3 in _Tuple4 (select _x_2_0::_Tuple2 0) cons_args_5 (select _x_2_0::_Tuple2 1) fun_heap_4)) (syntax.PR_String _x_1_0 -> _Tuple4 current_max_2 cons_args_5 fun_defs_3 fun_heap_4) (syntax.PR_Int _x_1_0 -> _Tuple4 current_max_2 cons_args_5 fun_defs_3 fun_heap_4) (syntax.PR_Equal _x_1_0 -> _Tuple4 current_max_2 cons_args_5 fun_defs_3 fun_heap_4) (syntax.PR_EqualRemove _x_1_0 -> _Tuple4 current_max_2 cons_args_5 fun_defs_3 fun_heap_4) 
trans.max_group_index !prod_index_0::I !producers_1 ro_main_dcl_module_n_2::I current_max_3::I fun_defs_4 fun_heap_5 cons_args_6 = case (<{StdInt.==_16}> prod_index_0 (_SystemArray.size_4 producers_1)) (True -> _Tuple4 current_max_3 cons_args_6 fun_defs_4 fun_heap_5) (False -> let _x_2_0 = trans.max_group_index_of_producer_804 ro_main_dcl_module_n_2 (_SystemArray.select_3 producers_1 prod_index_0) current_max_3 fun_defs_4 fun_heap_5 cons_args_6 in trans.max_group_index (<{StdInt.+_6}> prod_index_0 StdInt.one_11) producers_1 ro_main_dcl_module_n_2 (select _x_2_0::_Tuple4 0) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3) (select _x_2_0::_Tuple4 1)) 
trans.map_st_582 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_582 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.anon_399 !_x_0 = case _x_0 (syntax._ATypeVar atv_attribute_1_0 atv_variable_1_1 -> atv_variable_1_1) 
trans.anon_400 !_x_0 = case _x_0 (syntax._ATypeVar atv_attribute_1_0 atv_variable_1_1 -> atv_variable_1_1) 
trans.strip_401 !atype_0 tvs_1 = case atype_0 (syntax._AType at_attribute_1_0 at_type_1_1 -> case at_type_1_1 (syntax.TFA vars_2_0 type_2_1 -> _Tuple2 (update atype_0::syntax._AType [1:type_2_1]) (<{StdList.++}> (StdList.map trans.anon_399 vars_2_0) tvs_1)) (syntax.TFAC vars_2_0 type_2_1 contexts_2_2 -> _Tuple2 (update atype_0::syntax._AType [1:type_2_1]) (<{StdList.++}> (StdList.map trans.anon_400 vars_2_0) tvs_1)) ) (_ -> _Tuple2 atype_0 tvs_1)
trans.map_st_816 !_x_0 s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.strip_401 x_1_0 s_1, _x_2_2 = trans.map_st_816 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.strip_universal_quantor !st_0 = case st_0 (syntax._SymbolType st_vars_1_0 st_args_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> let _x_2_0 = trans.strip_401 st_result_1_4 st_vars_1_0, _x_2_1 = trans.map_st_816 st_args_1_1 (select _x_2_0::_Tuple2 1) in update st_0::syntax._SymbolType [0:select _x_2_1::_Tuple2 1,1:select _x_2_1::_Tuple2 0,4:select _x_2_0::_Tuple2 0]) 
trans.map_st_581 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_581 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.is_dictionary_229::B !_x_0 !es_td_infos_1 = case _x_0 (syntax._AType at_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax.TA _x_2_0 _x_2_1 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 type_index_3_2 type_prop_3_3 -> let !td_infos_of_module_4_0 = _SystemArray.select_43 es_td_infos_1 (select type_index_3_2::syntax._Global 1) in case (StdBool.not (<{StdInt.<_17}> (select type_index_3_2::syntax._Global 0) (trans.size_708 td_infos_of_module_4_0))) (True -> True) (False -> <{StdInt.==_16}> (select (trans.select_707 td_infos_of_module_4_0 (select type_index_3_2::syntax._Global 0))::syntax._TypeDefInfo 3) -1) ) ) ) (_ -> False)
trans.add_propagation_attributes_to_atype_234 !modules_0 !type_1 !ps_2 = case (trans.is_dictionary_229 type_1 (select ps_2::type._PropState 1)) (True -> <{_Tuple2!3}> type_1 ps_2) (False -> type.addPropagationAttributesToAType modules_0 type_1 ps_2) 
trans.map_st_817 modules_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.add_propagation_attributes_to_atype_234 modules_0 x_1_0 s_2, _x_2_2 = trans.map_st_817 modules_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
<{trans.add_propagation_attributes`_233}> !common_defs_0 !st_1 !_x_2 = case st_1 (syntax._SymbolType st_vars_1_0 st_args_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> case _x_2 (_Tuple2 type_heaps_2_0 type_def_infos_2_1 -> let _x_3_0 = trans.map_st_817 common_defs_0 (_predefined._Cons st_result_1_4 st_args_1_1) (type._PropState type_heaps_2_0 type_def_infos_2_1 st_attr_vars_1_6 st_attr_env_1_7 general.No), _x_3_1 = select _x_3_0::_Tuple2 0, ps_3_2 = select _x_3_0::_Tuple2 1 in <{_Tuple2!3}> (update st_1::syntax._SymbolType [1:select _x_3_1::_Tuple2 1,4:select _x_3_1::_Tuple2 0,6:select ps_3_2::type._PropState 2,7:select ps_3_2::type._PropState 3]) (_Tuple2 (select ps_3_2::type._PropState 0) (select ps_3_2::type._PropState 1))) ) 
trans.get_producer_symbol !_x_0 = case _x_0 (syntax.PR_Curried symbol_1_0 arity_1_1 -> _Tuple2 symbol_1_0 arity_1_1) (syntax.PR_Function symbol_1_0 arity_1_1 _x_1_2 -> _Tuple2 symbol_1_0 arity_1_1) (syntax.PR_GeneratedFunction symbol_1_0 arity_1_1 _x_1_2 -> _Tuple2 symbol_1_0 arity_1_1) (syntax.PR_Constructor symbol_1_0 arity_1_1 _x_1_2 -> _Tuple2 symbol_1_0 arity_1_1) (syntax.PR_CurriedFunction symbol_1_0 arity_1_1 _x_1_2 -> _Tuple2 symbol_1_0 arity_1_1) 
trans.accum_function_producer_type_235 !prods_0 !ro_1 !i_2::I !_x_3 = case _x_3 (_Tuple3 type_accu_1_0 ti_fun_defs_1_1 ti_fun_heap_1_2 -> let producer_2_0 = _SystemArray.select_3 prods_0 (<{StdInt.-_7}> (<{StdInt.-_7}> (_SystemArray.size_4 prods_0) i_2) 1) in <{trans._c;1837;11_1104}> producer_2_0 type_accu_1_0 ti_fun_defs_1_1 ti_fun_heap_1_2 ro_1) 
<{trans._c;1837;11_1104}> !producer_0 type_accu_1 !ti_fun_defs_2 !ti_fun_heap_3 ro_4 = case producer_0 (syntax.PR_Empty -> <{_Tuple3!7}> (_predefined._Cons general.No type_accu_1) ti_fun_defs_2 ti_fun_heap_3) (syntax.PR_Class _x_1_0 _x_1_1 class_type_1_2 -> <{_Tuple3!7}> (_predefined._Cons general.No type_accu_1) ti_fun_defs_2 ti_fun_heap_3) (syntax.PR_Unused -> <{_Tuple3!7}> (_predefined._Cons general.No type_accu_1) ti_fun_defs_2 ti_fun_heap_3) (syntax.PR_String _x_1_0 -> <{_Tuple3!7}> (_predefined._Cons (general.Yes (syntax._SymbolType _predefined._Nil _predefined._Nil syntax.NotStrict 0 (syntax._AType syntax.TA_Multi (syntax.TA (update syntax.newTypeSymbIdentCAF::syntax._TypeSymbIdent [0:_SystemArray.select_3 predef.predefined_idents 1,1:0,2:syntax._Global 0 1]) _predefined._Nil)) _predefined._Nil _predefined._Nil _predefined._Nil)) type_accu_1) ti_fun_defs_2 ti_fun_heap_3) (syntax.PR_Int _x_1_0 -> <{_Tuple3!7}> (_predefined._Cons (general.Yes (syntax._SymbolType _predefined._Nil _predefined._Nil syntax.NotStrict 0 (syntax._AType syntax.TA_Multi (syntax.TB syntax.BT_Int)) _predefined._Nil _predefined._Nil _predefined._Nil)) type_accu_1) ti_fun_defs_2 ti_fun_heap_3) (syntax.PR_Equal _x_1_0 -> <{_Tuple3!7}> (_predefined._Cons general.No type_accu_1) ti_fun_defs_2 ti_fun_heap_3) (syntax.PR_EqualRemove _x_1_0 -> <{_Tuple3!7}> (_predefined._Cons general.No type_accu_1) ti_fun_defs_2 ti_fun_heap_3) (_ -> let _x_1_0 = trans.get_producer_type (select (trans.get_producer_symbol producer_0)::_Tuple2 0) ro_4 ti_fun_defs_2 ti_fun_heap_3 in <{_Tuple3!7}> (_predefined._Cons (general.Yes (select _x_1_0::_Tuple3 0)) type_accu_1) (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2))
trans.mapOpt f_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 x_1_1 -> case _x_1_0 (general.Yes a_2_0 -> _predefined._Cons (general.Yes (f_0 a_2_0)) (trans.mapOpt f_0 x_1_1)) (general.No -> _predefined._Cons general.No (trans.mapOpt f_0 x_1_1)) ) (_predefined._Nil -> _predefined._Nil) 
trans.add_propagation_attributes_232 !common_defs_0 !_x_1 !state_2 = case _x_1 (general.No -> <{_Tuple2!3}> general.No state_2) (general.Yes st_1_0 -> let _x_2_0 = <{trans.add_propagation_attributes`_233}> common_defs_0 st_1_0 state_2 in <{_Tuple2!3}> (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) 
trans.map_st_580 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_580 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_558 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_558 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.bind_to_fresh_type_variable_268 !_x_0 th_vars_1 = case _x_0 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> let _x_2_0 = Heap.newPtr syntax.TVI_Empty th_vars_1, tv_2_1 = syntax._TypeVar tv_ident_1_0 (select _x_2_0::_Tuple2 0) in _Tuple2 tv_2_1 (Heap.writePtr tv_info_ptr_1_1 (syntax.TVI_Type (syntax.TV tv_2_1)) (select _x_2_0::_Tuple2 1))) 
trans.map_st_818 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.bind_to_fresh_type_variable_268 x_1_0 s_1, _x_2_2 = trans.map_st_818 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.bind_to_fresh_type_variables !type_variables_0 !th_vars_1 = trans.map_st_818 type_variables_0 th_vars_1
trans.bind_to_fresh_attr_variable !_x_0 th_attrs_1 = case _x_0 (syntax._AttributeVar av_ident_1_0 av_info_ptr_1_1 -> let _x_2_0 = Heap.newPtr syntax.AVI_Empty th_attrs_1, av_2_1 = syntax._AttributeVar av_ident_1_0 (select _x_2_0::_Tuple2 0) in _Tuple2 av_2_1 (Heap.writePtr av_info_ptr_1_1 (syntax.AVI_Attr (syntax.TA_Var av_2_1)) (select _x_2_0::_Tuple2 1))) 
trans.remove_TVI_Type_values !_x_0 !type_var_heap_1 = case _x_0 (_predefined._Cons _x_1_0 type_vars_1_1 -> case _x_1_0 (syntax._TypeVar tv_ident_2_0 tv_info_ptr_2_1 -> trans.remove_TVI_Type_values type_vars_1_1 (Heap.writePtr tv_info_ptr_2_1 syntax.TVI_Empty type_var_heap_1)) ) (_predefined._Nil -> type_var_heap_1) 
trans.remove_AVI_Attr_values !_x_0 !th_attrs_1 = case _x_0 (_predefined._Cons _x_1_0 st_attr_vars_1_1 -> case _x_1_0 (syntax._AttributeVar av_ident_2_0 av_info_ptr_2_1 -> trans.remove_AVI_Attr_values st_attr_vars_1_1 (Heap.writePtr av_info_ptr_2_1 syntax.AVI_Empty th_attrs_1)) ) (_predefined._Nil -> th_attrs_1) 
trans.map_st_819 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.bind_to_fresh_attr_variable x_1_0 s_1, _x_2_2 = trans.map_st_819 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.copy_opt_symbol_type_231 !_x_0 !ti_type_heaps_1 = case _x_0 (general.No -> <{_Tuple2!3}> trans.NoProducerType ti_type_heaps_1) (general.Yes symbol_type_1_0 -> case symbol_type_1_0 (syntax._SymbolType st_vars_2_0 st_args_2_1 st_args_strictness_2_2 st_arity_2_3 st_result_2_4 st_context_2_5 st_attr_vars_2_6 st_attr_env_2_7 -> case ti_type_heaps_1 (syntax._TypeHeaps th_vars_3_0 th_attrs_3_1 -> let _x_4_0 = trans.bind_to_fresh_type_variables st_vars_2_0 th_vars_3_0, _x_4_1 = trans.map_st_819 st_attr_vars_2_6 th_attrs_3_1, _x_4_2 = expand_types.substitute_17 (_predefined._Cons st_result_2_4 st_args_2_1) (update ti_type_heaps_1::syntax._TypeHeaps [0:select _x_4_0::_Tuple2 1,1:select _x_4_1::_Tuple2 1]), _x_4_3 = select _x_4_2::_Tuple3 1, _x_4_4 = expand_types.substitute_15 st_attr_env_2_7 (select _x_4_2::_Tuple3 2), ti_type_heaps_4_5 = select _x_4_4::_Tuple3 2 in <{_Tuple2!3}> (trans.ProducerType (update symbol_type_1_0::syntax._SymbolType [0:select _x_4_0::_Tuple2 0,1:select _x_4_3::_Tuple2 1,4:select _x_4_3::_Tuple2 0,6:select _x_4_1::_Tuple2 0,7:select _x_4_4::_Tuple3 1]) st_vars_2_0) (update ti_type_heaps_4_5::syntax._TypeHeaps [0:trans.remove_TVI_Type_values st_vars_2_0 (select ti_type_heaps_4_5::syntax._TypeHeaps 0),1:trans.remove_AVI_Attr_values st_attr_vars_2_6 (select ti_type_heaps_4_5::syntax._TypeHeaps 1)])) ) ) 
<{trans.c;1499;42_200}> !g_l_0 = <{trans.g_c1;1499;62_1106}> g_l_0
<{trans.g_c1;1499;62_1106}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;1499;62_1105}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;1499;62_1105}> !g_h_0 g_t_1 = case g_h_0 (trans.ProducerType x_1_0 _x_1_1 -> _predefined._Cons x_1_0 (<{trans.c;1499;42_200}> g_t_1)) (_ -> <{trans.c;1499;42_200}> g_t_1)
<{trans.c;1503;70_201}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = <{trans.g_c1;1503;97_1108}> (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) g_a_3 g_i_1 _vArray_0 g_s_2
<{trans.g_c1;1503;97_1108}> !_x_0::B g_a_1 g_i_2::I _vArray_3 g_s_4::I = case _x_0 (True -> <{trans.g_c2;1503;97_1107}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 g_i_2 g_s_4 g_a_1) (_ -> _predefined._Nil)
<{trans.g_c2;1503;97_1107}> !_x_0 _vArray_1 g_i_2::I g_s_3::I g_a_4 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax.PR_Class _x_2_0 _x_2_1 class_type_2_2 -> _predefined._Cons (syntax._AType syntax.TA_Multi class_type_2_2) (<{trans.c;1503;70_201}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_1)) ) (_ -> <{trans.c;1503;70_201}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_4)
trans.anon_202 !_x_0 = case _x_0 (syntax._SymbolType st_vars_1_0 st_args_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> _predefined._Cons st_result_1_4 st_args_1_1) 
trans.collect_unencountered_cons_var_217 !_x_0 !tv_1 !_x_2 = case _x_0 (syntax.TA_MultiOfPropagatingConsVar -> case tv_1 (syntax._TypeVar tv_ident_2_0 tv_info_ptr_2_1 -> case _x_2 (_Tuple2 cons_var_accu_3_0 th_vars_3_1 -> let _x_4_0 = Heap.readPtr tv_info_ptr_2_1 th_vars_3_1, th_vars_4_1 = select _x_4_0::_Tuple2 1 in <{trans._c;1871;15_1109}> (select _x_4_0::_Tuple2 0) tv_1 cons_var_accu_3_0 tv_info_ptr_2_1 th_vars_4_1) ) ) (_ -> _x_2)
<{trans._c;1871;15_1109}> !_x_0 tv_1 cons_var_accu_2 tv_info_ptr_3 !th_vars_4 = case _x_0 (syntax.TVI_Empty -> <{_Tuple2!3}> (_predefined._Cons tv_1 cons_var_accu_2) (Heap.writePtr tv_info_ptr_3 syntax.TVI_Used th_vars_4)) (syntax.TVI_Used -> <{_Tuple2!3}> cons_var_accu_2 th_vars_4) 
trans.collectPropagatingConsVars_236 !type_0 !th_vars_1 = typesupport.performOnTypeVars_33 (<{typesupport.performOnTypeVars;}> typesupport.performOnTypeVars_31) trans.collect_unencountered_cons_var_217 type_0 (_Tuple2 _predefined._Nil (typesupport.performOnTypeVars_33 (<{typesupport.performOnTypeVars;}> typesupport.performOnTypeVars_31) typesupport.initializeToTVI_Empty type_0 th_vars_1))
<{trans.c;1513;34_203}> !g_l_0 = <{trans.g_c1;1513;47_1111}> g_l_0
<{trans.g_c1;1513;47_1111}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;1513;47_1110}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;1513;47_1110}> !g_h_0 g_t_1 = case g_h_0 (syntax._SymbolType st_vars_1_0 st_args_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> _predefined._Cons st_vars_1_0 (<{trans.c;1513;34_203}> g_t_1)) (_ -> <{trans.c;1513;34_203}> g_t_1)
trans.bind_to_temp_type_var !_x_0 !_x_1 = case _x_0 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> case _x_1 (_Tuple2 next_type_var_nr_2_0 th_vars_2_1 -> _Tuple2 (<{StdInt.+_6}> next_type_var_nr_2_0 1) (Heap.writePtr tv_info_ptr_1_1 (syntax.TVI_Type (syntax.TempV next_type_var_nr_2_0)) th_vars_2_1)) ) 
trans.fold_st_572 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_572 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.bind_to_temp_attr_var_269 !_x_0 !_x_1 = case _x_0 (syntax._AttributeVar av_ident_1_0 av_info_ptr_1_1 -> case _x_1 (_Tuple2 next_attr_var_nr_2_0 th_attrs_2_1 -> _Tuple2 (<{StdInt.+_6}> next_attr_var_nr_2_0 1) (Heap.writePtr av_info_ptr_1_1 (syntax.AVI_Attr (syntax.TA_TempVar next_attr_var_nr_2_0)) th_attrs_2_1)) ) 
trans.fold_st_820 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_820 x_1_1 (trans.bind_to_temp_attr_var_269 a_1_0 st_1)) 
trans.bind_to_temp_attr_vars !attr_vars_0 !next_attr_var_n_and_attrs_1 = trans.fold_st_820 attr_vars_0 next_attr_var_n_and_attrs_1
<{trans.cu;1768;112_216}> !_vone_0 !<{_v+_1}> !_vone_2 !<{_v+_3}> c_l_i_4 i_5 !g_l_6 = <{trans.g_c1;1768;117_1112}> g_l_6 _vone_0 <{_v+_1}> _vone_2 <{_v+_3}> c_l_i_4 i_5
<{trans.g_c1;1768;117_1112}> !g_l_0 _vone_1 <{_v+_2}> _vone_3 <{_v+_4}> c_l_i_5 i_6 = case g_l_0 (_predefined._Cons el_1_0 g_t_1_1 -> <{trans.cu;1768;112_216}> _vone_1 <{_v+_2}> _vone_3 <{_v+_4}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_5 (select _vone_1::<{StdOverloaded.one;}> 0)) (select <{_v+_4}>::<{StdOverloaded.+;}> 0 i_6 (select _vone_3::<{StdOverloaded.one;}> 0)) g_t_1_1) (_ -> c_l_i_5)
<{trans.cu;1768;112_215}> !_vArray_0 args_strictness_1 strict1_2 c_a_3 c_i_4::I !g_l_5 = <{trans.g_c1;1768;117_1114}> g_l_5 _vArray_0 args_strictness_1 strict1_2 c_a_3 c_i_4
<{trans.g_c1;1768;117_1114}> !g_l_0 _vArray_1 args_strictness_2 strict1_3 c_a_4 c_i_5::I = case g_l_0 (_predefined._Cons el_1_0 g_t_1_1 -> <{trans.cu;1768;112_215}> _vArray_1 args_strictness_2 strict1_3 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_4 c_i_5 (trans._ATypesWithStrictness (_predefined._Cons el_1_0 _predefined._Nil) (<{trans._if;1768;44_1113}> (containers.arg_is_strict c_i_5 args_strictness_2) strict1_3))) (<{StdInt.+_6}> c_i_5 StdInt.one_11) g_t_1_1) (_ -> c_a_4)
<{trans._if;1768;44_1113}> !_x_0::B strict1_1 = case _x_0 (True -> strict1_1) (_ -> syntax.NotStrict)
<{trans.cu;1768;112_821}>::I !<{_v+_0}> !_vone_1 !<{_v+_2}> c_l_i_3::I i_4 !g_l_5 = <{trans.g_c1;1768;117_1115}> g_l_5 <{_v+_0}> _vone_1 <{_v+_2}> c_l_i_3 i_4
<{trans.g_c1;1768;117_1115}>::I !g_l_0 <{_v+_1}> _vone_2 <{_v+_3}> c_l_i_4::I i_5 = case g_l_0 (_predefined._Cons el_1_0 g_t_1_1 -> <{trans.cu;1768;112_821}> <{_v+_1}> _vone_2 <{_v+_3}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_4 StdInt.one_11) (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_5 (select _vone_2::<{StdOverloaded.one;}> 0)) g_t_1_1) (_ -> c_l_i_4)
<{trans.cu;1768;112_822}> args_strictness_0 strict1_1 !c_a_2 c_i_3::I !g_l_4 = <{trans.g_c1;1768;117_1117}> g_l_4 args_strictness_0 strict1_1 c_a_2 c_i_3
<{trans.g_c1;1768;117_1117}> !g_l_0 args_strictness_1 strict1_2 !c_a_3 c_i_4::I = case g_l_0 (_predefined._Cons el_1_0 g_t_1_1 -> <{trans.cu;1768;112_822}> args_strictness_1 strict1_2 (trans.update_717 c_a_3 c_i_4 (trans._ATypesWithStrictness (_predefined._Cons el_1_0 _predefined._Nil) (<{trans._if;1768;44_1116}> (containers.arg_is_strict c_i_4 args_strictness_1) strict1_2))) (<{StdInt.+_6}> c_i_4 StdInt.one_11) g_t_1_1) (_ -> c_a_3)
<{trans._if;1768;44_1116}> !_x_0::B strict1_1 = case _x_0 (True -> strict1_1) (_ -> syntax.NotStrict)
<{trans.cu;1768;112_823}>::I !_vone_0 !<{_v+_1}> !c_l_i_2::I i_3 !g_l_4 = <{trans.g_c1;1768;117_1118}> g_l_4 _vone_0 <{_v+_1}> c_l_i_2 i_3
<{trans.g_c1;1768;117_1118}>::I !g_l_0 _vone_1 <{_v+_2}> !c_l_i_3::I i_4 = case g_l_0 (_predefined._Cons el_1_0 g_t_1_1 -> <{trans.cu;1768;112_823}> _vone_1 <{_v+_2}> (<{StdInt.+_6}> c_l_i_3 StdInt.one_11) (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_4 (select _vone_1::<{StdOverloaded.one;}> 0)) g_t_1_1) (_ -> c_l_i_3)
<{trans.cu;1768;112_824}>::I !<{_v+_0}> !c_l_i_1::I i_2::I !g_l_3 = <{trans.g_c1;1768;117_1119}> g_l_3 <{_v+_0}> c_l_i_1 i_2
<{trans.g_c1;1768;117_1119}>::I !g_l_0 <{_v+_1}> !c_l_i_2::I i_3::I = case g_l_0 (_predefined._Cons el_1_0 g_t_1_1 -> <{trans.cu;1768;112_824}> <{_v+_1}> (<{StdInt.+_6}> c_l_i_2 StdInt.one_11) (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_3 StdInt.one_11) g_t_1_1) (_ -> c_l_i_2)
<{trans.cu;1768;112_825}>::I !c_l_i_0::I i_1::I !g_l_2 = <{trans.g_c1;1768;117_1120}> g_l_2 c_l_i_0 i_1
<{trans.g_c1;1768;117_1120}>::I !g_l_0 !c_l_i_1::I i_2::I = case g_l_0 (_predefined._Cons el_1_0 g_t_1_1 -> <{trans.cu;1768;112_825}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) (<{StdInt.+_6}> i_2 StdInt.one_11) g_t_1_1) (_ -> c_l_i_1)
trans.st_args_array_228 !st_args_0 !args_strictness_1 = <{trans.cu;1768;112_822}> args_strictness_1 (syntax.Strict 1) (trans._createArray_712 (<{trans.cu;1768;112_825}> 0 0 st_args_0)) 0 st_args_0
trans.new_variables_245 !_x_0 var_heap_1 = case _x_0 (_predefined._Nil -> _Tuple2 _predefined._Nil var_heap_1) (_predefined._Cons form_1_0 forms_1_1 -> case form_1_0 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> let _x_3_0 = trans.new_variables_245 forms_1_1 var_heap_1, _x_3_1 = Heap.newPtr syntax.VI_Empty (select _x_3_0::_Tuple2 1), new_info_ptr_3_2 = select _x_3_1::_Tuple2 0 in _Tuple2 (_predefined._Cons (update form_1_0::syntax._FreeVar [2:new_info_ptr_3_2]) (select _x_3_0::_Tuple2 0)) (trans.writeVarInfo fv_info_ptr_2_2 (syntax.VI_Variable fv_ident_2_1 new_info_ptr_3_2) (select _x_3_1::_Tuple2 1))) ) 
<{trans.++||_579}> !_vList_0 !_vList_1 !_x_2 list_3 = case _x_2 (<{_predefined._|Cons}> hd_1_0 tl_1_1 -> select _vList_0::<{_SystemStrictLists.List;}> 0 hd_1_0 (<{trans.++||_579}> _vList_0 _vList_1 tl_1_1 list_3)) (_ -> list_3)
trans.map_st_578 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_578 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.mapSt_577 f_0 !l_1 s_2 = trans.map_st_578 f_0 l_1 s_2
trans.map_st_576 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_576 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.empty_atype = syntax._AType syntax.TA_Multi syntax.TE
trans.unify_dict_246 defTypeGenericDict_0 defTypeGenericDict0_1 !class_atype_2 !arg_type_3 = case class_atype_2 (syntax._AType at_attribute_1_0 at_type_1_1 -> case at_type_1_1 (syntax.TA type_symb1_2_0 args1_2_1 -> case arg_type_3 (syntax._AType at_attribute_3_0 at_type_3_1 -> case at_type_3_1 (syntax.TA type_symb2_4_0 args2_4_1 -> case (<{compare_types.==_15}> type_symb1_2_0 type_symb2_4_0) (True -> type.unify_3 class_atype_2 arg_type_3) (False -> let !genericDictGlobal_6_0 = syntax._Global (select defTypeGenericDict_0::predef._PredefinedSymbol 1) (select defTypeGenericDict_0::predef._PredefinedSymbol 0), !genericDict0Global_6_1 = syntax._Global (select defTypeGenericDict0_1::predef._PredefinedSymbol 1) (select defTypeGenericDict0_1::predef._PredefinedSymbol 0) in case (case (<{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) (select type_symb1_2_0::syntax._TypeSymbIdent 2) genericDictGlobal_6_0) (True -> True) (False -> <{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) (select type_symb1_2_0::syntax._TypeSymbIdent 2) genericDict0Global_6_1) ) (True -> type.unify_3 (update class_atype_2::syntax._AType [1:syntax.TA type_symb2_4_0 args1_2_1]) arg_type_3) (False -> case (case (<{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) (select type_symb2_4_0::syntax._TypeSymbIdent 2) genericDictGlobal_6_0) (True -> True) (False -> <{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) (select type_symb2_4_0::syntax._TypeSymbIdent 2) genericDict0Global_6_1) ) (True -> type.unify_3 class_atype_2 (update arg_type_3::syntax._AType [1:syntax.TA type_symb1_2_0 args2_4_1])) ) ) ) ) ) ) (_ -> type.unify_3 class_atype_2 arg_type_3)
trans.subFVT_247 !_vsubstitute_0 !_x_1 type_heaps_2 = case _x_1 (_Tuple2 fv_1_0 ty_1_1 -> let _x_2_0 = select _vsubstitute_0::<{expand_types.substitute;}> 0 ty_1_1 type_heaps_2 in _Tuple2 (_Tuple2 fv_1_0 (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) 
<{trans.c;2116;60_248}> !g_l_0 = <{trans.g_c1;2116;76_1122}> g_l_0
<{trans.g_c1;2116;76_1122}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;2116;76_1121}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;2116;76_1121}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 _x_1_0 at_type_1_1 -> _predefined._Cons (update trans.empty_atype::syntax._AType [1:at_type_1_1]) (<{trans.c;2116;60_248}> g_t_1)) (_ -> <{trans.c;2116;60_248}> g_t_1)
trans.anon_251 !_x_0 = case _x_0 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_0 (syntax._BoundVar var_ident_2_0 var_info_ptr_2_1 var_expr_ptr_2_2 -> syntax._FreeVar -1 var_ident_2_0 var_info_ptr_2_1 0) ) 
trans.anon_250::B _x_0 = True
trans.MapAppend !_vList_0 !_vList_1 f_2 !_x_3 tail_4 = case _x_3 (<{_predefined._|Cons}> x_1_0 xs_1_1 -> select _vList_0::<{_SystemStrictLists.List;}> 0 (f_2 x_1_0) (trans.MapAppend _vList_0 _vList_1 f_2 xs_1_1 tail_4)) (<{_predefined._|Nil}> -> tail_4) 
trans.anon_249::I _x_0 = -4
trans.repeatn__575 !_vList_0 !_x_1::I _x_2 = case _x_1 (0 -> _SystemStrictLists._nil _vList_0) (_ -> select _vList_0::<{_SystemStrictLists.List;}> 0 _x_2 (trans.repeatn__575 _vList_0 (<{StdInt.-_7}> _x_1 StdInt.one_11) _x_2))
trans.take_574 !_vList_0 !_vList_1 !n_2::I !_x_3 = case _x_3 (<{_predefined._|Cons}> x_1_0 xs_1_1 -> case (StdBool.not (<{StdInt.<_17}> 1 n_2)) (True -> select _vList_0::<{_SystemStrictLists.List;}> 0 x_1_0 (_SystemStrictLists._nil _vList_0)) (False -> select _vList_0::<{_SystemStrictLists.List;}> 0 x_1_0 (trans.take_574 _vList_0 _vList_1 (<{StdInt.-_7}> n_2 1) xs_1_1)) ) (<{_predefined._|Nil}> -> case (StdBool.not (<{StdInt.<_17}> 0 n_2)) (True -> _SystemStrictLists._nil _vList_0) (False -> _SystemStrictLists._nil _vList_0) ) 
trans.repeatn__573 !_vList_0 !_x_1::I _x_2 = case _x_1 (0 -> _SystemStrictLists._nil _vList_0) (_ -> select _vList_0::<{_SystemStrictLists.List;}> 0 _x_2 (trans.repeatn__573 _vList_0 (<{StdInt.-_7}> _x_1 StdInt.one_11) _x_2))
trans.copy_classes_258 !_x_0::I _x_1 = case _x_0 (0 -> _predefined._Nil) (_ -> case _x_1 (_predefined._Cons cc_1_0 ccs_1_1 -> <{trans._c;2350;11_1123}> cc_1_0 _x_0 ccs_1_1) )
<{trans._c;2350;11_1123}> !cc_0::I _x_1::I ccs_2 = case cc_0 (-2 -> _predefined._Cons -4 (trans.copy_classes_258 (<{StdInt.-_7}> _x_1 StdInt.one_11) ccs_2)) (-1 -> _predefined._Cons -4 (trans.copy_classes_258 (<{StdInt.-_7}> _x_1 StdInt.one_11) ccs_2)) (_ -> _predefined._Cons cc_0 (trans.copy_classes_258 (<{StdInt.-_7}> _x_1 StdInt.one_11) ccs_2))
trans.repeatn__828 !_x_0::I _x_1::B = case _x_0 (0 -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) (_ -> _SystemStrictLists._cons_uts_41 _x_1 (trans.repeatn__828 (<{StdInt.-_7}> _x_0 StdInt.one_11) _x_1))
trans.repeatn__826 !_x_0::I _x_1::B = case _x_0 (0 -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) (_ -> _SystemStrictLists._cons_uts_41 _x_1 (trans.repeatn__826 (<{StdInt.-_7}> _x_0 StdInt.one_11) _x_1))
trans.take_827 !_vList_0 !n_1::I !_x_2 = case _x_2 (<{_predefined._|Cons}> x_1_0 xs_1_1 -> case (StdBool.not (<{StdInt.<_17}> 1 n_1)) (True -> _SystemStrictLists._cons_uts_41 x_1_0 (_SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))) (False -> _SystemStrictLists._cons_uts_41 x_1_0 (trans.take_827 _vList_0 (<{StdInt.-_7}> n_1 1) xs_1_1)) ) (<{_predefined._|Nil}> -> case (StdBool.not (<{StdInt.<_17}> 0 n_1)) (True -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) (False -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) ) 
trans.take_829 !n_0::I !_x_1 = case _x_1 (<{_predefined._|Cons}> x_1_0 xs_1_1 -> case (StdBool.not (<{StdInt.<_17}> 1 n_0)) (True -> _SystemStrictLists._cons_uts_41 x_1_0 (_SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))) (False -> _SystemStrictLists._cons_uts_41 x_1_0 (trans.take_829 (<{StdInt.-_7}> n_0 1) xs_1_1)) ) (<{_predefined._|Nil}> -> case (StdBool.not (<{StdInt.<_17}> 0 n_0)) (True -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) (False -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) ) 
trans.calc_cons_args_257 !_vArray_0 ro_1 curried_2::B !symb_kind_3 symbol_arity_4::I ti_cons_args_5 linear_bit_6::B size_fun_defs_7::I fun_heap_8 = let _x_1_0::I = <{trans._c;2308;19_1124}> symb_kind_3 ro_1 cons_size_1_5 ti_cons_args_1_4 _vArray_0 fun_heap_8 size_fun_defs_7, ti_cons_args_1_1 = select _x_1_0::_Tuple3 2, fun_heap_1_2 = select _x_1_0::_Tuple3 1, _x_1_3 = select _vArray_0::<{_SystemArray.Array;}> 7 ti_cons_args_5, ti_cons_args_1_4 = select _x_1_3::_Tuple2 1, cons_size_1_5 = select _x_1_3::_Tuple2 0 in <{trans._c;2329;11_1126}> (select _x_1_0::_Tuple3 0) symbol_arity_4 curried_2 linear_bit_6 fun_heap_1_2 ti_cons_args_1_1
<{trans._c;2329;11_1126}> !_x_0 symbol_arity_1::I curried_2::B linear_bit_3::B fun_heap_4 ti_cons_args_5 = case _x_0 (general.Yes cons_classes_1_0 -> _Tuple3 (syntax._ConsClasses symbol_arity_1 (trans.copy_classes_258 symbol_arity_1 (select cons_classes_1_0::syntax._ConsClasses 1)) (<{trans._if;2334;43_1125}> curried_2 symbol_arity_1 linear_bit_3 cons_classes_1_0) False) fun_heap_4 ti_cons_args_5) (general.No -> _Tuple3 (syntax._ConsClasses symbol_arity_1 (StdList.repeatn symbol_arity_1 -3) (trans.repeatn__828 symbol_arity_1 linear_bit_3) False) fun_heap_4 ti_cons_args_5) 
<{trans._if;2334;43_1125}> !curried_0::B !symbol_arity_1::I linear_bit_2::B cons_classes_3 = case curried_0 (True -> trans.repeatn__826 symbol_arity_1 linear_bit_2) (_ -> case (StdBool.not (<{StdInt.<_17}> 0 symbol_arity_1)) (True -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) (False -> trans.take_829 symbol_arity_1 (select cons_classes_3::syntax._ConsClasses 2)) )
<{trans._c;2308;19_1124}> !symb_kind_0 ro_1 cons_size_2::I ti_cons_args_3 _vArray_4 fun_heap_5 size_fun_defs_6::I = case symb_kind_0 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case (case (<{StdInt.==_16}> glob_module_2_1 (select ro_1::trans._ReadOnlyTI 4)) (True -> <{StdInt.<_17}> glob_object_2_0 cons_size_2) (False -> False) ) (True -> let _x_4_0 = select _vArray_4::<{_SystemArray.Array;}> 6 ti_cons_args_3 glob_object_2_0 in _Tuple3 (general.Yes (select _x_4_0::_Tuple2 0)) fun_heap_5 (select _x_4_0::_Tuple2 1)) (False -> _Tuple3 general.No fun_heap_5 ti_cons_args_3) ) ) (syntax.SK_LocalMacroFunction glob_object_1_0 -> case (<{StdInt.<_17}> glob_object_1_0 cons_size_2) (True -> let _x_3_0 = select _vArray_4::<{_SystemArray.Array;}> 6 ti_cons_args_3 glob_object_1_0 in _Tuple3 (general.Yes (select _x_3_0::_Tuple2 0)) fun_heap_5 (select _x_3_0::_Tuple2 1)) (False -> _Tuple3 general.No fun_heap_5 ti_cons_args_3) ) (syntax.SK_GeneratedFunction fun_ptr_1_0 fun_index_1_1 -> case (<{StdInt.<_17}> fun_index_1_1 cons_size_2) (True -> let _x_3_0 = select _vArray_4::<{_SystemArray.Array;}> 6 ti_cons_args_3 fun_index_1_1 in _Tuple3 (general.Yes (select _x_3_0::_Tuple2 0)) fun_heap_5 (select _x_3_0::_Tuple2 1)) (False -> case (<{StdInt.<_17}> fun_index_1_1 size_fun_defs_6) (True -> StdMisc.abort "sanity check failed in module trans") (False -> let _x_4_0 = Heap.readPtr fun_ptr_1_0 fun_heap_5 in _Tuple3 (general.Yes (select (select (select _x_4_0::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction 2)) (select _x_4_0::_Tuple2 1) ti_cons_args_3) ) ) (syntax.SK_Constructor _x_1_0 -> _Tuple3 general.No fun_heap_5 ti_cons_args_3) 
trans.attr_is_unique_261::B !_x_0 = case _x_0 (syntax.TA_Unique -> True) (_ -> False)
trans.split_args_260 !_x_0::I args_1 = case _x_0 (0 -> _Tuple3 _predefined._Nil args_1 False) (_ -> case args_1 (_predefined._Cons atype_1_0 args_1_1 -> case atype_1_0 (syntax._AType at_attribute_2_0 at_type_2_1 -> let _x_3_0 = trans.split_args_260 (<{StdInt.-_7}> _x_0 StdInt.one_11) args_1_1 in _Tuple3 (_predefined._Cons atype_1_0 (select _x_3_0::_Tuple3 0)) (select _x_3_0::_Tuple3 1) (trans._f1127_1127 (select _x_3_0::_Tuple3 2) at_attribute_2_0)) ) )
trans._f1127_1127::B !_x_0::B at_attribute_1 = case _x_0 (True -> True) (_ -> trans.attr_is_unique_261 at_attribute_1)
trans.combine_attributes_263 !_x_0 cum_attr_1 attr_env_2 attr_store_3::I = case _x_0 (syntax.TA_Unique -> _Tuple3 syntax.TA_Unique attr_env_2 attr_store_3) (syntax.TA_TempVar attr_var_1_0 -> case cum_attr_1 (syntax.TA_TempVar cum_attr_var_2_0 -> _Tuple3 (syntax.TA_TempVar attr_store_3) (_predefined._Cons (typesupport._AttrCoercion cum_attr_var_2_0 attr_store_3) (_predefined._Cons (typesupport._AttrCoercion attr_var_1_0 attr_store_3) attr_env_2)) (<{StdInt.+_6}> attr_store_3 StdInt.one_11)) (_ -> _Tuple3 cum_attr_1 attr_env_2 attr_store_3)) (_ -> case cum_attr_1 (syntax.TA_TempVar cum_attr_var_1_0 -> _Tuple3 (syntax.TA_TempVar attr_store_3) (_predefined._Cons (typesupport._AttrCoercion cum_attr_var_1_0 attr_store_3) attr_env_2) (<{StdInt.+_6}> attr_store_3 StdInt.one_11)) (_ -> _Tuple3 cum_attr_1 attr_env_2 attr_store_3))
trans.buildCurriedType !_x_0 type_1 cum_attr_2 attr_env_3 attr_store_4::I = case _x_0 (_predefined._Nil -> _Tuple3 type_1 attr_env_3 attr_store_4) (_predefined._Cons at_1_0 ats_1_1 -> case at_1_0 (syntax._AType at_attribute_2_0 at_type_2_1 -> let _x_3_0 = trans.combine_attributes_263 at_attribute_2_0 cum_attr_2 attr_env_3 attr_store_4, _x_3_1 = trans.buildCurriedType ats_1_1 type_1 (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2) in _Tuple3 (syntax._AType cum_attr_2 (<{syntax.-->}> at_1_0 (select _x_3_1::_Tuple3 0))) (select _x_3_1::_Tuple3 1) (select _x_3_1::_Tuple3 2)) ) 
trans.build_attr_env_262 cum_attr_var_0::I !_x_1 attr_env_2 = case _x_1 (_predefined._Nil -> attr_env_2) (_predefined._Cons _x_1_0 args_1_1 -> case _x_1_0 (syntax._AType _x_2_0 at_type_2_1 -> case _x_2_0 (syntax.TA_TempVar attr_var_3_0 -> trans.build_attr_env_262 cum_attr_var_0 args_1_1 (_predefined._Cons (typesupport._AttrCoercion attr_var_3_0 cum_attr_var_0) attr_env_2)) ) (_ -> trans.build_attr_env_262 cum_attr_var_0 args_1_1 attr_env_2)) 
trans.currySymbolType tst_args_0 !tst_arity_1::I tst_result_2 tst_attr_env_3 !req_arity_4::I ts_attr_store_5::I = case (<{StdInt.==_16}> tst_arity_1 req_arity_4) (True -> _Tuple3 tst_result_2 tst_attr_env_3 ts_attr_store_5) (False -> let _x_2_0 = trans.split_args_260 req_arity_4 tst_args_0 in case (select _x_2_0::_Tuple3 2) (True -> _Tuple3 (select (trans.buildCurriedType (select _x_2_0::_Tuple3 1) tst_result_2 syntax.TA_Unique _predefined._Nil 0)::_Tuple3 0) tst_attr_env_3 ts_attr_store_5) (False -> let _x_4_0 = trans.buildCurriedType (select _x_2_0::_Tuple3 1) tst_result_2 (syntax.TA_TempVar ts_attr_store_5) (trans.build_attr_env_262 ts_attr_store_5 (select _x_2_0::_Tuple3 0) tst_attr_env_3) (<{StdInt.+_6}> ts_attr_store_5 StdInt.one_11) in _Tuple3 (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) 
trans.build_application_type_259 !st_arity_0::I !nr_context_args_1::I st_result_2 st_args_3 !nr_of_applied_args_4::I attr_env_5 attr_store_6::I = case (<{StdInt.==_16}> (<{StdInt.+_6}> st_arity_0 nr_context_args_1) nr_of_applied_args_4) (True -> _Tuple3 st_result_2 attr_env_5 attr_store_6) (False -> case (<{StdInt.<_17}> nr_of_applied_args_4 nr_context_args_1) (True -> StdMisc.abort "sanity check nr 234 failed in module trans") (False -> trans.currySymbolType st_args_3 st_arity_0 st_result_2 attr_env_5 (<{StdInt.-_7}> nr_of_applied_args_4 nr_context_args_1) attr_store_6) ) 
trans.pointer_to_int_197::I !_x_0 !th_attrs_1 = case _x_0 (syntax._AttributeVar av_ident_1_0 av_info_ptr_1_1 -> select (select (Heap.sreadPtr av_info_ptr_1_1 th_attrs_1)::_Tuple1 0)::_Tuple1 0) 
trans.substitute_attr_inequality !_x_0 !th_attrs_1 = case _x_0 (syntax._AttrInequality ai_demanded_1_0 ai_offered_1_1 -> let !ac_offered_2_0::I = trans.pointer_to_int_197 ai_offered_1_1 th_attrs_1, !ac_demanded_2_1::I = trans.pointer_to_int_197 ai_demanded_1_0 th_attrs_1 in _Tuple2 (typesupport._AttrCoercion ac_demanded_2_1 ac_offered_2_0) th_attrs_1) 
trans.build_var_args_256 !_x_0 form_vars_1 act_vars_2 var_heap_3 = case _x_0 (_predefined._Nil -> _Tuple3 form_vars_1 act_vars_2 var_heap_3) (_predefined._Cons new_name_1_0 new_names_1_1 -> let _x_2_0 = Heap.newPtr syntax.VI_Empty var_heap_3, info_ptr_2_1 = select _x_2_0::_Tuple2 0 in trans.build_var_args_256 new_names_1_1 (_predefined._Cons (syntax._FreeVar -1 new_name_1_0 info_ptr_2_1 0) form_vars_1) (_predefined._Cons (syntax.Var (syntax._BoundVar new_name_1_0 info_ptr_2_1 Heap.nilPtr)) act_vars_2) (select _x_2_0::_Tuple2 1)) 
trans.build_n_anonymous_var_args_254 !arity_0::I das_vars_1 das_var_heap_2 = trans.build_var_args_256 (StdList.repeatn arity_0 (syntax._Ident "_x" Heap.nilPtr)) das_vars_1 _predefined._Nil das_var_heap_2
<{trans.c;2294;44_252}> !g_l_0 = <{trans.g_c1;2294;57_1129}> g_l_0
<{trans.g_c1;2294;57_1129}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;2294;57_1128}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;2294;57_1128}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons fv_ident_1_1 (<{trans.c;2294;44_252}> g_t_1)) (_ -> <{trans.c;2294;44_252}> g_t_1)
trans.build_n_named_var_args_255 !arity_0::I tb_args_1 das_vars_2 das_var_heap_3 = trans.build_var_args_256 (StdList.reverse (StdList.take arity_0 (<{trans.c;2294;44_252}> tb_args_1))) das_vars_2 _predefined._Nil das_var_heap_3
trans.make_producer_expression_and_args_253 ro_0 !_x_1 _x_2 _x_3 das_vars_4 das_fun_defs_5 das_fun_heap_6 das_var_heap_7 = case _x_1 (syntax.PR_Constructor symbol_1_0 arity_1_1 _x_1_2 -> case symbol_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> case symb_kind_2_1 (syntax.SK_Constructor _x_3_0 -> case _x_3_0 (syntax._Global glob_object_4_0 glob_module_4_1 -> let _x_5_0 = trans.build_n_anonymous_var_args_254 arity_1_1 das_vars_4 das_var_heap_7 in _Tuple5 (syntax.VI_Expression (syntax.App (syntax._App symbol_1_0 (select _x_5_0::_Tuple3 1) Heap.nilPtr))) (select _x_5_0::_Tuple3 0) das_fun_defs_5 das_fun_heap_6 (select _x_5_0::_Tuple3 2)) ) ) ) (syntax.PR_Curried symbol_1_0 arity_1_1 -> case symbol_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> case symb_kind_2_1 (syntax.SK_Function _x_3_0 -> case _x_3_0 (syntax._Global glob_object_4_0 glob_module_4_1 -> case (StdBool.not (<{StdInt.==_16}> glob_module_4_1 (select ro_0::trans._ReadOnlyTI 4))) (True -> let _x_6_0 = trans.build_n_anonymous_var_args_254 arity_1_1 das_vars_4 das_var_heap_7 in _Tuple5 (syntax.VI_Expression (syntax.App (syntax._App symbol_1_0 (select _x_6_0::_Tuple3 1) Heap.nilPtr))) (select _x_6_0::_Tuple3 0) das_fun_defs_5 das_fun_heap_6 (select _x_6_0::_Tuple3 2)) ) ) (_ -> let _x_3_0 = trans.get_fun_def symb_kind_2_1 (select ro_0::trans._ReadOnlyTI 4) das_fun_defs_5 das_fun_heap_6, das_fun_heap_3_1 = select _x_3_0::_Tuple3 2, das_fun_defs_3_2 = select _x_3_0::_Tuple3 1 in <{trans._c;2255;11_1130}> (select (select _x_3_0::_Tuple3 0)::syntax._FunDef 3) arity_1_1 das_vars_4 das_var_heap_7 symbol_1_0 das_fun_defs_3_2 das_fun_heap_3_1)) ) (syntax.PR_Function symbol_1_0 arity_1_1 _x_1_2 -> case symbol_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> let _x_3_0 = trans.get_fun_def symb_kind_2_1 (select ro_0::trans._ReadOnlyTI 4) das_fun_defs_5 das_fun_heap_6, das_fun_heap_3_1 = select _x_3_0::_Tuple3 2, das_fun_defs_3_2 = select _x_3_0::_Tuple3 1 in <{trans._c;2266;11_1131}> (select (select _x_3_0::_Tuple3 0)::syntax._FunDef 3) arity_1_1 das_vars_4 das_var_heap_7 symbol_1_0 _x_2 _x_3 das_fun_defs_3_2 das_fun_heap_3_1) ) (syntax.PR_GeneratedFunction symbol_1_0 arity_1_1 _x_1_2 -> case symbol_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> let _x_3_0 = trans.get_fun_def symb_kind_2_1 (select ro_0::trans._ReadOnlyTI 4) das_fun_defs_5 das_fun_heap_6, das_fun_heap_3_1 = select _x_3_0::_Tuple3 2, das_fun_defs_3_2 = select _x_3_0::_Tuple3 1 in <{trans._c;2274;11_1132}> (select (select _x_3_0::_Tuple3 0)::syntax._FunDef 3) arity_1_1 das_vars_4 das_var_heap_7 symbol_1_0 _x_2 _x_3 das_fun_defs_3_2 das_fun_heap_3_1) ) (syntax.PR_CurriedFunction symbol_1_0 arity_1_1 _x_1_2 -> case symbol_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> let _x_3_0 = trans.get_fun_def symb_kind_2_1 (select ro_0::trans._ReadOnlyTI 4) das_fun_defs_5 das_fun_heap_6, das_fun_heap_3_1 = select _x_3_0::_Tuple3 2, das_fun_defs_3_2 = select _x_3_0::_Tuple3 1 in <{trans._c;2282;11_1133}> (select (select _x_3_0::_Tuple3 0)::syntax._FunDef 3) arity_1_1 das_vars_4 das_var_heap_7 symbol_1_0 _x_2 _x_3 das_fun_defs_3_2 das_fun_heap_3_1) ) 
<{trans._c;2282;11_1133}> !_x_0 arity_1::I das_vars_2 das_var_heap_3 symbol_4 _x_5 _x_6 das_fun_defs_7 das_fun_heap_8 = case _x_0 (syntax.TransformedBody tb_1_0 -> case tb_1_0 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> let _x_3_0 = trans.build_n_named_var_args_255 arity_1 tb_args_2_0 das_vars_2 das_var_heap_3, form_vars_3_1 = select _x_3_0::_Tuple3 0 in _Tuple5 (syntax.VI_ExpressionOrBody (syntax.App (syntax._App symbol_4 (select _x_3_0::_Tuple3 1) Heap.nilPtr)) symbol_4 tb_1_0 (StdList.take arity_1 form_vars_3_1) _x_5 _x_6) form_vars_3_1 das_fun_defs_7 das_fun_heap_8 (select _x_3_0::_Tuple3 2)) ) 
<{trans._c;2274;11_1132}> !_x_0 arity_1::I das_vars_2 das_var_heap_3 symbol_4 _x_5 _x_6 das_fun_defs_7 das_fun_heap_8 = case _x_0 (syntax.TransformedBody tb_1_0 -> case tb_1_0 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> let _x_3_0 = trans.build_n_named_var_args_255 arity_1 tb_args_2_0 das_vars_2 das_var_heap_3, form_vars_3_1 = select _x_3_0::_Tuple3 0 in _Tuple5 (syntax.VI_Body symbol_4 tb_1_0 (StdList.take arity_1 form_vars_3_1) _x_5 _x_6) form_vars_3_1 das_fun_defs_7 das_fun_heap_8 (select _x_3_0::_Tuple3 2)) ) 
<{trans._c;2266;11_1131}> !_x_0 arity_1::I das_vars_2 das_var_heap_3 symbol_4 _x_5 _x_6 das_fun_defs_7 das_fun_heap_8 = case _x_0 (syntax.TransformedBody tb_1_0 -> case tb_1_0 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> let _x_3_0 = trans.build_n_named_var_args_255 arity_1 tb_args_2_0 das_vars_2 das_var_heap_3, form_vars_3_1 = select _x_3_0::_Tuple3 0 in _Tuple5 (syntax.VI_Body symbol_4 tb_1_0 (StdList.take arity_1 form_vars_3_1) _x_5 _x_6) form_vars_3_1 das_fun_defs_7 das_fun_heap_8 (select _x_3_0::_Tuple3 2)) ) 
<{trans._c;2255;11_1130}> !_x_0 arity_1::I das_vars_2 das_var_heap_3 symbol_4 das_fun_defs_5 das_fun_heap_6 = case _x_0 (syntax.TransformedBody tb_1_0 -> case tb_1_0 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> let _x_3_0 = trans.build_n_named_var_args_255 arity_1 tb_args_2_0 das_vars_2 das_var_heap_3 in _Tuple5 (syntax.VI_Expression (syntax.App (syntax._App symbol_4 (select _x_3_0::_Tuple3 1) Heap.nilPtr))) (select _x_3_0::_Tuple3 0) das_fun_defs_5 das_fun_heap_6 (select _x_3_0::_Tuple3 2)) ) (_ -> let _x_1_0 = trans.build_n_anonymous_var_args_254 arity_1 das_vars_2 das_var_heap_3 in _Tuple5 (syntax.VI_Expression (syntax.App (syntax._App symbol_4 (select _x_1_0::_Tuple3 1) Heap.nilPtr))) (select _x_1_0::_Tuple3 0) das_fun_defs_5 das_fun_heap_6 (select _x_1_0::_Tuple3 2))
trans.subFVT_830 !_x_0 type_heaps_1 = case _x_0 (_Tuple2 fv_1_0 ty_1_1 -> let _x_2_0 = expand_types.substitute_7 ty_1_1 type_heaps_1 in _Tuple2 (_Tuple2 fv_1_0 (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) 
trans.map_st_831 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.subFVT_830 x_1_0 s_1, _x_2_2 = trans.map_st_831 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.MapAppend_832 !_vList_0 f_1 !_x_2 !tail_3 = case _x_2 (<{_predefined._|Cons}> x_1_0 xs_1_1 -> _SystemStrictLists._cons_uts_41 (f_1 x_1_0) (trans.MapAppend_832 _vList_0 f_1 xs_1_1 tail_3)) (<{_predefined._|Nil}> -> tail_3) 
trans.calc_cons_args_833 ro_0 curried_1::B !symb_kind_2 symbol_arity_3::I ti_cons_args_4 linear_bit_5::B size_fun_defs_6::I fun_heap_7 = let _x_1_0::I = <{trans._c;2308;19_1134}> symb_kind_2 ro_0 cons_size_1_5 ti_cons_args_1_4 fun_heap_7 size_fun_defs_6, ti_cons_args_1_1 = select _x_1_0::_Tuple3 2, fun_heap_1_2 = select _x_1_0::_Tuple3 1, _x_1_3 = _SystemArray.usize_7 ti_cons_args_4, ti_cons_args_1_4 = select _x_1_3::_Tuple2 1, cons_size_1_5 = select _x_1_3::_Tuple2 0 in <{trans._c;2329;11_1136}> (select _x_1_0::_Tuple3 0) symbol_arity_3 curried_1 linear_bit_5 fun_heap_1_2 ti_cons_args_1_1
<{trans._c;2329;11_1136}> !_x_0 symbol_arity_1::I curried_2::B linear_bit_3::B fun_heap_4 ti_cons_args_5 = case _x_0 (general.Yes cons_classes_1_0 -> _Tuple3 (syntax._ConsClasses symbol_arity_1 (trans.copy_classes_258 symbol_arity_1 (select cons_classes_1_0::syntax._ConsClasses 1)) (<{trans._if;2334;43_1135}> curried_2 symbol_arity_1 linear_bit_3 cons_classes_1_0) False) fun_heap_4 ti_cons_args_5) (general.No -> _Tuple3 (syntax._ConsClasses symbol_arity_1 (StdList.repeatn symbol_arity_1 -3) (trans.repeatn__828 symbol_arity_1 linear_bit_3) False) fun_heap_4 ti_cons_args_5) 
<{trans._if;2334;43_1135}> !curried_0::B !symbol_arity_1::I linear_bit_2::B cons_classes_3 = case curried_0 (True -> trans.repeatn__826 symbol_arity_1 linear_bit_2) (_ -> case (StdBool.not (<{StdInt.<_17}> 0 symbol_arity_1)) (True -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) (False -> trans.take_829 symbol_arity_1 (select cons_classes_3::syntax._ConsClasses 2)) )
<{trans._c;2308;19_1134}> !symb_kind_0 ro_1 cons_size_2::I ti_cons_args_3 fun_heap_4 size_fun_defs_5::I = case symb_kind_0 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case (case (<{StdInt.==_16}> glob_module_2_1 (select ro_1::trans._ReadOnlyTI 4)) (True -> <{StdInt.<_17}> glob_object_2_0 cons_size_2) (False -> False) ) (True -> let _x_4_0 = _SystemArray.uselect_6 ti_cons_args_3 glob_object_2_0 in _Tuple3 (general.Yes (select _x_4_0::_Tuple2 0)) fun_heap_4 (select _x_4_0::_Tuple2 1)) (False -> _Tuple3 general.No fun_heap_4 ti_cons_args_3) ) ) (syntax.SK_LocalMacroFunction glob_object_1_0 -> case (<{StdInt.<_17}> glob_object_1_0 cons_size_2) (True -> let _x_3_0 = _SystemArray.uselect_6 ti_cons_args_3 glob_object_1_0 in _Tuple3 (general.Yes (select _x_3_0::_Tuple2 0)) fun_heap_4 (select _x_3_0::_Tuple2 1)) (False -> _Tuple3 general.No fun_heap_4 ti_cons_args_3) ) (syntax.SK_GeneratedFunction fun_ptr_1_0 fun_index_1_1 -> case (<{StdInt.<_17}> fun_index_1_1 cons_size_2) (True -> let _x_3_0 = _SystemArray.uselect_6 ti_cons_args_3 fun_index_1_1 in _Tuple3 (general.Yes (select _x_3_0::_Tuple2 0)) fun_heap_4 (select _x_3_0::_Tuple2 1)) (False -> case (<{StdInt.<_17}> fun_index_1_1 size_fun_defs_5) (True -> StdMisc.abort "sanity check failed in module trans") (False -> let _x_4_0 = Heap.readPtr fun_ptr_1_0 fun_heap_4 in _Tuple3 (general.Yes (select (select (select _x_4_0::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction 2)) (select _x_4_0::_Tuple2 1) ti_cons_args_3) ) ) (syntax.SK_Constructor _x_1_0 -> _Tuple3 general.No fun_heap_4 ti_cons_args_3) 
trans.map_st_835 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.substitute_attr_inequality x_1_0 s_1, _x_2_2 = trans.map_st_835 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.mapSt_834 !l_0 !s_1 = trans.map_st_835 l_0 s_1
<{trans.++||_836}> !_vList_0 !_x_1 !list_2 = case _x_1 (<{_predefined._|Cons}> hd_1_0 tl_1_1 -> _SystemStrictLists._cons_uts_41 hd_1_0 (<{trans.++||_836}> _vList_0 tl_1_1 list_2)) (_ -> list_2)
trans.MapAppend_837 f_0 !_x_1 !tail_2 = case _x_1 (<{_predefined._|Cons}> x_1_0 xs_1_1 -> _SystemStrictLists._cons_uts_41 (f_0 x_1_0) (trans.MapAppend_837 f_0 xs_1_1 tail_2)) (<{_predefined._|Nil}> -> tail_2) 
<{trans.++||_838}> !_x_0 !list_1 = case _x_0 (<{_predefined._|Cons}> hd_1_0 tl_1_1 -> _SystemStrictLists._cons_uts_41 hd_1_0 (<{trans.++||_838}> tl_1_1 list_1)) (_ -> list_1)
trans.determine_arg !_x_0 _x_1 !form_2 _x_3::I !_x_4 !das_5 = case _x_0 (syntax.PR_Empty -> case form_2 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> case _x_4 (_Tuple2 _x_3_0 _x_3_1 -> case _x_3_0 (_Tuple2 linear_bit_4_0 cons_arg_4_1 -> case das_5 (trans._DetermineArgsState das_vars_5_0 das_arg_types_5_1 das_next_attr_nr_5_2 das_new_linear_bits_5_3 das_new_cons_args_5_4 das_uniqueness_requirements_5_5 das_AV_5_6 das_subst_5_7 das_type_heaps_5_8 das_fun_defs_5_9 das_fun_heap_5_10 das_var_heap_5_11 das_cons_args_5_12 das_predef_5_13 das_removed_equal_info_ptr_5_14 -> let _x_6_0 = Heap.newPtr syntax.VI_Empty das_var_heap_5_11, new_info_ptr_6_1 = select _x_6_0::_Tuple2 0 in update das_5::trans._DetermineArgsState [0:_predefined._Cons (update form_2::syntax._FreeVar [2:new_info_ptr_6_1]) (select das_5::trans._DetermineArgsState 0),3:_SystemStrictLists._cons_uts_41 linear_bit_4_0 (select das_5::trans._DetermineArgsState 3),4:_predefined._Cons cons_arg_4_1 (select das_5::trans._DetermineArgsState 4),11:trans.writeVarInfo fv_info_ptr_2_2 (syntax.VI_Variable fv_ident_2_1 new_info_ptr_6_1) (select _x_6_0::_Tuple2 1)]) ) ) ) ) (syntax.PR_Unused -> case _x_4 (_Tuple2 _x_2_0 ro_2_1 -> update das_5::trans._DetermineArgsState [1:trans.update_717 (select das_5::trans._DetermineArgsState 1) _x_3 (trans._ATypesWithStrictness _predefined._Nil syntax.NotStrict)]) ) (syntax.PR_Class class_app_1_0 free_vars_and_types_1_1 class_type_1_2 -> case form_2 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> case _x_4 (_Tuple2 _x_3_0 ro_3_1 -> case das_5 (trans._DetermineArgsState das_vars_4_0 das_arg_types_4_1 das_next_attr_nr_4_2 das_new_linear_bits_4_3 das_new_cons_args_4_4 das_uniqueness_requirements_4_5 das_AV_4_6 das_subst_4_7 das_type_heaps_4_8 das_fun_defs_4_9 das_fun_heap_4_10 das_var_heap_4_11 das_cons_args_4_12 das_predef_4_13 das_removed_equal_info_ptr_4_14 -> let !_x_5_0 = trans.uselect_662 das_predef_4_13 194, !_x_5_1 = trans.uselect_662 (select _x_5_0::_Tuple2 1) 195, defTypeGenericDict_5_2 = select _x_5_0::_Tuple2 0, defTypeGenericDict0_5_3 = select _x_5_1::_Tuple2 0, _x_5_4 = expand_types.substitute_7 class_type_1_2 das_type_heaps_4_8, int_class_type_5_5 = select _x_5_4::_Tuple3 1, class_atype_5_6 = update trans.empty_atype::syntax._AType [1:int_class_type_5_5], _x_5_7 = trans.uselect_718 das_arg_types_4_1 _x_3, ws_arg_type_5_8 = select _x_5_7::_Tuple2 0, _x_5_9 = select ws_arg_type_5_8::trans._ATypesWithStrictness 0, arg_type_5_10 = select _x_5_9::_Tuple2 0, type_input_5_11 = type._TypeInput (select ro_3_1::trans._ReadOnlyTI 1) (select ro_3_1::trans._ReadOnlyTI 0) (select ro_3_1::trans._ReadOnlyTI 4) True, das_type_heaps_5_12 = select _x_5_4::_Tuple3 2, _x_5_13 = trans.unify_dict_246 defTypeGenericDict_5_2 defTypeGenericDict0_5_3 class_atype_5_6 arg_type_5_10 type_input_5_11 das_subst_4_7 das_type_heaps_5_12 in case (StdBool.not (select _x_5_13::_Tuple3 0)) (True -> StdMisc.abort (<{general.--->}> (<{StdFile.<<<;}> (<{general.<<<_8}> (<{StdFile.<<<;}> <{syntax.<<<_28}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdFile.<<<;}> <{syntax.<<<_28}>))) "sanity check nr 93 in module trans failed\n" (_Tuple3 class_atype_5_6 "\n" arg_type_5_10))) (False -> let _x_7_0 = trans.map_st_831 free_vars_and_types_1_1 (select _x_5_13::_Tuple3 2), free_vars_and_types_7_1 = select _x_7_0::_Tuple2 0 in update das_5::trans._DetermineArgsState [0:utilities.mapAppend trans.anon_251 free_vars_and_types_7_1 (select das_5::trans._DetermineArgsState 0),1:trans.update_717 (select _x_5_7::_Tuple2 1) _x_3 (trans._ATypesWithStrictness (<{trans.c;2116;60_248}> free_vars_and_types_7_1) (containers.first_n_strict (StdList.length_47 free_vars_and_types_7_1))),3:trans.MapAppend_837 trans.anon_250 free_vars_and_types_7_1 (select das_5::trans._DetermineArgsState 3),4:utilities.mapAppend trans.anon_249 free_vars_and_types_7_1 (select das_5::trans._DetermineArgsState 4),7:select _x_5_13::_Tuple3 1,8:select _x_7_0::_Tuple2 1,11:trans.writeVarInfo fv_info_ptr_2_2 (syntax.VI_Dictionary (select class_app_1_0::syntax._App 0) (select class_app_1_0::syntax._App 1) class_type_1_2) (select das_5::trans._DetermineArgsState 11),13:select _x_5_1::_Tuple2 1]) ) ) ) ) (syntax.PR_String s_1_0 -> case form_2 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> case _x_4 (_Tuple2 _x_3_0 ro_3_1 -> case das_5 (trans._DetermineArgsState das_vars_4_0 das_arg_types_4_1 das_next_attr_nr_4_2 das_new_linear_bits_4_3 das_new_cons_args_4_4 das_uniqueness_requirements_4_5 das_AV_4_6 das_subst_4_7 das_type_heaps_4_8 das_fun_defs_4_9 das_fun_heap_4_10 das_var_heap_4_11 das_cons_args_4_12 das_predef_4_13 das_removed_equal_info_ptr_4_14 -> update das_5::trans._DetermineArgsState [1:trans.update_717 das_arg_types_4_1 _x_3 (trans._ATypesWithStrictness _predefined._Nil syntax.NotStrict),11:trans.writeVarInfo fv_info_ptr_2_2 (syntax.VI_Expression (syntax.BasicExpr (syntax.BVS s_1_0))) das_var_heap_4_11]) ) ) ) (syntax.PR_Int i_1_0 -> case form_2 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> case _x_4 (_Tuple2 _x_3_0 ro_3_1 -> case das_5 (trans._DetermineArgsState das_vars_4_0 das_arg_types_4_1 das_next_attr_nr_4_2 das_new_linear_bits_4_3 das_new_cons_args_4_4 das_uniqueness_requirements_4_5 das_AV_4_6 das_subst_4_7 das_type_heaps_4_8 das_fun_defs_4_9 das_fun_heap_4_10 das_var_heap_4_11 das_cons_args_4_12 das_predef_4_13 das_removed_equal_info_ptr_4_14 -> update das_5::trans._DetermineArgsState [1:trans.update_717 das_arg_types_4_1 _x_3 (trans._ATypesWithStrictness _predefined._Nil syntax.NotStrict),11:trans.writeVarInfo fv_info_ptr_2_2 (syntax.VI_Expression (syntax.BasicExpr (syntax.BVInt i_1_0))) das_var_heap_4_11]) ) ) ) (syntax.PR_Equal arg_index_1_0 -> case form_2 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> case _x_4 (_Tuple2 _x_3_0 ro_3_1 -> case _x_3_0 (_Tuple2 linear_bit_4_0 cons_arg_4_1 -> case das_5 (trans._DetermineArgsState das_vars_5_0 das_arg_types_5_1 das_next_attr_nr_5_2 das_new_linear_bits_5_3 das_new_cons_args_5_4 das_uniqueness_requirements_5_5 das_AV_5_6 das_subst_5_7 das_type_heaps_5_8 das_fun_defs_5_9 das_fun_heap_5_10 das_var_heap_5_11 das_cons_args_5_12 das_predef_5_13 das_removed_equal_info_ptr_5_14 -> let _x_6_0 = Heap.newPtr syntax.VI_Empty das_var_heap_5_11, new_info_ptr_6_1 = select _x_6_0::_Tuple2 0, var_info_6_2 = syntax.VI_Variable fv_ident_2_1 new_info_ptr_6_1 in update das_5::trans._DetermineArgsState [0:_predefined._Cons (update form_2::syntax._FreeVar [2:new_info_ptr_6_1]) (select das_5::trans._DetermineArgsState 0),3:_SystemStrictLists._cons_uts_41 False (select das_5::trans._DetermineArgsState 3),4:_predefined._Cons -3 (select das_5::trans._DetermineArgsState 4),11:trans.writeVarInfo das_removed_equal_info_ptr_5_14 var_info_6_2 (trans.writeVarInfo fv_info_ptr_2_2 var_info_6_2 (select _x_6_0::_Tuple2 1))]) ) ) ) ) (syntax.PR_EqualRemove arg_index_1_0 -> case form_2 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> case _x_4 (_Tuple2 _x_3_0 ro_3_1 -> case das_5 (trans._DetermineArgsState das_vars_4_0 das_arg_types_4_1 das_next_attr_nr_4_2 das_new_linear_bits_4_3 das_new_cons_args_4_4 das_uniqueness_requirements_4_5 das_AV_4_6 das_subst_4_7 das_type_heaps_4_8 das_fun_defs_4_9 das_fun_heap_4_10 das_var_heap_4_11 das_cons_args_4_12 das_predef_4_13 das_removed_equal_info_ptr_4_14 -> let _x_5_0 = select (trans.select_715 das_arg_types_4_1 _x_3)::trans._ATypesWithStrictness 0, _x_5_1 = select _x_5_0::_Tuple2 0, prod_type_5_2 = select _x_5_1::_Tuple2 0, das_arg_types_5_3 = select _x_5_0::_Tuple2 1, _x_5_4 = select (trans.select_715 das_arg_types_5_3 arg_index_1_0)::trans._ATypesWithStrictness 0, _x_5_5 = select _x_5_4::_Tuple2 0, arg_type_5_6 = select _x_5_5::_Tuple2 0, type_input_5_7 = type._TypeInput (select ro_3_1::trans._ReadOnlyTI 1) (select ro_3_1::trans._ReadOnlyTI 0) (select ro_3_1::trans._ReadOnlyTI 4) True, _x_5_8 = type.unify_3 prod_type_5_2 arg_type_5_6 type_input_5_7 das_subst_4_7 das_type_heaps_4_8 in case (StdBool.not (select _x_5_8::_Tuple3 0)) (True -> StdMisc.abort "Error in compiler: unification in module trans failed\n") (False -> update das_5::trans._DetermineArgsState [1:trans.update_717 (select _x_5_4::_Tuple2 1) _x_3 (trans._ATypesWithStrictness _predefined._Nil syntax.NotStrict),7:select _x_5_8::_Tuple3 1,8:select _x_5_8::_Tuple3 2,14:fv_info_ptr_2_2]) ) ) ) ) (_ -> case _x_1 (trans.ProducerType _x_1_0 original_type_vars_1_1 -> case _x_1_0 (syntax._SymbolType st_vars_2_0 st_args_2_1 st_args_strictness_2_2 st_arity_2_3 st_result_2_4 st_context_2_5 st_attr_vars_2_6 st_attr_env_2_7 -> case form_2 (syntax._FreeVar fv_def_level_3_0 fv_ident_3_1 fv_info_ptr_3_2 fv_count_3_3 -> case _x_4 (_Tuple2 _x_4_0 ro_4_1 -> case _x_4_0 (_Tuple2 linear_bit_5_0 _x_5_1 -> case das_5 (trans._DetermineArgsState das_vars_6_0 das_arg_types_6_1 das_next_attr_nr_6_2 das_new_linear_bits_6_3 das_new_cons_args_6_4 das_uniqueness_requirements_6_5 das_AV_6_6 das_subst_6_7 das_type_heaps_6_8 das_fun_defs_6_9 das_fun_heap_6_10 das_var_heap_6_11 das_cons_args_6_12 das_predef_6_13 das_removed_equal_info_ptr_6_14 -> let !size_fun_defs_7_0::I = trans.size_652 das_fun_defs_6_9, th_vars_7_1 = select das_type_heaps_6_8::syntax._TypeHeaps 0, th_attrs_7_2 = select das_type_heaps_6_8::syntax._TypeHeaps 1, _x_7_3 = trans.bind_to_temp_attr_vars st_attr_vars_2_6 (_Tuple2 das_next_attr_nr_6_2 th_attrs_7_2), th_attrs_7_4 = select _x_7_3::_Tuple2 1, _x_7_5 = expand_types.substitute_17 st_args_2_1 (update das_type_heaps_6_8::syntax._TypeHeaps [0:th_vars_7_1,1:th_attrs_7_4]), das_type_heaps_7_6 = select _x_7_5::_Tuple3 2, _x_7_7 = expand_types.substitute_8 st_result_2_4 das_type_heaps_7_6, st_result_7_8 = select _x_7_7::_Tuple3 1, st_args_7_9 = select _x_7_5::_Tuple3 1, _x_7_10::I = trans.get_producer_symbol _x_0, symbol_arity_7_11::I = select _x_7_10::_Tuple2 1, das_next_attr_nr_7_12 = select _x_7_3::_Tuple2 0, _x_7_13 = trans.build_application_type_259 st_arity_2_3 (StdList.length_47 st_context_2_5) st_result_7_8 st_args_7_9 symbol_arity_7_11 _predefined._Nil das_next_attr_nr_7_12, application_type_7_14 = select _x_7_13::_Tuple3 0, _x_7_15 = trans.uselect_718 das_arg_types_6_1 _x_3, _x_7_16 = select _x_7_15::_Tuple2 0, _x_7_17 = select _x_7_16::trans._ATypesWithStrictness 0, arg_type_7_18 = select _x_7_17::_Tuple2 0, type_input_7_19 = type._TypeInput (select ro_4_1::trans._ReadOnlyTI 1) (select ro_4_1::trans._ReadOnlyTI 0) (select ro_4_1::trans._ReadOnlyTI 4) True, das_type_heaps_7_20 = select _x_7_7::_Tuple3 2, _x_7_21 = type.unify_3 application_type_7_14 arg_type_7_18 type_input_7_19 das_subst_6_7 das_type_heaps_7_20 in case (StdBool.not (select _x_7_21::_Tuple3 0)) (True -> StdMisc.abort "Error in compiler: unification in module trans failed\n") (False -> let _x_9_0 = trans.calc_cons_args_833 ro_4_1 (<{trans._c;2172;35_1137}> _x_0) (select (select _x_7_10::_Tuple2 0)::syntax._SymbIdent 1) symbol_arity_7_11 das_cons_args_6_12 linear_bit_5_0 size_fun_defs_7_0 das_fun_heap_6_10, _x_9_1 = trans.make_producer_expression_and_args_253 ro_4_1 _x_0 original_type_vars_1_1 st_vars_2_0 (select das_5::trans._DetermineArgsState 0) das_fun_defs_6_9 (select _x_9_0::_Tuple3 1) das_var_heap_6_11, _x_9_2 = select _x_9_0::_Tuple3 0, das_type_heaps_9_3 = select _x_7_21::_Tuple3 2, _x_9_4 = trans.mapSt_834 st_attr_env_2_7 (select das_type_heaps_9_3::syntax._TypeHeaps 1), _x_9_5 = _Tuple2 (select _x_9_4::_Tuple2 0) (update das_type_heaps_9_3::syntax._TypeHeaps [1:select _x_9_4::_Tuple2 1]) in update das_5::trans._DetermineArgsState [0:select _x_9_1::_Tuple5 1,1:trans.update_717 (select _x_7_15::_Tuple2 1) _x_3 (trans._ATypesWithStrictness (StdList.take symbol_arity_7_11 st_args_7_9) st_args_strictness_2_2),2:select _x_7_13::_Tuple3 2,3:<{trans.++||_838}> (select _x_9_2::syntax._ConsClasses 2) (select das_5::trans._DetermineArgsState 3),4:<{StdList.++}> (select _x_9_2::syntax._ConsClasses 1) (select das_5::trans._DetermineArgsState 4),5:_predefined._Cons (trans._UniquenessRequirement application_type_7_14 arg_type_7_18 (<{StdList.++}> (select _x_9_5::_Tuple2 0) (select _x_7_13::_Tuple3 1))) (select das_5::trans._DetermineArgsState 5),6:_predefined._Cons st_attr_vars_2_6 das_AV_6_6,7:select _x_7_21::_Tuple3 1,8:select _x_9_5::_Tuple2 1,9:select _x_9_1::_Tuple5 2,10:select _x_9_1::_Tuple5 3,11:trans.writeVarInfo fv_info_ptr_3_2 (select _x_9_1::_Tuple5 0) (select _x_9_1::_Tuple5 4),12:select _x_9_0::_Tuple3 2]) ) ) ) ) ) ) )
<{trans._c;2172;35_1137}>::B !_x_0 = case _x_0 (syntax.PR_Curried _x_1_0 _x_1_1 -> True) (syntax.PR_CurriedFunction _x_1_0 _x_1_1 _x_1_2 -> True) (_ -> False)
trans.determine_args !_x_0 !_x_1 !prod_index_2::I !producers_3 !prod_atypes_4 !forms_5 !_x_6 !das_7 = case _x_1 (_predefined._Nil -> case das_7 (trans._DetermineArgsState das_vars_2_0 das_arg_types_2_1 das_next_attr_nr_2_2 das_new_linear_bits_2_3 das_new_cons_args_2_4 das_uniqueness_requirements_2_5 das_AV_2_6 das_subst_2_7 das_type_heaps_2_8 das_fun_defs_2_9 das_fun_heap_2_10 das_var_heap_2_11 das_cons_args_2_12 das_predef_2_13 das_removed_equal_info_ptr_2_14 -> let _x_3_0 = trans.new_variables_245 forms_5 das_var_heap_2_11 in update das_7::trans._DetermineArgsState [0:select _x_3_0::_Tuple2 0,11:select _x_3_0::_Tuple2 1]) ) (_predefined._Cons cons_arg_1_0 cons_args_1_1 -> case _x_0 (<{_predefined._#Cons!}> linear_bit_2_0 linear_bits_2_1 -> case prod_atypes_4 (_predefined._Cons prod_atype_3_0 prod_atypes_3_1 -> case forms_5 (_predefined._Cons form_4_0 forms_4_1 -> trans.determine_arg (<{trans._if;2050;11_1140}> (trans._f1138_1138 (<{StdInt.==_16}> cons_arg_1_0 -4) cons_arg_1_0) producers_3 prod_index_2) prod_atype_3_0 form_4_0 prod_index_2 (_Tuple2 (_Tuple2 linear_bit_2_0 cons_arg_1_0) _x_6) (trans.determine_args linear_bits_2_1 cons_args_1_1 (<{StdInt.+_6}> prod_index_2 StdInt.one_11) producers_3 prod_atypes_3_1 forms_4_1 _x_6 das_7)) ) ) ) 
<{trans._if;2050;11_1140}> !_x_0::B !producers_1 !prod_index_2::I = case _x_0 (True -> _SystemArray.select_3 producers_1 prod_index_2) (_ -> let producer_1_0 = _SystemArray.select_3 producers_1 prod_index_2 in <{trans._c;2052;14_1139}> producer_1_0)
<{trans._c;2052;14_1139}> !producer_0 = case producer_0 (syntax.PR_String _x_1_0 -> producer_0) (syntax.PR_Int _x_1_0 -> producer_0) (syntax.PR_Curried _x_1_0 _x_1_1 -> case _x_1_1 (0 -> producer_0) ) (syntax.PR_Equal arg_index_1_0 -> producer_0) (syntax.PR_EqualRemove _x_1_0 -> producer_0) (_ -> syntax.PR_Empty)
trans._f1138_1138::B !_x_0::B cons_arg_1::I = case _x_0 (True -> True) (_ -> case (<{StdInt.==_16}> cons_arg_1 -2) (True -> True) (False -> <{StdInt.==_16}> cons_arg_1 -1) )
trans.isUnused_205::B !_x_0 = case _x_0 (syntax.PR_Unused -> True) (_ -> False)
<{trans.c;1543;42_204}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 g_l_4 = <{trans.g_c1;1543;32_1142}> (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) g_l_4 g_a_3 g_i_1 _vArray_0 g_s_2
<{trans.g_c1;1543;32_1142}> !_x_0::B g_l_1 g_a_2 g_i_3::I _vArray_4 g_s_5::I = case _x_0 (True -> <{trans.g_c1;1543;48_1141}> g_l_1 g_a_2 g_i_3 _vArray_4 g_s_5) (_ -> _predefined._Nil)
<{trans.g_c1;1543;48_1141}> !g_l_0 g_a_1 g_i_2::I _vArray_3 g_s_4::I = case g_l_0 (_predefined._Cons arg_1_0 g_t_1_1 -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2 in case (trans.isUnused_205 (select _x_2_1::_Tuple2 0)) (True -> _predefined._Cons arg_1_0 (<{trans.c;1543;42_204}> _vArray_3 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_4 g_a_2_0 g_t_1_1)) (False -> <{trans.c;1543;42_204}> _vArray_3 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_4 g_a_2_0 g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;1580;43_206}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = <{trans.g_c1;1580;57_1144}> (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) g_a_3 g_i_1 _vArray_0 g_s_2
<{trans.g_c1;1580;57_1144}> !_x_0::B g_a_1 g_i_2::I _vArray_3 g_s_4::I = case _x_0 (True -> <{trans.g_c2;1580;57_1143}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 g_i_2 g_s_4 g_a_1) (_ -> _predefined._Nil)
<{trans.g_c2;1580;57_1143}> !_x_0 _vArray_1 g_i_2::I g_s_3::I g_a_4 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (trans._ATypesWithStrictness ats_types_2_0 ats_strictness_2_1 -> _predefined._Cons ats_types_2_0 (<{trans.c;1580;43_206}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_1)) ) (_ -> <{trans.c;1580;43_206}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_4)
trans.add_strictness_for_arguments_198 ats_strictness_0 !_x_1 ats_strictness_index_2::I strictness_index_3::I strictness_4::I strictness_list_5 = case _x_1 (_predefined._Nil -> _Tuple2 strictness_index_3 strictness_4) (_predefined._Cons _x_1_0 ats_types_1_1 -> case (containers.arg_is_strict ats_strictness_index_2 ats_strictness_0) (True -> let _x_3_0 = containers.add_next_strict strictness_index_3 strictness_4 strictness_list_5 in trans.add_strictness_for_arguments_198 ats_strictness_0 ats_types_1_1 (<{StdInt.+_6}> ats_strictness_index_2 1) (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) (False -> let _x_3_0 = containers.add_next_not_strict strictness_index_3 strictness_4 strictness_list_5 in trans.add_strictness_for_arguments_198 ats_strictness_0 ats_types_1_1 (<{StdInt.+_6}> ats_strictness_index_2 1) (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) ) 
trans.compute_args_strictness_199 !_vArray_0 strictness_index_1::I strictness_2::I !strictness_list_3 !array_index_4::I new_arg_types_array_5 = case (<{StdInt.==_16}> array_index_4 (select _vArray_0::<{_SystemArray.Array;}> 4 new_arg_types_array_5)) (True -> case (<{StdInt.==_16}> strictness_2 0) (True -> strictness_list_3) (False -> containers.append_strictness strictness_2 strictness_list_3) ) (False -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 3 new_arg_types_array_5 array_index_4, _x_2_1 = trans.add_strictness_for_arguments_198 (select _x_2_0::trans._ATypesWithStrictness 1) (select _x_2_0::trans._ATypesWithStrictness 0) 0 strictness_index_1 strictness_2 strictness_list_3 in trans.compute_args_strictness_199 _vArray_0 (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1) strictness_list_3 (<{StdInt.+_6}> array_index_4 1) new_arg_types_array_5) 
trans.compute_args_strictness !_vArray_0 new_arg_types_array_1 = trans.compute_args_strictness_199 _vArray_0 0 0 syntax.NotStrict 0 new_arg_types_array_1
trans.set_cons_var_bit_230 !_x_0 !_x_1 = case _x_0 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> case _x_1 (_Tuple2 cons_vars_2_0 th_vars_2_1 -> let _x_3_0 = Heap.readPtr tv_info_ptr_1_1 th_vars_2_1 in <{_Tuple2!3}> (unitype.set_bit (select (select (select _x_3_0::_Tuple2 0)::_Tuple1 0)::_Tuple1 0) cons_vars_2_0) (select _x_3_0::_Tuple2 1)) ) 
trans.lift_offered_substitutions_for_unification_239 !common_defs_0 !cons_vars_1 !_x_2 !_x_3 = case _x_2 (trans._UniquenessRequirement ur_offered_1_0 ur_demanded_1_1 ur_attr_ineqs_1_2 -> case _x_3 (_Tuple4 next_attr_nr_2_0 subst_2_1 ti_type_def_infos_2_2 ti_type_heaps_2_3 -> unitype.liftOfferedSubstitutions ur_offered_1_0 ur_demanded_1_1 common_defs_0 cons_vars_1 next_attr_nr_2_0 subst_2_1 ti_type_def_infos_2_2 ti_type_heaps_2_3) ) 
<{trans.cu;1601;47_208}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{trans.cu;1601;47_208}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 unitype.CT_Empty) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
<{trans.cu;1600;47_207}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{trans.cu;1600;47_207}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 unitype.CT_Empty) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
trans.new_inequality !_x_0 !coercions_1 = case _x_0 (typesupport._AttrCoercion ac_demanded_1_0 ac_offered_1_1 -> unitype.newInequality ac_offered_1_1 ac_demanded_1_0 coercions_1) 
trans.fold_st_571 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_571 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_839 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_839 x_1_1 (trans.new_inequality a_1_0 st_1)) 
trans.anon_209 !_x_0 !coercions_1 = case _x_0 (trans._UniquenessRequirement ur_offered_1_0 ur_demanded_1_1 ur_attr_ineqs_1_2 -> trans.fold_st_839 ur_attr_ineqs_1_2 coercions_1) 
trans.coerce_types_238 !common_defs_0 !cons_vars_1 !_x_2 !_x_3 = case _x_2 (trans._UniquenessRequirement ur_offered_1_0 ur_demanded_1_1 ur_attr_ineqs_1_2 -> case _x_3 (_Tuple4 subst_2_0 coercions_2_1 ti_type_def_infos_2_2 ti_type_heaps_2_3 -> let _x_3_0 = unitype.determineAttributeCoercions ur_offered_1_0 ur_demanded_1_1 True subst_2_0 coercions_2_1 common_defs_0 cons_vars_1 ti_type_def_infos_2_2 ti_type_heaps_2_3, ti_type_heaps_3_1 = select _x_3_0::_Tuple5 4, ti_type_def_infos_3_2 = select _x_3_0::_Tuple5 3, coercions_3_3 = select _x_3_0::_Tuple5 2, subst_3_4 = select _x_3_0::_Tuple5 1 in <{trans._c;1888;11_1145}> (select _x_3_0::_Tuple5 0) subst_3_4 coercions_3_3 ti_type_def_infos_3_2 ti_type_heaps_3_1) ) 
<{trans._c;1888;11_1145}> !_x_0 subst_1 coercions_2 ti_type_def_infos_3 ti_type_heaps_4 = case _x_0 (general.Yes _x_1_0 -> StdMisc.abort "Error in compiler: determineAttributeCoercions failed in module trans") (general.No -> _Tuple4 subst_1 coercions_2 ti_type_def_infos_3 ti_type_heaps_4) 
trans.expand_type_240 !ro_common_defs_0 !cons_vars_1 !atype_2 !_x_3 = case _x_3 (_Tuple4 coercions_1_0 subst_1_1 ti_type_heaps_1_2 ti_type_def_infos_1_3 -> case (trans.is_dictionary_229 atype_2 ti_type_def_infos_1_3) (True -> let _x_3_0 = type.arraySubst_4 atype_2 subst_1_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple3 1) (_Tuple4 coercions_1_0 (select _x_3_0::_Tuple3 2) ti_type_heaps_1_2 ti_type_def_infos_1_3)) (False -> let _x_3_0 = unitype.expandType_21 ro_common_defs_0 cons_vars_1 atype_2 (_Tuple2 subst_1_1 (unitype._ExpansionState ti_type_heaps_1_2 ti_type_def_infos_1_3)), btype_3_1 = select _x_3_0::_Tuple3 1, _x_3_2 = select _x_3_0::_Tuple3 2, es_3_3 = select _x_3_2::_Tuple2 1, cs_3_4 = select (unitype.coerce (typeproperties._Sign True False) ro_common_defs_0 cons_vars_1 _predefined._Nil btype_3_1 btype_3_1 (unitype._CoercionState (select es_3_3::unitype._ExpansionState 0) coercions_1_0 (select es_3_3::unitype._ExpansionState 1)))::_Tuple2 1 in <{_Tuple2!3}> btype_3_1 (_Tuple4 (select cs_3_4::unitype._CoercionState 1) (select _x_3_2::_Tuple2 0) (select cs_3_4::unitype._CoercionState 0) (select cs_3_4::unitype._CoercionState 2))) ) 
trans.i_fold_st_570 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> trans.i_fold_st_570 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
trans.allocate_fresh_type_var_193 !_vArray_0 i_1::I !_x_2 = case _x_2 (_Tuple2 array_1_0 th_vars_1_1 -> let _x_2_0 = Heap.newPtr syntax.TVI_Empty th_vars_1_1 in _Tuple2 (select _vArray_0::<{_SystemArray.Array;}> 5 array_1_0 i_1 (syntax._TypeVar (syntax._Ident (<{StdString.+++_11}> "a" (StdString.toString_5 i_1)) Heap.nilPtr) (select _x_2_0::_Tuple2 0))) (select _x_2_0::_Tuple2 1)) 
trans.allocate_fresh_type_var_840 i_0::I !_x_1 = case _x_1 (_Tuple2 array_1_0 th_vars_1_1 -> let _x_2_0 = Heap.newPtr syntax.TVI_Empty th_vars_1_1 in _Tuple2 (_SystemArray.update_5 array_1_0 i_0 (syntax._TypeVar (syntax._Ident (<{StdString.+++_11}> "a" (StdString.toString_5 i_0)) Heap.nilPtr) (select _x_2_0::_Tuple2 0))) (select _x_2_0::_Tuple2 1)) 
trans.i_fold_st_841 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> trans.i_fold_st_841 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
trans.i_fold_st_842 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> trans.i_fold_st_842 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
trans.i_fold_st_843 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> trans.i_fold_st_843 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
trans.i_fold_st_844 !fr_0::I !to_1::I !st_2 = case (StdBool.not (<{StdInt.<_17}> fr_0 to_1)) (True -> st_2) (False -> trans.i_fold_st_844 (<{StdInt.+_6}> fr_0 StdInt.one_11) to_1 (trans.allocate_fresh_type_var_840 fr_0 st_2)) 
trans.create_fresh_type_vars !nr_of_all_type_vars_0::I !th_vars_1 = trans.i_fold_st_844 0 nr_of_all_type_vars_0 (_Tuple2 (_SystemArray.createArray_1 nr_of_all_type_vars_0 (syntax._TypeVar (syntax._Ident "" Heap.nilPtr) Heap.nilPtr)) th_vars_1)
trans.i_fold_st_569 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> trans.i_fold_st_569 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
trans.allocate_fresh_attr_var_194 !_vArray_0 !_vArray_1 demanded_2 i_3::I !_x_4 = case _x_4 (_Tuple2 attr_var_array_1_0 th_attrs_1_1 -> <{trans._c;1376;11_1146}> (select _vArray_0::<{_SystemArray.Array;}> 3 demanded_2 i_3) attr_var_array_1_0 i_3 _vArray_1 th_attrs_1_1) 
<{trans._c;1376;11_1146}> !_x_0 attr_var_array_1 i_2::I _vArray_3 th_attrs_4 = case _x_0 (unitype.CT_Unique -> _Tuple2 (select _vArray_3::<{_SystemArray.Array;}> 5 attr_var_array_1 i_2 syntax.TA_Unique) th_attrs_4) (unitype.CT_NonUnique -> _Tuple2 (select _vArray_3::<{_SystemArray.Array;}> 5 attr_var_array_1 i_2 syntax.TA_Multi) th_attrs_4) (_ -> let _x_1_0 = typesupport.NewAttrVar i_2 th_attrs_4 in _Tuple2 (select _vArray_3::<{_SystemArray.Array;}> 5 attr_var_array_1 i_2 (syntax.TA_Var (select _x_1_0::_Tuple2 0))) (select _x_1_0::_Tuple2 1))
trans.allocate_fresh_attr_var_845 !_vArray_0 !demanded_1 !i_2::I !_x_3 = case _x_3 (_Tuple2 attr_var_array_1_0 th_attrs_1_1 -> <{trans._c;1376;11_1147}> (_SystemArray.select_3 demanded_1 i_2) attr_var_array_1_0 i_2 _vArray_0 th_attrs_1_1) 
<{trans._c;1376;11_1147}> !_x_0 attr_var_array_1 i_2::I _vArray_3 th_attrs_4 = case _x_0 (unitype.CT_Unique -> _Tuple2 (select _vArray_3::<{_SystemArray.Array;}> 5 attr_var_array_1 i_2 syntax.TA_Unique) th_attrs_4) (unitype.CT_NonUnique -> _Tuple2 (select _vArray_3::<{_SystemArray.Array;}> 5 attr_var_array_1 i_2 syntax.TA_Multi) th_attrs_4) (_ -> let _x_1_0 = typesupport.NewAttrVar i_2 th_attrs_4 in _Tuple2 (select _vArray_3::<{_SystemArray.Array;}> 5 attr_var_array_1 i_2 (syntax.TA_Var (select _x_1_0::_Tuple2 0))) (select _x_1_0::_Tuple2 1))
trans.i_fold_st_846 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> trans.i_fold_st_846 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
trans.allocate_fresh_attr_var_847 !demanded_0 !i_1::I !_x_2 = case _x_2 (_Tuple2 attr_var_array_1_0 th_attrs_1_1 -> <{trans._c;1376;11_1148}> (_SystemArray.select_3 demanded_0 i_1) attr_var_array_1_0 i_1 th_attrs_1_1) 
<{trans._c;1376;11_1148}> !_x_0 attr_var_array_1 i_2::I th_attrs_3 = case _x_0 (unitype.CT_Unique -> _Tuple2 (_SystemArray.update_5 attr_var_array_1 i_2 syntax.TA_Unique) th_attrs_3) (unitype.CT_NonUnique -> _Tuple2 (_SystemArray.update_5 attr_var_array_1 i_2 syntax.TA_Multi) th_attrs_3) (_ -> let _x_1_0 = typesupport.NewAttrVar i_2 th_attrs_3 in _Tuple2 (_SystemArray.update_5 attr_var_array_1 i_2 (syntax.TA_Var (select _x_1_0::_Tuple2 0))) (select _x_1_0::_Tuple2 1))
trans.i_fold_st_848 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> trans.i_fold_st_848 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
trans.i_fold_st_849 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> trans.i_fold_st_849 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
trans.i_fold_st_850 demanded_0 !fr_1::I !to_2::I !st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> trans.i_fold_st_850 demanded_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (trans.allocate_fresh_attr_var_847 demanded_0 fr_1 st_3)) 
trans.create_fresh_attr_vars !demanded_0 !nr_of_attr_vars_1::I !th_attrs_2 = trans.i_fold_st_850 demanded_0 0 nr_of_attr_vars_1 (_Tuple2 (_SystemArray.createArray_1 nr_of_attr_vars_1 syntax.TA_None) th_attrs_2)
<{trans.c;1626;48_210}> !_vArray_0 used_attr_vars_1 !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> case (StdBool.not (select _vArray_0::<{_SystemArray.Array;}> 3 used_attr_vars_1 i_2)) (True -> _predefined._Cons i_2 (<{trans.c;1626;48_210}> _vArray_0 used_attr_vars_1 (<{StdInt.+_6}> i_2 StdInt.one_11) g_s_3)) (False -> <{trans.c;1626;48_210}> _vArray_0 used_attr_vars_1 (<{StdInt.+_6}> i_2 StdInt.one_11) g_s_3) ) (False -> _predefined._Nil) 
trans.get_used_attr_vars_242 !attr_var_n_0::I !used_attr_vars_1 !fresh_attr_vars_2 = case (<{StdInt.<_17}> attr_var_n_0 (_SystemArray.size_36 used_attr_vars_1)) (True -> case (_SystemArray.select_35 used_attr_vars_1 attr_var_n_0) (True -> let !used_attr_var_3_0 = _predefined._dummyForStrictAlias (select (_SystemArray.select_3 fresh_attr_vars_2 attr_var_n_0)::_Tuple1 0), !used_attr_vars_3_1 = trans.get_used_attr_vars_242 (<{StdInt.+_6}> attr_var_n_0 1) used_attr_vars_1 fresh_attr_vars_2 in _predefined._Cons used_attr_var_3_0 used_attr_vars_3_1) (False -> trans.get_used_attr_vars_242 (<{StdInt.+_6}> attr_var_n_0 1) used_attr_vars_1 fresh_attr_vars_2) ) (False -> _predefined._Nil) 
trans.coercionsToAttrEnvNextTree_196 !_x_0 !demanded_i_1::I !attr_vars_2 !coer_offered_3 = case _x_0 (_predefined._Cons offered_i_1_0 offered_is_1_1 -> let !attr_inequalities_2_0 = trans.coercionsToAttrEnvNextTree_196 offered_is_1_1 demanded_i_1 attr_vars_2 coer_offered_3, !demanded_attr_var_2_1 = _predefined._dummyForStrictAlias (select (_SystemArray.select_3 attr_vars_2 demanded_i_1)::_Tuple1 0), !offered_attr_var_2_2 = _predefined._dummyForStrictAlias (select (_SystemArray.select_3 attr_vars_2 offered_i_1_0)::_Tuple1 0) in _predefined._Cons (syntax._AttrInequality demanded_attr_var_2_1 offered_attr_var_2_2) attr_inequalities_2_0) (_predefined._Nil -> trans.coercionsToAttrEnv_195 (<{StdInt.+_6}> demanded_i_1 1) attr_vars_2 coer_offered_3) 
trans.coercionsToAttrEnv_195 !demanded_i_0::I !attr_vars_1 !coer_offered_2 = case (<{StdInt.<_17}> demanded_i_0 (_SystemArray.size_4 coer_offered_2)) (True -> trans.coercionsToAttrEnvNextTree_196 (select (typesupport.flattenCoercionTree (_SystemArray.select_3 coer_offered_2 demanded_i_0))::_Tuple2 0) demanded_i_0 attr_vars_1 coer_offered_2) (False -> _predefined._Nil) 
trans.coercionsToAttrEnv !attr_vars_0 !_x_1 = case _x_1 (unitype._Coercions coer_demanded_1_0 coer_offered_1_1 -> trans.coercionsToAttrEnv_195 0 attr_vars_0 coer_offered_1_1) 
trans.replaceIntegers_479 !_vreplace_0 !l_1 !input_2 !used_3 = case l_1 (_predefined._Cons h_1_0 t_1_1 -> let _x_2_0 = select _vreplace_0::<{trans.replaceIntegers;}> 0 h_1_0 input_2 used_3 in case (select _x_2_0::_Tuple3 0) (True -> let used_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = trans.replaceIntegers_479 _vreplace_0 t_1_1 input_2 used_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (_predefined._Cons (select _x_2_0::_Tuple3 1) (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> True (_predefined._Cons (select _x_2_0::_Tuple3 1) t_1_1) (select _x_4_1::_Tuple3 2)) ) (False -> let used_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = trans.replaceIntegers_479 _vreplace_0 t_1_1 input_2 used_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (_predefined._Cons h_1_0 (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> False l_1 (select _x_4_1::_Tuple3 2)) ) ) (_predefined._Nil -> <{_Tuple3!7}> False _predefined._Nil used_3) 
trans.replaceIntegers_480 !_x_0 !_x_1 !used_2 = case _x_0 (syntax.TA_TempVar i_1_0 -> case _x_1 (_Tuple3 _x_2_0 attributes_2_1 attr_partition_2_2 -> let index_3_0 = _SystemArray.select_11 attr_partition_2_2 i_1_0, attribute_3_1::I = _SystemArray.select_3 attributes_2_1 index_3_0 in <{trans._c;2573;11_1149}> attribute_3_1 used_2 index_3_0) ) (_ -> <{_Tuple3!7}> False _x_0 used_2)
<{trans._c;2573;11_1149}> !attribute_0 !used_1 index_2::I = case attribute_0 (syntax.TA_Var _x_1_0 -> <{_Tuple3!7}> True attribute_0 (_SystemArray.update_37 used_1 index_2 True)) (_ -> <{_Tuple3!7}> True attribute_0 used_1)
trans.replaceIntegers_482 !atype_0 !input_1 !used_2 = case atype_0 (syntax._AType at_attribute_1_0 at_type_1_1 -> let _x_2_0 = trans.replaceIntegers_480 at_attribute_1_0 input_1 used_2 in case (select _x_2_0::_Tuple3 0) (True -> let used_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = trans.replaceIntegers_481 at_type_1_1 input_1 used_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (update atype_0::syntax._AType [0:select _x_2_0::_Tuple3 1,1:select _x_4_1::_Tuple3 1]) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> True (update atype_0::syntax._AType [0:select _x_2_0::_Tuple3 1]) (select _x_4_1::_Tuple3 2)) ) (False -> let used_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = trans.replaceIntegers_481 at_type_1_1 input_1 used_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (update atype_0::syntax._AType [1:select _x_4_1::_Tuple3 1]) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> False atype_0 (select _x_4_1::_Tuple3 2)) ) ) 
trans.replaceIntegers_851 !l_0 !input_1 !used_2 = case l_0 (_predefined._Cons h_1_0 t_1_1 -> let _x_2_0 = trans.replaceIntegers_482 h_1_0 input_1 used_2 in case (select _x_2_0::_Tuple3 0) (True -> let used_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = trans.replaceIntegers_851 t_1_1 input_1 used_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (_predefined._Cons (select _x_2_0::_Tuple3 1) (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> True (_predefined._Cons (select _x_2_0::_Tuple3 1) t_1_1) (select _x_4_1::_Tuple3 2)) ) (False -> let used_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = trans.replaceIntegers_851 t_1_1 input_1 used_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (_predefined._Cons h_1_0 (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> False l_0 (select _x_4_1::_Tuple3 2)) ) ) (_predefined._Nil -> <{_Tuple3!7}> False _predefined._Nil used_2) 
trans.replaceIntegers_481 !type_0 !input_1 !used_2 = case type_0 (syntax.TA type_symb_ident_1_0 args_1_1 -> let _x_2_0 = trans.replaceIntegers_851 args_1_1 input_1 used_2 in case (select _x_2_0::_Tuple3 0) (True -> <{_Tuple3!7}> True (syntax.TA type_symb_ident_1_0 (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) (False -> <{_Tuple3!7}> False type_0 (select _x_2_0::_Tuple3 2)) ) (syntax.TAS type_symb_ident_1_0 args_1_1 strictness_1_2 -> let _x_2_0 = trans.replaceIntegers_851 args_1_1 input_1 used_2 in case (select _x_2_0::_Tuple3 0) (True -> <{_Tuple3!7}> True (syntax.TAS type_symb_ident_1_0 (select _x_2_0::_Tuple3 1) strictness_1_2) (select _x_2_0::_Tuple3 2)) (False -> <{_Tuple3!7}> False type_0 (select _x_2_0::_Tuple3 2)) ) (<{syntax.-->}> a_1_0 b_1_1 -> let _x_2_0 = trans.replaceIntegers_482 a_1_0 input_1 used_2 in case (select _x_2_0::_Tuple3 0) (True -> let used_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = trans.replaceIntegers_482 b_1_1 input_1 used_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (<{syntax.-->}> (select _x_2_0::_Tuple3 1) (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> True (<{syntax.-->}> (select _x_2_0::_Tuple3 1) b_1_1) (select _x_4_1::_Tuple3 2)) ) (False -> let used_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = trans.replaceIntegers_482 b_1_1 input_1 used_4_0 in case (select _x_4_1::_Tuple3 0) (True -> <{_Tuple3!7}> True (<{syntax.-->}> a_1_0 (select _x_4_1::_Tuple3 1)) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> False type_0 (select _x_4_1::_Tuple3 2)) ) ) (<{syntax.:@:}> consvar_1_0 args_1_1 -> case input_1 (_Tuple3 fresh_type_vars_2_0 _x_2_1 _x_2_2 -> let _x_3_0 = trans.replaceIntegers_851 args_1_1 input_1 used_2 in <{_Tuple3!7}> True (<{syntax.:@:}> (syntax.CV (_SystemArray.select_3 fresh_type_vars_2_0 (select consvar_1_0::_Tuple1 0))) (select _x_3_0::_Tuple3 1)) (select _x_3_0::_Tuple3 2)) ) (syntax.TempV i_1_0 -> case input_1 (_Tuple3 fresh_type_vars_2_0 _x_2_1 _x_2_2 -> <{_Tuple3!7}> True (syntax.TV (_SystemArray.select_3 fresh_type_vars_2_0 i_1_0)) used_2) ) (_ -> <{_Tuple3!7}> False type_0 used_2)
trans.replace_integers_in_substitution_237 !replace_input_0 !i_1::I !_x_2 = case _x_2 (_Tuple2 subst_1_0 used_1_1 -> let _x_2_0 = _SystemArray.uselect_6 subst_1_0 i_1, _x_2_1 = trans.replaceIntegers_481 (select _x_2_0::_Tuple2 0) replace_input_0 used_1_1 in <{_Tuple2!3}> (_SystemArray.update_5 (select _x_2_0::_Tuple2 1) i_1 (select _x_2_1::_Tuple3 1)) (select _x_2_1::_Tuple3 2)) 
trans.anon_211 !_vArray_0 !_vArray_1 fresh_type_vars_array_2 subst_3 !_x_4 !_x_5 = case _x_4 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> case _x_5 (_Tuple2 i_2_0 th_vars_2_1 -> <{trans._c;1684;28_1150}> (select _vArray_0::<{_SystemArray.Array;}> 3 subst_3 i_2_0) i_2_0 tv_info_ptr_1_1 fresh_type_vars_array_2 _vArray_1 th_vars_2_1 subst_3 _vArray_0) ) 
<{trans._c;1684;28_1150}> !_x_0 i_1::I tv_info_ptr_2 fresh_type_vars_array_3 _vArray_4 th_vars_5 subst_6 _vArray_7 = case _x_0 (syntax.TE -> _Tuple2 (<{StdInt.+_6}> i_1 1) (Heap.writePtr tv_info_ptr_2 (syntax.TVI_Type (syntax.TV (select _vArray_4::<{_SystemArray.Array;}> 3 fresh_type_vars_array_3 i_1))) th_vars_5)) (_ -> _Tuple2 (<{StdInt.+_6}> i_1 1) (Heap.writePtr tv_info_ptr_2 (syntax.TVI_Type (select _vArray_7::<{_SystemArray.Array;}> 3 subst_6 i_1)) th_vars_5))
trans.remove_TA_TempVars_in_info_ptr_list_270 !_x_0 !attrs_1 = case _x_0 (_predefined._Cons _x_1_0 tAV_1_1 -> case _x_1_0 (syntax._AttributeVar av_ident_2_0 av_info_ptr_2_1 -> <{trans._c;2675;11_1151}> (Heap.readPtr av_info_ptr_2_1 attrs_1) tAV_1_1 av_info_ptr_2_1) ) (_predefined._Nil -> attrs_1) 
<{trans._c;2675;11_1151}> !_x_0 !tAV_1 av_info_ptr_2 = case _x_0 (_Tuple2 _x_1_0 attrs_1_1 -> case _x_1_0 (syntax.AVI_Attr _x_2_0 -> case _x_2_0 (syntax.TA_TempVar _x_3_0 -> trans.remove_TA_TempVars_in_info_ptr_list_270 tAV_1 (Heap.writePtr av_info_ptr_2 (syntax.AVI_Attr syntax.TA_Multi) attrs_1_1)) ) (_ -> trans.remove_TA_TempVars_in_info_ptr_list_270 tAV_1 attrs_1_1)) 
trans.remove_TA_TempVars_in_info_ptrs !_x_0 !attrs_1 = case _x_0 (_predefined._Cons hAV_1_0 tAV_1_1 -> trans.remove_TA_TempVars_in_info_ptrs tAV_1_1 (trans.remove_TA_TempVars_in_info_ptr_list_270 hAV_1_0 attrs_1)) (_predefined._Nil -> attrs_1) 
trans.store_arg_type_info_212 !_x_0 !a_type_1 !ti_var_heap_2 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> trans.setExtendedVarInfo fv_info_ptr_1_2 (syntax.EVI_VarType a_type_1) ti_var_heap_2) 
trans.more_unused_producers2_244::B !_vArray_0 !i_1::I producers_2 = case (<{StdInt.<_17}> i_1 (select _vArray_0::<{_SystemArray.Array;}> 4 producers_2)) (True -> <{trans._c;1999;15_1152}> (select _vArray_0::<{_SystemArray.Array;}> 3 producers_2 i_1) _vArray_0 i_1 producers_2) (False -> False) 
<{trans._c;1999;15_1152}>::B !_x_0 _vArray_1 i_2::I producers_3 = case _x_0 (syntax.PR_Empty -> trans.more_unused_producers2_244 _vArray_1 (<{StdInt.+_6}> i_2 1) producers_3) (syntax.PR_Unused -> True) 
trans.more_unused_producers_243::B !_vArray_0 !i_1::I producers_2 = case (<{StdInt.<_17}> i_1 (select _vArray_0::<{_SystemArray.Array;}> 4 producers_2)) (True -> <{trans._c;1988;15_1153}> (select _vArray_0::<{_SystemArray.Array;}> 3 producers_2 i_1) _vArray_0 i_1 producers_2) (False -> False) 
<{trans._c;1988;15_1153}>::B !_x_0 _vArray_1 i_2::I producers_3 = case _x_0 (syntax.PR_Empty -> trans.more_unused_producers_243 _vArray_1 (<{StdInt.+_6}> i_2 1) producers_3) (syntax.PR_Unused -> trans.more_unused_producers2_244 _vArray_1 (<{StdInt.+_6}> i_2 1) producers_3) (_ -> False)
trans.more_unused_producers::B !_vArray_0 producers_1 = trans.more_unused_producers_243 _vArray_0 0 producers_1
trans.readVarInfo !var_info_ptr_0 !var_heap_1 = let _x_1_0 = Heap.readPtr var_info_ptr_0 var_heap_1, var_info_1_1 = select _x_1_0::_Tuple2 0, var_heap_1_2 = select _x_1_0::_Tuple2 1 in <{trans._c;62;7_1154}> var_info_1_1 var_heap_1_2
<{trans._c;62;7_1154}> !var_info_0 !var_heap_1 = case var_info_0 (syntax.VI_Extended _x_1_0 original_var_info_1_1 -> <{_Tuple2!2}> original_var_info_1_1 var_heap_1) (_ -> <{_Tuple2!2}> var_info_0 var_heap_1)
trans.take1_218 !_x_0 _x_1 var_heap_2 = case _x_0 (_predefined._Cons o_1_0 os_1_1 -> case _x_1 (_predefined._Cons n_2_0 ns_2_1 -> let _x_3_0 = trans.readVarInfo (select o_1_0::syntax._FreeVar 2) var_heap_2, var_heap_3_1 = select _x_3_0::_Tuple2 1 in <{trans._c;1920;23_1155}> (select _x_3_0::_Tuple2 0) n_2_0 os_1_1 ns_2_1 var_heap_3_1 o_1_0) ) (_ -> _Tuple4 0 _x_0 _x_1 var_heap_2)
<{trans._c;1920;23_1155}> !_x_0 n_1 os_2 ns_3 var_heap_4 o_5 = case _x_0 (syntax.VI_Variable _x_1_0 fip_1_1 -> case (<{Heap.==_10}> fip_1_1 (select n_1::syntax._FreeVar 2)) (True -> let _x_3_0 = trans.take1_218 os_2 ns_3 var_heap_4 in _Tuple4 (<{StdInt.+_6}> (select _x_3_0::_Tuple4 0) 1) (select _x_3_0::_Tuple4 1) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) ) (_ -> _Tuple4 0 (_predefined._Cons o_5 os_2) (_predefined._Cons n_1 ns_3) var_heap_4)
trans.fst_568 !tuple_0 = select tuple_0::_Tuple2 0
trans.map_st_567 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_567 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.ext_222 !o_0 !uvh_1 = let _x_1_0 = trans.readVarInfo (select o_0::syntax._FreeVar 2) uvh_1, uvh_1_1 = select _x_1_0::_Tuple2 1 in <{trans._c;1949;31_1156}> (select _x_1_0::_Tuple2 0) o_0 uvh_1_1
<{trans._c;1949;31_1156}> !_x_0 o_1 uvh_2 = case _x_0 (syntax.VI_Variable _x_1_0 fip_1_1 -> _Tuple2 (_Tuple2 fip_1_1 o_1) uvh_2) (_ -> _Tuple2 (_Tuple2 Heap.nilPtr o_1) uvh_2)
trans.map_st_852 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.ext_222 x_1_0 s_1, _x_2_2 = trans.map_st_852 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.extend_223 !os_0 !uvh_1 = trans.map_st_852 os_0 uvh_1
trans.anon_219 !_x_0 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> fv_info_ptr_1_2) 
trans.isMember_225::B x_0 !_x_1 = case _x_1 (_predefined._Cons hd_1_0 tl_1_1 -> case (Heap.isNilPtr x_0) (True -> False) (False -> case (Heap.isNilPtr hd_1_0) (True -> trans.isMember_225 x_0 tl_1_1) (False -> case (<{Heap.==_10}> hd_1_0 x_0) (True -> True) (False -> trans.isMember_225 x_0 tl_1_1) ) ) ) (_predefined._Nil -> False) 
trans.anon_220::B !<{ns``_0}> !_x_1 = case _x_1 (_Tuple2 o_1_0 _x_1_1 -> StdBool.not (trans.isMember_225 o_1_0 <{ns``_0}>)) 
trans.anon_221::B !<{os``_0}> !_x_1 = case _x_1 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> StdBool.not (trans.isMember_225 fv_info_ptr_1_2 <{os``_0}>)) 
trans.snd_566 !tuple_0 = select tuple_0::_Tuple2 1
trans.shrink_224 !as_0 = StdList.map trans.snd_566 as_0
trans.take2_226 !_x_0 _x_1 var_heap_2 = case _x_0 (_predefined._Nil -> case _x_1 (_predefined._Nil -> _Tuple4 0 _predefined._Nil _predefined._Nil var_heap_2) ) (_ -> let _x_1_0 = trans.extend_223 _x_0 var_heap_2, <{os`_1_1}> = select _x_1_0::_Tuple2 0, condN_1_2 = trans.anon_221 (StdList.map trans.fst_568 <{os`_1_1}>) in _Tuple4 (StdList.length_47 (StdList.takeWhile condN_1_2 _x_1)) (trans.shrink_224 (StdList.dropWhile (trans.anon_220 (StdList.map trans.anon_219 _x_1)) <{os`_1_1}>)) (StdList.dropWhile condN_1_2 _x_1) (select _x_1_0::_Tuple2 1))
trans.take3_227 !_x_0 !_x_1 !var_heap_2 = case _x_0 (_predefined._Cons o_1_0 os_1_1 -> case _x_1 (_predefined._Cons n_2_0 ns_2_1 -> let _x_3_0 = trans.readVarInfo (select o_1_0::syntax._FreeVar 2) var_heap_2, var_heap_3_1 = select _x_3_0::_Tuple2 1 in <{trans._c;1964;23_1157}> (select _x_3_0::_Tuple2 0) n_2_0 os_1_1 ns_2_1 var_heap_3_1) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> var_heap_2) ) 
<{trans._c;1964;23_1157}> !_x_0 !n_1 !os_2 !ns_3 !var_heap_4 = case _x_0 (syntax.VI_Variable _x_1_0 fip_1_1 -> case (<{Heap.==_10}> fip_1_1 (select n_1::syntax._FreeVar 2)) (True -> trans.take3_227 os_2 ns_3 var_heap_4) ) 
trans.n_args_before_producer_and_n_producer_args_241 !tb_args_0 !new_fun_args_1 !var_heap_2 = let _x_1_0 = trans.take1_218 tb_args_0 new_fun_args_1 var_heap_2, _x_1_1 = trans.take2_226 (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3) in <{_Tuple3!7}> (select _x_1_0::_Tuple4 0) (select _x_1_1::_Tuple4 0) (trans.take3_227 (select _x_1_1::_Tuple4 1) (select _x_1_1::_Tuple4 2) (select _x_1_1::_Tuple4 3))
<{trans.c;1728;64_213}> new_args_strictness_0 !g_l_1 i_2::I = <{trans.g_c1;1728;48_1158}> g_l_1 i_2 new_args_strictness_0
<{trans.g_c1;1728;48_1158}> !g_l_0 i_1::I new_args_strictness_2 = case g_l_0 (_predefined._Cons arg_1_0 g_t_1_1 -> case (containers.arg_is_strict i_1 new_args_strictness_2) (True -> _predefined._Cons arg_1_0 (<{trans.c;1728;64_213}> new_args_strictness_2 g_t_1_1 (<{StdInt.+_6}> i_1 StdInt.one_11))) (False -> <{trans.c;1728;64_213}> new_args_strictness_2 g_t_1_1 (<{StdInt.+_6}> i_1 StdInt.one_11)) ) (_ -> _predefined._Nil)
trans.arity_warning !<{_v<<<_0}> !<{_v<<<_1}> !<{_v<<<_2}> msg_3 symb_ident_4 fun_index_5 !fun_arity_6::I !ti_7 = case (StdBool.not (<{StdInt.<_17}> 32 fun_arity_6)) (True -> ti_7) (False -> update ti_7::trans._TransformInfo [12:<{StdFile.<<<_38}> (select <{_v<<<_2}>::<{StdFile.<<<;}> 0 (<{StdFile.<<<_38}> (select <{_v<<<_1}>::<{StdFile.<<<;}> 0 (<{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 (<{StdFile.<<<_38}> (select ti_7::trans._TransformInfo 12) "Warning: Arity > 32 ") msg_3) " ") fun_arity_6) " ") symb_ident_4) "@") fun_index_5) "\n"]) 
trans.f2b_214 !_x_0 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> syntax.Var (syntax._BoundVar fv_ident_1_1 fv_info_ptr_1_2 Heap.nilPtr)) 
trans.get_arity_298 !_vArray_0 !_x_1 ro_2 fun_defs_3 fun_heap_4 = case _x_1 (syntax._SymbIdent symb_ident_1_0 _x_1_1 -> case _x_1_1 (syntax.SK_Function _x_2_0 -> case _x_2_0 (syntax._Global glob_object_3_0 glob_module_3_1 -> case (<{StdInt.==_16}> glob_module_3_1 (select ro_2::trans._ReadOnlyTI 4)) (True -> let _x_5_0 = select (select _vArray_0::<{_SystemArray.Array;}> 3 fun_defs_3 glob_object_3_0)::syntax._FunDef 1 in _Tuple3 (select _x_5_0::_Tuple2 0) (select _x_5_0::_Tuple2 1) fun_heap_4) (False -> let _x_5_0 = trans.select_683 (_SystemArray.select_43 (select ro_2::trans._ReadOnlyTI 0) glob_module_3_1) glob_object_3_0 in _Tuple3 (<{StdInt.+_6}> (select _x_5_0::syntax._FunType 1) (StdList.length_47 (select (select _x_5_0::syntax._FunType 3)::syntax._SymbolType 5))) fun_defs_3 fun_heap_4) ) ) (syntax.SK_LocalMacroFunction glob_object_2_0 -> let _x_3_0 = select (select _vArray_0::<{_SystemArray.Array;}> 3 fun_defs_3 glob_object_2_0)::syntax._FunDef 1 in _Tuple3 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1) fun_heap_4) (syntax.SK_GeneratedFunction fun_ptr_2_0 _x_2_1 -> let _x_3_0 = Heap.readPtr fun_ptr_2_0 fun_heap_4 in _Tuple3 (select (select (select (select _x_3_0::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction 0)::syntax._FunDef 1) fun_defs_3 (select _x_3_0::_Tuple2 1)) (syntax.SK_Constructor _x_2_0 -> case _x_2_0 (syntax._Global glob_object_3_0 glob_module_3_1 -> _Tuple3 (select (select (trans.select_691 (select (trans.select_667 (select ro_2::trans._ReadOnlyTI 1) glob_module_3_1)::syntax._CommonDefs 1) glob_object_3_0)::syntax._ConsDef 1)::syntax._SymbolType 3) fun_defs_3 fun_heap_4) ) ) 
trans.readExprInfo !expr_info_ptr_0 !symbol_heap_1 = let _x_1_0 = Heap.readPtr expr_info_ptr_0 symbol_heap_1, expr_info_1_1 = select _x_1_0::_Tuple2 0, symbol_heap_1_2 = select _x_1_0::_Tuple2 1 in <{trans._c;92;7_1159}> expr_info_1_1 symbol_heap_1_2
<{trans._c;92;7_1159}> !expr_info_0 !symbol_heap_1 = case expr_info_0 (syntax.EI_Extended _x_1_0 ei_1_1 -> <{_Tuple2!3}> ei_1_1 symbol_heap_1) (_ -> <{_Tuple2!3}> expr_info_0 symbol_heap_1)
trans.writeExprInfo !expr_info_ptr_0 !new_expr_info_1 !symbol_heap_2 = let _x_1_0 = Heap.readPtr expr_info_ptr_0 symbol_heap_2, symbol_heap_1_1 = select _x_1_0::_Tuple2 1 in <{trans._c;99;7_1160}> (select _x_1_0::_Tuple2 0) expr_info_ptr_0 new_expr_info_1 symbol_heap_1_1
<{trans._c;99;7_1160}> !_x_0 !expr_info_ptr_1 !new_expr_info_2 !symbol_heap_3 = case _x_0 (syntax.EI_Extended extensions_1_0 _x_1_1 -> Heap.writePtr expr_info_ptr_1 (syntax.EI_Extended extensions_1_0 new_expr_info_2) symbol_heap_3) (_ -> Heap.writePtr expr_info_ptr_1 new_expr_info_2 symbol_heap_3)
trans.overwrite_result_type_291 !case_info_ptr_0 !new_result_type_1 !ti_symbol_heap_2 = let !_x_1_0 = trans.readExprInfo case_info_ptr_0 ti_symbol_heap_2 in trans.writeExprInfo case_info_ptr_0 (syntax.EI_CaseType (update (select (select _x_1_0::_Tuple2 0)::_Tuple1 0)::syntax._CaseType [1:new_result_type_1])) (select _x_1_0::_Tuple2 1)
trans.get_arity_853 !_x_0 ro_1 fun_defs_2 fun_heap_3 = case _x_0 (syntax._SymbIdent symb_ident_1_0 _x_1_1 -> case _x_1_1 (syntax.SK_Function _x_2_0 -> case _x_2_0 (syntax._Global glob_object_3_0 glob_module_3_1 -> case (<{StdInt.==_16}> glob_module_3_1 (select ro_1::trans._ReadOnlyTI 4)) (True -> let _x_5_0 = select (trans.select_651 fun_defs_2 glob_object_3_0)::syntax._FunDef 1 in _Tuple3 (select _x_5_0::_Tuple2 0) (select _x_5_0::_Tuple2 1) fun_heap_3) (False -> let _x_5_0 = trans.select_683 (_SystemArray.select_43 (select ro_1::trans._ReadOnlyTI 0) glob_module_3_1) glob_object_3_0 in _Tuple3 (<{StdInt.+_6}> (select _x_5_0::syntax._FunType 1) (StdList.length_47 (select (select _x_5_0::syntax._FunType 3)::syntax._SymbolType 5))) fun_defs_2 fun_heap_3) ) ) (syntax.SK_LocalMacroFunction glob_object_2_0 -> let _x_3_0 = select (trans.select_651 fun_defs_2 glob_object_2_0)::syntax._FunDef 1 in _Tuple3 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1) fun_heap_3) (syntax.SK_GeneratedFunction fun_ptr_2_0 _x_2_1 -> let _x_3_0 = Heap.readPtr fun_ptr_2_0 fun_heap_3 in _Tuple3 (select (select (select (select _x_3_0::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction 0)::syntax._FunDef 1) fun_defs_2 (select _x_3_0::_Tuple2 1)) (syntax.SK_Constructor _x_2_0 -> case _x_2_0 (syntax._Global glob_object_3_0 glob_module_3_1 -> _Tuple3 (select (select (trans.select_691 (select (trans.select_667 (select ro_1::trans._ReadOnlyTI 1) glob_module_3_1)::syntax._CommonDefs 1) glob_object_3_0)::syntax._ConsDef 1)::syntax._SymbolType 3) fun_defs_2 fun_heap_3) ) ) 
trans.add_arguments_bpats_296 !_x_0 extra_args_1 _x_2 ro_3 ti_4 = case _x_0 (_predefined._Nil -> _Tuple2 _predefined._Nil ti_4) (_predefined._Cons bp_1_0 bps_1_1 -> case bp_1_0 (syntax._BasicPattern bp_value_2_0 bp_expr_2_1 bp_position_2_2 -> let _x_3_0 = trans.add_arguments_292 bp_expr_2_1 extra_args_1 _x_2 ro_3 ti_4, _x_3_1 = trans.add_arguments_bpats_296 bps_1_1 extra_args_1 _x_2 ro_3 (select _x_3_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (update bp_1_0::syntax._BasicPattern [1:select _x_3_0::_Tuple2 0]) (select _x_3_1::_Tuple2 0)) (select _x_3_1::_Tuple2 1)) ) 
trans.add_arguments_dpats_297 !_x_0 extra_args_1 _x_2 ro_3 ti_4 = case _x_0 (_predefined._Nil -> _Tuple2 _predefined._Nil ti_4) (_predefined._Cons dp_1_0 dps_1_1 -> case dp_1_0 (syntax._DynamicPattern dp_var_2_0 dp_type_2_1 dp_type_code_2_2 dp_rhs_2_3 dp_position_2_4 -> let _x_3_0 = trans.add_arguments_292 dp_rhs_2_3 extra_args_1 _x_2 ro_3 ti_4, _x_3_1 = trans.add_arguments_dpats_297 dps_1_1 extra_args_1 _x_2 ro_3 (select _x_3_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (update dp_1_0::syntax._DynamicPattern [3:select _x_3_0::_Tuple2 0]) (select _x_3_1::_Tuple2 0)) (select _x_3_1::_Tuple2 1)) ) 
trans.add_arguments_apats_295 !_x_0 extra_args_1 _x_2 ro_3 ti_4 = case _x_0 (_predefined._Nil -> _Tuple2 _predefined._Nil ti_4) (_predefined._Cons ap_1_0 aps_1_1 -> case ap_1_0 (syntax._AlgebraicPattern ap_symbol_2_0 ap_vars_2_1 ap_expr_2_2 ap_position_2_3 -> let _x_3_0 = trans.add_arguments_292 ap_expr_2_2 extra_args_1 _x_2 ro_3 ti_4, _x_3_1 = trans.add_arguments_apats_295 aps_1_1 extra_args_1 _x_2 ro_3 (select _x_3_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (update ap_1_0::syntax._AlgebraicPattern [2:select _x_3_0::_Tuple2 0]) (select _x_3_1::_Tuple2 0)) (select _x_3_1::_Tuple2 1)) ) 
trans.add_arguments_guards_294 !_x_0 extra_args_1 new_result_type_2 ro_3 ti_4 = case _x_0 (syntax.AlgebraicPatterns gindex_1_0 apats_1_1 -> let _x_2_0 = trans.add_arguments_apats_295 apats_1_1 extra_args_1 new_result_type_2 ro_3 ti_4 in _Tuple2 (syntax.AlgebraicPatterns gindex_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.BasicPatterns btype_1_0 bpats_1_1 -> let _x_2_0 = trans.add_arguments_bpats_296 bpats_1_1 extra_args_1 new_result_type_2 ro_3 ti_4 in _Tuple2 (syntax.BasicPatterns btype_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.DynamicPatterns dpats_1_0 -> let _x_2_0 = trans.add_arguments_dpats_297 dpats_1_0 extra_args_1 new_result_type_2 ro_3 ti_4 in _Tuple2 (syntax.DynamicPatterns (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.OverloadedListPatterns type_1_0 decons_expr_1_1 apats_1_2 -> let _x_2_0 = trans.add_arguments_apats_295 apats_1_2 extra_args_1 new_result_type_2 ro_3 ti_4 in _Tuple2 (syntax.OverloadedListPatterns type_1_0 decons_expr_1_1 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.NoPattern -> _Tuple2 syntax.NoPattern ti_4) 
trans.add_arguments_opt_293 !_x_0 _x_1 _x_2 ro_3 ti_4 = case _x_0 (general.No -> _Tuple2 general.No ti_4) (general.Yes expr_1_0 -> let _x_2_0 = trans.add_arguments_292 expr_1_0 _x_1 _x_2 ro_3 ti_4 in _Tuple2 (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) 
trans.add_arguments_292 !_x_0 extra_args_1 new_result_type_2 ro_3 ti_4 = case _x_0 (syntax.App app_1_0 -> case app_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> let _x_3_0::I = trans.get_arity_853 app_symb_2_0 ro_3 (select ti_4::trans._TransformInfo 0) (select ti_4::trans._TransformInfo 4), form_arity_3_1::I = select _x_3_0::_Tuple3 0, ar_diff_3_2 = <{StdInt.-_7}> form_arity_3_1 (StdList.length_47 app_args_2_1) in case (StdBool.not (<{StdInt.<_17}> ar_diff_3_2 (StdList.length_47 extra_args_1))) (True -> _Tuple2 (syntax.App (update app_1_0::syntax._App [1:<{StdList.++}> app_args_2_1 extra_args_1])) (update ti_4::trans._TransformInfo [0:select _x_3_0::_Tuple3 1,4:select _x_3_0::_Tuple3 2])) (False -> _Tuple2 (<{syntax.@}> (syntax.App (update app_1_0::syntax._App [1:<{StdList.++}> app_args_2_1 (StdList.take ar_diff_3_2 extra_args_1)])) (StdList.drop ar_diff_3_2 extra_args_1)) (update ti_4::trans._TransformInfo [0:select _x_3_0::_Tuple3 1,4:select _x_3_0::_Tuple3 2])) ) ) (syntax.Case kees_1_0 -> case kees_1_0 (syntax._Case case_expr_2_0 case_guards_2_1 case_default_2_2 case_ident_2_3 case_info_ptr_2_4 case_explicit_2_5 case_default_pos_2_6 -> let _x_3_0 = trans.add_arguments_opt_293 case_default_2_2 extra_args_1 new_result_type_2 ro_3 ti_4, _x_3_1 = trans.add_arguments_guards_294 case_guards_2_1 extra_args_1 new_result_type_2 ro_3 (select _x_3_0::_Tuple2 1), ti_3_2 = select _x_3_1::_Tuple2 1 in _Tuple2 (syntax.Case (update kees_1_0::syntax._Case [1:select _x_3_1::_Tuple2 0,2:select _x_3_0::_Tuple2 0])) (update ti_3_2::trans._TransformInfo [6:trans.overwrite_result_type_291 case_info_ptr_2_4 new_result_type_2 (select ti_3_2::trans._TransformInfo 6)])) ) (syntax.Let lad_1_0 -> case lad_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> let _x_3_0 = trans.add_arguments_292 let_expr_2_2 extra_args_1 new_result_type_2 ro_3 ti_4 in _Tuple2 (syntax.Let (update lad_1_0::syntax._Let [2:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (<{syntax.@}> expr1_1_0 expr2_1_1 -> _Tuple2 (<{syntax.@}> expr1_1_0 (<{StdList.++}> expr2_1_1 extra_args_1)) ti_4) (_ -> _Tuple2 (<{syntax.@}> _x_0 extra_args_1) ti_4)
trans.add_args_to_fun_body act_args_0 new_result_type_1 !tb_rhs_2 ro_3 ti_4 = trans.add_arguments_292 tb_rhs_2 act_args_0 new_result_type_1 ro_3 ti_4
trans.fold_st2_647 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (trans.fold_st2_647 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.fold_st2_646 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (trans.fold_st2_646 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.map_st_645 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_645 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.substitute_class_types_403 !_vsubstitute_0 class_types_1 !_x_2 = case _x_2 (general.No -> _Tuple2 class_types_1 general.No) (general.Yes type_heaps_1_0 -> let _x_2_0 = select _vsubstitute_0::<{expand_types.substitute;}> 0 class_types_1 type_heaps_1_0 in _Tuple2 (select _x_2_0::_Tuple3 1) (general.Yes (select _x_2_0::_Tuple3 2))) 
<{trans.c;4976;37_402}> !g_l_0 = <{trans.g_c1;4976;62_1162}> g_l_0
<{trans.g_c1;4976;62_1162}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;4976;62_1161}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;4976;62_1161}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons (syntax.Var (syntax._BoundVar fv_ident_1_1 fv_info_ptr_1_2 Heap.nilPtr)) (<{trans.c;4976;37_402}> g_t_1)) (_ -> <{trans.c;4976;37_402}> g_t_1)
trans.copy_516 !fv_0 !ci_1 !cs_2 = case fv_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> case cs_2 (trans._CopyState cs_var_heap_2_0 cs_symbol_heap_2_1 cs_opt_type_heaps_2_2 cs_cleanup_info_2_3 -> let _x_3_0 = Heap.newPtr syntax.VI_Empty cs_var_heap_2_0, new_info_ptr_3_1 = select _x_3_0::_Tuple2 0 in <{_Tuple2!3}> (update fv_0::syntax._FreeVar [2:new_info_ptr_3_1]) (update cs_2::trans._CopyState [0:Heap.writePtr fv_info_ptr_1_2 (syntax.VI_Variable fv_ident_1_1 new_info_ptr_3_1) (select _x_3_0::_Tuple2 1)])) ) 
trans.copy_bound_vars_414 ci_0 !_x_1 cs_2 = case _x_1 (_predefined._Cons bind_1_0 binds_1_1 -> case bind_1_0 (syntax._LetBind lb_dst_2_0 lb_src_2_1 lb_position_2_2 -> let _x_3_0 = trans.copy_516 lb_dst_2_0 ci_0 cs_2, _x_3_1 = trans.copy_bound_vars_414 ci_0 binds_1_1 (select _x_3_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (update bind_1_0::syntax._LetBind [0:select _x_3_0::_Tuple2 0]) (select _x_3_1::_Tuple2 0)) (select _x_3_1::_Tuple2 1)) ) (_predefined._Nil -> _Tuple2 _predefined._Nil cs_2) 
trans.equal_basic_type::B !_x_0 _x_1 = case _x_0 (syntax.BT_Int -> case _x_1 (syntax.BT_Int -> True) ) (syntax.BT_Char -> case _x_1 (syntax.BT_Char -> True) ) (syntax.BT_Bool -> case _x_1 (syntax.BT_Bool -> True) ) (syntax.BT_Real -> case _x_1 (syntax.BT_Real -> True) ) (syntax.BT_Dynamic -> case _x_1 (syntax.BT_Dynamic -> True) ) (syntax.BT_File -> case _x_1 (syntax.BT_File -> True) ) (syntax.BT_World -> case _x_1 (syntax.BT_World -> True) ) (_ -> False)
trans.equal_atypes::B !_x_0 _x_1 = case _x_0 (_predefined._Nil -> case _x_1 (_predefined._Nil -> True) ) (_predefined._Cons atype1_1_0 atypes1_1_1 -> case _x_1 (_predefined._Cons atype2_2_0 atypes2_2_1 -> case (trans.equal_atype atype1_1_0 atype2_2_0) (True -> trans.equal_atypes atypes1_1_1 atypes2_2_1) (False -> False) ) ) (_ -> False)
trans.equal_type::B !_x_0 !_x_1 = case _x_0 (syntax.TA _x_1_0 types1_1_1 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index1_2_2 type_prop_2_3 -> case _x_1 (syntax.TA _x_3_0 types2_3_1 -> case _x_3_0 (syntax._TypeSymbIdent type_ident_4_0 type_arity_4_1 type_index2_4_2 type_prop_4_3 -> case (<{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) type_index1_2_2 type_index2_4_2) (True -> trans.equal_atypes types1_1_1 types2_3_1) (False -> False) ) ) ) ) (syntax.TAS _x_1_0 types1_1_1 strictness1_1_2 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index1_2_2 type_prop_2_3 -> case _x_1 (syntax.TAS _x_3_0 types2_3_1 strictness2_3_2 -> case _x_3_0 (syntax._TypeSymbIdent type_ident_4_0 type_arity_4_1 type_index2_4_2 type_prop_4_3 -> case (<{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) type_index1_2_2 type_index2_4_2) (True -> case (containers.equal_strictness_lists strictness1_1_2 strictness2_3_2) (True -> trans.equal_atypes types1_1_1 types2_3_1) (False -> False) ) (False -> False) ) ) ) ) (syntax.TB bt1_1_0 -> case _x_1 (syntax.TB bt2_2_0 -> trans.equal_basic_type bt1_1_0 bt2_2_0) ) (syntax.TV _x_1_0 -> case _x_1_0 (syntax._TypeVar tv_ident_2_0 tv_info_ptr1_2_1 -> case _x_1 (syntax.TV _x_3_0 -> case _x_3_0 (syntax._TypeVar tv_ident_4_0 tv_info_ptr2_4_1 -> <{Heap.==_10}> tv_info_ptr1_2_1 tv_info_ptr2_4_1) ) ) ) (_ -> False)
trans.equal_atype::B !_x_0 !_x_1 = case _x_0 (syntax._AType _x_1_0 type1_1_1 -> case _x_1_0 (syntax.TA_Multi -> case _x_1 (syntax._AType _x_3_0 type2_3_1 -> case _x_3_0 (syntax.TA_Multi -> trans.equal_type type1_1_1 type2_3_1) ) ) (syntax.TA_Unique -> case _x_1 (syntax._AType _x_3_0 type2_3_1 -> case _x_3_0 (syntax.TA_Unique -> trans.equal_type type1_1_1 type2_3_1) ) ) (syntax.TA_Var _x_2_0 -> case _x_2_0 (syntax._AttributeVar av_ident_3_0 av_info_ptr1_3_1 -> case _x_1 (syntax._AType _x_4_0 type2_4_1 -> case _x_4_0 (syntax.TA_Var _x_5_0 -> case _x_5_0 (syntax._AttributeVar av_ident_6_0 av_info_ptr2_6_1 -> case (<{Heap.==_10}> av_info_ptr1_3_1 av_info_ptr2_6_1) (True -> trans.equal_type type1_1_1 type2_4_1) (False -> False) ) ) ) ) ) ) (_ -> False)
trans.use_parent_result_type_if_equal_416 !_x_0 !result_type_r_1 = case _x_0 (general.Yes parent_result_type_1_0 -> case (trans.equal_atype result_type_r_1 parent_result_type_1_0) (True -> parent_result_type_1_0) (False -> result_type_r_1) ) (general.No -> result_type_r_1) 
trans.substituteCaseType_415 !_x_0 parent_opt_result_type_1 !heaps_2 = case _x_0 (syntax._CaseType ct_pattern_type_1_0 ct_result_type_1_1 ct_cons_types_1_2 -> let _x_2_0 = expand_types.substitute_8 ct_pattern_type_1_0 heaps_2 in case (select _x_2_0::_Tuple3 0) (True -> let heaps_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = expand_types.substitute_8 ct_result_type_1_1 heaps_4_0 in case (select _x_4_1::_Tuple3 0) (True -> let heaps_6_0 = select _x_4_1::_Tuple3 2, _x_6_1 = expand_types.substitute_12 (<{expand_types.substitute;}> expand_types.substitute_17) ct_cons_types_1_2 heaps_6_0 in case (select _x_6_1::_Tuple3 0) (True -> _Tuple3 True (syntax._CaseType (select _x_2_0::_Tuple3 1) (trans.use_parent_result_type_if_equal_416 parent_opt_result_type_1 (select _x_4_1::_Tuple3 1)) (select _x_6_1::_Tuple3 1)) (select _x_6_1::_Tuple3 2)) (False -> _Tuple3 True (syntax._CaseType (select _x_2_0::_Tuple3 1) (trans.use_parent_result_type_if_equal_416 parent_opt_result_type_1 (select _x_4_1::_Tuple3 1)) ct_cons_types_1_2) (select _x_6_1::_Tuple3 2)) ) (False -> let heaps_6_0 = select _x_4_1::_Tuple3 2, _x_6_1 = expand_types.substitute_12 (<{expand_types.substitute;}> expand_types.substitute_17) ct_cons_types_1_2 heaps_6_0 in case (select _x_6_1::_Tuple3 0) (True -> _Tuple3 True (syntax._CaseType (select _x_2_0::_Tuple3 1) ct_result_type_1_1 (select _x_6_1::_Tuple3 1)) (select _x_6_1::_Tuple3 2)) (False -> _Tuple3 True (syntax._CaseType (select _x_2_0::_Tuple3 1) ct_result_type_1_1 ct_cons_types_1_2) (select _x_6_1::_Tuple3 2)) ) ) (False -> let heaps_4_0 = select _x_2_0::_Tuple3 2, _x_4_1 = expand_types.substitute_8 ct_result_type_1_1 heaps_4_0 in case (select _x_4_1::_Tuple3 0) (True -> let heaps_6_0 = select _x_4_1::_Tuple3 2, _x_6_1 = expand_types.substitute_12 (<{expand_types.substitute;}> expand_types.substitute_17) ct_cons_types_1_2 heaps_6_0 in case (select _x_6_1::_Tuple3 0) (True -> _Tuple3 True (syntax._CaseType ct_pattern_type_1_0 (trans.use_parent_result_type_if_equal_416 parent_opt_result_type_1 (select _x_4_1::_Tuple3 1)) (select _x_6_1::_Tuple3 1)) (select _x_6_1::_Tuple3 2)) (False -> _Tuple3 True (syntax._CaseType ct_pattern_type_1_0 (trans.use_parent_result_type_if_equal_416 parent_opt_result_type_1 (select _x_4_1::_Tuple3 1)) ct_cons_types_1_2) (select _x_6_1::_Tuple3 2)) ) (False -> let heaps_6_0 = select _x_4_1::_Tuple3 2, _x_6_1 = expand_types.substitute_12 (<{expand_types.substitute;}> expand_types.substitute_17) ct_cons_types_1_2 heaps_6_0 in case (select _x_6_1::_Tuple3 0) (True -> _Tuple3 True (syntax._CaseType ct_pattern_type_1_0 ct_result_type_1_1 (select _x_6_1::_Tuple3 1)) (select _x_6_1::_Tuple3 2)) (False -> _Tuple3 False (syntax._CaseType ct_pattern_type_1_0 ct_result_type_1_1 ct_cons_types_1_2) (select _x_6_1::_Tuple3 2)) ) ) ) 
trans.substitute_case_type expr_info_0 parent_opt_result_type_1 !_x_2 = case _x_2 (general.No -> _Tuple3 expr_info_0 general.No general.No) (_ -> case expr_info_0 (syntax.EI_Extended extensions_1_0 expr_info_1_1 -> let _x_2_0 = trans.substitute_case_type expr_info_1_1 parent_opt_result_type_1 _x_2 in _Tuple3 (syntax.EI_Extended extensions_1_0 (select _x_2_0::_Tuple3 0)) (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) (syntax.EI_CaseType case_type_1_0 -> case _x_2 (general.Yes type_heaps_2_0 -> let _x_3_0 = trans.substituteCaseType_415 case_type_1_0 parent_opt_result_type_1 type_heaps_2_0 in case (select _x_3_0::_Tuple3 0) (True -> let new_case_type_5_0 = select _x_3_0::_Tuple3 1 in _Tuple3 (syntax.EI_CaseType new_case_type_5_0) (general.Yes (select new_case_type_5_0::syntax._CaseType 1)) (general.Yes (select _x_3_0::_Tuple3 2))) (False -> _Tuple3 expr_info_0 (general.Yes (select (select _x_3_0::_Tuple3 1)::syntax._CaseType 1)) (general.Yes (select _x_3_0::_Tuple3 2))) ) ) )
trans.map_st_441 !_vcopy_0 ci_1 !_x_2 s_3 = case _x_2 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = select _vcopy_0::<{trans.copy;}> 0 x_1_0 ci_1 s_3, _x_2_2 = trans.map_st_441 _vcopy_0 ci_1 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> _Tuple2 _predefined._Nil s_3) 
trans.copy_521 !_vcopy_0 !l_1 !ci_2 !cs_3 = trans.map_st_441 _vcopy_0 ci_2 l_1 cs_3
trans.fold_st2_629 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (trans.fold_st2_629 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.map_st_628 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_628 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st2_627 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (trans.fold_st2_627 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.map_st_626 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_626 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_625 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_625 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.copyBoundVar_410 !_x_0 cs_1 = case _x_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> let _x_2_0 = Heap.readPtr var_info_ptr_1_1 (select cs_1::trans._CopyState 0) in _Tuple2 (select (select (select _x_2_0::_Tuple2 0)::_Tuple1 0)::_Tuple1 0) (update cs_1::trans._CopyState [0:select _x_2_0::_Tuple2 1])) 
trans.forward_old_type_vars_to_new_type_vars_412 !_x_0 !_x_1 !type_var_heap_2 = case _x_0 (_predefined._Cons original_type_var_1_0 original_type_vars_1_1 -> case _x_1 (_predefined._Cons new_type_var_2_0 new_type_vars_2_1 -> let _x_3_0 = trans.forward_old_type_vars_to_new_type_vars_412 original_type_vars_1_1 new_type_vars_2_1 type_var_heap_2, type_var_heap_3_1 = select _x_3_0::_Tuple2 1, _x_3_2 = Heap.readPtr (select original_type_var_1_0::syntax._TypeVar 1) type_var_heap_3_1, type_var_heap_3_3 = select _x_3_2::_Tuple2 1, _x_3_4 = Heap.readPtr (select new_type_var_2_0::syntax._TypeVar 1) type_var_heap_3_3, new_type_var_value_3_5 = select _x_3_4::_Tuple2 0, type_var_heap_3_6 = select _x_3_4::_Tuple2 1, old_type_var_value_3_7 = select _x_3_2::_Tuple2 0, old_type_vars_values_3_8 = select _x_3_0::_Tuple2 0 in <{trans._c;5240;11_1163}> new_type_var_value_3_5 old_type_var_value_3_7 old_type_vars_values_3_8 original_type_var_1_0 type_var_heap_3_6 new_type_var_2_0) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> <{_Tuple2!3}> _predefined._Nil type_var_heap_2) ) 
<{trans._c;5240;11_1163}> !new_type_var_value_0 old_type_var_value_1 old_type_vars_values_2 !original_type_var_3 !type_var_heap_4 new_type_var_5 = case new_type_var_value_0 (syntax.TVI_Type type_1_0 -> <{_Tuple2!3}> (_predefined._Cons old_type_var_value_1 old_type_vars_values_2) (Heap.writePtr (select original_type_var_3::syntax._TypeVar 1) new_type_var_value_0 type_var_heap_4)) (_ -> <{_Tuple2!3}> (_predefined._Cons old_type_var_value_1 old_type_vars_values_2) (Heap.writePtr (select original_type_var_3::syntax._TypeVar 1) (syntax.TVI_Type (syntax.TV new_type_var_5)) type_var_heap_4))
trans.forward_old_type_vars_to_new_type_vars !original_type_vars_0 !new_type_vars_1 !_x_2 = case _x_2 (general.No -> <{_Tuple2!3}> _predefined._Nil general.No) (general.Yes type_heaps_1_0 -> let _x_2_0 = trans.forward_old_type_vars_to_new_type_vars_412 original_type_vars_0 new_type_vars_1 (select type_heaps_1_0::syntax._TypeHeaps 0) in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (general.Yes (update type_heaps_1_0::syntax._TypeHeaps [0:select _x_2_0::_Tuple2 1]))) 
<{trans.c;5140;56_404}> !g_l_0 = <{trans.g_c1;5140;72_1165}> g_l_0
<{trans.g_c1;5140;72_1165}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;5140;72_1164}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;5140;72_1164}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons fv_info_ptr_1_2 (<{trans.c;5140;56_404}> g_t_1)) (_ -> <{trans.c;5140;56_404}> g_t_1)
trans.fold_st2_624 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (trans.fold_st2_624 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.bind_411 !fv_info_ptr_0 !_x_1 !var_heap_2 = case _x_1 (syntax._FreeVar fv_def_level_1_0 name_1_1 info_ptr_1_2 fv_count_1_3 -> trans.writeVarInfo fv_info_ptr_0 (syntax.VI_Expression (syntax.Var (syntax._BoundVar name_1_1 info_ptr_1_2 Heap.nilPtr))) var_heap_2) 
trans.fold_st2_854 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> trans.bind_411 x_1_0 y_2_0 (trans.fold_st2_854 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.bind_vars !dest_info_ptrs_0 !src_free_vars_1 !var_heap_2 = trans.fold_st2_854 dest_info_ptrs_0 src_free_vars_1 var_heap_2
trans.write_old_type_vars_values_413 !_x_0 !_x_1 !type_var_heap_2 = case _x_0 (_predefined._Cons _x_1_0 type_vars_1_1 -> case _x_1_0 (syntax._TypeVar tv_ident_2_0 tv_info_ptr_2_1 -> case _x_1 (_predefined._Cons type_var_value_3_0 type_var_values_3_1 -> trans.write_old_type_vars_values_413 type_vars_1_1 type_var_values_3_1 (Heap.writePtr tv_info_ptr_2_1 type_var_value_3_0 type_var_heap_2)) ) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> type_var_heap_2) ) 
trans.restore_old_type_vars_values !original_type_vars_0 !old_original_type_vars_values_1 !_x_2 = case _x_2 (general.No -> general.No) (general.Yes type_heaps_1_0 -> general.Yes (update type_heaps_1_0::syntax._TypeHeaps [0:trans.write_old_type_vars_values_413 original_type_vars_0 old_original_type_vars_values_1 (select type_heaps_1_0::syntax._TypeHeaps 0)])) 
trans.is_var_list_408::B !_x_0 = case _x_0 (_predefined._Cons _x_1_0 exprs_1_1 -> case _x_1_0 (syntax.Var _x_2_0 -> trans.is_var_list_408 exprs_1_1) (_ -> False)) (_predefined._Nil -> True) 
<{trans.c;5165;51_405}> !g_l_0 = <{trans.g_c1;5165;67_1167}> g_l_0
<{trans.g_c1;5165;67_1167}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;5165;67_1166}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;5165;67_1166}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons fv_info_ptr_1_2 (<{trans.c;5165;51_405}> g_t_1)) (_ -> <{trans.c;5165;51_405}> g_t_1)
trans.bind_variables_for_exprs_407 !_x_0 !_x_1 !var_heap_2 = case _x_0 (_predefined._Cons fv_info_ptr_1_0 arg_ptrs_1_1 -> case _x_1 (_predefined._Cons _x_2_0 exprs_2_1 -> case _x_2_0 (syntax.Var _x_3_0 -> case _x_3_0 (syntax._BoundVar name_4_0 info_ptr_4_1 var_expr_ptr_4_2 -> let _x_5_0 = trans.bind_variables_for_exprs_407 arg_ptrs_1_1 exprs_2_1 var_heap_2 in <{_Tuple2!3}> (select _x_5_0::_Tuple2 0) (trans.writeVarInfo fv_info_ptr_1_0 (syntax.VI_Expression (syntax.Var (syntax._BoundVar name_4_0 info_ptr_4_1 Heap.nilPtr))) (select _x_5_0::_Tuple2 1))) ) ) ) (_predefined._Nil -> <{_Tuple2!3}> _x_1 var_heap_2) 
trans.bind_variables_406 !_x_0 !_x_1 !exprs_2 !var_heap_3 = case _x_0 (_predefined._Cons fv_info_ptr_1_0 arg_ptrs_1_1 -> case _x_1 (_predefined._Cons _x_2_0 new_aci_params_2_1 -> case _x_2_0 (syntax._FreeVar fv_def_level_3_0 name_3_1 info_ptr_3_2 fv_count_3_3 -> let _x_4_0 = trans.bind_variables_406 arg_ptrs_1_1 new_aci_params_2_1 exprs_2 var_heap_3 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (trans.writeVarInfo fv_info_ptr_1_0 (syntax.VI_Expression (syntax.Var (syntax._BoundVar name_3_1 info_ptr_3_2 Heap.nilPtr))) (select _x_4_0::_Tuple2 1))) ) (_predefined._Nil -> trans.bind_variables_for_exprs_407 _x_0 exprs_2 var_heap_3) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> <{_Tuple2!3}> exprs_2 var_heap_3) ) 
trans.substitute_let_type expr_info_0 !_x_1 = case _x_1 (general.No -> _Tuple2 expr_info_0 general.No) (_ -> case expr_info_0 (syntax.EI_Extended extensions_1_0 expr_info_1_1 -> let _x_2_0 = trans.substitute_let_type expr_info_1_1 _x_1 in _Tuple2 (syntax.EI_Extended extensions_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.EI_LetType let_type_1_0 -> case _x_1 (general.Yes type_heaps_2_0 -> let _x_3_0 = expand_types.substitute_17 let_type_1_0 type_heaps_2_0 in case (select _x_3_0::_Tuple3 0) (True -> _Tuple2 (syntax.EI_LetType (select _x_3_0::_Tuple3 1)) (general.Yes (select _x_3_0::_Tuple3 2))) (False -> _Tuple2 expr_info_0 (general.Yes (select _x_3_0::_Tuple3 2))) ) ) )
<{trans.c;4915;48_438}> !g_l_0 = <{trans.g_c1;4915;64_1169}> g_l_0
<{trans.g_c1;4915;64_1169}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;4915;64_1168}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;4915;64_1168}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons fv_info_ptr_1_2 (<{trans.c;4915;48_438}> g_t_1)) (_ -> <{trans.c;4915;48_438}> g_t_1)
trans.substitute_EI_DictionaryType_440 !_x_0 _x_1 = case _x_0 (syntax.EI_DictionaryType class_type_1_0 -> case _x_1 (general.Yes type_heaps_2_0 -> let _x_3_0 = expand_types.substitute_7 class_type_1_0 type_heaps_2_0 in _Tuple2 (syntax.EI_DictionaryType (select _x_3_0::_Tuple3 1)) (general.Yes (select _x_3_0::_Tuple3 2))) ) (_ -> _Tuple2 _x_0 _x_1)
trans.copy_519 !_vcopy_0 !bind_1 !ci_2 !cs_3 = case bind_1 (general._Bind bind_src_1_0 bind_dst_1_1 -> let _x_2_0 = select _vcopy_0::<{trans.copy;}> 0 bind_src_1_0 ci_2 cs_3 in <{_Tuple2!3}> (update bind_1::general._Bind [0:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
trans.copy_522 !_vcopy_0 !_vcopy_1 !_x_2 !ci_3 !cs_4 = case _x_2 (_Tuple2 a_1_0 b_1_1 -> let _x_2_0 = select _vcopy_0::<{trans.copy;}> 0 a_1_0 ci_3 cs_4, _x_2_1 = select _vcopy_1::<{trans.copy;}> 0 b_1_1 ci_3 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_Tuple2 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
trans.substitute_class_types_867 class_types_0 !_x_1 = case _x_1 (general.No -> _Tuple2 class_types_0 general.No) (general.Yes type_heaps_1_0 -> let _x_2_0 = expand_types.substitute_7 class_types_0 type_heaps_1_0 in _Tuple2 (select _x_2_0::_Tuple3 1) (general.Yes (select _x_2_0::_Tuple3 2))) 
trans.map_st_858 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = Heap.readPtr x_1_0 s_1, _x_2_2 = trans.map_st_858 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st2_859 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> Heap.writePtr x_1_0 y_2_0 (trans.fold_st2_859 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.fold_st2_860 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> Heap.writePtr x_1_0 y_2_0 (trans.fold_st2_860 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.map_st_873 ci_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.copy_516 x_1_0 ci_0 s_2, _x_2_2 = trans.map_st_873 ci_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> _Tuple2 _predefined._Nil s_2) 
trans.copy_872 !l_0 !ci_1 !cs_2 = trans.map_st_873 ci_1 l_0 cs_2
trans.map_st_877 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = Heap.readPtr x_1_0 s_1, _x_2_2 = trans.map_st_877 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st2_878 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> Heap.writePtr x_1_0 y_2_0 (trans.fold_st2_878 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.map_st_874 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.copyBoundVar_410 x_1_0 s_1, _x_2_2 = trans.map_st_874 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_875 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = Heap.readPtr x_1_0 s_1, _x_2_2 = trans.map_st_875 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st2_876 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> Heap.writePtr x_1_0 y_2_0 (trans.fold_st2_876 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.copy_function_app_439 !app_0 ci_1 cs_2 = case app_0 (syntax._App app_symb_1_0 app_args_1_1 app_info_ptr_1_2 -> let _x_2_0 = Heap.newPtr syntax.EI_Empty (select cs_2::trans._CopyState 1), _x_2_1 = trans.copy_855 app_args_1_1 ci_1 (update cs_2::trans._CopyState [1:select _x_2_0::_Tuple2 1]) in _Tuple2 (update app_0::syntax._App [1:select _x_2_1::_Tuple2 0,2:select _x_2_0::_Tuple2 0]) (select _x_2_1::_Tuple2 1)) 
trans.copy_517 !app_0 !ci_1 !cs_2 = case app_0 (syntax._App app_symb_1_0 app_args_1_1 app_info_ptr_1_2 -> case app_symb_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> <{trans._c;5036;11_1191}> symb_kind_2_1 app_0 ci_1 cs_2 app_info_ptr_1_2 app_args_1_1) ) 
trans.copy_879 !_x_0 !ci_1 !cs_2 = case _x_0 (_Tuple2 a_1_0 b_1_1 -> let _x_2_0 = trans.copy_513 a_1_0 ci_1 cs_2, _x_2_1 = trans.copy_855 b_1_1 ci_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_Tuple2 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
trans.map_st_856 ci_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.copy_513 x_1_0 ci_0 s_2, _x_2_2 = trans.map_st_856 ci_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> _Tuple2 _predefined._Nil s_2) 
trans.copy_855 !l_0 !ci_1 !cs_2 = trans.map_st_856 ci_1 l_0 cs_2
trans.update_active_case_info_and_copy_409 !ci_0 !case_expr_1 case_info_ptr_2 !cs_3 = case case_expr_1 (syntax.Var _x_1_0 -> case _x_1_0 (syntax._BoundVar var_ident_2_0 var_info_ptr_2_1 var_expr_ptr_2_2 -> let _x_3_0 = Heap.readPtr case_info_ptr_2 (select cs_3::trans._CopyState 1), cs_symbol_heap_3_1 = select _x_3_0::_Tuple2 1 in <{trans._c;5121;11_1184}> (select _x_3_0::_Tuple2 0) cs_3 cs_symbol_heap_3_1 var_info_ptr_2_1 ci_0 case_info_ptr_2 case_expr_1) ) (<{syntax.@}> _x_1_0 exprs_1_1 -> case _x_1_0 (syntax.Var var_2_0 -> case var_2_0 (syntax._BoundVar var_ident_3_0 var_info_ptr_3_1 var_expr_ptr_3_2 -> let _x_4_0 = trans.copy_855 exprs_1_1 ci_0 cs_3, exprs_4_1 = select _x_4_0::_Tuple2 0 in case (trans.is_var_list_408 exprs_4_1) (True -> let cs_6_0 = select _x_4_0::_Tuple2 1, _x_6_1 = trans.readVarInfo var_info_ptr_3_1 (select cs_6_0::trans._CopyState 0), var_heap_6_2 = select _x_6_1::_Tuple2 1 in <{trans._c;5160;15_1190}> (select _x_6_1::_Tuple2 0) exprs_4_1 cs_6_0 var_heap_6_2 case_info_ptr_2 ci_0 var_2_0) (False -> let _x_6_0 = trans.copyVariable var_2_0 ci_0 (select _x_4_0::_Tuple2 1) in <{_Tuple2!3}> (<{syntax.@}> (select _x_6_0::_Tuple2 0) exprs_4_1) (select _x_6_0::_Tuple2 1)) ) ) ) (_ -> trans.copy_513 case_expr_1 ci_0 cs_3)
trans.copyOptCaseAlt !_x_0 opt_result_type_1 ci_2 cs_3 = case _x_0 (general.Yes expr_1_0 -> let _x_2_0 = trans.copyCaseAlt expr_1_0 opt_result_type_1 ci_2 cs_3 in _Tuple2 (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (general.No -> _Tuple2 general.No cs_3) 
trans.copyBasicPatterns !_x_0 opt_result_type_1 ci_2 cs_3 = case _x_0 (_predefined._Cons guard_1_0 guards_1_1 -> case guard_1_0 (syntax._BasicPattern bp_value_2_0 bp_expr_2_1 bp_position_2_2 -> let !guard_3_0 = update guard_1_0::syntax._BasicPattern [1:select _x_3_2::_Tuple2 0], !cs_3_1 = _predefined._dummyForStrictAlias (select _x_3_3::_Tuple2 1), _x_3_2 = trans.copyCaseAlt bp_expr_2_1 opt_result_type_1 ci_2 cs_3, _x_3_3 = trans.copyBasicPatterns guards_1_1 opt_result_type_1 ci_2 (select _x_3_2::_Tuple2 1) in _Tuple2 (_predefined._Cons guard_3_0 (select _x_3_3::_Tuple2 0)) cs_3_1) ) (_predefined._Nil -> _Tuple2 _predefined._Nil cs_3) 
trans.copy_518 !bind_0 !ci_1 !cs_2 = case bind_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> let _x_2_0 = trans.copy_513 lb_src_1_1 ci_1 cs_2 in <{_Tuple2!3}> (update bind_0::syntax._LetBind [1:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
trans.map_st_869 ci_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.copy_518 x_1_0 ci_0 s_2, _x_2_2 = trans.map_st_869 ci_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> _Tuple2 _predefined._Nil s_2) 
trans.copy_868 !l_0 !ci_1 !cs_2 = trans.map_st_869 ci_1 l_0 cs_2
trans.copyLet !lad_0 !optional_result_type_1 !ci_2 !cs_3 = case lad_0 (syntax._Let let_strict_binds_1_0 let_lazy_binds_1_1 let_expr_1_2 let_info_ptr_1_3 let_expr_position_1_4 -> let _x_2_0 = trans.copy_bound_vars_414 ci_2 let_strict_binds_1_0 cs_3, _x_2_1 = trans.copy_bound_vars_414 ci_2 let_lazy_binds_1_1 (select _x_2_0::_Tuple2 1), _x_2_2 = trans.copy_868 (select _x_2_0::_Tuple2 0) ci_2 (select _x_2_1::_Tuple2 1), _x_2_3 = trans.copy_868 (select _x_2_1::_Tuple2 0) ci_2 (select _x_2_2::_Tuple2 1), _x_2_4 = trans.copyCaseAlt let_expr_1_2 optional_result_type_1 ci_2 (select _x_2_3::_Tuple2 1), cs_2_5 = select _x_2_4::_Tuple2 1, _x_2_6 = Heap.readPtr let_info_ptr_1_3 (select cs_2_5::trans._CopyState 1), _x_2_7 = trans.substitute_let_type (select _x_2_6::_Tuple2 0) (select cs_2_5::trans._CopyState 2), _x_2_8 = Heap.newPtr (select _x_2_7::_Tuple2 0) (select _x_2_6::_Tuple2 1) in <{_Tuple2!3}> (update lad_0::syntax._Let [0:select _x_2_2::_Tuple2 0,1:select _x_2_3::_Tuple2 0,2:select _x_2_4::_Tuple2 0,3:select _x_2_8::_Tuple2 0]) (update cs_2_5::trans._CopyState [1:select _x_2_8::_Tuple2 1,2:select _x_2_7::_Tuple2 1])) 
trans.copyCaseAlt !_x_0 opt_result_type_1 ci_2 cs_3 = case _x_0 (syntax.Let lad_1_0 -> let _x_2_0 = trans.copyLet lad_1_0 opt_result_type_1 ci_2 cs_3 in _Tuple2 (syntax.Let (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.Case case_expr_1_0 -> let _x_2_0 = trans.copyCase case_expr_1_0 opt_result_type_1 ci_2 cs_3 in _Tuple2 (syntax.Case (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (_ -> trans.copy_513 _x_0 ci_2 cs_3)
trans.copyAlgebraicPatterns !_x_0 opt_result_type_1 ci_2 cs_3 = case _x_0 (_predefined._Cons guard_1_0 guards_1_1 -> case guard_1_0 (syntax._AlgebraicPattern ap_symbol_2_0 ap_vars_2_1 ap_expr_2_2 ap_position_2_3 -> let !guard_3_0 = update guard_1_0::syntax._AlgebraicPattern [1:select _x_3_2::_Tuple2 0,2:select _x_3_3::_Tuple2 0], !cs_3_1 = _predefined._dummyForStrictAlias (select _x_3_4::_Tuple2 1), _x_3_2 = trans.copy_872 ap_vars_2_1 ci_2 cs_3, _x_3_3 = trans.copyCaseAlt ap_expr_2_2 opt_result_type_1 ci_2 (select _x_3_2::_Tuple2 1), _x_3_4 = trans.copyAlgebraicPatterns guards_1_1 opt_result_type_1 ci_2 (select _x_3_3::_Tuple2 1) in _Tuple2 (_predefined._Cons guard_3_0 (select _x_3_4::_Tuple2 0)) cs_3_1) ) (_predefined._Nil -> _Tuple2 _predefined._Nil cs_3) 
trans.copy_520 !guard_0 !ci_1 !cs_2 = case guard_0 (syntax._DynamicPattern dp_var_1_0 dp_type_1_1 dp_type_code_1_2 dp_rhs_1_3 dp_position_1_4 -> let _x_2_0 = trans.copy_516 dp_var_1_0 ci_1 cs_2, _x_2_1 = trans.copy_513 dp_rhs_1_3 ci_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (update guard_0::syntax._DynamicPattern [0:select _x_2_0::_Tuple2 0,3:select _x_2_1::_Tuple2 0]) (select _x_2_1::_Tuple2 1)) 
trans.map_st_871 ci_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.copy_520 x_1_0 ci_0 s_2, _x_2_2 = trans.map_st_871 ci_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> _Tuple2 _predefined._Nil s_2) 
trans.copy_870 !l_0 !ci_1 !cs_2 = trans.map_st_871 ci_1 l_0 cs_2
trans.copyCasePatterns !_x_0 !opt_result_type_1 !ci_2 !cs_3 = case _x_0 (syntax.AlgebraicPatterns type_1_0 patterns_1_1 -> let _x_2_0 = trans.copyAlgebraicPatterns patterns_1_1 opt_result_type_1 ci_2 cs_3 in <{_Tuple2!3}> (syntax.AlgebraicPatterns type_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.BasicPatterns type_1_0 patterns_1_1 -> let _x_2_0 = trans.copyBasicPatterns patterns_1_1 opt_result_type_1 ci_2 cs_3 in <{_Tuple2!3}> (syntax.BasicPatterns type_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.OverloadedListPatterns type_1_0 decons_expr_1_1 patterns_1_2 -> let _x_2_0 = trans.copyAlgebraicPatterns patterns_1_2 opt_result_type_1 ci_2 cs_3, _x_2_1 = trans.copy_513 decons_expr_1_1 ci_2 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (syntax.OverloadedListPatterns type_1_0 (select _x_2_1::_Tuple2 0) (select _x_2_0::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (syntax.NewTypePatterns type_1_0 patterns_1_1 -> let _x_2_0 = trans.copyAlgebraicPatterns patterns_1_1 opt_result_type_1 ci_2 cs_3 in <{_Tuple2!3}> (syntax.NewTypePatterns type_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.DynamicPatterns patterns_1_0 -> let _x_2_0 = trans.copy_870 patterns_1_0 ci_2 cs_3 in <{_Tuple2!3}> (syntax.DynamicPatterns (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) 
trans.copyCase !kees_0 !opt_result_type_1 !ci_2 !cs_3 = case kees_0 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> case cs_3 (trans._CopyState cs_var_heap_2_0 cs_symbol_heap_2_1 cs_opt_type_heaps_2_2 cs_cleanup_info_2_3 -> let _x_3_0 = Heap.readPtr case_info_ptr_1_4 (select cs_3::trans._CopyState 1), old_case_info_3_1 = select _x_3_0::_Tuple2 0, _x_3_2 = trans.substitute_case_type old_case_info_3_1 opt_result_type_1 (select cs_3::trans._CopyState 2), new_case_info_3_3 = select _x_3_2::_Tuple3 0, cs_symbol_heap_3_4 = select _x_3_0::_Tuple2 1, _x_3_5 = Heap.newPtr new_case_info_3_3 cs_symbol_heap_3_4, new_info_ptr_3_6 = select _x_3_5::_Tuple2 0, opt_result_type_3_7 = select _x_3_2::_Tuple3 1, _x_3_8 = trans.copyCasePatterns case_guards_1_1 opt_result_type_3_7 ci_2 (update cs_3::trans._CopyState [1:select _x_3_5::_Tuple2 1,2:select _x_3_2::_Tuple3 2,3:<{trans._c;5109;25_1176}> old_case_info_3_1 new_info_ptr_3_6 cs_cleanup_info_2_3]), _x_3_9 = trans.copyOptCaseAlt case_default_1_2 opt_result_type_3_7 ci_2 (select _x_3_8::_Tuple2 1), _x_3_10 = trans.update_active_case_info_and_copy_409 ci_2 case_expr_1_0 new_info_ptr_3_6 (select _x_3_9::_Tuple2 1) in <{_Tuple2!3}> (update kees_0::syntax._Case [0:select _x_3_10::_Tuple2 0,1:select _x_3_8::_Tuple2 0,2:select _x_3_9::_Tuple2 0,4:new_info_ptr_3_6]) (select _x_3_10::_Tuple2 1)) ) 
trans.copy_880 !_x_0 !ci_1 !cs_2 = case _x_0 (_Tuple2 a_1_0 b_1_1 -> let _x_2_0 = trans.copy_513 a_1_0 ci_1 cs_2, _x_2_1 = trans.copy_861 b_1_1 ci_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_Tuple2 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
trans.copy_dictionary_variable !app_symb_0 !app_args_1 !class_type_2 !ci_3 !cs_4 = let _x_1_0 = trans.substitute_class_types_867 class_type_2 (select cs_4::trans._CopyState 2), _x_1_1 = Heap.newPtr (syntax.EI_DictionaryType (select _x_1_0::_Tuple2 0)) (select cs_4::trans._CopyState 1) in trans.copy_513 (syntax.App (syntax._App app_symb_0 app_args_1 (select _x_1_1::_Tuple2 0))) ci_3 (update cs_4::trans._CopyState [1:select _x_1_1::_Tuple2 1,2:select _x_1_0::_Tuple2 1])
trans.copyVariable !var_0 ci_1 !cs_2 = case var_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> let _x_2_0 = trans.readVarInfo var_info_ptr_1_1 (select cs_2::trans._CopyState 0), var_heap_2_1 = select _x_2_0::_Tuple2 1 in <{trans._c;4967;7_1175}> (select _x_2_0::_Tuple2 0) cs_2 var_heap_2_1 ci_1 var_0) 
trans.copy_515 !_x_0 !ci_1 !cs_2 = case _x_0 (syntax.ArraySelection array_select_1_0 expr_ptr_1_1 index_expr_1_2 -> case cs_2 (trans._CopyState cs_var_heap_2_0 cs_symbol_heap_2_1 cs_opt_type_heaps_2_2 cs_cleanup_info_2_3 -> let _x_3_0 = Heap.newPtr syntax.EI_Empty cs_symbol_heap_2_1, _x_3_1 = trans.copy_513 index_expr_1_2 ci_1 (update cs_2::trans._CopyState [1:select _x_3_0::_Tuple2 1]) in <{_Tuple2!3}> (syntax.ArraySelection array_select_1_0 (select _x_3_0::_Tuple2 0) (select _x_3_1::_Tuple2 0)) (select _x_3_1::_Tuple2 1)) ) (syntax.DictionarySelection var_1_0 selectors_1_1 expr_ptr_1_2 index_expr_1_3 -> case cs_2 (trans._CopyState cs_var_heap_2_0 cs_symbol_heap_2_1 cs_opt_type_heaps_2_2 cs_cleanup_info_2_3 -> let _x_3_0 = Heap.newPtr syntax.EI_Empty cs_symbol_heap_2_1, cs_symbol_heap_3_1 = select _x_3_0::_Tuple2 1, _x_3_2 = trans.copy_513 index_expr_1_3 ci_1 (update cs_2::trans._CopyState [1:cs_symbol_heap_3_1]), cs_3_3 = select _x_3_2::_Tuple2 1, _x_3_4 = trans.copyVariable var_1_0 ci_1 cs_3_3, cs_3_5 = select _x_3_4::_Tuple2 1, index_expr_3_6 = select _x_3_2::_Tuple2 0, new_ptr_3_7 = select _x_3_0::_Tuple2 0 in <{trans._c;5016;11_1174}> (select _x_3_4::_Tuple2 0) selectors_1_1 new_ptr_3_7 index_expr_3_6 cs_3_5) ) (_ -> <{_Tuple2!3}> _x_0 cs_2)
trans.map_st_862 ci_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.copy_515 x_1_0 ci_0 s_2, _x_2_2 = trans.map_st_862 ci_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> _Tuple2 _predefined._Nil s_2) 
trans.copy_861 !l_0 !ci_1 !cs_2 = trans.map_st_862 ci_1 l_0 cs_2
trans.copy_882 !_x_0 !ci_1 !cs_2 = case _x_0 (_Tuple2 a_1_0 b_1_1 -> let _x_2_0 = trans.copy_513 a_1_0 ci_1 cs_2, _x_2_1 = trans.copy_513 b_1_1 ci_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_Tuple2 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
trans.copy_881 !_x_0 !ci_1 !cs_2 = case _x_0 (_Tuple2 a_1_0 b_1_1 -> let _x_2_0 = trans.copy_882 a_1_0 ci_1 cs_2, _x_2_1 = trans.copy_861 b_1_1 ci_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_Tuple2 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
trans.copy_864 !bind_0 !ci_1 !cs_2 = case bind_0 (general._Bind bind_src_1_0 bind_dst_1_1 -> let _x_2_0 = trans.copy_513 bind_src_1_0 ci_1 cs_2 in <{_Tuple2!3}> (update bind_0::general._Bind [0:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
trans.map_st_866 ci_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.copy_864 x_1_0 ci_0 s_2, _x_2_2 = trans.map_st_866 ci_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> _Tuple2 _predefined._Nil s_2) 
trans.copy_865 !l_0 !ci_1 !cs_2 = trans.map_st_866 ci_1 l_0 cs_2
trans.copy_883 !_x_0 !ci_1 !cs_2 = case _x_0 (_Tuple2 a_1_0 b_1_1 -> let _x_2_0 = trans.copy_513 a_1_0 ci_1 cs_2, _x_2_1 = trans.copy_865 b_1_1 ci_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_Tuple2 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
trans.copy_514 !expr_0 !ci_1 !cs_2 = case expr_0 (syntax._DynamicExpr dyn_expr_1_0 dyn_opt_type_1_1 dyn_info_ptr_1_2 dyn_type_code_1_3 -> case cs_2 (trans._CopyState cs_var_heap_2_0 cs_symbol_heap_2_1 cs_opt_type_heaps_2_2 cs_cleanup_info_2_3 -> let _x_3_0 = Heap.readPtr dyn_info_ptr_1_2 cs_symbol_heap_2_1, _x_3_1 = Heap.newPtr (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1), _x_3_2 = trans.copy_513 dyn_expr_1_0 ci_1 (update cs_2::trans._CopyState [1:select _x_3_1::_Tuple2 1]) in <{_Tuple2!3}> (update expr_0::syntax._DynamicExpr [0:select _x_3_2::_Tuple2 0,2:select _x_3_1::_Tuple2 0]) (select _x_3_2::_Tuple2 1)) ) 
trans.copy_513 !_x_0 !ci_1 !cs_2 = case _x_0 (syntax.Var var_1_0 -> trans.copyVariable var_1_0 ci_1 cs_2) (syntax.App app_1_0 -> let _x_2_0 = trans.copy_517 app_1_0 ci_1 cs_2 in <{_Tuple2!3}> (syntax.App (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (<{syntax.@}> expr_1_0 exprs_1_1 -> let _x_2_0 = trans.copy_879 (_Tuple2 expr_1_0 exprs_1_1) ci_1 cs_2, _x_2_1 = select _x_2_0::_Tuple2 0 in <{_Tuple2!3}> (<{syntax.@}> (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1)) (select _x_2_0::_Tuple2 1)) (syntax.Let lad_1_0 -> let _x_2_0 = trans.copyLet lad_1_0 general.No ci_1 cs_2 in <{_Tuple2!3}> (syntax.Let (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.Case case_expr_1_0 -> let _x_2_0 = trans.copyCase case_expr_1_0 general.No ci_1 cs_2 in <{_Tuple2!3}> (syntax.Case (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.Selection selector_kind_1_0 _x_1_1 selectors_1_2 -> case selector_kind_1_0 (syntax.NormalSelector -> case _x_1_1 (syntax.Var var_3_0 -> case selectors_1_2 (_predefined._Cons _x_4_0 _x_4_1 -> case _x_4_0 (syntax.RecordSelection _x_5_0 field_n_5_1 -> case _x_4_1 (_predefined._Nil -> let _x_7_0 = trans.readVarInfo (select var_3_0::syntax._BoundVar 1) (select cs_2::trans._CopyState 0), var_heap_7_1 = select _x_7_0::_Tuple2 1 in <{trans._c;4904;11_1173}> (select _x_7_0::_Tuple2 0) selector_kind_1_0 selectors_1_2 cs_2 var_heap_7_1 ci_1 field_n_5_1 var_3_0) ) ) ) ) (_ -> let _x_2_0 = trans.copy_880 (_Tuple2 _x_1_1 selectors_1_2) ci_1 cs_2, _x_2_1 = select _x_2_0::_Tuple2 0 in <{_Tuple2!3}> (syntax.Selection selector_kind_1_0 (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1)) (select _x_2_0::_Tuple2 1))) (syntax.Update expr1_1_0 selectors_1_1 expr2_1_2 -> let _x_2_0 = trans.copy_881 (_Tuple2 (_Tuple2 expr1_1_0 expr2_1_2) selectors_1_1) ci_1 cs_2, _x_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = select _x_2_1::_Tuple2 0 in <{_Tuple2!3}> (syntax.Update (select _x_2_2::_Tuple2 0) (select _x_2_1::_Tuple2 1) (select _x_2_2::_Tuple2 1)) (select _x_2_0::_Tuple2 1)) (syntax.RecordUpdate cons_symbol_1_0 expression_1_1 expressions_1_2 -> let _x_2_0 = trans.copy_883 (_Tuple2 expression_1_1 expressions_1_2) ci_1 cs_2, _x_2_1 = select _x_2_0::_Tuple2 0 in <{_Tuple2!3}> (syntax.RecordUpdate cons_symbol_1_0 (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1)) (select _x_2_0::_Tuple2 1)) (syntax.TupleSelect symbol_1_0 argn_nr_1_1 expr_1_2 -> let _x_2_0 = trans.copy_513 expr_1_2 ci_1 cs_2 in <{_Tuple2!3}> (syntax.TupleSelect symbol_1_0 argn_nr_1_1 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.MatchExpr cons_ident_1_0 expr_1_1 -> let _x_2_0 = trans.copy_513 expr_1_1 ci_1 cs_2 in <{_Tuple2!3}> (syntax.MatchExpr cons_ident_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.IsConstructor expr_1_0 cons_symbol_1_1 cons_arity_1_2 global_type_index_1_3 case_ident_1_4 position_1_5 -> let _x_2_0 = trans.copy_513 expr_1_0 ci_1 cs_2 in <{_Tuple2!3}> (syntax.IsConstructor (select _x_2_0::_Tuple2 0) cons_symbol_1_1 cons_arity_1_2 global_type_index_1_3 case_ident_1_4 position_1_5) (select _x_2_0::_Tuple2 1)) (syntax.DynamicExpr expr_1_0 -> let _x_2_0 = trans.copy_514 expr_1_0 ci_1 cs_2 in <{_Tuple2!3}> (syntax.DynamicExpr (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.TypeSignature type_function_1_0 expr_1_1 -> let _x_2_0 = trans.copy_513 expr_1_1 ci_1 cs_2 in <{_Tuple2!3}> (syntax.TypeSignature type_function_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.DictionariesFunction dictionaries_1_0 expr_1_1 expr_type_1_2 -> let _x_2_0 = trans.copy_513 expr_1_1 ci_1 cs_2 in <{_Tuple2!3}> (syntax.DictionariesFunction dictionaries_1_0 (select _x_2_0::_Tuple2 0) expr_type_1_2) (select _x_2_0::_Tuple2 1)) (_ -> <{_Tuple2!3}> _x_0 cs_2)
<{trans._c;5036;11_1191}> !symb_kind_0 !app_1 ci_2 cs_3 app_info_ptr_4 app_args_5 = case symb_kind_0 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> trans.copy_function_app_439 app_1 ci_2 cs_3) ) (syntax.SK_IclMacro macro_index_1_0 -> trans.copy_function_app_439 app_1 ci_2 cs_3) (syntax.SK_DclMacro _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> trans.copy_function_app_439 app_1 ci_2 cs_3) ) (syntax.SK_OverloadedFunction _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> trans.copy_function_app_439 app_1 ci_2 cs_3) ) (syntax.SK_Generic _x_1_0 kind_1_1 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> trans.copy_function_app_439 app_1 ci_2 cs_3) ) (syntax.SK_LocalMacroFunction local_macro_function_n_1_0 -> trans.copy_function_app_439 app_1 ci_2 cs_3) (syntax.SK_LocalDclMacroFunction _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> trans.copy_function_app_439 app_1 ci_2 cs_3) ) (syntax.SK_Constructor _x_1_0 -> case (StdBool.not (Heap.isNilPtr app_info_ptr_4)) (True -> let _x_3_0 = Heap.readPtr app_info_ptr_4 (select cs_3::trans._CopyState 1), _x_3_1 = trans.substitute_EI_DictionaryType_440 (select _x_3_0::_Tuple2 0) (select cs_3::trans._CopyState 2), _x_3_2 = Heap.newPtr (select _x_3_1::_Tuple2 0) (select _x_3_0::_Tuple2 1), _x_3_3 = trans.copy_855 app_args_5 ci_2 (update cs_3::trans._CopyState [1:select _x_3_2::_Tuple2 1,2:select _x_3_1::_Tuple2 1]) in <{_Tuple2!3}> (update app_1::syntax._App [1:select _x_3_3::_Tuple2 0,2:select _x_3_2::_Tuple2 0]) (select _x_3_3::_Tuple2 1)) (False -> let _x_3_0 = trans.copy_855 app_args_5 ci_2 cs_3 in <{_Tuple2!3}> (update app_1::syntax._App [1:select _x_3_0::_Tuple2 0]) (select _x_3_0::_Tuple2 1)) ) (_ -> let _x_1_0 = trans.copy_855 app_args_5 ci_2 cs_3 in <{_Tuple2!3}> (update app_1::syntax._App [1:select _x_1_0::_Tuple2 0,2:Heap.nilPtr]) (select _x_1_0::_Tuple2 1))
<{trans._c;5160;15_1190}> !_x_0 !exprs_1 !cs_2 !var_heap_3 case_info_ptr_4 ci_5 var_6 = case _x_0 (syntax.VI_ExpressionOrBody _x_1_0 fun_ident_1_1 _x_1_2 new_aci_params_1_3 original_type_vars_1_4 new_type_vars_1_5 -> trans._f1189_1189 _x_1_2 new_aci_params_1_3 exprs_1 cs_2 var_heap_3 case_info_ptr_4 ci_5 original_type_vars_1_4 new_type_vars_1_5 var_6) (_ -> <{trans._c;5160;15_1185}> var_6 ci_5 cs_2 var_heap_3 exprs_1)
trans._f1189_1189 !_x_0 !new_aci_params_1 !exprs_2 !cs_3 !var_heap_4 case_info_ptr_5 !ci_6 !original_type_vars_7 !new_type_vars_8 var_9 = case _x_0 (syntax._TransformedBody tb_args_1_0 tb_rhs_1_1 -> let tb_args_ptrs_2_0 = <{trans.c;5165;51_405}> tb_args_1_0, cs_2_1 = update cs_3::trans._CopyState [0:var_heap_4], _x_2_2 = trans.map_st_877 tb_args_ptrs_2_0 (select cs_2_1::trans._CopyState 0), cs_var_heap_2_3 = select _x_2_2::_Tuple2 1, _x_2_4 = trans.bind_variables_406 tb_args_ptrs_2_0 new_aci_params_1 exprs_2 cs_var_heap_2_3, extra_exprs_2_5 = select _x_2_4::_Tuple2 0, cs_var_heap_2_6 = select _x_2_4::_Tuple2 1, original_bindings_2_7 = select _x_2_2::_Tuple2 0 in <{trans._c;5183;24_1188}> extra_exprs_2_5 case_info_ptr_5 tb_rhs_1_1 ci_6 cs_2_1 cs_var_heap_2_6 original_type_vars_7 new_type_vars_8 tb_args_ptrs_2_0 original_bindings_2_7) (_ -> <{trans._c;5160;15_1185}> var_9 ci_6 cs_3 var_heap_4 exprs_2)
<{trans._c;5183;24_1188}> !extra_exprs_0 case_info_ptr_1 !tb_rhs_2 !ci_3 !cs_4 !cs_var_heap_5 !original_type_vars_6 !new_type_vars_7 tb_args_ptrs_8 original_bindings_9 = case extra_exprs_0 (_predefined._Nil -> let _x_2_0 = trans.forward_old_type_vars_to_new_type_vars original_type_vars_6 new_type_vars_7 (select cs_4::trans._CopyState 2), cs_opt_type_heaps_2_1 = select _x_2_0::_Tuple2 1, cs_2_2 = update cs_4::trans._CopyState [0:cs_var_heap_5,2:cs_opt_type_heaps_2_1], _x_2_3 = trans.copy_513 tb_rhs_2 ci_3 cs_2_2, cs_2_4 = select _x_2_3::_Tuple2 1, _x_2_5 = Heap.readPtr case_info_ptr_1 (select cs_2_4::trans._CopyState 1), cs_2_6 = update cs_2_4::trans._CopyState [1:<{trans._c;5173;27_1186}> (select _x_2_5::_Tuple2 0) case_info_ptr_1 cs_symbol_heap_2_7], cs_symbol_heap_2_7 = select _x_2_5::_Tuple2 1 in <{_Tuple2!3}> (select _x_2_3::_Tuple2 0) (update cs_2_6::trans._CopyState [0:trans.fold_st2_878 tb_args_ptrs_8 original_bindings_9 (select cs_2_6::trans._CopyState 0),2:trans.restore_old_type_vars_values original_type_vars_6 (select _x_2_0::_Tuple2 0) (select cs_2_6::trans._CopyState 2)])) (_ -> let _x_1_0 = trans.forward_old_type_vars_to_new_type_vars original_type_vars_6 new_type_vars_7 (select cs_4::trans._CopyState 2), cs_opt_type_heaps_1_1 = select _x_1_0::_Tuple2 1, cs_1_2 = update cs_4::trans._CopyState [0:cs_var_heap_5,2:cs_opt_type_heaps_1_1], _x_1_3 = trans.copy_513 tb_rhs_2 ci_3 cs_1_2, cs_1_4 = select _x_1_3::_Tuple2 1, _x_1_5 = Heap.readPtr case_info_ptr_1 (select cs_1_4::trans._CopyState 1), cs_1_6 = update cs_1_4::trans._CopyState [1:<{trans._c;5173;27_1187}> (select _x_1_5::_Tuple2 0) case_info_ptr_1 cs_symbol_heap_1_7], cs_symbol_heap_1_7 = select _x_1_5::_Tuple2 1 in <{_Tuple2!3}> (<{syntax.@}> (select _x_1_3::_Tuple2 0) extra_exprs_0) (update cs_1_6::trans._CopyState [0:trans.fold_st2_878 tb_args_ptrs_8 original_bindings_9 (select cs_1_6::trans._CopyState 0),2:trans.restore_old_type_vars_values original_type_vars_6 (select _x_1_0::_Tuple2 0) (select cs_1_6::trans._CopyState 2)]))
<{trans._c;5173;27_1187}> !_x_0 case_info_ptr_1 !cs_symbol_heap_2 = case _x_0 (syntax.EI_Extended _x_1_0 ei_1_1 -> case _x_1_0 (syntax.EEI_ActiveCase aci_2_0 -> Heap.writePtr case_info_ptr_1 (syntax.EI_Extended (syntax.EEI_ActiveCase (update aci_2_0::syntax._ActiveCaseInfo [1:general.No])) ei_1_1) cs_symbol_heap_2) ) (_ -> cs_symbol_heap_2)
<{trans._c;5173;27_1186}> !_x_0 case_info_ptr_1 !cs_symbol_heap_2 = case _x_0 (syntax.EI_Extended _x_1_0 ei_1_1 -> case _x_1_0 (syntax.EEI_ActiveCase aci_2_0 -> Heap.writePtr case_info_ptr_1 (syntax.EI_Extended (syntax.EEI_ActiveCase (update aci_2_0::syntax._ActiveCaseInfo [1:general.No])) ei_1_1) cs_symbol_heap_2) ) (_ -> cs_symbol_heap_2)
<{trans._c;5160;15_1185}> !var_0 ci_1 !cs_2 !var_heap_3 !exprs_4 = let _x_1_0 = trans.copyVariable var_0 ci_1 (update cs_2::trans._CopyState [0:var_heap_3]) in <{_Tuple2!3}> (<{syntax.@}> (select _x_1_0::_Tuple2 0) exprs_4) (select _x_1_0::_Tuple2 1)
<{trans._c;5121;11_1184}> !_x_0 !cs_1 !cs_symbol_heap_2 var_info_ptr_3 !ci_4 case_info_ptr_5 case_expr_6 = case _x_0 (syntax.EI_Extended _x_1_0 ei_1_1 -> case _x_1_0 (syntax.EEI_ActiveCase aci_2_0 -> trans._f1183_1183 aci_2_0 cs_1 cs_symbol_heap_2 var_info_ptr_3 ci_4 case_info_ptr_5 ei_1_1 case_expr_6) ) (_ -> <{trans._c;5121;11_1177}> case_expr_6 ci_4 cs_1 cs_symbol_heap_2)
trans._f1183_1183 !aci_0 !cs_1 !cs_symbol_heap_2 !var_info_ptr_3 !ci_4 !case_info_ptr_5 ei_6 case_expr_7 = case aci_0 (syntax._ActiveCaseInfo aci_params_1_0 aci_opt_unfolder_1_1 aci_free_vars_1_2 aci_linearity_of_patterns_1_3 aci_safe_1_4 -> let _x_2_0 = <{trans._c;5123;45_1179}> (select ci_4::trans._CopyInfo 0) aci_free_vars_1_2 cs_2_5, cs_2_1 = select _x_2_0::_Tuple2 1, _x_2_2 = trans.readVarInfo var_info_ptr_3 (select cs_2_1::trans._CopyState 0), var_heap_2_3 = select _x_2_2::_Tuple2 1, new_aci_free_vars_2_4 = select _x_2_0::_Tuple2 0, cs_2_5 = update cs_1::trans._CopyState [1:cs_symbol_heap_2] in <{trans._c;5135;20_1182}> (select _x_2_2::_Tuple2 0) ci_4 cs_2_1 var_heap_2_3 case_info_ptr_5 aci_0 new_aci_free_vars_2_4 ei_6 case_expr_7) (_ -> <{trans._c;5121;11_1177}> case_expr_7 ci_4 cs_1 cs_symbol_heap_2)
<{trans._c;5135;20_1182}> !_x_0 !ci_1 !cs_2 !var_heap_3 !case_info_ptr_4 aci_5 new_aci_free_vars_6 ei_7 case_expr_8 = case _x_0 (syntax.VI_Body fun_ident_1_0 _x_1_1 new_aci_params_1_2 original_type_vars_1_3 new_type_vars_1_4 -> trans._f1181_1181 _x_1_1 ci_1 new_aci_params_1_2 original_type_vars_1_3 new_type_vars_1_4 cs_2 var_heap_3 case_info_ptr_4 aci_5 fun_ident_1_0 new_aci_free_vars_6 ei_7 case_expr_8) (_ -> <{trans._c;5135;20_1180}> cs_2 var_heap_3 case_expr_8 ci_1 case_info_ptr_4 aci_5 new_aci_free_vars_6 ei_7)
trans._f1181_1181 !_x_0 !ci_1 !new_aci_params_2 original_type_vars_3 new_type_vars_4 !cs_5 !var_heap_6 !case_info_ptr_7 aci_8 fun_ident_9 new_aci_free_vars_10 ei_11 case_expr_12 = case _x_0 (syntax._TransformedBody tb_args_1_0 tb_rhs_1_1 -> let cs_2_0 = update cs_5::trans._CopyState [0:var_heap_6], tb_args_ptrs_2_1 = <{trans.c;5140;56_404}> tb_args_1_0, _x_2_2 = trans.map_st_875 tb_args_ptrs_2_1 (select cs_2_0::trans._CopyState 0), _x_2_3 = trans.forward_old_type_vars_to_new_type_vars original_type_vars_3 new_type_vars_4 (select cs_2_0::trans._CopyState 2), _x_2_4 = trans.copy_513 tb_rhs_1_1 ci_1 (update cs_2_0::trans._CopyState [0:trans.bind_vars tb_args_ptrs_2_1 new_aci_params_2 (select _x_2_2::_Tuple2 1),2:select _x_2_3::_Tuple2 1]), cs_2_5 = select _x_2_4::_Tuple2 1 in <{_Tuple2!3}> (select _x_2_4::_Tuple2 0) (update cs_2_5::trans._CopyState [0:trans.fold_st2_876 tb_args_ptrs_2_1 (select _x_2_2::_Tuple2 0) (select cs_2_5::trans._CopyState 0),1:Heap.writePtr case_info_ptr_7 (syntax.EI_Extended (syntax.EEI_ActiveCase (update aci_8::syntax._ActiveCaseInfo [0:new_aci_params_2,1:general.Yes fun_ident_9,2:new_aci_free_vars_10])) ei_11) (select cs_2_5::trans._CopyState 1),2:trans.restore_old_type_vars_values original_type_vars_3 (select _x_2_3::_Tuple2 0) (select cs_2_5::trans._CopyState 2)])) (_ -> <{trans._c;5135;20_1180}> cs_5 var_heap_6 case_expr_12 ci_1 case_info_ptr_7 aci_8 new_aci_free_vars_10 ei_11)
<{trans._c;5135;20_1180}> !cs_0 !var_heap_1 !case_expr_2 !ci_3 !case_info_ptr_4 !aci_5 !new_aci_free_vars_6 !ei_7 = let cs_1_0 = update cs_0::trans._CopyState [0:var_heap_1] in trans.copy_513 case_expr_2 ci_3 (update cs_1_0::trans._CopyState [1:Heap.writePtr case_info_ptr_4 (syntax.EI_Extended (syntax.EEI_ActiveCase (update aci_5::syntax._ActiveCaseInfo [2:new_aci_free_vars_6])) ei_7) (select cs_1_0::trans._CopyState 1)])
<{trans._c;5123;45_1179}> !_x_0 aci_free_vars_1 cs_2 = case _x_0 (trans.LeaveAciFreeVars -> _Tuple2 aci_free_vars_1 cs_2) (trans.RemoveAciFreeVars -> _Tuple2 general.No cs_2) (trans.SubstituteAciFreeVars -> <{trans._c;5129;56_1178}> aci_free_vars_1 cs_2) 
<{trans._c;5129;56_1178}> !aci_free_vars_0 cs_1 = case aci_free_vars_0 (general.No -> _Tuple2 general.No cs_1) (general.Yes fvs_1_0 -> let _x_2_0 = trans.map_st_874 fvs_1_0 cs_1 in _Tuple2 (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) 
<{trans._c;5121;11_1177}> !case_expr_0 !ci_1 !cs_2 !cs_symbol_heap_3 = trans.copy_513 case_expr_0 ci_1 (update cs_2::trans._CopyState [1:cs_symbol_heap_3])
<{trans._c;5109;25_1176}> !old_case_info_0 new_info_ptr_1 cs_cleanup_info_2 = case old_case_info_0 (syntax.EI_Extended _x_1_0 _x_1_1 -> _predefined._Cons new_info_ptr_1 cs_cleanup_info_2) (_ -> cs_cleanup_info_2)
<{trans._c;4967;7_1175}> !_x_0 !cs_1 !var_heap_2 ci_3 var_4 = case _x_0 (syntax.VI_Expression expr_1_0 -> <{_Tuple2!3}> expr_1_0 (update cs_1::trans._CopyState [0:var_heap_2])) (syntax.VI_Variable var_ident_1_0 var_info_ptr_1_1 -> let cs_2_0 = update cs_1::trans._CopyState [0:var_heap_2], _x_2_1 = Heap.newPtr syntax.EI_Empty (select cs_2_0::trans._CopyState 1) in <{_Tuple2!3}> (syntax.Var (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 (select _x_2_1::_Tuple2 0))) (update cs_2_0::trans._CopyState [1:select _x_2_1::_Tuple2 1])) (syntax.VI_Body fun_ident_1_0 _x_1_1 vars_1_2 _x_1_3 _x_1_4 -> <{_Tuple2!3}> (syntax.App (syntax._App fun_ident_1_0 (<{trans.c;4976;37_402}> vars_1_2) Heap.nilPtr)) (update cs_1::trans._CopyState [0:var_heap_2])) (syntax.VI_Dictionary app_symb_1_0 app_args_1_1 class_type_1_2 -> trans.copy_dictionary_variable app_symb_1_0 app_args_1_1 class_type_1_2 ci_3 (update cs_1::trans._CopyState [0:var_heap_2])) (syntax.VI_ExpressionOrBody expr_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 _x_1_5 -> <{_Tuple2!3}> expr_1_0 (update cs_1::trans._CopyState [0:var_heap_2])) (_ -> <{_Tuple2!3}> (syntax.Var var_4) (update cs_1::trans._CopyState [0:var_heap_2]))
<{trans._c;5016;11_1174}> !_x_0 !selectors_1 !new_ptr_2 !index_expr_3 !cs_4 = case _x_0 (syntax.App _x_1_0 -> case _x_1_0 (syntax._App _x_2_0 app_args_2_1 app_info_ptr_2_2 -> case _x_2_0 (syntax._SymbIdent symb_ident_3_0 _x_3_1 -> case _x_3_1 (syntax.SK_Constructor _x_4_0 -> let _x_5_0 = select (select (<{StdList.!!}> app_args_2_1 (select (select selectors_1::_Tuple2 0)::_Tuple2 1))::_Tuple1 0)::syntax._App 0, array_select_5_1 = select (select _x_5_0::syntax._SymbIdent 1)::_Tuple1 0 in <{_Tuple2!3}> (syntax.ArraySelection (update array_select_5_1::syntax._Global [0:syntax._DefinedSymbol (select _x_5_0::syntax._SymbIdent 0) 2 (select array_select_5_1::syntax._Global 0)]) new_ptr_2 index_expr_3) cs_4) ) ) ) (syntax.Var var_1_0 -> <{_Tuple2!3}> (syntax.DictionarySelection var_1_0 selectors_1 new_ptr_2 index_expr_3) cs_4) 
<{trans._c;4904;11_1173}> !_x_0 selector_kind_1 selectors_2 !cs_3 !var_heap_4 ci_5 field_n_6::I var_7 = case _x_0 (syntax.VI_Expression expr_1_0 -> <{_Tuple2!3}> (syntax.Selection selector_kind_1 expr_1_0 selectors_2) (update cs_3::trans._CopyState [0:var_heap_4])) (syntax.VI_Variable var_ident_1_0 var_info_ptr_1_1 -> let cs_2_0 = update cs_3::trans._CopyState [0:var_heap_4], _x_2_1 = Heap.newPtr syntax.EI_Empty (select cs_2_0::trans._CopyState 1) in <{_Tuple2!3}> (syntax.Selection selector_kind_1 (syntax.Var (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 (select _x_2_1::_Tuple2 0))) selectors_2) (update cs_2_0::trans._CopyState [1:select _x_2_1::_Tuple2 1])) (syntax.VI_Dictionary app_symb_1_0 app_args_1_1 class_type_1_2 -> let _x_2_0 = trans.copy_dictionary_variable app_symb_1_0 app_args_1_1 class_type_1_2 ci_5 (update cs_3::trans._CopyState [0:var_heap_4]) in <{_Tuple2!3}> (syntax.Selection selector_kind_1 (select _x_2_0::_Tuple2 0) selectors_2) (select _x_2_0::_Tuple2 1)) (syntax.VI_Body fun_ident_1_0 _x_1_1 new_aci_params_1_2 original_type_vars_1_3 new_type_vars_1_4 -> case _x_1_1 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> <{trans._c;4919;20_1172}> tb_rhs_2_1 field_n_6 ci_5 new_aci_params_1_2 tb_args_2_0 cs_3 var_heap_4 selector_kind_1 selectors_2) ) (syntax.VI_ExpressionOrBody expr_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 _x_1_5 -> <{_Tuple2!3}> (syntax.Selection selector_kind_1 expr_1_0 selectors_2) (update cs_3::trans._CopyState [0:var_heap_4])) (_ -> <{_Tuple2!3}> (syntax.Selection selector_kind_1 (syntax.Var var_7) selectors_2) (update cs_3::trans._CopyState [0:var_heap_4]))
<{trans._c;4919;20_1172}> !tb_rhs_0 field_n_1::I !ci_2 !new_aci_params_3 !tb_args_4 !cs_5 !var_heap_6 selector_kind_7 selectors_8 = case tb_rhs_0 (syntax.App _x_1_0 -> case _x_1_0 (syntax._App _x_2_0 app_args_2_1 app_info_ptr_2_2 -> case _x_2_0 (syntax._SymbIdent symb_ident_3_0 _x_3_1 -> trans._f1171_1171 _x_3_1 app_args_2_1 field_n_1 ci_2 new_aci_params_3 tb_args_4 cs_5 var_heap_6 tb_rhs_0 selector_kind_7 selectors_8) ) ) (_ -> <{trans._c;4919;20_1170}> tb_rhs_0 ci_2 new_aci_params_3 tb_args_4 cs_5 var_heap_6 selector_kind_7 selectors_8)
trans._f1171_1171 !_x_0 app_args_1 field_n_2::I !ci_3 !new_aci_params_4 !tb_args_5 !cs_6 !var_heap_7 tb_rhs_8 selector_kind_9 selectors_10 = case _x_0 (syntax.SK_Constructor _x_1_0 -> let cs_2_0 = update cs_6::trans._CopyState [0:var_heap_7], tb_args_ptrs_2_1 = <{trans.c;4915;48_438}> tb_args_5, _x_2_2 = trans.map_st_858 tb_args_ptrs_2_1 (select cs_2_0::trans._CopyState 0), _x_2_3 = trans.copy_513 (<{StdList.!!}> app_args_1 field_n_2) ci_3 (update cs_2_0::trans._CopyState [0:trans.bind_vars tb_args_ptrs_2_1 new_aci_params_4 (select _x_2_2::_Tuple2 1)]), cs_2_4 = select _x_2_3::_Tuple2 1 in <{_Tuple2!3}> (select _x_2_3::_Tuple2 0) (update cs_2_4::trans._CopyState [0:trans.fold_st2_859 tb_args_ptrs_2_1 (select _x_2_2::_Tuple2 0) (select cs_2_4::trans._CopyState 0)])) (_ -> <{trans._c;4919;20_1170}> tb_rhs_8 ci_3 new_aci_params_4 tb_args_5 cs_6 var_heap_7 selector_kind_9 selectors_10)
<{trans._c;4919;20_1170}> !tb_rhs_0 !ci_1 !new_aci_params_2 !tb_args_3 !cs_4 !var_heap_5 !selector_kind_6 !selectors_7 = let cs_1_0 = update cs_4::trans._CopyState [0:var_heap_5], tb_args_ptrs_1_1 = <{trans.c;4915;48_438}> tb_args_3, _x_1_2 = trans.map_st_858 tb_args_ptrs_1_1 (select cs_1_0::trans._CopyState 0), _x_1_3 = trans.copy_513 tb_rhs_0 ci_1 (update cs_1_0::trans._CopyState [0:trans.bind_vars tb_args_ptrs_1_1 new_aci_params_2 (select _x_1_2::_Tuple2 1)]), cs_1_4 = select _x_1_3::_Tuple2 1 in <{_Tuple2!3}> (syntax.Selection selector_kind_6 (select _x_1_3::_Tuple2 0) selectors_7) (update cs_1_4::trans._CopyState [0:trans.fold_st2_860 tb_args_ptrs_1_1 (select _x_1_2::_Tuple2 0) (select cs_1_4::trans._CopyState 0)])
trans.copy_857 !_vcopy_0 !_x_1 !ci_2 !cs_3 = case _x_1 (_Tuple2 a_1_0 b_1_1 -> let _x_2_0 = trans.copy_513 a_1_0 ci_2 cs_3, _x_2_1 = select _vcopy_0::<{trans.copy;}> 0 b_1_1 ci_2 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_Tuple2 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
trans.copy_863 !_vcopy_0 !_x_1 !ci_2 !cs_3 = case _x_1 (_Tuple2 a_1_0 b_1_1 -> let _x_2_0 = trans.copy_882 a_1_0 ci_2 cs_3, _x_2_1 = select _vcopy_0::<{trans.copy;}> 0 b_1_1 ci_2 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_Tuple2 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
trans.possiblyAddStrictLetBinds_277 expr_0 !strict_lets_1 ti_2 = let _x_1_0 = StdList.unzip strict_lets_1, strict_let_binds_1_1 = select _x_1_0::_Tuple2 0, let_type_1_2 = select _x_1_0::_Tuple2 1 in <{trans._c;2770;11_1192}> strict_let_binds_1_1 expr_0 ti_2 let_type_1_2
<{trans._c;2770;11_1192}> !strict_let_binds_0 expr_1 ti_2 let_type_3 = case strict_let_binds_0 (_predefined._Nil -> _Tuple2 expr_1 ti_2) (_ -> let _x_1_0 = Heap.newPtr (syntax.EI_LetType let_type_3) (select ti_2::trans._TransformInfo 6) in _Tuple2 (syntax.Let (syntax._Let strict_let_binds_0 _predefined._Nil expr_1 (select _x_1_0::_Tuple2 0) syntax.NoPos)) (update ti_2::trans._TransformInfo [6:select _x_1_0::_Tuple2 1]))
trans.add_unused_calls_285 !_x_0 !ti_1 = case _x_0 (_predefined._Cons _x_1_0 calls_1_1 -> case _x_1_0 (syntax.GeneratedFunCall _x_2_0 fun_def_ptr_2_1 -> case ti_1 (trans._TransformInfo ti_fun_defs_3_0 ti_instances_3_1 ti_cons_args_3_2 ti_new_functions_3_3 ti_fun_heap_3_4 ti_var_heap_3_5 ti_symbol_heap_3_6 ti_type_heaps_3_7 ti_type_def_infos_3_8 ti_next_fun_nr_3_9 ti_cleanup_info_3_10 ti_recursion_introduced_3_11 ti_error_file_3_12 ti_predef_symbols_3_13 -> let _x_4_0::I = Heap.readPtr fun_def_ptr_2_1 ti_fun_heap_3_4, gf_4_1 = select (select _x_4_0::_Tuple2 0)::_Tuple1 0, _x_4_2 = select (select gf_4_1::syntax._GeneratedFunction 0)::syntax._FunDef 8, fi_properties_4_3 = select _x_4_2::syntax._FunInfo 6 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand fi_properties_4_3 64) 0)) (True -> let ti_6_0 = update ti_1::trans._TransformInfo [4:select _x_4_0::_Tuple2 1], s1_6_1 = select gf_4_1::syntax._GeneratedFunction 0 in trans.add_unused_calls_285 calls_1_1 (trans.add_unused_calls_285 (select _x_4_2::syntax._FunInfo 0) (update ti_6_0::trans._TransformInfo [3:_predefined._Cons fun_def_ptr_2_1 (select ti_6_0::trans._TransformInfo 3),4:Heap.writePtr fun_def_ptr_2_1 (syntax.FI_Function (update gf_4_1::syntax._GeneratedFunction [0:update s1_6_1::syntax._FunDef [8:update (select s1_6_1::syntax._FunDef 8)::syntax._FunInfo [6:StdInt.bitor (StdInt.bitxor fi_properties_4_3 64) 128]]])) (select ti_6_0::trans._TransformInfo 4)]))) (False -> trans.add_unused_calls_285 calls_1_1 (update ti_1::trans._TransformInfo [4:select _x_4_0::_Tuple2 1])) ) ) (_ -> trans.add_unused_calls_285 calls_1_1 ti_1)) (_predefined._Nil -> ti_1) 
trans.find_member_n_312::I !i_0::I !member_string_1 !a_2 = case (<{StdInt.<_17}> i_0 (trans.size_700 a_2)) (True -> case (<{StdString.==_2}> (<{StdString.%_10}> (select (select (trans.select_699 a_2 i_0)::syntax._DefinedSymbol 0)::syntax._Ident 0) (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 member_string_1) 1))) member_string_1) (True -> i_0) (False -> trans.find_member_n_312 (<{StdInt.+_6}> i_0 1) member_string_1 a_2) ) 
trans.select_member_313 !exp_0 !select_symb_1 !me_offset_2::I !ti_3 = case exp_0 (syntax.App _x_1_0 -> case _x_1_0 (syntax._App _x_2_0 app_args_2_1 app_info_ptr_2_2 -> case _x_2_0 (syntax._SymbIdent symb_ident_3_0 _x_3_1 -> case _x_3_1 (syntax.SK_Constructor _x_4_0 -> case ti_3 (trans._TransformInfo ti_fun_defs_5_0 ti_instances_5_1 ti_cons_args_5_2 ti_new_functions_5_3 ti_fun_heap_5_4 ti_var_heap_5_5 ti_symbol_heap_5_6 ti_type_heaps_5_7 ti_type_def_infos_5_8 ti_next_fun_nr_5_9 ti_cleanup_info_5_10 ti_recursion_introduced_5_11 ti_error_file_5_12 ti_predef_symbols_5_13 -> case (StdBool.not (Heap.isNilPtr app_info_ptr_2_2)) (True -> let _x_7_0 = Heap.readPtr app_info_ptr_2_2 ti_symbol_heap_5_6, ti_symbol_heap_7_1 = select _x_7_0::_Tuple2 1 in <{trans._c;3260;19_1193}> (select _x_7_0::_Tuple2 0) app_args_2_1 me_offset_2 ti_3 ti_symbol_heap_7_1 exp_0 select_symb_1) ) ) ) ) ) (_ -> <{_Tuple2!3}> (syntax.Selection syntax.NormalSelector exp_0 (_predefined._Cons (syntax.RecordSelection select_symb_1 me_offset_2) _predefined._Nil)) ti_3)
<{trans._c;3260;19_1193}> !_x_0 app_args_1 me_offset_2::I !ti_3 !ti_symbol_heap_4 exp_5 select_symb_6 = case _x_0 (syntax.EI_DictionaryType _x_1_0 -> <{_Tuple2!3}> (<{StdList.!!}> app_args_1 me_offset_2) (update ti_3::trans._TransformInfo [6:ti_symbol_heap_4])) (_ -> <{_Tuple2!3}> (syntax.Selection syntax.NormalSelector exp_5 (_predefined._Cons (syntax.RecordSelection select_symb_6 me_offset_2) _predefined._Nil)) (update ti_3::trans._TransformInfo [6:ti_symbol_heap_4]))
trans.readAppInfo_310 !_x_0 !heap_1 = case _x_0 (syntax.App _x_1_0 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> case (Heap.isNilPtr app_info_ptr_2_2) (True -> <{_Tuple2!3}> syntax.EI_Empty heap_1) (False -> Heap.readPtr app_info_ptr_2_2 heap_1) ) ) (_ -> <{_Tuple2!3}> syntax.EI_Empty heap_1)
<{trans.c;4838;21_398}> !g_l_0 = <{trans.g_c1;4838;34_1195}> g_l_0
<{trans.g_c1;4838;34_1195}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;4838;34_1194}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;4838;34_1194}> !g_h_0 g_t_1 = case g_h_0 (syntax._AType at_attribute_1_0 at_type_1_1 -> _predefined._Cons at_type_1_1 (<{trans.c;4838;21_398}> g_t_1)) (_ -> <{trans.c;4838;21_398}> g_t_1)
trans.minimiseContext !_x_0 _x_1 = case _x_0 (syntax._TypeContext _x_1_0 tc_types_1_1 tc_var_1_2 -> case _x_1_0 (syntax.TCClass gds_2_0 -> case _x_1 (syntax.TA ti_3_0 ts_3_1 -> case (<{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) (syntax._Global (select (select gds_2_0::syntax._Global 0)::syntax._DefinedSymbol 2) (select gds_2_0::syntax._Global 1)) (select ti_3_0::syntax._TypeSymbIdent 2)) (True -> _predefined._Cons (<{trans.c;4838;21_398}> ts_3_1) _predefined._Nil) (False -> _predefined._Nil) ) ) ) (_ -> _predefined._Nil)
trans.resolveContext !_x_0 !_x_1 = case _x_0 (_predefined._Cons tc_1_0 tcs_1_1 -> case _x_1 (_predefined._Cons _x_2_0 eis_2_1 -> case _x_2_0 (syntax.EI_DictionaryType t_3_0 -> <{StdList.++}> (trans.minimiseContext tc_1_0 t_3_0) (trans.resolveContext tcs_1_1 eis_2_1)) ) ) (_ -> _predefined._Nil)
trans.matchTypes::B !<{_v==_0}> !_x_1 _x_2 = case _x_1 (_predefined._Nil -> case _x_2 (_predefined._Nil -> True) ) (_predefined._Cons l_1_0 ls_1_1 -> case _x_2 (_predefined._Cons r_2_0 rs_2_1 -> case (select <{_v==_0}>::<{StdOverloaded.==;}> 0 l_1_0 r_2_0) (True -> trans.matchTypes <{_v==_0}> ls_1_1 rs_2_1) (False -> False) ) ) (_ -> False)
trans.matchTypes_884::B !_x_0 _x_1 = case _x_0 (_predefined._Nil -> case _x_1 (_predefined._Nil -> True) ) (_predefined._Cons l_1_0 ls_1_1 -> case _x_1 (_predefined._Cons r_2_0 rs_2_1 -> case (<{StdList.==_45}> (<{StdOverloaded.==;}> <{compare_types.==_23}>) l_1_0 r_2_0) (True -> trans.matchTypes_884 ls_1_1 rs_2_1) (False -> False) ) ) (_ -> False)
trans.findInstInSpecials !insts_0 !_x_1 = case _x_1 (_predefined._Nil -> <{_Tuple2!3}> 0 (syntax._Global -1 -1)) (_predefined._Cons _x_1_0 specials_1_1 -> case _x_1_0 (syntax._Special spec_index_2_0 spec_types_2_1 spec_vars_2_2 spec_attrs_2_3 -> case (trans.matchTypes_884 insts_0 spec_types_2_1) (True -> <{_Tuple2!3}> (StdList.length_47 spec_types_2_1) spec_index_2_0) (False -> trans.findInstInSpecials insts_0 specials_1_1) ) ) 
trans.foundSpecial::B !_x_0 = case _x_0 (syntax._Global _x_1_0 _x_1_1 -> case _x_1_0 (-1 -> case _x_1_1 (-1 -> False) ) ) (_ -> True)
trans.build_application_311 ro_0 !app_1 !app_args_2 !extra_args_3 !_x_4 !ti_5 = case _x_4 (syntax._Global glob_object_1_0 glob_module_1_1 -> case (StdList.isEmpty extra_args_3) (True -> <{_Tuple2!3}> (syntax.App (update app_1::syntax._App [1:app_args_2])) ti_5) (False -> let _x_3_0::I = trans.select_683 (_SystemArray.select_43 (select ro_0::trans._ReadOnlyTI 0) glob_module_1_1) glob_object_1_0, ft_arity_3_1::I = select _x_3_0::syntax._FunType 1, ft_type_3_2 = select _x_3_0::syntax._FunType 3, form_arity_3_3::I = <{StdInt.+_6}> ft_arity_3_1 (StdList.length_47 (select ft_type_3_2::syntax._SymbolType 5)), ar_diff_3_4 = <{StdInt.-_7}> form_arity_3_3 (StdList.length_47 app_args_2) in case (StdBool.not (<{StdInt.<_17}> ar_diff_3_4 (StdList.length_47 extra_args_3))) (True -> <{_Tuple2!3}> (syntax.App (update app_1::syntax._App [1:<{StdList.++}> app_args_2 extra_args_3])) ti_5) (False -> <{_Tuple2!3}> (<{syntax.@}> (syntax.App (update app_1::syntax._App [1:<{StdList.++}> app_args_2 (StdList.take ar_diff_3_4 extra_args_3)])) (StdList.drop ar_diff_3_4 extra_args_3)) ti_5) ) ) 
trans.complete_application_314 !form_arity_0::I !args_1 !_x_2 = case _x_2 (_predefined._Nil -> <{_Tuple2!3}> args_1 _predefined._Nil) (_ -> let x_1_0::I = <{StdInt.-_7}> form_arity_0 (StdList.length_47 args_1), y_1_1::I = StdList.length_47 _x_2, arity_diff_1_2::I = <{trans._c;48;16_1196}> (<{StdInt.<_17}> x_1_0 y_1_1) x_1_0 y_1_1 in <{_Tuple2!3}> (<{StdList.++}> args_1 (StdList.take arity_diff_1_2 _x_2)) (StdList.drop arity_diff_1_2 _x_2))
<{trans._c;48;16_1196}>::I !_x_0::B x_1::I y_2::I = case _x_0 (True -> x_1) (_ -> y_2)
trans.build_application_315 !app_0 !_x_1 = case _x_1 (_predefined._Nil -> syntax.App app_0) (_ -> <{syntax.@}> (syntax.App app_0) _x_1)
trans.fold_st_635 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_635 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.store_type_info_let_bind_422 !_x_0 !var_heap_1 = case _x_0 (_Tuple2 var_type_1_0 _x_1_1 -> case _x_1_1 (syntax._LetBind _x_2_0 lb_src_2_1 lb_position_2_2 -> case _x_2_0 (syntax._FreeVar fv_def_level_3_0 fv_ident_3_1 fv_info_ptr_3_2 fv_count_3_3 -> trans.setExtendedVarInfo fv_info_ptr_3_2 (syntax.EVI_VarType var_type_1_0) var_heap_1) ) ) 
trans.fold_st_885 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_885 x_1_1 (trans.store_type_info_let_bind_422 a_1_0 st_1)) 
trans.store_type_info_of_bindings_in_heap_421 !_x_0 !ti_1 = case _x_0 (syntax._Let let_strict_binds_1_0 let_lazy_binds_1_1 let_expr_1_2 let_info_ptr_1_3 let_expr_position_1_4 -> let _x_2_0 = trans.readExprInfo let_info_ptr_1_3 (select ti_1::trans._TransformInfo 6) in update ti_1::trans._TransformInfo [5:trans.fold_st_885 (StdList.zip2 (select (select _x_2_0::_Tuple2 0)::_Tuple1 0) (<{StdList.++}> let_strict_binds_1_0 let_lazy_binds_1_1)) (select ti_1::trans._TransformInfo 5),6:select _x_2_0::_Tuple2 1]) 
trans.fold_st2_548 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (trans.fold_st2_548 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.fold_st2_547 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (trans.fold_st2_547 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.store_type_info_of_pattern_var_118 !var_type_0 !_x_1 !var_heap_2 = case _x_1 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> trans.setExtendedVarInfo fv_info_ptr_1_2 (syntax.EVI_VarType var_type_0) var_heap_2) 
trans.fold_st2_886 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> trans.store_type_info_of_pattern_var_118 x_1_0 y_2_0 (trans.fold_st2_886 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.store_type_info_of_alg_pattern_117 !var_types_0 !_x_1 !var_heap_2 = case _x_1 (syntax._AlgebraicPattern ap_symbol_1_0 ap_vars_1_1 ap_expr_1_2 ap_position_1_3 -> trans.fold_st2_886 var_types_0 ap_vars_1_1 var_heap_2) 
trans.fold_st2_887 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> trans.store_type_info_of_alg_pattern_117 x_1_0 y_2_0 (trans.fold_st2_887 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.store_type_info_of_alg_pattern_in_pattern_variables !ct_cons_types_0 !patterns_1 !var_heap_2 = trans.fold_st2_887 ct_cons_types_0 patterns_1 var_heap_2
trans.store_type_info_of_patterns_in_heap_423 !_x_0 !ti_1 = case _x_0 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> <{trans._c;229;15_1197}> case_guards_1_1 case_info_ptr_1_4 ti_1) 
<{trans._c;229;15_1197}> !case_guards_0 case_info_ptr_1 !ti_2 = case case_guards_0 (syntax.AlgebraicPatterns _x_1_0 patterns_1_1 -> let _x_2_0 = trans.readExprInfo case_info_ptr_1 (select ti_2::trans._TransformInfo 6) in update ti_2::trans._TransformInfo [5:trans.store_type_info_of_alg_pattern_in_pattern_variables (select (select (select _x_2_0::_Tuple2 0)::_Tuple1 0)::syntax._CaseType 2) patterns_1_1 (select ti_2::trans._TransformInfo 5),6:select _x_2_0::_Tuple2 1]) (syntax.BasicPatterns _x_1_0 _x_1_1 -> ti_2) (syntax.OverloadedListPatterns _x_1_0 _x_1_1 patterns_1_2 -> let _x_2_0 = trans.readExprInfo case_info_ptr_1 (select ti_2::trans._TransformInfo 6) in update ti_2::trans._TransformInfo [5:trans.store_type_info_of_alg_pattern_in_pattern_variables (select (select (select _x_2_0::_Tuple2 0)::_Tuple1 0)::syntax._CaseType 2) patterns_1_2 (select ti_2::trans._TransformInfo 5),6:select _x_2_0::_Tuple2 1]) (syntax.NoPattern -> ti_2) 
<{trans.c;327;36_120}> basic_value_0 !g_l_1 = <{trans.g_c1;327;58_1199}> g_l_1 basic_value_0
<{trans.g_c1;327;58_1199}> !g_l_0 basic_value_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;327;58_1198}> g_h_1_0 basic_value_1 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;327;58_1198}> !g_h_0 !basic_value_1 g_t_2 = case g_h_0 (syntax._BasicPattern bp_value_1_0 bp_expr_1_1 bp_position_1_2 -> case (<{compare_types.==_18}> bp_value_1_0 basic_value_1) (True -> _predefined._Cons g_h_0 (<{trans.c;327;36_120}> basic_value_1 g_t_2)) ) (_ -> <{trans.c;327;36_120}> basic_value_1 g_t_2)
trans.algebraic_patterns_match_always::B !_x_0 ro_1 = case _x_0 (_predefined._Cons _x_1_0 algebraic_patterns_1_1 -> case _x_1_0 (syntax._AlgebraicPattern ap_symbol_2_0 ap_vars_2_1 ap_expr_2_2 ap_position_2_3 -> case (trans.case_alt_matches_always ap_expr_2_2 ro_1) (True -> trans.algebraic_patterns_match_always algebraic_patterns_1_1 ro_1) (False -> False) ) ) (_predefined._Nil -> True) 
trans.case_alt_matches_always::B !_x_0 ro_1 = case _x_0 (syntax.Case _x_1_0 -> case _x_1_0 (syntax._Case case_expr_2_0 case_guards_2_1 case_default_2_2 case_ident_2_3 case_info_ptr_2_4 case_explicit_2_5 case_default_pos_2_6 -> case case_explicit_2_5 (True -> True) (False -> <{trans._c;363;11_1202}> case_default_2_2 case_guards_2_1 ro_1) ) ) (syntax.Let _x_1_0 -> case _x_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> trans.case_alt_matches_always let_expr_2_2 ro_1) ) (_ -> True)
<{trans._c;363;11_1202}>::B !case_default_0 case_guards_1 ro_2 = case case_default_0 (general.Yes _x_1_0 -> True) (_ -> <{trans._c;367;20_1201}> case_guards_1 ro_2)
<{trans._c;367;20_1201}>::B !case_guards_0 ro_1 = case case_guards_0 (syntax.AlgebraicPatterns _x_1_0 algebraic_patterns_1_1 -> case _x_1_0 (syntax._GlobalIndex gi_module_2_0 gi_index_2_1 -> <{trans._c;369;28_1200}> (select (trans.select_675 (select (trans.select_667 (select ro_1::trans._ReadOnlyTI 1) gi_module_2_0)::syntax._CommonDefs 0) gi_index_2_1)::syntax._TypeDef 5) algebraic_patterns_1_1 ro_1) ) (_ -> False)
<{trans._c;369;28_1200}>::B !_x_0 algebraic_patterns_1 ro_2 = case _x_0 (syntax.AlgType constructors_1_0 -> case (trans.same_length constructors_1_0 algebraic_patterns_1) (True -> trans.algebraic_patterns_match_always algebraic_patterns_1 ro_2) ) (syntax.RecordType _x_1_0 -> trans.algebraic_patterns_match_always algebraic_patterns_1 ro_2) (_ -> False)
trans.transform_476 !_vtransform_0 !_x_1 !ro_2 !ti_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let _x_2_0 = select _vtransform_0::<{trans.transform;}> 0 x_1_0 ro_2 ti_3, _x_2_1 = trans.transform_476 _vtransform_0 xs_1_1 ro_2 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (_predefined._Nil -> <{_Tuple2!3}> _predefined._Nil ti_3) 
trans.transform_475 !_vtransform_0 !_x_1 !ro_2 !ti_3 = case _x_1 (general.Yes x_1_0 -> let _x_2_0 = select _vtransform_0::<{trans.transform;}> 0 x_1_0 ro_2 ti_3 in <{_Tuple2!3}> (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (_ -> <{_Tuple2!3}> _x_1 ti_3)
trans.is_variable_119::B !_x_0 = case _x_0 (syntax.Var _x_1_0 -> True) (_ -> False)
<{trans.c;416;37_123}> !g_l_0 = <{trans.g_c1;416;50_1204}> g_l_0
<{trans.g_c1;416;50_1204}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;416;50_1203}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;416;50_1203}> !g_h_0 g_t_1 = case g_h_0 (syntax._AlgebraicPattern ap_symbol_1_0 ap_vars_1_1 ap_expr_1_2 ap_position_1_3 -> _predefined._Cons ap_expr_1_2 (<{trans.c;416;37_123}> g_t_1)) (_ -> <{trans.c;416;37_123}> g_t_1)
trans.isFoldSymbol_129::B !_vArray_0 !_vArray_1 ro_2 ti_cons_args_3 ti_fun_defs_4 app_5 !_x_6 = case _x_6 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case (<{StdInt.==_16}> glob_module_2_1 (select ro_2::trans._ReadOnlyTI 6)) (True -> let type_arity_4_0::I = select (select (trans.select_683 (_SystemArray.select_43 (select ro_2::trans._ReadOnlyTI 0) glob_module_2_1) glob_object_2_0)::syntax._FunType 3)::syntax._SymbolType 3 in case (trans._f1206_1206 (<{StdInt.==_16}> type_arity_4_0 0) type_arity_4_0 app_5) (True -> False) (False -> True) ) (False -> case (trans._f1209_1209 (<{StdInt.==_16}> glob_module_2_1 (select ro_2::trans._ReadOnlyTI 4)) glob_object_2_0 _vArray_0 ti_cons_args_3 ti_fun_defs_4 _vArray_1 app_5) (True -> False) (False -> True) ) ) ) (syntax.SK_LocalMacroFunction _x_1_0 -> True) (syntax.SK_GeneratedFunction _x_1_0 _x_1_1 -> True) (_ -> False)
trans._f1209_1209::B !_x_0::B glob_object_1::I _vArray_2 ti_cons_args_3 ti_fun_defs_4 _vArray_5 app_6 = case _x_0 (True -> case (StdBool.not (<{StdInt.<_17}> glob_object_1 (select _vArray_2::<{_SystemArray.Array;}> 4 ti_cons_args_3))) (True -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select (select _vArray_5::<{_SystemArray.Array;}> 3 ti_fun_defs_4 glob_object_1)::syntax._FunDef 8)::syntax._FunInfo 6) 8) 0)) (True -> <{trans._c;472;30_1208}> (select (select _vArray_5::<{_SystemArray.Array;}> 3 ti_fun_defs_4 glob_object_1)::syntax._FunDef 4) app_6) (False -> False) ) (False -> False) ) (_ -> False)
<{trans._c;472;30_1208}>::B !_x_0 app_1 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.==_16}> (select type_1_0::syntax._SymbolType 3) 0) (True -> True) (False -> case (<{StdInt.==_16}> (select type_1_0::syntax._SymbolType 3) 2) (True -> <{trans._c;473;86_1207}> (select app_1::syntax._App 1)) (False -> False) ) ) 
<{trans._c;473;86_1207}>::B !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> True) (_ -> False)
trans._f1206_1206::B !_x_0::B type_arity_1::I app_2 = case _x_0 (True -> True) (_ -> case (<{StdInt.==_16}> type_arity_1 2) (True -> <{trans._c;467;62_1205}> (select app_2::syntax._App 1)) (False -> False) )
<{trans._c;467;62_1205}>::B !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> True) (_ -> False)
trans.isFoldExpression_130::B !_vArray_0 !_vArray_1 ro_2 !_x_3 ti_fun_defs_4 ti_cons_args_5 = case _x_3 (syntax.App app_1_0 -> trans.isFoldSymbol_129 _vArray_0 _vArray_1 ro_2 ti_cons_args_5 ti_fun_defs_4 app_1_0 (select (select app_1_0::syntax._App 0)::syntax._SymbIdent 1)) (syntax.Var _x_1_0 -> True) (_ -> False)
<{trans.c;390;86_121}> !g_l_0 = <{trans.g_c1;390;112_1211}> g_l_0
<{trans.g_c1;390;112_1211}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;390;112_1210}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;390;112_1210}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons (syntax.Var (syntax._BoundVar fv_ident_1_1 fv_info_ptr_1_2 Heap.nilPtr)) (<{trans.c;390;86_121}> g_t_1)) (_ -> <{trans.c;390;86_121}> g_t_1)
trans.free_vars_to_bound_vars !free_vars_0 = <{trans.c;390;86_121}> free_vars_0
trans.make_consumer_application !_x_0 arg_expr_1 = case _x_0 (trans._TransformFunctionInfo tfi_root_1_0 tfi_case_1_1 tfi_args_1_2 tfi_vars_1_3 tfi_orig_1_4 bef_1_5 act_1_6 -> syntax._App tfi_orig_1_4 (<{StdList.++}> (trans.free_vars_to_bound_vars (StdList.take bef_1_5 tfi_args_1_2)) (_predefined._Cons arg_expr_1 (trans.free_vars_to_bound_vars (StdList.drop (<{StdInt.+_6}> bef_1_5 act_1_6) tfi_args_1_2)))) Heap.nilPtr) 
<{trans.c;421;100_124}> !g_l_0 g_l_1 = <{trans.g_c1;421;86_1213}> g_l_0 g_l_1
<{trans.g_c1;421;86_1213}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons case_guard_1_0 g_t_1_1 -> <{trans.g_c1;421;112_1212}> g_l_1 case_guard_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;421;112_1212}> !g_l_0 case_guard_1 g_t_2 = case g_l_0 (_predefined._Cons guard_expr_1_0 g_t_1_1 -> _predefined._Cons (update case_guard_1::syntax._AlgebraicPattern [2:guard_expr_1_0]) (<{trans.c;421;100_124}> g_t_2 g_t_1_1)) (_ -> _predefined._Nil)
<{trans.c;423;37_125}> !g_l_0 = <{trans.g_c1;423;50_1215}> g_l_0
<{trans.g_c1;423;50_1215}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;423;50_1214}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;423;50_1214}> !g_h_0 g_t_1 = case g_h_0 (syntax._BasicPattern bp_value_1_0 bp_expr_1_1 bp_position_1_2 -> _predefined._Cons bp_expr_1_1 (<{trans.c;423;37_125}> g_t_1)) (_ -> <{trans.c;423;37_125}> g_t_1)
<{trans.c;425;102_126}> !g_l_0 g_l_1 = <{trans.g_c1;425;88_1217}> g_l_0 g_l_1
<{trans.g_c1;425;88_1217}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons case_guard_1_0 g_t_1_1 -> <{trans.g_c1;425;114_1216}> g_l_1 case_guard_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;425;114_1216}> !g_l_0 case_guard_1 g_t_2 = case g_l_0 (_predefined._Cons guard_expr_1_0 g_t_1_1 -> _predefined._Cons (update case_guard_1::syntax._BasicPattern [1:guard_expr_1_0]) (<{trans.c;425;102_126}> g_t_2 g_t_1_1)) (_ -> _predefined._Nil)
<{trans.c;427;37_127}> !g_l_0 = <{trans.g_c1;427;50_1219}> g_l_0
<{trans.g_c1;427;50_1219}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;427;50_1218}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;427;50_1218}> !g_h_0 g_t_1 = case g_h_0 (syntax._AlgebraicPattern ap_symbol_1_0 ap_vars_1_1 ap_expr_1_2 ap_position_1_3 -> _predefined._Cons ap_expr_1_2 (<{trans.c;427;37_127}> g_t_1)) (_ -> <{trans.c;427;37_127}> g_t_1)
<{trans.c;432;117_128}> !g_l_0 g_l_1 = <{trans.g_c1;432;103_1221}> g_l_0 g_l_1
<{trans.g_c1;432;103_1221}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons case_guard_1_0 g_t_1_1 -> <{trans.g_c1;432;129_1220}> g_l_1 case_guard_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;432;129_1220}> !g_l_0 case_guard_1 g_t_2 = case g_l_0 (_predefined._Cons guard_expr_1_0 g_t_1_1 -> _predefined._Cons (update case_guard_1::syntax._AlgebraicPattern [2:guard_expr_1_0]) (<{trans.c;432;117_128}> g_t_2 g_t_1_1)) (_ -> _predefined._Nil)
trans.overwrite_result_type_122 !case_info_ptr_0 !new_result_type_1 !ti_symbol_heap_2 = let !_x_1_0 = trans.readExprInfo case_info_ptr_0 ti_symbol_heap_2 in trans.writeExprInfo case_info_ptr_0 (syntax.EI_CaseType (update (select (select _x_1_0::_Tuple2 0)::_Tuple1 0)::syntax._CaseType [1:new_result_type_1])) (select _x_1_0::_Tuple2 1)
trans.anon_116 !aci_0 = update aci_0::syntax._ActiveCaseInfo [2:general.No]
trans.app_EEI_ActiveCase transformer_0 !expr_info_ptr_1 !expr_heap_2 = let _x_1_0 = Heap.readPtr expr_info_ptr_1 expr_heap_2, expr_heap_1_1 = select _x_1_0::_Tuple2 1 in <{trans._c;105;7_1222}> (select _x_1_0::_Tuple2 0) expr_info_ptr_1 transformer_0 expr_heap_1_1
<{trans._c;105;7_1222}> !_x_0 expr_info_ptr_1 transformer_2 !expr_heap_3 = case _x_0 (syntax.EI_Extended _x_1_0 original_expr_info_1_1 -> case _x_1_0 (syntax.EEI_ActiveCase aci_2_0 -> Heap.writePtr expr_info_ptr_1 (syntax.EI_Extended (syntax.EEI_ActiveCase (transformer_2 aci_2_0)) original_expr_info_1_1) expr_heap_3) ) (_ -> expr_heap_3)
trans.remove_aci_free_vars_info !case_info_ptr_0 !expr_heap_1 = trans.app_EEI_ActiveCase trans.anon_116 case_info_ptr_0 expr_heap_1
trans.equal_158::B !_x_0 _x_1 = case _x_0 (syntax.SK_Function glob_index1_1_0 -> case _x_1 (syntax.SK_Function glob_index2_2_0 -> <{compare_types.==_20}> (<{StdOverloaded.==;}> <{StdInt.==_16}>) glob_index1_1_0 glob_index2_2_0) ) (syntax.SK_LocalMacroFunction glob_index1_1_0 -> case _x_1 (syntax.SK_LocalMacroFunction glob_index2_2_0 -> <{StdInt.==_16}> glob_index1_1_0 glob_index2_2_0) ) (syntax.SK_GeneratedFunction _x_1_0 index1_1_1 -> case _x_1 (syntax.SK_GeneratedFunction _x_2_0 index2_2_1 -> <{StdInt.==_16}> index1_1_1 index2_2_1) ) (_ -> False)
<{trans.c;529;37_137}> !g_l_0 = <{trans.g_c1;529;64_1224}> g_l_0
<{trans.g_c1;529;64_1224}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;529;64_1223}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;529;64_1223}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons (syntax.Var (syntax._BoundVar fv_ident_1_1 fv_info_ptr_1_2 Heap.nilPtr)) (<{trans.c;529;37_137}> g_t_1)) (_ -> <{trans.c;529;37_137}> g_t_1)
<{trans.c;549;61_138}> !g_l_0 = <{trans.g_c1;549;77_1226}> g_l_0
<{trans.g_c1;549;77_1226}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;549;77_1225}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;549;77_1225}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons fv_info_ptr_1_2 (<{trans.c;549;61_138}> g_t_1)) (_ -> <{trans.c;549;61_138}> g_t_1)
trans.replacement_139 producer_vars_0 !_x_1 !form_pars_2 = case _x_1 (_predefined._Nil -> form_pars_2) (_ -> case form_pars_2 (_predefined._Nil -> _predefined._Nil) (_predefined._Cons form_par_1_0 form_pars_1_1 -> case _x_1 (_predefined._Cons h_act_pars_2_0 t_act_pars_2_1 -> case form_par_1_0 (syntax.Var _x_3_0 -> case _x_3_0 (syntax._BoundVar var_ident_4_0 var_info_ptr_4_1 var_expr_ptr_4_2 -> case (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{Heap.==_10}>)) var_info_ptr_4_1 producer_vars_0) (True -> _predefined._Cons h_act_pars_2_0 (trans.replacement_139 producer_vars_0 t_act_pars_2_1 form_pars_1_1)) (False -> trans.replacement_139 producer_vars_0 t_act_pars_2_1 form_pars_1_1) ) ) ) ) )
trans.replace_arg_159 !_x_0 _x_1 !f_2 = case _x_0 (_predefined._Nil -> f_2) (_predefined._Cons fv_info_ptr_1_0 _x_1_1 -> case f_2 (_predefined._Cons h_form_pars_2_0 t_form_pars_2_1 -> case h_form_pars_2_0 (syntax.Var _x_3_0 -> case _x_3_0 (syntax._BoundVar var_ident_4_0 var_info_ptr_4_1 var_expr_ptr_4_2 -> case (StdBool.not (<{Heap.==_10}> fv_info_ptr_1_0 var_info_ptr_4_1)) (True -> _predefined._Cons h_form_pars_2_0 (trans.replace_arg_159 _x_0 _x_1 t_form_pars_2_1)) (False -> trans.replacement_139 _x_0 _x_1 f_2) ) ) ) ) 
trans.fold_st_565 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_565 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_564 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_564 op_0 x_1_1 (op_0 a_1_0 st_2)) 
<{trans.c;717;37_151}> !_vone_0 !<{_v+_1}> v_2 i_3 !g_l_4 = <{trans.g_c1;717;43_1227}> g_l_4 v_2 i_3 _vone_0 <{_v+_1}>
<{trans.g_c1;717;43_1227}> !g_l_0 v_1 i_2 _vone_3 <{_v+_4}> = case g_l_0 (_predefined._Cons var_1_0 g_t_1_1 -> case (<{Heap.==_10}> (select v_1::syntax._BoundVar 1) (select var_1_0::syntax._FreeVar 2)) (True -> _predefined._Cons i_2 (<{trans.c;717;37_151}> _vone_3 <{_v+_4}> v_1 (select <{_v+_4}>::<{StdOverloaded.+;}> 0 i_2 (select _vone_3::<{StdOverloaded.one;}> 0)) g_t_1_1)) (False -> <{trans.c;717;37_151}> _vone_3 <{_v+_4}> v_1 (select <{_v+_4}>::<{StdOverloaded.+;}> 0 i_2 (select _vone_3::<{StdOverloaded.one;}> 0)) g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;745;54_152}> !_vone_0 !<{_v+_1}> v_2 i_3 !g_l_4 = <{trans.g_c1;745;60_1228}> g_l_4 v_2 i_3 _vone_0 <{_v+_1}>
<{trans.g_c1;745;60_1228}> !g_l_0 v_1 i_2 _vone_3 <{_v+_4}> = case g_l_0 (_predefined._Cons var_1_0 g_t_1_1 -> case (<{Heap.==_10}> (select v_1::syntax._BoundVar 1) (select var_1_0::syntax._FreeVar 2)) (True -> _predefined._Cons i_2 (<{trans.c;745;54_152}> _vone_3 <{_v+_4}> v_1 (select <{_v+_4}>::<{StdOverloaded.+;}> 0 i_2 (select _vone_3::<{StdOverloaded.one;}> 0)) g_t_1_1)) (False -> <{trans.c;745;54_152}> _vone_3 <{_v+_4}> v_1 (select <{_v+_4}>::<{StdOverloaded.+;}> 0 i_2 (select _vone_3::<{StdOverloaded.one;}> 0)) g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;745;54_888}> !<{_v+_0}> v_1 i_2::I !g_l_3 = <{trans.g_c1;745;60_1229}> g_l_3 v_1 i_2 <{_v+_0}>
<{trans.g_c1;745;60_1229}> !g_l_0 v_1 i_2::I <{_v+_3}> = case g_l_0 (_predefined._Cons var_1_0 g_t_1_1 -> case (<{Heap.==_10}> (select v_1::syntax._BoundVar 1) (select var_1_0::syntax._FreeVar 2)) (True -> _predefined._Cons i_2 (<{trans.c;745;54_888}> <{_v+_3}> v_1 (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_2 StdInt.one_11) g_t_1_1)) (False -> <{trans.c;745;54_888}> <{_v+_3}> v_1 (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_2 StdInt.one_11) g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;745;54_889}> v_0 i_1::I !g_l_2 = <{trans.g_c1;745;60_1230}> g_l_2 v_0 i_1
<{trans.g_c1;745;60_1230}> !g_l_0 v_1 i_2::I = case g_l_0 (_predefined._Cons var_1_0 g_t_1_1 -> case (<{Heap.==_10}> (select v_1::syntax._BoundVar 1) (select var_1_0::syntax._FreeVar 2)) (True -> _predefined._Cons i_2 (<{trans.c;745;54_889}> v_1 (<{StdInt.+_6}> i_2 StdInt.one_11) g_t_1_1)) (False -> <{trans.c;745;54_889}> v_1 (<{StdInt.+_6}> i_2 StdInt.one_11) g_t_1_1) ) (_ -> _predefined._Nil)
trans.find_index_154 ap_vars_0 !st_args_strictness_1 !i_2::I e_3 ro_4 fun_defs_5 fun_heap_6 = case (containers.arg_is_strict i_2 st_args_strictness_1) (True -> <{trans._c;744;23_1231}> e_3 ap_vars_0 fun_defs_5 fun_heap_6 ro_4) (False -> _Tuple3 _predefined._Nil fun_defs_5 fun_heap_6) 
trans.find_indices_153 ap_vars_0 st_args_strictness_1 i_2::I !_x_3 ro_4 fun_defs_5 fun_heap_6 = case _x_3 (_predefined._Nil -> _Tuple3 _predefined._Nil fun_defs_5 fun_heap_6) (_predefined._Cons e_1_0 es_1_1 -> let _x_2_0 = trans.find_index_154 ap_vars_0 st_args_strictness_1 i_2 e_1_0 ro_4 fun_defs_5 fun_heap_6, _x_2_1 = trans.find_indices_153 ap_vars_0 st_args_strictness_1 (<{StdInt.+_6}> i_2 1) es_1_1 ro_4 (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2) in _Tuple3 (<{StdList.++}> (select _x_2_0::_Tuple3 0) (select _x_2_1::_Tuple3 0)) (select _x_2_1::_Tuple3 1) (select _x_2_1::_Tuple3 2)) 
trans.app_indices_156 ap_vars_0 !_x_1 !ro_2 !fun_defs_3 !fun_heap_4 = case _x_1 (syntax._App app_symb_1_0 app_args_1_1 app_info_ptr_1_2 -> let _x_2_0 = trans.get_producer_type app_symb_1_0 ro_2 fun_defs_3 fun_heap_4, _x_2_1 = select _x_2_0::_Tuple3 0 in case (<{StdInt.==_16}> (StdList.length_47 app_args_1_1) (select _x_2_1::syntax._SymbolType 3)) (True -> trans.find_indices_153 ap_vars_0 (select _x_2_1::syntax._SymbolType 2) 0 app_args_1_1 ro_2 (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) (False -> _Tuple3 _predefined._Nil (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) ) 
<{trans._c;744;23_1231}> !e_0 ap_vars_1 fun_defs_2 fun_heap_3 ro_4 = case e_0 (syntax.Var v_1_0 -> _Tuple3 (<{trans.c;745;54_889}> v_1_0 0 ap_vars_1) fun_defs_2 fun_heap_3) (syntax.App a_1_0 -> trans.app_indices_156 ap_vars_1 a_1_0 ro_4 fun_defs_2 fun_heap_3) (_ -> _Tuple3 _predefined._Nil fun_defs_2 fun_heap_3)
<{trans.c;717;37_890}> !<{_v+_0}> v_1 i_2::I !g_l_3 = <{trans.g_c1;717;43_1232}> g_l_3 v_1 i_2 <{_v+_0}>
<{trans.g_c1;717;43_1232}> !g_l_0 v_1 i_2::I <{_v+_3}> = case g_l_0 (_predefined._Cons var_1_0 g_t_1_1 -> case (<{Heap.==_10}> (select v_1::syntax._BoundVar 1) (select var_1_0::syntax._FreeVar 2)) (True -> _predefined._Cons i_2 (<{trans.c;717;37_890}> <{_v+_3}> v_1 (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_2 StdInt.one_11) g_t_1_1)) (False -> <{trans.c;717;37_890}> <{_v+_3}> v_1 (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_2 StdInt.one_11) g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;717;37_891}> v_0 i_1::I !g_l_2 = <{trans.g_c1;717;43_1233}> g_l_2 v_0 i_1
<{trans.g_c1;717;43_1233}> !g_l_0 v_1 i_2::I = case g_l_0 (_predefined._Cons var_1_0 g_t_1_1 -> case (<{Heap.==_10}> (select v_1::syntax._BoundVar 1) (select var_1_0::syntax._FreeVar 2)) (True -> _predefined._Cons i_2 (<{trans.c;717;37_891}> v_1 (<{StdInt.+_6}> i_2 StdInt.one_11) g_t_1_1)) (False -> <{trans.c;717;37_891}> v_1 (<{StdInt.+_6}> i_2 StdInt.one_11) g_t_1_1) ) (_ -> _predefined._Nil)
trans.body_strict_155 !_vlength_0 ap_vars_1 app_args_2 !_x_3 ap_vars_4 ro_5 fun_defs_6 fun_heap_7 = case _x_3 (syntax.Var v_1_0 -> <{trans._c;718;15_1234}> (<{trans.c;717;37_891}> v_1_0 0 ap_vars_4) _vlength_0 app_args_2 fun_defs_6 fun_heap_7) (syntax.App app_1_0 -> let _x_2_0 = trans.app_indices_156 ap_vars_1 app_1_0 ro_5 fun_defs_6 fun_heap_7 in _Tuple3 (StdFunc.seq (StdList.map containers.add_strictness (select _x_2_0::_Tuple3 0)) (containers.insert_n_lazy_values_at_beginning (select _vlength_0::<{StdOverloaded.length;}> 0 app_args_2) syntax.NotStrict)) (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) (_ -> _Tuple3 (containers.insert_n_lazy_values_at_beginning (select _vlength_0::<{StdOverloaded.length;}> 0 app_args_2) syntax.NotStrict) fun_defs_6 fun_heap_7)
<{trans._c;718;15_1234}> !_x_0 _vlength_1 app_args_2 fun_defs_3 fun_heap_4 = case _x_0 (_predefined._Nil -> _Tuple3 (containers.insert_n_lazy_values_at_beginning (select _vlength_1::<{StdOverloaded.length;}> 0 app_args_2) syntax.NotStrict) fun_defs_3 fun_heap_4) (_predefined._Cons i_1_0 _x_1_1 -> _Tuple3 (containers.add_strictness i_1_0 (containers.insert_n_lazy_values_at_beginning (select _vlength_1::<{StdOverloaded.length;}> 0 app_args_2) syntax.NotStrict)) fun_defs_3 fun_heap_4) 
trans.in_normal_form::B !_x_0 = case _x_0 (syntax.Var _x_1_0 -> True) (syntax.BasicExpr _x_1_0 -> True) (_ -> False)
<{trans.c;702;72_148}> !_vList_0 cons_type_args_strictness_1 body_strictness_2 !g_l_3 g_l_4 i_5::I = <{trans.g_c1;702;36_1238}> g_l_3 g_l_4 i_5 body_strictness_2 cons_type_args_strictness_1 _vList_0
<{trans.g_c1;702;36_1238}> !g_l_0 g_l_1 i_2::I body_strictness_3 cons_type_args_strictness_4 _vList_5 = case g_l_0 (<{_predefined._|Cons}> linear_1_0 g_t_1_1 -> <{trans.g_c1;702;60_1237}> g_l_1 i_2 body_strictness_3 cons_type_args_strictness_4 linear_1_0 _vList_5 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;702;60_1237}> !g_l_0 i_1::I body_strictness_2 cons_type_args_strictness_3 linear_4::B _vList_5 g_t_6 = case g_l_0 (_predefined._Cons app_arg_1_0 g_t_1_1 -> _predefined._Cons (trans._f1236_1236 (trans._f1235_1235 (containers.arg_is_strict i_1 body_strictness_2) i_1 cons_type_args_strictness_3 linear_4) app_arg_1_0) (<{trans.c;702;72_148}> _vList_5 cons_type_args_strictness_3 body_strictness_2 g_t_6 g_t_1_1 (<{StdInt.+_6}> i_1 StdInt.one_11))) (_ -> _predefined._Nil)
trans._f1236_1236::B !_x_0::B app_arg_1 = case _x_0 (True -> True) (_ -> trans.in_normal_form app_arg_1)
trans._f1235_1235::B !_x_0::B i_1::I cons_type_args_strictness_2 linear_3::B = case _x_0 (True -> True) (_ -> case (StdBool.not (containers.arg_is_strict i_1 cons_type_args_strictness_2)) (True -> linear_3) (False -> False) )
trans.filterWith !_x_0 _x_1 = case _x_0 (_predefined._Cons _x_1_0 t2_1_1 -> case _x_1_0 (True -> case _x_1 (_predefined._Cons h1_3_0 t1_3_1 -> _predefined._Cons h1_3_0 (trans.filterWith t2_1_1 t1_3_1)) ) (False -> case _x_1 (_predefined._Cons h1_3_0 t1_3_1 -> trans.filterWith t2_1_1 t1_3_1) ) ) (_ -> _predefined._Nil)
trans.anon_149 !_x_0 = case _x_0 (_Tuple2 _x_1_0 arg_1_1 -> case _x_1_0 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> trans.writeVarInfo fv_info_ptr_2_2 (syntax.VI_Expression arg_1_1)) ) 
<{trans.c;837;37_167}> !g_l_0 g_l_1 = <{trans.g_c1;836;55_1241}> g_l_0 g_l_1
<{trans.g_c1;836;55_1241}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c1;837;41_1240}> g_l_1 g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;837;41_1240}> !g_l_0 g_h_1 g_t_2 = case g_l_0 (_predefined._Cons n_1_0 g_t_1_1 -> <{trans.g_c2;836;55_1239}> g_h_1 n_1_0 g_t_2 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;836;55_1239}> !g_h_0 !n_1::B g_t_2 g_t_3 = case g_h_0 (_Tuple2 lb_dst_1_0 lb_src_1_1 -> case n_1 (True -> _predefined._Cons (syntax._LetBind lb_dst_1_0 lb_src_1_1 syntax.NoPos) (<{trans.c;837;37_167}> g_t_2 g_t_3)) (False -> <{trans.c;837;37_167}> g_t_2 g_t_3) ) (_ -> <{trans.c;837;37_167}> g_t_2 g_t_3)
<{trans.c;811;37_165}> cons_type_args_strictness_0 !g_l_1 g_l_2 i_3::I = <{trans.g_c1;809;55_1244}> g_l_1 g_l_2 i_3 cons_type_args_strictness_0
<{trans.g_c1;809;55_1244}> !g_l_0 g_l_1 i_2::I cons_type_args_strictness_3 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c1;810;41_1243}> g_l_1 g_h_1_0 i_2 cons_type_args_strictness_3 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;810;41_1243}> !g_l_0 g_h_1 i_2::I cons_type_args_strictness_3 g_t_4 = case g_l_0 (_predefined._Cons n_1_0 g_t_1_1 -> <{trans.g_c2;809;55_1242}> g_h_1 n_1_0 i_2 cons_type_args_strictness_3 g_t_4 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;809;55_1242}> !g_h_0 !n_1::B i_2::I cons_type_args_strictness_3 g_t_4 g_t_5 = case g_h_0 (_Tuple2 lb_dst_1_0 lb_src_1_1 -> case (case n_1 (True -> containers.arg_is_strict i_2 cons_type_args_strictness_3) (False -> False) ) (True -> _predefined._Cons (syntax._LetBind lb_dst_1_0 lb_src_1_1 syntax.NoPos) (<{trans.c;811;37_165}> cons_type_args_strictness_3 g_t_4 g_t_5 (<{StdInt.+_6}> i_2 StdInt.one_11))) (False -> <{trans.c;811;37_165}> cons_type_args_strictness_3 g_t_4 g_t_5 (<{StdInt.+_6}> i_2 StdInt.one_11)) ) (_ -> <{trans.c;811;37_165}> cons_type_args_strictness_3 g_t_4 g_t_5 (<{StdInt.+_6}> i_2 StdInt.one_11))
<{trans.c;817;37_166}> cons_type_args_strictness_0 !g_l_1 g_l_2 i_3::I = <{trans.g_c1;815;55_1247}> g_l_1 g_l_2 i_3 cons_type_args_strictness_0
<{trans.g_c1;815;55_1247}> !g_l_0 g_l_1 i_2::I cons_type_args_strictness_3 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c1;816;41_1246}> g_l_1 g_h_1_0 i_2 cons_type_args_strictness_3 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;816;41_1246}> !g_l_0 g_h_1 i_2::I cons_type_args_strictness_3 g_t_4 = case g_l_0 (_predefined._Cons n_1_0 g_t_1_1 -> <{trans.g_c2;815;55_1245}> g_h_1 n_1_0 i_2 cons_type_args_strictness_3 g_t_4 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;815;55_1245}> !g_h_0 !n_1::B i_2::I cons_type_args_strictness_3 g_t_4 g_t_5 = case g_h_0 (_Tuple2 lb_dst_1_0 lb_src_1_1 -> case (case n_1 (True -> StdBool.not (containers.arg_is_strict i_2 cons_type_args_strictness_3)) (False -> False) ) (True -> _predefined._Cons (syntax._LetBind lb_dst_1_0 lb_src_1_1 syntax.NoPos) (<{trans.c;817;37_166}> cons_type_args_strictness_3 g_t_4 g_t_5 (<{StdInt.+_6}> i_2 StdInt.one_11))) (False -> <{trans.c;817;37_166}> cons_type_args_strictness_3 g_t_4 g_t_5 (<{StdInt.+_6}> i_2 StdInt.one_11)) ) (_ -> <{trans.c;817;37_166}> cons_type_args_strictness_3 g_t_4 g_t_5 (<{StdInt.+_6}> i_2 StdInt.one_11))
trans.possibly_add_let !_x_0 ap_expr_1 _x_2 _x_3 _x_4 ti_symbol_heap_5 cons_type_args_strictness_6 = case _x_0 (_predefined._Nil -> _Tuple2 ap_expr_1 ti_symbol_heap_5) (_ -> let lazy_binds_1_0 = <{trans.c;837;37_167}> _x_0 _x_2, let_type_1_1 = trans.filterWith _x_2 _x_3, _x_1_2 = Heap.newPtr (syntax.EI_LetType let_type_1_1) ti_symbol_heap_5, new_info_ptr_1_3 = select _x_1_2::_Tuple2 0 in _Tuple2 (<{trans._c;841;13_1248}> lazy_binds_1_0 ap_expr_1 new_info_ptr_1_3) (select _x_1_2::_Tuple2 1))
<{trans._c;841;13_1248}> !lazy_binds_0 !ap_expr_1 new_info_ptr_2 = case lazy_binds_0 (_predefined._Nil -> ap_expr_1) (_ -> syntax.Let (syntax._Let _predefined._Nil lazy_binds_0 ap_expr_1 new_info_ptr_2 syntax.NoPos))
trans.anon_150 !_x_0 = case _x_0 (_Tuple2 _x_1_0 arg_1_1 -> case _x_1_0 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> trans.writeVarInfo fv_info_ptr_2_2 syntax.VI_Empty) ) 
trans.neverMatchingCase !_x_0 = case _x_0 (general.Yes ident_1_0 -> syntax.FailExpr ident_1_0) (_ -> syntax.FailExpr (syntax._Ident "neverMatchingCase" Heap.nilPtr))
trans.expr_or_never_matching_case_163 ro_0 !_x_1 case_ident_2 ti_3 = case _x_1 (general.Yes match_expr_1_0 -> _Tuple2 match_expr_1_0 ti_3) (general.No -> _Tuple2 (trans.neverMatchingCase (<{trans._c;755;27_1249}> (select ro_0::trans._ReadOnlyTI 2) case_ident_2 ro_0)) ti_3) 
<{trans._c;755;27_1249}> !_x_0 case_ident_1 ro_2 = case _x_0 (trans.NotRootCase -> case_ident_1) (_ -> general.Yes (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 1)::syntax._SymbIdent 0))
trans.equal_list_contructor_141::B !glob_module_0::I !ds_index_1::I !cons_glob_module_2::I !cons_ds_index_3::I = case (case (<{StdInt.==_16}> glob_module_0 1) (True -> <{StdInt.==_16}> cons_glob_module_2 1) (False -> False) ) (True -> let index_2_0::I = <{StdInt.+_6}> ds_index_1 44 in case (<{StdInt.==_16}> index_2_0 50) (True -> let cons_index_4_0::I = <{StdInt.+_6}> cons_ds_index_3 44 in case (<{StdInt.==_16}> cons_index_4_0 44) (True -> True) (False -> case (<{StdInt.==_16}> cons_index_4_0 45) (True -> True) (False -> case (<{StdInt.==_16}> cons_index_4_0 47) (True -> True) (False -> <{StdInt.==_16}> cons_index_4_0 48) ) ) ) (False -> case (<{StdInt.==_16}> index_2_0 57) (True -> let cons_index_5_0::I = <{StdInt.+_6}> cons_ds_index_3 44 in case (<{StdInt.==_16}> cons_index_5_0 51) (True -> True) (False -> case (<{StdInt.==_16}> cons_index_5_0 52) (True -> True) (False -> case (<{StdInt.==_16}> cons_index_5_0 54) (True -> True) (False -> <{StdInt.==_16}> cons_index_5_0 55) ) ) ) (False -> StdMisc.abort "equal_list_contructor") ) ) 
<{trans.c;761;36_164}> basic_value_0 !g_l_1 = <{trans.g_c1;761;58_1251}> g_l_1 basic_value_0
<{trans.g_c1;761;58_1251}> !g_l_0 basic_value_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;761;58_1250}> g_h_1_0 basic_value_1 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;761;58_1250}> !g_h_0 !basic_value_1 g_t_2 = case g_h_0 (syntax._BasicPattern bp_value_1_0 bp_expr_1_1 bp_position_1_2 -> case (<{compare_types.==_18}> bp_value_1_0 basic_value_1) (True -> _predefined._Cons g_h_0 (<{trans.c;761;36_164}> basic_value_1 g_t_2)) ) (_ -> <{trans.c;761;36_164}> basic_value_1 g_t_2)
trans.free_variables_of_expression !_vclearVariables_0 !_vfreeVariables_1 expr_2 ti_3 = let _x_1_0 = select _vfreeVariables_1::<{trans.freeVariables;}> 0 expr_2 (trans._FreeVarInfo (select _vclearVariables_0::<{trans.clearVariables;}> 0 expr_2 (select ti_3::trans._TransformInfo 5)) (select ti_3::trans._TransformInfo 6) _predefined._Nil (select ti_3::trans._TransformInfo 10)) in _Tuple2 (select _x_1_0::trans._FreeVarInfo 2) (update ti_3::trans._TransformInfo [5:select _x_1_0::trans._FreeVarInfo 0,6:select _x_1_0::trans._FreeVarInfo 1,10:select _x_1_0::trans._FreeVarInfo 3])
trans.get_fun_def_and_cons_args !_x_0 !cons_args_1 !fun_defs_2 !fun_heap_3 = case _x_0 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> let _x_3_0 = trans.uselect_654 fun_defs_2 glob_object_2_0, _x_3_1 = _SystemArray.uselect_6 cons_args_1 glob_object_2_0 in <{_Tuple5!31}> (select _x_3_0::_Tuple2 0) (select _x_3_1::_Tuple2 0) (select _x_3_1::_Tuple2 1) (select _x_3_0::_Tuple2 1) fun_heap_3) ) (syntax.SK_LocalMacroFunction glob_object_1_0 -> let _x_2_0 = trans.uselect_654 fun_defs_2 glob_object_1_0, _x_2_1 = _SystemArray.uselect_6 cons_args_1 glob_object_1_0 in <{_Tuple5!31}> (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1) (select _x_2_0::_Tuple2 1) fun_heap_3) (syntax.SK_GeneratedFunction fun_info_ptr_1_0 fun_index_1_1 -> case (<{StdInt.<_17}> fun_index_1_1 (trans.size_652 fun_defs_2)) (True -> let _x_3_0 = trans.uselect_654 fun_defs_2 fun_index_1_1, _x_3_1 = _SystemArray.uselect_6 cons_args_1 fun_index_1_1 in <{_Tuple5!31}> (select _x_3_0::_Tuple2 0) (select _x_3_1::_Tuple2 0) (select _x_3_1::_Tuple2 1) (select _x_3_0::_Tuple2 1) fun_heap_3) (False -> let _x_3_0 = Heap.readPtr fun_info_ptr_1_0 fun_heap_3, _x_3_1 = select (select _x_3_0::_Tuple2 0)::_Tuple1 0 in <{_Tuple5!31}> (select _x_3_1::syntax._GeneratedFunction 0) (select _x_3_1::syntax._GeneratedFunction 2) cons_args_1 fun_defs_2 (select _x_3_0::_Tuple2 1)) ) 
<{trans.c;876;43_168}> !g_l_0 = <{trans.g_c1;876;59_1253}> g_l_0
<{trans.g_c1;876;59_1253}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;876;59_1252}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;876;59_1252}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons fv_info_ptr_1_2 (<{trans.c;876;43_168}> g_t_1)) (_ -> <{trans.c;876;43_168}> g_t_1)
<{trans.c;877;47_169}> !g_l_0 = <{trans.g_c1;877;64_1255}> g_l_0
<{trans.g_c1;877;64_1255}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;877;64_1254}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;877;64_1254}> !g_h_0 g_t_1 = case g_h_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> _predefined._Cons var_info_ptr_1_1 (<{trans.c;877;47_169}> g_t_1)) (_ -> <{trans.c;877;47_169}> g_t_1)
<{trans.c;878;64_170}> free_var_info_ptrs_0 !g_l_1 = <{trans.g_c1;878;80_1257}> g_l_1 free_var_info_ptrs_0
<{trans.g_c1;878;80_1257}> !g_l_0 free_var_info_ptrs_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;878;80_1256}> g_h_1_0 free_var_info_ptrs_1 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;878;80_1256}> !g_h_0 free_var_info_ptrs_1 g_t_2 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{Heap.==_10}>)) fv_info_ptr_1_2 free_var_info_ptrs_1) (<{trans.c;878;64_170}> free_var_info_ptrs_1 g_t_2)) (_ -> <{trans.c;878;64_170}> free_var_info_ptrs_1 g_t_2)
<{trans.c;879;90_171}> !g_l_0 g_l_1 = <{trans.g_c1;879;72_1259}> g_l_0 g_l_1
<{trans.g_c1;879;72_1259}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons outer_argument_1_0 g_t_1_1 -> <{trans.g_c1;879;96_1258}> g_l_1 outer_argument_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;879;96_1258}> !g_l_0 outer_argument_1 g_t_2 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _predefined._Cons outer_argument_1 (<{trans.c;879;90_171}> g_t_2 g_t_1_1)) (False -> <{trans.c;879;90_171}> g_t_2 g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;882;33_172}> outer_info_ptrs_0 !g_l_1 = <{trans.g_c1;882;62_1261}> g_l_1 outer_info_ptrs_0
<{trans.g_c1;882;62_1261}> !g_l_0 outer_info_ptrs_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;882;62_1260}> g_h_1_0 outer_info_ptrs_1 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;882;62_1260}> !g_h_0 !outer_info_ptrs_1 g_t_2 = case g_h_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> case (StdBool.not (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{Heap.==_10}>)) var_info_ptr_1_1 outer_info_ptrs_1)) (True -> _predefined._Cons (syntax._FreeVar -1 var_ident_1_0 var_info_ptr_1_1 -1) (<{trans.c;882;33_172}> outer_info_ptrs_1 g_t_2)) ) (_ -> <{trans.c;882;33_172}> outer_info_ptrs_1 g_t_2)
trans.repeatn_append__563 !_vList_0 !_x_1::I _x_2 l_3 = case _x_1 (0 -> l_3) (_ -> select _vList_0::<{_SystemStrictLists.List;}> 0 _x_2 (trans.repeatn_append__563 _vList_0 (<{StdInt.-_7}> _x_1 StdInt.one_11) _x_2 l_3))
trans.map_st_562 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_562 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
<{trans.c;1033;77_181}> !g_l_0 g_l_1 = <{trans.g_c1;1033;66_1263}> g_l_0 g_l_1
<{trans.g_c1;1033;66_1263}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons st_arg_1_0 g_t_1_1 -> <{trans.g_c1;1033;84_1262}> g_l_1 st_arg_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;1033;84_1262}> !g_l_0 st_arg_1 g_t_2 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _predefined._Cons st_arg_1 (<{trans.c;1033;77_181}> g_t_2 g_t_1_1)) (False -> <{trans.c;1033;77_181}> g_t_2 g_t_1_1) ) (_ -> _predefined._Nil)
trans.map_st_559 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_559 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.get_type_of_local_var_184 !_x_0 var_heap_1 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> let _x_2_0 = trans.readExtendedVarInfo fv_info_ptr_1_2 var_heap_1 in _Tuple2 (select (select _x_2_0::_Tuple2 0)::_Tuple1 0) (select _x_2_0::_Tuple2 1)) 
trans.map_st_892 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.get_type_of_local_var_184 x_1_0 s_1, _x_2_2 = trans.map_st_892 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.get_types_of_local_vars !vars_0 !var_heap_1 = trans.map_st_892 vars_0 var_heap_1
trans.bind_to_fresh_expr_var !_x_0 var_heap_1 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> let _x_2_0 = Heap.newPtr syntax.VI_Empty var_heap_1, new_info_ptr_2_1 = select _x_2_0::_Tuple2 0 in _Tuple2 (syntax._FreeVar -1 fv_ident_1_1 new_info_ptr_2_1 -1) (trans.writeVarInfo fv_info_ptr_1_2 (syntax.VI_Expression (syntax.Var (syntax._BoundVar fv_ident_1_1 new_info_ptr_2_1 Heap.nilPtr))) (select _x_2_0::_Tuple2 1))) 
trans.determine_case_function_type fun_arity_0::I ct_result_type_1 arg_types_2 st_attr_env_3 !ti_4 = case ti_4 (trans._TransformInfo ti_fun_defs_1_0 ti_instances_1_1 ti_cons_args_1_2 ti_new_functions_1_3 ti_fun_heap_1_4 ti_var_heap_1_5 ti_symbol_heap_1_6 ti_type_heaps_1_7 ti_type_def_infos_1_8 ti_next_fun_nr_1_9 ti_cleanup_info_1_10 ti_recursion_introduced_1_11 ti_error_file_1_12 ti_predef_symbols_1_13 -> let _x_2_0 = typesupport.getTypeVars (<{typesupport.performOnTypeVars;}> (typesupport.performOnTypeVars_33 (<{typesupport.performOnTypeVars;}> typesupport.performOnTypeVars_31))) (_predefined._Cons ct_result_type_1 arg_types_2) (select ti_type_heaps_1_7::syntax._TypeHeaps 0), type_variables_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = trans.bind_to_fresh_type_variables type_variables_2_1 (select _x_2_0::_Tuple2 1), _x_2_3 = expand_types.substitute_17 arg_types_2 (update ti_type_heaps_1_7::syntax._TypeHeaps [0:select _x_2_2::_Tuple2 1]), _x_2_4 = expand_types.substitute_8 ct_result_type_1 (select _x_2_3::_Tuple3 2) in _Tuple3 (syntax._SymbolType (select _x_2_2::_Tuple2 0) (select _x_2_3::_Tuple3 1) syntax.NotStrict fun_arity_0 (select _x_2_4::_Tuple3 1) _predefined._Nil _predefined._Nil _predefined._Nil) type_variables_2_1 (update ti_4::trans._TransformInfo [7:select _x_2_4::_Tuple3 2])) 
trans.remove_VI_Expression_values !_x_0 !var_heap_1 = case _x_0 (_predefined._Cons _x_1_0 args_1_1 -> case _x_1_0 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> trans.remove_VI_Expression_values args_1_1 (trans.writeVarInfo fv_info_ptr_2_2 syntax.VI_Empty var_heap_1)) ) (_predefined._Nil -> var_heap_1) 
<{trans.c;1081;89_182}> !g_l_0 g_l_1 = <{trans.g_c1;1081;62_1265}> g_l_0 g_l_1
<{trans.g_c1;1081;62_1265}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons cons_arg_1_0 g_t_1_1 -> <{trans.g_c1;1081;96_1264}> g_l_1 cons_arg_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;1081;96_1264}> !g_l_0 cons_arg_1 g_t_2 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _predefined._Cons cons_arg_1 (<{trans.c;1081;89_182}> g_t_2 g_t_1_1)) (False -> <{trans.c;1081;89_182}> g_t_2 g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;1082;98_183}> !_vUTSList_0 !_vList_1 !g_l_2 g_l_3 = <{trans.g_c1;1082;63_1267}> g_l_2 g_l_3 _vUTSList_0 _vList_1
<{trans.g_c1;1082;63_1267}> !g_l_0 g_l_1 _vUTSList_2 _vList_3 = case g_l_0 (<{_predefined._|Cons}> cons_arg_1_0 g_t_1_1 -> <{trans.g_c1;1082;105_1266}> g_l_1 _vUTSList_2 cons_arg_1_0 _vList_3 g_t_1_1) (_ -> _SystemStrictLists._nil_uts _vUTSList_2)
<{trans.g_c1;1082;105_1266}> !g_l_0 _vUTSList_1 cons_arg_2 _vList_3 g_t_4 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> select _vUTSList_1::<{_SystemStrictLists.UTSList;}> 0 cons_arg_2 (<{trans.c;1082;98_183}> _vUTSList_1 _vList_3 g_t_4 g_t_1_1)) (False -> <{trans.c;1082;98_183}> _vUTSList_1 _vList_3 g_t_4 g_t_1_1) ) (_ -> _SystemStrictLists._nil_uts _vUTSList_1)
trans.arity_warning_893 !<{_v<<<_0}> !<{_v<<<_1}> msg_2 symb_ident_3 fun_index_4 !fun_arity_5::I !ti_6 = case (StdBool.not (<{StdInt.<_17}> 32 fun_arity_5)) (True -> ti_6) (False -> update ti_6::trans._TransformInfo [12:<{StdFile.<<<_38}> (select <{_v<<<_1}>::<{StdFile.<<<;}> 0 (<{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 (<{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (select ti_6::trans._TransformInfo 12) "Warning: Arity > 32 ") msg_2) " ") fun_arity_5) " ") symb_ident_3) "@") fun_index_4) "\n"]) 
trans.map_st_894 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.bind_to_fresh_expr_var x_1_0 s_1, _x_2_2 = trans.map_st_894 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
<{trans.c;1082;98_895}> !_vList_0 !g_l_1 g_l_2 = <{trans.g_c1;1082;63_1269}> g_l_1 g_l_2 _vList_0
<{trans.g_c1;1082;63_1269}> !g_l_0 g_l_1 _vList_2 = case g_l_0 (<{_predefined._|Cons}> cons_arg_1_0 g_t_1_1 -> <{trans.g_c1;1082;105_1268}> g_l_1 cons_arg_1_0 _vList_2 g_t_1_1) (_ -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))
<{trans.g_c1;1082;105_1268}> !g_l_0 cons_arg_1::B _vList_2 g_t_3 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _SystemStrictLists._cons_uts_41 cons_arg_1 (<{trans.c;1082;98_895}> _vList_2 g_t_3 g_t_1_1)) (False -> <{trans.c;1082;98_895}> _vList_2 g_t_3 g_t_1_1) ) (_ -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))
trans.repeatn_append__896 !_x_0::I _x_1::B !l_2 = case _x_0 (0 -> l_2) (_ -> _SystemStrictLists._cons_uts_41 _x_1 (trans.repeatn_append__896 (<{StdInt.-_7}> _x_0 StdInt.one_11) _x_1 l_2))
trans.arity_warning_897 !<{_v<<<_0}> msg_1 symb_ident_2 fun_index_3 !fun_arity_4::I !ti_5 = case (StdBool.not (<{StdInt.<_17}> 32 fun_arity_4)) (True -> ti_5) (False -> update ti_5::trans._TransformInfo [12:<{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 (<{StdFile.<<<_38}> (<{syntax.<<<_24}> (<{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (select ti_5::trans._TransformInfo 12) "Warning: Arity > 32 ") msg_1) " ") fun_arity_4) " ") symb_ident_2) "@") fun_index_3) "\n"]) 
<{trans.c;1082;98_898}> !g_l_0 g_l_1 = <{trans.g_c1;1082;63_1271}> g_l_0 g_l_1
<{trans.g_c1;1082;63_1271}> !g_l_0 g_l_1 = case g_l_0 (<{_predefined._|Cons}> cons_arg_1_0 g_t_1_1 -> <{trans.g_c1;1082;105_1270}> g_l_1 cons_arg_1_0 g_t_1_1) (_ -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))
<{trans.g_c1;1082;105_1270}> !g_l_0 cons_arg_1::B g_t_2 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _SystemStrictLists._cons_uts_41 cons_arg_1 (<{trans.c;1082;98_898}> g_t_2 g_t_1_1)) (False -> <{trans.c;1082;98_898}> g_t_2 g_t_1_1) ) (_ -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))
trans.arity_warning_899 msg_0 symb_ident_1 fun_index_2::I !fun_arity_3::I !ti_4 = case (StdBool.not (<{StdInt.<_17}> 32 fun_arity_3)) (True -> ti_4) (False -> update ti_4::trans._TransformInfo [12:<{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> (<{syntax.<<<_24}> (<{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (select ti_4::trans._TransformInfo 12) "Warning: Arity > 32 ") msg_0) " ") fun_arity_3) " ") symb_ident_1) "@") fun_index_2) "\n"]) 
trans.generate_case_function_with_pattern_argument !fun_index_0::I !case_info_ptr_1 !case_expr_2 outer_fun_def_3 outer_cons_args_4 used_mask_5 !ro_fun_6 !ro_fun_args_7 !ti_8 = case case_expr_2 (syntax.Case kees_1_0 -> case kees_1_0 (syntax._Case old_case_expr_2_0 case_guards_2_1 case_default_2_2 case_ident_2_3 case_info_ptr_2_4 case_explicit_2_5 case_default_pos_2_6 -> case ro_fun_6 (syntax._SymbIdent symb_ident_3_0 symb_kind_3_1 -> case symb_kind_3_1 (syntax.SK_GeneratedFunction fun_info_ptr_4_0 _x_4_1 -> let fun_arity_5_0 = StdList.length_47 ro_fun_args_7, ti_5_1 = trans.arity_warning_899 "generate_case_function" (select ro_fun_6::syntax._SymbIdent 0) fun_index_0 fun_arity_5_0 ti_8, _x_5_2 = trans.readExprInfo case_info_ptr_1 (select ti_5_1::trans._TransformInfo 6), _x_5_3 = select (select _x_5_2::_Tuple2 0)::_Tuple1 0, _x_5_4 = select (select outer_fun_def_3::syntax._FunDef 4)::_Tuple1 0, types_from_outer_fun_5_5 = <{trans.c;1033;77_181}> (select _x_5_4::syntax._SymbolType 1) used_mask_5, nr_of_lifted_vars_5_6::I = <{StdInt.-_7}> fun_arity_5_0 (StdList.length_47 types_from_outer_fun_5_5), _x_5_7 = trans.get_types_of_local_vars (StdList.take nr_of_lifted_vars_5_6 ro_fun_args_7) (select ti_5_1::trans._TransformInfo 5), _x_5_8 = trans.map_st_894 ro_fun_args_7 (select _x_5_7::_Tuple2 1), _x_5_9 = trans.determine_case_function_type fun_arity_5_0 (select _x_5_3::syntax._CaseType 1) (_predefined._Cons (select _x_5_3::syntax._CaseType 0) (<{StdList.++}> (select _x_5_7::_Tuple2 0) types_from_outer_fun_5_5)) (select _x_5_4::syntax._SymbolType 7) (update ti_5_1::trans._TransformInfo [5:select _x_5_8::_Tuple2 1,6:select _x_5_2::_Tuple2 1]), ti_5_10 = select _x_5_9::_Tuple3 2, fun_arity_5_11::I = <{StdInt.+_6}> fun_arity_5_0 1, var_id_5_12 = syntax._Ident "_x" Heap.nilPtr, _x_5_13 = trans.copy_513 (syntax.Case (update kees_1_0::syntax._Case [0:syntax.EE])) (trans._CopyInfo trans.SubstituteAciFreeVars) (trans._CopyState (select ti_5_10::trans._TransformInfo 5) (select ti_5_10::trans._TransformInfo 6) (general.Yes (select ti_5_10::trans._TransformInfo 7)) (select ti_5_10::trans._TransformInfo 10)), cs_5_14 = select _x_5_13::_Tuple2 1, _x_5_15 = Heap.newPtr syntax.VI_Empty (trans.remove_VI_Expression_values ro_fun_args_7 (select cs_5_14::trans._CopyState 0)), new_info_ptr_5_16 = select _x_5_15::_Tuple2 0, ti_type_heaps_5_17::I = select (select cs_5_14::trans._CopyState 2)::_Tuple1 0 in <{_Tuple2!3}> (syntax.App (syntax._App (update ro_fun_6::syntax._SymbIdent [1:syntax.SK_GeneratedFunction fun_info_ptr_4_0 fun_index_0]) (_predefined._Cons old_case_expr_2_0 (trans.free_vars_to_bound_vars ro_fun_args_7)) Heap.nilPtr)) (update ti_5_10::trans._TransformInfo [3:_predefined._Cons fun_info_ptr_4_0 (select ti_5_10::trans._TransformInfo 3),4:Heap.writePtr fun_info_ptr_4_0 (syntax.FI_Function (syntax._GeneratedFunction (syntax._FunDef (select ro_fun_6::syntax._SymbIdent 0) fun_arity_5_11 scanner.NoPrio (syntax.TransformedBody (syntax._TransformedBody (_predefined._Cons (syntax._FreeVar -1 var_id_5_12 new_info_ptr_5_16 0) (select _x_5_8::_Tuple2 0)) (syntax.Case (update (select (select _x_5_13::_Tuple2 0)::_Tuple1 0)::syntax._Case [0:syntax.Var (syntax._BoundVar var_id_5_12 new_info_ptr_5_16 Heap.nilPtr)])))) (general.Yes (select _x_5_9::_Tuple3 0)) syntax.NoPos (syntax.FK_Function False) -1 (syntax._FunInfo _predefined._Nil (select (select outer_fun_def_3::syntax._FunDef 8)::syntax._FunInfo 1) -1 _predefined._Nil _predefined._Nil _predefined._Nil (StdInt.bitand (select (select outer_fun_def_3::syntax._FunDef 8)::syntax._FunInfo 6) 63))) syntax.II_Empty (syntax._ConsClasses fun_arity_5_11 (_predefined._Cons -4 (<{StdList.++}> (StdList.repeatn nr_of_lifted_vars_5_6 -3) (<{trans.c;1081;89_182}> (select outer_cons_args_4::syntax._ConsClasses 1) used_mask_5))) (_SystemStrictLists._cons_uts_41 True (trans.repeatn_append__896 nr_of_lifted_vars_5_6 False (<{trans.c;1082;98_898}> (select outer_cons_args_4::syntax._ConsClasses 2) used_mask_5))) False) fun_index_0)) (select ti_5_10::trans._TransformInfo 4),5:select _x_5_15::_Tuple2 1,6:select cs_5_14::trans._CopyState 1,7:update ti_type_heaps_5_17::syntax._TypeHeaps [0:trans.remove_TVI_Type_values (select _x_5_9::_Tuple3 1) (select ti_type_heaps_5_17::syntax._TypeHeaps 0)],10:select cs_5_14::trans._CopyState 3])) ) ) ) 
<{trans.c;914;39_173}> !g_l_0 = <{trans.g_c1;914;55_1273}> g_l_0
<{trans.g_c1;914;55_1273}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;914;55_1272}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;914;55_1272}> !g_h_0 g_t_1 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons fv_info_ptr_1_2 (<{trans.c;914;39_173}> g_t_1)) (_ -> <{trans.c;914;39_173}> g_t_1)
<{trans.c;915;43_174}> !g_l_0 = <{trans.g_c1;915;60_1275}> g_l_0
<{trans.g_c1;915;60_1275}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;915;60_1274}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;915;60_1274}> !g_h_0 g_t_1 = case g_h_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> _predefined._Cons var_info_ptr_1_1 (<{trans.c;915;43_174}> g_t_1)) (_ -> <{trans.c;915;43_174}> g_t_1)
<{trans.c;916;60_175}> free_var_info_ptrs_0 !g_l_1 = <{trans.g_c1;916;76_1277}> g_l_1 free_var_info_ptrs_0
<{trans.g_c1;916;76_1277}> !g_l_0 free_var_info_ptrs_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;916;76_1276}> g_h_1_0 free_var_info_ptrs_1 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;916;76_1276}> !g_h_0 free_var_info_ptrs_1 g_t_2 = case g_h_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> _predefined._Cons (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{Heap.==_10}>)) fv_info_ptr_1_2 free_var_info_ptrs_1) (<{trans.c;916;60_175}> free_var_info_ptrs_1 g_t_2)) (_ -> <{trans.c;916;60_175}> free_var_info_ptrs_1 g_t_2)
<{trans.c;917;86_176}> !g_l_0 g_l_1 = <{trans.g_c1;917;68_1279}> g_l_0 g_l_1
<{trans.g_c1;917;68_1279}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons outer_argument_1_0 g_t_1_1 -> <{trans.g_c1;917;92_1278}> g_l_1 outer_argument_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;917;92_1278}> !g_l_0 outer_argument_1 g_t_2 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _predefined._Cons outer_argument_1 (<{trans.c;917;86_176}> g_t_2 g_t_1_1)) (False -> <{trans.c;917;86_176}> g_t_2 g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;920;29_177}> outer_info_ptrs_0 !g_l_1 = <{trans.g_c1;920;58_1281}> g_l_1 outer_info_ptrs_0
<{trans.g_c1;920;58_1281}> !g_l_0 outer_info_ptrs_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;920;58_1280}> g_h_1_0 outer_info_ptrs_1 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;920;58_1280}> !g_h_0 !outer_info_ptrs_1 g_t_2 = case g_h_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> case (StdBool.not (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{Heap.==_10}>)) var_info_ptr_1_1 outer_info_ptrs_1)) (True -> _predefined._Cons (syntax._FreeVar -1 var_ident_1_0 var_info_ptr_1_1 -1) (<{trans.c;920;29_177}> outer_info_ptrs_1 g_t_2)) ) (_ -> <{trans.c;920;29_177}> outer_info_ptrs_1 g_t_2)
trans.repeatn_append__561 !_vList_0 !_x_1::I _x_2 l_3 = case _x_1 (0 -> l_3) (_ -> select _vList_0::<{_SystemStrictLists.List;}> 0 _x_2 (trans.repeatn_append__561 _vList_0 (<{StdInt.-_7}> _x_1 StdInt.one_11) _x_2 l_3))
trans.map_st_560 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = trans.map_st_560 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
<{trans.c;959;77_178}> !g_l_0 g_l_1 = <{trans.g_c1;959;66_1283}> g_l_0 g_l_1
<{trans.g_c1;959;66_1283}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons st_arg_1_0 g_t_1_1 -> <{trans.g_c1;959;84_1282}> g_l_1 st_arg_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;959;84_1282}> !g_l_0 st_arg_1 g_t_2 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _predefined._Cons st_arg_1 (<{trans.c;959;77_178}> g_t_2 g_t_1_1)) (False -> <{trans.c;959;77_178}> g_t_2 g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;1001;89_179}> !g_l_0 g_l_1 = <{trans.g_c1;1001;62_1285}> g_l_0 g_l_1
<{trans.g_c1;1001;62_1285}> !g_l_0 g_l_1 = case g_l_0 (_predefined._Cons cons_arg_1_0 g_t_1_1 -> <{trans.g_c1;1001;96_1284}> g_l_1 cons_arg_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;1001;96_1284}> !g_l_0 cons_arg_1 g_t_2 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _predefined._Cons cons_arg_1 (<{trans.c;1001;89_179}> g_t_2 g_t_1_1)) (False -> <{trans.c;1001;89_179}> g_t_2 g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;1002;98_180}> !_vUTSList_0 !_vList_1 !g_l_2 g_l_3 = <{trans.g_c1;1002;63_1287}> g_l_2 g_l_3 _vUTSList_0 _vList_1
<{trans.g_c1;1002;63_1287}> !g_l_0 g_l_1 _vUTSList_2 _vList_3 = case g_l_0 (<{_predefined._|Cons}> cons_arg_1_0 g_t_1_1 -> <{trans.g_c1;1002;105_1286}> g_l_1 _vUTSList_2 cons_arg_1_0 _vList_3 g_t_1_1) (_ -> _SystemStrictLists._nil_uts _vUTSList_2)
<{trans.g_c1;1002;105_1286}> !g_l_0 _vUTSList_1 cons_arg_2 _vList_3 g_t_4 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> select _vUTSList_1::<{_SystemStrictLists.UTSList;}> 0 cons_arg_2 (<{trans.c;1002;98_180}> _vUTSList_1 _vList_3 g_t_4 g_t_1_1)) (False -> <{trans.c;1002;98_180}> _vUTSList_1 _vList_3 g_t_4 g_t_1_1) ) (_ -> _SystemStrictLists._nil_uts _vUTSList_1)
trans.map_st_900 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.bind_to_fresh_expr_var x_1_0 s_1, _x_2_2 = trans.map_st_900 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
<{trans.c;1002;98_901}> !_vList_0 !g_l_1 g_l_2 = <{trans.g_c1;1002;63_1289}> g_l_1 g_l_2 _vList_0
<{trans.g_c1;1002;63_1289}> !g_l_0 g_l_1 _vList_2 = case g_l_0 (<{_predefined._|Cons}> cons_arg_1_0 g_t_1_1 -> <{trans.g_c1;1002;105_1288}> g_l_1 cons_arg_1_0 _vList_2 g_t_1_1) (_ -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))
<{trans.g_c1;1002;105_1288}> !g_l_0 cons_arg_1::B _vList_2 g_t_3 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _SystemStrictLists._cons_uts_41 cons_arg_1 (<{trans.c;1002;98_901}> _vList_2 g_t_3 g_t_1_1)) (False -> <{trans.c;1002;98_901}> _vList_2 g_t_3 g_t_1_1) ) (_ -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))
trans.repeatn_append__902 !_x_0::I _x_1::B !l_2 = case _x_0 (0 -> l_2) (_ -> _SystemStrictLists._cons_uts_41 _x_1 (trans.repeatn_append__902 (<{StdInt.-_7}> _x_0 StdInt.one_11) _x_1 l_2))
<{trans.c;1002;98_903}> !g_l_0 g_l_1 = <{trans.g_c1;1002;63_1291}> g_l_0 g_l_1
<{trans.g_c1;1002;63_1291}> !g_l_0 g_l_1 = case g_l_0 (<{_predefined._|Cons}> cons_arg_1_0 g_t_1_1 -> <{trans.g_c1;1002;105_1290}> g_l_1 cons_arg_1_0 g_t_1_1) (_ -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))
<{trans.g_c1;1002;105_1290}> !g_l_0 cons_arg_1::B g_t_2 = case g_l_0 (_predefined._Cons used_1_0 g_t_1_1 -> case used_1_0 (True -> _SystemStrictLists._cons_uts_41 cons_arg_1 (<{trans.c;1002;98_903}> g_t_2 g_t_1_1)) (False -> <{trans.c;1002;98_903}> g_t_2 g_t_1_1) ) (_ -> _SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42))
trans.generate_case_function !fun_index_0::I !case_info_ptr_1 !new_expr_2 outer_fun_def_3 outer_cons_args_4 used_mask_5 !_x_6 !ti_7 = case _x_6 (trans._ReadOnlyTI ro_imported_funs_1_0 ro_common_defs_1_1 ro_root_case_mode_1_2 _x_1_3 ro_main_dcl_module_n_1_4 ro_transform_fusion_1_5 ro_StdStrictLists_module_n_1_6 ro_StdGeneric_module_n_1_7 -> case _x_1_3 (trans._TransformFunctionInfo tfi_root_2_0 tfi_fun_2_1 tfi_args_2_2 tfi_vars_2_3 tfi_orig_2_4 tfi_n_args_before_producer_2_5 tfi_n_producer_args_2_6 -> case tfi_fun_2_1 (syntax._SymbIdent symb_ident_3_0 symb_kind_3_1 -> case symb_kind_3_1 (syntax.SK_GeneratedFunction fun_info_ptr_4_0 _x_4_1 -> let fun_arity_5_0 = StdList.length_47 tfi_args_2_2, ti_5_1 = trans.arity_warning_899 "generate_case_function" (select tfi_fun_2_1::syntax._SymbIdent 0) fun_index_0 fun_arity_5_0 ti_7, _x_5_2 = trans.readExprInfo case_info_ptr_1 (select ti_5_1::trans._TransformInfo 6), _x_5_3 = select (select outer_fun_def_3::syntax._FunDef 4)::_Tuple1 0, types_from_outer_fun_5_4 = <{trans.c;959;77_178}> (select _x_5_3::syntax._SymbolType 1) used_mask_5, nr_of_lifted_vars_5_5 = <{StdInt.-_7}> fun_arity_5_0 (StdList.length_47 types_from_outer_fun_5_4), _x_5_6 = trans.get_types_of_local_vars (StdList.take nr_of_lifted_vars_5_5 tfi_args_2_2) (select ti_5_1::trans._TransformInfo 5), _x_5_7::I = trans.map_st_900 tfi_args_2_2 (select _x_5_6::_Tuple2 1), _x_5_8 = trans.determine_case_function_type fun_arity_5_0 (select (select (select _x_5_2::_Tuple2 0)::_Tuple1 0)::syntax._CaseType 1) (<{StdList.++}> (select _x_5_6::_Tuple2 0) types_from_outer_fun_5_4) (select _x_5_3::syntax._SymbolType 7) (update ti_5_1::trans._TransformInfo [5:select _x_5_7::_Tuple2 1,6:select _x_5_2::_Tuple2 1]), ti_5_9 = select _x_5_8::_Tuple3 2, _x_5_10 = trans.copy_513 new_expr_2 (trans._CopyInfo trans.SubstituteAciFreeVars) (trans._CopyState (select ti_5_9::trans._TransformInfo 5) (select ti_5_9::trans._TransformInfo 6) (general.Yes (select ti_5_9::trans._TransformInfo 7)) (select ti_5_9::trans._TransformInfo 10)), cs_5_11 = select _x_5_10::_Tuple2 1, ti_type_heaps_5_12::I = select (select cs_5_11::trans._CopyState 2)::_Tuple1 0 in <{_Tuple2!3}> (syntax.App (syntax._App (update tfi_fun_2_1::syntax._SymbIdent [1:syntax.SK_GeneratedFunction fun_info_ptr_4_0 fun_index_0]) (trans.free_vars_to_bound_vars tfi_args_2_2) Heap.nilPtr)) (update ti_5_9::trans._TransformInfo [4:Heap.writePtr fun_info_ptr_4_0 (syntax.FI_Function (syntax._GeneratedFunction (syntax._FunDef (select tfi_fun_2_1::syntax._SymbIdent 0) fun_arity_5_0 scanner.NoPrio (syntax.TransformedBody (syntax._TransformedBody (select _x_5_7::_Tuple2 0) (select _x_5_10::_Tuple2 0))) (general.Yes (select _x_5_8::_Tuple3 0)) syntax.NoPos (syntax.FK_Function False) -1 (syntax._FunInfo _predefined._Nil (select (select outer_fun_def_3::syntax._FunDef 8)::syntax._FunInfo 1) -1 _predefined._Nil _predefined._Nil _predefined._Nil (StdInt.bitand (select (select outer_fun_def_3::syntax._FunDef 8)::syntax._FunInfo 6) 63))) syntax.II_Empty (syntax._ConsClasses fun_arity_5_0 (<{StdList.++}> (StdList.repeatn nr_of_lifted_vars_5_5 -3) (<{trans.c;1001;89_179}> (select outer_cons_args_4::syntax._ConsClasses 1) used_mask_5)) (trans.repeatn_append__902 nr_of_lifted_vars_5_5 False (<{trans.c;1002;98_903}> (select outer_cons_args_4::syntax._ConsClasses 2) used_mask_5)) False) fun_index_0)) (select ti_5_9::trans._TransformInfo 4),5:trans.remove_VI_Expression_values tfi_args_2_2 (select cs_5_11::trans._CopyState 0),6:select cs_5_11::trans._CopyState 1,7:update ti_type_heaps_5_12::syntax._TypeHeaps [0:trans.remove_TVI_Type_values (select _x_5_8::_Tuple3 1) (select ti_type_heaps_5_12::syntax._TypeHeaps 0)],10:select cs_5_11::trans._CopyState 3])) ) ) ) 
trans.fold_st_636 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_636 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.clearVariables_483 !_vclearVariables_0 !list_1 !fvi_2 = trans.fold_st_636 (select _vclearVariables_0::<{trans.clearVariables;}> 0) list_1 fvi_2
trans.clearVariables_485 !_vclearVariables_0 !_x_1 !fvi_2 = case _x_1 (general._Bind bind_src_1_0 bind_dst_1_1 -> select _vclearVariables_0::<{trans.clearVariables;}> 0 bind_src_1_0 fvi_2) 
trans.clearVariables_486 !_vclearVariables_0 !_x_1 !fvi_2 = case _x_1 (general.Yes x_1_0 -> select _vclearVariables_0::<{trans.clearVariables;}> 0 x_1_0 fvi_2) (general.No -> fvi_2) 
trans.clearVariables_487 !bound_var_0 !var_heap_1 = case bound_var_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> let _x_2_0 = trans.readVarInfo var_info_ptr_1_1 var_heap_1, var_heap_2_1 = select _x_2_0::_Tuple2 1 in <{trans._c;4412;11_1292}> (select _x_2_0::_Tuple2 0) var_info_ptr_1_1 var_heap_2_1) 
<{trans._c;4412;11_1292}> !_x_0 var_info_ptr_1 !var_heap_2 = case _x_0 (syntax.VI_UsedVar _x_1_0 -> trans.writeVarInfo var_info_ptr_1 syntax.VI_Empty var_heap_2) (syntax.VI_LocalVar -> trans.writeVarInfo var_info_ptr_1 syntax.VI_Empty var_heap_2) (syntax.VI_Empty -> var_heap_2) (syntax.VI_Expression _x_1_0 -> trans.writeVarInfo var_info_ptr_1 syntax.VI_Empty var_heap_2) (syntax.VI_Dictionary _x_1_0 _x_1_1 _x_1_2 -> trans.writeVarInfo var_info_ptr_1 syntax.VI_Empty var_heap_2) (syntax.VI_Variable _x_1_0 _x_1_1 -> trans.writeVarInfo var_info_ptr_1 syntax.VI_Empty var_heap_2) (syntax.VI_AccVar _x_1_0 _x_1_1 -> trans.writeVarInfo var_info_ptr_1 syntax.VI_Empty var_heap_2) (syntax.VI_ExpressionOrBody _x_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 _x_1_5 -> trans.writeVarInfo var_info_ptr_1 syntax.VI_Empty var_heap_2) (syntax.VI_Body _x_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 -> trans.writeVarInfo var_info_ptr_1 syntax.VI_Empty var_heap_2) 
trans.fold_st_639 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_639 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_638 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_638 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_637 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_637 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_905 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_905 x_1_1 (trans.clearVariables_488 a_1_0 st_1)) 
trans.clearVariables_904 !list_0 !fvi_1 = trans.fold_st_905 list_0 fvi_1
trans.clearVariables_484 !_x_0 !fvi_1 = case _x_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.clearVariables_488 lb_src_1_1 fvi_1) 
trans.fold_st_907 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_907 x_1_1 (trans.clearVariables_484 a_1_0 st_1)) 
trans.clearVariables_906 !list_0 !fvi_1 = trans.fold_st_907 list_0 fvi_1
trans.clearVariables_908 !_x_0 !fvi_1 = case _x_0 (general.Yes x_1_0 -> trans.clearVariables_488 x_1_0 fvi_1) (general.No -> fvi_1) 
trans.fold_st_914 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_914 x_1_1 (trans.clearVariables_491 a_1_0 st_1)) 
trans.clearVariables_490 !_x_0 !fvi_1 = case _x_0 (syntax._BasicPattern bp_value_1_0 bp_expr_1_1 bp_position_1_2 -> trans.clearVariables_488 bp_expr_1_1 fvi_1) 
trans.fold_st_915 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_915 x_1_1 (trans.clearVariables_490 a_1_0 st_1)) 
trans.clearVariables_491 !_x_0 !fvi_1 = case _x_0 (syntax._AlgebraicPattern ap_symbol_1_0 ap_vars_1_1 ap_expr_1_2 ap_position_1_3 -> trans.clearVariables_488 ap_expr_1_2 fvi_1) 
trans.fold_st_916 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_916 x_1_1 (trans.clearVariables_491 a_1_0 st_1)) 
trans.clearVariables_489 !_x_0 !fvi_1 = case _x_0 (syntax.AlgebraicPatterns _x_1_0 alg_patterns_1_1 -> trans.fold_st_914 alg_patterns_1_1 fvi_1) (syntax.BasicPatterns _x_1_0 basic_patterns_1_1 -> trans.fold_st_915 basic_patterns_1_1 fvi_1) (syntax.OverloadedListPatterns _x_1_0 _x_1_1 alg_patterns_1_2 -> trans.fold_st_916 alg_patterns_1_2 fvi_1) 
trans.clearVariables_492 !_x_0 !fvi_1 = case _x_0 (syntax.RecordSelection _x_1_0 _x_1_1 -> fvi_1) (syntax.ArraySelection _x_1_0 _x_1_1 expr_1_2 -> trans.clearVariables_488 expr_1_2 fvi_1) (syntax.DictionarySelection dict_var_1_0 selections_1_1 _x_1_2 expr_1_3 -> trans.clearVariables_487 dict_var_1_0 (trans.clearVariables_909 selections_1_1 (trans.clearVariables_488 expr_1_3 fvi_1))) 
trans.fold_st_910 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_910 x_1_1 (trans.clearVariables_492 a_1_0 st_1)) 
trans.clearVariables_909 !list_0 !fvi_1 = trans.fold_st_910 list_0 fvi_1
trans.clearVariables_911 !_x_0 !fvi_1 = case _x_0 (general._Bind bind_src_1_0 bind_dst_1_1 -> trans.clearVariables_488 bind_src_1_0 fvi_1) 
trans.fold_st_913 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_913 x_1_1 (trans.clearVariables_911 a_1_0 st_1)) 
trans.clearVariables_912 !list_0 !fvi_1 = trans.fold_st_913 list_0 fvi_1
trans.clearVariables_488 !_x_0 !fvi_1 = case _x_0 (syntax.Var var_1_0 -> trans.clearVariables_487 var_1_0 fvi_1) (syntax.App _x_1_0 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> trans.clearVariables_904 app_args_2_1 fvi_1) ) (<{syntax.@}> fun_1_0 args_1_1 -> trans.clearVariables_904 args_1_1 (trans.clearVariables_488 fun_1_0 fvi_1)) (syntax.Let _x_1_0 -> case _x_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> trans.clearVariables_488 let_expr_2_2 (trans.clearVariables_906 let_lazy_binds_2_1 (trans.clearVariables_906 let_strict_binds_2_0 fvi_1))) ) (syntax.Case _x_1_0 -> case _x_1_0 (syntax._Case case_expr_2_0 case_guards_2_1 case_default_2_2 case_ident_2_3 case_info_ptr_2_4 case_explicit_2_5 case_default_pos_2_6 -> trans.clearVariables_908 case_default_2_2 (trans.clearVariables_489 case_guards_2_1 (trans.clearVariables_488 case_expr_2_0 fvi_1))) ) (syntax.Selection _x_1_0 expr_1_1 selectors_1_2 -> trans.clearVariables_488 expr_1_1 (trans.clearVariables_909 selectors_1_2 fvi_1)) (syntax.Update expr1_1_0 selectors_1_1 expr2_1_2 -> trans.clearVariables_488 expr2_1_2 (trans.clearVariables_909 selectors_1_1 (trans.clearVariables_488 expr1_1_0 fvi_1))) (syntax.RecordUpdate cons_symbol_1_0 expression_1_1 expressions_1_2 -> trans.clearVariables_488 expression_1_1 (trans.clearVariables_912 expressions_1_2 fvi_1)) (syntax.TupleSelect _x_1_0 arg_nr_1_1 expr_1_2 -> trans.clearVariables_488 expr_1_2 fvi_1) (syntax.MatchExpr _x_1_0 expr_1_1 -> trans.clearVariables_488 expr_1_1 fvi_1) (syntax.IsConstructor expr_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 _x_1_5 -> trans.clearVariables_488 expr_1_0 fvi_1) (syntax.EE -> fvi_1) (_ -> fvi_1)
trans.fold_st_630 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_630 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.remove_variable_393 !v_0 !_x_1 = case v_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> case _x_1 (_Tuple2 removed_variables_2_0 var_heap_2_1 -> let _x_3_0 = trans.readVarInfo var_info_ptr_1_1 var_heap_2_1 in _Tuple2 (_predefined._Cons (_Tuple2 v_0 (select (select _x_3_0::_Tuple2 0)::_Tuple1 0)) removed_variables_2_0) (trans.writeVarInfo var_info_ptr_1_1 syntax.VI_Empty (select _x_3_0::_Tuple2 1))) ) 
trans.fold_st_917 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_917 x_1_1 (trans.remove_variable_393 a_1_0 st_1)) 
trans.removeVariables !global_variables_0 var_heap_1 = trans.fold_st_917 global_variables_0 (_Tuple2 _predefined._Nil var_heap_1)
<{trans.c;4546;72_428}> !g_l_0 = <{trans.g_c1;4546;84_1294}> g_l_0
<{trans.g_c1;4546;84_1294}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{trans.g_c2;4546;84_1293}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c2;4546;84_1293}> !g_h_0 g_t_1 = case g_h_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> _predefined._Cons lb_dst_1_0 (<{trans.c;4546;72_428}> g_t_1)) (_ -> <{trans.c;4546;72_428}> g_t_1)
trans.fold_st_634 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_634 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_633 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_633 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.mark_local_var_396 !_x_0 !var_heap_1 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> trans.writeVarInfo fv_info_ptr_1_2 syntax.VI_LocalVar var_heap_1) 
trans.filter_local_var_397 !v_0 !_x_1 = case v_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> case _x_1 (_Tuple2 global_vars_2_0 var_heap_2_1 -> let _x_3_0 = trans.readVarInfo var_info_ptr_1_1 var_heap_2_1, var_heap_3_1 = select _x_3_0::_Tuple2 1 in <{trans._c;4644;11_1295}> (select _x_3_0::_Tuple2 0) global_vars_2_0 var_heap_3_1 v_0) ) 
<{trans._c;4644;11_1295}> !_x_0 global_vars_1 var_heap_2 v_3 = case _x_0 (syntax.VI_LocalVar -> _Tuple2 global_vars_1 var_heap_2) (_ -> _Tuple2 (_predefined._Cons v_3 global_vars_1) var_heap_2)
trans.fold_st_918 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_918 x_1_1 (trans.mark_local_var_396 a_1_0 st_1)) 
trans.fold_st_919 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_919 x_1_1 (trans.filter_local_var_397 a_1_0 st_1)) 
trans.removeLocalVariables local_variables_0 !all_variables_1 global_variables_2 var_heap_3 = trans.fold_st_919 all_variables_1 (_Tuple2 global_variables_2 (trans.fold_st_918 local_variables_0 var_heap_3))
trans.fold_st_632 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_632 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.determine_global_variable_395 !_x_0 !_x_1 = case _x_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> case _x_1 (_Tuple2 global_variables_2_0 var_heap_2_1 -> let _x_3_0 = trans.readVarInfo var_info_ptr_1_1 var_heap_2_1 in _Tuple2 (_predefined._Cons (syntax._BoundVar (select (select _x_3_0::_Tuple2 0)::_Tuple1 0) var_info_ptr_1_1 Heap.nilPtr) global_variables_2_0) (select _x_3_0::_Tuple2 1)) ) 
trans.fold_st_920 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_920 x_1_1 (trans.determine_global_variable_395 a_1_0 st_1)) 
trans.determineGlobalVariables !global_variables_0 var_heap_1 = trans.fold_st_920 global_variables_0 (_Tuple2 _predefined._Nil var_heap_1)
trans.fold_st_631 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_631 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.restore_variable_394 !_x_0 !_x_1 = case _x_0 (_Tuple2 v_1_0 var_id_1_1 -> case v_1_0 (syntax._BoundVar var_ident_2_0 var_info_ptr_2_1 var_expr_ptr_2_2 -> case _x_1 (_Tuple2 restored_variables_3_0 var_heap_3_1 -> let _x_4_0 = trans.readVarInfo var_info_ptr_2_1 var_heap_3_1, var_heap_4_1 = select _x_4_0::_Tuple2 1 in <{trans._c;4622;11_1296}> (select _x_4_0::_Tuple2 0) restored_variables_3_0 var_heap_4_1 v_1_0 var_info_ptr_2_1 var_id_1_1) ) ) 
<{trans._c;4622;11_1296}> !_x_0 restored_variables_1 var_heap_2 v_3 var_info_ptr_4 var_id_5 = case _x_0 (syntax.VI_UsedVar _x_1_0 -> _Tuple2 restored_variables_1 var_heap_2) (_ -> _Tuple2 (_predefined._Cons v_3 restored_variables_1) (trans.writeVarInfo var_info_ptr_4 (syntax.VI_UsedVar var_id_5) var_heap_2))
trans.fold_st_921 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_921 x_1_1 (trans.restore_variable_394 a_1_0 st_1)) 
trans.restoreVariables !removed_variables_0 global_variables_1 var_heap_2 = trans.fold_st_921 removed_variables_0 (_Tuple2 global_variables_1 var_heap_2)
trans.fold_st_643 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_643 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_642 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_642 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.fold_st_641 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_641 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.anon_115 !unbound_variables_0 !aci_1 = update aci_1::syntax._ActiveCaseInfo [2:general.Yes unbound_variables_0]
trans.set_aci_free_vars_info_case unbound_variables_0 !case_info_ptr_1 !expr_heap_2 = trans.app_EEI_ActiveCase (trans.anon_115 unbound_variables_0) case_info_ptr_1 expr_heap_2
trans.freeVariables_496 !_vfreeVariables_0 !_x_1 !fvi_2 = case _x_1 (general.Yes x_1_0 -> select _vfreeVariables_0::<{trans.freeVariables;}> 0 x_1_0 fvi_2) (general.No -> fvi_2) 
trans.fold_st_640 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_640 op_0 x_1_1 (op_0 a_1_0 st_2)) 
trans.freeVariables_493 !_vfreeVariables_0 !list_1 !fvi_2 = trans.fold_st_640 (select _vfreeVariables_0::<{trans.freeVariables;}> 0) list_1 fvi_2
trans.freeVariables_495 !_vfreeVariables_0 !_x_1 !fvi_2 = case _x_1 (general._Bind bind_src_1_0 bind_dst_1_1 -> select _vfreeVariables_0::<{trans.freeVariables;}> 0 bind_src_1_0 fvi_2) 
trans.adjust_var_info_427 var_info_ptr_0 _x_1 !_x_2 fvi_variables_3 fvi_var_heap_4 = case _x_2 (syntax.VI_UsedVar _x_1_0 -> _Tuple2 fvi_variables_3 fvi_var_heap_4) (_ -> case _x_1 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> _Tuple2 (_predefined._Cons _x_1 fvi_variables_3) (trans.writeVarInfo var_info_ptr_0 (syntax.VI_UsedVar var_ident_1_0) fvi_var_heap_4)) )
trans.freeVariables_497 !bound_var_0 !fvi_1 = case bound_var_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> case fvi_1 (trans._FreeVarInfo fvi_var_heap_2_0 fvi_expr_heap_2_1 fvi_variables_2_2 fvi_expr_ptrs_2_3 -> let _x_3_0 = trans.readVarInfo var_info_ptr_1_1 fvi_var_heap_2_0, _x_3_1 = trans.adjust_var_info_427 var_info_ptr_1_1 bound_var_0 (select _x_3_0::_Tuple2 0) fvi_variables_2_2 (select _x_3_0::_Tuple2 1) in update fvi_1::trans._FreeVarInfo [0:select _x_3_1::_Tuple2 1,2:select _x_3_1::_Tuple2 0]) ) 
trans.fold_st_923 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_923 x_1_1 (trans.freeVariables_498 a_1_0 st_1)) 
trans.freeVariables_922 !list_0 !fvi_1 = trans.fold_st_923 list_0 fvi_1
trans.freeVariables_494 !_x_0 !fvi_1 = case _x_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> trans.freeVariables_498 lb_src_1_1 fvi_1) 
trans.fold_st_925 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_925 x_1_1 (trans.freeVariables_494 a_1_0 st_1)) 
trans.freeVariables_924 !list_0 !fvi_1 = trans.fold_st_925 list_0 fvi_1
trans.freeVariables_931 !_x_0 !fvi_1 = case _x_0 (general.Yes x_1_0 -> trans.freeVariables_498 x_1_0 fvi_1) (general.No -> fvi_1) 
trans.fold_st_932 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_932 x_1_1 (trans.free_variables_of_alg_pattern_431 a_1_0 st_1)) 
trans.free_variables_of_basic_pattern_429 !_x_0 !fvi_1 = case _x_0 (syntax._BasicPattern bp_value_1_0 bp_expr_1_1 bp_position_1_2 -> trans.freeVariables_498 bp_expr_1_1 fvi_1) 
trans.fold_st_933 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_933 x_1_1 (trans.free_variables_of_basic_pattern_429 a_1_0 st_1)) 
trans.free_variables_of_alg_pattern_431 !_x_0 !fvi_1 = case _x_0 (syntax._AlgebraicPattern ap_symbol_1_0 ap_vars_1_1 ap_expr_1_2 ap_position_1_3 -> case fvi_1 (trans._FreeVarInfo fvi_var_heap_2_0 fvi_expr_heap_2_1 fvi_variables_2_2 fvi_expr_ptrs_2_3 -> let fvi_3_0 = trans.freeVariables_498 ap_expr_1_2 (update fvi_1::trans._FreeVarInfo [2:_predefined._Nil]), _x_3_1 = trans.removeLocalVariables ap_vars_1_1 (select fvi_3_0::trans._FreeVarInfo 2) fvi_variables_2_2 (select fvi_3_0::trans._FreeVarInfo 0) in update fvi_3_0::trans._FreeVarInfo [0:select _x_3_1::_Tuple2 1,2:select _x_3_1::_Tuple2 0]) ) 
trans.fold_st_934 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_934 x_1_1 (trans.free_variables_of_alg_pattern_431 a_1_0 st_1)) 
trans.free_variables_of_guards_430 !_x_0 !fvi_1 = case _x_0 (syntax.AlgebraicPatterns _x_1_0 alg_patterns_1_1 -> trans.fold_st_932 alg_patterns_1_1 fvi_1) (syntax.BasicPatterns _x_1_0 basic_patterns_1_1 -> trans.fold_st_933 basic_patterns_1_1 fvi_1) (syntax.OverloadedListPatterns _x_1_0 _x_1_1 alg_patterns_1_2 -> trans.fold_st_934 alg_patterns_1_2 fvi_1) 
trans.freeVariablesOfCase_432 !_x_0 !fvi_1 = case _x_0 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> case fvi_1 (trans._FreeVarInfo fvi_var_heap_2_0 fvi_expr_heap_2_1 fvi_variables_2_2 fvi_expr_ptrs_2_3 -> let _x_3_0 = trans.removeVariables fvi_variables_2_2 fvi_var_heap_2_0, fvi_3_1 = trans.free_variables_of_guards_430 case_guards_1_1 (update fvi_1::trans._FreeVarInfo [0:select _x_3_0::_Tuple2 1,2:_predefined._Nil]), _x_3_2 = trans.freeVariables_931 case_default_1_2 fvi_3_1, fvi_variables_3_3 = select _x_3_2::trans._FreeVarInfo 2, _x_3_4 = trans.determineGlobalVariables fvi_variables_3_3 (select _x_3_2::trans._FreeVarInfo 0), _x_3_5 = trans.restoreVariables (select _x_3_0::_Tuple2 0) fvi_variables_3_3 (select _x_3_4::_Tuple2 1) in trans.freeVariables_498 case_expr_1_0 (update fvi_3_1::trans._FreeVarInfo [0:select _x_3_5::_Tuple2 1,1:trans.set_aci_free_vars_info_case (select _x_3_4::_Tuple2 0) case_info_ptr_1_4 (select (Heap.readPtr case_info_ptr_1_4 (select _x_3_2::trans._FreeVarInfo 1))::_Tuple2 1),2:select _x_3_5::_Tuple2 0,3:_predefined._Cons case_info_ptr_1_4 (select _x_3_2::trans._FreeVarInfo 3)])) ) 
trans.freeVariables_499 !_x_0 !fvi_1 = case _x_0 (syntax.RecordSelection _x_1_0 _x_1_1 -> fvi_1) (syntax.ArraySelection _x_1_0 _x_1_1 expr_1_2 -> trans.freeVariables_498 expr_1_2 fvi_1) (syntax.DictionarySelection dict_var_1_0 selections_1_1 _x_1_2 expr_1_3 -> trans.freeVariables_497 dict_var_1_0 (trans.freeVariables_926 selections_1_1 (trans.freeVariables_498 expr_1_3 fvi_1))) 
trans.fold_st_927 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_927 x_1_1 (trans.freeVariables_499 a_1_0 st_1)) 
trans.freeVariables_926 !list_0 !fvi_1 = trans.fold_st_927 list_0 fvi_1
trans.freeVariables_928 !_x_0 !fvi_1 = case _x_0 (general._Bind bind_src_1_0 bind_dst_1_1 -> trans.freeVariables_498 bind_src_1_0 fvi_1) 
trans.fold_st_930 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_930 x_1_1 (trans.freeVariables_928 a_1_0 st_1)) 
trans.freeVariables_929 !list_0 !fvi_1 = trans.fold_st_930 list_0 fvi_1
trans.freeVariables_498 !_x_0 !fvi_1 = case _x_0 (syntax.Var var_1_0 -> trans.freeVariables_497 var_1_0 fvi_1) (syntax.App _x_1_0 -> case _x_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> trans.freeVariables_922 app_args_2_1 fvi_1) ) (<{syntax.@}> fun_1_0 args_1_1 -> trans.freeVariables_922 args_1_1 (trans.freeVariables_498 fun_1_0 fvi_1)) (syntax.Let _x_1_0 -> case _x_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> case fvi_1 (trans._FreeVarInfo fvi_var_heap_3_0 fvi_expr_heap_3_1 global_variables_3_2 fvi_expr_ptrs_3_3 -> let let_binds_4_0 = <{StdList.++}> let_strict_binds_2_0 let_lazy_binds_2_1, _x_4_1 = trans.removeVariables global_variables_3_2 (select fvi_1::trans._FreeVarInfo 0), fvi_4_2 = trans.freeVariables_924 let_binds_4_0 (update fvi_1::trans._FreeVarInfo [0:select _x_4_1::_Tuple2 1,2:_predefined._Nil]), _x_4_3 = trans.freeVariables_498 let_expr_2_2 fvi_4_2, _x_4_4 = trans.removeLocalVariables (<{trans.c;4546;72_428}> let_binds_4_0) (select _x_4_3::trans._FreeVarInfo 2) _predefined._Nil (select _x_4_3::trans._FreeVarInfo 0), fvi_variables_4_5 = select _x_4_4::_Tuple2 0, _x_4_6 = trans.restoreVariables (select _x_4_1::_Tuple2 0) fvi_variables_4_5 (select (trans.determineGlobalVariables fvi_variables_4_5 (select _x_4_4::_Tuple2 1))::_Tuple2 1) in update fvi_4_2::trans._FreeVarInfo [0:select _x_4_6::_Tuple2 1,1:select (Heap.readPtr let_info_ptr_2_3 (select _x_4_3::trans._FreeVarInfo 1))::_Tuple2 1,2:select _x_4_6::_Tuple2 0,3:_predefined._Cons let_info_ptr_2_3 (select _x_4_3::trans._FreeVarInfo 3)]) ) ) (syntax.Case kees_1_0 -> trans.freeVariablesOfCase_432 kees_1_0 fvi_1) (syntax.Selection _x_1_0 expr_1_1 selectors_1_2 -> trans.freeVariables_926 selectors_1_2 (trans.freeVariables_498 expr_1_1 fvi_1)) (syntax.Update expr1_1_0 selectors_1_1 expr2_1_2 -> trans.freeVariables_498 expr2_1_2 (trans.freeVariables_926 selectors_1_1 (trans.freeVariables_498 expr1_1_0 fvi_1))) (syntax.RecordUpdate cons_symbol_1_0 expression_1_1 expressions_1_2 -> trans.freeVariables_929 expressions_1_2 (trans.freeVariables_498 expression_1_1 fvi_1)) (syntax.TupleSelect _x_1_0 arg_nr_1_1 expr_1_2 -> trans.freeVariables_498 expr_1_2 fvi_1) (syntax.MatchExpr _x_1_0 expr_1_1 -> trans.freeVariables_498 expr_1_1 fvi_1) (syntax.IsConstructor expr_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 _x_1_5 -> trans.freeVariables_498 expr_1_0 fvi_1) (syntax.EE -> fvi_1) (_ -> fvi_1)
trans.anon_557 !f_0 g_1 x_2 = f_0 (g_1 x_2)
trans.anon_556 !f_0 g_1 x_2 = f_0 (g_1 x_2)
trans.anon_555 !f_0 g_1 x_2 = f_0 (g_1 x_2)
trans.anon_554 !f_0 g_1 x_2 = f_0 (g_1 x_2)
trans.anon_553 !f_0 g_1 x_2 = f_0 (g_1 x_2)
trans.anon_552 !f_0 g_1 x_2 = f_0 (g_1 x_2)
trans.anon_551 !f_0 g_1 x_2 = f_0 (g_1 x_2)
trans.anon_550 !f_0 g_1 x_2 = f_0 (g_1 x_2)
trans.anon_549 !f_0 g_1 x_2 = f_0 (g_1 x_2)
trans.is_never_matching_case_188::B !_x_0 = case _x_0 (syntax.Case _x_1_0 -> case _x_1_0 (syntax._Case case_expr_2_0 _x_2_1 _x_2_2 case_ident_2_3 case_info_ptr_2_4 case_explicit_2_5 case_default_pos_2_6 -> case _x_2_1 (syntax.NoPattern -> case _x_2_2 (general.No -> True) ) ) ) (_ -> False)
trans.get_filtered_default_185 !y_0 = case y_0 (general.Yes c_default_1_0 -> case (trans.is_never_matching_case_188 c_default_1_0) (True -> general.No) (False -> y_0) ) (_ -> y_0)
trans.is_never_matching_default_191::B !_x_0 = case _x_0 (general.No -> False) (general.Yes expr_1_0 -> trans.is_never_matching_case_188 expr_1_0) 
trans.get_alg_rhs_189 !_x_0 = case _x_0 (syntax._AlgebraicPattern ap_symbol_1_0 ap_vars_1_1 ap_expr_1_2 ap_position_1_3 -> ap_expr_1_2) 
trans.has_become_never_matching_186::B !_x_0 _x_1 = case _x_0 (general.No -> case _x_1 (_predefined._Nil -> True) ) (_ -> False)
trans.is_default_only_187::B !_x_0 _x_1 = case _x_0 (general.Yes _x_1_0 -> case _x_1 (_predefined._Nil -> True) ) (_ -> False)
trans.fromYes !_x_0 = case _x_0 (general.Yes x_1_0 -> x_1_0) 
trans.get_basic_rhs_190 !_x_0 = case _x_0 (syntax._BasicPattern bp_value_1_0 bp_expr_1_1 bp_position_1_2 -> bp_expr_1_1) 
trans.anon_942::B !g_0 x_1 = trans.is_never_matching_case_188 (g_0 x_1)
trans.anon_943::B !g_0 x_1 = StdBool.not (g_0 x_1)
trans.anon_941::B !g_0 x_1 = trans.is_never_matching_case_188 (g_0 x_1)
trans.anon_939::B !g_0 x_1 = trans.is_never_matching_case_188 (g_0 x_1)
trans.anon_940::B !g_0 x_1 = StdBool.not (g_0 x_1)
trans.anon_938::B !g_0 x_1 = trans.is_never_matching_case_188 (g_0 x_1)
trans.anon_936::B !g_0 x_1 = trans.is_never_matching_case_188 (g_0 x_1)
trans.anon_937::B !g_0 x_1 = StdBool.not (g_0 x_1)
trans.anon_935::B !g_0 x_1 = trans.is_never_matching_case_188 (g_0 x_1)
trans.anon_951::B !x_0 = trans.is_never_matching_case_188 (trans.get_alg_rhs_189 x_0)
trans.anon_952::B !x_0 = StdBool.not (trans.anon_951 x_0)
trans.anon_950::B !x_0 = trans.is_never_matching_case_188 (trans.get_alg_rhs_189 x_0)
trans.anon_948::B !x_0 = trans.is_never_matching_case_188 (trans.get_basic_rhs_190 x_0)
trans.anon_949::B !x_0 = StdBool.not (trans.anon_948 x_0)
trans.anon_947::B !x_0 = trans.is_never_matching_case_188 (trans.get_basic_rhs_190 x_0)
trans.anon_945::B !x_0 = trans.is_never_matching_case_188 (trans.get_alg_rhs_189 x_0)
trans.anon_946::B !x_0 = StdBool.not (trans.anon_945 x_0)
trans.anon_944::B !x_0 = trans.is_never_matching_case_188 (trans.get_alg_rhs_189 x_0)
trans.removeNeverMatchingSubcases !keesExpr_0 !ro_1 = case keesExpr_0 (syntax.Case kees_1_0 -> case (trans.is_never_matching_case_188 keesExpr_0) (True -> keesExpr_0) (False -> <{trans._c;1139;7_1300}> (select kees_1_0::syntax._Case 1) kees_1_0 keesExpr_0 ro_1) ) (_ -> keesExpr_0)
<{trans._c;1139;7_1300}> !_x_0 !kees_1 keesExpr_2 ro_3 = case _x_0 (syntax.AlgebraicPatterns i_1_0 alg_patterns_1_1 -> let case_default_2_0 = select kees_1::syntax._Case 2 in case (case (StdBool.not (StdList.any trans.anon_944 alg_patterns_1_1)) (True -> StdBool.not (trans.is_never_matching_default_191 case_default_2_0)) (False -> False) ) (True -> keesExpr_2) (False -> let filtered_default_4_0 = trans.get_filtered_default_185 case_default_2_0, filtered_case_guards_4_1 = StdList.filter trans.anon_946 alg_patterns_1_1 in case (trans.has_become_never_matching_186 filtered_default_4_0 filtered_case_guards_4_1) (True -> trans.neverMatchingCase (<{trans._c;1189;19_1297}> (select ro_3::trans._ReadOnlyTI 2) kees_1 ro_3)) (False -> case (trans.is_default_only_187 filtered_default_4_0 filtered_case_guards_4_1) (True -> trans.fromYes case_default_2_0) (False -> syntax.Case (update kees_1::syntax._Case [1:syntax.AlgebraicPatterns i_1_0 filtered_case_guards_4_1,2:filtered_default_4_0])) ) ) ) (syntax.BasicPatterns bt_1_0 basic_patterns_1_1 -> let case_default_2_0 = select kees_1::syntax._Case 2 in case (case (StdBool.not (StdList.any trans.anon_947 basic_patterns_1_1)) (True -> StdBool.not (trans.is_never_matching_default_191 case_default_2_0)) (False -> False) ) (True -> keesExpr_2) (False -> let filtered_default_4_0 = trans.get_filtered_default_185 case_default_2_0, filtered_case_guards_4_1 = StdList.filter trans.anon_949 basic_patterns_1_1 in case (trans.has_become_never_matching_186 filtered_default_4_0 filtered_case_guards_4_1) (True -> trans.neverMatchingCase (<{trans._c;1189;19_1298}> (select ro_3::trans._ReadOnlyTI 2) kees_1 ro_3)) (False -> case (trans.is_default_only_187 filtered_default_4_0 filtered_case_guards_4_1) (True -> trans.fromYes case_default_2_0) (False -> syntax.Case (update kees_1::syntax._Case [1:syntax.BasicPatterns bt_1_0 filtered_case_guards_4_1,2:filtered_default_4_0])) ) ) ) (syntax.OverloadedListPatterns i_1_0 decons_expr_1_1 alg_patterns_1_2 -> let case_default_2_0 = select kees_1::syntax._Case 2 in case (case (StdBool.not (StdList.any trans.anon_950 alg_patterns_1_2)) (True -> StdBool.not (trans.is_never_matching_default_191 case_default_2_0)) (False -> False) ) (True -> keesExpr_2) (False -> let filtered_default_4_0 = trans.get_filtered_default_185 case_default_2_0, filtered_case_guards_4_1 = StdList.filter trans.anon_952 alg_patterns_1_2 in case (trans.has_become_never_matching_186 filtered_default_4_0 filtered_case_guards_4_1) (True -> trans.neverMatchingCase (<{trans._c;1189;19_1299}> (select ro_3::trans._ReadOnlyTI 2) kees_1 ro_3)) (False -> case (trans.is_default_only_187 filtered_default_4_0 filtered_case_guards_4_1) (True -> trans.fromYes case_default_2_0) (False -> syntax.Case (update kees_1::syntax._Case [1:syntax.OverloadedListPatterns i_1_0 decons_expr_1_1 filtered_case_guards_4_1,2:filtered_default_4_0])) ) ) ) (_ -> StdMisc.abort "removeNeverMatchingSubcases does not match")
<{trans._c;1189;19_1299}> !_x_0 kees_1 ro_2 = case _x_0 (trans.NotRootCase -> select kees_1::syntax._Case 3) (_ -> general.Yes (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 1)::syntax._SymbIdent 0))
<{trans._c;1189;19_1298}> !_x_0 kees_1 ro_2 = case _x_0 (trans.NotRootCase -> select kees_1::syntax._Case 3) (_ -> general.Yes (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 1)::syntax._SymbIdent 0))
<{trans._c;1189;19_1297}> !_x_0 kees_1 ro_2 = case _x_0 (trans.NotRootCase -> select kees_1::syntax._Case 3) (_ -> general.Yes (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 1)::syntax._SymbIdent 0))
trans.cnf_args_316::B !_x_0 index_1::I strictness_2 ro_3 = case _x_0 (_predefined._Nil -> True) (_predefined._Cons arg_1_0 args_1_1 -> case (containers.arg_is_strict index_1 strictness_2) (True -> <{trans._c;3324;15_1301}> arg_1_0 args_1_1 index_1 strictness_2 ro_3) (False -> trans.cnf_args_316 args_1_1 (<{StdInt.+_6}> index_1 StdInt.one_11) strictness_2 ro_3) ) 
trans.cnf_app_args_317::B !_x_0 ro_1 = case _x_0 (syntax._App symb_1_0 app_args_1_1 app_info_ptr_1_2 -> case symb_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> case symb_kind_2_1 (syntax.SK_Constructor cons_index_3_0 -> trans.cnf_args_316 app_args_1_1 0 (select (select (trans.select_691 (select (trans.select_667 (select ro_1::trans._ReadOnlyTI 1) (select cons_index_3_0::syntax._Global 1))::syntax._CommonDefs 1) (select cons_index_3_0::syntax._Global 0))::syntax._ConsDef 1)::syntax._SymbolType 2) ro_1) (_ -> False)) ) 
<{trans._c;3324;15_1301}>::B !arg_0 args_1 index_2::I strictness_3 ro_4 = case arg_0 (syntax.BasicExpr _x_1_0 -> trans.cnf_args_316 args_1 (<{StdInt.+_6}> index_2 StdInt.one_11) strictness_3 ro_4) (syntax.App app_1_0 -> trans.cnf_app_args_317 app_1_0 ro_4) (_ -> False)
trans.isOKSymbol_318::B ro_0 !_x_1 = case _x_1 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> <{StdInt.==_16}> glob_module_2_1 (select ro_0::trans._ReadOnlyTI 4)) ) (syntax.SK_LocalMacroFunction _x_1_0 -> True) (syntax.SK_GeneratedFunction _x_1_0 _x_1_1 -> True) (_ -> False)
trans.is_not_caf_319::B !_x_0 = case _x_0 (syntax.FK_Caf -> False) (_ -> True)
trans.transform_fields_424 !_vtransform_0 !_x_1 ro_2 ti_3 = case _x_1 (_predefined._Nil -> _Tuple2 _predefined._Nil ti_3) (_predefined._Cons bind_1_0 fields_1_1 -> case bind_1_0 (general._Bind bind_src_2_0 bind_dst_2_1 -> let _x_3_0 = select _vtransform_0::<{trans.transform;}> 0 bind_src_2_0 ro_2 ti_3, _x_3_1 = trans.transform_fields_424 _vtransform_0 fields_1_1 ro_2 (select _x_3_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (update bind_1_0::general._Bind [0:select _x_3_0::_Tuple2 0]) (select _x_3_1::_Tuple2 0)) (select _x_3_1::_Tuple2 1)) ) 
trans.free_variables_of_expression_1005 !_vfreeVariables_0 expr_1 ti_2 = let _x_1_0 = select _vfreeVariables_0::<{trans.freeVariables;}> 0 expr_1 (trans._FreeVarInfo (trans.clearVariables_488 expr_1 (select ti_2::trans._TransformInfo 5)) (select ti_2::trans._TransformInfo 6) _predefined._Nil (select ti_2::trans._TransformInfo 10)) in _Tuple2 (select _x_1_0::trans._FreeVarInfo 2) (update ti_2::trans._TransformInfo [5:select _x_1_0::trans._FreeVarInfo 0,6:select _x_1_0::trans._FreeVarInfo 1,10:select _x_1_0::trans._FreeVarInfo 3])
trans.body_strict_993 ap_vars_0 app_args_1 !_x_2 ap_vars_3 ro_4 fun_defs_5 fun_heap_6 = case _x_2 (syntax.Var v_1_0 -> <{trans._c;718;15_1302}> (<{trans.c;717;37_891}> v_1_0 0 ap_vars_3) app_args_1 fun_defs_5 fun_heap_6) (syntax.App app_1_0 -> let _x_2_0 = trans.app_indices_156 ap_vars_0 app_1_0 ro_4 fun_defs_5 fun_heap_6 in _Tuple3 (StdFunc.seq (StdList.map containers.add_strictness (select _x_2_0::_Tuple3 0)) (containers.insert_n_lazy_values_at_beginning (StdList.length_47 app_args_1) syntax.NotStrict)) (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) (_ -> _Tuple3 (containers.insert_n_lazy_values_at_beginning (StdList.length_47 app_args_1) syntax.NotStrict) fun_defs_5 fun_heap_6)
<{trans._c;718;15_1302}> !_x_0 app_args_1 fun_defs_2 fun_heap_3 = case _x_0 (_predefined._Nil -> _Tuple3 (containers.insert_n_lazy_values_at_beginning (StdList.length_47 app_args_1) syntax.NotStrict) fun_defs_2 fun_heap_3) (_predefined._Cons i_1_0 _x_1_1 -> _Tuple3 (containers.add_strictness i_1_0 (containers.insert_n_lazy_values_at_beginning (StdList.length_47 app_args_1) syntax.NotStrict)) fun_defs_2 fun_heap_3) 
<{trans.c;702;72_1004}> cons_type_args_strictness_0 body_strictness_1 !g_l_2 g_l_3 i_4::I = <{trans.g_c1;702;36_1306}> g_l_2 g_l_3 i_4 body_strictness_1 cons_type_args_strictness_0
<{trans.g_c1;702;36_1306}> !g_l_0 g_l_1 i_2::I body_strictness_3 cons_type_args_strictness_4 = case g_l_0 (<{_predefined._|Cons}> linear_1_0 g_t_1_1 -> <{trans.g_c1;702;60_1305}> g_l_1 i_2 body_strictness_3 cons_type_args_strictness_4 linear_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;702;60_1305}> !g_l_0 i_1::I body_strictness_2 cons_type_args_strictness_3 linear_4::B g_t_5 = case g_l_0 (_predefined._Cons app_arg_1_0 g_t_1_1 -> _predefined._Cons (trans._f1304_1304 (trans._f1303_1303 (containers.arg_is_strict i_1 body_strictness_2) i_1 cons_type_args_strictness_3 linear_4) app_arg_1_0) (<{trans.c;702;72_1004}> cons_type_args_strictness_3 body_strictness_2 g_t_5 g_t_1_1 (<{StdInt.+_6}> i_1 StdInt.one_11))) (_ -> _predefined._Nil)
trans._f1304_1304::B !_x_0::B app_arg_1 = case _x_0 (True -> True) (_ -> trans.in_normal_form app_arg_1)
trans._f1303_1303::B !_x_0::B i_1::I cons_type_args_strictness_2 linear_3::B = case _x_0 (True -> True) (_ -> case (StdBool.not (containers.arg_is_strict i_1 cons_type_args_strictness_2)) (True -> linear_3) (False -> False) )
trans.fold_st_995 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_995 x_1_1 (trans.anon_149 a_1_0 st_1)) 
trans.fold_st_996 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_996 x_1_1 (trans.anon_150 a_1_0 st_1)) 
<{trans.c;702;72_994}> cons_type_args_strictness_0 body_strictness_1 !g_l_2 g_l_3 i_4::I = <{trans.g_c1;702;36_1310}> g_l_2 g_l_3 i_4 body_strictness_1 cons_type_args_strictness_0
<{trans.g_c1;702;36_1310}> !g_l_0 g_l_1 i_2::I body_strictness_3 cons_type_args_strictness_4 = case g_l_0 (<{_predefined._|Cons}> linear_1_0 g_t_1_1 -> <{trans.g_c1;702;60_1309}> g_l_1 i_2 body_strictness_3 cons_type_args_strictness_4 linear_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{trans.g_c1;702;60_1309}> !g_l_0 i_1::I body_strictness_2 cons_type_args_strictness_3 linear_4::B g_t_5 = case g_l_0 (_predefined._Cons app_arg_1_0 g_t_1_1 -> _predefined._Cons (trans._f1308_1308 (trans._f1307_1307 (containers.arg_is_strict i_1 body_strictness_2) i_1 cons_type_args_strictness_3 linear_4) app_arg_1_0) (<{trans.c;702;72_994}> cons_type_args_strictness_3 body_strictness_2 g_t_5 g_t_1_1 (<{StdInt.+_6}> i_1 StdInt.one_11))) (_ -> _predefined._Nil)
trans._f1308_1308::B !_x_0::B app_arg_1 = case _x_0 (True -> True) (_ -> trans.in_normal_form app_arg_1)
trans._f1307_1307::B !_x_0::B i_1::I cons_type_args_strictness_2 linear_3::B = case _x_0 (True -> True) (_ -> case (StdBool.not (containers.arg_is_strict i_1 cons_type_args_strictness_2)) (True -> linear_3) (False -> False) )
trans.i_fold_st_958 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> trans.i_fold_st_958 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
trans.map_st_959 common_defs_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.add_propagation_attributes_232 common_defs_0 x_1_0 s_2, _x_2_2 = trans.map_st_959 common_defs_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.map_st_960 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.copy_opt_symbol_type_231 x_1_0 s_1, _x_2_2 = trans.map_st_960 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
<{trans.c;1503;70_961}> !g_i_0::I !g_s_1::I g_a_2 = <{trans.g_c1;1503;97_1312}> (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) g_a_2 g_i_0 g_s_1
<{trans.g_c1;1503;97_1312}> !_x_0::B g_a_1 g_i_2::I g_s_3::I = case _x_0 (True -> <{trans.g_c2;1503;97_1311}> (_SystemArray.uselect_6 g_a_1 g_i_2) g_i_2 g_s_3 g_a_1) (_ -> _predefined._Nil)
<{trans.g_c2;1503;97_1311}> !_x_0 g_i_1::I g_s_2::I g_a_3 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax.PR_Class _x_2_0 _x_2_1 class_type_2_2 -> _predefined._Cons (syntax._AType syntax.TA_Multi class_type_2_2) (<{trans.c;1503;70_961}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_1)) ) (_ -> <{trans.c;1503;70_961}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_3)
trans.map_st_962 !_x_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = typesupport.getTypeVars _x_0 x_1_0 s_2, _x_2_2 = trans.map_st_962 _x_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
trans.fold_st_963 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_963 x_1_1 (trans.bind_to_temp_type_var a_1_0 st_1)) 
<{trans.c;1543;42_964}> !g_i_0::I !g_s_1::I g_a_2 g_l_3 = <{trans.g_c1;1543;32_1314}> (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) g_l_3 g_a_2 g_i_0 g_s_1
<{trans.g_c1;1543;32_1314}> !_x_0::B g_l_1 g_a_2 g_i_3::I g_s_4::I = case _x_0 (True -> <{trans.g_c1;1543;48_1313}> g_l_1 g_a_2 g_i_3 g_s_4) (_ -> _predefined._Nil)
<{trans.g_c1;1543;48_1313}> !g_l_0 g_a_1 g_i_2::I g_s_3::I = case g_l_0 (_predefined._Cons arg_1_0 g_t_1_1 -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_6 g_a_1 g_i_2 in case (trans.isUnused_205 (select _x_2_1::_Tuple2 0)) (True -> _predefined._Cons arg_1_0 (<{trans.c;1543;42_964}> (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_2_0 g_t_1_1)) (False -> <{trans.c;1543;42_964}> (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_2_0 g_t_1_1) ) (_ -> _predefined._Nil)
<{trans.c;1580;43_965}> !g_i_0::I !g_s_1::I g_a_2 = <{trans.g_c1;1580;57_1316}> (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) g_a_2 g_i_0 g_s_1
<{trans.g_c1;1580;57_1316}> !_x_0::B g_a_1 g_i_2::I g_s_3::I = case _x_0 (True -> <{trans.g_c2;1580;57_1315}> (trans.uselect_718 g_a_1 g_i_2) g_i_2 g_s_3 g_a_1) (_ -> _predefined._Nil)
<{trans.g_c2;1580;57_1315}> !_x_0 g_i_1::I g_s_2::I g_a_3 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (trans._ATypesWithStrictness ats_types_2_0 ats_strictness_2_1 -> _predefined._Cons ats_types_2_0 (<{trans.c;1580;43_965}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_1)) ) (_ -> <{trans.c;1580;43_965}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_3)
trans.compute_args_strictness_967 strictness_index_0::I !strictness_1::I !strictness_list_2 !array_index_3::I !new_arg_types_array_4 = case (<{StdInt.==_16}> array_index_3 (trans.size_716 new_arg_types_array_4)) (True -> case (<{StdInt.==_16}> strictness_1 0) (True -> strictness_list_2) (False -> containers.append_strictness strictness_1 strictness_list_2) ) (False -> let _x_2_0 = trans.select_715 new_arg_types_array_4 array_index_3, _x_2_1 = trans.add_strictness_for_arguments_198 (select _x_2_0::trans._ATypesWithStrictness 1) (select _x_2_0::trans._ATypesWithStrictness 0) 0 strictness_index_0 strictness_1 strictness_list_2 in trans.compute_args_strictness_967 (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1) strictness_list_2 (<{StdInt.+_6}> array_index_3 1) new_arg_types_array_4) 
trans.compute_args_strictness_966 !new_arg_types_array_0 = trans.compute_args_strictness_967 0 0 syntax.NotStrict 0 new_arg_types_array_0
trans.fold_st_968 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_968 x_1_1 (trans.set_cons_var_bit_230 a_1_0 st_1)) 
trans.fold_st_969 common_defs_0 cons_vars_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_969 common_defs_0 cons_vars_1 x_1_1 (trans.lift_offered_substitutions_for_unification_239 common_defs_0 cons_vars_1 a_1_0 st_3)) 
trans.map_st_970 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.substitute_attr_inequality x_1_0 s_1, _x_2_2 = trans.map_st_970 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
<{trans.cu;1600;47_972}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{trans.cu;1600;47_972}> (_SystemArray.update_5 c_a_0 c_i_1 unitype.CT_Empty) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
<{trans.cu;1601;47_971}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{trans.cu;1601;47_971}> (_SystemArray.update_5 c_a_0 c_i_1 unitype.CT_Empty) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
trans.fold_st_973 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_973 x_1_1 (trans.new_inequality a_1_0 st_1)) 
trans.fold_st_974 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_974 x_1_1 (trans.anon_209 a_1_0 st_1)) 
trans.fold_st_975 common_defs_0 cons_vars_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_975 common_defs_0 cons_vars_1 x_1_1 (trans.coerce_types_238 common_defs_0 cons_vars_1 a_1_0 st_3)) 
trans.map_st_976 ro_common_defs_0 cons_vars_1 !_x_2 !s_3 = case _x_2 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.expand_type_240 ro_common_defs_0 cons_vars_1 x_1_0 s_3, _x_2_2 = trans.map_st_976 ro_common_defs_0 cons_vars_1 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_3 in _Tuple2 _predefined._Nil s_2_0) 
<{trans.c;1626;48_977}> used_attr_vars_0 !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> case (StdBool.not (_SystemArray.select_35 used_attr_vars_0 i_1)) (True -> _predefined._Cons i_1 (<{trans.c;1626;48_977}> used_attr_vars_0 (<{StdInt.+_6}> i_1 StdInt.one_11) g_s_2)) (False -> <{trans.c;1626;48_977}> used_attr_vars_0 (<{StdInt.+_6}> i_1 StdInt.one_11) g_s_2) ) (False -> _predefined._Nil) 
trans.i_fold_st_978 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> trans.i_fold_st_978 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
trans.anon_979 !_vArray_0 fresh_type_vars_array_1 !subst_2 !_x_3 !_x_4 = case _x_3 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> case _x_4 (_Tuple2 i_2_0 th_vars_2_1 -> <{trans._c;1684;28_1317}> (_SystemArray.select_3 subst_2 i_2_0) i_2_0 tv_info_ptr_1_1 fresh_type_vars_array_1 _vArray_0 th_vars_2_1 subst_2) ) 
<{trans._c;1684;28_1317}> !_x_0 i_1::I tv_info_ptr_2 fresh_type_vars_array_3 _vArray_4 th_vars_5 subst_6 = case _x_0 (syntax.TE -> _Tuple2 (<{StdInt.+_6}> i_1 1) (Heap.writePtr tv_info_ptr_2 (syntax.TVI_Type (syntax.TV (select _vArray_4::<{_SystemArray.Array;}> 3 fresh_type_vars_array_3 i_1))) th_vars_5)) (_ -> _Tuple2 (<{StdInt.+_6}> i_1 1) (Heap.writePtr tv_info_ptr_2 (syntax.TVI_Type (_SystemArray.select_3 subst_6 i_1)) th_vars_5))
trans.fold_st_980 !_vArray_0 fresh_type_vars_array_1 subst_2 !_x_3 !st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_980 _vArray_0 fresh_type_vars_array_1 subst_2 x_1_1 (trans.anon_979 _vArray_0 fresh_type_vars_array_1 subst_2 a_1_0 st_4)) 
trans.fold_st_981 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_981 x_1_1 (trans.remove_AVI_Attr_values a_1_0 st_1)) 
trans.fold_st2_982 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> trans.store_arg_type_info_212 x_1_0 y_2_0 (trans.fold_st2_982 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.more_unused_producers2_985::B !i_0::I !producers_1 = case (<{StdInt.<_17}> i_0 (_SystemArray.size_4 producers_1)) (True -> <{trans._c;1999;15_1318}> (_SystemArray.select_3 producers_1 i_0) i_0 producers_1) (False -> False) 
<{trans._c;1999;15_1318}>::B !_x_0 i_1::I producers_2 = case _x_0 (syntax.PR_Empty -> trans.more_unused_producers2_985 (<{StdInt.+_6}> i_1 1) producers_2) (syntax.PR_Unused -> True) 
trans.more_unused_producers_984::B !i_0::I !producers_1 = case (<{StdInt.<_17}> i_0 (_SystemArray.size_4 producers_1)) (True -> <{trans._c;1988;15_1319}> (_SystemArray.select_3 producers_1 i_0) i_0 producers_1) (False -> False) 
<{trans._c;1988;15_1319}>::B !_x_0 i_1::I producers_2 = case _x_0 (syntax.PR_Empty -> trans.more_unused_producers_984 (<{StdInt.+_6}> i_1 1) producers_2) (syntax.PR_Unused -> trans.more_unused_producers2_985 (<{StdInt.+_6}> i_1 1) producers_2) (_ -> False)
trans.more_unused_producers_983::B !producers_0 = trans.more_unused_producers_984 0 producers_0
trans.arity_warning_986 !<{_v<<<_0}> msg_1 symb_ident_2 fun_index_3 !fun_arity_4::I !ti_5 = case (StdBool.not (<{StdInt.<_17}> 32 fun_arity_4)) (True -> ti_5) (False -> update ti_5::trans._TransformInfo [12:<{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (select ti_5::trans._TransformInfo 12) "Warning: Arity > 32 ") msg_1) " ") fun_arity_4) " ") symb_ident_2) "@") fun_index_3) "\n"]) 
trans.containsProducer_957::B !prod_index_0::I producers_1 = case (<{StdInt.==_16}> prod_index_0 0) (True -> False) (False -> let !prod_index_2_0::I = <{StdInt.-_7}> prod_index_0 StdInt.one_11 in case (trans.is_a_producer_348 (_SystemArray.select_3 producers_1 prod_index_2_0)) (True -> True) (False -> trans.containsProducer_957 prod_index_2_0 producers_1) ) 
trans.map_st_956 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = trans.readAppInfo_310 x_1_0 s_1, _x_2_2 = trans.map_st_956 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.isFoldSymbol_999::B !_vArray_0 ro_1 ti_cons_args_2 ti_fun_defs_3 app_4 !_x_5 = case _x_5 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case (<{StdInt.==_16}> glob_module_2_1 (select ro_1::trans._ReadOnlyTI 6)) (True -> let type_arity_4_0::I = select (select (trans.select_683 (_SystemArray.select_43 (select ro_1::trans._ReadOnlyTI 0) glob_module_2_1) glob_object_2_0)::syntax._FunType 3)::syntax._SymbolType 3 in case (trans._f1321_1321 (<{StdInt.==_16}> type_arity_4_0 0) type_arity_4_0 app_4) (True -> False) (False -> True) ) (False -> case (trans._f1324_1324 (<{StdInt.==_16}> glob_module_2_1 (select ro_1::trans._ReadOnlyTI 4)) glob_object_2_0 ti_cons_args_2 ti_fun_defs_3 _vArray_0 app_4) (True -> False) (False -> True) ) ) ) (syntax.SK_LocalMacroFunction _x_1_0 -> True) (syntax.SK_GeneratedFunction _x_1_0 _x_1_1 -> True) (_ -> False)
trans._f1324_1324::B !_x_0::B glob_object_1::I ti_cons_args_2 ti_fun_defs_3 _vArray_4 app_5 = case _x_0 (True -> case (StdBool.not (<{StdInt.<_17}> glob_object_1 (_SystemArray.size_4 ti_cons_args_2))) (True -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select (select _vArray_4::<{_SystemArray.Array;}> 3 ti_fun_defs_3 glob_object_1)::syntax._FunDef 8)::syntax._FunInfo 6) 8) 0)) (True -> <{trans._c;472;30_1323}> (select (select _vArray_4::<{_SystemArray.Array;}> 3 ti_fun_defs_3 glob_object_1)::syntax._FunDef 4) app_5) (False -> False) ) (False -> False) ) (_ -> False)
<{trans._c;472;30_1323}>::B !_x_0 app_1 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.==_16}> (select type_1_0::syntax._SymbolType 3) 0) (True -> True) (False -> case (<{StdInt.==_16}> (select type_1_0::syntax._SymbolType 3) 2) (True -> <{trans._c;473;86_1322}> (select app_1::syntax._App 1)) (False -> False) ) ) 
<{trans._c;473;86_1322}>::B !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> True) (_ -> False)
trans._f1321_1321::B !_x_0::B type_arity_1::I app_2 = case _x_0 (True -> True) (_ -> case (<{StdInt.==_16}> type_arity_1 2) (True -> <{trans._c;467;62_1320}> (select app_2::syntax._App 1)) (False -> False) )
<{trans._c;467;62_1320}>::B !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> True) (_ -> False)
trans.isFoldExpression_998::B !_vArray_0 ro_1 !_x_2 ti_fun_defs_3 ti_cons_args_4 = case _x_2 (syntax.App app_1_0 -> trans.isFoldSymbol_999 _vArray_0 ro_1 ti_cons_args_4 ti_fun_defs_3 app_1_0 (select (select app_1_0::syntax._App 0)::syntax._SymbIdent 1)) (syntax.Var _x_1_0 -> True) (_ -> False)
trans.free_variables_of_expression_1006 expr_0 ti_1 = let _x_1_0 = trans.freeVariables_498 expr_0 (trans._FreeVarInfo (trans.clearVariables_488 expr_0 (select ti_1::trans._TransformInfo 5)) (select ti_1::trans._TransformInfo 6) _predefined._Nil (select ti_1::trans._TransformInfo 10)) in _Tuple2 (select _x_1_0::trans._FreeVarInfo 2) (update ti_1::trans._TransformInfo [5:select _x_1_0::trans._FreeVarInfo 0,6:select _x_1_0::trans._FreeVarInfo 1,10:select _x_1_0::trans._FreeVarInfo 3])
trans.i_fold_st_1007 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> trans.i_fold_st_1007 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
trans.map_st_1008 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = typesupport.getTypeVars (<{typesupport.performOnTypeVars;}> typesupport.performOnTypeVars_31) x_1_0 s_1, _x_2_2 = trans.map_st_1008 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
trans.i_fold_st_1009 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> trans.i_fold_st_1009 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
trans.anon_1011 fresh_type_vars_array_0 !subst_1 !_x_2 !_x_3 = case _x_2 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> case _x_3 (_Tuple2 i_2_0 th_vars_2_1 -> <{trans._c;1684;28_1325}> (_SystemArray.select_3 subst_1 i_2_0) i_2_0 tv_info_ptr_1_1 fresh_type_vars_array_0 th_vars_2_1 subst_1) ) 
<{trans._c;1684;28_1325}> !_x_0 i_1::I tv_info_ptr_2 fresh_type_vars_array_3 th_vars_4 subst_5 = case _x_0 (syntax.TE -> _Tuple2 (<{StdInt.+_6}> i_1 1) (Heap.writePtr tv_info_ptr_2 (syntax.TVI_Type (syntax.TV (_SystemArray.select_3 fresh_type_vars_array_3 i_1))) th_vars_4)) (_ -> _Tuple2 (<{StdInt.+_6}> i_1 1) (Heap.writePtr tv_info_ptr_2 (syntax.TVI_Type (_SystemArray.select_3 subst_5 i_1)) th_vars_4))
trans.fold_st_1010 fresh_type_vars_array_0 subst_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_1010 fresh_type_vars_array_0 subst_1 x_1_1 (trans.anon_1011 fresh_type_vars_array_0 subst_1 a_1_0 st_3)) 
trans.arity_warning_1012 msg_0 symb_ident_1 fun_index_2::I !fun_arity_3::I !ti_4 = case (StdBool.not (<{StdInt.<_17}> 32 fun_arity_3)) (True -> ti_4) (False -> update ti_4::trans._TransformInfo [12:<{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (select ti_4::trans._TransformInfo 12) "Warning: Arity > 32 ") msg_0) " ") fun_arity_3) " ") symb_ident_1) "@") fun_index_2) "\n"]) 
trans.isFoldSymbol_1014::B ro_0 ti_cons_args_1 ti_fun_defs_2 app_3 !_x_4 = case _x_4 (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case (<{StdInt.==_16}> glob_module_2_1 (select ro_0::trans._ReadOnlyTI 6)) (True -> let type_arity_4_0::I = select (select (trans.select_683 (_SystemArray.select_43 (select ro_0::trans._ReadOnlyTI 0) glob_module_2_1) glob_object_2_0)::syntax._FunType 3)::syntax._SymbolType 3 in case (trans._f1327_1327 (<{StdInt.==_16}> type_arity_4_0 0) type_arity_4_0 app_3) (True -> False) (False -> True) ) (False -> case (trans._f1330_1330 (<{StdInt.==_16}> glob_module_2_1 (select ro_0::trans._ReadOnlyTI 4)) glob_object_2_0 ti_cons_args_1 ti_fun_defs_2 app_3) (True -> False) (False -> True) ) ) ) (syntax.SK_LocalMacroFunction _x_1_0 -> True) (syntax.SK_GeneratedFunction _x_1_0 _x_1_1 -> True) (_ -> False)
trans._f1330_1330::B !_x_0::B glob_object_1::I ti_cons_args_2 ti_fun_defs_3 app_4 = case _x_0 (True -> case (StdBool.not (<{StdInt.<_17}> glob_object_1 (_SystemArray.size_4 ti_cons_args_2))) (True -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select (trans.select_651 ti_fun_defs_3 glob_object_1)::syntax._FunDef 8)::syntax._FunInfo 6) 8) 0)) (True -> <{trans._c;472;30_1329}> (select (trans.select_651 ti_fun_defs_3 glob_object_1)::syntax._FunDef 4) app_4) (False -> False) ) (False -> False) ) (_ -> False)
<{trans._c;472;30_1329}>::B !_x_0 app_1 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.==_16}> (select type_1_0::syntax._SymbolType 3) 0) (True -> True) (False -> case (<{StdInt.==_16}> (select type_1_0::syntax._SymbolType 3) 2) (True -> <{trans._c;473;86_1328}> (select app_1::syntax._App 1)) (False -> False) ) ) 
<{trans._c;473;86_1328}>::B !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> True) (_ -> False)
trans._f1327_1327::B !_x_0::B type_arity_1::I app_2 = case _x_0 (True -> True) (_ -> case (<{StdInt.==_16}> type_arity_1 2) (True -> <{trans._c;467;62_1326}> (select app_2::syntax._App 1)) (False -> False) )
<{trans._c;467;62_1326}>::B !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> True) (_ -> False)
trans.isFoldExpression_1013::B ro_0 !_x_1 ti_fun_defs_2 ti_cons_args_3 = case _x_1 (syntax.App app_1_0 -> trans.isFoldSymbol_1014 ro_0 ti_cons_args_3 ti_fun_defs_2 app_1_0 (select (select app_1_0::syntax._App 0)::syntax._SymbIdent 1)) (syntax.Var _x_1_0 -> True) (_ -> False)
trans.i_fold_st_1015 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> trans.i_fold_st_1015 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
trans.i_fold_st_1016 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> trans.i_fold_st_1016 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
trans.i_fold_st_1017 prods_0 ro_1 !fr_2::I !to_3::I !st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> trans.i_fold_st_1017 prods_0 ro_1 (<{StdInt.+_6}> fr_2 StdInt.one_11) to_3 (trans.accum_function_producer_type_235 prods_0 ro_1 fr_2 st_4)) 
trans.i_fold_st_1018 replace_input_0 !fr_1::I !to_2::I !st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> trans.i_fold_st_1018 replace_input_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (trans.replace_integers_in_substitution_237 replace_input_0 fr_1 st_3)) 
trans.lift_default_134 aci_0 !_x_1 outer_case_2 ro_3 ti_4 = case _x_1 (general.Yes default_expr_1_0 -> let _x_2_0 = trans.possiblyFoldOuterCase_135 aci_0 True default_expr_1_0 outer_case_2 ro_3 ti_4 in _Tuple2 (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (general.No -> _Tuple2 general.No ti_4) 
<{trans.possiblyFoldOuterCase`_136}> !final_0::B !guard_expr_1 !outer_case_2 !ro_3 ti_4 = case final_0 (True -> trans.transformCase (update outer_case_2::syntax._Case [0:guard_expr_1]) ro_3 ti_4) (False -> let cs_2_0 = trans._CopyState (select ti_4::trans._TransformInfo 5) (select ti_4::trans._TransformInfo 6) general.No (select ti_4::trans._TransformInfo 10), _x_2_1 = trans.copyCasePatterns (select outer_case_2::syntax._Case 1) general.No (trans._CopyInfo trans.LeaveAciFreeVars) cs_2_0, cs_2_2 = select _x_2_1::_Tuple2 1, _x_2_3 = Heap.readPtr (select outer_case_2::syntax._Case 4) (select cs_2_2::trans._CopyState 1), expr_info_2_4 = select _x_2_3::_Tuple2 0, ti_symbol_heap_2_5 = select _x_2_3::_Tuple2 1, _x_2_6 = Heap.newPtr expr_info_2_4 ti_symbol_heap_2_5, new_info_ptr_2_7 = select _x_2_6::_Tuple2 0, cs_cleanup_info_2_8 = select cs_2_2::trans._CopyState 3 in trans.transformCase (update outer_case_2::syntax._Case [0:guard_expr_1,1:select _x_2_1::_Tuple2 0,4:new_info_ptr_2_7]) ro_3 (update ti_4::trans._TransformInfo [5:select cs_2_2::trans._CopyState 0,6:select _x_2_6::_Tuple2 1,10:<{trans._c;491;51_1372}> expr_info_2_4 new_info_ptr_2_7 cs_cleanup_info_2_8])) 
trans.possiblyFoldOuterCase_135 aci_0 final_1::B !guard_expr_2 outer_case_3 !ro_4 ti_5 = case ro_4 (trans._ReadOnlyTI ro_imported_funs_1_0 ro_common_defs_1_1 ro_root_case_mode_1_2 ro_tfi_1_3 ro_main_dcl_module_n_1_4 ro_transform_fusion_1_5 ro_StdStrictLists_module_n_1_6 ro_StdGeneric_module_n_1_7 -> case (trans.isFoldExpression_1013 ro_4 guard_expr_2 (select ti_5::trans._TransformInfo 0) (select ti_5::trans._TransformInfo 2)) (True -> case (case (<{StdInt.<_17}> (select ro_tfi_1_3::trans._TransformFunctionInfo 5) 0) (True -> True) (False -> <{StdInt.<_17}> (select ro_tfi_1_3::trans._TransformFunctionInfo 6) 0) ) (True -> <{trans.possiblyFoldOuterCase`_136}> final_1 guard_expr_2 outer_case_3 ro_4 ti_5) (False -> <{trans._c;455;15_1371}> (select aci_0::syntax._ActiveCaseInfo 1) final_1 guard_expr_2 outer_case_3 ro_4 ti_5 ro_tfi_1_3) ) (False -> <{trans.possiblyFoldOuterCase`_136}> final_1 guard_expr_2 outer_case_3 ro_4 ti_5) ) 
trans.lift_patterns_2_133 aci_0 !_x_1::B !_x_2 outer_case_3 ro_4 ti_5 = case _x_1 (False -> case _x_2 (_predefined._Cons guard_expr_2_0 _x_2_1 -> case _x_2_1 (_predefined._Nil -> let _x_4_0 = trans.possiblyFoldOuterCase_135 aci_0 True guard_expr_2_0 outer_case_3 ro_4 ti_5 in _Tuple2 (_predefined._Cons (select _x_4_0::_Tuple2 0) _predefined._Nil) (select _x_4_0::_Tuple2 1)) ) ) (_ -> case _x_2 (_predefined._Cons guard_expr_1_0 guard_exprs_1_1 -> let _x_2_0 = trans.possiblyFoldOuterCase_135 aci_0 False guard_expr_1_0 outer_case_3 ro_4 ti_5, _x_2_1 = trans.lift_patterns_2_133 aci_0 _x_1 guard_exprs_1_1 outer_case_3 ro_4 (select _x_2_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (_predefined._Nil -> _Tuple2 _predefined._Nil ti_5) )
trans.lift_patterns_132 aci_0 default_exists_1::B !_x_2 case_info_ptr_3 outer_case_4 ro_5 ti_6 = case _x_2 (syntax.AlgebraicPatterns type_1_0 case_guards_1_1 -> let _x_2_0 = trans.readExprInfo case_info_ptr_3 (select ti_6::trans._TransformInfo 6), _x_2_1 = trans.lift_patterns_2_133 aci_0 default_exists_1 (<{trans.c;416;37_123}> case_guards_1_1) outer_case_4 ro_5 (update ti_6::trans._TransformInfo [5:trans.store_type_info_of_alg_pattern_in_pattern_variables (select (select (select _x_2_0::_Tuple2 0)::_Tuple1 0)::syntax._CaseType 2) case_guards_1_1 (select ti_6::trans._TransformInfo 5),6:select _x_2_0::_Tuple2 1]) in _Tuple2 (syntax.AlgebraicPatterns type_1_0 (<{trans.c;421;100_124}> case_guards_1_1 (select _x_2_1::_Tuple2 0))) (select _x_2_1::_Tuple2 1)) (syntax.BasicPatterns basic_type_1_0 case_guards_1_1 -> let _x_2_0 = trans.lift_patterns_2_133 aci_0 default_exists_1 (<{trans.c;423;37_125}> case_guards_1_1) outer_case_4 ro_5 ti_6 in _Tuple2 (syntax.BasicPatterns basic_type_1_0 (<{trans.c;425;102_126}> case_guards_1_1 (select _x_2_0::_Tuple2 0))) (select _x_2_0::_Tuple2 1)) (syntax.OverloadedListPatterns type_1_0 decons_expr_1_1 case_guards_1_2 -> let _x_2_0 = trans.readExprInfo case_info_ptr_3 (select ti_6::trans._TransformInfo 6), _x_2_1 = trans.lift_patterns_2_133 aci_0 default_exists_1 (<{trans.c;427;37_127}> case_guards_1_2) outer_case_4 ro_5 (update ti_6::trans._TransformInfo [5:trans.store_type_info_of_alg_pattern_in_pattern_variables (select (select (select _x_2_0::_Tuple2 0)::_Tuple1 0)::syntax._CaseType 2) case_guards_1_2 (select ti_6::trans._TransformInfo 5),6:select _x_2_0::_Tuple2 1]) in _Tuple2 (syntax.OverloadedListPatterns type_1_0 decons_expr_1_1 (<{trans.c;432;117_128}> case_guards_1_2 (select _x_2_1::_Tuple2 0))) (select _x_2_1::_Tuple2 1)) 
trans.lift_case_131 aci_0 !nested_case_1 outer_case_2 ro_3 ti_4 = case nested_case_1 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> case (Heap.isNilPtr (select nested_case_1::syntax._Case 4)) (True -> trans.skip_over outer_case_2 ro_3 ti_4) (False -> let _x_3_0 = trans.lift_patterns_132 aci_0 (<{trans._c;398;28_1370}> case_default_1_2) case_guards_1_1 (select nested_case_1::syntax._Case 4) outer_case_2 ro_3 ti_4, _x_3_1 = trans.lift_default_134 aci_0 case_default_1_2 outer_case_2 ro_3 (select _x_3_0::_Tuple2 1), ti_3_2 = select _x_3_1::_Tuple2 1, _x_3_3 = trans.readExprInfo (select outer_case_2::syntax._Case 4) (select ti_3_2::trans._TransformInfo 6) in _Tuple2 (syntax.Case (update nested_case_1::syntax._Case [1:select _x_3_0::_Tuple2 0,2:select _x_3_1::_Tuple2 0])) (update ti_3_2::trans._TransformInfo [6:trans.remove_aci_free_vars_info (select nested_case_1::syntax._Case 4) (trans.overwrite_result_type_122 (select nested_case_1::syntax._Case 4) (select (select (select _x_3_3::_Tuple2 0)::_Tuple1 0)::syntax._CaseType 1) (select _x_3_3::_Tuple2 1))])) ) 
trans.transform_953 !_x_0 !ro_1 !ti_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let _x_2_0 = trans.transform_469 x_1_0 ro_1 ti_2, _x_2_1 = trans.transform_953 xs_1_1 ro_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (_predefined._Nil -> <{_Tuple2!3}> _predefined._Nil ti_2) 
trans.generateFunction !app_symb_0 !fd_1 !cc_args_2 !cc_linear_bits_3 !prods_4 !fun_def_ptr_5 !ro_6 !n_extra_7::I !ti_8 = case fd_1 (syntax._FunDef fun_ident_1_0 fun_arity_1_1 fun_priority_1_2 fun_body_1_3 fun_type_1_4 fun_pos_1_5 fun_kind_1_6 fun_lifted_1_7 fun_info_1_8 -> case fun_body_1_3 (syntax.TransformedBody _x_2_0 -> case _x_2_0 (syntax._TransformedBody tb_args_3_0 tb_rhs_3_1 -> case fun_info_1_8 (syntax._FunInfo fi_calls_4_0 fi_group_index_4_1 fi_def_level_4_2 fi_free_vars_4_3 fi_local_vars_4_4 fi_dynamics_4_5 fi_properties_4_6 -> case ti_8 (trans._TransformInfo ti_fun_defs_5_0 ti_instances_5_1 ti_cons_args_5_2 ti_new_functions_5_3 ti_fun_heap_5_4 ti_var_heap_5_5 ti_symbol_heap_5_6 ti_type_heaps_5_7 ti_type_def_infos_5_8 ti_next_fun_nr_5_9 ti_cleanup_info_5_10 ti_recursion_introduced_5_11 ti_error_file_5_12 ti_predef_symbols_5_13 -> let !_x_6_0 = trans.max_group_index 0 prods_4 (select ro_6::trans._ReadOnlyTI 4) fi_group_index_4_1 ti_fun_defs_5_0 ti_fun_heap_5_4 ti_cons_args_5_2, ti_fun_defs_6_1::I = select _x_6_0::_Tuple4 2, ti_fun_heap_6_2 = select _x_6_0::_Tuple4 3, _x_6_3 = trans.i_fold_st_1017 prods_4 ro_6 0 (_SystemArray.size_4 prods_4) (_Tuple3 _predefined._Nil ti_fun_defs_6_1 ti_fun_heap_6_2), function_producer_types_6_4 = select _x_6_3::_Tuple3 0, function_producer_types_6_5 = trans.mapOpt trans.strip_universal_quantor function_producer_types_6_4, consumer_symbol_type_6_6 = select (select fd_1::syntax._FunDef 4)::_Tuple1 0, consumer_symbol_type_6_7 = trans.strip_universal_quantor consumer_symbol_type_6_6, _x_6_8 = <{trans.add_propagation_attributes`_233}> (select ro_6::trans._ReadOnlyTI 1) consumer_symbol_type_6_7 (_Tuple2 ti_type_heaps_5_7 ti_type_def_infos_5_8), _x_6_9 = select _x_6_8::_Tuple2 1, ti_type_heaps_6_10 = select _x_6_9::_Tuple2 0, ti_type_def_infos_6_11 = select _x_6_9::_Tuple2 1, _x_6_12 = trans.map_st_959 (select ro_6::trans._ReadOnlyTI 1) function_producer_types_6_5 (_Tuple2 ti_type_heaps_6_10 ti_type_def_infos_6_11), opt_sound_function_producer_types_6_13::I = select _x_6_12::_Tuple2 0, _x_6_14 = select _x_6_12::_Tuple2 1, ti_type_heaps_6_15::I = select _x_6_14::_Tuple2 0, _x_6_16 = trans.map_st_960 opt_sound_function_producer_types_6_13 ti_type_heaps_6_15, opt_sound_function_producer_types_6_17 = select _x_6_16::_Tuple2 0, sound_consumer_symbol_type_6_18 = select _x_6_8::_Tuple2 0, st_args_6_19 = select sound_consumer_symbol_type_6_18::syntax._SymbolType 1, ti_type_heaps_6_20 = select _x_6_16::_Tuple2 1, sound_function_producer_types_6_21 = <{trans.c;1499;42_200}> opt_sound_function_producer_types_6_17, _x_6_22 = _SystemArray.usize_7 prods_4, class_types_6_23 = <{trans.c;1503;70_961}> 0 (<{StdInt.-_7}> (select _x_6_22::_Tuple2 0) 1) (select _x_6_22::_Tuple2 1), _x_6_24 = trans.map_st_1008 class_types_6_23 (select ti_type_heaps_6_20::syntax._TypeHeaps 0), type_vars_in_class_types_6_25 = select _x_6_24::_Tuple2 0, all_type_vars_6_26 = <{StdList.++}> (StdList.flatten (<{trans.c;1513;34_203}> (_predefined._Cons sound_consumer_symbol_type_6_18 sound_function_producer_types_6_21))) (StdList.flatten type_vars_in_class_types_6_25), all_involved_types_6_27 = <{StdList.++}> class_types_6_23 (StdList.flatten (StdList.map trans.anon_202 (_predefined._Cons sound_consumer_symbol_type_6_18 sound_function_producer_types_6_21))), th_vars_6_28 = select _x_6_24::_Tuple2 1, _x_6_29 = trans.collectPropagatingConsVars_236 all_involved_types_6_27 th_vars_6_28, th_vars_6_30 = select _x_6_29::_Tuple2 1, _x_6_31 = trans.fold_st_963 all_type_vars_6_26 (_Tuple2 0 th_vars_6_30), th_vars_6_32 = select _x_6_31::_Tuple2 1, st_attr_vars_6_33 = select sound_consumer_symbol_type_6_18::syntax._SymbolType 6, _x_6_34 = trans.bind_to_temp_attr_vars st_attr_vars_6_33 (_Tuple2 3 (select ti_type_heaps_6_20::syntax._TypeHeaps 1)), th_attrs_6_35 = select _x_6_34::_Tuple2 1, ti_type_heaps_6_36 = update ti_type_heaps_6_20::syntax._TypeHeaps [0:th_vars_6_32,1:th_attrs_6_35], _x_6_37 = expand_types.substitute_17 st_args_6_19 ti_type_heaps_6_36, st_args_6_38 = select _x_6_37::_Tuple3 1, st_args_strictness_6_39 = select sound_consumer_symbol_type_6_18::syntax._SymbolType 2, next_attr_nr_6_40 = select _x_6_34::_Tuple2 0, das_AV_6_41 = _predefined._Cons st_attr_vars_6_33 _predefined._Nil, nr_of_all_type_vars_6_42 = select _x_6_31::_Tuple2 0, subst_6_43 = _SystemArray.createArray_1 nr_of_all_type_vars_6_42 syntax.TE, st_result_6_44 = select sound_consumer_symbol_type_6_18::syntax._SymbolType 4, ti_type_heaps_6_45 = select _x_6_37::_Tuple3 2, _x_6_46 = expand_types.substitute_8 st_result_6_44 ti_type_heaps_6_45, ti_type_heaps_6_47 = select _x_6_46::_Tuple3 2, ti_fun_defs_6_48 = select _x_6_3::_Tuple3 1, ti_fun_heap_6_49 = select _x_6_3::_Tuple3 2, ti_cons_args_6_50 = select _x_6_0::_Tuple4 1, das_6_51 = trans._DetermineArgsState _predefined._Nil (trans.st_args_array_228 st_args_6_38 st_args_strictness_6_39) next_attr_nr_6_40 (_SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) _predefined._Nil _predefined._Nil das_AV_6_41 subst_6_43 ti_type_heaps_6_47 ti_fun_defs_6_48 ti_fun_heap_6_49 ti_var_heap_5_5 ti_cons_args_6_50 (select ti_8::trans._TransformInfo 13) Heap.nilPtr, das_6_52 = trans.determine_args cc_linear_bits_3 cc_args_2 0 prods_4 opt_sound_function_producer_types_6_17 tb_args_3_0 ro_6 das_6_51, new_fun_args_6_53 = select das_6_52::trans._DetermineArgsState 0, new_fun_arity_6_54 = StdList.length_47 new_fun_args_6_53 in case (case (<{StdInt.<_17}> 32 new_fun_arity_6_54) (True -> StdBool.not (<{StdInt.<_17}> new_fun_arity_6_54 fun_arity_1_1)) (False -> False) ) (True -> case (select ro_6::trans._ReadOnlyTI 5) (True -> let ptr_and_val_9_0 = _Tuple2 fun_def_ptr_5 (syntax.FI_Function (syntax._GeneratedFunction fd_1 syntax.II_Empty (syntax._ConsClasses 0 _predefined._Nil (_SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) False) -1)), ti_9_1 = update ti_8::trans._TransformInfo [0:select das_6_52::trans._DetermineArgsState 9,2:select das_6_52::trans._DetermineArgsState 12,4:Heap.writePtr (select ptr_and_val_9_0::_Tuple2 0) (select ptr_and_val_9_0::_Tuple2 1) (select das_6_52::trans._DetermineArgsState 10),5:select das_6_52::trans._DetermineArgsState 11,6:ti_symbol_heap_5_6,7:select das_6_52::trans._DetermineArgsState 8,8:select _x_6_14::_Tuple2 1,13:select das_6_52::trans._DetermineArgsState 13] in <{_Tuple3!7}> -1 new_fun_arity_6_54 (update ti_9_1::trans._TransformInfo [12:<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (select ti_9_1::trans._TransformInfo 12) "Possibly missed fusion oppurtunity: Function Arity > 32 ") (select (select (select (select ro_6::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 0)::syntax._SymbIdent 0)::syntax._Ident 0)) "\n"])) (False -> let ptr_and_val_9_0 = _Tuple2 fun_def_ptr_5 (syntax.FI_Function (syntax._GeneratedFunction fd_1 syntax.II_Empty (syntax._ConsClasses 0 _predefined._Nil (_SystemStrictLists._nil_uts (<{_SystemStrictLists.UTSList;}> _SystemStrictLists._cons_uts_41 _SystemStrictLists._decons_uts_42)) False) -1)) in <{_Tuple3!7}> -1 new_fun_arity_6_54 (update ti_8::trans._TransformInfo [0:select das_6_52::trans._DetermineArgsState 9,2:select das_6_52::trans._DetermineArgsState 12,4:Heap.writePtr (select ptr_and_val_9_0::_Tuple2 0) (select ptr_and_val_9_0::_Tuple2 1) (select das_6_52::trans._DetermineArgsState 10),5:select das_6_52::trans._DetermineArgsState 11,6:ti_symbol_heap_5_6,7:select das_6_52::trans._DetermineArgsState 8,8:select _x_6_14::_Tuple2 1,13:select das_6_52::trans._DetermineArgsState 13])) ) (False -> let _x_8_0 = <{trans._c;1747;27_1369}> n_extra_7 _x_8_110 fun_def_ptr_5 new_gen_fd_8_105 tb_rhs_8_82 fd_1 ti_next_fun_nr_5_9 new_fun_arity_6_54 ti_8 ti_fun_defs_8_116 ti_cons_args_8_117 ti_new_functions_5_3 ti_fun_heap_8_118 var_heap_8_107 cs_symbol_heap_8_114 all_type_vars_6_26 das_AV_8_78 ti_type_def_infos_8_115 cs_cleanup_info_8_113 ti_predef_symbols_8_119 new_fun_args_6_53 fresh_result_type_8_65 ro_8_92, ti_var_heap_8_1 = select das_6_52::trans._DetermineArgsState 11, propagating_cons_vars_8_2 = select _x_6_29::_Tuple2 0, cons_vars_8_3 = _SystemArray.createArray_9 (<{StdInt.+_6}> (<{StdInt.>>}> nr_of_all_type_vars_6_42 5) StdInt.one_11) 0, ti_type_heaps_8_4 = select das_6_52::trans._DetermineArgsState 8, _x_8_5 = trans.fold_st_968 propagating_cons_vars_8_2 (_Tuple2 cons_vars_8_3 (select ti_type_heaps_8_4::syntax._TypeHeaps 0)), cons_vars_8_6 = select _x_8_5::_Tuple2 0, st_result_8_7 = select _x_6_46::_Tuple3 1, new_arg_types_array_8_8 = select das_6_52::trans._DetermineArgsState 1, _x_8_9 = trans.usize_719 new_arg_types_array_8_8, new_arg_types_8_10 = StdList.flatten (<{trans.c;1580;43_965}> 0 (<{StdInt.-_7}> (select _x_8_9::_Tuple2 0) 1) (select _x_8_9::_Tuple2 1)), uniqueness_requirements_8_11 = select das_6_52::trans._DetermineArgsState 5, next_attr_nr_8_12 = select das_6_52::trans._DetermineArgsState 2, subst_8_13 = select das_6_52::trans._DetermineArgsState 7, ti_type_def_infos_8_14 = select _x_6_14::_Tuple2 1, th_vars_8_15 = select _x_8_5::_Tuple2 1, ti_type_heaps_8_16 = update ti_type_heaps_8_4::syntax._TypeHeaps [0:th_vars_8_15], _x_8_17 = trans.fold_st_969 (select ro_6::trans._ReadOnlyTI 1) cons_vars_8_6 uniqueness_requirements_8_11 (_Tuple4 next_attr_nr_8_12 subst_8_13 ti_type_def_infos_8_14 ti_type_heaps_8_16), subst_8_18 = select _x_8_17::_Tuple4 1, next_attr_nr_8_19::I = select _x_8_17::_Tuple4 0, ti_type_heaps_8_20 = select _x_8_17::_Tuple4 3, ti_type_def_infos_8_21 = select _x_8_17::_Tuple4 2, _x_8_22 = unitype.liftRemainingSubstitutions subst_8_18 (select ro_6::trans._ReadOnlyTI 1) cons_vars_8_6 next_attr_nr_8_19 ti_type_heaps_8_20 ti_type_def_infos_8_21, subst_8_23 = select _x_8_22::_Tuple4 0, st_attr_env_8_24 = select sound_consumer_symbol_type_6_18::syntax._SymbolType 7, ti_type_heaps_8_25 = select _x_8_22::_Tuple4 2, _x_8_26 = trans.map_st_970 st_attr_env_8_24 (select ti_type_heaps_8_25::syntax._TypeHeaps 1), consumer_attr_inequalities_8_27 = select _x_8_26::_Tuple2 0, next_attr_nr_8_28 = select _x_8_22::_Tuple4 1, g_s_8_29::I = <{StdInt.-_7}> next_attr_nr_8_28 1, g_s_8_30::I = <{StdInt.-_7}> next_attr_nr_8_28 1, coercions_8_31 = unitype._Coercions (_SystemArray.update_5 (<{trans.cu;1601;47_971}> (_SystemArray._createArray_0 (<{StdInt.+_6}> g_s_8_29 StdInt.one_11)) 0 g_s_8_29) 0 unitype.CT_Unique) (_SystemArray.update_5 (<{trans.cu;1600;47_972}> (_SystemArray._createArray_0 (<{StdInt.+_6}> g_s_8_30 StdInt.one_11)) 0 g_s_8_30) 1 unitype.CT_NonUnique), coercions_8_32 = trans.fold_st_973 consumer_attr_inequalities_8_27 coercions_8_31, coercions_8_33 = trans.fold_st_974 uniqueness_requirements_8_11 coercions_8_32, ti_type_def_infos_8_34 = select _x_8_22::_Tuple4 3, th_attrs_8_35 = select _x_8_26::_Tuple2 1, ti_type_heaps_8_36 = update ti_type_heaps_8_25::syntax._TypeHeaps [1:th_attrs_8_35], _x_8_37 = trans.fold_st_975 (select ro_6::trans._ReadOnlyTI 1) cons_vars_8_6 uniqueness_requirements_8_11 (_Tuple4 subst_8_23 coercions_8_33 ti_type_def_infos_8_34 ti_type_heaps_8_36), coercions_8_38 = select _x_8_37::_Tuple4 1, subst_8_39 = select _x_8_37::_Tuple4 0, ti_type_heaps_8_40 = select _x_8_37::_Tuple4 3, ti_type_def_infos_8_41 = select _x_8_37::_Tuple4 2, _x_8_42 = trans.map_st_976 (select ro_6::trans._ReadOnlyTI 1) cons_vars_8_6 (_predefined._Cons st_result_8_7 new_arg_types_8_10) (_Tuple4 coercions_8_38 subst_8_39 ti_type_heaps_8_40 ti_type_def_infos_8_41), _x_8_43 = select _x_8_42::_Tuple2 0, new_arg_types_8_44 = select _x_8_43::_Tuple2 1, _x_8_45 = select _x_8_42::_Tuple2 1, ti_type_heaps_8_46 = select _x_8_45::_Tuple4 2, _x_8_47 = trans.create_fresh_type_vars nr_of_all_type_vars_6_42 (select ti_type_heaps_8_46::syntax._TypeHeaps 0), _x_8_48 = _Tuple2 (select _x_8_47::_Tuple2 0) (update ti_type_heaps_8_46::syntax._TypeHeaps [0:select _x_8_47::_Tuple2 1]), fresh_type_vars_array_8_49 = select _x_8_48::_Tuple2 0, coercions_8_50 = select _x_8_45::_Tuple4 0, _x_8_51 = unitype.partitionateAttributes (select coercions_8_50::unitype._Coercions 1) (select coercions_8_50::unitype._Coercions 0), demanded_8_52 = select _x_8_51::_Tuple2 1, ti_type_heaps_8_53 = select _x_8_48::_Tuple2 1, _x_8_54 = trans.create_fresh_attr_vars demanded_8_52 (_SystemArray.size_4 demanded_8_52) (select ti_type_heaps_8_53::syntax._TypeHeaps 1), _x_8_55 = _Tuple2 (select _x_8_54::_Tuple2 0) (update ti_type_heaps_8_53::syntax._TypeHeaps [1:select _x_8_54::_Tuple2 1]), fresh_attr_vars_8_56 = select _x_8_55::_Tuple2 0, attr_partition_8_57 = select _x_8_51::_Tuple2 0, replace_input_8_58 = _Tuple3 fresh_type_vars_array_8_49 fresh_attr_vars_8_56 attr_partition_8_57, used_attr_vars_8_59 = _SystemArray.createArray_33 (_SystemArray.size_4 demanded_8_52) False, _x_8_60 = trans.replaceIntegers_851 new_arg_types_8_44 replace_input_8_58 used_attr_vars_8_59, fresh_arg_types_8_61 = select _x_8_60::_Tuple3 1, st_result_8_62 = select _x_8_43::_Tuple2 0, used_attr_vars_8_63 = select _x_8_60::_Tuple3 2, _x_8_64 = trans.replaceIntegers_482 st_result_8_62 replace_input_8_58 used_attr_vars_8_63, fresh_result_type_8_65 = select _x_8_64::_Tuple3 1, ti_type_heaps_8_66 = select _x_8_55::_Tuple2 1, _x_8_67 = typesupport.getAttrVars (<{typesupport.performOnAttrVars;}> (typesupport.performOnAttrVars_38 (<{typesupport.performOnAttrVars;}> (typesupport.performOnAttrVars_37 (<{typesupport.performOnAttrVars;}> typesupport.performOnAttrVars_36))) (<{typesupport.performOnAttrVars;}> typesupport.performOnAttrVars_36))) (_Tuple2 fresh_arg_types_8_61 fresh_result_type_8_65) (select ti_type_heaps_8_66::syntax._TypeHeaps 1), _x_8_68 = _Tuple2 (select _x_8_67::_Tuple2 0) (update ti_type_heaps_8_66::syntax._TypeHeaps [1:select _x_8_67::_Tuple2 1]), ti_type_heaps_8_69 = select _x_8_68::_Tuple2 1, _x_8_70 = typesupport.getTypeVars (<{typesupport.performOnTypeVars;}> (typesupport.performOnTypeVars_34 (<{typesupport.performOnTypeVars;}> (typesupport.performOnTypeVars_33 (<{typesupport.performOnTypeVars;}> typesupport.performOnTypeVars_31))) (<{typesupport.performOnTypeVars;}> typesupport.performOnTypeVars_31))) (_Tuple2 fresh_arg_types_8_61 fresh_result_type_8_65) (select ti_type_heaps_8_69::syntax._TypeHeaps 0), _x_8_71 = _Tuple2 (select _x_8_70::_Tuple2 0) (update ti_type_heaps_8_69::syntax._TypeHeaps [0:select _x_8_70::_Tuple2 1]), ti_type_heaps_8_72 = select _x_8_71::_Tuple2 1, subst_8_73 = select _x_8_45::_Tuple4 1, _x_8_74 = trans.i_fold_st_1018 (_Tuple3 fresh_type_vars_array_8_49 fresh_attr_vars_8_56 attr_partition_8_57) 0 nr_of_all_type_vars_6_42 (_Tuple2 subst_8_73 (_SystemArray.createArray_33 (_SystemArray.size_4 demanded_8_52) False)), subst_8_75 = select _x_8_74::_Tuple2 0, _x_8_76 = trans.fold_st_1010 fresh_type_vars_array_8_49 subst_8_75 all_type_vars_6_26 (_Tuple2 0 (select ti_type_heaps_8_72::syntax._TypeHeaps 0)), th_vars_8_77 = select _x_8_76::_Tuple2 1, das_AV_8_78 = select das_6_52::trans._DetermineArgsState 6, th_attrs_8_79 = trans.remove_TA_TempVars_in_info_ptrs das_AV_8_78 (select ti_type_heaps_8_72::syntax._TypeHeaps 1), cs_8_80 = trans._CopyState ti_var_heap_8_1 ti_symbol_heap_5_6 (general.Yes (update ti_type_heaps_8_72::syntax._TypeHeaps [0:th_vars_8_77,1:th_attrs_8_79])) ti_cleanup_info_5_10, _x_8_81 = trans.copy_513 tb_rhs_3_1 (trans._CopyInfo trans.RemoveAciFreeVars) cs_8_80, tb_rhs_8_82 = select _x_8_81::_Tuple2 0, ro_root_case_mode_8_83 = <{trans._c;1714;27_1368}> tb_rhs_8_82, ro_fun_8_84 = syntax._SymbIdent (select fd_1::syntax._FunDef 0) (syntax.SK_GeneratedFunction fun_def_ptr_5 ti_next_fun_nr_5_9), _x_8_85 = _SystemArray.usize_7 prods_4, uvar_8_86 = <{trans.c;1543;42_964}> 0 (<{StdInt.-_7}> (select _x_8_85::_Tuple2 0) 1) (select _x_8_85::_Tuple2 1) tb_args_3_0, new_args_strictness_8_87 = trans.compute_args_strictness_966 new_arg_types_array_8_8, _x_8_88 = <{trans._if;1720;11_1367}> (trans.more_unused_producers_983 prods_4) var_heap_8_109 tb_args_3_0 new_fun_args_6_53, n_args_before_producer_8_89::I = select _x_8_88::_Tuple3 0, n_producer_args_8_90::I = select _x_8_88::_Tuple3 1, tfi_8_91::I = trans._TransformFunctionInfo ro_fun_8_84 ro_fun_8_84 new_fun_args_6_53 (<{StdList.++}> uvar_8_86 (<{trans.c;1728;64_213}> new_args_strictness_8_87 new_fun_args_6_53 0)) app_symb_0 n_args_before_producer_8_89 n_producer_args_8_90, ro_8_92 = update ro_6::trans._ReadOnlyTI [2:ro_root_case_mode_8_83,3:tfi_8_91], _x_8_93 = trans.transform_469 (select _x_8_0::_Tuple2 0) ro_8_92 (select _x_8_0::_Tuple2 1), ti_8_94 = select _x_8_93::_Tuple2 1, all_fresh_type_vars_8_95 = select _x_8_71::_Tuple2 0, used_attr_vars_8_96 = select _x_8_64::_Tuple3 2, all_attr_vars_8_97 = trans.get_used_attr_vars_242 0 used_attr_vars_8_96 fresh_attr_vars_8_56, final_coercions_8_98 = typesupport.removeUnusedAttrVars demanded_8_52 (<{trans.c;1626;48_977}> used_attr_vars_8_96 0 (<{StdInt.-_7}> (_SystemArray.size_36 used_attr_vars_8_96) 1)), new_fun_type_8_99 = general.Yes (syntax._SymbolType all_fresh_type_vars_8_95 fresh_arg_types_8_61 new_args_strictness_8_87 new_fun_arity_6_54 fresh_result_type_8_65 _predefined._Nil all_attr_vars_8_97 (trans.coercionsToAttrEnv fresh_attr_vars_8_56 final_coercions_8_98)), fi_group_index_8_100::I = select _x_6_0::_Tuple4 0, new_fd_expanding_8_101 = update fd_1::syntax._FunDef [1:new_fun_arity_6_54,3:syntax.Expanding new_fun_args_6_53,4:new_fun_type_8_99,8:update (select fd_1::syntax._FunDef 8)::syntax._FunInfo [1:fi_group_index_8_100,6:StdInt.bitand fi_properties_4_6 63]], new_cons_args_8_102 = select das_6_52::trans._DetermineArgsState 4, new_linear_bits_8_103 = select das_6_52::trans._DetermineArgsState 3, new_fd_cons_args_8_104 = syntax._ConsClasses (StdList.length_47 new_cons_args_8_102) (StdList.repeatn (StdList.length_47 new_cons_args_8_102) -3) new_linear_bits_8_103 False, new_gen_fd_8_105 = syntax._GeneratedFunction new_fd_expanding_8_101 syntax.II_Empty new_fd_cons_args_8_104 ti_next_fun_nr_5_9, ptr_and_val_8_106 = _Tuple2 fun_def_ptr_5 (syntax.FI_Function (update new_gen_fd_8_105::syntax._GeneratedFunction [0:update new_fd_expanding_8_101::syntax._FunDef [3:syntax.TransformedBody (syntax._TransformedBody new_fun_args_6_53 (select _x_8_93::_Tuple2 0))],2:new_fd_cons_args_8_104])), var_heap_8_107::I = select _x_8_88::_Tuple3 2, das_removed_equal_info_ptr_8_108 = select das_6_52::trans._DetermineArgsState 14, var_heap_8_109 = <{trans._if;1710;18_1366}> (Heap.isNilPtr das_removed_equal_info_ptr_8_108) var_heap_8_112 das_removed_equal_info_ptr_8_108, _x_8_110 = select _x_8_81::_Tuple2 1, var_heap_8_111 = select _x_8_110::trans._CopyState 0, var_heap_8_112 = trans.fold_st2_982 new_fun_args_6_53 fresh_arg_types_8_61 var_heap_8_111, cs_cleanup_info_8_113 = select _x_8_110::trans._CopyState 3, cs_symbol_heap_8_114 = select _x_8_110::trans._CopyState 1, ti_type_def_infos_8_115 = select _x_8_45::_Tuple4 3, ti_fun_defs_8_116 = select das_6_52::trans._DetermineArgsState 9, ti_cons_args_8_117 = select das_6_52::trans._DetermineArgsState 12, ti_fun_heap_8_118 = select das_6_52::trans._DetermineArgsState 10, ti_predef_symbols_8_119 = select das_6_52::trans._DetermineArgsState 13 in <{_Tuple3!7}> ti_next_fun_nr_5_9 new_fun_arity_6_54 (update ti_8_94::trans._TransformInfo [4:Heap.writePtr (select ptr_and_val_8_106::_Tuple2 0) (select ptr_and_val_8_106::_Tuple2 1) (select ti_8_94::trans._TransformInfo 4)])) ) ) ) ) ) 
trans.transform_trivial_function_278 !app_0 !app_args_1 !extra_args_2 !ro_3 !ti_4 = case app_0 (syntax._App app_symb_1_0 app_args_1_1 app_info_ptr_1_2 -> let _x_2_0 = trans.is_trivial_function_call_281 (select app_symb_1_0::syntax._SymbIdent 1) app_args_1 ro_3 ti_4, ti_2_1 = select _x_2_0::_Tuple2 1 in <{trans._c;2785;11_1365}> (select _x_2_0::_Tuple2 0) app_0 app_symb_1_0 app_args_1 extra_args_2 ti_2_1 ro_3) 
trans.transformFunctionApplication !fun_def_0 !instances_1 !cc_2 !app_3 !extra_args_4 !ro_5 !ti_6 = case cc_2 (syntax._ConsClasses cc_size_1_0 cc_args_1_1 cc_linear_bits_1_2 cc_producer_1_3 -> case app_3 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> case (<{trans._c;2761;26_1361}> (select fun_def_0::syntax._FunDef 3)) (True -> let _x_4_0 = trans.complete_application_283 (select fun_def_0::syntax._FunDef 1) app_args_2_1 extra_args_4 in <{_Tuple2!3}> (trans.build_application_284 (update app_3::syntax._App [1:select _x_4_0::_Tuple2 0]) (select _x_4_0::_Tuple2 1)) ti_6) (False -> case (<{StdInt.==_16}> cc_size_1_0 0) (True -> case (case (select ro_5::trans._ReadOnlyTI 5) (True -> case (trans.is_not_caf_276 (select fun_def_0::syntax._FunDef 6)) (True -> trans.is_sexy_body (select (select (select fun_def_0::syntax._FunDef 3)::_Tuple1 0)::syntax._TransformedBody 1)) (False -> False) ) (False -> False) ) (True -> let _x_6_0 = trans.complete_application_283 (select fun_def_0::syntax._FunDef 1) app_args_2_1 extra_args_4 in trans.transform_trivial_function_278 app_3 (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1) ro_5 ti_6) (False -> let _x_6_0 = trans.complete_application_283 (select fun_def_0::syntax._FunDef 1) app_args_2_1 extra_args_4 in <{_Tuple2!3}> (trans.build_application_284 (update app_3::syntax._App [1:select _x_6_0::_Tuple2 0]) (select _x_6_0::_Tuple2 1)) ti_6) ) (False -> let _x_5_0 = trans.complete_application_283 (select fun_def_0::syntax._FunDef 1) app_args_2_1 extra_args_4, app_args_5_1 = select _x_5_0::_Tuple2 0, fun_kind_5_2 = select fun_def_0::syntax._FunDef 6, _x_5_3 = select (select fun_def_0::syntax._FunDef 3)::_Tuple1 0, tb_rhs_5_4 = select _x_5_3::syntax._TransformedBody 1, _x_5_5 = trans.is_trivial_function_280 app_symb_2_0 app_args_5_1 fun_kind_5_2 tb_rhs_5_4 ro_5 ti_6, opt_expr_5_6 = select _x_5_5::_Tuple2 0 in case (<{trans._c;2699;7_1362}> opt_expr_5_6) (True -> let ti_7_0 = select _x_5_5::_Tuple2 1, extra_args_7_1 = select _x_5_0::_Tuple2 1 in <{trans._c;2700;11_1363}> opt_expr_5_6 extra_args_7_1 ro_5 ti_7_0) (False -> case (StdBool.not (<{StdInt.<_17}> cc_size_1_0 0)) (True -> let !_x_8_0 = trans.determineProducers consumer_properties_8_3 (StdBool.not (<{StdInt.==_16}> cc_size_1_0 (StdList.length_47 app_args_5_1))) (trans._f1364_1364 (StdBool.not (<{StdInt.==_16}> (StdInt.bitand consumer_properties_8_3 4) 0)) app_args_5_1 cc_args_1_1) (select fun_def_0::syntax._FunDef 4) cc_linear_bits_1_2 cc_args_1_1 app_args_5_1 0 (_SystemArray.createArray_1 cc_size_1_0 syntax.PR_Empty) ro_5 (select _x_5_5::_Tuple2 1), !_x_8_1 = trans.determineCurriedProducersInExtraArgs (select _x_8_0::_Tuple4 1) (select _x_5_0::_Tuple2 1) consumer_properties_8_3 (select _x_8_0::_Tuple4 0) cc_args_1_1 cc_linear_bits_1_2 fun_def_0 ro_5 (select _x_8_0::_Tuple4 3), producers_8_2::I = select _x_8_1::_Tuple9 3, consumer_properties_8_3 = select (select fun_def_0::syntax._FunDef 8)::syntax._FunInfo 6 in case (case (trans.containsProducer_957 cc_size_1_0 producers_8_2) (True -> True) (False -> select _x_8_1::_Tuple9 0) ) (True -> let ti_10_0 = select _x_8_1::_Tuple9 8, _x_10_1 = trans.tryToFindInstance producers_8_2 instances_1 (select ti_10_0::trans._TransformInfo 4) in case (select _x_10_1::_Tuple4 0) (True -> let fun_def_12_0::I = select _x_8_1::_Tuple9 6, cc_args_12_1 = select _x_8_1::_Tuple9 4, cc_linear_bits_12_2 = select _x_8_1::_Tuple9 5, fun_def_ptr_12_3 = select _x_10_1::_Tuple4 1, n_extra_12_4 = select _x_8_1::_Tuple9 7, instances_12_5::I = select _x_10_1::_Tuple4 2, ti_fun_heap_12_6 = select _x_10_1::_Tuple4 3, ti_12_7 = trans.update_instance_info_282 (select app_symb_2_0::syntax._SymbIdent 1) instances_12_5 (update ti_10_0::trans._TransformInfo [4:ti_fun_heap_12_6]), _x_12_8 = trans.generateFunction app_symb_2_0 fun_def_12_0 cc_args_12_1 cc_linear_bits_12_2 producers_8_2 fun_def_ptr_12_3 ro_5 n_extra_12_4 ti_12_7, fun_index_12_9 = select _x_12_8::_Tuple3 0 in case (<{StdInt.==_16}> fun_index_12_9 -1) (True -> <{_Tuple2!3}> (trans.build_application_284 (update app_3::syntax._App [1:app_args_5_1]) (select _x_8_1::_Tuple9 2)) (select _x_12_8::_Tuple3 2)) (False -> let _x_14_0 = trans.complete_application_283 (select _x_12_8::_Tuple3 1) (select _x_8_1::_Tuple9 1) (select _x_8_1::_Tuple9 2), _x_14_1 = trans.transformApplication (update app_3::syntax._App [0:update app_symb_2_0::syntax._SymbIdent [1:syntax.SK_GeneratedFunction fun_def_ptr_12_3 fun_index_12_9],1:select _x_14_0::_Tuple2 0]) (select _x_14_0::_Tuple2 1) ro_5 (select _x_12_8::_Tuple3 2) in trans.possiblyAddStrictLetBinds_277 (select _x_14_1::_Tuple2 0) (select _x_8_0::_Tuple4 2) (select _x_14_1::_Tuple2 1)) ) (False -> let fun_def_ptr_12_0::I = select _x_10_1::_Tuple4 1, ti_fun_heap_12_1 = select _x_10_1::_Tuple4 3, _x_12_2 = Heap.readPtr fun_def_ptr_12_0 ti_fun_heap_12_1, gf_12_3 = select (select _x_12_2::_Tuple2 0)::_Tuple1 0, gf_fun_index_12_4 = select gf_12_3::syntax._GeneratedFunction 3 in case (<{StdInt.==_16}> gf_fun_index_12_4 -1) (True -> <{_Tuple2!3}> (trans.build_application_284 (update app_3::syntax._App [1:app_args_5_1]) (select _x_8_1::_Tuple9 2)) (update ti_10_0::trans._TransformInfo [4:select _x_12_2::_Tuple2 1])) (False -> let gf_fun_def_14_0 = select gf_12_3::syntax._GeneratedFunction 0 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select gf_fun_def_14_0::syntax._FunDef 8)::syntax._FunInfo 6) 64) 0)) (True -> let _x_16_0 = trans.complete_application_283 (select gf_fun_def_14_0::syntax._FunDef 1) (select _x_8_1::_Tuple9 1) (select _x_8_1::_Tuple9 2), _x_16_1 = select gf_fun_def_14_0::syntax._FunDef 8, ti_16_2 = update ti_10_0::trans._TransformInfo [4:select _x_12_2::_Tuple2 1], s1_16_3 = select gf_12_3::syntax._GeneratedFunction 0, _x_16_4 = trans.transformApplication (update app_3::syntax._App [0:update app_symb_2_0::syntax._SymbIdent [1:syntax.SK_GeneratedFunction fun_def_ptr_12_0 gf_fun_index_12_4],1:select _x_16_0::_Tuple2 0]) (select _x_16_0::_Tuple2 1) ro_5 (trans.add_unused_calls_285 (select _x_16_1::syntax._FunInfo 0) (update ti_16_2::trans._TransformInfo [3:_predefined._Cons fun_def_ptr_12_0 (select ti_16_2::trans._TransformInfo 3),4:Heap.writePtr fun_def_ptr_12_0 (syntax.FI_Function (update gf_12_3::syntax._GeneratedFunction [0:update s1_16_3::syntax._FunDef [8:update (select s1_16_3::syntax._FunDef 8)::syntax._FunInfo [6:StdInt.bitor (StdInt.bitxor (select _x_16_1::syntax._FunInfo 6) 64) 128]]])) (select ti_16_2::trans._TransformInfo 4)])) in trans.possiblyAddStrictLetBinds_277 (select _x_16_4::_Tuple2 0) (select _x_8_0::_Tuple4 2) (select _x_16_4::_Tuple2 1)) (False -> let _x_16_0 = trans.complete_application_283 (select gf_fun_def_14_0::syntax._FunDef 1) (select _x_8_1::_Tuple9 1) (select _x_8_1::_Tuple9 2), _x_16_1 = trans.transformApplication (update app_3::syntax._App [0:update app_symb_2_0::syntax._SymbIdent [1:syntax.SK_GeneratedFunction fun_def_ptr_12_0 gf_fun_index_12_4],1:select _x_16_0::_Tuple2 0]) (select _x_16_0::_Tuple2 1) ro_5 (update ti_10_0::trans._TransformInfo [4:select _x_12_2::_Tuple2 1]) in trans.possiblyAddStrictLetBinds_277 (select _x_16_1::_Tuple2 0) (select _x_8_0::_Tuple4 2) (select _x_16_1::_Tuple2 1)) ) ) ) (False -> case (select ro_5::trans._ReadOnlyTI 5) (True -> trans.transform_trivial_function_278 app_3 app_args_5_1 (select _x_8_1::_Tuple9 2) ro_5 (select _x_8_1::_Tuple9 8)) (False -> <{_Tuple2!3}> (trans.build_application_284 (update app_3::syntax._App [1:app_args_5_1]) (select _x_8_1::_Tuple9 2)) (select _x_8_1::_Tuple9 8)) ) ) (False -> <{_Tuple2!3}> (trans.build_application_284 (update app_3::syntax._App [1:app_args_5_1]) (select _x_5_0::_Tuple2 1)) (select _x_5_5::_Tuple2 1)) ) ) ) ) ) 
trans.transformApplication !app_0 !extra_args_1 !ro_2 !ti_3 = case app_0 (syntax._App symb_1_0 app_args_1_1 app_info_ptr_1_2 -> case symb_1_0 (syntax._SymbIdent symb_ident_2_0 symb_kind_2_1 -> case ti_3 (trans._TransformInfo ti_fun_defs_3_0 ti_instances_3_1 ti_cons_args_3_2 ti_new_functions_3_3 ti_fun_heap_3_4 ti_var_heap_3_5 ti_symbol_heap_3_6 ti_type_heaps_3_7 ti_type_def_infos_3_8 ti_next_fun_nr_3_9 ti_cleanup_info_3_10 ti_recursion_introduced_3_11 ti_error_file_3_12 ti_predef_symbols_3_13 -> case (trans.is_SK_Function_or_SK_LocalMacroFunction symb_kind_2_1) (True -> let gi_5_0::I = <{trans._c;3163;15_1358}> symb_kind_2_1 ro_2, glob_module_5_1 = select gi_5_0::syntax._Global 1 in case (<{StdInt.==_16}> glob_module_5_1 (select ro_2::trans._ReadOnlyTI 4)) (True -> let glob_object_7_0::I = select gi_5_0::syntax._Global 0 in case (<{StdInt.<_17}> glob_object_7_0 (_SystemArray.size_4 ti_cons_args_3_2)) (True -> let _x_9_0 = trans.uselect_654 ti_fun_defs_3_0 glob_object_7_0, _x_9_1 = _SystemArray.uselect_6 ti_instances_3_1 glob_object_7_0, _x_9_2 = _SystemArray.uselect_6 ti_cons_args_3_2 glob_object_7_0 in trans.transformFunctionApplication (select _x_9_0::_Tuple2 0) (select _x_9_1::_Tuple2 0) (select _x_9_2::_Tuple2 0) app_0 extra_args_1 ro_2 (update ti_3::trans._TransformInfo [0:select _x_9_0::_Tuple2 1,1:select _x_9_1::_Tuple2 1,2:select _x_9_2::_Tuple2 1])) (False -> case (StdList.isEmpty extra_args_1) (True -> <{_Tuple2!3}> (syntax.App app_0) ti_3) (False -> <{_Tuple2!3}> (syntax.App (update app_0::syntax._App [1:<{StdList.++}> app_args_1_1 extra_args_1])) ti_3) ) ) (False -> let glob_object_7_0::I = select gi_5_0::syntax._Global 0 in case (case (<{StdInt.==_16}> glob_module_5_1 (select ro_2::trans._ReadOnlyTI 6)) (True -> let type_9_0 = select (trans.select_683 (_SystemArray.select_43 (select ro_2::trans._ReadOnlyTI 0) glob_module_5_1) glob_object_7_0)::syntax._FunType 3 in case (case (<{StdInt.<_17}> 0 (select type_9_0::syntax._SymbolType 3)) (True -> StdBool.not (StdList.isEmpty (select type_9_0::syntax._SymbolType 5))) (False -> False) ) (True -> StdBool.not (StdList.isEmpty app_args_1_1)) (False -> False) ) (False -> False) ) (True -> let other_app_args_9_1 = select app_args_1_1::_Tuple2 1, args_9_2 = <{StdList.++}> other_app_args_9_1 extra_args_1 in case (StdList.isEmpty args_9_2) (True -> let _x_11_0 = select (select (select (select (select (trans.select_683 (_SystemArray.select_43 (select ro_2::trans._ReadOnlyTI 0) glob_module_5_1) glob_object_7_0)::syntax._FunType 3)::syntax._SymbolType 5)::_Tuple2 0)::syntax._TypeContext 0)::_Tuple1 0, glob_module_11_1::I = select _x_11_0::syntax._Global 1, ds_index_11_2::I = select (select _x_11_0::syntax._Global 0)::syntax._DefinedSymbol 2, cons_u_member_index_11_3::I = select (trans.select_699 (select (trans.select_731 (select (trans.select_667 (select ro_2::trans._ReadOnlyTI 1) glob_module_11_1)::syntax._CommonDefs 3) ds_index_11_2)::syntax._ClassDef 4) (trans.find_member_n_312 0 (select (select symb_1_0::syntax._SymbIdent 0)::syntax._Ident 0) (select (trans.select_731 (select (trans.select_667 (select ro_2::trans._ReadOnlyTI 1) glob_module_11_1)::syntax._CommonDefs 3) ds_index_11_2)::syntax._ClassDef 4)))::syntax._DefinedSymbol 2, _x_11_4 = trans.select_739 (select (trans.select_667 (select ro_2::trans._ReadOnlyTI 1) glob_module_11_1)::syntax._CommonDefs 4) cons_u_member_index_11_3 in trans.select_member_313 (select app_args_1_1::_Tuple2 0) (syntax._Global (syntax._DefinedSymbol (select _x_11_4::syntax._MemberDef 0) 1 cons_u_member_index_11_3) glob_module_11_1) (select _x_11_4::syntax._MemberDef 2) ti_3) (False -> let first_arg_11_0 = select app_args_1_1::_Tuple2 0, _x_11_1 = trans.select_683 (_SystemArray.select_43 (select ro_2::trans._ReadOnlyTI 0) glob_module_5_1) glob_object_7_0, ft_type_11_2 = select _x_11_1::syntax._FunType 3, _x_11_3::I = select ft_type_11_2::syntax._SymbolType 5, _x_11_4 = select _x_11_3::_Tuple2 0, _x_11_5 = select (select _x_11_4::syntax._TypeContext 0)::_Tuple1 0, glob_module_11_6 = select _x_11_5::syntax._Global 1, _x_11_7::I = select _x_11_5::syntax._Global 0, ds_index_11_8::I = select _x_11_7::syntax._DefinedSymbol 2, member_n_11_9::I = trans.find_member_n_312 0 (select (select symb_1_0::syntax._SymbIdent 0)::syntax._Ident 0) (select (trans.select_731 (select (trans.select_667 (select ro_2::trans._ReadOnlyTI 1) glob_module_11_6)::syntax._CommonDefs 3) ds_index_11_8)::syntax._ClassDef 4), cons_u_member_index_11_10 = select (trans.select_699 (select (trans.select_731 (select (trans.select_667 (select ro_2::trans._ReadOnlyTI 1) glob_module_11_6)::syntax._CommonDefs 3) ds_index_11_8)::syntax._ClassDef 4) member_n_11_9)::syntax._DefinedSymbol 2, _x_11_11::I = trans.select_739 (select (trans.select_667 (select ro_2::trans._ReadOnlyTI 1) glob_module_11_6)::syntax._CommonDefs 4) cons_u_member_index_11_10, me_ident_11_12 = select _x_11_11::syntax._MemberDef 0, select_symb_11_13 = syntax._Global (syntax._DefinedSymbol me_ident_11_12 1 cons_u_member_index_11_10) glob_module_11_6, me_offset_11_14 = select _x_11_11::syntax._MemberDef 2, _x_11_15 = trans.select_member_313 first_arg_11_0 select_symb_11_13 me_offset_11_14 ti_3, expr_11_16 = select _x_11_15::_Tuple2 0, ti_11_17 = select _x_11_15::_Tuple2 1 in <{trans._c;3192;19_1359}> expr_11_16 args_9_2 ro_2 ti_11_17) ) (False -> case (StdBool.not (StdList.isEmpty app_args_1_1)) (True -> let _x_10_0 = trans.select_683 (_SystemArray.select_43 (select ro_2::trans._ReadOnlyTI 0) glob_module_5_1) glob_object_7_0, ft_specials_10_1 = select _x_10_0::syntax._FunType 5, specials_10_2 = <{trans._c;3203;51_1360}> ft_specials_10_1 in case (StdBool.not (StdList.isEmpty specials_10_2)) (True -> let context_12_0 = select (select (trans.select_683 (_SystemArray.select_43 (select ro_2::trans._ReadOnlyTI 0) glob_module_5_1) glob_object_7_0)::syntax._FunType 3)::syntax._SymbolType 5, _x_12_1 = trans.map_st_956 app_args_1_1 (select ti_3::trans._TransformInfo 6), ei_12_2 = select _x_12_1::_Tuple2 0, insts_12_3 = trans.resolveContext context_12_0 ei_12_2, _x_12_4 = trans.findInstInSpecials insts_12_3 specials_10_2, special_gi_12_5 = select _x_12_4::_Tuple2 1 in case (trans.foundSpecial special_gi_12_5) (True -> trans.build_application_311 ro_2 (update app_0::syntax._App [0:update (select app_0::syntax._App 0)::syntax._SymbIdent [1:syntax.SK_Function special_gi_12_5]]) (StdList.drop (select _x_12_4::_Tuple2 0) app_args_1_1) extra_args_1 special_gi_12_5 (update ti_3::trans._TransformInfo [6:select _x_12_1::_Tuple2 1])) (False -> trans.build_application_311 ro_2 app_0 app_args_1_1 extra_args_1 gi_5_0 (update ti_3::trans._TransformInfo [6:select _x_12_1::_Tuple2 1])) ) (False -> trans.build_application_311 ro_2 app_0 app_args_1_1 extra_args_1 gi_5_0 ti_3) ) (False -> trans.build_application_311 ro_2 app_0 app_args_1_1 extra_args_1 gi_5_0 ti_3) ) ) ) (False -> case symb_kind_2_1 (syntax.SK_GeneratedFunction fun_def_ptr_5_0 fun_index_5_1 -> case (<{StdInt.<_17}> fun_index_5_1 (_SystemArray.size_4 ti_cons_args_3_2)) (True -> let _x_7_0 = trans.uselect_654 ti_fun_defs_3_0 fun_index_5_1, _x_7_1 = _SystemArray.uselect_6 ti_instances_3_1 fun_index_5_1, _x_7_2 = _SystemArray.uselect_6 ti_cons_args_3_2 fun_index_5_1 in trans.transformFunctionApplication (select _x_7_0::_Tuple2 0) (select _x_7_1::_Tuple2 0) (select _x_7_2::_Tuple2 0) app_0 extra_args_1 ro_2 (update ti_3::trans._TransformInfo [0:select _x_7_0::_Tuple2 1,1:select _x_7_1::_Tuple2 1,2:select _x_7_2::_Tuple2 1])) (False -> let _x_7_0 = Heap.readPtr fun_def_ptr_5_0 ti_fun_heap_3_4, _x_7_1 = select (select _x_7_0::_Tuple2 0)::_Tuple1 0 in trans.transformFunctionApplication (select _x_7_1::syntax._GeneratedFunction 0) (select _x_7_1::syntax._GeneratedFunction 1) (select _x_7_1::syntax._GeneratedFunction 2) app_0 extra_args_1 ro_2 (update ti_3::trans._TransformInfo [4:select _x_7_0::_Tuple2 1])) ) ) ) ) ) (_ -> case extra_args_1 (_predefined._Nil -> <{_Tuple2!3}> (syntax.App app_0) ti_3) (_ -> case app_0 (syntax._App app_symb_1_0 app_args_1_1 app_info_ptr_1_2 -> case app_symb_1_0 (syntax._SymbIdent symb_ident_2_0 _x_2_1 -> case _x_2_1 (syntax.SK_Constructor cons_index_3_0 -> case ti_3 (trans._TransformInfo ti_fun_defs_4_0 ti_instances_4_1 ti_cons_args_4_2 ti_new_functions_4_3 ti_fun_heap_4_4 ti_var_heap_4_5 ti_symbol_heap_4_6 ti_type_heaps_4_7 ti_type_def_infos_4_8 ti_next_fun_nr_4_9 ti_cleanup_info_4_10 ti_recursion_introduced_4_11 ti_error_file_4_12 ti_predef_symbols_4_13 -> let _x_5_0 = trans.complete_application_314 (select (select (trans.select_691 (select (trans.select_667 (select ro_2::trans._ReadOnlyTI 1) (select cons_index_3_0::syntax._Global 1))::syntax._CommonDefs 1) (select cons_index_3_0::syntax._Global 0))::syntax._ConsDef 1)::syntax._SymbolType 3) app_args_1_1 extra_args_1 in <{_Tuple2!3}> (trans.build_application_315 (update app_0::syntax._App [1:select _x_5_0::_Tuple2 0]) (select _x_5_0::_Tuple2 1)) ti_3) ) ) ) (_ -> <{_Tuple2!3}> (<{syntax.@}> (syntax.App app_0) extra_args_1) ti_3)))
trans.possiblyFoldOuterCase_157 case_expr_0 this_case_1 !ro_2 ti_3 = case ro_2 (trans._ReadOnlyTI ro_imported_funs_1_0 ro_common_defs_1_1 ro_root_case_mode_1_2 ro_tfi_1_3 ro_main_dcl_module_n_1_4 ro_transform_fusion_1_5 ro_StdStrictLists_module_n_1_6 ro_StdGeneric_module_n_1_7 -> case (case (<{StdInt.<_17}> (select ro_tfi_1_3::trans._TransformFunctionInfo 5) 0) (True -> True) (False -> <{StdInt.<_17}> (select ro_tfi_1_3::trans._TransformFunctionInfo 6) 0) ) (True -> trans.skip_over this_case_1 ro_2 ti_3) (False -> trans.transformApplication (trans.make_consumer_application ro_tfi_1_3 case_expr_0) _predefined._Nil ro_2 ti_3) ) 
trans.match_and_instantiate_algebraic_type_991 ro_0 !_x_1 cons_index_2 app_args_3 !_x_4 case_default_5 ro_6 ti_7 = case _x_1 (<{_predefined._!Cons!}> linearity_1_0 linearities_1_1 -> case _x_4 (_predefined._Cons _x_2_0 guards_2_1 -> case _x_2_0 (syntax._AlgebraicPattern _x_3_0 ap_vars_3_1 ap_expr_3_2 ap_position_3_3 -> case _x_3_0 (syntax._Global _x_4_0 glob_module_4_1 -> case _x_4_0 (syntax._DefinedSymbol ds_ident_5_0 ds_arity_5_1 ds_index_5_2 -> case (case (<{StdInt.==_16}> (select cons_index_2::syntax._Global 1) glob_module_4_1) (True -> <{StdInt.==_16}> (select cons_index_2::syntax._Global 0) ds_index_5_2) (False -> False) ) (True -> let cons_type_7_0 = select (trans.select_691 (select (trans.select_667 (select ro_6::trans._ReadOnlyTI 1) glob_module_4_1)::syntax._CommonDefs 1) ds_index_5_2)::syntax._ConsDef 1 in trans.instantiate_992 ro_0 linearity_1_0 app_args_3 ap_vars_3_1 ap_expr_3_2 (select cons_type_7_0::syntax._SymbolType 2) (select cons_type_7_0::syntax._SymbolType 1) ti_7) (False -> trans.match_and_instantiate_algebraic_type_991 ro_0 linearities_1_1 cons_index_2 app_args_3 guards_2_1 case_default_5 ro_6 ti_7) ) ) ) ) ) (_ -> case _x_4 (_predefined._Nil -> trans.transform_987 case_default_5 (update ro_6::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_7) )
trans.match_and_instantiate_overloaded_list_997 ro_0 !_x_1 cons_index_2 app_args_3 !_x_4 case_default_5 ro_6 ti_7 = case _x_1 (<{_predefined._!Cons!}> linearity_1_0 linearities_1_1 -> case cons_index_2 (syntax._Global cons_ds_index_2_0 cons_glob_module_2_1 -> case _x_4 (_predefined._Cons _x_3_0 guards_3_1 -> case _x_3_0 (syntax._AlgebraicPattern _x_4_0 ap_vars_4_1 ap_expr_4_2 ap_position_4_3 -> case _x_4_0 (syntax._Global _x_5_0 glob_module_5_1 -> case _x_5_0 (syntax._DefinedSymbol ds_ident_6_0 ds_arity_6_1 ds_index_6_2 -> case (trans.equal_list_contructor_141 glob_module_5_1 ds_index_6_2 cons_glob_module_2_1 cons_ds_index_2_0) (True -> let cons_type_8_0 = select (trans.select_691 (select (trans.select_667 (select ro_6::trans._ReadOnlyTI 1) cons_glob_module_2_1)::syntax._CommonDefs 1) cons_ds_index_2_0)::syntax._ConsDef 1 in trans.instantiate_992 ro_0 linearity_1_0 app_args_3 ap_vars_4_1 ap_expr_4_2 (select cons_type_8_0::syntax._SymbolType 2) (select cons_type_8_0::syntax._SymbolType 1) ti_7) (False -> trans.match_and_instantiate_overloaded_list_997 ro_0 linearities_1_1 cons_index_2 app_args_3 guards_3_1 case_default_5 ro_6 ti_7) ) ) ) ) ) ) (_ -> case _x_4 (_predefined._Nil -> trans.transform_987 case_default_5 (update ro_6::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_7) )
trans.match_and_instantiate_990 ro_0 !linearities_1 cons_index_2 app_args_3 !_x_4 case_default_5 ro_6 ti_7 = case _x_4 (syntax.AlgebraicPatterns _x_1_0 algebraicPatterns_1_1 -> trans.match_and_instantiate_algebraic_type_991 ro_0 linearities_1 cons_index_2 app_args_3 algebraicPatterns_1_1 case_default_5 ro_6 ti_7) (syntax.OverloadedListPatterns _x_1_0 _x_1_1 algebraicPatterns_1_2 -> case _x_1_0 (syntax.OverloadedList _x_2_0 _x_2_1 _x_2_2 _x_2_3 -> trans.match_and_instantiate_overloaded_list_997 ro_0 linearities_1 cons_index_2 app_args_3 algebraicPatterns_1_2 case_default_5 ro_6 ti_7) ) 
trans.match_and_instantiate_overloaded_cons_boxed_match_1001 ro_0 !_x_1 app_args_2 !_x_3 case_default_4 ro_5 ti_6 = case _x_1 (<{_predefined._!Cons!}> linearity_1_0 linearities_1_1 -> case _x_3 (_predefined._Cons _x_2_0 guards_2_1 -> case _x_2_0 (syntax._AlgebraicPattern _x_3_0 ap_vars_3_1 ap_expr_3_2 ap_position_3_3 -> case _x_3_0 (syntax._Global _x_4_0 glob_module_4_1 -> case _x_4_0 (syntax._DefinedSymbol ds_ident_5_0 ds_arity_5_1 ds_index_5_2 -> case (<{StdInt.==_16}> glob_module_4_1 1) (True -> let index_7_0::I = <{StdInt.+_6}> ds_index_5_2 44 in case (case (<{StdInt.==_16}> index_7_0 44) (True -> True) (False -> case (<{StdInt.==_16}> index_7_0 45) (True -> True) (False -> case (<{StdInt.==_16}> index_7_0 47) (True -> True) (False -> <{StdInt.==_16}> index_7_0 48) ) ) ) (True -> let cons_type_9_0 = select (trans.select_691 (select (trans.select_667 (select ro_5::trans._ReadOnlyTI 1) glob_module_4_1)::syntax._CommonDefs 1) ds_index_5_2)::syntax._ConsDef 1 in trans.instantiate_992 ro_0 linearity_1_0 app_args_2 ap_vars_3_1 ap_expr_3_2 (select cons_type_9_0::syntax._SymbolType 2) (select cons_type_9_0::syntax._SymbolType 1) ti_6) (False -> trans.match_and_instantiate_overloaded_cons_boxed_match_1001 ro_0 linearities_1_1 app_args_2 guards_2_1 case_default_4 ro_5 ti_6) ) ) ) ) ) ) (_ -> case _x_3 (_predefined._Nil -> trans.transform_987 case_default_4 (update ro_5::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_6) )
trans.instantiate_992 ro_0 linearity_1 app_args_2 ap_vars_3 ap_expr_4 cons_type_args_strictness_5 cons_type_args_6 ti_7 = let zipped_ap_vars_and_args_1_0 = StdList.zip2 ap_vars_3 app_args_2, _x_1_1 = trans.body_strict_993 ap_vars_3 app_args_2 ap_expr_4 ap_vars_3 ro_0 (select ti_7::trans._TransformInfo 0) (select ti_7::trans._TransformInfo 4), unfoldables_1_2 = <{trans.c;702;72_994}> cons_type_args_strictness_5 (select _x_1_1::_Tuple3 0) linearity_1 app_args_2 0, ti_1_3 = update ti_7::trans._TransformInfo [0:select _x_1_1::_Tuple3 1,4:select _x_1_1::_Tuple3 2], _x_1_4 = trans.possibly_add_let zipped_ap_vars_and_args_1_0 ap_expr_4 (StdList.map StdBool.not unfoldables_1_2) cons_type_args_6 ro_0 (select ti_1_3::trans._TransformInfo 6) cons_type_args_strictness_5, unfoldable_args_1_5 = trans.filterWith unfoldables_1_2 zipped_ap_vars_and_args_1_0, _x_1_6 = trans.copy_513 (select _x_1_4::_Tuple2 0) (trans._CopyInfo trans.LeaveAciFreeVars) (trans._CopyState (trans.fold_st_995 unfoldable_args_1_5 (select ti_1_3::trans._TransformInfo 5)) (select _x_1_4::_Tuple2 1) general.No (select ti_1_3::trans._TransformInfo 10)), copy_state_1_7 = select _x_1_6::_Tuple2 1, _x_1_8 = trans.transform_469 (select _x_1_6::_Tuple2 0) (update ro_0::trans._ReadOnlyTI [2:trans.NotRootCase]) (update ti_1_3::trans._TransformInfo [5:trans.fold_st_996 unfoldable_args_1_5 (select copy_state_1_7::trans._CopyState 0),6:select copy_state_1_7::trans._CopyState 1,10:select copy_state_1_7::trans._CopyState 3]) in _Tuple2 (general.Yes (select _x_1_8::_Tuple2 0)) (select _x_1_8::_Tuple2 1)
trans.match_and_instantiate_overloaded_cons_overloaded_match_1002 ro_0 cons_function_type_1 !_x_2 app_args_3 !_x_4 case_default_5 ro_6 ti_7 = case _x_2 (<{_predefined._!Cons!}> linearity_1_0 linearities_1_1 -> case _x_4 (_predefined._Cons _x_2_0 guards_2_1 -> case _x_2_0 (syntax._AlgebraicPattern _x_3_0 ap_vars_3_1 ap_expr_3_2 ap_position_3_3 -> case _x_3_0 (syntax._Global _x_4_0 glob_module_4_1 -> case _x_4_0 (syntax._DefinedSymbol ds_ident_5_0 ds_arity_5_1 ds_index_5_2 -> case (<{StdInt.==_16}> glob_module_4_1 1) (True -> let index_7_0::I = <{StdInt.+_6}> ds_index_5_2 44 in case (case (<{StdInt.==_16}> index_7_0 46) (True -> True) (False -> case (<{StdInt.==_16}> index_7_0 49) (True -> True) (False -> <{StdInt.==_16}> index_7_0 50) ) ) (True -> trans.instantiate_992 ro_0 linearity_1_0 app_args_3 ap_vars_3_1 ap_expr_3_2 (select cons_function_type_1::syntax._SymbolType 2) (select cons_function_type_1::syntax._SymbolType 1) ti_7) (False -> trans.match_and_instantiate_overloaded_cons_overloaded_match_1002 ro_0 cons_function_type_1 linearities_1_1 app_args_3 guards_2_1 case_default_5 ro_6 ti_7) ) ) ) ) ) ) (_ -> case _x_4 (_predefined._Nil -> trans.transform_987 case_default_5 (update ro_6::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_7) )
trans.match_and_instantiate_overloaded_cons_1000 ro_0 cons_function_type_1 !linearities_2 app_args_3 !_x_4 case_default_5 ro_6 ti_7 = case _x_4 (syntax.AlgebraicPatterns _x_1_0 algebraicPatterns_1_1 -> trans.match_and_instantiate_overloaded_cons_boxed_match_1001 ro_0 linearities_2 app_args_3 algebraicPatterns_1_1 case_default_5 ro_6 ti_7) (syntax.OverloadedListPatterns _x_1_0 _x_1_1 algebraicPatterns_1_2 -> trans.match_and_instantiate_overloaded_cons_overloaded_match_1002 ro_0 cons_function_type_1 linearities_2 app_args_3 algebraicPatterns_1_2 case_default_5 ro_6 ti_7) 
trans.instantiate_1003 ro_0 linearity_1 app_args_2 ap_vars_3 ap_expr_4 cons_type_args_strictness_5 cons_type_args_6 ti_7 = let zipped_ap_vars_and_args_1_0 = StdList.zip2 ap_vars_3 app_args_2, _x_1_1 = trans.body_strict_993 ap_vars_3 app_args_2 ap_expr_4 ap_vars_3 ro_0 (select ti_7::trans._TransformInfo 0) (select ti_7::trans._TransformInfo 4), unfoldables_1_2 = <{trans.c;702;72_1004}> cons_type_args_strictness_5 (select _x_1_1::_Tuple3 0) linearity_1 app_args_2 0, ti_1_3 = update ti_7::trans._TransformInfo [0:select _x_1_1::_Tuple3 1,4:select _x_1_1::_Tuple3 2], _x_1_4 = trans.possibly_add_let zipped_ap_vars_and_args_1_0 ap_expr_4 (StdList.map StdBool.not unfoldables_1_2) cons_type_args_6 ro_0 (select ti_1_3::trans._TransformInfo 6) cons_type_args_strictness_5, unfoldable_args_1_5 = trans.filterWith unfoldables_1_2 zipped_ap_vars_and_args_1_0, _x_1_6 = trans.copy_513 (select _x_1_4::_Tuple2 0) (trans._CopyInfo trans.LeaveAciFreeVars) (trans._CopyState (trans.fold_st_995 unfoldable_args_1_5 (select ti_1_3::trans._TransformInfo 5)) (select _x_1_4::_Tuple2 1) general.No (select ti_1_3::trans._TransformInfo 10)), copy_state_1_7 = select _x_1_6::_Tuple2 1, _x_1_8 = trans.transform_469 (select _x_1_6::_Tuple2 0) (update ro_0::trans._ReadOnlyTI [2:trans.NotRootCase]) (update ti_1_3::trans._TransformInfo [5:trans.fold_st_996 unfoldable_args_1_5 (select copy_state_1_7::trans._CopyState 0),6:select copy_state_1_7::trans._CopyState 1,10:select copy_state_1_7::trans._CopyState 3]) in _Tuple2 (general.Yes (select _x_1_8::_Tuple2 0)) (select _x_1_8::_Tuple2 1)
trans.match_and_instantiate_nil_146 ro_0 !_x_1 case_default_2 ro_3 ti_4 = case _x_1 (_predefined._Cons _x_1_0 guards_1_1 -> case _x_1_0 (syntax._AlgebraicPattern _x_2_0 ap_vars_2_1 ap_expr_2_2 ap_position_2_3 -> case _x_2_0 (syntax._Global _x_3_0 glob_module_3_1 -> case _x_3_0 (syntax._DefinedSymbol ds_ident_4_0 ds_arity_4_1 ds_index_4_2 -> case (<{StdInt.==_16}> glob_module_3_1 1) (True -> let index_6_0::I = <{StdInt.+_6}> ds_index_4_2 44 in case (case (<{StdInt.==_16}> index_6_0 51) (True -> True) (False -> case (<{StdInt.==_16}> index_6_0 52) (True -> True) (False -> case (<{StdInt.==_16}> index_6_0 54) (True -> True) (False -> case (<{StdInt.==_16}> index_6_0 55) (True -> True) (False -> case (<{StdInt.==_16}> index_6_0 57) (True -> True) (False -> case (<{StdInt.==_16}> index_6_0 53) (True -> True) (False -> <{StdInt.==_16}> index_6_0 56) ) ) ) ) ) ) (True -> trans.instantiate_1003 ro_0 _predefined._Nil _predefined._Nil _predefined._Nil ap_expr_2_2 syntax.NotStrict _predefined._Nil ti_4) (False -> trans.match_and_instantiate_nil_146 ro_0 guards_1_1 case_default_2 ro_3 ti_4) ) ) ) ) ) (_predefined._Nil -> trans.transform_987 case_default_2 (update ro_3::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_4) 
trans.match_and_instantiate_overloaded_nil_145 ro_0 !_x_1 case_default_2 ro_3 ti_4 = case _x_1 (syntax.OverloadedListPatterns _x_1_0 _x_1_1 algebraicPatterns_1_2 -> trans.match_and_instantiate_nil_146 ro_0 algebraicPatterns_1_2 case_default_2 ro_3 ti_4) (syntax.AlgebraicPatterns _x_1_0 algebraicPatterns_1_1 -> trans.match_and_instantiate_nil_146 ro_0 algebraicPatterns_1_1 case_default_2 ro_3 ti_4) 
trans.trans_case_of_overloaded_nil_or_cons_161 app_args_0 aci_1 case_ident_2 !case_guards_3 case_default_4 ro_5 !type_6 ti_7 = case (<{StdInt.==_16}> (select type_6::syntax._SymbolType 3) 0) (True -> let _x_2_0 = trans.match_and_instantiate_overloaded_nil_145 ro_5 case_guards_3 case_default_4 ro_5 ti_7 in trans.expr_or_never_matching_case_163 ro_5 (select _x_2_0::_Tuple2 0) case_ident_2 (select _x_2_0::_Tuple2 1)) (False -> let _x_2_0 = trans.match_and_instantiate_overloaded_cons_1000 ro_5 type_6 (select aci_1::syntax._ActiveCaseInfo 3) app_args_0 case_guards_3 case_default_4 ro_5 ti_7 in trans.expr_or_never_matching_case_163 ro_5 (select _x_2_0::_Tuple2 0) case_ident_2 (select _x_2_0::_Tuple2 1)) 
trans.transform_471 !bind_0 !ro_1 !ti_2 = case bind_0 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> let _x_2_0 = trans.transform_469 lb_src_1_1 ro_1 ti_2 in <{_Tuple2!3}> (update bind_0::syntax._LetBind [1:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
trans.transform_954 !_x_0 !ro_1 !ti_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let _x_2_0 = trans.transform_471 x_1_0 ro_1 ti_2, _x_2_1 = trans.transform_954 xs_1_1 ro_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (_predefined._Nil -> <{_Tuple2!3}> _predefined._Nil ti_2) 
trans.transform_active_root_case aci_0 !this_case_1 ro_2 ti_3 = case this_case_1 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> case case_expr_1_0 (syntax.Case case_in_case_2_0 -> trans.lift_case_131 aci_0 case_in_case_2_0 this_case_1 ro_2 ti_3) (syntax.App app_2_0 -> case app_2_0 (syntax._App app_symb_3_0 app_args_3_1 app_info_ptr_3_2 -> <{trans._c;500;7_1354}> (select app_symb_3_0::syntax._SymbIdent 1) ro_2 aci_0 app_args_3_1 case_guards_1_1 case_default_1_2 ti_3 case_ident_1_3 this_case_1 app_symb_3_0 case_expr_1_0) ) (syntax.BasicExpr basic_value_2_0 -> case case_guards_1_1 (syntax.BasicPatterns _x_3_0 basicPatterns_3_1 -> <{trans._c;762;7_1357}> (<{trans.c;761;36_164}> basic_value_2_0 basicPatterns_3_1) case_default_1_2 ro_2 ti_3 this_case_1) ) (syntax.Let lad_2_0 -> let ro_not_root_3_0 = update ro_2::trans._ReadOnlyTI [2:trans.NotRootCase], _x_3_1 = trans.transform_954 (select lad_2_0::syntax._Let 0) ro_not_root_3_0 ti_3, _x_3_2 = trans.transform_954 (select lad_2_0::syntax._Let 1) ro_not_root_3_0 (select _x_3_1::_Tuple2 1), _x_3_3 = trans.transform_469 (syntax.Case (update this_case_1::syntax._Case [0:select lad_2_0::syntax._Let 2])) ro_2 (select _x_3_2::_Tuple2 1) in _Tuple2 (syntax.Let (update lad_2_0::syntax._Let [0:select _x_3_1::_Tuple2 0,1:select _x_3_2::_Tuple2 0,2:select _x_3_3::_Tuple2 0])) (select _x_3_3::_Tuple2 1)) ) (_ -> trans.skip_over this_case_1 ro_2 ti_3)
trans.transform_active_non_root_case !kees_0 !aci_1 !ro_2 !ti_3 = case kees_0 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> case case_expr_1_0 (syntax.App _x_2_0 -> case _x_2_0 (syntax._App app_symb_3_0 app_args_3_1 app_info_ptr_3_2 -> case aci_1 (syntax._ActiveCaseInfo aci_params_4_0 aci_opt_unfolder_4_1 aci_free_vars_4_2 aci_linearity_of_patterns_4_3 aci_safe_4_4 -> case ti_3 (trans._TransformInfo ti_fun_defs_5_0 ti_instances_5_1 ti_cons_args_5_2 ti_new_functions_5_3 ti_fun_heap_5_4 ti_var_heap_5_5 ti_symbol_heap_5_6 ti_type_heaps_5_7 ti_type_def_infos_5_8 ti_next_fun_nr_5_9 ti_cleanup_info_5_10 old_ti_recursion_introduced_5_11 ti_error_file_5_12 ti_predef_symbols_5_13 -> case (StdBool.not (select aci_1::syntax._ActiveCaseInfo 4)) (True -> trans.skip_over kees_0 ro_2 ti_3) (False -> case (trans.is_safe_producer_747 (select app_symb_3_0::syntax._SymbIdent 1) ro_2 (select ti_3::trans._TransformInfo 4) (select ti_3::trans._TransformInfo 2)) (True -> let _x_8_0 = trans.free_variables_of_expression_1006 (syntax.Case (update kees_0::syntax._Case [0:syntax.EE])) ti_3, ti_8_1 = select _x_8_0::_Tuple2 1, _x_8_2 = trans.get_fun_def_and_cons_args (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 0)::syntax._SymbIdent 1) (select ti_8_1::trans._TransformInfo 2) (select ti_8_1::trans._TransformInfo 0) (select ti_8_1::trans._TransformInfo 4), outer_fun_def_8_3 = select _x_8_2::_Tuple5 0, outer_arguments_8_4 = <{trans._c;873;19_1339}> (select outer_fun_def_8_3::syntax._FunDef 3), outer_info_ptrs_8_5 = <{trans.c;876;43_168}> outer_arguments_8_4, free_vars_8_6 = select _x_8_0::_Tuple2 0, lifted_arguments_8_7 = <{trans.c;882;33_172}> outer_info_ptrs_8_5 free_vars_8_6, free_var_info_ptrs_8_8 = <{trans.c;877;47_169}> free_vars_8_6, used_mask_8_9 = <{trans.c;878;64_170}> free_var_info_ptrs_8_8 outer_arguments_8_4, arguments_from_outer_fun_8_10 = <{trans.c;879;90_171}> outer_arguments_8_4 used_mask_8_9, all_args_8_11 = <{StdList.++}> lifted_arguments_8_7 arguments_from_outer_fun_8_10 in case (<{StdInt.<_17}> 32 (<{StdInt.+_6}> 1 (StdList.length_47 all_args_8_11))) (True -> case (select ro_2::trans._ReadOnlyTI 5) (True -> let ti_11_0 = update ti_8_1::trans._TransformInfo [0:select _x_8_2::_Tuple5 3,2:select _x_8_2::_Tuple5 2,4:select _x_8_2::_Tuple5 4,11:general.No] in trans.skip_over kees_0 ro_2 (update ti_11_0::trans._TransformInfo [12:<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (select ti_11_0::trans._TransformInfo 12) "Possibly missed fusion oppurtunity: Case Arity > 32 ") (select (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 0)::syntax._SymbIdent 0)::syntax._Ident 0)) "\n"])) (False -> trans.skip_over kees_0 ro_2 (update ti_8_1::trans._TransformInfo [0:select _x_8_2::_Tuple5 3,2:select _x_8_2::_Tuple5 2,4:select _x_8_2::_Tuple5 4,11:general.No])) ) (False -> let _x_10_0::I = Heap.newPtr syntax.FI_Empty (select _x_8_2::_Tuple5 4), ti_10_1 = update ti_8_1::trans._TransformInfo [0:select _x_8_2::_Tuple5 3,2:select _x_8_2::_Tuple5 2,4:select _x_10_0::_Tuple2 1], fun_index_10_2 = select ti_10_1::trans._TransformInfo 9 in trans.generate_case_function_with_pattern_argument fun_index_10_2 case_info_ptr_1_4 (syntax.Case kees_0) outer_fun_def_8_3 (select _x_8_2::_Tuple5 1) used_mask_8_9 (syntax._SymbIdent (syntax._Ident (<{StdString.+++_11}> (select (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 0)::syntax._SymbIdent 0)::syntax._Ident 0) "_case") Heap.nilPtr) (syntax.SK_GeneratedFunction (select _x_10_0::_Tuple2 0) -1)) all_args_8_11 (update ti_10_1::trans._TransformInfo [9:<{StdInt.+_6}> fun_index_10_2 1])) ) ) ) ) ) ) (_ -> case aci_1 (syntax._ActiveCaseInfo aci_params_2_0 aci_opt_unfolder_2_1 aci_free_vars_2_2 aci_linearity_of_patterns_2_3 aci_safe_2_4 -> case ti_3 (trans._TransformInfo ti_fun_defs_3_0 ti_instances_3_1 ti_cons_args_3_2 ti_new_functions_3_3 ti_fun_heap_3_4 ti_var_heap_3_5 ti_symbol_heap_3_6 ti_type_heaps_3_7 ti_type_def_infos_3_8 ti_next_fun_nr_3_9 ti_cleanup_info_3_10 old_ti_recursion_introduced_3_11 ti_error_file_3_12 ti_predef_symbols_3_13 -> case (StdBool.not (select aci_1::syntax._ActiveCaseInfo 4)) (True -> trans.skip_over kees_0 ro_2 ti_3) (False -> let _x_5_0 = trans.free_variables_of_expression_1006 (syntax.Case kees_0) ti_3, ti_5_1 = select _x_5_0::_Tuple2 1, _x_5_2 = trans.get_fun_def_and_cons_args (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 0)::syntax._SymbIdent 1) (select ti_5_1::trans._TransformInfo 2) (select ti_5_1::trans._TransformInfo 0) (select ti_5_1::trans._TransformInfo 4), outer_fun_def_5_3 = select _x_5_2::_Tuple5 0, outer_arguments_5_4 = <{trans._c;911;15_1340}> (select outer_fun_def_5_3::syntax._FunDef 3), outer_info_ptrs_5_5 = <{trans.c;914;39_173}> outer_arguments_5_4, free_vars_5_6 = select _x_5_0::_Tuple2 0, lifted_arguments_5_7 = <{trans.c;920;29_177}> outer_info_ptrs_5_5 free_vars_5_6, free_var_info_ptrs_5_8 = <{trans.c;915;43_174}> free_vars_5_6, used_mask_5_9 = <{trans.c;916;60_175}> free_var_info_ptrs_5_8 outer_arguments_5_4, arguments_from_outer_fun_5_10 = <{trans.c;917;86_176}> outer_arguments_5_4 used_mask_5_9, all_args_5_11 = <{StdList.++}> lifted_arguments_5_7 arguments_from_outer_fun_5_10 in case (<{StdInt.<_17}> 32 (StdList.length_47 all_args_5_11)) (True -> case (select ro_2::trans._ReadOnlyTI 5) (True -> let ti_8_0 = update ti_5_1::trans._TransformInfo [0:select _x_5_2::_Tuple5 3,2:select _x_5_2::_Tuple5 2,4:select _x_5_2::_Tuple5 4,11:general.No] in trans.skip_over kees_0 ro_2 (update ti_8_0::trans._TransformInfo [12:<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (<{StdFile.<<<_38}> (select ti_8_0::trans._TransformInfo 12) "Possibly missed fusion oppurtunity: Case Arity > 32 ") (select (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 0)::syntax._SymbIdent 0)::syntax._Ident 0)) "\n"])) (False -> trans.skip_over kees_0 ro_2 (update ti_5_1::trans._TransformInfo [0:select _x_5_2::_Tuple5 3,2:select _x_5_2::_Tuple5 2,4:select _x_5_2::_Tuple5 4,11:general.No])) ) (False -> let fun_ident_7_0 = syntax._Ident (<{StdString.+++_11}> (select (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 0)::syntax._SymbIdent 0)::syntax._Ident 0) "_case") Heap.nilPtr, ti_fun_heap_7_1 = select _x_5_2::_Tuple5 4, _x_7_2 = Heap.newPtr syntax.FI_Empty ti_fun_heap_7_1, fun_info_ptr_7_3 = select _x_7_2::_Tuple2 0, fun_symb_7_4 = syntax._SymbIdent fun_ident_7_0 (syntax.SK_GeneratedFunction fun_info_ptr_7_3 -1), new_ro_7_5 = update ro_2::trans._ReadOnlyTI [2:trans.RootCaseOfZombie,3:update (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo [1:fun_symb_7_4,2:all_args_5_11,5:-1,6:-1]], ti_fun_defs_7_6 = select _x_5_2::_Tuple5 3, ti_cons_args_7_7 = select _x_5_2::_Tuple5 2, ti_fun_heap_7_8 = select _x_7_2::_Tuple2 1, ti_7_9 = update ti_5_1::trans._TransformInfo [0:ti_fun_defs_7_6,2:ti_cons_args_7_7,4:ti_fun_heap_7_8,11:general.No], _x_7_10 = trans.transformCase kees_0 new_ro_7_5 ti_7_9, ti_7_11 = select _x_7_10::_Tuple2 1, _x_7_12 = select ti_7_11::trans._TransformInfo 11, ti_7_13 = select _x_7_12::_Tuple2 1, new_expr_7_14 = select _x_7_10::_Tuple2 0, outer_cons_args_7_15 = select _x_5_2::_Tuple5 1 in <{trans._c;946;7_1343}> (select _x_7_12::_Tuple2 0) case_info_ptr_1_4 new_expr_7_14 outer_fun_def_5_3 outer_cons_args_7_15 used_mask_5_9 new_ro_7_5 ti_7_13 old_ti_recursion_introduced_3_11) ) ) ) )) 
trans.transform_987 !_x_0 !ro_1 !ti_2 = case _x_0 (general.Yes x_1_0 -> let _x_2_0 = trans.transform_469 x_1_0 ro_1 ti_2 in <{_Tuple2!3}> (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (_ -> <{_Tuple2!3}> _x_0 ti_2)
trans.transform_472 !pattern_0 !ro_1 !ti_2 = case pattern_0 (syntax._BasicPattern bp_value_1_0 bp_expr_1_1 bp_position_1_2 -> let _x_2_0 = trans.transform_469 bp_expr_1_1 ro_1 ti_2 in <{_Tuple2!3}> (update pattern_0::syntax._BasicPattern [1:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
trans.transform_989 !_x_0 !ro_1 !ti_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let _x_2_0 = trans.transform_472 x_1_0 ro_1 ti_2, _x_2_1 = trans.transform_989 xs_1_1 ro_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (_predefined._Nil -> <{_Tuple2!3}> _predefined._Nil ti_2) 
trans.transform_473 !pattern_0 !ro_1 !ti_2 = case pattern_0 (syntax._AlgebraicPattern ap_symbol_1_0 ap_vars_1_1 ap_expr_1_2 ap_position_1_3 -> let _x_2_0 = trans.transform_469 ap_expr_1_2 ro_1 ti_2 in <{_Tuple2!3}> (update pattern_0::syntax._AlgebraicPattern [2:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
trans.transform_988 !_x_0 !ro_1 !ti_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let _x_2_0 = trans.transform_473 x_1_0 ro_1 ti_2, _x_2_1 = trans.transform_988 xs_1_1 ro_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (_predefined._Nil -> <{_Tuple2!3}> _predefined._Nil ti_2) 
trans.transform_474 !_x_0 !ro_1 !ti_2 = case _x_0 (syntax.AlgebraicPatterns type_1_0 patterns_1_1 -> let _x_2_0 = trans.transform_988 patterns_1_1 ro_1 ti_2 in <{_Tuple2!3}> (syntax.AlgebraicPatterns type_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.BasicPatterns type_1_0 patterns_1_1 -> let _x_2_0 = trans.transform_989 patterns_1_1 ro_1 ti_2 in <{_Tuple2!3}> (syntax.BasicPatterns type_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.OverloadedListPatterns type_1_0 decons_expr_1_1 patterns_1_2 -> case type_1_0 (syntax.OverloadedList _x_2_0 _x_2_1 _x_2_2 _x_2_3 -> let _x_3_0 = trans.transform_988 patterns_1_2 ro_1 ti_2, _x_3_1 = trans.transform_469 decons_expr_1_1 ro_1 (select _x_3_0::_Tuple2 1) in <{_Tuple2!3}> (syntax.OverloadedListPatterns type_1_0 (select _x_3_1::_Tuple2 0) (select _x_3_0::_Tuple2 0)) (select _x_3_1::_Tuple2 1)) (_ -> let _x_2_0 = trans.transform_988 patterns_1_2 ro_1 ti_2, _x_2_1 = trans.transform_469 decons_expr_1_1 ro_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (syntax.OverloadedListPatterns type_1_0 (select _x_2_1::_Tuple2 0) (select _x_2_0::_Tuple2 0)) (select _x_2_1::_Tuple2 1))) (syntax.NoPattern -> <{_Tuple2!3}> syntax.NoPattern ti_2) (_ -> StdMisc.abort "transform CasePatterns does not match")
trans.skip_over !this_case_0 ro_1 ti_2 = case this_case_0 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> case case_expr_1_0 (syntax.BasicExpr basic_value_2_0 -> case case_guards_1_1 (syntax.BasicPatterns basic_type_3_0 basicPatterns_3_1 -> <{trans._c;328;7_1338}> (<{trans.c;327;36_120}> basic_value_2_0 basicPatterns_3_1) case_default_1_2 ro_1 ti_2 case_expr_1_0 this_case_0 basic_type_3_0 case_guards_1_1) ) (_ -> let ro_lost_root_2_0 = update ro_1::trans._ReadOnlyTI [2:trans.NotRootCase], _x_2_1 = trans.transform_469 case_expr_1_0 ro_lost_root_2_0 ti_2, _x_2_2 = trans.transform_474 case_guards_1_1 ro_lost_root_2_0 (select _x_2_1::_Tuple2 1), _x_2_3 = trans.transform_987 case_default_1_2 ro_lost_root_2_0 (select _x_2_2::_Tuple2 1) in _Tuple2 (syntax.Case (update this_case_0::syntax._Case [0:select _x_2_1::_Tuple2 0,1:select _x_2_2::_Tuple2 0,2:select _x_2_3::_Tuple2 0])) (select _x_2_3::_Tuple2 1))) 
trans.transformCase !this_case_0 !ro_1 ti_2 = case this_case_0 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> case (StdBool.not (select ro_1::trans._ReadOnlyTI 5)) (True -> trans.skip_over this_case_0 ro_1 ti_2) (False -> case (Heap.isNilPtr case_info_ptr_1_4) (True -> trans.skip_over this_case_0 ro_1 ti_2) (False -> let _x_4_0 = Heap.readPtr case_info_ptr_1_4 (select ti_2::trans._TransformInfo 6), _x_4_1 = <{trans._c;307;27_1336}> (select _x_4_0::_Tuple2 0) case_expr_1_0 this_case_0 ro_1 ti_2 ti_symbol_heap_4_3, ti_4_2 = select _x_4_1::_Tuple2 1, ti_symbol_heap_4_3 = select _x_4_0::_Tuple2 1 in _Tuple2 (trans.removeNeverMatchingSubcases (select _x_4_1::_Tuple2 0) ro_1) (update ti_4_2::trans._TransformInfo [6:trans.remove_aci_free_vars_info case_info_ptr_1_4 (select ti_4_2::trans._TransformInfo 6)])) ) ) 
trans.transform_remaining_selectors_of_normal_record_selector !selectors_0 !app_1 ro_2 ti_3 = case selectors_0 (_predefined._Cons record_selector_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> <{_Tuple2!3}> (syntax.Selection syntax.NormalSelector app_1 selectors_0) ti_3) (_ -> let _x_2_0 = trans.transform_expressions_in_selectors _x_1_1 ro_2 ti_3 in <{_Tuple2!3}> (syntax.Selection syntax.NormalSelector app_1 (_predefined._Cons record_selector_1_0 (select _x_2_0::_Tuple2 0))) (select _x_2_0::_Tuple2 1))) 
trans.transformSelection !_x_0 !s_1 !app_2 ro_3 ti_4 = case _x_0 (syntax.NormalSelector -> case s_1 (_predefined._Cons _x_2_0 selectors_2_1 -> case _x_2_0 (syntax.RecordSelection _x_3_0 field_index_3_1 -> case app_2 (syntax.App appi_4_0 -> case appi_4_0 (syntax._App app_symb_5_0 app_args_5_1 app_info_ptr_5_2 -> case app_symb_5_0 (syntax._SymbIdent symb_ident_6_0 _x_6_1 -> case _x_6_1 (syntax.SK_Constructor _x_7_0 -> case ti_4 (trans._TransformInfo ti_fun_defs_8_0 ti_instances_8_1 ti_cons_args_8_2 ti_new_functions_8_3 ti_fun_heap_8_4 ti_var_heap_8_5 ti_symbol_heap_8_6 ti_type_heaps_8_7 ti_type_def_infos_8_8 ti_next_fun_nr_8_9 ti_cleanup_info_8_10 ti_recursion_introduced_8_11 ti_error_file_8_12 ti_predef_symbols_8_13 -> case (Heap.isNilPtr app_info_ptr_5_2) (True -> case (trans.cnf_app_args_317 appi_4_0 ro_3) (True -> trans.transformSelection syntax.NormalSelector selectors_2_1 (<{StdList.!!}> app_args_5_1 field_index_3_1) ro_3 ti_4) (False -> trans.transform_remaining_selectors_of_normal_record_selector s_1 app_2 ro_3 ti_4) ) (False -> let _x_10_0 = Heap.readPtr app_info_ptr_5_2 ti_symbol_heap_8_6, ti_symbol_heap_10_1 = select _x_10_0::_Tuple2 1 in <{trans._c;3312;7_1332}> (select _x_10_0::_Tuple2 0) selectors_2_1 app_args_5_1 field_index_3_1 ro_3 ti_4 ti_symbol_heap_10_1 appi_4_0 s_1 app_2) ) ) (_ -> case (case (trans.isOKSymbol_318 ro_3 _x_6_1) (True -> StdList.isEmpty app_args_5_1) (False -> False) ) (True -> let _x_8_0 = trans.get_fun_def _x_6_1 (select ro_3::trans._ReadOnlyTI 4) (select ti_4::trans._TransformInfo 0) (select ti_4::trans._TransformInfo 4), fun_def_8_1 = select _x_8_0::_Tuple3 0 in case (trans.is_not_caf_319 (select fun_def_8_1::syntax._FunDef 6)) (True -> let ti_fun_defs_10_0 = select _x_8_0::_Tuple3 1, ti_fun_heap_10_1 = select _x_8_0::_Tuple3 2 in <{trans._c;3343;15_1334}> (select fun_def_8_1::syntax._FunDef 3) s_1 ro_3 ti_4 ti_fun_defs_10_0 ti_fun_heap_10_1 app_2) (False -> trans.transform_remaining_selectors_of_normal_record_selector s_1 app_2 ro_3 (update ti_4::trans._TransformInfo [0:select _x_8_0::_Tuple3 1,4:select _x_8_0::_Tuple3 2])) ) )) ) ) ) ) (_predefined._Nil -> <{_Tuple2!3}> app_2 ti_4) ) (_ -> let _x_1_0 = trans.transform_expressions_in_selectors s_1 ro_3 ti_4 in <{_Tuple2!3}> (syntax.Selection _x_0 app_2 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1))
trans.transform_expressions_in_selectors !_x_0 ro_1 ti_2 = case _x_0 (_predefined._Cons selection_1_0 selections_1_1 -> case selection_1_0 (syntax.RecordSelection _x_2_0 _x_2_1 -> let _x_3_0 = trans.transform_expressions_in_selectors selections_1_1 ro_1 ti_2 in _Tuple2 (_predefined._Cons selection_1_0 (select _x_3_0::_Tuple2 0)) (select _x_3_0::_Tuple2 1)) (syntax.ArraySelection ds_2_0 ep_2_1 expr_2_2 -> let _x_3_0 = trans.transform_469 expr_2_2 ro_1 ti_2, _x_3_1 = trans.transform_expressions_in_selectors selections_1_1 ro_1 (select _x_3_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (syntax.ArraySelection ds_2_0 ep_2_1 (select _x_3_0::_Tuple2 0)) (select _x_3_1::_Tuple2 0)) (select _x_3_1::_Tuple2 1)) (syntax.DictionarySelection bv_2_0 dictionary_selections_2_1 ep_2_2 expr_2_3 -> let _x_3_0 = trans.transform_469 expr_2_3 ro_1 ti_2, _x_3_1 = trans.transform_expressions_in_selectors dictionary_selections_2_1 ro_1 (select _x_3_0::_Tuple2 1), _x_3_2 = trans.transform_expressions_in_selectors selections_1_1 ro_1 (select _x_3_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (syntax.DictionarySelection bv_2_0 (select _x_3_1::_Tuple2 0) ep_2_2 (select _x_3_0::_Tuple2 0)) (select _x_3_2::_Tuple2 0)) (select _x_3_2::_Tuple2 1)) ) (_predefined._Nil -> _Tuple2 _predefined._Nil ti_2) 
trans.transform_fields_955 !_x_0 ro_1 ti_2 = case _x_0 (_predefined._Nil -> _Tuple2 _predefined._Nil ti_2) (_predefined._Cons bind_1_0 fields_1_1 -> case bind_1_0 (general._Bind bind_src_2_0 bind_dst_2_1 -> let _x_3_0 = trans.transform_469 bind_src_2_0 ro_1 ti_2, _x_3_1 = trans.transform_fields_955 fields_1_1 ro_1 (select _x_3_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (update bind_1_0::general._Bind [0:select _x_3_0::_Tuple2 0]) (select _x_3_1::_Tuple2 0)) (select _x_3_1::_Tuple2 1)) ) 
trans.transform_470 !dyn_0 !ro_1 !ti_2 = case dyn_0 (syntax._DynamicExpr dyn_expr_1_0 dyn_opt_type_1_1 dyn_info_ptr_1_2 dyn_type_code_1_3 -> let _x_2_0 = trans.transform_469 dyn_expr_1_0 ro_1 ti_2 in <{_Tuple2!3}> (update dyn_0::syntax._DynamicExpr [0:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
trans.transform_469 !_x_0 !ro_1 !ti_2 = case _x_0 (syntax.App app_1_0 -> case app_1_0 (syntax._App app_symb_2_0 app_args_2_1 app_info_ptr_2_2 -> let _x_3_0 = trans.transform_953 app_args_2_1 ro_1 ti_2 in trans.transformApplication (update app_1_0::syntax._App [1:select _x_3_0::_Tuple2 0]) _predefined._Nil ro_1 (select _x_3_0::_Tuple2 1)) ) (<{syntax.@}> expr_1_0 exprs_1_1 -> let _x_2_0 = trans.transform_469 expr_1_0 ro_1 ti_2, expr_2_1 = select _x_2_0::_Tuple2 0, ti_2_2 = select _x_2_0::_Tuple2 1 in <{trans._c;203;11_1331}> expr_2_1 exprs_1_1 ro_1 ti_2_2) (syntax.Let lad_1_0 -> case lad_1_0 (syntax._Let let_strict_binds_2_0 let_lazy_binds_2_1 let_expr_2_2 let_info_ptr_2_3 let_expr_position_2_4 -> let _x_3_0 = trans.transform_954 let_strict_binds_2_0 ro_1 (trans.store_type_info_of_bindings_in_heap_421 lad_1_0 ti_2), _x_3_1 = trans.transform_954 let_lazy_binds_2_1 ro_1 (select _x_3_0::_Tuple2 1), _x_3_2 = trans.transform_469 let_expr_2_2 ro_1 (select _x_3_1::_Tuple2 1) in <{_Tuple2!3}> (syntax.Let (update lad_1_0::syntax._Let [0:select _x_3_0::_Tuple2 0,1:select _x_3_1::_Tuple2 0,2:select _x_3_2::_Tuple2 0])) (select _x_3_2::_Tuple2 1)) ) (syntax.Case kees_1_0 -> trans.transformCase kees_1_0 ro_1 (trans.store_type_info_of_patterns_in_heap_423 kees_1_0 ti_2)) (syntax.Selection opt_type_1_0 expr_1_1 selectors_1_2 -> let _x_2_0 = trans.transform_469 expr_1_1 ro_1 ti_2 in trans.transformSelection opt_type_1_0 selectors_1_2 (select _x_2_0::_Tuple2 0) ro_1 (select _x_2_0::_Tuple2 1)) (syntax.Update expr1_1_0 selectors_1_1 expr2_1_2 -> let _x_2_0 = trans.transform_469 expr1_1_0 ro_1 ti_2, _x_2_1 = trans.transform_expressions_in_selectors selectors_1_1 ro_1 (select _x_2_0::_Tuple2 1), _x_2_2 = trans.transform_469 expr2_1_2 ro_1 (select _x_2_1::_Tuple2 1) in <{_Tuple2!3}> (syntax.Update (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) (select _x_2_2::_Tuple2 1)) (syntax.RecordUpdate cons_symbol_1_0 expr_1_1 exprs_1_2 -> let _x_2_0 = trans.transform_469 expr_1_1 ro_1 ti_2, _x_2_1 = trans.transform_fields_955 exprs_1_2 ro_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (syntax.RecordUpdate cons_symbol_1_0 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (syntax.TupleSelect a1_1_0 arg_nr_1_1 expr_1_2 -> let _x_2_0 = trans.transform_469 expr_1_2 ro_1 ti_2 in <{_Tuple2!3}> (syntax.TupleSelect a1_1_0 arg_nr_1_1 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.MatchExpr a1_1_0 expr_1_1 -> let _x_2_0 = trans.transform_469 expr_1_1 ro_1 ti_2 in <{_Tuple2!3}> (syntax.MatchExpr a1_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.IsConstructor expr_1_0 cons_symbol_1_1 cons_arity_1_2 global_type_index_1_3 case_ident_1_4 position_1_5 -> let _x_2_0 = trans.transform_469 expr_1_0 ro_1 ti_2 in <{_Tuple2!3}> (syntax.IsConstructor (select _x_2_0::_Tuple2 0) cons_symbol_1_1 cons_arity_1_2 global_type_index_1_3 case_ident_1_4 position_1_5) (select _x_2_0::_Tuple2 1)) (syntax.DynamicExpr dynamic_expr_1_0 -> let _x_2_0 = trans.transform_470 dynamic_expr_1_0 ro_1 ti_2 in <{_Tuple2!3}> (syntax.DynamicExpr (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.DictionariesFunction dictionaries_1_0 expr_1_1 expr_type_1_2 -> let _x_2_0 = trans.transform_469 expr_1_1 ro_1 ti_2 in <{_Tuple2!3}> (syntax.DictionariesFunction dictionaries_1_0 (select _x_2_0::_Tuple2 0) expr_type_1_2) (select _x_2_0::_Tuple2 1)) (_ -> <{_Tuple2!3}> _x_0 ti_2)
<{trans._c;491;51_1372}> !expr_info_0 new_info_ptr_1 cs_cleanup_info_2 = case expr_info_0 (syntax.EI_Extended _x_1_0 _x_1_1 -> _predefined._Cons new_info_ptr_1 cs_cleanup_info_2) (_ -> cs_cleanup_info_2)
<{trans._c;455;15_1371}> !_x_0 final_1::B guard_expr_2 outer_case_3 !ro_4 ti_5 ro_tfi_6 = case _x_0 (general.No -> <{trans.possiblyFoldOuterCase`_136}> final_1 guard_expr_2 outer_case_3 ro_4 ti_5) (general.Yes _x_1_0 -> trans.transformApplication (trans.make_consumer_application ro_tfi_6 guard_expr_2) _predefined._Nil ro_4 ti_5) 
<{trans._c;398;28_1370}>::B !case_default_0 = case case_default_0 (general.Yes _x_1_0 -> True) (general.No -> False) 
<{trans._c;1747;27_1369}> !n_extra_0::I _x_1 fun_def_ptr_2 new_gen_fd_3 tb_rhs_4 fd_5 ti_next_fun_nr_6::I new_fun_arity_7::I ti_8 ti_fun_defs_9 ti_cons_args_10 ti_new_functions_11 ti_fun_heap_12 var_heap_13 cs_symbol_heap_14 all_type_vars_15 das_AV_16 ti_type_def_infos_17 cs_cleanup_info_18 ti_predef_symbols_19 new_fun_args_20 fresh_result_type_21 ro_22 = case n_extra_0 (0 -> let ptr_and_val_2_0 = _Tuple2 fun_def_ptr_2 (syntax.FI_Function new_gen_fd_3), ti_type_heaps_2_1 = select (select _x_1::trans._CopyState 2)::_Tuple1 0 in _Tuple2 tb_rhs_4 (trans.arity_warning_1012 "generateFunction" (select (select fd_5::syntax._FunDef 0)::syntax._Ident 0) ti_next_fun_nr_6 new_fun_arity_7 (update ti_8::trans._TransformInfo [0:ti_fun_defs_9,2:ti_cons_args_10,3:_predefined._Cons fun_def_ptr_2 ti_new_functions_11,4:Heap.writePtr (select ptr_and_val_2_0::_Tuple2 0) (select ptr_and_val_2_0::_Tuple2 1) ti_fun_heap_12,5:var_heap_13,6:cs_symbol_heap_14,7:update ti_type_heaps_2_1::syntax._TypeHeaps [0:trans.remove_TVI_Type_values all_type_vars_15 (select ti_type_heaps_2_1::syntax._TypeHeaps 0),1:trans.fold_st_981 das_AV_16 (select ti_type_heaps_2_1::syntax._TypeHeaps 1)],8:ti_type_def_infos_17,9:<{StdInt.+_6}> ti_next_fun_nr_6 StdInt.one_11,10:cs_cleanup_info_18,13:ti_predef_symbols_19]))) (_ -> let ptr_and_val_1_0 = _Tuple2 fun_def_ptr_2 (syntax.FI_Function new_gen_fd_3), ti_type_heaps_1_1 = select (select _x_1::trans._CopyState 2)::_Tuple1 0 in trans.add_args_to_fun_body (StdList.map trans.f2b_214 (StdList.reverse (StdList.take n_extra_0 (StdList.reverse new_fun_args_20)))) fresh_result_type_21 tb_rhs_4 ro_22 (trans.arity_warning_1012 "generateFunction" (select (select fd_5::syntax._FunDef 0)::syntax._Ident 0) ti_next_fun_nr_6 new_fun_arity_7 (update ti_8::trans._TransformInfo [0:ti_fun_defs_9,2:ti_cons_args_10,3:_predefined._Cons fun_def_ptr_2 ti_new_functions_11,4:Heap.writePtr (select ptr_and_val_1_0::_Tuple2 0) (select ptr_and_val_1_0::_Tuple2 1) ti_fun_heap_12,5:var_heap_13,6:cs_symbol_heap_14,7:update ti_type_heaps_1_1::syntax._TypeHeaps [0:trans.remove_TVI_Type_values all_type_vars_15 (select ti_type_heaps_1_1::syntax._TypeHeaps 0),1:trans.fold_st_981 das_AV_16 (select ti_type_heaps_1_1::syntax._TypeHeaps 1)],8:ti_type_def_infos_17,9:<{StdInt.+_6}> ti_next_fun_nr_6 StdInt.one_11,10:cs_cleanup_info_18,13:ti_predef_symbols_19])))
<{trans._c;1714;27_1368}> !tb_rhs_0 = case tb_rhs_0 (syntax.Case _x_1_0 -> trans.RootCase) (_ -> trans.NotRootCase)
<{trans._if;1720;11_1367}> !_x_0::B var_heap_1 tb_args_2 new_fun_args_3 = case _x_0 (True -> _Tuple3 -1 -1 var_heap_1) (_ -> trans.n_args_before_producer_and_n_producer_args_241 tb_args_2 new_fun_args_3 var_heap_1)
<{trans._if;1710;18_1366}> !_x_0::B !var_heap_1 das_removed_equal_info_ptr_2 = case _x_0 (True -> var_heap_1) (_ -> trans.writeVarInfo das_removed_equal_info_ptr_2 syntax.VI_Empty var_heap_1)
<{trans._c;2785;11_1365}> !_x_0 app_1 app_symb_2 app_args_3 !extra_args_4 !ti_5 ro_6 = case _x_0 (general.No -> <{_Tuple2!3}> (trans.build_application_284 (update app_1::syntax._App [0:app_symb_2,1:app_args_3]) extra_args_4) ti_5) (general.Yes tb_rhs_1_0 -> case tb_rhs_1_0 (syntax.App app_2_0 -> let _x_3_0 = trans.is_cycle_of_trivial_function_calls_279 (select (select app_2_0::syntax._App 0)::syntax._SymbIdent 1) app_args_3 (_predefined._Cons (select app_symb_2::syntax._SymbIdent 1) _predefined._Nil) ro_6 ti_5 in case (StdBool.not (select _x_3_0::_Tuple2 0)) (True -> trans.transformApplication app_2_0 extra_args_4 ro_6 (select _x_3_0::_Tuple2 1)) (False -> case (StdList.isEmpty extra_args_4) (True -> <{_Tuple2!3}> tb_rhs_1_0 (select _x_3_0::_Tuple2 1)) (False -> <{_Tuple2!3}> (<{syntax.@}> tb_rhs_1_0 extra_args_4) (select _x_3_0::_Tuple2 1)) ) ) (_ -> case (StdList.isEmpty extra_args_4) (True -> <{_Tuple2!3}> tb_rhs_1_0 ti_5) (False -> <{_Tuple2!3}> (<{syntax.@}> tb_rhs_1_0 extra_args_4) ti_5) )) 
trans._f1364_1364::B !_x_0::B app_args_1 cc_args_2 = case _x_0 (True -> StdList.isEmpty (<{trans.c;2712;47_271}> app_args_1 cc_args_2)) (_ -> False)
<{trans._c;2700;11_1363}> !opt_expr_0 !extra_args_1 ro_2 !ti_3 = case opt_expr_0 (general.Yes _x_1_0 -> case _x_1_0 (syntax.App app_2_0 -> trans.transformApplication app_2_0 extra_args_1 ro_2 ti_3) (_ -> case (StdList.isEmpty extra_args_1) (True -> <{_Tuple2!3}> _x_1_0 ti_3) (False -> <{_Tuple2!3}> (<{syntax.@}> _x_1_0 extra_args_1) ti_3) )) 
<{trans._c;2699;7_1362}>::B !opt_expr_0 = case opt_expr_0 (general.No -> False) (general.Yes _x_1_0 -> True) 
<{trans._c;2761;26_1361}>::B !_x_0 = case _x_0 (syntax.Expanding _x_1_0 -> True) (_ -> False)
<{trans._c;3203;51_1360}> !ft_specials_0 = case ft_specials_0 (syntax.FSP_ContextTypes s_1_0 -> s_1_0) (_ -> _predefined._Nil)
<{trans._c;3192;19_1359}> !expr_0 !args_1 ro_2 !ti_3 = case expr_0 (syntax.App app_1_0 -> trans.transformApplication app_1_0 args_1 ro_2 ti_3) (_ -> <{_Tuple2!3}> (<{syntax.@}> expr_0 args_1) ti_3)
<{trans._c;3163;15_1358}> !symb_kind_0 ro_1 = case symb_kind_0 (syntax.SK_Function global_index_1_0 -> global_index_1_0) (syntax.SK_LocalMacroFunction index_1_0 -> syntax._Global index_1_0 (select ro_1::trans._ReadOnlyTI 4)) 
<{trans._c;762;7_1357}> !_x_0 case_default_1 ro_2 ti_3 this_case_4 = case _x_0 (_predefined._Nil -> <{trans._c;764;16_1356}> case_default_1 ro_2 ti_3 this_case_4) (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (syntax._BasicPattern bp_value_2_0 bp_expr_2_1 bp_position_2_2 -> trans.transform_469 bp_expr_2_1 (update ro_2::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_3) ) 
<{trans._c;764;16_1356}> !case_default_0 ro_1 ti_2 this_case_3 = case case_default_0 (general.Yes default_expr_1_0 -> trans.transform_469 default_expr_1_0 (update ro_1::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_2) (general.No -> _Tuple2 (trans.neverMatchingCase (<{trans._c;770;39_1355}> (select ro_1::trans._ReadOnlyTI 2) this_case_3 ro_1)) ti_2) 
<{trans._c;770;39_1355}> !_x_0 this_case_1 ro_2 = case _x_0 (trans.NotRootCase -> select this_case_1::syntax._Case 3) (_ -> general.Yes (select (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 1)::syntax._SymbIdent 0))
<{trans._c;500;7_1354}> !_x_0 ro_1 aci_2 app_args_3 case_guards_4 case_default_5 ti_6 case_ident_7 this_case_8 app_symb_9 case_expr_10 = case _x_0 (syntax.SK_Constructor cons_index_1_0 -> let _x_2_0 = trans.match_and_instantiate_990 ro_1 (select aci_2::syntax._ActiveCaseInfo 3) cons_index_1_0 app_args_3 case_guards_4 case_default_5 ro_1 ti_6 in trans.expr_or_never_matching_case_163 ro_1 (select _x_2_0::_Tuple2 0) case_ident_7 (select _x_2_0::_Tuple2 1)) (syntax.SK_Function _x_1_0 -> case _x_1_0 (syntax._Global glob_object_2_0 glob_module_2_1 -> case (trans._f1345_1345 (<{StdInt.==_16}> glob_module_2_1 (select ro_1::trans._ReadOnlyTI 6)) ro_1 glob_module_2_1 glob_object_2_0 app_args_3) (True -> trans.trans_case_of_overloaded_nil_or_cons_161 app_args_3 aci_2 case_ident_7 case_guards_4 case_default_5 ro_1 (select (trans.select_683 (_SystemArray.select_43 (select ro_1::trans._ReadOnlyTI 0) glob_module_2_1) glob_object_2_0)::syntax._FunType 3) ti_6) (False -> case (trans._f1348_1348 (<{StdInt.==_16}> glob_module_2_1 (select ro_1::trans._ReadOnlyTI 4)) glob_object_2_0 ti_6 app_args_3) (True -> let _x_5_0 = select (trans.select_651 (select ti_6::trans._TransformInfo 0) glob_object_2_0)::syntax._FunDef 4 in trans.trans_case_of_overloaded_nil_or_cons_161 app_args_3 aci_2 case_ident_7 case_guards_4 case_default_5 ro_1 (select (select _x_5_0::_Tuple2 0)::_Tuple1 0) (select _x_5_0::_Tuple2 1)) ) ) ) (_ -> <{trans._c;521;16_1353}> (select aci_2::syntax._ActiveCaseInfo 1) this_case_8 ro_1 ti_6 app_symb_9 case_expr_10 aci_2 app_args_3)
<{trans._c;521;16_1353}> !_x_0 this_case_1 ro_2 ti_3 app_symb_4 case_expr_5 aci_6 app_args_7 = case _x_0 (general.No -> trans.skip_over this_case_1 ro_2 ti_3) (general.Yes unfolder_1_0 -> case (StdBool.not (trans.equal_158 (select app_symb_4::syntax._SymbIdent 1) (select unfolder_1_0::syntax._SymbIdent 1))) (True -> trans.possiblyFoldOuterCase_157 case_expr_5 this_case_1 ro_2 ti_3) (False -> let _x_3_0 = <{trans._c;531;27_1352}> (select ro_2::trans._ReadOnlyTI 2) ti_3 ro_2, _x_3_1 = trans.transform_953 (trans.replace_arg_159 (<{trans.c;549;61_138}> (select aci_6::syntax._ActiveCaseInfo 0)) app_args_7 (<{trans.c;529;37_137}> (select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 2))) (update ro_2::trans._ReadOnlyTI [2:trans.NotRootCase]) (select _x_3_0::_Tuple2 1) in _Tuple2 (syntax.App (syntax._App (select _x_3_0::_Tuple2 0) (select _x_3_1::_Tuple2 0) Heap.nilPtr)) (select _x_3_1::_Tuple2 1)) ) 
<{trans._c;531;27_1352}> !_x_0 ti_1 ro_2 = case _x_0 (trans.RootCaseOfZombie -> let _x_2_0 = select ti_1::trans._TransformInfo 11, ti_2_1 = select _x_2_0::_Tuple2 1 in <{trans._c;535;36_1351}> (select _x_2_0::_Tuple2 0) ti_2_1 ro_2 _x_0 ti_1) (_ -> <{trans._c;531;27_1349}> _x_0 ro_2 ti_1)
<{trans._c;535;36_1351}> !_x_0 ti_1 ro_2 _x_3 ti_4 = case _x_0 (general.No -> let ro_fun_2_0 = select (select ro_2::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 1, fun_info_ptr_2_1::I = select (select ro_fun_2_0::syntax._SymbIdent 1)::_Tuple2 0, _x_2_2 = select ti_1::trans._TransformInfo 9, ti_next_fun_nr_2_3 = select _x_2_2::_Tuple2 0, ti_2_4 = select _x_2_2::_Tuple2 1 in _Tuple2 (update ro_fun_2_0::syntax._SymbIdent [1:syntax.SK_GeneratedFunction fun_info_ptr_2_1 ti_next_fun_nr_2_3]) (update ti_2_4::trans._TransformInfo [3:_predefined._Cons fun_info_ptr_2_1 (select ti_2_4::trans._TransformInfo 3),9:<{StdInt.+_6}> ti_next_fun_nr_2_3 StdInt.one_11,11:general.Yes (trans._RI ti_next_fun_nr_2_3 fun_info_ptr_2_1)])) (general.Yes _x_1_0 -> trans._f1350_1350 _x_1_0 ro_2 ti_1 _x_3 ti_4) 
trans._f1350_1350 !_x_0 !ro_1 ti_2 _x_3 ti_4 = case _x_0 (trans._RI ri_fun_index_1_0 ri_fun_ptr_1_1 -> let ro_fun_2_0 = select (select ro_1::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 1, _x_2_1 = select ro_fun_2_0::syntax._SymbIdent 1, fun_info_ptr_2_2 = select _x_2_1::_Tuple2 0 in case (<{Heap.==_10}> ri_fun_ptr_1_1 fun_info_ptr_2_2) (True -> _Tuple2 (update ro_fun_2_0::syntax._SymbIdent [1:syntax.SK_GeneratedFunction fun_info_ptr_2_2 ri_fun_index_1_0]) ti_2) ) (_ -> <{trans._c;531;27_1349}> _x_3 ro_1 ti_4)
<{trans._c;531;27_1349}> !_x_0 ro_1 ti_2 = case _x_0 (trans.RootCase -> _Tuple2 (select (select ro_1::trans._ReadOnlyTI 3)::trans._TransformFunctionInfo 0) (update ti_2::trans._TransformInfo [11:general.No])) 
trans._f1348_1348::B !_x_0::B glob_object_1::I ti_2 app_args_3 = case _x_0 (True -> case (StdBool.not (<{StdInt.<_17}> glob_object_1 (_SystemArray.size_4 (select ti_2::trans._TransformInfo 2)))) (True -> case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select (trans.select_651 (select ti_2::trans._TransformInfo 0) glob_object_1)::syntax._FunDef 8)::syntax._FunInfo 6) 8) 0)) (True -> <{trans._c;514;18_1347}> (select (trans.select_651 (select ti_2::trans._TransformInfo 0) glob_object_1)::syntax._FunDef 4) app_args_3) (False -> False) ) (False -> False) ) (_ -> False)
<{trans._c;514;18_1347}>::B !_x_0 app_args_1 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.==_16}> (select type_1_0::syntax._SymbolType 3) 0) (True -> True) (False -> case (<{StdInt.==_16}> (select type_1_0::syntax._SymbolType 3) 2) (True -> <{trans._c;515;74_1346}> app_args_1) (False -> False) ) ) 
<{trans._c;515;74_1346}>::B !app_args_0 = case app_args_0 (_predefined._Cons _x_1_0 _x_1_1 -> True) (_ -> False)
trans._f1345_1345::B !_x_0::B ro_1 glob_module_2::I glob_object_3::I app_args_4 = case _x_0 (True -> let type_2_0 = select (trans.select_683 (_SystemArray.select_43 (select ro_1::trans._ReadOnlyTI 0) glob_module_2) glob_object_3)::syntax._FunType 3 in case (<{StdInt.==_16}> (select type_2_0::syntax._SymbolType 3) 0) (True -> True) (False -> case (<{StdInt.==_16}> (select type_2_0::syntax._SymbolType 3) 2) (True -> <{trans._c;509;63_1344}> app_args_4) (False -> False) ) ) (_ -> False)
<{trans._c;509;63_1344}>::B !app_args_0 = case app_args_0 (_predefined._Cons _x_1_0 _x_1_1 -> True) (_ -> False)
<{trans._c;946;7_1343}> !_x_0 case_info_ptr_1 !new_expr_2 outer_fun_def_3 outer_cons_args_4 used_mask_5 new_ro_6 !ti_7 !old_ti_recursion_introduced_8 = case _x_0 (general.Yes _x_1_0 -> trans._f1342_1342 _x_1_0 case_info_ptr_1 new_expr_2 outer_fun_def_3 outer_cons_args_4 used_mask_5 new_ro_6 ti_7 old_ti_recursion_introduced_8 _x_0) (_ -> <{trans._c;946;7_1341}> _x_0 new_expr_2 ti_7 old_ti_recursion_introduced_8)
trans._f1342_1342 !_x_0 !case_info_ptr_1 !new_expr_2 outer_fun_def_3 outer_cons_args_4 used_mask_5 !new_ro_6 !ti_7 !old_ti_recursion_introduced_8 _x_9 = case _x_0 (trans._RI ri_fun_index_1_0 ri_fun_ptr_1_1 -> trans.generate_case_function ri_fun_index_1_0 case_info_ptr_1 new_expr_2 outer_fun_def_3 outer_cons_args_4 used_mask_5 new_ro_6 (update ti_7::trans._TransformInfo [11:old_ti_recursion_introduced_8])) (_ -> <{trans._c;946;7_1341}> _x_9 new_expr_2 ti_7 old_ti_recursion_introduced_8)
<{trans._c;946;7_1341}> !_x_0 !new_expr_1 !ti_2 !old_ti_recursion_introduced_3 = case _x_0 (general.No -> <{_Tuple2!3}> new_expr_1 (update ti_2::trans._TransformInfo [11:old_ti_recursion_introduced_3])) 
<{trans._c;911;15_1340}> !_x_0 = case _x_0 (syntax.TransformedBody _x_1_0 -> case _x_1_0 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> tb_args_2_0) ) (syntax.Expanding args_1_0 -> args_1_0) 
<{trans._c;873;19_1339}> !_x_0 = case _x_0 (syntax.TransformedBody _x_1_0 -> case _x_1_0 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> tb_args_2_0) ) (syntax.Expanding args_1_0 -> args_1_0) 
<{trans._c;328;7_1338}> !_x_0 case_default_1 ro_2 ti_3 case_expr_4 this_case_5 basic_type_6 case_guards_7 = case _x_0 (_predefined._Nil -> <{trans._c;330;16_1337}> case_default_1 ro_2 ti_3 case_expr_4 this_case_5 basic_type_6) (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (syntax._BasicPattern bp_value_2_0 bp_expr_2_1 bp_position_2_2 -> case _x_1_1 (_predefined._Nil -> case (trans.case_alt_matches_always bp_expr_2_1 ro_2) (True -> trans.transform_469 bp_expr_2_1 (update ro_2::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_3) ) ) ) (_ -> let ro_lost_root_1_0 = update ro_2::trans._ReadOnlyTI [2:trans.NotRootCase], _x_1_1 = trans.transform_469 case_expr_4 ro_lost_root_1_0 ti_3, _x_1_2 = trans.transform_474 case_guards_7 ro_lost_root_1_0 (select _x_1_1::_Tuple2 1), _x_1_3 = trans.transform_987 case_default_1 ro_lost_root_1_0 (select _x_1_2::_Tuple2 1) in _Tuple2 (syntax.Case (update this_case_5::syntax._Case [0:select _x_1_1::_Tuple2 0,1:select _x_1_2::_Tuple2 0,2:select _x_1_3::_Tuple2 0])) (select _x_1_3::_Tuple2 1))
<{trans._c;330;16_1337}> !case_default_0 ro_1 ti_2 case_expr_3 this_case_4 basic_type_5 = case case_default_0 (general.Yes default_expr_1_0 -> trans.transform_469 default_expr_1_0 (update ro_1::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_2) (general.No -> let _x_2_0 = trans.transform_469 case_expr_3 (update ro_1::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_2 in _Tuple2 (syntax.Case (update this_case_4::syntax._Case [0:select _x_2_0::_Tuple2 0,1:syntax.BasicPatterns basic_type_5 _predefined._Nil])) (select _x_2_0::_Tuple2 1)) 
<{trans._c;307;27_1336}> !_x_0 case_expr_1 !this_case_2 ro_3 ti_4 ti_symbol_heap_5 = case _x_0 (syntax.EI_Extended _x_1_0 _x_1_1 -> case _x_1_0 (syntax.EEI_ActiveCase aci_2_0 -> case (trans.is_variable_119 case_expr_1) (True -> trans.skip_over this_case_2 ro_3 (update ti_4::trans._TransformInfo [6:ti_symbol_heap_5])) (False -> <{trans._c;311;36_1335}> (select ro_3::trans._ReadOnlyTI 2) this_case_2 aci_2_0 ro_3 ti_4 ti_symbol_heap_5) ) ) (_ -> trans.skip_over this_case_2 ro_3 (update ti_4::trans._TransformInfo [6:ti_symbol_heap_5]))
<{trans._c;311;36_1335}> !_x_0 !this_case_1 aci_2 ro_3 ti_4 ti_symbol_heap_5 = case _x_0 (trans.NotRootCase -> trans.transform_active_non_root_case this_case_1 aci_2 ro_3 (update ti_4::trans._TransformInfo [6:ti_symbol_heap_5])) (_ -> trans.transform_active_root_case aci_2 this_case_1 ro_3 (update ti_4::trans._TransformInfo [6:ti_symbol_heap_5]))
<{trans._c;3343;15_1334}> !_x_0 !s_1 ro_2 ti_3 ti_fun_defs_4 ti_fun_heap_5 app_6 = case _x_0 (syntax.TransformedBody _x_1_0 -> case _x_1_0 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> <{trans._c;3344;48_1333}> tb_rhs_2_1 s_1 ro_2 ti_3 ti_fun_defs_4 ti_fun_heap_5 app_6) ) 
<{trans._c;3344;48_1333}> !tb_rhs_0 !s_1 ro_2 ti_3 ti_fun_defs_4 ti_fun_heap_5 app_6 = case tb_rhs_0 (syntax.App app_1_0 -> trans.transformSelection syntax.NormalSelector s_1 tb_rhs_0 ro_2 (update ti_3::trans._TransformInfo [0:ti_fun_defs_4,4:ti_fun_heap_5])) (_ -> trans.transform_remaining_selectors_of_normal_record_selector s_1 app_6 ro_2 (update ti_3::trans._TransformInfo [0:ti_fun_defs_4,4:ti_fun_heap_5]))
<{trans._c;3312;7_1332}> !_x_0 selectors_1 app_args_2 field_index_3::I ro_4 ti_5 ti_symbol_heap_6 appi_7 s_8 app_9 = case _x_0 (syntax.EI_DictionaryType _x_1_0 -> trans.transformSelection syntax.NormalSelector selectors_1 (<{StdList.!!}> app_args_2 field_index_3) ro_4 (update ti_5::trans._TransformInfo [6:ti_symbol_heap_6])) (_ -> case (trans.cnf_app_args_317 appi_7 ro_4) (True -> trans.transformSelection syntax.NormalSelector selectors_1 (<{StdList.!!}> app_args_2 field_index_3) ro_4 (update ti_5::trans._TransformInfo [6:ti_symbol_heap_6])) (False -> trans.transform_remaining_selectors_of_normal_record_selector s_8 app_9 ro_4 (update ti_5::trans._TransformInfo [6:ti_symbol_heap_6])) )
<{trans._c;203;11_1331}> !expr_0 !exprs_1 !ro_2 !ti_3 = case expr_0 (syntax.App app_1_0 -> let _x_2_0 = trans.transform_953 exprs_1 ro_2 ti_3 in trans.transformApplication app_1_0 (select _x_2_0::_Tuple2 0) ro_2 (select _x_2_0::_Tuple2 1)) (_ -> let _x_1_0 = trans.transform_953 exprs_1 ro_2 ti_3 in <{_Tuple2!3}> (<{syntax.@}> expr_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1))
trans.instantiate_162 !_vList_0 ro_1 linearity_2 app_args_3 ap_vars_4 ap_expr_5 cons_type_args_strictness_6 cons_type_args_7 ti_8 = let zipped_ap_vars_and_args_1_0 = StdList.zip2 ap_vars_4 app_args_3, _x_1_1 = trans.body_strict_993 ap_vars_4 app_args_3 ap_expr_5 ap_vars_4 ro_1 (select ti_8::trans._TransformInfo 0) (select ti_8::trans._TransformInfo 4), unfoldables_1_2 = <{trans.c;702;72_148}> _vList_0 cons_type_args_strictness_6 (select _x_1_1::_Tuple3 0) linearity_2 app_args_3 0, ti_1_3 = update ti_8::trans._TransformInfo [0:select _x_1_1::_Tuple3 1,4:select _x_1_1::_Tuple3 2], _x_1_4 = trans.possibly_add_let zipped_ap_vars_and_args_1_0 ap_expr_5 (StdList.map StdBool.not unfoldables_1_2) cons_type_args_7 ro_1 (select ti_1_3::trans._TransformInfo 6) cons_type_args_strictness_6, unfoldable_args_1_5 = trans.filterWith unfoldables_1_2 zipped_ap_vars_and_args_1_0, _x_1_6 = trans.copy_513 (select _x_1_4::_Tuple2 0) (trans._CopyInfo trans.LeaveAciFreeVars) (trans._CopyState (trans.fold_st_995 unfoldable_args_1_5 (select ti_1_3::trans._TransformInfo 5)) (select _x_1_4::_Tuple2 1) general.No (select ti_1_3::trans._TransformInfo 10)), copy_state_1_7 = select _x_1_6::_Tuple2 1, _x_1_8 = trans.transform_469 (select _x_1_6::_Tuple2 0) (update ro_1::trans._ReadOnlyTI [2:trans.NotRootCase]) (update ti_1_3::trans._TransformInfo [5:trans.fold_st_996 unfoldable_args_1_5 (select copy_state_1_7::trans._CopyState 0),6:select copy_state_1_7::trans._CopyState 1,10:select copy_state_1_7::trans._CopyState 3]) in _Tuple2 (general.Yes (select _x_1_8::_Tuple2 0)) (select _x_1_8::_Tuple2 1)
trans.match_and_instantiate_overloaded_cons_overloaded_match_144 !_vList_0 ro_1 cons_function_type_2 !_x_3 app_args_4 !_x_5 case_default_6 ro_7 ti_8 = case _x_3 (<{_predefined._!Cons!}> linearity_1_0 linearities_1_1 -> case _x_5 (_predefined._Cons _x_2_0 guards_2_1 -> case _x_2_0 (syntax._AlgebraicPattern _x_3_0 ap_vars_3_1 ap_expr_3_2 ap_position_3_3 -> case _x_3_0 (syntax._Global _x_4_0 glob_module_4_1 -> case _x_4_0 (syntax._DefinedSymbol ds_ident_5_0 ds_arity_5_1 ds_index_5_2 -> case (<{StdInt.==_16}> glob_module_4_1 1) (True -> let index_7_0::I = <{StdInt.+_6}> ds_index_5_2 44 in case (case (<{StdInt.==_16}> index_7_0 46) (True -> True) (False -> case (<{StdInt.==_16}> index_7_0 49) (True -> True) (False -> <{StdInt.==_16}> index_7_0 50) ) ) (True -> trans.instantiate_162 _vList_0 ro_1 linearity_1_0 app_args_4 ap_vars_3_1 ap_expr_3_2 (select cons_function_type_2::syntax._SymbolType 2) (select cons_function_type_2::syntax._SymbolType 1) ti_8) (False -> trans.match_and_instantiate_overloaded_cons_overloaded_match_144 _vList_0 ro_1 cons_function_type_2 linearities_1_1 app_args_4 guards_2_1 case_default_6 ro_7 ti_8) ) ) ) ) ) ) (_ -> case _x_5 (_predefined._Nil -> trans.transform_987 case_default_6 (update ro_7::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_8) )
trans.match_and_instantiate_overloaded_cons_boxed_match_143 !_vList_0 ro_1 !_x_2 app_args_3 !_x_4 case_default_5 ro_6 ti_7 = case _x_2 (<{_predefined._!Cons!}> linearity_1_0 linearities_1_1 -> case _x_4 (_predefined._Cons _x_2_0 guards_2_1 -> case _x_2_0 (syntax._AlgebraicPattern _x_3_0 ap_vars_3_1 ap_expr_3_2 ap_position_3_3 -> case _x_3_0 (syntax._Global _x_4_0 glob_module_4_1 -> case _x_4_0 (syntax._DefinedSymbol ds_ident_5_0 ds_arity_5_1 ds_index_5_2 -> case (<{StdInt.==_16}> glob_module_4_1 1) (True -> let index_7_0::I = <{StdInt.+_6}> ds_index_5_2 44 in case (case (<{StdInt.==_16}> index_7_0 44) (True -> True) (False -> case (<{StdInt.==_16}> index_7_0 45) (True -> True) (False -> case (<{StdInt.==_16}> index_7_0 47) (True -> True) (False -> <{StdInt.==_16}> index_7_0 48) ) ) ) (True -> let cons_type_9_0 = select (trans.select_691 (select (trans.select_667 (select ro_6::trans._ReadOnlyTI 1) glob_module_4_1)::syntax._CommonDefs 1) ds_index_5_2)::syntax._ConsDef 1 in trans.instantiate_162 _vList_0 ro_1 linearity_1_0 app_args_3 ap_vars_3_1 ap_expr_3_2 (select cons_type_9_0::syntax._SymbolType 2) (select cons_type_9_0::syntax._SymbolType 1) ti_7) (False -> trans.match_and_instantiate_overloaded_cons_boxed_match_143 _vList_0 ro_1 linearities_1_1 app_args_3 guards_2_1 case_default_5 ro_6 ti_7) ) ) ) ) ) ) (_ -> case _x_4 (_predefined._Nil -> trans.transform_987 case_default_5 (update ro_6::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_7) )
trans.match_and_instantiate_overloaded_cons_147 !_vList_0 ro_1 cons_function_type_2 !linearities_3 app_args_4 !_x_5 case_default_6 ro_7 ti_8 = case _x_5 (syntax.AlgebraicPatterns _x_1_0 algebraicPatterns_1_1 -> trans.match_and_instantiate_overloaded_cons_boxed_match_143 _vList_0 ro_1 linearities_3 app_args_4 algebraicPatterns_1_1 case_default_6 ro_7 ti_8) (syntax.OverloadedListPatterns _x_1_0 _x_1_1 algebraicPatterns_1_2 -> trans.match_and_instantiate_overloaded_cons_overloaded_match_144 _vList_0 ro_1 cons_function_type_2 linearities_3 app_args_4 algebraicPatterns_1_2 case_default_6 ro_7 ti_8) 
trans.match_and_instantiate_overloaded_list_142 !_vList_0 ro_1 !_x_2 cons_index_3 app_args_4 !_x_5 case_default_6 ro_7 ti_8 = case _x_2 (<{_predefined._!Cons!}> linearity_1_0 linearities_1_1 -> case cons_index_3 (syntax._Global cons_ds_index_2_0 cons_glob_module_2_1 -> case _x_5 (_predefined._Cons _x_3_0 guards_3_1 -> case _x_3_0 (syntax._AlgebraicPattern _x_4_0 ap_vars_4_1 ap_expr_4_2 ap_position_4_3 -> case _x_4_0 (syntax._Global _x_5_0 glob_module_5_1 -> case _x_5_0 (syntax._DefinedSymbol ds_ident_6_0 ds_arity_6_1 ds_index_6_2 -> case (trans.equal_list_contructor_141 glob_module_5_1 ds_index_6_2 cons_glob_module_2_1 cons_ds_index_2_0) (True -> let cons_type_8_0 = select (trans.select_691 (select (trans.select_667 (select ro_7::trans._ReadOnlyTI 1) cons_glob_module_2_1)::syntax._CommonDefs 1) cons_ds_index_2_0)::syntax._ConsDef 1 in trans.instantiate_162 _vList_0 ro_1 linearity_1_0 app_args_4 ap_vars_4_1 ap_expr_4_2 (select cons_type_8_0::syntax._SymbolType 2) (select cons_type_8_0::syntax._SymbolType 1) ti_8) (False -> trans.match_and_instantiate_overloaded_list_142 _vList_0 ro_1 linearities_1_1 cons_index_3 app_args_4 guards_3_1 case_default_6 ro_7 ti_8) ) ) ) ) ) ) (_ -> case _x_5 (_predefined._Nil -> trans.transform_987 case_default_6 (update ro_7::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_8) )
trans.match_and_instantiate_algebraic_type_140 !_vList_0 ro_1 !_x_2 cons_index_3 app_args_4 !_x_5 case_default_6 ro_7 ti_8 = case _x_2 (<{_predefined._!Cons!}> linearity_1_0 linearities_1_1 -> case _x_5 (_predefined._Cons _x_2_0 guards_2_1 -> case _x_2_0 (syntax._AlgebraicPattern _x_3_0 ap_vars_3_1 ap_expr_3_2 ap_position_3_3 -> case _x_3_0 (syntax._Global _x_4_0 glob_module_4_1 -> case _x_4_0 (syntax._DefinedSymbol ds_ident_5_0 ds_arity_5_1 ds_index_5_2 -> case (case (<{StdInt.==_16}> (select cons_index_3::syntax._Global 1) glob_module_4_1) (True -> <{StdInt.==_16}> (select cons_index_3::syntax._Global 0) ds_index_5_2) (False -> False) ) (True -> let cons_type_7_0 = select (trans.select_691 (select (trans.select_667 (select ro_7::trans._ReadOnlyTI 1) glob_module_4_1)::syntax._CommonDefs 1) ds_index_5_2)::syntax._ConsDef 1 in trans.instantiate_162 _vList_0 ro_1 linearity_1_0 app_args_4 ap_vars_3_1 ap_expr_3_2 (select cons_type_7_0::syntax._SymbolType 2) (select cons_type_7_0::syntax._SymbolType 1) ti_8) (False -> trans.match_and_instantiate_algebraic_type_140 _vList_0 ro_1 linearities_1_1 cons_index_3 app_args_4 guards_2_1 case_default_6 ro_7 ti_8) ) ) ) ) ) (_ -> case _x_5 (_predefined._Nil -> trans.transform_987 case_default_6 (update ro_7::trans._ReadOnlyTI [2:trans.NotRootCase]) ti_8) )
trans.match_and_instantiate_160 !_vList_0 ro_1 !linearities_2 cons_index_3 app_args_4 !_x_5 case_default_6 ro_7 ti_8 = case _x_5 (syntax.AlgebraicPatterns _x_1_0 algebraicPatterns_1_1 -> trans.match_and_instantiate_algebraic_type_140 _vList_0 ro_1 linearities_2 cons_index_3 app_args_4 algebraicPatterns_1_1 case_default_6 ro_7 ti_8) (syntax.OverloadedListPatterns _x_1_0 _x_1_1 algebraicPatterns_1_2 -> case _x_1_0 (syntax.OverloadedList _x_2_0 _x_2_1 _x_2_2 _x_2_3 -> trans.match_and_instantiate_overloaded_list_142 _vList_0 ro_1 linearities_2 cons_index_3 app_args_4 algebraicPatterns_1_2 case_default_6 ro_7 ti_8) ) 
trans.fold_st2_1019 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> trans.store_arg_type_info_373 x_1_0 y_2_0 (trans.fold_st2_1019 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
trans.transform_function_380 !ro_StdStrictLists_module_n_0::I !compile_with_fusion_1::B !main_dcl_module_n_2::I !_x_3 !_x_4 !fun_symb_5 !common_defs_6 !imported_funs_7 !ti_8 = case _x_3 (general.Yes _x_1_0 -> case _x_1_0 (syntax._SymbolType st_vars_2_0 st_args_2_1 st_args_strictness_2_2 st_arity_2_3 st_result_2_4 st_context_2_5 st_attr_vars_2_6 st_attr_env_2_7 -> case _x_4 (syntax.TransformedBody tb_3_0 -> let _x_4_0 = select (trans.select_659 (select ti_8::trans._TransformInfo 13) 178)::predef._PredefinedSymbol 1, ti_4_1 = select _x_4_0::_Tuple2 1, _x_4_2 = trans.transform_469 (select tb_3_0::syntax._TransformedBody 1) (trans._ReadOnlyTI imported_funs_7 common_defs_6 (trans.get_root_case_mode_375 tb_3_0) (trans._TransformFunctionInfo fun_symb_5 fun_symb_5 (select tb_3_0::syntax._TransformedBody 0) (<{trans.c;4223;73_372}> st_args_strictness_2_2 (select tb_3_0::syntax._TransformedBody 0) 0) fun_symb_5 -1 -1) main_dcl_module_n_2 compile_with_fusion_1 ro_StdStrictLists_module_n_0 (select _x_4_0::_Tuple2 0)) (update ti_4_1::trans._TransformInfo [5:trans.fold_st2_1019 (select tb_3_0::syntax._TransformedBody 0) st_args_2_1 (select ti_4_1::trans._TransformInfo 5)]) in <{_Tuple2!3}> (syntax.TransformedBody (update tb_3_0::syntax._TransformedBody [1:select _x_4_2::_Tuple2 0])) (select _x_4_2::_Tuple2 1)) ) ) 
trans.transform_functions_379 ro_StdStrictLists_module_n_0::I compile_with_fusion_1::B main_dcl_module_n_2::I !_x_3 !common_defs_4 !imported_funs_5 !ti_6 = case _x_3 (checksupport.ComponentMember member_1_0 members_1_1 -> let _x_2_0 = trans.select_651 (select ti_6::trans._TransformInfo 0) member_1_0, fun_def_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = trans.transform_function_380 ro_StdStrictLists_module_n_0 compile_with_fusion_1 main_dcl_module_n_2 (select fun_def_2_1::syntax._FunDef 4) (select fun_def_2_1::syntax._FunDef 3) (syntax._SymbIdent (select fun_def_2_1::syntax._FunDef 0) (syntax.SK_Function (syntax._Global member_1_0 main_dcl_module_n_2))) common_defs_4 imported_funs_5 (select _x_2_0::_Tuple2 1), ti_2_3 = select _x_2_2::_Tuple2 1 in trans.transform_functions_379 ro_StdStrictLists_module_n_0 compile_with_fusion_1 main_dcl_module_n_2 members_1_1 common_defs_4 imported_funs_5 (update ti_2_3::trans._TransformInfo [0:trans.update_653 (select ti_2_3::trans._TransformInfo 0) member_1_0 (update fun_def_2_1::syntax._FunDef [3:select _x_2_2::_Tuple2 0])])) (checksupport.GeneratedComponentMember member_1_0 fun_ptr_1_1 members_1_2 -> let _x_2_0 = Heap.readPtr fun_ptr_1_1 (select ti_6::trans._TransformInfo 4), gf_2_1 = select (select _x_2_0::_Tuple2 0)::_Tuple1 0, gf_fun_def_2_2 = select gf_2_1::syntax._GeneratedFunction 0, _x_2_3 = trans.transform_function_380 ro_StdStrictLists_module_n_0 compile_with_fusion_1 main_dcl_module_n_2 (select gf_fun_def_2_2::syntax._FunDef 4) (select gf_fun_def_2_2::syntax._FunDef 3) (syntax._SymbIdent (select gf_fun_def_2_2::syntax._FunDef 0) (syntax.SK_GeneratedFunction fun_ptr_1_1 member_1_0)) common_defs_4 imported_funs_5 (update ti_6::trans._TransformInfo [4:select _x_2_0::_Tuple2 1]), ti_2_4 = select _x_2_3::_Tuple2 1 in trans.transform_functions_379 ro_StdStrictLists_module_n_0 compile_with_fusion_1 main_dcl_module_n_2 members_1_2 common_defs_4 imported_funs_5 (update ti_2_4::trans._TransformInfo [4:Heap.writePtr fun_ptr_1_1 (syntax.FI_Function (update gf_2_1::syntax._GeneratedFunction [0:update gf_fun_def_2_2::syntax._FunDef [3:select _x_2_3::_Tuple2 0]])) (select ti_2_4::trans._TransformInfo 4)])) (checksupport.NoComponentMembers -> ti_6) 
trans.remove_unused_used_functions !_x_0 !fun_heap_1 = case _x_0 (_predefined._Cons fun_ptr_1_0 fun_ptrs_1_1 -> let _x_2_0 = Heap.readPtr fun_ptr_1_0 fun_heap_1 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select (select (select (select (select _x_2_0::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction 0)::syntax._FunDef 8)::syntax._FunInfo 6) 128) 0)) (True -> trans.remove_unused_used_functions fun_ptrs_1_1 (select _x_2_0::_Tuple2 1)) (False -> let _x_4_0 = trans.remove_unused_used_functions fun_ptrs_1_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons fun_ptr_1_0 (select _x_4_0::_Tuple2 0)) (select _x_4_0::_Tuple2 1)) ) (_predefined._Nil -> <{_Tuple2!3}> _predefined._Nil fun_heap_1) 
trans.determine_new_functions_in_component_392 !_x_0 !fun_heap_1 = case _x_0 (_predefined._Cons fun_ptr_1_0 new_functions_1_1 -> let _x_2_0 = Heap.readPtr fun_ptr_1_0 fun_heap_1, _x_2_1 = trans.determine_new_functions_in_component_392 new_functions_1_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!2}> (checksupport.GeneratedComponentMember (select (select (select _x_2_0::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction 3) fun_ptr_1_0 (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (_predefined._Nil -> <{_Tuple2!2}> checksupport.NoComponentMembers fun_heap_1) 
trans.append_ComponentMembers_391 !_x_0 !component_members_to_append_1 = case _x_0 (checksupport.ComponentMember member_1_0 members_1_1 -> checksupport.ComponentMember member_1_0 (trans.append_ComponentMembers_391 members_1_1 component_members_to_append_1)) (checksupport.GeneratedComponentMember member_1_0 fun_ptr_1_1 members_1_2 -> checksupport.GeneratedComponentMember member_1_0 fun_ptr_1_1 (trans.append_ComponentMembers_391 members_1_2 component_members_to_append_1)) (checksupport.NoComponentMembers -> component_members_to_append_1) 
trans.partition_group_378 !main_dcl_module_n_0::I !def_min_1::I !def_max_2::I !group_nr_3::I !component_members_4 !ti_5 = let _x_1_0 = <{partition.partitionateFunctions``}> (select ti_5::trans._TransformInfo 9) group_nr_3 (select ti_5::trans._TransformInfo 0) component_members_4 main_dcl_module_n_0 def_min_1 def_max_2 (select ti_5::trans._TransformInfo 4) (select ti_5::trans._TransformInfo 13) (select ti_5::trans._TransformInfo 5) (select ti_5::trans._TransformInfo 6) (checksupport._ErrorAdmin (select ti_5::trans._TransformInfo 12) _predefined._Nil True) in <{_Tuple2!3}> (select _x_1_0::_Tuple8 1) (update ti_5::trans._TransformInfo [0:select _x_1_0::_Tuple8 2,4:select _x_1_0::_Tuple8 3,5:select _x_1_0::_Tuple8 5,6:select _x_1_0::_Tuple8 6,12:select (select _x_1_0::_Tuple8 7)::checksupport._ErrorAdmin 0,13:select _x_1_0::_Tuple8 4])
trans.component_contains_generated_function_n_363::B !_x_0 function_n_1::I = case _x_0 (checksupport.GeneratedComponentMember function_n2_1_0 _x_1_1 component_members_1_2 -> case (<{StdInt.==_16}> function_n_1 function_n2_1_0) (True -> True) (False -> trans.component_contains_generated_function_n_363 component_members_1_2 function_n_1) ) (checksupport.ComponentMember _x_1_0 component_members_1_1 -> trans.component_contains_generated_function_n_363 component_members_1_1 function_n_1) (checksupport.NoComponentMembers -> False) 
trans.component_contains_function_n_362::B !_x_0 function_n_1::I = case _x_0 (checksupport.ComponentMember function_n2_1_0 component_members_1_1 -> case (<{StdInt.==_16}> function_n_1 function_n2_1_0) (True -> True) (False -> trans.component_contains_function_n_362 component_members_1_1 function_n_1) ) (checksupport.GeneratedComponentMember _x_1_0 _x_1_1 component_members_1_2 -> trans.component_contains_function_n_362 component_members_1_2 function_n_1) (checksupport.NoComponentMembers -> False) 
trans.contains_function_in_component_361::B !_x_0 original_component_members_1 = case _x_0 (checksupport.GeneratedComponentMember function_n_1_0 _x_1_1 component_members_1_2 -> case (trans.component_contains_generated_function_n_363 original_component_members_1 function_n_1_0) (True -> True) (False -> trans.contains_function_in_component_361 component_members_1_2 original_component_members_1) ) (checksupport.ComponentMember function_n_1_0 component_members_1_1 -> case (trans.component_contains_function_n_362 original_component_members_1 function_n_1_0) (True -> True) (False -> trans.contains_function_in_component_361 component_members_1_1 original_component_members_1) ) (checksupport.NoComponentMembers -> False) 
trans.remove_groups_not_used_by_original_component_members !original_component_members_0 !new_groups_1 removed_groups_2 = let last_component_1_0 = StdList.last new_groups_1 in case (trans.contains_function_in_component_361 (select last_component_1_0::checksupport._Component 0) original_component_members_0) (True -> <{_Tuple2!3}> new_groups_1 removed_groups_2) (False -> trans.remove_groups_not_used_by_original_component_members original_component_members_0 (StdList.init new_groups_1) (_predefined._Cons last_component_1_0 removed_groups_2)) 
trans.mark_unused_functions_364 !_x_0 !ti_1 = case _x_0 (checksupport.ComponentMember member_1_0 members_1_1 -> let _x_2_0 = select (trans.select_651 (select ti_1::trans._TransformInfo 0) member_1_0)::syntax._FunDef 8, ti_2_1 = select _x_2_0::_Tuple2 1, _x_2_2 = trans.uselect_654 (select ti_2_1::trans._TransformInfo 0) member_1_0, fun_info_2_3 = select _x_2_0::_Tuple2 0 in trans.mark_unused_functions_364 members_1_1 (update ti_2_1::trans._TransformInfo [0:trans.update_653 (select _x_2_2::_Tuple2 1) member_1_0 (update (select _x_2_2::_Tuple2 0)::syntax._FunDef [8:update fun_info_2_3::syntax._FunInfo [6:StdInt.bitor (select fun_info_2_3::syntax._FunInfo 6) 64]])])) (checksupport.GeneratedComponentMember member_1_0 fun_ptr_1_1 members_1_2 -> case ti_1 (trans._TransformInfo ti_fun_defs_2_0 ti_instances_2_1 ti_cons_args_2_2 ti_new_functions_2_3 ti_fun_heap_2_4 ti_var_heap_2_5 ti_symbol_heap_2_6 ti_type_heaps_2_7 ti_type_def_infos_2_8 ti_next_fun_nr_2_9 ti_cleanup_info_2_10 ti_recursion_introduced_2_11 ti_error_file_2_12 ti_predef_symbols_2_13 -> let _x_3_0 = Heap.readPtr fun_ptr_1_1 ti_fun_heap_2_4, gf_3_1 = select (select _x_3_0::_Tuple2 0)::_Tuple1 0, fd_3_2 = select gf_3_1::syntax._GeneratedFunction 0, fun_info_3_3 = select fd_3_2::syntax._FunDef 8 in trans.mark_unused_functions_364 members_1_2 (update ti_1::trans._TransformInfo [4:Heap.writePtr fun_ptr_1_1 (syntax.FI_Function (update gf_3_1::syntax._GeneratedFunction [0:update fd_3_2::syntax._FunDef [8:update fun_info_3_3::syntax._FunInfo [6:StdInt.bitor (select fun_info_3_3::syntax._FunInfo 6) 64]]])) (select _x_3_0::_Tuple2 1)])) ) (checksupport.NoComponentMembers -> ti_1) 
trans.mark_unused_functions_in_components !_x_0 !ti_1 = case _x_0 (_predefined._Cons removed_group_1_0 removed_groups_1_1 -> trans.mark_unused_functions_in_components removed_groups_1_1 (trans.mark_unused_functions_364 (select removed_group_1_0::checksupport._Component 0) ti_1)) (_predefined._Nil -> ti_1) 
trans.safe_producers_386 group_nr_0::I component_members_1 !_x_2 main_dcl_module_n_3::I !ti_4 = case _x_2 (checksupport.ComponentMember fun_1_0 funs_1_1 -> let !ti_2_0 = update ti_4::trans._TransformInfo [0:select prs_2_3::classify._PRState 4,2:select prs_2_3::classify._PRState 1,4:select prs_2_3::classify._PRState 3], _x_2_1 = trans.uselect_654 (select ti_4::trans._TransformInfo 0) fun_1_0, _x_2_2 = classify.producerRequirements_2 (select (select (select (select _x_2_1::_Tuple2 0)::syntax._FunDef 3)::_Tuple1 0)::syntax._TransformedBody 1) (classify._PRState component_members_1 (select ti_4::trans._TransformInfo 2) main_dcl_module_n_3 (select ti_4::trans._TransformInfo 4) (select _x_2_1::_Tuple2 1) group_nr_0), prs_2_3 = select _x_2_2::_Tuple2 1 in case (select _x_2_2::_Tuple2 0) (True -> trans.safe_producers_386 group_nr_0 component_members_1 funs_1_1 main_dcl_module_n_3 ti_2_0) (False -> <{_Tuple2!3}> False ti_2_0) ) (checksupport.GeneratedComponentMember fun_1_0 fun_ptr_1_1 funs_1_2 -> let !ti_2_0 = update ti_2_2::trans._TransformInfo [0:select prs_2_4::classify._PRState 4,2:select prs_2_4::classify._PRState 1,4:select prs_2_4::classify._PRState 3], _x_2_1 = Heap.readPtr fun_ptr_1_1 (select ti_4::trans._TransformInfo 4), ti_2_2 = update ti_4::trans._TransformInfo [4:select _x_2_1::_Tuple2 1], _x_2_3 = classify.producerRequirements_2 (select (select (select (select (select (select _x_2_1::_Tuple2 0)::_Tuple1 0)::syntax._GeneratedFunction 0)::syntax._FunDef 3)::_Tuple1 0)::syntax._TransformedBody 1) (classify._PRState component_members_1 (select ti_2_2::trans._TransformInfo 2) main_dcl_module_n_3 (select ti_2_2::trans._TransformInfo 4) (select ti_2_2::trans._TransformInfo 0) group_nr_0), prs_2_4 = select _x_2_3::_Tuple2 1 in case (select _x_2_3::_Tuple2 0) (True -> trans.safe_producers_386 group_nr_0 component_members_1 funs_1_2 main_dcl_module_n_3 ti_2_0) (False -> <{_Tuple2!3}> False ti_2_0) ) (checksupport.NoComponentMembers -> <{_Tuple2!3}> True ti_4) 
trans.mark_producers_safe_387 !_x_0 !ti_1 = case _x_0 (checksupport.ComponentMember member_1_0 members_1_1 -> let _x_2_0 = _SystemArray.uselect_6 (select ti_1::trans._TransformInfo 2) member_1_0 in trans.mark_producers_safe_387 members_1_1 (update ti_1::trans._TransformInfo [2:_SystemArray.update_5 (select _x_2_0::_Tuple2 1) member_1_0 (update (select _x_2_0::_Tuple2 0)::syntax._ConsClasses [3:True])])) (checksupport.GeneratedComponentMember member_1_0 fun_ptr_1_1 members_1_2 -> let _x_2_0 = Heap.readPtr fun_ptr_1_1 (select ti_1::trans._TransformInfo 4), gf_2_1 = select (select _x_2_0::_Tuple2 0)::_Tuple1 0 in trans.mark_producers_safe_387 members_1_2 (update ti_1::trans._TransformInfo [4:Heap.writePtr fun_ptr_1_1 (syntax.FI_Function (update gf_2_1::syntax._GeneratedFunction [2:update (select gf_2_1::syntax._GeneratedFunction 2)::syntax._ConsClasses [3:True]])) (select _x_2_0::_Tuple2 1)])) (checksupport.NoComponentMembers -> ti_1) 
trans.reannotate_producers_385 main_dcl_module_n_0::I group_nr_1::I !component_members_2 !ti_3 = let _x_1_0 = trans.safe_producers_386 group_nr_1 component_members_2 component_members_2 main_dcl_module_n_0 ti_3 in case (select _x_1_0::_Tuple2 0) (True -> trans.mark_producers_safe_387 component_members_2 (select _x_1_0::_Tuple2 1)) (False -> select _x_1_0::_Tuple2 1) 
<{trans.transform_groups`_376}> def_min_0::I def_max_1::I main_dcl_module_n_2::I ro_StdStrictLists_module_n_3::I compile_with_fusion_4::B !common_defs_5 !imported_funs_6 !group_nr_7::I !_x_8 !acc_groups_9 !ti_10 = case _x_8 (_predefined._Nil -> <{_Tuple3!7}> group_nr_7 acc_groups_9 ti_10) (_predefined._Cons _x_1_0 groups_1_1 -> case _x_1_0 (checksupport._Component component_members_2_0 -> let _x_3_0 = trans.transform_group_384 def_min_0 def_max_1 main_dcl_module_n_2 ro_StdStrictLists_module_n_3 compile_with_fusion_4 common_defs_5 imported_funs_6 group_nr_7 component_members_2_0 acc_groups_9 ti_10 in <{trans.transform_groups`_376}> def_min_0 def_max_1 main_dcl_module_n_2 ro_StdStrictLists_module_n_3 compile_with_fusion_4 common_defs_5 imported_funs_6 (select _x_3_0::_Tuple3 0) groups_1_1 (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) ) 
trans.transform_group_384 def_min_0::I def_max_1::I main_dcl_module_n_2::I ro_StdStrictLists_module_n_3::I !compile_with_fusion_4::B !common_defs_5 !imported_funs_6 !group_nr_7::I !component_members_8 !acc_groups_9 !ti_10 = let ti_1_0 = trans.assign_groups_377 component_members_8 group_nr_7 ti_10, _x_1_1 = select ti_1_0::trans._TransformInfo 3, ti_1_2 = select _x_1_1::_Tuple2 1, ti_1_3 = update ti_1_2::trans._TransformInfo [3:_predefined._Nil], ti_1_4 = trans.transform_functions_379 ro_StdStrictLists_module_n_3 compile_with_fusion_4 main_dcl_module_n_2 component_members_8 common_defs_5 imported_funs_6 ti_1_3, _x_1_5 = select ti_1_4::trans._TransformInfo 3, new_functions_1_6 = select _x_1_5::_Tuple2 0 in case (StdBool.not (trans._f1373_1373 compile_with_fusion_4 new_functions_1_6)) (True -> let ti_3_0 = select _x_1_5::_Tuple2 1, _x_3_1 = trans.remove_unused_used_functions new_functions_1_6 (select ti_3_0::trans._TransformInfo 4) in <{_Tuple3!7}> (<{StdInt.+_6}> group_nr_7 StdInt.one_11) (_predefined._Cons (checksupport._Component component_members_8) acc_groups_9) (update ti_3_0::trans._TransformInfo [3:<{StdList.++}> (select _x_3_1::_Tuple2 0) (select _x_1_1::_Tuple2 0),4:select _x_3_1::_Tuple2 1])) (False -> let ti_3_0 = select _x_1_5::_Tuple2 1, _x_3_1 = trans.remove_unused_used_functions new_functions_1_6 (select ti_3_0::trans._TransformInfo 4), new_generated_functions_3_2 = select _x_3_1::_Tuple2 0, previous_new_functions_3_3 = select _x_1_1::_Tuple2 0, ti_fun_heap_3_4 = select _x_3_1::_Tuple2 1, ti_3_5 = update ti_3_0::trans._TransformInfo [3:<{StdList.++}> new_generated_functions_3_2 previous_new_functions_3_3,4:ti_fun_heap_3_4], _x_3_6 = trans.determine_new_functions_in_component_392 new_functions_1_6 (select ti_3_5::trans._TransformInfo 4), new_functions_in_component_3_7 = select _x_3_6::_Tuple2 0, ti_fun_heap_3_8 = select _x_3_6::_Tuple2 1, ti_3_9 = update ti_3_5::trans._TransformInfo [4:ti_fun_heap_3_8], _x_3_10 = trans.partition_group_378 main_dcl_module_n_2 def_min_0 def_max_1 group_nr_7 (trans.append_ComponentMembers_391 component_members_8 new_functions_in_component_3_7) ti_3_9, new_groups_3_11 = select _x_3_10::_Tuple2 0, ti_3_12 = select _x_3_10::_Tuple2 1, _x_3_13 = classify.reanalyseGroups common_defs_5 imported_funs_6 main_dcl_module_n_2 ro_StdStrictLists_module_n_3 new_groups_3_11 (select ti_3_12::trans._TransformInfo 0) (select ti_3_12::trans._TransformInfo 5) (select ti_3_12::trans._TransformInfo 6) (select ti_3_12::trans._TransformInfo 4) (select ti_3_12::trans._TransformInfo 2) in case (case (StdBool.not (StdList.isEmpty new_functions_1_6)) (True -> True) (False -> case (<{StdInt.<_17}> 1 (StdList.length_47 new_groups_3_11)) (True -> True) (False -> StdBool.not (select _x_3_13::_Tuple7 6)) ) ) (True -> let _x_5_0 = trans.remove_groups_not_used_by_original_component_members component_members_8 new_groups_3_11 _predefined._Nil in <{trans.transform_groups`_376}> def_min_0 def_max_1 main_dcl_module_n_2 ro_StdStrictLists_module_n_3 compile_with_fusion_4 common_defs_5 imported_funs_6 group_nr_7 (select _x_5_0::_Tuple2 0) acc_groups_9 (trans.mark_unused_functions_in_components (select _x_5_0::_Tuple2 1) (update ti_3_12::trans._TransformInfo [0:select _x_3_13::_Tuple7 1,2:select _x_3_13::_Tuple7 5,4:select _x_3_13::_Tuple7 4,5:select _x_3_13::_Tuple7 2,6:select _x_3_13::_Tuple7 3,10:<{StdList.++}> (select _x_3_13::_Tuple7 0) (select ti_3_12::trans._TransformInfo 10)]))) (False -> <{_Tuple3!7}> (<{StdInt.+_6}> group_nr_7 StdInt.one_11) (<{StdList.++}> (StdList.reverse new_groups_3_11) acc_groups_9) (trans.reannotate_producers_385 main_dcl_module_n_2 group_nr_7 component_members_8 (update ti_3_12::trans._TransformInfo [0:select _x_3_13::_Tuple7 1,2:select _x_3_13::_Tuple7 5,4:select _x_3_13::_Tuple7 4,5:select _x_3_13::_Tuple7 2,6:select _x_3_13::_Tuple7 3,10:<{StdList.++}> (select _x_3_13::_Tuple7 0) (select ti_3_12::trans._TransformInfo 10)]))) ) 
trans._f1373_1373::B !compile_with_fusion_0::B new_functions_1 = case compile_with_fusion_0 (True -> True) (_ -> StdBool.not (StdList.isEmpty new_functions_1))
trans.convert_function_type_1021 !main_dcl_module_n_0::I !common_defs_1 !fun_index_2::I !_x_3 = case _x_3 (_Tuple6 fun_defs_1_0 imported_types_1_1 collected_imports_1_2 fun_indices_with_abs_syn_types_1_3 type_heaps_1_4 var_heap_1_5 -> let _x_2_0 = trans.uselect_654 fun_defs_1_0 fun_index_2, fun_def_2_1 = select _x_2_0::_Tuple2 0, _x_2_2::B = select fun_def_2_1::syntax._FunDef 8, fi_properties_2_3::I = select _x_2_2::syntax._FunInfo 6, rem_annot_2_4 = <{StdInt.==_16}> (StdInt.bitand fi_properties_2_3 2) 0, fun_type_2_5 = select (select fun_def_2_1::syntax._FunDef 4)::_Tuple1 0, _x_2_6 = expand_types.convertSymbolTypeWithoutExpandingAbstractSynTypes rem_annot_2_4 common_defs_1 fun_type_2_5 main_dcl_module_n_0 imported_types_1_1 collected_imports_1_2 type_heaps_1_4 var_heap_1_5 in case (select _x_2_6::_Tuple6 1) (True -> _Tuple6 (trans.update_653 (select _x_2_0::_Tuple2 1) fun_index_2 (update fun_def_2_1::syntax._FunDef [4:general.Yes (select _x_2_6::_Tuple6 0)])) (select _x_2_6::_Tuple6 2) (select _x_2_6::_Tuple6 3) (_predefined._Cons fun_index_2 fun_indices_with_abs_syn_types_1_3) (select _x_2_6::_Tuple6 4) (select _x_2_6::_Tuple6 5)) (False -> _Tuple6 (trans.update_653 (select _x_2_0::_Tuple2 1) fun_index_2 (update fun_def_2_1::syntax._FunDef [4:general.Yes (select _x_2_6::_Tuple6 0)])) (select _x_2_6::_Tuple6 2) (select _x_2_6::_Tuple6 3) fun_indices_with_abs_syn_types_1_3 (select _x_2_6::_Tuple6 4) (select _x_2_6::_Tuple6 5)) ) 
trans.convert_function_types_1020 main_dcl_module_n_0::I !_x_1 common_defs_2 !s_3 = case _x_1 (checksupport.ComponentMember member_1_0 members_1_1 -> trans.convert_function_types_1020 main_dcl_module_n_0 members_1_1 common_defs_2 (trans.convert_function_type_1021 main_dcl_module_n_0 common_defs_2 member_1_0 s_3)) (checksupport.NoComponentMembers -> s_3) 
trans.transform_groups_382 def_min_0::I def_max_1::I main_dcl_module_n_2::I ro_StdStrictLists_module_n_3::I compile_with_fusion_4::B !group_nr_5::I !_x_6 !acc_groups_7 !common_defs_8 !imported_funs_9 !imported_types_10 !collected_imports_11 !fun_indices_with_abs_syn_types_12 !ti_13 = case _x_6 (_predefined._Cons group_1_0 groups_1_1 -> let component_members_2_0 = select group_1_0::checksupport._Component 0, _x_2_1 = trans.convert_function_types_1020 main_dcl_module_n_2 component_members_2_0 common_defs_8 (_Tuple6 (select ti_13::trans._TransformInfo 0) imported_types_10 collected_imports_11 fun_indices_with_abs_syn_types_12 (select ti_13::trans._TransformInfo 7) (select ti_13::trans._TransformInfo 5)), _x_2_2 = trans.transform_group_384 def_min_0 def_max_1 main_dcl_module_n_2 ro_StdStrictLists_module_n_3 compile_with_fusion_4 common_defs_8 imported_funs_9 group_nr_5 component_members_2_0 acc_groups_7 (update ti_13::trans._TransformInfo [0:select _x_2_1::_Tuple6 0,5:select _x_2_1::_Tuple6 5,7:select _x_2_1::_Tuple6 4]) in trans.transform_groups_382 def_min_0 def_max_1 main_dcl_module_n_2 ro_StdStrictLists_module_n_3 compile_with_fusion_4 (select _x_2_2::_Tuple3 0) groups_1_1 (select _x_2_2::_Tuple3 1) common_defs_8 imported_funs_9 (select _x_2_1::_Tuple6 1) (select _x_2_1::_Tuple6 2) (select _x_2_1::_Tuple6 3) (select _x_2_2::_Tuple3 2)) (_predefined._Nil -> <{_Tuple5!31}> acc_groups_7 imported_types_10 collected_imports_11 fun_indices_with_abs_syn_types_12 ti_13) 
<{trans.cu;4072;23_367}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_l_3 = <{trans.g_c1;4072;32_1374}> g_l_3 _vone_0 <{_v+_1}> c_l_i_2
<{trans.g_c1;4072;32_1374}> !g_l_0 _vone_1 <{_v+_2}> c_l_i_3 = case g_l_0 (_predefined._Cons group_1_0 g_t_1_1 -> <{trans.cu;4072;23_367}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_t_1_1) (_ -> c_l_i_3)
<{trans.cu;4072;23_366}> !_vArray_0 c_a_1 c_i_2::I !g_l_3 = <{trans.g_c1;4072;32_1375}> g_l_3 _vArray_0 c_a_1 c_i_2
<{trans.g_c1;4072;32_1375}> !g_l_0 _vArray_1 c_a_2 c_i_3::I = case g_l_0 (_predefined._Cons group_1_0 g_t_1_1 -> <{trans.cu;4072;23_366}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 group_1_0) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_t_1_1) (_ -> c_a_2)
trans.expand_abstract_syn_types_in_function_type_390 !main_dcl_module_n_0::I !common_defs_1 !fun_index_2::I !_x_3 = case _x_3 (_Tuple5 fun_defs_1_0 imported_types_1_1 collected_imports_1_2 type_heaps_1_3 var_heap_1_4 -> let _x_2_0 = trans.uselect_654 fun_defs_1_0 fun_index_2, fun_def_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = expand_types.convertSymbolType (<{StdInt.==_16}> (StdInt.bitand (select (select fun_def_2_1::syntax._FunDef 8)::syntax._FunInfo 6) 2) 0) common_defs_1 (select (select fun_def_2_1::syntax._FunDef 4)::_Tuple1 0) main_dcl_module_n_0 imported_types_1_1 collected_imports_1_2 type_heaps_1_3 var_heap_1_4 in <{_Tuple5!31}> (trans.update_653 (select _x_2_0::_Tuple2 1) fun_index_2 (update fun_def_2_1::syntax._FunDef [4:general.Yes (select _x_2_2::_Tuple5 0)])) (select _x_2_2::_Tuple5 1) (select _x_2_2::_Tuple5 2) (select _x_2_2::_Tuple5 3) (select _x_2_2::_Tuple5 4)) 
trans.isComponentMember_381::B index_0::I !_x_1 = case _x_1 (checksupport.ComponentMember member_1_0 members_1_1 -> case (<{StdInt.==_16}> index_0 member_1_0) (True -> True) (False -> trans.isComponentMember_381 index_0 members_1_1) ) (checksupport.GeneratedComponentMember member_1_0 _x_1_1 members_1_2 -> case (<{StdInt.==_16}> index_0 member_1_0) (True -> True) (False -> trans.isComponentMember_381 index_0 members_1_2) ) (checksupport.NoComponentMembers -> False) 
trans.add_new_function_to_group_388 !main_dcl_module_n_0::I !common_defs_1 !fun_heap_2 !fun_ptr_3 !_x_4 = case _x_4 (_Tuple6 groups_1_0 fun_defs_1_1 imported_types_1_2 collected_imports_1_3 type_heaps_1_4 var_heap_1_5 -> let !_x_2_0 = expand_types.expandSynTypes_18 (<{trans._if;4321;35_1376}> (<{StdInt.==_16}> (StdInt.bitand fi_properties_2_4 2) 0)) common_defs_1 (_Tuple2 (select ft_2_5::syntax._SymbolType 1) (select ft_2_5::syntax._SymbolType 4)) (expand_types._ExpandTypeState imported_types_1_2 collected_imports_1_3 type_heaps_1_4 var_heap_1_5 main_dcl_module_n_0 False), _x_2_1 = select (Heap.sreadPtr fun_ptr_3 fun_heap_2)::_Tuple1 0, gf_fun_def_2_2::I = select _x_2_1::syntax._GeneratedFunction 0, _x_2_3 = select gf_fun_def_2_2::syntax._FunDef 8, fi_properties_2_4 = select _x_2_3::syntax._FunInfo 6, ft_2_5 = select (select gf_fun_def_2_2::syntax._FunDef 4)::_Tuple1 0 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand fi_properties_2_4 64) 0)) (True -> let _x_4_0 = select _x_2_0::_Tuple3 1, _x_4_1 = select _x_2_0::_Tuple3 2 in <{_Tuple6!63}> groups_1_0 (_predefined._Cons (update gf_fun_def_2_2::syntax._FunDef [4:general.Yes (update ft_2_5::syntax._SymbolType [1:select _x_4_0::_Tuple2 0,4:select _x_4_0::_Tuple2 1])]) fun_defs_1_1) (select _x_4_1::expand_types._ExpandTypeState 0) (select _x_4_1::expand_types._ExpandTypeState 1) (select _x_4_1::expand_types._ExpandTypeState 2) (select _x_4_1::expand_types._ExpandTypeState 3)) (False -> let fi_group_index_4_0::I = select _x_2_3::syntax._FunInfo 1 in case (StdBool.not (<{StdInt.<_17}> fi_group_index_4_0 (_SystemArray.size_4 groups_1_0))) (True -> StdMisc.abort (<{StdString.+++_11}> "add_new_function_to_group " (<{StdString.+++_11}> (StdString.toString_5 fi_group_index_4_0) (<{StdString.+++_11}> "," (<{StdString.+++_11}> (StdString.toString_5 (_SystemArray.size_4 groups_1_0)) (<{StdString.+++_11}> "," (StdString.toString_5 (select _x_2_1::syntax._GeneratedFunction 3)))))))) (False -> let gf_fun_index_6_0::I = select _x_2_1::syntax._GeneratedFunction 3 in case (StdBool.not (trans.isComponentMember_381 gf_fun_index_6_0 (select (_SystemArray.select_3 groups_1_0 fi_group_index_4_0)::checksupport._Component 0))) (True -> StdMisc.abort (<{StdString.+++_11}> "add_new_function_to_group INSANE!\n" (<{StdString.+++_11}> (StdString.toString_5 gf_fun_index_6_0) (<{StdString.+++_11}> "," (StdString.toString_5 fi_group_index_4_0))))) (False -> let _x_8_0 = select _x_2_0::_Tuple3 1, _x_8_1 = select _x_2_0::_Tuple3 2 in <{_Tuple6!63}> groups_1_0 (_predefined._Cons (update gf_fun_def_2_2::syntax._FunDef [4:general.Yes (update ft_2_5::syntax._SymbolType [1:select _x_8_0::_Tuple2 0,4:select _x_8_0::_Tuple2 1])]) fun_defs_1_1) (select _x_8_1::expand_types._ExpandTypeState 0) (select _x_8_1::expand_types._ExpandTypeState 1) (select _x_8_1::expand_types._ExpandTypeState 2) (select _x_8_1::expand_types._ExpandTypeState 3)) ) ) ) 
<{trans._if;4321;35_1376}>::I !_x_0::B = case _x_0 (True -> StdInt.bitor 1 2) (_ -> 2)
trans.cleanup_attributes !expr_info_ptr_0 !symbol_heap_1 = let _x_1_0 = Heap.readPtr expr_info_ptr_0 symbol_heap_1, symbol_heap_1_1 = select _x_1_0::_Tuple2 1 in <{trans._c;118;7_1377}> (select _x_1_0::_Tuple2 0) expr_info_ptr_0 symbol_heap_1_1
<{trans._c;118;7_1377}> !_x_0 expr_info_ptr_1 !symbol_heap_2 = case _x_0 (syntax.EI_Extended _x_1_0 expr_info_1_1 -> Heap.writePtr expr_info_ptr_1 expr_info_1_1 symbol_heap_2) (_ -> symbol_heap_2)
<{trans.c;4082;49_371}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_3 g_i_1 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{trans.c;4082;49_371}> _vArray_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_2_0)) (False -> _predefined._Nil) 
<{trans.c;4082;49_370}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_3 g_i_1 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{trans.c;4082;49_370}> _vArray_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_2_0)) (False -> _predefined._Nil) 
<{trans.cu;4082;27_369}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_l_3 = <{trans.g_c1;4082;37_1378}> g_l_3 _vone_0 <{_v+_1}> c_l_i_2
<{trans.g_c1;4082;37_1378}> !g_l_0 _vone_1 <{_v+_2}> c_l_i_3 = case g_l_0 (_predefined._Cons fundef_1_0 g_t_1_1 -> <{trans.cu;4082;27_369}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_t_1_1) (_ -> c_l_i_3)
<{trans.cu;4082;27_368}> !_vArray_0 c_a_1 c_i_2::I !g_l_3 = <{trans.g_c1;4082;37_1379}> g_l_3 _vArray_0 c_a_1 c_i_2
<{trans.g_c1;4082;37_1379}> !g_l_0 _vArray_1 c_a_2 c_i_3::I = case g_l_0 (_predefined._Cons fundef_1_0 g_t_1_1 -> <{trans.cu;4082;27_368}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 fundef_1_0) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_t_1_1) (_ -> c_a_2)
<{trans.c;4069;23_1022}> !g_i_0::I !g_s_1::I g_a_2 = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_6 g_a_2 g_i_0 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{trans.c;4069;23_1022}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1 g_a_2_0)) (False -> _predefined._Nil) 
<{trans.cu;4072;23_1023}>::I !<{_v+_0}> c_l_i_1::I !g_l_2 = <{trans.g_c1;4072;32_1380}> g_l_2 <{_v+_0}> c_l_i_1
<{trans.g_c1;4072;32_1380}>::I !g_l_0 <{_v+_1}> c_l_i_2::I = case g_l_0 (_predefined._Cons group_1_0 g_t_1_1 -> <{trans.cu;4072;23_1023}> <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_2 StdInt.one_11) g_t_1_1) (_ -> c_l_i_2)
<{trans.cu;4072;23_1024}> !c_a_0 c_i_1::I !g_l_2 = <{trans.g_c1;4072;32_1381}> g_l_2 c_a_0 c_i_1
<{trans.g_c1;4072;32_1381}> !g_l_0 !c_a_1 c_i_2::I = case g_l_0 (_predefined._Cons group_1_0 g_t_1_1 -> <{trans.cu;4072;23_1024}> (_SystemArray.update_5 c_a_1 c_i_2 group_1_0) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_t_1_1) (_ -> c_a_1)
trans.fold_st_1025 main_dcl_module_n_0::I common_defs_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_1025 main_dcl_module_n_0 common_defs_1 x_1_1 (trans.expand_abstract_syn_types_in_function_type_390 main_dcl_module_n_0 common_defs_1 a_1_0 st_3)) 
trans.fold_st_1026 main_dcl_module_n_0::I common_defs_1 fun_heap_2 !_x_3 !st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_1026 main_dcl_module_n_0 common_defs_1 fun_heap_2 x_1_1 (trans.add_new_function_to_group_388 main_dcl_module_n_0 common_defs_1 fun_heap_2 a_1_0 st_4)) 
trans.fold_st_1027 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_1027 x_1_1 (trans.cleanup_attributes a_1_0 st_1)) 
<{trans.c;4082;49_1030}> !g_i_0::I !g_s_1::I g_a_2 = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = trans.uselect_654 g_a_2 g_i_0 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{trans.c;4082;49_1030}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1 g_a_2_0)) (False -> _predefined._Nil) 
<{trans.c;4082;49_1028}> !g_i_0::I !g_s_1::I g_a_2 = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = trans.uselect_654 g_a_2 g_i_0 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{trans.c;4082;49_1028}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1 g_a_2_0)) (False -> _predefined._Nil) 
<{trans.cu;4082;27_1029}>::I !<{_v+_0}> c_l_i_1::I !g_l_2 = <{trans.g_c1;4082;37_1382}> g_l_2 <{_v+_0}> c_l_i_1
<{trans.g_c1;4082;37_1382}>::I !g_l_0 <{_v+_1}> c_l_i_2::I = case g_l_0 (_predefined._Cons fundef_1_0 g_t_1_1 -> <{trans.cu;4082;27_1029}> <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_2 StdInt.one_11) g_t_1_1) (_ -> c_l_i_2)
<{trans.cu;4082;27_1031}> !c_a_0 c_i_1::I !g_l_2 = <{trans.g_c1;4082;37_1383}> g_l_2 c_a_0 c_i_1
<{trans.g_c1;4082;37_1383}> !g_l_0 !c_a_1 c_i_2::I = case g_l_0 (_predefined._Cons fundef_1_0 g_t_1_1 -> <{trans.cu;4082;27_1031}> (trans.update_653 c_a_1 c_i_2 fundef_1_0) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_t_1_1) (_ -> c_a_1)
<{trans.cu;4072;23_1032}>::I !c_l_i_0::I !g_l_1 = <{trans.g_c1;4072;32_1384}> g_l_1 c_l_i_0
<{trans.g_c1;4072;32_1384}>::I !g_l_0 !c_l_i_1::I = case g_l_0 (_predefined._Cons group_1_0 g_t_1_1 -> <{trans.cu;4072;23_1032}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) g_t_1_1) (_ -> c_l_i_1)
<{trans.cu;4082;27_1033}>::I !c_l_i_0::I !g_l_1 = <{trans.g_c1;4082;37_1385}> g_l_1 c_l_i_0
<{trans.g_c1;4082;37_1385}>::I !g_l_0 !c_l_i_1::I = case g_l_0 (_predefined._Cons fundef_1_0 g_t_1_1 -> <{trans.cu;4082;27_1033}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) g_t_1_1) (_ -> c_l_i_1)
trans.transformGroups !cleanup_info_0 !main_dcl_module_n_1::I !ro_StdStrictLists_module_n_2::I !def_min_3::I !def_max_4::I !groups_5 !fun_defs_6 !cons_args_7 !common_defs_8 !imported_funs_9 !imported_types_10 !type_def_infos_11 !var_heap_12 !type_heaps_13 !symbol_heap_14 !compile_with_fusion_15::B !error_16 !predef_symbols_17 = let !nr_of_funs_1_0::I = trans.size_652 fun_defs_6, _x_1_1 = _SystemArray.usize_7 groups_5, _x_1_2 = trans.transform_groups_382 def_min_3 def_max_4 main_dcl_module_n_1 ro_StdStrictLists_module_n_2 compile_with_fusion_15 0 (<{trans.c;4069;23_1022}> 0 (<{StdInt.-_7}> (select _x_1_1::_Tuple2 0) 1) (select _x_1_1::_Tuple2 1)) _predefined._Nil common_defs_8 imported_funs_9 imported_types_10 _predefined._Nil _predefined._Nil (trans._TransformInfo fun_defs_6 (_SystemArray.createArray_1 nr_of_funs_1_0 syntax.II_Empty) cons_args_7 _predefined._Nil Heap.newHeap var_heap_12 symbol_heap_14 type_heaps_13 type_def_infos_11 nr_of_funs_1_0 cleanup_info_0 general.No error_16 predef_symbols_17), ti_1_3 = select _x_1_2::_Tuple5 4, groups_1_4 = select _x_1_2::_Tuple5 0, _x_1_5 = trans.fold_st_1025 main_dcl_module_n_1 common_defs_8 (StdList.reverse (select _x_1_2::_Tuple5 3)) (_Tuple5 (select ti_1_3::trans._TransformInfo 0) (select _x_1_2::_Tuple5 1) (select _x_1_2::_Tuple5 2) (select ti_1_3::trans._TransformInfo 7) (select ti_1_3::trans._TransformInfo 5)), _x_1_6 = trans.fold_st_1026 main_dcl_module_n_1 common_defs_8 (select ti_1_3::trans._TransformInfo 4) (select ti_1_3::trans._TransformInfo 3) (_Tuple6 (<{trans.cu;4072;23_1024}> (_SystemArray._createArray_0 (<{trans.cu;4072;23_1032}> 0 (StdList.reverse groups_1_4))) 0 (StdList.reverse groups_1_4)) _predefined._Nil (select _x_1_5::_Tuple5 1) (select _x_1_5::_Tuple5 2) (select _x_1_5::_Tuple5 3) (select _x_1_5::_Tuple5 4)), fun_defs_1_7 = select _x_1_5::_Tuple5 0, _x_1_8 = trans.usize_655 fun_defs_1_7, new_fun_defs_1_9 = select _x_1_6::_Tuple6 1, _x_1_10 = trans.usize_655 fun_defs_1_7 in <{_Tuple9!511}> (select _x_1_6::_Tuple6 0) (<{trans.cu;4082;27_1031}> (trans._createArray_648 (<{trans.cu;4082;27_1033}> 0 (<{StdList.++}> (<{trans.c;4082;49_1028}> 0 (<{StdInt.-_7}> (select _x_1_8::_Tuple2 0) 1) (select _x_1_8::_Tuple2 1)) new_fun_defs_1_9))) 0 (<{StdList.++}> (<{trans.c;4082;49_1030}> 0 (<{StdInt.-_7}> (select _x_1_10::_Tuple2 0) 1) (select _x_1_10::_Tuple2 1)) new_fun_defs_1_9)) (select _x_1_6::_Tuple6 2) (select _x_1_6::_Tuple6 3) (select _x_1_6::_Tuple6 5) (select _x_1_6::_Tuple6 4) (trans.fold_st_1027 (select ti_1_3::trans._TransformInfo 10) (select ti_1_3::trans._TransformInfo 6)) (select ti_1_3::trans._TransformInfo 12) (select ti_1_3::trans._TransformInfo 13)
<{trans.=<_477}>::I !_x_0::B !_x_1::B = case _x_0 (True -> case _x_1 (True -> 0) (False -> -1) ) (False -> case _x_1 (True -> 1) (False -> 0) ) 
<{trans.<<<_500}> !file_0 !mode_1 = <{trans._c;4686;23_1386}> mode_1 file_0
<{trans._c;4686;23_1386}> !mode_0 !file_1 = case mode_0 (trans.NotRootCase -> <{StdFile.<<<_38}> file_1 "NotRootCase") (trans.RootCase -> <{StdFile.<<<_38}> file_1 "RootCase") (trans.RootCaseOfZombie -> <{StdFile.<<<_38}> file_1 "RootCaseOfZombie") 
<{trans.<<<_508}> !file_0 !symb_1 = case symb_1 (syntax._SymbIdent symb_ident_1_0 symb_kind_1_1 -> case symb_kind_1_1 (syntax.SK_Function symb_index_2_0 -> <{syntax.<<<_25}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) (<{StdFile.<<<_37}> (<{syntax.<<<_24}> file_0 (select symb_1::syntax._SymbIdent 0)) '@') symb_index_2_0) (syntax.SK_LocalMacroFunction symb_index_2_0 -> <{StdFile.<<<_36}> (<{StdFile.<<<_37}> (<{syntax.<<<_24}> file_0 (select symb_1::syntax._SymbIdent 0)) '@') symb_index_2_0) (syntax.SK_GeneratedFunction _x_2_0 symb_index_2_1 -> <{StdFile.<<<_36}> (<{StdFile.<<<_37}> (<{syntax.<<<_24}> file_0 (select symb_1::syntax._SymbIdent 0)) '@') symb_index_2_1) (syntax.SK_OverloadedFunction symb_index_2_0 -> <{syntax.<<<_25}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) (<{StdFile.<<<_38}> (<{syntax.<<<_24}> file_0 (select symb_1::syntax._SymbIdent 0)) "[o]@") symb_index_2_0) ) (_ -> <{syntax.<<<_24}> file_0 (select symb_1::syntax._SymbIdent 0))
<{trans.<<<_501}> !file_0 !_x_1 = case _x_1 (syntax.PR_Empty -> <{StdFile.<<<_38}> file_0 "(E)") (syntax.PR_Unused -> <{StdFile.<<<_38}> file_0 "(U)") (syntax.PR_Function ident_1_0 int_1_1 index_1_2 -> <{StdFile.<<<_38}> (<{trans.<<<_508}> (<{StdFile.<<<_38}> file_0 "(F:") ident_1_0) ")") (syntax.PR_Class app_1_0 binds_1_1 type_1_2 -> <{StdFile.<<<_38}> (<{trans.<<<_508}> (<{StdFile.<<<_38}> file_0 "(O::") (select app_1_0::syntax._App 0)) ")") (syntax.PR_Constructor ident_1_0 int_1_1 exprl_1_2 -> <{StdFile.<<<_38}> (<{trans.<<<_508}> (<{StdFile.<<<_38}> file_0 "(C:") ident_1_0) ")") (syntax.PR_GeneratedFunction ident_1_0 arity_1_1 index_1_2 -> <{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_37}> (<{trans.<<<_508}> (<{StdFile.<<<_38}> file_0 "(G:") ident_1_0) ' ') arity_1_1) ")") (syntax.PR_Curried ident_1_0 arity_1_1 -> <{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_37}> (<{trans.<<<_508}> (<{StdFile.<<<_38}> file_0 "(P:") ident_1_0) ' ') arity_1_1) ")") (syntax.PR_CurriedFunction ident_1_0 arity_1_1 index_1_2 -> <{StdFile.<<<_38}> (<{StdFile.<<<_36}> (<{StdFile.<<<_37}> (<{trans.<<<_508}> (<{StdFile.<<<_38}> file_0 "(CF:") ident_1_0) ' ') arity_1_1) ")") (syntax.PR_String _x_1_0 -> <{StdFile.<<<_38}> file_0 "(S)") (syntax.PR_Int _x_1_0 -> <{StdFile.<<<_38}> file_0 "(I)") (syntax.PR_Equal i_1_0 -> <{StdFile.<<<_37}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> file_0 "(=") i_1_0) ')') (syntax.PR_EqualRemove i_1_0 -> <{StdFile.<<<_37}> (<{StdFile.<<<_36}> (<{StdFile.<<<_38}> file_0 "(=R") i_1_0) ')') 
trans.showBody_433 !_vArray_0 !<{_v<<<_1}> !i_2::I !m_3::I a_4 f_5 = case (StdBool.not (<{StdInt.<_17}> i_2 m_3)) (True -> <{StdFile.<<<_38}> f_5 "}") (False -> trans.showBody_433 _vArray_0 <{_v<<<_1}> (<{StdInt.+_6}> i_2 StdInt.one_11) m_3 a_4 (<{StdFile.<<<_38}> (select <{_v<<<_1}>::<{StdFile.<<<;}> 0 f_5 (select _vArray_0::<{_SystemArray.Array;}> 3 a_4 i_2)) ", ")) 
trans.showBody_1034 !<{_v<<<_0}> !i_1::I !m_2::I a_3 f_4 = case (StdBool.not (<{StdInt.<_17}> i_1 m_2)) (True -> <{StdFile.<<<_38}> f_4 "}") (False -> trans.showBody_1034 <{_v<<<_0}> (<{StdInt.+_6}> i_1 StdInt.one_11) m_2 a_3 (<{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 f_4 (_SystemArray.select_3 a_3 i_1)) ", ")) 
<{trans.<<<_502}> !<{_v<<<_0}> !file_1 !array_2 = trans.showBody_1034 <{_v<<<_0}> 0 (_SystemArray.size_4 array_2) array_2 (<{StdFile.<<<_38}> file_1 "{")
<{trans.<<<_503}> !file_0 !_x_1 = case _x_1 (syntax.SK_Unknown -> <{StdFile.<<<_38}> file_0 "(SK_Unknown)") (syntax.SK_Function gi_1_0 -> <{syntax.<<<_25}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) (<{StdFile.<<<_38}> file_0 "(SK_Function)") gi_1_0) (syntax.SK_IclMacro gi_1_0 -> <{StdFile.<<<_36}> (<{StdFile.<<<_38}> file_0 "(SK_IclMacro)") gi_1_0) (syntax.SK_LocalMacroFunction gi_1_0 -> <{StdFile.<<<_36}> (<{StdFile.<<<_38}> file_0 "(SK_LocalMacroFunction)") gi_1_0) (syntax.SK_DclMacro gi_1_0 -> <{syntax.<<<_25}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) (<{StdFile.<<<_38}> file_0 "(SK_DclMacro)") gi_1_0) (syntax.SK_LocalDclMacroFunction gi_1_0 -> <{syntax.<<<_25}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) (<{StdFile.<<<_38}> file_0 "(SK_LocalDclMacroFunction)") gi_1_0) (syntax.SK_OverloadedFunction gi_1_0 -> <{syntax.<<<_25}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) (<{StdFile.<<<_38}> file_0 "(SK_OverloadedFunction)") gi_1_0) (syntax.SK_GeneratedFunction _x_1_0 gi_1_1 -> <{StdFile.<<<_36}> (<{StdFile.<<<_38}> file_0 "(SK_GeneratedFunction)") gi_1_1) (syntax.SK_Constructor gi_1_0 -> <{syntax.<<<_25}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) (<{StdFile.<<<_38}> file_0 "(SK_Constructor)") gi_1_0) (syntax.SK_Generic gi_1_0 tk_1_1 -> <{syntax.<<<_25}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) (<{StdFile.<<<_38}> file_0 "(SK_Constructor)") gi_1_0) (syntax.SK_TypeCode -> <{StdFile.<<<_38}> file_0 "(SK_TypeCode)") (_ -> <{StdFile.<<<_38}> file_0 "(SK_UNKNOWN)")
trans.showTail_434 !<{_v<<<_0}> !_vList_1 f_2 !_x_3 = case _x_3 (<{_predefined._|Cons}> x_1_0 _x_1_1 -> case _x_1_1 (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 f_2 x_1_0) "] ") (_ -> trans.showTail_434 <{_v<<<_0}> _vList_1 (<{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 f_2 x_1_0) ", ") _x_1_1)) (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> f_2 "] ") 
trans.showTail_1035 !<{_v<<<_0}> !_vUTSList_1 f_2 !_x_3 = case _x_3 (<{_predefined._|Cons}> x_1_0 _x_1_1 -> case _x_1_1 (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 f_2 x_1_0) "] ") (_ -> trans.showTail_1035 <{_v<<<_0}> _vUTSList_1 (<{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 f_2 x_1_0) ", ") _x_1_1)) (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> f_2 "] ") 
<{trans.<<<_505}> !_vUTSList_0 !<{_v<<<_1}> !file_2 !_x_3 = case _x_3 (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> file_2 "[]") (_ -> trans.showTail_1035 <{_v<<<_1}> _vUTSList_0 (<{StdFile.<<<_38}> file_2 "[") _x_3)
trans.showTail_1037 !<{_v<<<_0}> f_1 !_x_2 = case _x_2 (<{_predefined._|Cons}> x_1_0 _x_1_1 -> case _x_1_1 (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 f_1 x_1_0) "] ") (_ -> trans.showTail_1037 <{_v<<<_0}> (<{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 f_1 x_1_0) ", ") _x_1_1)) (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> f_1 "] ") 
<{trans.<<<_1036}> !<{_v<<<_0}> !file_1 !_x_2 = case _x_2 (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> file_1 "[]") (_ -> trans.showTail_1037 <{_v<<<_0}> (<{StdFile.<<<_38}> file_1 "[") _x_2)
trans.showTail_1039 !f_0 !_x_1 = case _x_1 (<{_predefined._|Cons}> x_1_0 _x_1_1 -> case _x_1_1 (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> (<{general.<<<_6}> f_0 x_1_0) "] ") (_ -> trans.showTail_1039 (<{StdFile.<<<_38}> (<{general.<<<_6}> f_0 x_1_0) ", ") _x_1_1)) (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> f_0 "] ") 
<{trans.<<<_1038}> !file_0 !_x_1 = case _x_1 (<{_predefined._|Nil}> -> <{StdFile.<<<_38}> file_0 "[]") (_ -> trans.showTail_1039 (<{StdFile.<<<_38}> file_0 "[") _x_1)
<{trans.<<<_504}> !file_0 !_x_1 = case _x_1 (syntax._ConsClasses cc_size_1_0 cc_args_1_1 cc_linear_bits_1_2 cc_producer_1_3 -> <{general.<<<_6}> (<{trans.<<<_1038}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) file_0 cc_args_1_1) cc_linear_bits_1_2) cc_producer_1_3) 
trans.fold_st_644 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_644 op_0 x_1_1 (op_0 a_1_0 st_2)) 
<{trans.c;4777;63_436}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_3 g_i_1 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{trans.c;4777;63_436}> _vArray_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_2_0)) (False -> _predefined._Nil) 
trans.anon_435 !<{_v<<<_0}> pr_1 file_2 = <{StdFile.<<<_38}> (select <{_v<<<_0}>::<{StdFile.<<<;}> 0 file_2 pr_1) ","
<{trans.c;4777;63_1041}> !g_i_0::I !g_s_1::I g_a_2 = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_6 g_a_2 g_i_0 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{trans.c;4777;63_1041}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1 g_a_2_0)) (False -> _predefined._Nil) 
trans.anon_1040 !pr_0 !file_1 = <{StdFile.<<<_38}> (<{trans.<<<_501}> file_1 pr_0) ","
trans.fold_st_1042 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> trans.fold_st_1042 x_1_1 (trans.anon_1040 a_1_0 st_1)) 
trans.write_ii_437 !_x_0 file_1 = case _x_0 (syntax.II_Empty -> file_1) (syntax.II_Node producers_1_0 _x_1_1 l_1_2 r_1_3 -> let _x_2_0 = _SystemArray.usize_7 producers_1_0 in trans.write_ii_437 r_1_3 (<{StdFile.<<<_38}> (trans.fold_st_1042 (<{trans.c;4777;63_1041}> 0 (<{StdInt.-_7}> (select _x_2_0::_Tuple2 0) 1) (select _x_2_0::_Tuple2 1)) (<{StdFile.<<<_38}> (trans.write_ii_437 l_1_2 file_1) "(")) ")")) 
<{trans.<<<_506}> !file_0 !ii_1 = <{StdFile.<<<_38}> (trans.write_ii_437 ii_1 (<{StdFile.<<<_38}> file_0 "[")) "]"
<{trans.<<<_507}> !file_0 !p_1 = <{StdFile.<<<_36}> file_0 (Heap.ptrToInt p_1)
<{trans.<<<_510}> !file_0 !_x_1 = case _x_1 (syntax._Special spec_index_1_0 spec_types_1_1 spec_vars_1_2 spec_attrs_1_3 -> <{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_19}>) (<{StdFile.<<<_38}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_20}>) (<{StdFile.<<<_38}> (<{general.<<<_13}> (<{StdFile.<<<;}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_23}>))) (<{StdFile.<<<_38}> (<{syntax.<<<_25}> (<{StdFile.<<<;}> <{StdFile.<<<_36}>) (<{StdFile.<<<_38}> file_0 "spec_index") spec_index_1_0) "spec_types") spec_types_1_1) "spec_vars") spec_vars_1_2) "spec_attrs") spec_attrs_1_3) 
<{trans.<<<_509}> !file_0 !spec_1 = <{trans._c;4805;23_1387}> spec_1 file_0
<{trans._c;4805;23_1387}> !spec_0 !file_1 = case spec_0 (syntax.SP_ParsedSubstitutions _x_1_0 -> <{StdFile.<<<_38}> file_1 "SP_ParsedSubstitutions") (syntax.SP_Substitutions _x_1_0 -> <{StdFile.<<<_38}> file_1 "SP_Substitutions") (syntax.SP_ContextTypes l_1_0 -> <{StdFile.<<<_38}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{trans.<<<_510}>) (<{StdFile.<<<_38}> file_1 "(SP_ContextTypes: ") l_1_0) ")") (syntax.SP_TypeOffset _x_1_0 -> <{StdFile.<<<_38}> file_1 "SP_TypeOffset") (syntax.SP_None -> <{StdFile.<<<_38}> file_1 "SP_None") 
<{trans.<<<_511}> !file_0 !_x_1 = case _x_1 (syntax.EI_Empty -> <{StdFile.<<<_38}> file_0 "EI_Empty") (syntax.EI_DictionaryType t_1_0 -> <{StdFile.<<<_38}> (<{syntax.<<<_23}> (<{StdFile.<<<_38}> file_0 "<EI_DictionaryType: ") t_1_0) ">") (_ -> <{StdFile.<<<_38}> file_0 "EI_Other")
<{trans.<<<_512}> !file_0 !co_1 = <{StdFile.<<<_37}> (<{trans.<<<_507}> (<{StdFile.<<<_38}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_23}>) (<{StdFile.<<<_38}> (<{syntax.<<<_68}> file_0 (select co_1::syntax._TypeContext 0)) " ") (select co_1::syntax._TypeContext 1)) " <") (select co_1::syntax._TypeContext 2)) '>'
trans.copy_523 !_vcopy_0 !_x_1 !ci_2 !cs_3 = case _x_1 (general.Yes x_1_0 -> let _x_2_0 = select _vcopy_0::<{trans.copy;}> 0 x_1_0 ci_2 cs_3 in <{_Tuple2!3}> (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (_ -> <{_Tuple2!3}> _x_1 cs_3)
<{trans.TD;TransformInfo}> _x_0::B = _predefined._Nil
<{trans.TD;RI}> _x_0::B = _predefined._Nil
<{trans.TD;ReadOnlyTI}> _x_0::B = _predefined._Nil
<{trans.TD;TransformFunctionInfo}> _x_0::B = _predefined._Nil
<{trans.TD;RootCaseMode}> _x_0::B = _predefined._Nil
<{trans.TD;CopyState}> _x_0::B = _predefined._Nil
<{trans.TD;CopyInfo}> _x_0::B = _predefined._Nil
<{trans.TD;AciFreeVarsHandleMode}> _x_0::B = _predefined._Nil
<{trans.TD;UniquenessRequirement}> _x_0::B = _predefined._Nil
<{trans.TD;ATypesWithStrictness}> _x_0::B = _predefined._Nil
<{trans.TD;OptionalProducerType}> _x_0::B = _predefined._Nil
<{trans.TD;DetermineArgsState}> _x_0::B = _predefined._Nil
<{trans.TD;RenewState}> _x_0::B = _predefined._Nil
<{trans.TD;FreeVarInfo}> _x_0::B = _predefined._Nil
<{trans.TD;transform;}> _x_0::B = _predefined._Nil
<{trans.TD;replaceIntegers;}> _x_0::B = _predefined._Nil
<{trans.TD;clearVariables;}> _x_0::B = _predefined._Nil
<{trans.TD;freeVariables;}> _x_0::B = _predefined._Nil
<{trans.TD;copy;}> _x_0::B = _predefined._Nil

:: trans.RootCaseMode = trans.NotRootCase | trans.RootCase | trans.RootCaseOfZombie
:: trans.AciFreeVarsHandleMode = trans.LeaveAciFreeVars | trans.RemoveAciFreeVars | trans.SubstituteAciFreeVars
:: trans.OptionalProducerType = trans.ProducerType !a1 !a2 | trans.NoProducerType

|| Converted Records
:: trans._TransformInfo = {!trans.ti_fun_defs, !trans.ti_instances, !trans.ti_cons_args, !trans.ti_new_functions, !trans.ti_fun_heap, !trans.ti_var_heap, !trans.ti_symbol_heap, !trans.ti_type_heaps, !trans.ti_type_def_infos, !trans.ti_next_fun_nr, !trans.ti_cleanup_info, !trans.ti_recursion_introduced, !trans.ti_error_file, !trans.ti_predef_symbols}

:: trans._RI = {!trans.ri_fun_index::I, !trans.ri_fun_ptr}

:: trans._ReadOnlyTI = {!trans.ro_imported_funs, !trans.ro_common_defs, !trans.ro_root_case_mode, !trans.ro_tfi, !trans.ro_main_dcl_module_n::I, !trans.ro_transform_fusion::B, !trans.ro_StdStrictLists_module_n::I, !trans.ro_StdGeneric_module_n::I}

:: trans._TransformFunctionInfo = {!trans.tfi_root, !trans.tfi_case, !trans.tfi_args, !trans.tfi_vars, !trans.tfi_orig, !trans.tfi_n_args_before_producer::I, !trans.tfi_n_producer_args::I}

:: trans._CopyState = {!trans.cs_var_heap, !trans.cs_symbol_heap, !trans.cs_opt_type_heaps, !trans.cs_cleanup_info}

:: trans._CopyInfo = {!trans.ci_handle_aci_free_vars}

:: trans._UniquenessRequirement = {!trans.ur_offered, !trans.ur_demanded, !trans.ur_attr_ineqs}

:: trans._ATypesWithStrictness = {!trans.ats_types, !trans.ats_strictness}

:: trans._DetermineArgsState = {!trans.das_vars, !trans.das_arg_types, !trans.das_next_attr_nr::I, !trans.das_new_linear_bits, !trans.das_new_cons_args, !trans.das_uniqueness_requirements, !trans.das_AVI_Attr_TA_TempVar_info_ptrs, !trans.das_subst, !trans.das_type_heaps, !trans.das_fun_defs, !trans.das_fun_heap, !trans.das_var_heap, !trans.das_cons_args, !trans.das_predef, !trans.das_removed_equal_info_ptr}

:: trans._FreeVarInfo = {!trans.fvi_var_heap, !trans.fvi_expr_heap, !trans.fvi_variables, !trans.fvi_expr_ptrs}

:: <{trans.transform;}> = {!trans.transform}

:: <{trans.replaceIntegers;}> = {!trans.replaceIntegers}

:: <{trans.clearVariables;}> = {!trans.clearVariables}

:: <{trans.freeVariables;}> = {!trans.freeVariables}

:: <{trans.copy;}> = {!trans.copy}

