|| ?module? analtypes


analtypes.i_fold_st_197 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_197 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.i_fold_st_196 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_196 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
<{analtypes.cu;72;37_40}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{analtypes.cu;72;37_40}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _vArray_0::<{_SystemArray.Array;}> 0 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
<{analtypes.cu;73;37_41}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{analtypes.cu;73;37_41}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _vArray_0::<{_SystemArray.Array;}> 0 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
<{analtypes.cu;74;37_42}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{analtypes.cu;74;37_42}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _vArray_0::<{_SystemArray.Array;}> 0 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
analtypes.create_type_defs_marks_and_infos_for_module_43 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 !used_module_numbers_6 main_dcl_module_index_7::I n_types_without_not_exported_dictionaries_8::I icl_type_defs_9 !module_index_10::I !_x_11 = case _x_11 (_Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3 -> case (containers.inNumberSet module_index_10 used_module_numbers_6) (True -> case (<{StdInt.==_16}> module_index_10 main_dcl_module_index_7) (True -> _Tuple4 (select (select (select _vArray_0::<{_SystemArray.Array;}> 3 dcl_modules_1_0 module_index_10)::syntax._DclModule 7)::_Tuple2 1) (select _vArray_1::<{_SystemArray.Array;}> 5 type_defs_1_1 module_index_10 icl_type_defs_9) (select _vArray_3::<{_SystemArray.Array;}> 5 marks_1_2 module_index_10 (select _vArray_2::<{_SystemArray.Array;}> 1 n_types_without_not_exported_dictionaries_8 -1)) (select _vArray_5::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_10 (select _vArray_4::<{_SystemArray.Array;}> 1 n_types_without_not_exported_dictionaries_8 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) (False -> let _x_4_0::I = select (select _vArray_0::<{_SystemArray.Array;}> 3 dcl_modules_1_0 module_index_10)::syntax._DclModule 7, _x_4_1 = select _x_4_0::_Tuple2 0, com_type_defs_4_2 = select _x_4_1::syntax._CommonDefs 0, nr_of_types_4_3 = <{StdInt.-_7}> (analtypes.size_242 com_type_defs_4_2) (analtypes.size_282 (select _x_4_1::syntax._CommonDefs 3)) in _Tuple4 (select _x_4_0::_Tuple2 1) (select _vArray_1::<{_SystemArray.Array;}> 5 type_defs_1_1 module_index_10 com_type_defs_4_2) (select _vArray_3::<{_SystemArray.Array;}> 5 marks_1_2 module_index_10 (select _vArray_2::<{_SystemArray.Array;}> 1 nr_of_types_4_3 -1)) (select _vArray_5::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_10 (select _vArray_4::<{_SystemArray.Array;}> 1 nr_of_types_4_3 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) ) (False -> _Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3) ) 
<{analtypes.cu;72;37_342}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{analtypes.cu;72;37_342}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (analtypes._createArray_238 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
<{analtypes.cu;73;37_343}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{analtypes.cu;73;37_343}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (_SystemArray._createArray_8 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
<{analtypes.cu;74;37_344}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{analtypes.cu;74;37_344}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (analtypes._createArray_270 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
analtypes.create_type_defs_marks_and_infos_for_module_345 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !used_module_numbers_5 main_dcl_module_index_6::I n_types_without_not_exported_dictionaries_7::I icl_type_defs_8 !module_index_9::I !_x_10 = case _x_10 (_Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3 -> case (containers.inNumberSet module_index_9 used_module_numbers_5) (True -> case (<{StdInt.==_16}> module_index_9 main_dcl_module_index_6) (True -> _Tuple4 (select (select (analtypes.select_257 dcl_modules_1_0 module_index_9)::syntax._DclModule 7)::_Tuple2 1) (select _vArray_0::<{_SystemArray.Array;}> 5 type_defs_1_1 module_index_9 icl_type_defs_8) (select _vArray_2::<{_SystemArray.Array;}> 5 marks_1_2 module_index_9 (select _vArray_1::<{_SystemArray.Array;}> 1 n_types_without_not_exported_dictionaries_7 -1)) (select _vArray_4::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_9 (select _vArray_3::<{_SystemArray.Array;}> 1 n_types_without_not_exported_dictionaries_7 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) (False -> let _x_4_0::I = select (analtypes.select_257 dcl_modules_1_0 module_index_9)::syntax._DclModule 7, _x_4_1 = select _x_4_0::_Tuple2 0, com_type_defs_4_2 = select _x_4_1::syntax._CommonDefs 0, nr_of_types_4_3 = <{StdInt.-_7}> (analtypes.size_242 com_type_defs_4_2) (analtypes.size_282 (select _x_4_1::syntax._CommonDefs 3)) in _Tuple4 (select _x_4_0::_Tuple2 1) (select _vArray_0::<{_SystemArray.Array;}> 5 type_defs_1_1 module_index_9 com_type_defs_4_2) (select _vArray_2::<{_SystemArray.Array;}> 5 marks_1_2 module_index_9 (select _vArray_1::<{_SystemArray.Array;}> 1 nr_of_types_4_3 -1)) (select _vArray_4::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_9 (select _vArray_3::<{_SystemArray.Array;}> 1 nr_of_types_4_3 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) ) (False -> _Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3) ) 
analtypes.i_fold_st_346 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_346 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
<{analtypes.cu;72;37_347}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{analtypes.cu;72;37_347}> (_SystemArray.update_45 c_a_0 c_i_1 (analtypes._createArray_238 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
<{analtypes.cu;73;37_348}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{analtypes.cu;73;37_348}> (_SystemArray.update_45 c_a_0 c_i_1 (_SystemArray._createArray_8 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
<{analtypes.cu;74;37_349}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{analtypes.cu;74;37_349}> (_SystemArray.update_45 c_a_0 c_i_1 (analtypes._createArray_270 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
analtypes.create_type_defs_marks_and_infos_for_module_350 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !used_module_numbers_4 main_dcl_module_index_5::I n_types_without_not_exported_dictionaries_6::I icl_type_defs_7 !module_index_8::I !_x_9 = case _x_9 (_Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3 -> case (containers.inNumberSet module_index_8 used_module_numbers_4) (True -> case (<{StdInt.==_16}> module_index_8 main_dcl_module_index_5) (True -> _Tuple4 (select (select (analtypes.select_257 dcl_modules_1_0 module_index_8)::syntax._DclModule 7)::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_8 icl_type_defs_7) (select _vArray_1::<{_SystemArray.Array;}> 5 marks_1_2 module_index_8 (select _vArray_0::<{_SystemArray.Array;}> 1 n_types_without_not_exported_dictionaries_6 -1)) (select _vArray_3::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_8 (select _vArray_2::<{_SystemArray.Array;}> 1 n_types_without_not_exported_dictionaries_6 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) (False -> let _x_4_0::I = select (analtypes.select_257 dcl_modules_1_0 module_index_8)::syntax._DclModule 7, _x_4_1 = select _x_4_0::_Tuple2 0, com_type_defs_4_2 = select _x_4_1::syntax._CommonDefs 0, nr_of_types_4_3 = <{StdInt.-_7}> (analtypes.size_242 com_type_defs_4_2) (analtypes.size_282 (select _x_4_1::syntax._CommonDefs 3)) in _Tuple4 (select _x_4_0::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_8 com_type_defs_4_2) (select _vArray_1::<{_SystemArray.Array;}> 5 marks_1_2 module_index_8 (select _vArray_0::<{_SystemArray.Array;}> 1 nr_of_types_4_3 -1)) (select _vArray_3::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_8 (select _vArray_2::<{_SystemArray.Array;}> 1 nr_of_types_4_3 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) ) (False -> _Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3) ) 
analtypes.i_fold_st_351 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_351 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.create_type_defs_marks_and_infos_for_module_352 !_vArray_0 !_vArray_1 !_vArray_2 !used_module_numbers_3 main_dcl_module_index_4::I n_types_without_not_exported_dictionaries_5::I icl_type_defs_6 !module_index_7::I !_x_8 = case _x_8 (_Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3 -> case (containers.inNumberSet module_index_7 used_module_numbers_3) (True -> case (<{StdInt.==_16}> module_index_7 main_dcl_module_index_4) (True -> _Tuple4 (select (select (analtypes.select_257 dcl_modules_1_0 module_index_7)::syntax._DclModule 7)::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_7 icl_type_defs_6) (select _vArray_0::<{_SystemArray.Array;}> 5 marks_1_2 module_index_7 (_SystemArray.createArray_9 n_types_without_not_exported_dictionaries_5 -1)) (select _vArray_2::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_7 (select _vArray_1::<{_SystemArray.Array;}> 1 n_types_without_not_exported_dictionaries_5 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) (False -> let _x_4_0::I = select (analtypes.select_257 dcl_modules_1_0 module_index_7)::syntax._DclModule 7, _x_4_1 = select _x_4_0::_Tuple2 0, com_type_defs_4_2 = select _x_4_1::syntax._CommonDefs 0, nr_of_types_4_3 = <{StdInt.-_7}> (analtypes.size_242 com_type_defs_4_2) (analtypes.size_282 (select _x_4_1::syntax._CommonDefs 3)) in _Tuple4 (select _x_4_0::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_7 com_type_defs_4_2) (select _vArray_0::<{_SystemArray.Array;}> 5 marks_1_2 module_index_7 (_SystemArray.createArray_9 nr_of_types_4_3 -1)) (select _vArray_2::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_7 (select _vArray_1::<{_SystemArray.Array;}> 1 nr_of_types_4_3 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) ) (False -> _Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3) ) 
analtypes.i_fold_st_353 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_353 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.create_type_defs_marks_and_infos_for_module_354 !_vArray_0 !_vArray_1 !used_module_numbers_2 main_dcl_module_index_3::I n_types_without_not_exported_dictionaries_4::I icl_type_defs_5 !module_index_6::I !_x_7 = case _x_7 (_Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3 -> case (containers.inNumberSet module_index_6 used_module_numbers_2) (True -> case (<{StdInt.==_16}> module_index_6 main_dcl_module_index_3) (True -> _Tuple4 (select (select (analtypes.select_257 dcl_modules_1_0 module_index_6)::syntax._DclModule 7)::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_6 icl_type_defs_5) (_SystemArray.update_45 marks_1_2 module_index_6 (_SystemArray.createArray_9 n_types_without_not_exported_dictionaries_4 -1)) (select _vArray_1::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_6 (select _vArray_0::<{_SystemArray.Array;}> 1 n_types_without_not_exported_dictionaries_4 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) (False -> let _x_4_0::I = select (analtypes.select_257 dcl_modules_1_0 module_index_6)::syntax._DclModule 7, _x_4_1 = select _x_4_0::_Tuple2 0, com_type_defs_4_2 = select _x_4_1::syntax._CommonDefs 0, nr_of_types_4_3 = <{StdInt.-_7}> (analtypes.size_242 com_type_defs_4_2) (analtypes.size_282 (select _x_4_1::syntax._CommonDefs 3)) in _Tuple4 (select _x_4_0::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_6 com_type_defs_4_2) (_SystemArray.update_45 marks_1_2 module_index_6 (_SystemArray.createArray_9 nr_of_types_4_3 -1)) (select _vArray_1::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_6 (select _vArray_0::<{_SystemArray.Array;}> 1 nr_of_types_4_3 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) ) (False -> _Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3) ) 
analtypes.i_fold_st_355 !_vArray_0 !_vArray_1 used_module_numbers_2 main_dcl_module_index_3::I n_types_without_not_exported_dictionaries_4::I icl_type_defs_5 !fr_6::I !to_7::I !st_8 = case (StdBool.not (<{StdInt.<_17}> fr_6 to_7)) (True -> st_8) (False -> analtypes.i_fold_st_355 _vArray_0 _vArray_1 used_module_numbers_2 main_dcl_module_index_3 n_types_without_not_exported_dictionaries_4 icl_type_defs_5 (<{StdInt.+_6}> fr_6 StdInt.one_11) to_7 (analtypes.create_type_defs_marks_and_infos_for_module_354 _vArray_0 _vArray_1 used_module_numbers_2 main_dcl_module_index_3 n_types_without_not_exported_dictionaries_4 icl_type_defs_5 fr_6 st_8)) 
analtypes.create_type_defs_marks_and_infos_for_module_357 !_vArray_0 !used_module_numbers_1 main_dcl_module_index_2::I n_types_without_not_exported_dictionaries_3::I icl_type_defs_4 !module_index_5::I !_x_6 = case _x_6 (_Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3 -> case (containers.inNumberSet module_index_5 used_module_numbers_1) (True -> case (<{StdInt.==_16}> module_index_5 main_dcl_module_index_2) (True -> _Tuple4 (select (select (analtypes.select_257 dcl_modules_1_0 module_index_5)::syntax._DclModule 7)::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_5 icl_type_defs_4) (_SystemArray.update_45 marks_1_2 module_index_5 (_SystemArray.createArray_9 n_types_without_not_exported_dictionaries_3 -1)) (select _vArray_0::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_5 (analtypes.createArray_271 n_types_without_not_exported_dictionaries_3 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) (False -> let _x_4_0::I = select (analtypes.select_257 dcl_modules_1_0 module_index_5)::syntax._DclModule 7, _x_4_1 = select _x_4_0::_Tuple2 0, com_type_defs_4_2 = select _x_4_1::syntax._CommonDefs 0, nr_of_types_4_3 = <{StdInt.-_7}> (analtypes.size_242 com_type_defs_4_2) (analtypes.size_282 (select _x_4_1::syntax._CommonDefs 3)) in _Tuple4 (select _x_4_0::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_5 com_type_defs_4_2) (_SystemArray.update_45 marks_1_2 module_index_5 (_SystemArray.createArray_9 nr_of_types_4_3 -1)) (select _vArray_0::<{_SystemArray.Array;}> 5 type_def_infos_1_3 module_index_5 (analtypes.createArray_271 nr_of_types_4_3 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) ) (False -> _Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3) ) 
analtypes.i_fold_st_356 !_vArray_0 used_module_numbers_1 main_dcl_module_index_2::I n_types_without_not_exported_dictionaries_3::I icl_type_defs_4 !fr_5::I !to_6::I !st_7 = case (StdBool.not (<{StdInt.<_17}> fr_5 to_6)) (True -> st_7) (False -> analtypes.i_fold_st_356 _vArray_0 used_module_numbers_1 main_dcl_module_index_2 n_types_without_not_exported_dictionaries_3 icl_type_defs_4 (<{StdInt.+_6}> fr_5 StdInt.one_11) to_6 (analtypes.create_type_defs_marks_and_infos_for_module_357 _vArray_0 used_module_numbers_1 main_dcl_module_index_2 n_types_without_not_exported_dictionaries_3 icl_type_defs_4 fr_5 st_7)) 
analtypes.create_type_defs_marks_and_infos_for_module_359 !used_module_numbers_0 main_dcl_module_index_1::I n_types_without_not_exported_dictionaries_2::I icl_type_defs_3 !module_index_4::I !_x_5 = case _x_5 (_Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3 -> case (containers.inNumberSet module_index_4 used_module_numbers_0) (True -> case (<{StdInt.==_16}> module_index_4 main_dcl_module_index_1) (True -> _Tuple4 (select (select (analtypes.select_257 dcl_modules_1_0 module_index_4)::syntax._DclModule 7)::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_4 icl_type_defs_3) (_SystemArray.update_45 marks_1_2 module_index_4 (_SystemArray.createArray_9 n_types_without_not_exported_dictionaries_2 -1)) (_SystemArray.update_45 type_def_infos_1_3 module_index_4 (analtypes.createArray_271 n_types_without_not_exported_dictionaries_2 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) (False -> let _x_4_0::I = select (analtypes.select_257 dcl_modules_1_0 module_index_4)::syntax._DclModule 7, _x_4_1 = select _x_4_0::_Tuple2 0, com_type_defs_4_2 = select _x_4_1::syntax._CommonDefs 0, nr_of_types_4_3 = <{StdInt.-_7}> (analtypes.size_242 com_type_defs_4_2) (analtypes.size_282 (select _x_4_1::syntax._CommonDefs 3)) in _Tuple4 (select _x_4_0::_Tuple2 1) (_SystemArray.update_45 type_defs_1_1 module_index_4 com_type_defs_4_2) (_SystemArray.update_45 marks_1_2 module_index_4 (_SystemArray.createArray_9 nr_of_types_4_3 -1)) (_SystemArray.update_45 type_def_infos_1_3 module_index_4 (analtypes.createArray_271 nr_of_types_4_3 (syntax._TypeDefInfo _predefined._Nil 0 _predefined._Nil -1 _predefined._Nil _predefined._Nil -1 typeproperties.EmptyTypeClassification general.No)))) ) (False -> _Tuple4 dcl_modules_1_0 type_defs_1_1 marks_1_2 type_def_infos_1_3) ) 
analtypes.i_fold_st_358 used_module_numbers_0 main_dcl_module_index_1::I n_types_without_not_exported_dictionaries_2::I icl_type_defs_3 !fr_4::I !to_5::I !st_6 = case (StdBool.not (<{StdInt.<_17}> fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_358 used_module_numbers_0 main_dcl_module_index_1 n_types_without_not_exported_dictionaries_2 icl_type_defs_3 (<{StdInt.+_6}> fr_4 StdInt.one_11) to_5 (analtypes.create_type_defs_marks_and_infos_for_module_359 used_module_numbers_0 main_dcl_module_index_1 n_types_without_not_exported_dictionaries_2 icl_type_defs_3 fr_4 st_6)) 
analtypes.create_type_defs_marks_and_infos_55 used_module_numbers_0 main_dcl_module_index_1::I n_types_without_not_exported_dictionaries_2::I !nr_of_modules_3::I !_x_4 = case _x_4 (_Tuple2 icl_type_defs_1_0 dcl_modules_1_1 -> let g_s_2_0::I = <{StdInt.-_7}> nr_of_modules_3 1, g_s_2_1::I = <{StdInt.-_7}> nr_of_modules_3 1, g_s_2_2::I = <{StdInt.-_7}> nr_of_modules_3 1 in analtypes.i_fold_st_358 used_module_numbers_0 main_dcl_module_index_1 n_types_without_not_exported_dictionaries_2 icl_type_defs_1_0 0 nr_of_modules_3 (_Tuple4 dcl_modules_1_1 (<{analtypes.cu;72;37_347}> (_SystemArray._createArray_40 (<{StdInt.+_6}> g_s_2_0 StdInt.one_11)) 0 g_s_2_0) (<{analtypes.cu;73;37_348}> (_SystemArray._createArray_40 (<{StdInt.+_6}> g_s_2_1 StdInt.one_11)) 0 g_s_2_1) (<{analtypes.cu;74;37_349}> (_SystemArray._createArray_40 (<{StdInt.+_6}> g_s_2_2 StdInt.one_11)) 0 g_s_2_2))) 
analtypes.i_fold_st_195 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_195 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.i_fold_st_194 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_194 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.i_fold_st_193 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_193 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.fold_st_192 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_192 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.push_on_dep_stack_63 !type_index_0 !pi_1 = case type_index_0 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case pi_1 (analtypes._PartitioningInfo pi_marks_2_0 pi_type_defs_2_1 pi_type_def_infos_2_2 pi_next_num_2_3 pi_next_group_num_2_4 pi_groups_2_5 pi_deps_2_6 pi_error_2_7 -> update pi_1::analtypes._PartitioningInfo [0:_SystemArray.update_13 (_SystemArray.select_43 pi_marks_2_0 gi_module_1_0) gi_index_1_1 pi_next_num_2_3,3:<{StdInt.+_6}> pi_next_num_2_3 StdInt.one_11,6:_predefined._Cons type_index_0 pi_deps_2_6]) ) 
analtypes.close_group_59 !<{_v==_0}> first_type_1 !_x_2 group_3 = case _x_2 (_predefined._Cons td_1_0 tds_1_1 -> case (select <{_v==_0}>::<{StdOverloaded.==;}> 0 first_type_1 td_1_0) (True -> _Tuple2 tds_1_1 (_predefined._Cons td_1_0 group_3)) (False -> analtypes.close_group_59 <{_v==_0}> first_type_1 tds_1_1 (_predefined._Cons td_1_0 group_3)) ) 
analtypes.fold_st_191 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_191 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.typeSynonymError !<{_v<<<_0}> !<{_v<<<_1}> !type_symb_2 !msg_3 !error_4 = checksupport.checkError <{_v<<<_0}> <{_v<<<_1}> type_symb_2 msg_3 error_4
analtypes.is_synonym_or_new_type_66::B !_x_0 = case _x_0 (syntax.SynType _x_1_0 -> True) (syntax.NewType _x_1_0 -> True) (_ -> False)
analtypes.typeSynonymError_361 !<{_v<<<_0}> !type_symb_1 !msg_2 !error_3 = checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) <{_v<<<_0}> type_symb_1 msg_2 error_3
analtypes.typeSynonymError_362 !type_symb_0 !msg_1 !error_2 = checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) type_symb_0 msg_1 error_2
analtypes.check_cyclic_type_def_60 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 type_defs_4 !td_5 !_x_6 = case td_5 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_6 (_Tuple3 group_2_0 marks_2_1 error_2_2 -> let _x_3_0::I = select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 marks_2_1 gi_module_1_0) gi_index_1_1, mark_3_1 = select _x_3_0::_Tuple2 0 in case (<{StdInt.==_16}> mark_3_1 -1) (True -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) (analtypes.typeSynonymError_362 (select (select _vArray_3::<{_SystemArray.Array;}> 3 (select _vArray_2::<{_SystemArray.Array;}> 3 type_defs_4 gi_module_1_0) gi_index_1_1)::syntax._TypeDef 0) "cyclic dependency between type synonyms" error_2_2)) (False -> case (<{StdInt.<_17}> mark_3_1 2147483647) (True -> let _x_6_0 = select _vArray_3::<{_SystemArray.Array;}> 3 (select _vArray_2::<{_SystemArray.Array;}> 3 type_defs_4 gi_module_1_0) gi_index_1_1 in case (analtypes.is_synonym_or_new_type_66 (select _x_6_0::syntax._TypeDef 5)) (True -> let _x_8_0 = analtypes.check_cyclic_type_defs_65 _vArray_0 _vArray_1 _vArray_2 _vArray_3 (select _x_6_0::syntax._TypeDef 8) type_defs_4 (_predefined._Cons td_5 group_2_0) (select _vArray_1::<{_SystemArray.Array;}> 5 (select _vArray_0::<{_SystemArray.Array;}> 3 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 -1) (checksupport.pushErrorAdmin_32 (checksupport.newPosition (select _x_6_0::syntax._TypeDef 0) (select _x_6_0::syntax._TypeDef 7)) error_2_2) in _Tuple3 (select _x_8_0::_Tuple3 0) (select _vArray_1::<{_SystemArray.Array;}> 5 (select _vArray_0::<{_SystemArray.Array;}> 3 (select _x_8_0::_Tuple3 1) gi_module_1_0) gi_index_1_1 2147483647) (checksupport.popErrorAdmin_31 (select _x_8_0::_Tuple3 2))) (False -> _Tuple3 (_predefined._Cons td_5 group_2_0) (select _vArray_1::<{_SystemArray.Array;}> 5 (select _vArray_0::<{_SystemArray.Array;}> 3 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 2147483647) error_2_2) ) (False -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) error_2_2) ) ) ) 
analtypes.fold_st_360 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 type_defs_4 !_x_5 !st_6 = case _x_5 (_predefined._Nil -> st_6) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_360 _vArray_0 _vArray_1 _vArray_2 _vArray_3 type_defs_4 x_1_1 (analtypes.check_cyclic_type_def_60 _vArray_0 _vArray_1 _vArray_2 _vArray_3 type_defs_4 a_1_0 st_6)) 
analtypes.check_cyclic_type_defs_65 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !tds_4 type_defs_5 group_6 marks_7 error_8 = analtypes.fold_st_360 _vArray_0 _vArray_1 _vArray_2 _vArray_3 type_defs_5 tds_4 (_Tuple3 group_6 marks_7 error_8)
analtypes.fold_st_190 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_190 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.update_type_def_info_61 !_vArray_0 !_vArray_1 group_nr_2::I group_members_3 !_x_4 !_x_5 = case _x_4 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_5 (_Tuple2 index_in_group_2_0 type_def_infos_2_1 -> let _x_3_0 = select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 type_def_infos_2_1 gi_module_1_0) gi_index_1_1 in _Tuple2 (<{StdInt.+_6}> index_in_group_2_0 StdInt.one_11) (select _vArray_1::<{_SystemArray.Array;}> 5 (select _vArray_0::<{_SystemArray.Array;}> 3 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 (update (select _x_3_0::_Tuple2 0)::syntax._TypeDefInfo [2:group_members_3,3:group_nr_2,6:index_in_group_2_0]))) ) 
analtypes.fold_st_363 !_vArray_0 !_vArray_1 group_nr_2::I group_members_3 !_x_4 !st_5 = case _x_4 (_predefined._Nil -> st_5) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_363 _vArray_0 _vArray_1 group_nr_2 group_members_3 x_1_1 (analtypes.update_type_def_info_61 _vArray_0 _vArray_1 group_nr_2 group_members_3 a_1_0 st_5)) 
analtypes.update_type_def_infos_67 !_vArray_0 !_vArray_1 group_nr_2::I group_members_3 !tds_4 type_def_infos_5 = select (analtypes.fold_st_363 _vArray_0 _vArray_1 group_nr_2 group_members_3 tds_4 (_Tuple2 0 type_def_infos_5))::_Tuple2 1
analtypes.close_group_364 !first_type_0 !_x_1 group_2 = case _x_1 (_predefined._Cons td_1_0 tds_1_1 -> case (<{syntax.==_74}> first_type_0 td_1_0) (True -> _Tuple2 tds_1_1 (_predefined._Cons td_1_0 group_2)) (False -> analtypes.close_group_364 first_type_0 tds_1_1 (_predefined._Cons td_1_0 group_2)) ) 
analtypes.check_cyclic_type_def_367 !_vArray_0 !_vArray_1 !_vArray_2 type_defs_3 !td_4 !_x_5 = case td_4 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_5 (_Tuple3 group_2_0 marks_2_1 error_2_2 -> let _x_3_0::I = select _vArray_0::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 marks_2_1 gi_module_1_0) gi_index_1_1, mark_3_1 = select _x_3_0::_Tuple2 0 in case (<{StdInt.==_16}> mark_3_1 -1) (True -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) (analtypes.typeSynonymError_362 (select (select _vArray_2::<{_SystemArray.Array;}> 3 (select _vArray_1::<{_SystemArray.Array;}> 3 type_defs_3 gi_module_1_0) gi_index_1_1)::syntax._TypeDef 0) "cyclic dependency between type synonyms" error_2_2)) (False -> case (<{StdInt.<_17}> mark_3_1 2147483647) (True -> let _x_6_0 = select _vArray_2::<{_SystemArray.Array;}> 3 (select _vArray_1::<{_SystemArray.Array;}> 3 type_defs_3 gi_module_1_0) gi_index_1_1 in case (analtypes.is_synonym_or_new_type_66 (select _x_6_0::syntax._TypeDef 5)) (True -> let _x_8_0 = analtypes.check_cyclic_type_defs_365 _vArray_0 _vArray_1 _vArray_2 (select _x_6_0::syntax._TypeDef 8) type_defs_3 (_predefined._Cons td_4 group_2_0) (select _vArray_0::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 -1) (checksupport.pushErrorAdmin_32 (checksupport.newPosition (select _x_6_0::syntax._TypeDef 0) (select _x_6_0::syntax._TypeDef 7)) error_2_2) in _Tuple3 (select _x_8_0::_Tuple3 0) (select _vArray_0::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_8_0::_Tuple3 1) gi_module_1_0) gi_index_1_1 2147483647) (checksupport.popErrorAdmin_31 (select _x_8_0::_Tuple3 2))) (False -> _Tuple3 (_predefined._Cons td_4 group_2_0) (select _vArray_0::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 2147483647) error_2_2) ) (False -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) error_2_2) ) ) ) 
analtypes.fold_st_366 !_vArray_0 !_vArray_1 !_vArray_2 type_defs_3 !_x_4 !st_5 = case _x_4 (_predefined._Nil -> st_5) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_366 _vArray_0 _vArray_1 _vArray_2 type_defs_3 x_1_1 (analtypes.check_cyclic_type_def_367 _vArray_0 _vArray_1 _vArray_2 type_defs_3 a_1_0 st_5)) 
analtypes.check_cyclic_type_defs_365 !_vArray_0 !_vArray_1 !_vArray_2 !tds_3 type_defs_4 group_5 marks_6 error_7 = analtypes.fold_st_366 _vArray_0 _vArray_1 _vArray_2 type_defs_4 tds_3 (_Tuple3 group_5 marks_6 error_7)
analtypes.update_type_def_info_370 !_vArray_0 group_nr_1::I group_members_2 !_x_3 !_x_4 = case _x_3 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_4 (_Tuple2 index_in_group_2_0 type_def_infos_2_1 -> let _x_3_0 = select _vArray_0::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 type_def_infos_2_1 gi_module_1_0) gi_index_1_1 in _Tuple2 (<{StdInt.+_6}> index_in_group_2_0 StdInt.one_11) (select _vArray_0::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 (update (select _x_3_0::_Tuple2 0)::syntax._TypeDefInfo [2:group_members_2,3:group_nr_1,6:index_in_group_2_0]))) ) 
analtypes.fold_st_369 !_vArray_0 group_nr_1::I group_members_2 !_x_3 !st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_369 _vArray_0 group_nr_1 group_members_2 x_1_1 (analtypes.update_type_def_info_370 _vArray_0 group_nr_1 group_members_2 a_1_0 st_4)) 
analtypes.update_type_def_infos_368 !_vArray_0 group_nr_1::I group_members_2 !tds_3 type_def_infos_4 = select (analtypes.fold_st_369 _vArray_0 group_nr_1 group_members_2 tds_3 (_Tuple2 0 type_def_infos_4))::_Tuple2 1
analtypes.check_cyclic_type_def_373 !_vArray_0 !_vArray_1 type_defs_2 !td_3 !_x_4 = case td_3 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_4 (_Tuple3 group_2_0 marks_2_1 error_2_2 -> let _x_3_0::I = _SystemArray.select_11 (_SystemArray.select_43 marks_2_1 gi_module_1_0) gi_index_1_1, mark_3_1 = select _x_3_0::_Tuple2 0 in case (<{StdInt.==_16}> mark_3_1 -1) (True -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) (analtypes.typeSynonymError_362 (select (select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 type_defs_2 gi_module_1_0) gi_index_1_1)::syntax._TypeDef 0) "cyclic dependency between type synonyms" error_2_2)) (False -> case (<{StdInt.<_17}> mark_3_1 2147483647) (True -> let _x_6_0 = select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 type_defs_2 gi_module_1_0) gi_index_1_1 in case (analtypes.is_synonym_or_new_type_66 (select _x_6_0::syntax._TypeDef 5)) (True -> let _x_8_0 = analtypes.check_cyclic_type_defs_371 _vArray_0 _vArray_1 (select _x_6_0::syntax._TypeDef 8) type_defs_2 (_predefined._Cons td_3 group_2_0) (_SystemArray.update_13 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 -1) (checksupport.pushErrorAdmin_32 (checksupport.newPosition (select _x_6_0::syntax._TypeDef 0) (select _x_6_0::syntax._TypeDef 7)) error_2_2) in _Tuple3 (select _x_8_0::_Tuple3 0) (_SystemArray.update_13 (_SystemArray.select_43 (select _x_8_0::_Tuple3 1) gi_module_1_0) gi_index_1_1 2147483647) (checksupport.popErrorAdmin_31 (select _x_8_0::_Tuple3 2))) (False -> _Tuple3 (_predefined._Cons td_3 group_2_0) (_SystemArray.update_13 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 2147483647) error_2_2) ) (False -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) error_2_2) ) ) ) 
analtypes.fold_st_372 !_vArray_0 !_vArray_1 type_defs_2 !_x_3 !st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_372 _vArray_0 _vArray_1 type_defs_2 x_1_1 (analtypes.check_cyclic_type_def_373 _vArray_0 _vArray_1 type_defs_2 a_1_0 st_4)) 
analtypes.check_cyclic_type_defs_371 !_vArray_0 !_vArray_1 !tds_2 type_defs_3 group_4 marks_5 error_6 = analtypes.fold_st_372 _vArray_0 _vArray_1 type_defs_3 tds_2 (_Tuple3 group_4 marks_5 error_6)
analtypes.update_type_def_info_376 group_nr_0::I group_members_1 !_x_2 !_x_3 = case _x_2 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_3 (_Tuple2 index_in_group_2_0 type_def_infos_2_1 -> let _x_3_0 = analtypes.select_273 (_SystemArray.select_43 type_def_infos_2_1 gi_module_1_0) gi_index_1_1 in _Tuple2 (<{StdInt.+_6}> index_in_group_2_0 StdInt.one_11) (analtypes.update_275 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 (update (select _x_3_0::_Tuple2 0)::syntax._TypeDefInfo [2:group_members_1,3:group_nr_0,6:index_in_group_2_0]))) ) 
analtypes.fold_st_375 group_nr_0::I group_members_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_375 group_nr_0 group_members_1 x_1_1 (analtypes.update_type_def_info_376 group_nr_0 group_members_1 a_1_0 st_3)) 
analtypes.update_type_def_infos_374 group_nr_0::I group_members_1 !tds_2 type_def_infos_3 = select (analtypes.fold_st_375 group_nr_0 group_members_1 tds_2 (_Tuple2 0 type_def_infos_3))::_Tuple2 1
analtypes.check_cyclic_type_def_379 !_vArray_0 type_defs_1 !td_2 !_x_3 = case td_2 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_3 (_Tuple3 group_2_0 marks_2_1 error_2_2 -> let _x_3_0::I = _SystemArray.select_11 (_SystemArray.select_43 marks_2_1 gi_module_1_0) gi_index_1_1, mark_3_1 = select _x_3_0::_Tuple2 0 in case (<{StdInt.==_16}> mark_3_1 -1) (True -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) (analtypes.typeSynonymError_362 (select (select _vArray_0::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 type_defs_1 gi_module_1_0) gi_index_1_1)::syntax._TypeDef 0) "cyclic dependency between type synonyms" error_2_2)) (False -> case (<{StdInt.<_17}> mark_3_1 2147483647) (True -> let _x_6_0 = select _vArray_0::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 type_defs_1 gi_module_1_0) gi_index_1_1 in case (analtypes.is_synonym_or_new_type_66 (select _x_6_0::syntax._TypeDef 5)) (True -> let _x_8_0 = analtypes.check_cyclic_type_defs_377 _vArray_0 (select _x_6_0::syntax._TypeDef 8) type_defs_1 (_predefined._Cons td_2 group_2_0) (_SystemArray.update_13 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 -1) (checksupport.pushErrorAdmin_32 (checksupport.newPosition (select _x_6_0::syntax._TypeDef 0) (select _x_6_0::syntax._TypeDef 7)) error_2_2) in _Tuple3 (select _x_8_0::_Tuple3 0) (_SystemArray.update_13 (_SystemArray.select_43 (select _x_8_0::_Tuple3 1) gi_module_1_0) gi_index_1_1 2147483647) (checksupport.popErrorAdmin_31 (select _x_8_0::_Tuple3 2))) (False -> _Tuple3 (_predefined._Cons td_2 group_2_0) (_SystemArray.update_13 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 2147483647) error_2_2) ) (False -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) error_2_2) ) ) ) 
analtypes.fold_st_378 !_vArray_0 type_defs_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_378 _vArray_0 type_defs_1 x_1_1 (analtypes.check_cyclic_type_def_379 _vArray_0 type_defs_1 a_1_0 st_3)) 
analtypes.check_cyclic_type_defs_377 !_vArray_0 !tds_1 type_defs_2 group_3 marks_4 error_5 = analtypes.fold_st_378 _vArray_0 type_defs_2 tds_1 (_Tuple3 group_3 marks_4 error_5)
analtypes.check_cyclic_type_def_382 type_defs_0 !td_1 !_x_2 = case td_1 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_2 (_Tuple3 group_2_0 marks_2_1 error_2_2 -> let _x_3_0::I = _SystemArray.select_11 (_SystemArray.select_43 marks_2_1 gi_module_1_0) gi_index_1_1, mark_3_1 = select _x_3_0::_Tuple2 0 in case (<{StdInt.==_16}> mark_3_1 -1) (True -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) (analtypes.typeSynonymError_362 (select (analtypes.select_241 (_SystemArray.select_43 type_defs_0 gi_module_1_0) gi_index_1_1)::syntax._TypeDef 0) "cyclic dependency between type synonyms" error_2_2)) (False -> case (<{StdInt.<_17}> mark_3_1 2147483647) (True -> let _x_6_0 = analtypes.select_241 (_SystemArray.select_43 type_defs_0 gi_module_1_0) gi_index_1_1 in case (analtypes.is_synonym_or_new_type_66 (select _x_6_0::syntax._TypeDef 5)) (True -> let _x_8_0 = analtypes.check_cyclic_type_defs_380 (select _x_6_0::syntax._TypeDef 8) type_defs_0 (_predefined._Cons td_1 group_2_0) (_SystemArray.update_13 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 -1) (checksupport.pushErrorAdmin_32 (checksupport.newPosition (select _x_6_0::syntax._TypeDef 0) (select _x_6_0::syntax._TypeDef 7)) error_2_2) in _Tuple3 (select _x_8_0::_Tuple3 0) (_SystemArray.update_13 (_SystemArray.select_43 (select _x_8_0::_Tuple3 1) gi_module_1_0) gi_index_1_1 2147483647) (checksupport.popErrorAdmin_31 (select _x_8_0::_Tuple3 2))) (False -> _Tuple3 (_predefined._Cons td_1 group_2_0) (_SystemArray.update_13 (_SystemArray.select_43 (select _x_3_0::_Tuple2 1) gi_module_1_0) gi_index_1_1 2147483647) error_2_2) ) (False -> _Tuple3 group_2_0 (select _x_3_0::_Tuple2 1) error_2_2) ) ) ) 
analtypes.fold_st_381 type_defs_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_381 type_defs_0 x_1_1 (analtypes.check_cyclic_type_def_382 type_defs_0 a_1_0 st_2)) 
analtypes.check_cyclic_type_defs_380 !tds_0 type_defs_1 group_2 marks_3 error_4 = analtypes.fold_st_381 type_defs_1 tds_0 (_Tuple3 group_2 marks_3 error_4)
analtypes.try_to_close_group_64 !this_type_0 !ldep_1::I !pi_2 = case this_type_0 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case pi_2 (analtypes._PartitioningInfo pi_marks_2_0 pi_type_defs_2_1 pi_type_def_infos_2_2 pi_next_num_2_3 pi_next_group_num_2_4 pi_groups_2_5 pi_deps_2_6 pi_error_2_7 -> let !my_mark_3_0::I = _SystemArray.select_11 (_SystemArray.select_43 pi_marks_2_0 gi_module_1_0) gi_index_1_1 in case (case (<{StdInt.==_16}> ldep_1 2147483647) (True -> True) (False -> <{StdInt.==_16}> ldep_1 my_mark_3_0) ) (True -> let _x_5_0 = analtypes.close_group_364 this_type_0 pi_deps_2_6 _predefined._Nil, group_members_5_1 = select _x_5_0::_Tuple2 1, _x_5_2 = analtypes.check_cyclic_type_defs_380 group_members_5_1 pi_type_defs_2_1 _predefined._Nil pi_marks_2_0 pi_error_2_7, reorganised_group_members_5_3 = select _x_5_2::_Tuple3 0 in _Tuple2 2147483647 (update pi_2::analtypes._PartitioningInfo [0:select _x_5_2::_Tuple3 1,2:analtypes.update_type_def_infos_374 pi_next_group_num_2_4 reorganised_group_members_5_3 group_members_5_1 pi_type_def_infos_2_2,4:<{StdInt.+_6}> pi_next_group_num_2_4 StdInt.one_11,5:_predefined._Cons reorganised_group_members_5_3 pi_groups_2_5,6:select _x_5_0::_Tuple2 0,7:select _x_5_2::_Tuple3 2])) (False -> _Tuple2 (<{analtypes._c;48;16_609}> (<{StdInt.<_17}> my_mark_3_0 ldep_1) my_mark_3_0 ldep_1) pi_2) ) ) 
<{analtypes._c;48;16_609}>::I !_x_0::B my_mark_1::I ldep_2::I = case _x_0 (True -> my_mark_1) (_ -> ldep_2)
analtypes.visit_type_62 !gi_0 !_x_1 = case gi_0 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_1 (_Tuple2 min_dep_2_0 pi_2_1 -> case pi_2_1 (analtypes._PartitioningInfo pi_marks_3_0 pi_type_defs_3_1 pi_type_def_infos_3_2 pi_next_num_3_3 pi_next_group_num_3_4 pi_groups_3_5 pi_deps_3_6 pi_error_3_7 -> let !mark_4_0::I = _SystemArray.select_11 (_SystemArray.select_43 pi_marks_3_0 gi_module_1_0) gi_index_1_1 in case (<{StdInt.==_16}> mark_4_0 -1) (True -> let _x_6_0::I = analtypes.partitionateTypeDef gi_0 pi_2_1, ldep_6_1 = select _x_6_0::_Tuple2 0 in _Tuple2 (<{analtypes._c;48;16_610}> (<{StdInt.<_17}> min_dep_2_0 ldep_6_1) min_dep_2_0 ldep_6_1) (select _x_6_0::_Tuple2 1)) (False -> _Tuple2 (<{analtypes._c;48;16_611}> (<{StdInt.<_17}> min_dep_2_0 mark_4_0) min_dep_2_0 mark_4_0) pi_2_1) ) ) ) 
analtypes.fold_st_383 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_383 x_1_1 (analtypes.visit_type_62 a_1_0 st_1)) 
analtypes.partitionateTypeDef !gi_0 !pi_1 = case gi_0 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case pi_1 (analtypes._PartitioningInfo pi_marks_2_0 pi_type_defs_2_1 pi_type_def_infos_2_2 pi_next_num_2_3 pi_next_group_num_2_4 pi_groups_2_5 pi_deps_2_6 pi_error_2_7 -> let _x_3_0 = analtypes.fold_st_383 (select (analtypes.select_241 (_SystemArray.select_43 pi_type_defs_2_1 gi_module_1_0) gi_index_1_1)::syntax._TypeDef 8) (_Tuple2 2147483647 (analtypes.push_on_dep_stack_63 gi_0 pi_1)) in analtypes.try_to_close_group_64 gi_0 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) ) 
<{analtypes._c;48;16_611}>::I !_x_0::B min_dep_1::I mark_2::I = case _x_0 (True -> min_dep_1) (_ -> mark_2)
<{analtypes._c;48;16_610}>::I !_x_0::B min_dep_1::I ldep_2::I = case _x_0 (True -> min_dep_1) (_ -> ldep_2)
analtypes.partitionate_type_def_35 !module_index_0::I !type_index_1::I !pi_2 = case pi_2 (analtypes._PartitioningInfo pi_marks_1_0 pi_type_defs_1_1 pi_type_def_infos_1_2 pi_next_num_1_3 pi_next_group_num_1_4 pi_groups_1_5 pi_deps_1_6 pi_error_1_7 -> case (<{StdInt.==_16}> (_SystemArray.select_11 (_SystemArray.select_43 pi_marks_1_0 module_index_0) type_index_1) -1) (True -> select (analtypes.partitionateTypeDef (syntax._GlobalIndex module_index_0 type_index_1) pi_2)::_Tuple2 1) (False -> pi_2) ) 
analtypes.i_fold_st_384 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_384 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
analtypes.i_fold_st_385 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_385 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
analtypes.i_fold_st_386 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_386 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
analtypes.i_fold_st_387 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_387 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.i_fold_st_388 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_388 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.i_fold_st_389 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_389 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.i_fold_st_390 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_390 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.i_fold_st_391 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_391 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.i_fold_st_392 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_392 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.i_fold_st_393 module_index_0::I !fr_1::I !to_2::I !st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_393 module_index_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (analtypes.partitionate_type_def_35 module_index_0 fr_1 st_3)) 
analtypes.i_fold_st_394 module_index_0::I !fr_1::I !to_2::I !st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_394 module_index_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (analtypes.partitionate_type_def_35 module_index_0 fr_1 st_3)) 
analtypes.i_fold_st_395 module_index_0::I !fr_1::I !to_2::I !st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_395 module_index_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (analtypes.partitionate_type_def_35 module_index_0 fr_1 st_3)) 
analtypes.partionate_type_defs_36 !main_dcl_module_index_0::I index_of_first_not_exported_type_or_dictionary_1::I n_exported_icl_types_2::I !mod_index_3::I !pi_4 = case pi_4 (analtypes._PartitioningInfo pi_marks_1_0 pi_type_defs_1_1 pi_type_def_infos_1_2 pi_next_num_1_3 pi_next_group_num_1_4 pi_groups_1_5 pi_deps_1_6 pi_error_1_7 -> let !nr_of_typedefs_to_be_examined_2_0::I = _SystemArray.size_12 (_SystemArray.select_43 pi_marks_1_0 mod_index_3) in case (<{StdInt.==_16}> mod_index_3 main_dcl_module_index_0) (True -> analtypes.i_fold_st_394 mod_index_3 index_of_first_not_exported_type_or_dictionary_1 nr_of_typedefs_to_be_examined_2_0 (analtypes.i_fold_st_393 mod_index_3 0 n_exported_icl_types_2 pi_4)) (False -> analtypes.i_fold_st_395 mod_index_3 0 nr_of_typedefs_to_be_examined_2_0 pi_4) ) 
<{analtypes.cu;56;38_37}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{analtypes.cu;56;38_37}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{analtypes.cu;57;28_38}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{analtypes.cu;57;28_38}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _vArray_0::<{_SystemArray.Array;}> 0 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
<{analtypes.cu;59;28_39}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{analtypes.cu;59;28_39}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _vArray_0::<{_SystemArray.Array;}> 0 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
analtypes.fold_st_189 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_189 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.fold_st_188 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_188 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.try_to_expand_46 type_0 types_1 !_x_2 td_attribute_3 td_args_4 attribute_5 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9 = case _x_2 (syntax.SynType _x_1_0 -> case _x_1_0 (syntax._AType at_attribute_2_0 at_type_2_1 -> let _x_3_0 = typesupport.substituteType td_attribute_3 attribute_5 td_args_4 types_1 at_type_2_1 type_heaps_8 in _Tuple5 (general.Yes (update type_0::syntax._AType [1:select _x_3_0::_Tuple2 0])) new_type_defs_6 icl_type_defs_7 (select _x_3_0::_Tuple2 1) dcl_modules_9) ) (_ -> _Tuple5 general.No new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9)
analtypes.try_to_expand_synonym_type_for_TA_53 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !main_dcl_module_index_4::I glob_object_5::I !glob_module_6::I types_7 type_8 attribute_9 new_type_defs_10 icl_type_defs_11 type_heaps_12 dcl_modules_13 = case (<{StdInt.==_16}> glob_module_6 main_dcl_module_index_4) (True -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 icl_type_defs_11 glob_object_5, _x_2_1 = select _x_2_0::_Tuple2 0 in analtypes.try_to_expand_46 type_8 types_7 (select _x_2_1::syntax._TypeDef 5) (select _x_2_1::syntax._TypeDef 6) (select _x_2_1::syntax._TypeDef 3) attribute_9 new_type_defs_10 (select _x_2_0::_Tuple2 1) type_heaps_12 dcl_modules_13) (False -> case (<{StdInt.==_16}> (select _vArray_2::<{_SystemArray.Array;}> 4 (select _vArray_1::<{_SystemArray.Array;}> 3 new_type_defs_10 glob_module_6)) 0) (True -> let _x_3_0 = analtypes.select_241 (select (select (select _vArray_3::<{_SystemArray.Array;}> 3 dcl_modules_13 glob_module_6)::syntax._DclModule 7)::syntax._CommonDefs 0) glob_object_5, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_8 types_7 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_9 new_type_defs_10 icl_type_defs_11 type_heaps_12 (select _x_3_0::_Tuple2 1)) (False -> let _x_3_0 = select _vArray_2::<{_SystemArray.Array;}> 3 (select _vArray_1::<{_SystemArray.Array;}> 3 new_type_defs_10 glob_module_6) glob_object_5, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_8 types_7 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_9 (select _x_3_0::_Tuple2 1) icl_type_defs_11 type_heaps_12 dcl_modules_13) ) 
analtypes.try_to_expand_synonym_type_52 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 main_dcl_module_index_4::I !type_5 attribute_6 !_x_7 = case type_5 (syntax._AType at_attribute_1_0 at_type_1_1 -> case at_type_1_1 (syntax.TA _x_2_0 types_2_1 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_7 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_53 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 glob_object_4_0 glob_module_4_1 types_2_1 type_5 attribute_6 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) (syntax.TAS _x_2_0 types_2_1 _x_2_2 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_7 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_53 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 glob_object_4_0 glob_module_4_1 types_2_1 type_5 attribute_6 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) ) (_ -> case _x_7 (_Tuple4 new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3 -> _Tuple5 general.No new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3) )
analtypes.try_to_expand_new_type_constructor_arg_51 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 main_dcl_module_index_4::I !_x_5 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9 = case _x_5 (syntax._SymbolType st_vars_1_0 _x_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> case _x_1_1 (_predefined._Cons type_2_0 _x_2_1 -> case type_2_0 (syntax._AType at_attribute_3_0 at_type_3_1 -> case _x_2_1 (_predefined._Nil -> analtypes.try_to_expand_synonym_type_52 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 type_2_0 at_attribute_3_0 (_Tuple4 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9)) ) ) ) 
<{analtypes.cu;181;63_45}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{analtypes.cu;181;63_45}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{analtypes.cu;181;63_396}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = analtypes.uselect_252 g_a_4 c_i_2 in <{analtypes.cu;181;63_396}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
analtypes.expand_new_type_rhs_not_in_icl_module_50 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 main_dcl_module_index_6::I !gi_module_7::I !constructor_index_8::I new_type_defs_9 icl_type_defs_10 new_cons_defs_11 icl_cons_defs_12 type_heaps_13 dcl_modules_14 error_15 = case (<{StdInt.==_16}> (select _vArray_1::<{_SystemArray.Array;}> 4 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_11 gi_module_7)) 0) (True -> let _x_2_0 = select (analtypes.select_249 (select (select (select _vArray_2::<{_SystemArray.Array;}> 3 dcl_modules_14 gi_module_7)::syntax._DclModule 7)::syntax._CommonDefs 1) constructor_index_8)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, dcl_modules_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.try_to_expand_new_type_constructor_arg_51 _vArray_3 _vArray_4 _vArray_5 _vArray_2 main_dcl_module_index_6 cons_type_2_1 new_type_defs_9 icl_type_defs_10 type_heaps_13 dcl_modules_2_2, dcl_modules_2_4 = select _x_2_3::_Tuple5 4, type_heaps_2_5 = select _x_2_3::_Tuple5 3, icl_type_defs_2_6 = select _x_2_3::_Tuple5 2, new_type_defs_2_7 = select _x_2_3::_Tuple5 1 in <{analtypes._c;178;19_612}> (select _x_2_3::_Tuple5 0) _vArray_1 constructor_index_8 dcl_modules_2_4 gi_module_7 _vArray_2 new_type_defs_2_7 icl_type_defs_2_6 new_cons_defs_11 _vArray_0 icl_cons_defs_12 type_heaps_2_5 error_15) (False -> let _x_2_0 = select (select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_11 gi_module_7) constructor_index_8)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_51 _vArray_3 _vArray_4 _vArray_5 _vArray_2 main_dcl_module_index_6 cons_type_2_1 new_type_defs_9 icl_type_defs_10 type_heaps_13 dcl_modules_14, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, new_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;189;19_613}> (select _x_2_2::_Tuple5 0) new_cons_defs_2_7 gi_module_7 _vArray_0 constructor_index_8 _vArray_1 new_type_defs_2_6 icl_type_defs_2_5 icl_cons_defs_12 type_heaps_2_4 dcl_modules_2_3 error_15) 
<{analtypes._c;189;19_613}> !_x_0 new_cons_defs_1 gi_module_2::I _vArray_3 constructor_index_4::I _vArray_5 new_type_defs_6 icl_type_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select _vArray_5::<{_SystemArray.Array;}> 3 (select _vArray_3::<{_SystemArray.Array;}> 3 new_cons_defs_1 gi_module_2) constructor_index_4, e0_2_1 = select _x_2_0::_Tuple2 0 in _Tuple7 new_type_defs_6 icl_type_defs_7 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _vArray_3::<{_SystemArray.Array;}> 3 (select _x_2_0::_Tuple2 1) gi_module_2) constructor_index_4 (update e0_2_1::syntax._ConsDef [1:update (select e0_2_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_1 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) 
<{analtypes._c;178;19_612}> !_x_0 _vArray_1 constructor_index_2::I dcl_modules_3 gi_module_4::I _vArray_5 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 _vArray_9 icl_cons_defs_10 type_heaps_11 error_12 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select (select (select _vArray_5::<{_SystemArray.Array;}> 3 dcl_modules_3 gi_module_4)::syntax._DclModule 7)::syntax._CommonDefs 1, _x_2_1 = analtypes.usize_253 (select _x_2_0::_Tuple2 0), g_s2_2_2::I = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1, _x_2_3 = select _vArray_1::<{_SystemArray.Array;}> 6 (<{analtypes.cu;181;63_396}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) constructor_index_2, e0_2_4 = select _x_2_3::_Tuple2 0 in _Tuple7 new_type_defs_6 icl_type_defs_7 (select _vArray_9::<{_SystemArray.Array;}> 5 new_cons_defs_8 gi_module_4 (select _vArray_1::<{_SystemArray.Array;}> 5 (select _x_2_3::_Tuple2 1) constructor_index_2 (update e0_2_4::syntax._ConsDef [1:update (select e0_2_4::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]]))) icl_cons_defs_10 type_heaps_11 (select _x_2_0::_Tuple2 1) error_12) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_10 type_heaps_11 dcl_modules_3 error_12) 
analtypes.expand_new_type_rhs_49 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 !_vArray_6 !main_dcl_module_index_7::I !gi_module_8::I !constructor_index_9::I new_type_defs_10 icl_type_defs_11 new_cons_defs_12 icl_cons_defs_13 type_heaps_14 dcl_modules_15 error_16 = case (StdBool.not (<{StdInt.==_16}> gi_module_8 main_dcl_module_index_7)) (True -> analtypes.expand_new_type_rhs_not_in_icl_module_50 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 main_dcl_module_index_7 gi_module_8 constructor_index_9 new_type_defs_10 icl_type_defs_11 new_cons_defs_12 icl_cons_defs_13 type_heaps_14 dcl_modules_15 error_16) (False -> let _x_2_0 = select (select _vArray_6::<{_SystemArray.Array;}> 3 icl_cons_defs_13 constructor_index_9)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_51 _vArray_3 _vArray_4 _vArray_5 _vArray_2 main_dcl_module_index_7 cons_type_2_1 new_type_defs_10 icl_type_defs_11 type_heaps_14 dcl_modules_15, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, icl_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;164;19_614}> (select _x_2_2::_Tuple5 0) constructor_index_9 dcl_modules_2_3 main_dcl_module_index_7 _vArray_2 icl_cons_defs_2_7 _vArray_6 _vArray_0 _vArray_1 _vArray_3 _vArray_4 _vArray_5 gi_module_8 new_type_defs_2_6 icl_type_defs_2_5 new_cons_defs_12 type_heaps_2_4 error_16) 
<{analtypes._c;164;19_614}> !_x_0 constructor_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 icl_cons_defs_5 _vArray_6 _vArray_7 _vArray_8 _vArray_9 _vArray_10 _vArray_11 gi_module_12::I new_type_defs_13 icl_type_defs_14 new_cons_defs_15 type_heaps_16 error_17 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> constructor_index_1 (analtypes.size_250 (select (select (select _vArray_4::<{_SystemArray.Array;}> 3 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 1))) (True -> let _x_3_0 = select _vArray_6::<{_SystemArray.Array;}> 6 icl_cons_defs_5 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in analtypes.expand_new_type_rhs_not_in_icl_module_50 _vArray_7 _vArray_8 _vArray_4 _vArray_9 _vArray_10 _vArray_11 main_dcl_module_index_3 gi_module_12 constructor_index_1 new_type_defs_13 icl_type_defs_14 new_cons_defs_15 (select _vArray_6::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_16 dcl_modules_2 error_17) (False -> let _x_3_0 = select _vArray_6::<{_SystemArray.Array;}> 6 icl_cons_defs_5 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in _Tuple7 new_type_defs_13 icl_type_defs_14 new_cons_defs_15 (select _vArray_6::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_16 dcl_modules_2 error_17) ) (general.No -> _Tuple7 new_type_defs_13 icl_type_defs_14 new_cons_defs_15 icl_cons_defs_5 type_heaps_16 dcl_modules_2 error_17) 
<{analtypes.cu;133;71_44}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{analtypes.cu;133;71_44}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{analtypes.cu;133;71_397}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = analtypes.uselect_244 g_a_4 c_i_2 in <{analtypes.cu;133;71_397}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
analtypes.expand_synonym_type_not_in_icl_module_48 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 !_vArray_6 main_dcl_module_index_7::I main_dcl_module_index_8 !gi_9 !_x_10 = case gi_9 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_10 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (<{StdInt.==_16}> (select _vArray_1::<{_SystemArray.Array;}> 4 (select _vArray_0::<{_SystemArray.Array;}> 3 new_type_defs_2_0 gi_module_1_0)) 0) (True -> let _x_4_0 = analtypes.select_241 (select (select (select _vArray_2::<{_SystemArray.Array;}> 3 dcl_modules_2_5 gi_module_1_0)::syntax._DclModule 7)::syntax._CommonDefs 0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, dcl_modules_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;126;19_616}> (select td_4_1::syntax._TypeDef 5) _vArray_3 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_7 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_4_2 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_4 _vArray_5 _vArray_6) (False -> let _x_4_0 = select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 new_type_defs_2_0 gi_module_1_0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, new_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;143;19_618}> (select td_4_1::syntax._TypeDef 5) _vArray_3 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_7 td_attribute_4_3 new_type_defs_4_2 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_2_5 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_4 _vArray_5 _vArray_6) ) ) 
<{analtypes._c;143;19_618}> !_x_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5::I td_attribute_6 new_type_defs_7 icl_type_defs_8 type_heaps_9 dcl_modules_10 gi_module_11::I gi_index_12::I td_13 new_cons_defs_14 icl_cons_defs_15 error_16 _vArray_17 _vArray_18 _vArray_19 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_52 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 type_1_0 td_attribute_6 (_Tuple4 new_type_defs_7 icl_type_defs_8 type_heaps_9 dcl_modules_10), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;147;28_617}> (select _x_2_0::_Tuple5 0) new_type_defs_2_4 gi_module_11 _vArray_2 gi_index_12 _vArray_3 td_13 icl_type_defs_2_3 new_cons_defs_14 icl_cons_defs_15 type_heaps_2_2 dcl_modules_2_1 error_16) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_49 _vArray_17 _vArray_18 _vArray_4 _vArray_1 _vArray_2 _vArray_3 _vArray_19 main_dcl_module_index_5 gi_module_11 ds_index_2_2 new_type_defs_7 icl_type_defs_8 new_cons_defs_14 icl_cons_defs_15 type_heaps_9 dcl_modules_10 error_16) ) (_ -> _Tuple7 new_type_defs_7 icl_type_defs_8 new_cons_defs_14 icl_cons_defs_15 type_heaps_9 dcl_modules_10 error_16)
<{analtypes._c;147;28_617}> !_x_0 new_type_defs_1 gi_module_2::I _vArray_3 gi_index_4::I _vArray_5 td_6 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_9 type_heaps_10 dcl_modules_11 error_12 = case _x_0 (general.Yes type_1_0 -> _Tuple7 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _vArray_3::<{_SystemArray.Array;}> 3 new_type_defs_1 gi_module_2) gi_index_4 (update td_6::syntax._TypeDef [5:syntax.SynType type_1_0])) icl_type_defs_7 new_cons_defs_8 icl_cons_defs_9 type_heaps_10 dcl_modules_11 error_12) (general.No -> _Tuple7 new_type_defs_1 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_9 type_heaps_10 dcl_modules_11 error_12) 
<{analtypes._c;126;19_616}> !_x_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5::I td_attribute_6 new_type_defs_7 icl_type_defs_8 type_heaps_9 dcl_modules_10 gi_module_11::I gi_index_12::I td_13 new_cons_defs_14 icl_cons_defs_15 error_16 _vArray_17 _vArray_18 _vArray_19 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_52 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 type_1_0 td_attribute_6 (_Tuple4 new_type_defs_7 icl_type_defs_8 type_heaps_9 dcl_modules_10), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;130;28_615}> (select _x_2_0::_Tuple5 0) dcl_modules_2_1 gi_module_11 _vArray_4 new_type_defs_2_4 _vArray_2 _vArray_3 gi_index_12 td_13 icl_type_defs_2_3 new_cons_defs_14 icl_cons_defs_15 type_heaps_2_2 error_16) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_49 _vArray_17 _vArray_18 _vArray_4 _vArray_1 _vArray_2 _vArray_3 _vArray_19 main_dcl_module_index_5 gi_module_11 ds_index_2_2 new_type_defs_7 icl_type_defs_8 new_cons_defs_14 icl_cons_defs_15 type_heaps_9 dcl_modules_10 error_16) ) (_ -> _Tuple7 new_type_defs_7 icl_type_defs_8 new_cons_defs_14 icl_cons_defs_15 type_heaps_9 dcl_modules_10 error_16)
<{analtypes._c;130;28_615}> !_x_0 dcl_modules_1 gi_module_2::I _vArray_3 new_type_defs_4 _vArray_5 _vArray_6 gi_index_7::I td_8 icl_type_defs_9 new_cons_defs_10 icl_cons_defs_11 type_heaps_12 error_13 = case _x_0 (general.Yes type_1_0 -> let _x_2_0::I = select (select (select _vArray_3::<{_SystemArray.Array;}> 3 dcl_modules_1 gi_module_2)::syntax._DclModule 7)::syntax._CommonDefs 0, _x_2_1 = analtypes.usize_245 (select _x_2_0::_Tuple2 0), g_s2_2_2 = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1 in _Tuple7 (select _vArray_5::<{_SystemArray.Array;}> 5 new_type_defs_4 gi_module_2 (select _vArray_6::<{_SystemArray.Array;}> 5 (<{analtypes.cu;133;71_397}> _vArray_6 (select _vArray_6::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) gi_index_7 (update td_8::syntax._TypeDef [5:syntax.SynType type_1_0]))) icl_type_defs_9 new_cons_defs_10 icl_cons_defs_11 type_heaps_12 (select _x_2_0::_Tuple2 1) error_13) (general.No -> _Tuple7 new_type_defs_4 icl_type_defs_9 new_cons_defs_10 icl_cons_defs_11 type_heaps_12 dcl_modules_1 error_13) 
analtypes.expand_synonym_type_47 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 !_vArray_6 main_dcl_module_index_7::I !main_dcl_module_index_8::I !gi_9 !_x_10 = case gi_9 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_10 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (StdBool.not (<{StdInt.==_16}> gi_module_1_0 main_dcl_module_index_8)) (True -> analtypes.expand_synonym_type_not_in_icl_module_48 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 _vArray_6 main_dcl_module_index_7 main_dcl_module_index_8 gi_9 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6)) (False -> let _x_4_0 = select _vArray_3::<{_SystemArray.Array;}> 6 icl_type_defs_2_1 gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, icl_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;106;19_620}> (select td_4_1::syntax._TypeDef 5) _vArray_3 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_7 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_4_2 type_heaps_2_4 dcl_modules_2_5 gi_index_1_1 main_dcl_module_index_8 _vArray_4 _vArray_5 _vArray_6 gi_9 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 gi_module_1_0) ) ) 
<{analtypes._c;106;19_620}> !_x_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5::I td_attribute_6 new_type_defs_7 icl_type_defs_8 type_heaps_9 dcl_modules_10 gi_index_11::I main_dcl_module_index_12::I _vArray_13 _vArray_14 _vArray_15 gi_16 td_17 new_cons_defs_18 icl_cons_defs_19 error_20 gi_module_21::I = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_52 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 type_1_0 td_attribute_6 (_Tuple4 new_type_defs_7 icl_type_defs_8 type_heaps_9 dcl_modules_10), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;110;28_619}> (select _x_2_0::_Tuple5 0) gi_index_11 dcl_modules_2_1 main_dcl_module_index_12 _vArray_4 _vArray_2 _vArray_3 _vArray_1 _vArray_13 _vArray_14 _vArray_15 main_dcl_module_index_5 gi_16 new_type_defs_2_4 icl_type_defs_2_3 td_17 new_cons_defs_18 icl_cons_defs_19 type_heaps_2_2 error_20) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_49 _vArray_13 _vArray_14 _vArray_4 _vArray_1 _vArray_2 _vArray_3 _vArray_15 main_dcl_module_index_5 gi_module_21 ds_index_2_2 new_type_defs_7 icl_type_defs_8 new_cons_defs_18 icl_cons_defs_19 type_heaps_9 dcl_modules_10 error_20) ) (_ -> _Tuple7 new_type_defs_7 icl_type_defs_8 new_cons_defs_18 icl_cons_defs_19 type_heaps_9 dcl_modules_10 error_20)
<{analtypes._c;110;28_619}> !_x_0 gi_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 _vArray_5 _vArray_6 _vArray_7 _vArray_8 _vArray_9 _vArray_10 main_dcl_module_index_11::I gi_12 new_type_defs_13 icl_type_defs_14 td_15 new_cons_defs_16 icl_cons_defs_17 type_heaps_18 error_19 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> gi_index_1 (analtypes.size_242 (select (select (select _vArray_4::<{_SystemArray.Array;}> 3 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 0))) (True -> analtypes.expand_synonym_type_not_in_icl_module_48 _vArray_5 _vArray_6 _vArray_4 _vArray_7 _vArray_8 _vArray_9 _vArray_10 main_dcl_module_index_11 main_dcl_module_index_3 gi_12 (_Tuple7 new_type_defs_13 (select _vArray_7::<{_SystemArray.Array;}> 5 icl_type_defs_14 gi_index_1 (update td_15::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_16 icl_cons_defs_17 type_heaps_18 dcl_modules_2 error_19)) (False -> _Tuple7 new_type_defs_13 (select _vArray_7::<{_SystemArray.Array;}> 5 icl_type_defs_14 gi_index_1 (update td_15::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_16 icl_cons_defs_17 type_heaps_18 dcl_modules_2 error_19) ) (general.No -> _Tuple7 new_type_defs_13 icl_type_defs_14 new_cons_defs_16 icl_cons_defs_17 type_heaps_18 dcl_modules_2 error_19) 
analtypes.fold_st_398 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 !_vArray_6 main_dcl_module_index_7::I main_dcl_module_index_8::I !_x_9 !st_10 = case _x_9 (_predefined._Nil -> st_10) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_398 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 _vArray_6 main_dcl_module_index_7 main_dcl_module_index_8 x_1_1 (analtypes.expand_synonym_type_47 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 _vArray_6 main_dcl_module_index_7 main_dcl_module_index_8 a_1_0 st_10)) 
analtypes.expand_synonym_types_of_group_57 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 !_vArray_6 main_dcl_module_index_7::I !group_members_8 !_x_9 = case _x_9 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> analtypes.fold_st_398 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 _vArray_6 main_dcl_module_index_7 main_dcl_module_index_7 group_members_8 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) 
analtypes.fold_st_399 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 !_vArray_6 main_dcl_module_index_7::I !_x_8 !st_9 = case _x_8 (_predefined._Nil -> st_9) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_399 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 _vArray_6 main_dcl_module_index_7 x_1_1 (analtypes.expand_synonym_types_of_group_57 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 _vArray_6 main_dcl_module_index_7 a_1_0 st_9)) 
analtypes.expand_synonym_types_of_groups_56 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 !_vArray_6 main_dcl_module_index_7::I pi_groups_8 !_x_9 = case _x_9 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> case (select error_1_6::checksupport._ErrorAdmin 2) (True -> analtypes.fold_st_399 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 _vArray_6 main_dcl_module_index_7 pi_groups_8 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) (False -> _Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6) ) 
analtypes.i_fold_st_187 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_187 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.copy_commondefs_and_adjust_type_defs_54 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !used_module_numbers_4 new_type_defs_5 new_cons_defs_6 !module_index_7::I !_x_8 = case _x_8 (_Tuple2 dcl_modules_1_0 common_defs_1_1 -> case (containers.inNumberSet module_index_7 used_module_numbers_4) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_242 (select _vArray_1::<{_SystemArray.Array;}> 3 new_type_defs_5 module_index_7)) 0)) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (select _vArray_2::<{_SystemArray.Array;}> 3 new_cons_defs_6 module_index_7)) 0)) (True -> let _x_5_0 = select _vArray_0::<{_SystemArray.Array;}> 6 dcl_modules_1_0 module_index_7, _x_5_1 = select _vArray_0::<{_SystemArray.Array;}> 6 (select _x_5_0::_Tuple2 1) module_index_7, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:select _vArray_1::<{_SystemArray.Array;}> 3 new_type_defs_5 module_index_7,1:select _vArray_2::<{_SystemArray.Array;}> 3 new_cons_defs_6 module_index_7] in _Tuple2 (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_5_1::_Tuple2 1) module_index_7 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_3::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_7 dcl_common_5_2)) (False -> let _x_5_0 = select _vArray_0::<{_SystemArray.Array;}> 6 dcl_modules_1_0 module_index_7, _x_5_1 = select _vArray_0::<{_SystemArray.Array;}> 6 (select _x_5_0::_Tuple2 1) module_index_7, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:select _vArray_1::<{_SystemArray.Array;}> 3 new_type_defs_5 module_index_7] in _Tuple2 (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_5_1::_Tuple2 1) module_index_7 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_3::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_7 dcl_common_5_2)) ) (False -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (select _vArray_2::<{_SystemArray.Array;}> 3 new_cons_defs_6 module_index_7)) 0)) (True -> let _x_5_0 = select _vArray_0::<{_SystemArray.Array;}> 6 dcl_modules_1_0 module_index_7, _x_5_1 = select _vArray_0::<{_SystemArray.Array;}> 6 (select _x_5_0::_Tuple2 1) module_index_7, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [1:select _vArray_2::<{_SystemArray.Array;}> 3 new_cons_defs_6 module_index_7] in _Tuple2 (select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_5_1::_Tuple2 1) module_index_7 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_3::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_7 dcl_common_5_2)) (False -> let _x_5_0 = select _vArray_0::<{_SystemArray.Array;}> 6 dcl_modules_1_0 module_index_7 in _Tuple2 (select _x_5_0::_Tuple2 1) (select _vArray_3::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_7 (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7))) ) ) (False -> _Tuple2 dcl_modules_1_0 common_defs_1_1) ) 
analtypes.copy_commondefs_and_adjust_type_defs_400 !_vArray_0 !_vArray_1 !_vArray_2 !used_module_numbers_3 new_type_defs_4 new_cons_defs_5 !module_index_6::I !_x_7 = case _x_7 (_Tuple2 dcl_modules_1_0 common_defs_1_1 -> case (containers.inNumberSet module_index_6 used_module_numbers_3) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_242 (select _vArray_0::<{_SystemArray.Array;}> 3 new_type_defs_4 module_index_6)) 0)) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (select _vArray_1::<{_SystemArray.Array;}> 3 new_cons_defs_5 module_index_6)) 0)) (True -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_6, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_6, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:select _vArray_0::<{_SystemArray.Array;}> 3 new_type_defs_4 module_index_6,1:select _vArray_1::<{_SystemArray.Array;}> 3 new_cons_defs_5 module_index_6] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_6 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_2::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_6 dcl_common_5_2)) (False -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_6, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_6, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:select _vArray_0::<{_SystemArray.Array;}> 3 new_type_defs_4 module_index_6] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_6 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_2::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_6 dcl_common_5_2)) ) (False -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (select _vArray_1::<{_SystemArray.Array;}> 3 new_cons_defs_5 module_index_6)) 0)) (True -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_6, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_6, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [1:select _vArray_1::<{_SystemArray.Array;}> 3 new_cons_defs_5 module_index_6] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_6 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_2::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_6 dcl_common_5_2)) (False -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_6 in _Tuple2 (select _x_5_0::_Tuple2 1) (select _vArray_2::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_6 (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7))) ) ) (False -> _Tuple2 dcl_modules_1_0 common_defs_1_1) ) 
analtypes.i_fold_st_401 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_401 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
analtypes.copy_commondefs_and_adjust_type_defs_402 !_vArray_0 !_vArray_1 !used_module_numbers_2 new_type_defs_3 new_cons_defs_4 !module_index_5::I !_x_6 = case _x_6 (_Tuple2 dcl_modules_1_0 common_defs_1_1 -> case (containers.inNumberSet module_index_5 used_module_numbers_2) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_3 module_index_5)) 0)) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_4 module_index_5)) 0)) (True -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_5, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_5, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:_SystemArray.select_75 new_type_defs_3 module_index_5,1:select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_4 module_index_5] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_5 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_1::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_5 dcl_common_5_2)) (False -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_5, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_5, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:_SystemArray.select_75 new_type_defs_3 module_index_5] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_5 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_1::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_5 dcl_common_5_2)) ) (False -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_4 module_index_5)) 0)) (True -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_5, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_5, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [1:select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_4 module_index_5] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_5 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_1::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_5 dcl_common_5_2)) (False -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_5 in _Tuple2 (select _x_5_0::_Tuple2 1) (select _vArray_1::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_5 (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7))) ) ) (False -> _Tuple2 dcl_modules_1_0 common_defs_1_1) ) 
analtypes.i_fold_st_403 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_403 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.copy_commondefs_and_adjust_type_defs_404 !_vArray_0 !used_module_numbers_1 new_type_defs_2 new_cons_defs_3 !module_index_4::I !_x_5 = case _x_5 (_Tuple2 dcl_modules_1_0 common_defs_1_1 -> case (containers.inNumberSet module_index_4 used_module_numbers_1) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_2 module_index_4)) 0)) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (_SystemArray.select_43 new_cons_defs_3 module_index_4)) 0)) (True -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_4, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_4, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:_SystemArray.select_75 new_type_defs_2 module_index_4,1:_SystemArray.select_43 new_cons_defs_3 module_index_4] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_4 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_0::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_4 dcl_common_5_2)) (False -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_4, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_4, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:_SystemArray.select_75 new_type_defs_2 module_index_4] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_4 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_0::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_4 dcl_common_5_2)) ) (False -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (_SystemArray.select_43 new_cons_defs_3 module_index_4)) 0)) (True -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_4, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_4, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [1:_SystemArray.select_43 new_cons_defs_3 module_index_4] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_4 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (select _vArray_0::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_4 dcl_common_5_2)) (False -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_4 in _Tuple2 (select _x_5_0::_Tuple2 1) (select _vArray_0::<{_SystemArray.Array;}> 5 common_defs_1_1 module_index_4 (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7))) ) ) (False -> _Tuple2 dcl_modules_1_0 common_defs_1_1) ) 
analtypes.i_fold_st_405 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_405 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.copy_commondefs_and_adjust_type_defs_406 !used_module_numbers_0 new_type_defs_1 new_cons_defs_2 !module_index_3::I !_x_4 = case _x_4 (_Tuple2 dcl_modules_1_0 common_defs_1_1 -> case (containers.inNumberSet module_index_3 used_module_numbers_0) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_1 module_index_3)) 0)) (True -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (_SystemArray.select_43 new_cons_defs_2 module_index_3)) 0)) (True -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_3, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_3, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:_SystemArray.select_75 new_type_defs_1 module_index_3,1:_SystemArray.select_43 new_cons_defs_2 module_index_3] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_3 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (analtypes.update_267 common_defs_1_1 module_index_3 dcl_common_5_2)) (False -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_3, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_3, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [0:_SystemArray.select_75 new_type_defs_1 module_index_3] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_3 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (analtypes.update_267 common_defs_1_1 module_index_3 dcl_common_5_2)) ) (False -> case (StdBool.not (<{StdInt.==_16}> (analtypes.size_250 (_SystemArray.select_43 new_cons_defs_2 module_index_3)) 0)) (True -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_3, _x_5_1 = analtypes.uselect_260 (select _x_5_0::_Tuple2 1) module_index_3, dcl_common_5_2 = update (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7)::syntax._CommonDefs [1:_SystemArray.select_43 new_cons_defs_2 module_index_3] in _Tuple2 (analtypes.update_259 (select _x_5_1::_Tuple2 1) module_index_3 (update (select _x_5_1::_Tuple2 0)::syntax._DclModule [7:dcl_common_5_2])) (analtypes.update_267 common_defs_1_1 module_index_3 dcl_common_5_2)) (False -> let _x_5_0 = analtypes.uselect_260 dcl_modules_1_0 module_index_3 in _Tuple2 (select _x_5_0::_Tuple2 1) (analtypes.update_267 common_defs_1_1 module_index_3 (select (select _x_5_0::_Tuple2 0)::syntax._DclModule 7))) ) ) (False -> _Tuple2 dcl_modules_1_0 common_defs_1_1) ) 
analtypes.i_fold_st_407 used_module_numbers_0 new_type_defs_1 new_cons_defs_2 !fr_3::I !to_4::I !st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_407 used_module_numbers_0 new_type_defs_1 new_cons_defs_2 (<{StdInt.+_6}> fr_3 StdInt.one_11) to_4 (analtypes.copy_commondefs_and_adjust_type_defs_406 used_module_numbers_0 new_type_defs_1 new_cons_defs_2 fr_3 st_5)) 
analtypes.update_modules_and_create_commondefs_58 used_module_numbers_0 new_type_defs_1 new_cons_defs_2 !nr_of_modules_3::I !dcl_modules_4 = let _x_1_0 = select (analtypes.select_257 dcl_modules_4 0)::syntax._DclModule 7 in analtypes.i_fold_st_407 used_module_numbers_0 new_type_defs_1 new_cons_defs_2 0 nr_of_modules_3 (_Tuple2 (select _x_1_0::_Tuple2 1) (analtypes.createArray_263 nr_of_modules_3 (select _x_1_0::_Tuple2 0)))
analtypes.i_fold_st_408 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_408 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
<{analtypes.cu;56;38_409}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = analtypes.uselect_244 g_a_4 c_i_2 in <{analtypes.cu;56;38_409}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
<{analtypes.cu;57;28_410}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{analtypes.cu;57;28_410}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (analtypes._createArray_238 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
<{analtypes.cu;59;28_411}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{analtypes.cu;59;28_411}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (analtypes._createArray_246 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
analtypes.try_to_expand_synonym_type_for_TA_419 !_vArray_0 !_vArray_1 !_vArray_2 !main_dcl_module_index_3::I glob_object_4::I !glob_module_5::I types_6 type_7 attribute_8 new_type_defs_9 icl_type_defs_10 type_heaps_11 dcl_modules_12 = case (<{StdInt.==_16}> glob_module_5 main_dcl_module_index_3) (True -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 icl_type_defs_10 glob_object_4, _x_2_1 = select _x_2_0::_Tuple2 0 in analtypes.try_to_expand_46 type_7 types_6 (select _x_2_1::syntax._TypeDef 5) (select _x_2_1::syntax._TypeDef 6) (select _x_2_1::syntax._TypeDef 3) attribute_8 new_type_defs_9 (select _x_2_0::_Tuple2 1) type_heaps_11 dcl_modules_12) (False -> case (<{StdInt.==_16}> (select _vArray_1::<{_SystemArray.Array;}> 4 (_SystemArray.select_75 new_type_defs_9 glob_module_5)) 0) (True -> let _x_3_0 = analtypes.select_241 (select (select (select _vArray_2::<{_SystemArray.Array;}> 3 dcl_modules_12 glob_module_5)::syntax._DclModule 7)::syntax._CommonDefs 0) glob_object_4, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_7 types_6 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_8 new_type_defs_9 icl_type_defs_10 type_heaps_11 (select _x_3_0::_Tuple2 1)) (False -> let _x_3_0 = select _vArray_1::<{_SystemArray.Array;}> 3 (_SystemArray.select_75 new_type_defs_9 glob_module_5) glob_object_4, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_7 types_6 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_8 (select _x_3_0::_Tuple2 1) icl_type_defs_10 type_heaps_11 dcl_modules_12) ) 
analtypes.try_to_expand_synonym_type_418 !_vArray_0 !_vArray_1 !_vArray_2 main_dcl_module_index_3::I !type_4 attribute_5 !_x_6 = case type_4 (syntax._AType at_attribute_1_0 at_type_1_1 -> case at_type_1_1 (syntax.TA _x_2_0 types_2_1 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_6 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_419 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 glob_object_4_0 glob_module_4_1 types_2_1 type_4 attribute_5 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) (syntax.TAS _x_2_0 types_2_1 _x_2_2 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_6 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_419 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 glob_object_4_0 glob_module_4_1 types_2_1 type_4 attribute_5 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) ) (_ -> case _x_6 (_Tuple4 new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3 -> _Tuple5 general.No new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3) )
analtypes.try_to_expand_new_type_constructor_arg_422 !_vArray_0 !_vArray_1 !_vArray_2 main_dcl_module_index_3::I !_x_4 new_type_defs_5 icl_type_defs_6 type_heaps_7 dcl_modules_8 = case _x_4 (syntax._SymbolType st_vars_1_0 _x_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> case _x_1_1 (_predefined._Cons type_2_0 _x_2_1 -> case type_2_0 (syntax._AType at_attribute_3_0 at_type_3_1 -> case _x_2_1 (_predefined._Nil -> analtypes.try_to_expand_synonym_type_418 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 type_2_0 at_attribute_3_0 (_Tuple4 new_type_defs_5 icl_type_defs_6 type_heaps_7 dcl_modules_8)) ) ) ) 
analtypes.expand_new_type_rhs_not_in_icl_module_421 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 main_dcl_module_index_5::I !gi_module_6::I !constructor_index_7::I new_type_defs_8 icl_type_defs_9 new_cons_defs_10 icl_cons_defs_11 type_heaps_12 dcl_modules_13 error_14 = case (<{StdInt.==_16}> (select _vArray_1::<{_SystemArray.Array;}> 4 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_10 gi_module_6)) 0) (True -> let _x_2_0 = select (analtypes.select_249 (select (select (select _vArray_2::<{_SystemArray.Array;}> 3 dcl_modules_13 gi_module_6)::syntax._DclModule 7)::syntax._CommonDefs 1) constructor_index_7)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, dcl_modules_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.try_to_expand_new_type_constructor_arg_422 _vArray_3 _vArray_4 _vArray_2 main_dcl_module_index_5 cons_type_2_1 new_type_defs_8 icl_type_defs_9 type_heaps_12 dcl_modules_2_2, dcl_modules_2_4 = select _x_2_3::_Tuple5 4, type_heaps_2_5 = select _x_2_3::_Tuple5 3, icl_type_defs_2_6 = select _x_2_3::_Tuple5 2, new_type_defs_2_7 = select _x_2_3::_Tuple5 1 in <{analtypes._c;178;19_621}> (select _x_2_3::_Tuple5 0) _vArray_1 constructor_index_7 dcl_modules_2_4 gi_module_6 _vArray_2 new_type_defs_2_7 icl_type_defs_2_6 new_cons_defs_10 _vArray_0 icl_cons_defs_11 type_heaps_2_5 error_14) (False -> let _x_2_0 = select (select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_10 gi_module_6) constructor_index_7)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_422 _vArray_3 _vArray_4 _vArray_2 main_dcl_module_index_5 cons_type_2_1 new_type_defs_8 icl_type_defs_9 type_heaps_12 dcl_modules_13, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, new_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;189;19_622}> (select _x_2_2::_Tuple5 0) new_cons_defs_2_7 gi_module_6 _vArray_0 constructor_index_7 _vArray_1 new_type_defs_2_6 icl_type_defs_2_5 icl_cons_defs_11 type_heaps_2_4 dcl_modules_2_3 error_14) 
<{analtypes._c;189;19_622}> !_x_0 new_cons_defs_1 gi_module_2::I _vArray_3 constructor_index_4::I _vArray_5 new_type_defs_6 icl_type_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select _vArray_5::<{_SystemArray.Array;}> 3 (select _vArray_3::<{_SystemArray.Array;}> 3 new_cons_defs_1 gi_module_2) constructor_index_4, e0_2_1 = select _x_2_0::_Tuple2 0 in _Tuple7 new_type_defs_6 icl_type_defs_7 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _vArray_3::<{_SystemArray.Array;}> 3 (select _x_2_0::_Tuple2 1) gi_module_2) constructor_index_4 (update e0_2_1::syntax._ConsDef [1:update (select e0_2_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_1 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) 
<{analtypes._c;178;19_621}> !_x_0 _vArray_1 constructor_index_2::I dcl_modules_3 gi_module_4::I _vArray_5 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 _vArray_9 icl_cons_defs_10 type_heaps_11 error_12 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select (select (select _vArray_5::<{_SystemArray.Array;}> 3 dcl_modules_3 gi_module_4)::syntax._DclModule 7)::syntax._CommonDefs 1, _x_2_1 = analtypes.usize_253 (select _x_2_0::_Tuple2 0), g_s2_2_2::I = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1, _x_2_3 = select _vArray_1::<{_SystemArray.Array;}> 6 (<{analtypes.cu;181;63_396}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) constructor_index_2, e0_2_4 = select _x_2_3::_Tuple2 0 in _Tuple7 new_type_defs_6 icl_type_defs_7 (select _vArray_9::<{_SystemArray.Array;}> 5 new_cons_defs_8 gi_module_4 (select _vArray_1::<{_SystemArray.Array;}> 5 (select _x_2_3::_Tuple2 1) constructor_index_2 (update e0_2_4::syntax._ConsDef [1:update (select e0_2_4::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]]))) icl_cons_defs_10 type_heaps_11 (select _x_2_0::_Tuple2 1) error_12) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_10 type_heaps_11 dcl_modules_3 error_12) 
analtypes.expand_new_type_rhs_420 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 !main_dcl_module_index_6::I !gi_module_7::I !constructor_index_8::I new_type_defs_9 icl_type_defs_10 new_cons_defs_11 icl_cons_defs_12 type_heaps_13 dcl_modules_14 error_15 = case (StdBool.not (<{StdInt.==_16}> gi_module_7 main_dcl_module_index_6)) (True -> analtypes.expand_new_type_rhs_not_in_icl_module_421 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_6 gi_module_7 constructor_index_8 new_type_defs_9 icl_type_defs_10 new_cons_defs_11 icl_cons_defs_12 type_heaps_13 dcl_modules_14 error_15) (False -> let _x_2_0 = select (select _vArray_5::<{_SystemArray.Array;}> 3 icl_cons_defs_12 constructor_index_8)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_422 _vArray_3 _vArray_4 _vArray_2 main_dcl_module_index_6 cons_type_2_1 new_type_defs_9 icl_type_defs_10 type_heaps_13 dcl_modules_14, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, icl_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;164;19_623}> (select _x_2_2::_Tuple5 0) constructor_index_8 dcl_modules_2_3 main_dcl_module_index_6 _vArray_2 icl_cons_defs_2_7 _vArray_5 _vArray_0 _vArray_1 _vArray_3 _vArray_4 gi_module_7 new_type_defs_2_6 icl_type_defs_2_5 new_cons_defs_11 type_heaps_2_4 error_15) 
<{analtypes._c;164;19_623}> !_x_0 constructor_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 icl_cons_defs_5 _vArray_6 _vArray_7 _vArray_8 _vArray_9 _vArray_10 gi_module_11::I new_type_defs_12 icl_type_defs_13 new_cons_defs_14 type_heaps_15 error_16 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> constructor_index_1 (analtypes.size_250 (select (select (select _vArray_4::<{_SystemArray.Array;}> 3 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 1))) (True -> let _x_3_0 = select _vArray_6::<{_SystemArray.Array;}> 6 icl_cons_defs_5 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in analtypes.expand_new_type_rhs_not_in_icl_module_421 _vArray_7 _vArray_8 _vArray_4 _vArray_9 _vArray_10 main_dcl_module_index_3 gi_module_11 constructor_index_1 new_type_defs_12 icl_type_defs_13 new_cons_defs_14 (select _vArray_6::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_15 dcl_modules_2 error_16) (False -> let _x_3_0 = select _vArray_6::<{_SystemArray.Array;}> 6 icl_cons_defs_5 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in _Tuple7 new_type_defs_12 icl_type_defs_13 new_cons_defs_14 (select _vArray_6::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_15 dcl_modules_2 error_16) ) (general.No -> _Tuple7 new_type_defs_12 icl_type_defs_13 new_cons_defs_14 icl_cons_defs_5 type_heaps_15 dcl_modules_2 error_16) 
analtypes.expand_synonym_type_not_in_icl_module_417 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 main_dcl_module_index_6::I main_dcl_module_index_7 !gi_8 !_x_9 = case gi_8 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_9 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (<{StdInt.==_16}> (select _vArray_0::<{_SystemArray.Array;}> 4 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0)) 0) (True -> let _x_4_0 = analtypes.select_241 (select (select (select _vArray_1::<{_SystemArray.Array;}> 3 dcl_modules_2_5 gi_module_1_0)::syntax._DclModule 7)::syntax._CommonDefs 0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, dcl_modules_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;126;19_625}> (select td_4_1::syntax._TypeDef 5) _vArray_2 _vArray_0 _vArray_1 main_dcl_module_index_6 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_4_2 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_3 _vArray_4 _vArray_5) (False -> let _x_4_0 = select _vArray_0::<{_SystemArray.Array;}> 3 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, new_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;143;19_627}> (select td_4_1::syntax._TypeDef 5) _vArray_2 _vArray_0 _vArray_1 main_dcl_module_index_6 td_attribute_4_3 new_type_defs_4_2 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_2_5 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_3 _vArray_4 _vArray_5) ) ) 
<{analtypes._c;143;19_627}> !_x_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4::I td_attribute_5 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9 gi_module_10::I gi_index_11::I td_12 new_cons_defs_13 icl_cons_defs_14 error_15 _vArray_16 _vArray_17 _vArray_18 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_418 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 type_1_0 td_attribute_5 (_Tuple4 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;147;28_626}> (select _x_2_0::_Tuple5 0) new_type_defs_2_4 gi_module_10 gi_index_11 _vArray_2 td_12 icl_type_defs_2_3 new_cons_defs_13 icl_cons_defs_14 type_heaps_2_2 dcl_modules_2_1 error_15) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_420 _vArray_16 _vArray_17 _vArray_3 _vArray_1 _vArray_2 _vArray_18 main_dcl_module_index_4 gi_module_10 ds_index_2_2 new_type_defs_6 icl_type_defs_7 new_cons_defs_13 icl_cons_defs_14 type_heaps_8 dcl_modules_9 error_15) ) (_ -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_13 icl_cons_defs_14 type_heaps_8 dcl_modules_9 error_15)
<{analtypes._c;147;28_626}> !_x_0 new_type_defs_1 gi_module_2::I gi_index_3::I _vArray_4 td_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11 = case _x_0 (general.Yes type_1_0 -> _Tuple7 (select _vArray_4::<{_SystemArray.Array;}> 5 (_SystemArray.select_75 new_type_defs_1 gi_module_2) gi_index_3 (update td_5::syntax._TypeDef [5:syntax.SynType type_1_0])) icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) (general.No -> _Tuple7 new_type_defs_1 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) 
<{analtypes._c;126;19_625}> !_x_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4::I td_attribute_5 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9 gi_module_10::I gi_index_11::I td_12 new_cons_defs_13 icl_cons_defs_14 error_15 _vArray_16 _vArray_17 _vArray_18 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_418 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 type_1_0 td_attribute_5 (_Tuple4 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;130;28_624}> (select _x_2_0::_Tuple5 0) dcl_modules_2_1 gi_module_10 _vArray_3 new_type_defs_2_4 _vArray_2 gi_index_11 td_12 icl_type_defs_2_3 new_cons_defs_13 icl_cons_defs_14 type_heaps_2_2 error_15) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_420 _vArray_16 _vArray_17 _vArray_3 _vArray_1 _vArray_2 _vArray_18 main_dcl_module_index_4 gi_module_10 ds_index_2_2 new_type_defs_6 icl_type_defs_7 new_cons_defs_13 icl_cons_defs_14 type_heaps_8 dcl_modules_9 error_15) ) (_ -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_13 icl_cons_defs_14 type_heaps_8 dcl_modules_9 error_15)
<{analtypes._c;130;28_624}> !_x_0 dcl_modules_1 gi_module_2::I _vArray_3 new_type_defs_4 _vArray_5 gi_index_6::I td_7 icl_type_defs_8 new_cons_defs_9 icl_cons_defs_10 type_heaps_11 error_12 = case _x_0 (general.Yes type_1_0 -> let _x_2_0::I = select (select (select _vArray_3::<{_SystemArray.Array;}> 3 dcl_modules_1 gi_module_2)::syntax._DclModule 7)::syntax._CommonDefs 0, _x_2_1 = analtypes.usize_245 (select _x_2_0::_Tuple2 0), g_s2_2_2 = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1 in _Tuple7 (_SystemArray.update_77 new_type_defs_4 gi_module_2 (select _vArray_5::<{_SystemArray.Array;}> 5 (<{analtypes.cu;133;71_397}> _vArray_5 (select _vArray_5::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) gi_index_6 (update td_7::syntax._TypeDef [5:syntax.SynType type_1_0]))) icl_type_defs_8 new_cons_defs_9 icl_cons_defs_10 type_heaps_11 (select _x_2_0::_Tuple2 1) error_12) (general.No -> _Tuple7 new_type_defs_4 icl_type_defs_8 new_cons_defs_9 icl_cons_defs_10 type_heaps_11 dcl_modules_1 error_12) 
analtypes.expand_synonym_type_416 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 main_dcl_module_index_6::I !main_dcl_module_index_7::I !gi_8 !_x_9 = case gi_8 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_9 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (StdBool.not (<{StdInt.==_16}> gi_module_1_0 main_dcl_module_index_7)) (True -> analtypes.expand_synonym_type_not_in_icl_module_417 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 main_dcl_module_index_6 main_dcl_module_index_7 gi_8 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6)) (False -> let _x_4_0 = select _vArray_2::<{_SystemArray.Array;}> 6 icl_type_defs_2_1 gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, icl_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;106;19_629}> (select td_4_1::syntax._TypeDef 5) _vArray_2 _vArray_0 _vArray_1 main_dcl_module_index_6 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_4_2 type_heaps_2_4 dcl_modules_2_5 gi_index_1_1 main_dcl_module_index_7 _vArray_3 _vArray_4 _vArray_5 gi_8 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 gi_module_1_0) ) ) 
<{analtypes._c;106;19_629}> !_x_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4::I td_attribute_5 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9 gi_index_10::I main_dcl_module_index_11::I _vArray_12 _vArray_13 _vArray_14 gi_15 td_16 new_cons_defs_17 icl_cons_defs_18 error_19 gi_module_20::I = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_418 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 type_1_0 td_attribute_5 (_Tuple4 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;110;28_628}> (select _x_2_0::_Tuple5 0) gi_index_10 dcl_modules_2_1 main_dcl_module_index_11 _vArray_3 _vArray_2 _vArray_1 _vArray_12 _vArray_13 _vArray_14 main_dcl_module_index_4 gi_15 new_type_defs_2_4 icl_type_defs_2_3 td_16 new_cons_defs_17 icl_cons_defs_18 type_heaps_2_2 error_19) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_420 _vArray_12 _vArray_13 _vArray_3 _vArray_1 _vArray_2 _vArray_14 main_dcl_module_index_4 gi_module_20 ds_index_2_2 new_type_defs_6 icl_type_defs_7 new_cons_defs_17 icl_cons_defs_18 type_heaps_8 dcl_modules_9 error_19) ) (_ -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_17 icl_cons_defs_18 type_heaps_8 dcl_modules_9 error_19)
<{analtypes._c;110;28_628}> !_x_0 gi_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 _vArray_5 _vArray_6 _vArray_7 _vArray_8 _vArray_9 main_dcl_module_index_10::I gi_11 new_type_defs_12 icl_type_defs_13 td_14 new_cons_defs_15 icl_cons_defs_16 type_heaps_17 error_18 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> gi_index_1 (analtypes.size_242 (select (select (select _vArray_4::<{_SystemArray.Array;}> 3 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 0))) (True -> analtypes.expand_synonym_type_not_in_icl_module_417 _vArray_5 _vArray_4 _vArray_6 _vArray_7 _vArray_8 _vArray_9 main_dcl_module_index_10 main_dcl_module_index_3 gi_11 (_Tuple7 new_type_defs_12 (select _vArray_6::<{_SystemArray.Array;}> 5 icl_type_defs_13 gi_index_1 (update td_14::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_15 icl_cons_defs_16 type_heaps_17 dcl_modules_2 error_18)) (False -> _Tuple7 new_type_defs_12 (select _vArray_6::<{_SystemArray.Array;}> 5 icl_type_defs_13 gi_index_1 (update td_14::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_15 icl_cons_defs_16 type_heaps_17 dcl_modules_2 error_18) ) (general.No -> _Tuple7 new_type_defs_12 icl_type_defs_13 new_cons_defs_15 icl_cons_defs_16 type_heaps_17 dcl_modules_2 error_18) 
analtypes.fold_st_415 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 main_dcl_module_index_6::I main_dcl_module_index_7::I !_x_8 !st_9 = case _x_8 (_predefined._Nil -> st_9) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_415 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 main_dcl_module_index_6 main_dcl_module_index_7 x_1_1 (analtypes.expand_synonym_type_416 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 main_dcl_module_index_6 main_dcl_module_index_7 a_1_0 st_9)) 
analtypes.expand_synonym_types_of_group_414 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 main_dcl_module_index_6::I !group_members_7 !_x_8 = case _x_8 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> analtypes.fold_st_415 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 main_dcl_module_index_6 main_dcl_module_index_6 group_members_7 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) 
analtypes.fold_st_413 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 main_dcl_module_index_6::I !_x_7 !st_8 = case _x_7 (_predefined._Nil -> st_8) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_413 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 main_dcl_module_index_6 x_1_1 (analtypes.expand_synonym_types_of_group_414 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 main_dcl_module_index_6 a_1_0 st_8)) 
analtypes.expand_synonym_types_of_groups_412 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !_vArray_5 main_dcl_module_index_6::I pi_groups_7 !_x_8 = case _x_8 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> case (select error_1_6::checksupport._ErrorAdmin 2) (True -> analtypes.fold_st_413 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 _vArray_5 main_dcl_module_index_6 pi_groups_7 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) (False -> _Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6) ) 
analtypes.i_fold_st_423 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_423 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
<{analtypes.cu;56;38_424}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = analtypes.uselect_244 g_a_3 c_i_1 in <{analtypes.cu;56;38_424}> (analtypes.update_243 c_a_0 c_i_1 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
<{analtypes.cu;57;28_425}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{analtypes.cu;57;28_425}> (_SystemArray.update_77 c_a_0 c_i_1 (analtypes._createArray_238 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
<{analtypes.cu;59;28_426}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{analtypes.cu;59;28_426}> (_SystemArray.update_45 c_a_0 c_i_1 (analtypes._createArray_246 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
analtypes.try_to_expand_synonym_type_for_TA_434 !_vArray_0 !_vArray_1 !main_dcl_module_index_2::I glob_object_3::I !glob_module_4::I types_5 type_6 attribute_7 new_type_defs_8 icl_type_defs_9 type_heaps_10 dcl_modules_11 = case (<{StdInt.==_16}> glob_module_4 main_dcl_module_index_2) (True -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 icl_type_defs_9 glob_object_3, _x_2_1 = select _x_2_0::_Tuple2 0 in analtypes.try_to_expand_46 type_6 types_5 (select _x_2_1::syntax._TypeDef 5) (select _x_2_1::syntax._TypeDef 6) (select _x_2_1::syntax._TypeDef 3) attribute_7 new_type_defs_8 (select _x_2_0::_Tuple2 1) type_heaps_10 dcl_modules_11) (False -> case (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_8 glob_module_4)) 0) (True -> let _x_3_0 = analtypes.select_241 (select (select (select _vArray_1::<{_SystemArray.Array;}> 3 dcl_modules_11 glob_module_4)::syntax._DclModule 7)::syntax._CommonDefs 0) glob_object_3, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_6 types_5 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_7 new_type_defs_8 icl_type_defs_9 type_heaps_10 (select _x_3_0::_Tuple2 1)) (False -> let _x_3_0 = analtypes.select_241 (_SystemArray.select_75 new_type_defs_8 glob_module_4) glob_object_3, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_6 types_5 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_7 (select _x_3_0::_Tuple2 1) icl_type_defs_9 type_heaps_10 dcl_modules_11) ) 
analtypes.try_to_expand_synonym_type_433 !_vArray_0 !_vArray_1 main_dcl_module_index_2::I !type_3 attribute_4 !_x_5 = case type_3 (syntax._AType at_attribute_1_0 at_type_1_1 -> case at_type_1_1 (syntax.TA _x_2_0 types_2_1 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_5 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_434 _vArray_0 _vArray_1 main_dcl_module_index_2 glob_object_4_0 glob_module_4_1 types_2_1 type_3 attribute_4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) (syntax.TAS _x_2_0 types_2_1 _x_2_2 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_5 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_434 _vArray_0 _vArray_1 main_dcl_module_index_2 glob_object_4_0 glob_module_4_1 types_2_1 type_3 attribute_4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) ) (_ -> case _x_5 (_Tuple4 new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3 -> _Tuple5 general.No new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3) )
analtypes.try_to_expand_new_type_constructor_arg_438 !_vArray_0 !_vArray_1 main_dcl_module_index_2::I !_x_3 new_type_defs_4 icl_type_defs_5 type_heaps_6 dcl_modules_7 = case _x_3 (syntax._SymbolType st_vars_1_0 _x_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> case _x_1_1 (_predefined._Cons type_2_0 _x_2_1 -> case type_2_0 (syntax._AType at_attribute_3_0 at_type_3_1 -> case _x_2_1 (_predefined._Nil -> analtypes.try_to_expand_synonym_type_433 _vArray_0 _vArray_1 main_dcl_module_index_2 type_2_0 at_attribute_3_0 (_Tuple4 new_type_defs_4 icl_type_defs_5 type_heaps_6 dcl_modules_7)) ) ) ) 
analtypes.expand_new_type_rhs_not_in_icl_module_437 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 main_dcl_module_index_4::I !gi_module_5::I !constructor_index_6::I new_type_defs_7 icl_type_defs_8 new_cons_defs_9 icl_cons_defs_10 type_heaps_11 dcl_modules_12 error_13 = case (<{StdInt.==_16}> (select _vArray_1::<{_SystemArray.Array;}> 4 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_9 gi_module_5)) 0) (True -> let _x_2_0 = select (analtypes.select_249 (select (select (select _vArray_2::<{_SystemArray.Array;}> 3 dcl_modules_12 gi_module_5)::syntax._DclModule 7)::syntax._CommonDefs 1) constructor_index_6)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, dcl_modules_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.try_to_expand_new_type_constructor_arg_438 _vArray_3 _vArray_2 main_dcl_module_index_4 cons_type_2_1 new_type_defs_7 icl_type_defs_8 type_heaps_11 dcl_modules_2_2, dcl_modules_2_4 = select _x_2_3::_Tuple5 4, type_heaps_2_5 = select _x_2_3::_Tuple5 3, icl_type_defs_2_6 = select _x_2_3::_Tuple5 2, new_type_defs_2_7 = select _x_2_3::_Tuple5 1 in <{analtypes._c;178;19_630}> (select _x_2_3::_Tuple5 0) _vArray_1 constructor_index_6 dcl_modules_2_4 gi_module_5 _vArray_2 new_type_defs_2_7 icl_type_defs_2_6 new_cons_defs_9 _vArray_0 icl_cons_defs_10 type_heaps_2_5 error_13) (False -> let _x_2_0 = select (select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_9 gi_module_5) constructor_index_6)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_438 _vArray_3 _vArray_2 main_dcl_module_index_4 cons_type_2_1 new_type_defs_7 icl_type_defs_8 type_heaps_11 dcl_modules_12, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, new_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;189;19_631}> (select _x_2_2::_Tuple5 0) new_cons_defs_2_7 gi_module_5 _vArray_0 constructor_index_6 _vArray_1 new_type_defs_2_6 icl_type_defs_2_5 icl_cons_defs_10 type_heaps_2_4 dcl_modules_2_3 error_13) 
<{analtypes._c;189;19_631}> !_x_0 new_cons_defs_1 gi_module_2::I _vArray_3 constructor_index_4::I _vArray_5 new_type_defs_6 icl_type_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select _vArray_5::<{_SystemArray.Array;}> 3 (select _vArray_3::<{_SystemArray.Array;}> 3 new_cons_defs_1 gi_module_2) constructor_index_4, e0_2_1 = select _x_2_0::_Tuple2 0 in _Tuple7 new_type_defs_6 icl_type_defs_7 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _vArray_3::<{_SystemArray.Array;}> 3 (select _x_2_0::_Tuple2 1) gi_module_2) constructor_index_4 (update e0_2_1::syntax._ConsDef [1:update (select e0_2_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_1 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) 
<{analtypes._c;178;19_630}> !_x_0 _vArray_1 constructor_index_2::I dcl_modules_3 gi_module_4::I _vArray_5 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 _vArray_9 icl_cons_defs_10 type_heaps_11 error_12 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select (select (select _vArray_5::<{_SystemArray.Array;}> 3 dcl_modules_3 gi_module_4)::syntax._DclModule 7)::syntax._CommonDefs 1, _x_2_1 = analtypes.usize_253 (select _x_2_0::_Tuple2 0), g_s2_2_2::I = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1, _x_2_3 = select _vArray_1::<{_SystemArray.Array;}> 6 (<{analtypes.cu;181;63_396}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) constructor_index_2, e0_2_4 = select _x_2_3::_Tuple2 0 in _Tuple7 new_type_defs_6 icl_type_defs_7 (select _vArray_9::<{_SystemArray.Array;}> 5 new_cons_defs_8 gi_module_4 (select _vArray_1::<{_SystemArray.Array;}> 5 (select _x_2_3::_Tuple2 1) constructor_index_2 (update e0_2_4::syntax._ConsDef [1:update (select e0_2_4::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]]))) icl_cons_defs_10 type_heaps_11 (select _x_2_0::_Tuple2 1) error_12) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_10 type_heaps_11 dcl_modules_3 error_12) 
analtypes.expand_new_type_rhs_436 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 !main_dcl_module_index_5::I !gi_module_6::I !constructor_index_7::I new_type_defs_8 icl_type_defs_9 new_cons_defs_10 icl_cons_defs_11 type_heaps_12 dcl_modules_13 error_14 = case (StdBool.not (<{StdInt.==_16}> gi_module_6 main_dcl_module_index_5)) (True -> analtypes.expand_new_type_rhs_not_in_icl_module_437 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_5 gi_module_6 constructor_index_7 new_type_defs_8 icl_type_defs_9 new_cons_defs_10 icl_cons_defs_11 type_heaps_12 dcl_modules_13 error_14) (False -> let _x_2_0 = select (select _vArray_4::<{_SystemArray.Array;}> 3 icl_cons_defs_11 constructor_index_7)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_438 _vArray_3 _vArray_2 main_dcl_module_index_5 cons_type_2_1 new_type_defs_8 icl_type_defs_9 type_heaps_12 dcl_modules_13, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, icl_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;164;19_632}> (select _x_2_2::_Tuple5 0) constructor_index_7 dcl_modules_2_3 main_dcl_module_index_5 _vArray_2 icl_cons_defs_2_7 _vArray_4 _vArray_0 _vArray_1 _vArray_3 gi_module_6 new_type_defs_2_6 icl_type_defs_2_5 new_cons_defs_10 type_heaps_2_4 error_14) 
<{analtypes._c;164;19_632}> !_x_0 constructor_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 icl_cons_defs_5 _vArray_6 _vArray_7 _vArray_8 _vArray_9 gi_module_10::I new_type_defs_11 icl_type_defs_12 new_cons_defs_13 type_heaps_14 error_15 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> constructor_index_1 (analtypes.size_250 (select (select (select _vArray_4::<{_SystemArray.Array;}> 3 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 1))) (True -> let _x_3_0 = select _vArray_6::<{_SystemArray.Array;}> 6 icl_cons_defs_5 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in analtypes.expand_new_type_rhs_not_in_icl_module_437 _vArray_7 _vArray_8 _vArray_4 _vArray_9 main_dcl_module_index_3 gi_module_10 constructor_index_1 new_type_defs_11 icl_type_defs_12 new_cons_defs_13 (select _vArray_6::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_14 dcl_modules_2 error_15) (False -> let _x_3_0 = select _vArray_6::<{_SystemArray.Array;}> 6 icl_cons_defs_5 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in _Tuple7 new_type_defs_11 icl_type_defs_12 new_cons_defs_13 (select _vArray_6::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_14 dcl_modules_2 error_15) ) (general.No -> _Tuple7 new_type_defs_11 icl_type_defs_12 new_cons_defs_13 icl_cons_defs_5 type_heaps_14 dcl_modules_2 error_15) 
<{analtypes.cu;133;71_435}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = analtypes.uselect_244 g_a_3 c_i_1 in <{analtypes.cu;133;71_435}> (analtypes.update_243 c_a_0 c_i_1 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
analtypes.expand_synonym_type_not_in_icl_module_432 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 main_dcl_module_index_5::I main_dcl_module_index_6 !gi_7 !_x_8 = case gi_7 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_8 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0)) 0) (True -> let _x_4_0 = analtypes.select_241 (select (select (select _vArray_0::<{_SystemArray.Array;}> 3 dcl_modules_2_5 gi_module_1_0)::syntax._DclModule 7)::syntax._CommonDefs 0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, dcl_modules_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;126;19_634}> (select td_4_1::syntax._TypeDef 5) _vArray_1 _vArray_0 main_dcl_module_index_5 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_4_2 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_2 _vArray_3 _vArray_4) (False -> let _x_4_0 = analtypes.select_241 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, new_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;143;19_636}> (select td_4_1::syntax._TypeDef 5) _vArray_1 _vArray_0 main_dcl_module_index_5 td_attribute_4_3 new_type_defs_4_2 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_2_5 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_2 _vArray_3 _vArray_4) ) ) 
<{analtypes._c;143;19_636}> !_x_0 _vArray_1 _vArray_2 main_dcl_module_index_3::I td_attribute_4 new_type_defs_5 icl_type_defs_6 type_heaps_7 dcl_modules_8 gi_module_9::I gi_index_10::I td_11 new_cons_defs_12 icl_cons_defs_13 error_14 _vArray_15 _vArray_16 _vArray_17 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_433 _vArray_1 _vArray_2 main_dcl_module_index_3 type_1_0 td_attribute_4 (_Tuple4 new_type_defs_5 icl_type_defs_6 type_heaps_7 dcl_modules_8), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;147;28_635}> (select _x_2_0::_Tuple5 0) new_type_defs_2_4 gi_module_9 gi_index_10 td_11 icl_type_defs_2_3 new_cons_defs_12 icl_cons_defs_13 type_heaps_2_2 dcl_modules_2_1 error_14) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_436 _vArray_15 _vArray_16 _vArray_2 _vArray_1 _vArray_17 main_dcl_module_index_3 gi_module_9 ds_index_2_2 new_type_defs_5 icl_type_defs_6 new_cons_defs_12 icl_cons_defs_13 type_heaps_7 dcl_modules_8 error_14) ) (_ -> _Tuple7 new_type_defs_5 icl_type_defs_6 new_cons_defs_12 icl_cons_defs_13 type_heaps_7 dcl_modules_8 error_14)
<{analtypes._c;147;28_635}> !_x_0 new_type_defs_1 gi_module_2::I gi_index_3::I td_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10 = case _x_0 (general.Yes type_1_0 -> _Tuple7 (analtypes.update_243 (_SystemArray.select_75 new_type_defs_1 gi_module_2) gi_index_3 (update td_4::syntax._TypeDef [5:syntax.SynType type_1_0])) icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) (general.No -> _Tuple7 new_type_defs_1 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) 
<{analtypes._c;126;19_634}> !_x_0 _vArray_1 _vArray_2 main_dcl_module_index_3::I td_attribute_4 new_type_defs_5 icl_type_defs_6 type_heaps_7 dcl_modules_8 gi_module_9::I gi_index_10::I td_11 new_cons_defs_12 icl_cons_defs_13 error_14 _vArray_15 _vArray_16 _vArray_17 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_433 _vArray_1 _vArray_2 main_dcl_module_index_3 type_1_0 td_attribute_4 (_Tuple4 new_type_defs_5 icl_type_defs_6 type_heaps_7 dcl_modules_8), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;130;28_633}> (select _x_2_0::_Tuple5 0) dcl_modules_2_1 gi_module_9 _vArray_2 new_type_defs_2_4 gi_index_10 td_11 icl_type_defs_2_3 new_cons_defs_12 icl_cons_defs_13 type_heaps_2_2 error_14) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_436 _vArray_15 _vArray_16 _vArray_2 _vArray_1 _vArray_17 main_dcl_module_index_3 gi_module_9 ds_index_2_2 new_type_defs_5 icl_type_defs_6 new_cons_defs_12 icl_cons_defs_13 type_heaps_7 dcl_modules_8 error_14) ) (_ -> _Tuple7 new_type_defs_5 icl_type_defs_6 new_cons_defs_12 icl_cons_defs_13 type_heaps_7 dcl_modules_8 error_14)
<{analtypes._c;130;28_633}> !_x_0 dcl_modules_1 gi_module_2::I _vArray_3 new_type_defs_4 gi_index_5::I td_6 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_9 type_heaps_10 error_11 = case _x_0 (general.Yes type_1_0 -> let _x_2_0::I = select (select (select _vArray_3::<{_SystemArray.Array;}> 3 dcl_modules_1 gi_module_2)::syntax._DclModule 7)::syntax._CommonDefs 0, _x_2_1 = analtypes.usize_245 (select _x_2_0::_Tuple2 0), g_s2_2_2 = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1 in _Tuple7 (_SystemArray.update_77 new_type_defs_4 gi_module_2 (analtypes.update_243 (<{analtypes.cu;133;71_435}> (analtypes._createArray_238 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) gi_index_5 (update td_6::syntax._TypeDef [5:syntax.SynType type_1_0]))) icl_type_defs_7 new_cons_defs_8 icl_cons_defs_9 type_heaps_10 (select _x_2_0::_Tuple2 1) error_11) (general.No -> _Tuple7 new_type_defs_4 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_9 type_heaps_10 dcl_modules_1 error_11) 
analtypes.expand_synonym_type_431 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 main_dcl_module_index_5::I !main_dcl_module_index_6::I !gi_7 !_x_8 = case gi_7 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_8 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (StdBool.not (<{StdInt.==_16}> gi_module_1_0 main_dcl_module_index_6)) (True -> analtypes.expand_synonym_type_not_in_icl_module_432 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 main_dcl_module_index_6 gi_7 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6)) (False -> let _x_4_0 = select _vArray_1::<{_SystemArray.Array;}> 6 icl_type_defs_2_1 gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, icl_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;106;19_638}> (select td_4_1::syntax._TypeDef 5) _vArray_1 _vArray_0 main_dcl_module_index_5 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_4_2 type_heaps_2_4 dcl_modules_2_5 gi_index_1_1 main_dcl_module_index_6 _vArray_2 _vArray_3 _vArray_4 gi_7 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 gi_module_1_0) ) ) 
<{analtypes._c;106;19_638}> !_x_0 _vArray_1 _vArray_2 main_dcl_module_index_3::I td_attribute_4 new_type_defs_5 icl_type_defs_6 type_heaps_7 dcl_modules_8 gi_index_9::I main_dcl_module_index_10::I _vArray_11 _vArray_12 _vArray_13 gi_14 td_15 new_cons_defs_16 icl_cons_defs_17 error_18 gi_module_19::I = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_433 _vArray_1 _vArray_2 main_dcl_module_index_3 type_1_0 td_attribute_4 (_Tuple4 new_type_defs_5 icl_type_defs_6 type_heaps_7 dcl_modules_8), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;110;28_637}> (select _x_2_0::_Tuple5 0) gi_index_9 dcl_modules_2_1 main_dcl_module_index_10 _vArray_2 _vArray_1 _vArray_11 _vArray_12 _vArray_13 main_dcl_module_index_3 gi_14 new_type_defs_2_4 icl_type_defs_2_3 td_15 new_cons_defs_16 icl_cons_defs_17 type_heaps_2_2 error_18) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_436 _vArray_11 _vArray_12 _vArray_2 _vArray_1 _vArray_13 main_dcl_module_index_3 gi_module_19 ds_index_2_2 new_type_defs_5 icl_type_defs_6 new_cons_defs_16 icl_cons_defs_17 type_heaps_7 dcl_modules_8 error_18) ) (_ -> _Tuple7 new_type_defs_5 icl_type_defs_6 new_cons_defs_16 icl_cons_defs_17 type_heaps_7 dcl_modules_8 error_18)
<{analtypes._c;110;28_637}> !_x_0 gi_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 _vArray_5 _vArray_6 _vArray_7 _vArray_8 main_dcl_module_index_9::I gi_10 new_type_defs_11 icl_type_defs_12 td_13 new_cons_defs_14 icl_cons_defs_15 type_heaps_16 error_17 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> gi_index_1 (analtypes.size_242 (select (select (select _vArray_4::<{_SystemArray.Array;}> 3 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 0))) (True -> analtypes.expand_synonym_type_not_in_icl_module_432 _vArray_4 _vArray_5 _vArray_6 _vArray_7 _vArray_8 main_dcl_module_index_9 main_dcl_module_index_3 gi_10 (_Tuple7 new_type_defs_11 (select _vArray_5::<{_SystemArray.Array;}> 5 icl_type_defs_12 gi_index_1 (update td_13::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_14 icl_cons_defs_15 type_heaps_16 dcl_modules_2 error_17)) (False -> _Tuple7 new_type_defs_11 (select _vArray_5::<{_SystemArray.Array;}> 5 icl_type_defs_12 gi_index_1 (update td_13::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_14 icl_cons_defs_15 type_heaps_16 dcl_modules_2 error_17) ) (general.No -> _Tuple7 new_type_defs_11 icl_type_defs_12 new_cons_defs_14 icl_cons_defs_15 type_heaps_16 dcl_modules_2 error_17) 
analtypes.fold_st_430 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 main_dcl_module_index_5::I main_dcl_module_index_6::I !_x_7 !st_8 = case _x_7 (_predefined._Nil -> st_8) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_430 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 main_dcl_module_index_6 x_1_1 (analtypes.expand_synonym_type_431 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 main_dcl_module_index_6 a_1_0 st_8)) 
analtypes.expand_synonym_types_of_group_429 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 main_dcl_module_index_5::I !group_members_6 !_x_7 = case _x_7 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> analtypes.fold_st_430 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 main_dcl_module_index_5 group_members_6 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) 
analtypes.fold_st_428 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 main_dcl_module_index_5::I !_x_6 !st_7 = case _x_6 (_predefined._Nil -> st_7) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_428 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 x_1_1 (analtypes.expand_synonym_types_of_group_429 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 a_1_0 st_7)) 
analtypes.expand_synonym_types_of_groups_427 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !_vArray_4 main_dcl_module_index_5::I pi_groups_6 !_x_7 = case _x_7 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> case (select error_1_6::checksupport._ErrorAdmin 2) (True -> analtypes.fold_st_428 _vArray_0 _vArray_1 _vArray_2 _vArray_3 _vArray_4 main_dcl_module_index_5 pi_groups_6 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) (False -> _Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6) ) 
analtypes.i_fold_st_439 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_439 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.try_to_expand_synonym_type_for_TA_447 !_vArray_0 !main_dcl_module_index_1::I glob_object_2::I !glob_module_3::I types_4 type_5 attribute_6 new_type_defs_7 icl_type_defs_8 type_heaps_9 dcl_modules_10 = case (<{StdInt.==_16}> glob_module_3 main_dcl_module_index_1) (True -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 icl_type_defs_8 glob_object_2, _x_2_1 = select _x_2_0::_Tuple2 0 in analtypes.try_to_expand_46 type_5 types_4 (select _x_2_1::syntax._TypeDef 5) (select _x_2_1::syntax._TypeDef 6) (select _x_2_1::syntax._TypeDef 3) attribute_6 new_type_defs_7 (select _x_2_0::_Tuple2 1) type_heaps_9 dcl_modules_10) (False -> case (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_7 glob_module_3)) 0) (True -> let _x_3_0 = analtypes.select_241 (select (select (analtypes.select_257 dcl_modules_10 glob_module_3)::syntax._DclModule 7)::syntax._CommonDefs 0) glob_object_2, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_5 types_4 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_6 new_type_defs_7 icl_type_defs_8 type_heaps_9 (select _x_3_0::_Tuple2 1)) (False -> let _x_3_0 = analtypes.select_241 (_SystemArray.select_75 new_type_defs_7 glob_module_3) glob_object_2, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_5 types_4 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_6 (select _x_3_0::_Tuple2 1) icl_type_defs_8 type_heaps_9 dcl_modules_10) ) 
analtypes.try_to_expand_synonym_type_446 !_vArray_0 main_dcl_module_index_1::I !type_2 attribute_3 !_x_4 = case type_2 (syntax._AType at_attribute_1_0 at_type_1_1 -> case at_type_1_1 (syntax.TA _x_2_0 types_2_1 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_4 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_447 _vArray_0 main_dcl_module_index_1 glob_object_4_0 glob_module_4_1 types_2_1 type_2 attribute_3 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) (syntax.TAS _x_2_0 types_2_1 _x_2_2 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_4 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_447 _vArray_0 main_dcl_module_index_1 glob_object_4_0 glob_module_4_1 types_2_1 type_2 attribute_3 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) ) (_ -> case _x_4 (_Tuple4 new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3 -> _Tuple5 general.No new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3) )
analtypes.try_to_expand_new_type_constructor_arg_450 !_vArray_0 main_dcl_module_index_1::I !_x_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 = case _x_2 (syntax._SymbolType st_vars_1_0 _x_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> case _x_1_1 (_predefined._Cons type_2_0 _x_2_1 -> case type_2_0 (syntax._AType at_attribute_3_0 at_type_3_1 -> case _x_2_1 (_predefined._Nil -> analtypes.try_to_expand_synonym_type_446 _vArray_0 main_dcl_module_index_1 type_2_0 at_attribute_3_0 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6)) ) ) ) 
analtypes.expand_new_type_rhs_not_in_icl_module_449 !_vArray_0 !_vArray_1 !_vArray_2 main_dcl_module_index_3::I !gi_module_4::I !constructor_index_5::I new_type_defs_6 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_9 type_heaps_10 dcl_modules_11 error_12 = case (<{StdInt.==_16}> (select _vArray_1::<{_SystemArray.Array;}> 4 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_8 gi_module_4)) 0) (True -> let _x_2_0 = select (analtypes.select_249 (select (select (analtypes.select_257 dcl_modules_11 gi_module_4)::syntax._DclModule 7)::syntax._CommonDefs 1) constructor_index_5)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, dcl_modules_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.try_to_expand_new_type_constructor_arg_450 _vArray_2 main_dcl_module_index_3 cons_type_2_1 new_type_defs_6 icl_type_defs_7 type_heaps_10 dcl_modules_2_2, dcl_modules_2_4 = select _x_2_3::_Tuple5 4, type_heaps_2_5 = select _x_2_3::_Tuple5 3, icl_type_defs_2_6 = select _x_2_3::_Tuple5 2, new_type_defs_2_7 = select _x_2_3::_Tuple5 1 in <{analtypes._c;178;19_639}> (select _x_2_3::_Tuple5 0) _vArray_1 constructor_index_5 dcl_modules_2_4 gi_module_4 new_type_defs_2_7 icl_type_defs_2_6 new_cons_defs_8 _vArray_0 icl_cons_defs_9 type_heaps_2_5 error_12) (False -> let _x_2_0 = select (select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_8 gi_module_4) constructor_index_5)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_450 _vArray_2 main_dcl_module_index_3 cons_type_2_1 new_type_defs_6 icl_type_defs_7 type_heaps_10 dcl_modules_11, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, new_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;189;19_640}> (select _x_2_2::_Tuple5 0) new_cons_defs_2_7 gi_module_4 _vArray_0 constructor_index_5 _vArray_1 new_type_defs_2_6 icl_type_defs_2_5 icl_cons_defs_9 type_heaps_2_4 dcl_modules_2_3 error_12) 
<{analtypes._c;189;19_640}> !_x_0 new_cons_defs_1 gi_module_2::I _vArray_3 constructor_index_4::I _vArray_5 new_type_defs_6 icl_type_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select _vArray_5::<{_SystemArray.Array;}> 3 (select _vArray_3::<{_SystemArray.Array;}> 3 new_cons_defs_1 gi_module_2) constructor_index_4, e0_2_1 = select _x_2_0::_Tuple2 0 in _Tuple7 new_type_defs_6 icl_type_defs_7 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _vArray_3::<{_SystemArray.Array;}> 3 (select _x_2_0::_Tuple2 1) gi_module_2) constructor_index_4 (update e0_2_1::syntax._ConsDef [1:update (select e0_2_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_1 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) 
<{analtypes._c;178;19_639}> !_x_0 _vArray_1 constructor_index_2::I dcl_modules_3 gi_module_4::I new_type_defs_5 icl_type_defs_6 new_cons_defs_7 _vArray_8 icl_cons_defs_9 type_heaps_10 error_11 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select (select (analtypes.select_257 dcl_modules_3 gi_module_4)::syntax._DclModule 7)::syntax._CommonDefs 1, _x_2_1 = analtypes.usize_253 (select _x_2_0::_Tuple2 0), g_s2_2_2::I = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1, _x_2_3 = select _vArray_1::<{_SystemArray.Array;}> 6 (<{analtypes.cu;181;63_396}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) constructor_index_2, e0_2_4 = select _x_2_3::_Tuple2 0 in _Tuple7 new_type_defs_5 icl_type_defs_6 (select _vArray_8::<{_SystemArray.Array;}> 5 new_cons_defs_7 gi_module_4 (select _vArray_1::<{_SystemArray.Array;}> 5 (select _x_2_3::_Tuple2 1) constructor_index_2 (update e0_2_4::syntax._ConsDef [1:update (select e0_2_4::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]]))) icl_cons_defs_9 type_heaps_10 (select _x_2_0::_Tuple2 1) error_11) (general.No -> _Tuple7 new_type_defs_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_9 type_heaps_10 dcl_modules_3 error_11) 
analtypes.expand_new_type_rhs_448 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 !main_dcl_module_index_4::I !gi_module_5::I !constructor_index_6::I new_type_defs_7 icl_type_defs_8 new_cons_defs_9 icl_cons_defs_10 type_heaps_11 dcl_modules_12 error_13 = case (StdBool.not (<{StdInt.==_16}> gi_module_5 main_dcl_module_index_4)) (True -> analtypes.expand_new_type_rhs_not_in_icl_module_449 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_4 gi_module_5 constructor_index_6 new_type_defs_7 icl_type_defs_8 new_cons_defs_9 icl_cons_defs_10 type_heaps_11 dcl_modules_12 error_13) (False -> let _x_2_0 = select (select _vArray_3::<{_SystemArray.Array;}> 3 icl_cons_defs_10 constructor_index_6)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_450 _vArray_2 main_dcl_module_index_4 cons_type_2_1 new_type_defs_7 icl_type_defs_8 type_heaps_11 dcl_modules_12, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, icl_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;164;19_641}> (select _x_2_2::_Tuple5 0) constructor_index_6 dcl_modules_2_3 main_dcl_module_index_4 icl_cons_defs_2_7 _vArray_3 _vArray_0 _vArray_1 _vArray_2 gi_module_5 new_type_defs_2_6 icl_type_defs_2_5 new_cons_defs_9 type_heaps_2_4 error_13) 
<{analtypes._c;164;19_641}> !_x_0 constructor_index_1::I dcl_modules_2 main_dcl_module_index_3::I icl_cons_defs_4 _vArray_5 _vArray_6 _vArray_7 _vArray_8 gi_module_9::I new_type_defs_10 icl_type_defs_11 new_cons_defs_12 type_heaps_13 error_14 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> constructor_index_1 (analtypes.size_250 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 1))) (True -> let _x_3_0 = select _vArray_5::<{_SystemArray.Array;}> 6 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in analtypes.expand_new_type_rhs_not_in_icl_module_449 _vArray_6 _vArray_7 _vArray_8 main_dcl_module_index_3 gi_module_9 constructor_index_1 new_type_defs_10 icl_type_defs_11 new_cons_defs_12 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_13 dcl_modules_2 error_14) (False -> let _x_3_0 = select _vArray_5::<{_SystemArray.Array;}> 6 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in _Tuple7 new_type_defs_10 icl_type_defs_11 new_cons_defs_12 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_13 dcl_modules_2 error_14) ) (general.No -> _Tuple7 new_type_defs_10 icl_type_defs_11 new_cons_defs_12 icl_cons_defs_4 type_heaps_13 dcl_modules_2 error_14) 
analtypes.expand_synonym_type_not_in_icl_module_445 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 main_dcl_module_index_4::I main_dcl_module_index_5 !gi_6 !_x_7 = case gi_6 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_7 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0)) 0) (True -> let _x_4_0 = analtypes.select_241 (select (select (analtypes.select_257 dcl_modules_2_5 gi_module_1_0)::syntax._DclModule 7)::syntax._CommonDefs 0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, dcl_modules_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;126;19_643}> (select td_4_1::syntax._TypeDef 5) _vArray_0 main_dcl_module_index_4 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_4_2 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_1 _vArray_2 _vArray_3) (False -> let _x_4_0 = analtypes.select_241 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, new_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;143;19_645}> (select td_4_1::syntax._TypeDef 5) _vArray_0 main_dcl_module_index_4 td_attribute_4_3 new_type_defs_4_2 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_2_5 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_1 _vArray_2 _vArray_3) ) ) 
<{analtypes._c;143;19_645}> !_x_0 _vArray_1 main_dcl_module_index_2::I td_attribute_3 new_type_defs_4 icl_type_defs_5 type_heaps_6 dcl_modules_7 gi_module_8::I gi_index_9::I td_10 new_cons_defs_11 icl_cons_defs_12 error_13 _vArray_14 _vArray_15 _vArray_16 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_446 _vArray_1 main_dcl_module_index_2 type_1_0 td_attribute_3 (_Tuple4 new_type_defs_4 icl_type_defs_5 type_heaps_6 dcl_modules_7), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;147;28_644}> (select _x_2_0::_Tuple5 0) new_type_defs_2_4 gi_module_8 gi_index_9 td_10 icl_type_defs_2_3 new_cons_defs_11 icl_cons_defs_12 type_heaps_2_2 dcl_modules_2_1 error_13) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_448 _vArray_14 _vArray_15 _vArray_1 _vArray_16 main_dcl_module_index_2 gi_module_8 ds_index_2_2 new_type_defs_4 icl_type_defs_5 new_cons_defs_11 icl_cons_defs_12 type_heaps_6 dcl_modules_7 error_13) ) (_ -> _Tuple7 new_type_defs_4 icl_type_defs_5 new_cons_defs_11 icl_cons_defs_12 type_heaps_6 dcl_modules_7 error_13)
<{analtypes._c;147;28_644}> !_x_0 new_type_defs_1 gi_module_2::I gi_index_3::I td_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10 = case _x_0 (general.Yes type_1_0 -> _Tuple7 (analtypes.update_243 (_SystemArray.select_75 new_type_defs_1 gi_module_2) gi_index_3 (update td_4::syntax._TypeDef [5:syntax.SynType type_1_0])) icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) (general.No -> _Tuple7 new_type_defs_1 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) 
<{analtypes._c;126;19_643}> !_x_0 _vArray_1 main_dcl_module_index_2::I td_attribute_3 new_type_defs_4 icl_type_defs_5 type_heaps_6 dcl_modules_7 gi_module_8::I gi_index_9::I td_10 new_cons_defs_11 icl_cons_defs_12 error_13 _vArray_14 _vArray_15 _vArray_16 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_446 _vArray_1 main_dcl_module_index_2 type_1_0 td_attribute_3 (_Tuple4 new_type_defs_4 icl_type_defs_5 type_heaps_6 dcl_modules_7), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;130;28_642}> (select _x_2_0::_Tuple5 0) dcl_modules_2_1 gi_module_8 new_type_defs_2_4 gi_index_9 td_10 icl_type_defs_2_3 new_cons_defs_11 icl_cons_defs_12 type_heaps_2_2 error_13) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_448 _vArray_14 _vArray_15 _vArray_1 _vArray_16 main_dcl_module_index_2 gi_module_8 ds_index_2_2 new_type_defs_4 icl_type_defs_5 new_cons_defs_11 icl_cons_defs_12 type_heaps_6 dcl_modules_7 error_13) ) (_ -> _Tuple7 new_type_defs_4 icl_type_defs_5 new_cons_defs_11 icl_cons_defs_12 type_heaps_6 dcl_modules_7 error_13)
<{analtypes._c;130;28_642}> !_x_0 dcl_modules_1 gi_module_2::I new_type_defs_3 gi_index_4::I td_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 error_10 = case _x_0 (general.Yes type_1_0 -> let _x_2_0::I = select (select (analtypes.select_257 dcl_modules_1 gi_module_2)::syntax._DclModule 7)::syntax._CommonDefs 0, _x_2_1 = analtypes.usize_245 (select _x_2_0::_Tuple2 0), g_s2_2_2 = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1 in _Tuple7 (_SystemArray.update_77 new_type_defs_3 gi_module_2 (analtypes.update_243 (<{analtypes.cu;133;71_435}> (analtypes._createArray_238 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) gi_index_4 (update td_5::syntax._TypeDef [5:syntax.SynType type_1_0]))) icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 (select _x_2_0::_Tuple2 1) error_10) (general.No -> _Tuple7 new_type_defs_3 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_1 error_10) 
analtypes.expand_synonym_type_444 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 main_dcl_module_index_4::I !main_dcl_module_index_5::I !gi_6 !_x_7 = case gi_6 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_7 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (StdBool.not (<{StdInt.==_16}> gi_module_1_0 main_dcl_module_index_5)) (True -> analtypes.expand_synonym_type_not_in_icl_module_445 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 main_dcl_module_index_5 gi_6 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6)) (False -> let _x_4_0 = select _vArray_0::<{_SystemArray.Array;}> 6 icl_type_defs_2_1 gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, icl_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;106;19_647}> (select td_4_1::syntax._TypeDef 5) _vArray_0 main_dcl_module_index_4 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_4_2 type_heaps_2_4 dcl_modules_2_5 gi_index_1_1 main_dcl_module_index_5 _vArray_1 _vArray_2 _vArray_3 gi_6 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 gi_module_1_0) ) ) 
<{analtypes._c;106;19_647}> !_x_0 _vArray_1 main_dcl_module_index_2::I td_attribute_3 new_type_defs_4 icl_type_defs_5 type_heaps_6 dcl_modules_7 gi_index_8::I main_dcl_module_index_9::I _vArray_10 _vArray_11 _vArray_12 gi_13 td_14 new_cons_defs_15 icl_cons_defs_16 error_17 gi_module_18::I = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_446 _vArray_1 main_dcl_module_index_2 type_1_0 td_attribute_3 (_Tuple4 new_type_defs_4 icl_type_defs_5 type_heaps_6 dcl_modules_7), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;110;28_646}> (select _x_2_0::_Tuple5 0) gi_index_8 dcl_modules_2_1 main_dcl_module_index_9 _vArray_1 _vArray_10 _vArray_11 _vArray_12 main_dcl_module_index_2 gi_13 new_type_defs_2_4 icl_type_defs_2_3 td_14 new_cons_defs_15 icl_cons_defs_16 type_heaps_2_2 error_17) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_448 _vArray_10 _vArray_11 _vArray_1 _vArray_12 main_dcl_module_index_2 gi_module_18 ds_index_2_2 new_type_defs_4 icl_type_defs_5 new_cons_defs_15 icl_cons_defs_16 type_heaps_6 dcl_modules_7 error_17) ) (_ -> _Tuple7 new_type_defs_4 icl_type_defs_5 new_cons_defs_15 icl_cons_defs_16 type_heaps_6 dcl_modules_7 error_17)
<{analtypes._c;110;28_646}> !_x_0 gi_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 _vArray_5 _vArray_6 _vArray_7 main_dcl_module_index_8::I gi_9 new_type_defs_10 icl_type_defs_11 td_12 new_cons_defs_13 icl_cons_defs_14 type_heaps_15 error_16 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> gi_index_1 (analtypes.size_242 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 0))) (True -> analtypes.expand_synonym_type_not_in_icl_module_445 _vArray_4 _vArray_5 _vArray_6 _vArray_7 main_dcl_module_index_8 main_dcl_module_index_3 gi_9 (_Tuple7 new_type_defs_10 (select _vArray_4::<{_SystemArray.Array;}> 5 icl_type_defs_11 gi_index_1 (update td_12::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_13 icl_cons_defs_14 type_heaps_15 dcl_modules_2 error_16)) (False -> _Tuple7 new_type_defs_10 (select _vArray_4::<{_SystemArray.Array;}> 5 icl_type_defs_11 gi_index_1 (update td_12::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_13 icl_cons_defs_14 type_heaps_15 dcl_modules_2 error_16) ) (general.No -> _Tuple7 new_type_defs_10 icl_type_defs_11 new_cons_defs_13 icl_cons_defs_14 type_heaps_15 dcl_modules_2 error_16) 
analtypes.fold_st_443 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 main_dcl_module_index_4::I main_dcl_module_index_5::I !_x_6 !st_7 = case _x_6 (_predefined._Nil -> st_7) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_443 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 main_dcl_module_index_5 x_1_1 (analtypes.expand_synonym_type_444 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 main_dcl_module_index_5 a_1_0 st_7)) 
analtypes.expand_synonym_types_of_group_442 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 main_dcl_module_index_4::I !group_members_5 !_x_6 = case _x_6 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> analtypes.fold_st_443 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 main_dcl_module_index_4 group_members_5 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) 
analtypes.fold_st_441 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 main_dcl_module_index_4::I !_x_5 !st_6 = case _x_5 (_predefined._Nil -> st_6) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_441 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 x_1_1 (analtypes.expand_synonym_types_of_group_442 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 a_1_0 st_6)) 
analtypes.expand_synonym_types_of_groups_440 !_vArray_0 !_vArray_1 !_vArray_2 !_vArray_3 main_dcl_module_index_4::I pi_groups_5 !_x_6 = case _x_6 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> case (select error_1_6::checksupport._ErrorAdmin 2) (True -> analtypes.fold_st_441 _vArray_0 _vArray_1 _vArray_2 _vArray_3 main_dcl_module_index_4 pi_groups_5 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) (False -> _Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6) ) 
analtypes.i_fold_st_451 main_dcl_module_index_0::I index_of_first_not_exported_type_or_dictionary_1::I n_exported_icl_types_2::I !fr_3::I !to_4::I !st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_451 main_dcl_module_index_0 index_of_first_not_exported_type_or_dictionary_1 n_exported_icl_types_2 (<{StdInt.+_6}> fr_3 StdInt.one_11) to_4 (analtypes.partionate_type_defs_36 main_dcl_module_index_0 index_of_first_not_exported_type_or_dictionary_1 n_exported_icl_types_2 fr_3 st_5)) 
analtypes.try_to_expand_synonym_type_for_TA_459 !main_dcl_module_index_0::I !glob_object_1::I !glob_module_2::I types_3 type_4 attribute_5 new_type_defs_6 icl_type_defs_7 type_heaps_8 dcl_modules_9 = case (<{StdInt.==_16}> glob_module_2 main_dcl_module_index_0) (True -> let _x_2_0 = analtypes.uselect_244 icl_type_defs_7 glob_object_1, _x_2_1 = select _x_2_0::_Tuple2 0 in analtypes.try_to_expand_46 type_4 types_3 (select _x_2_1::syntax._TypeDef 5) (select _x_2_1::syntax._TypeDef 6) (select _x_2_1::syntax._TypeDef 3) attribute_5 new_type_defs_6 (select _x_2_0::_Tuple2 1) type_heaps_8 dcl_modules_9) (False -> case (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_6 glob_module_2)) 0) (True -> let _x_3_0 = analtypes.select_241 (select (select (analtypes.select_257 dcl_modules_9 glob_module_2)::syntax._DclModule 7)::syntax._CommonDefs 0) glob_object_1, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_4 types_3 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_5 new_type_defs_6 icl_type_defs_7 type_heaps_8 (select _x_3_0::_Tuple2 1)) (False -> let _x_3_0 = analtypes.select_241 (_SystemArray.select_75 new_type_defs_6 glob_module_2) glob_object_1, _x_3_1 = select _x_3_0::_Tuple2 0 in analtypes.try_to_expand_46 type_4 types_3 (select _x_3_1::syntax._TypeDef 5) (select _x_3_1::syntax._TypeDef 6) (select _x_3_1::syntax._TypeDef 3) attribute_5 (select _x_3_0::_Tuple2 1) icl_type_defs_7 type_heaps_8 dcl_modules_9) ) 
analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_0::I !type_1 attribute_2 !_x_3 = case type_1 (syntax._AType at_attribute_1_0 at_type_1_1 -> case at_type_1_1 (syntax.TA _x_2_0 types_2_1 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_3 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_459 main_dcl_module_index_0 glob_object_4_0 glob_module_4_1 types_2_1 type_1 attribute_2 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) (syntax.TAS _x_2_0 types_2_1 _x_2_2 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 _x_3_2 type_prop_3_3 -> case _x_3_2 (syntax._Global glob_object_4_0 glob_module_4_1 -> case _x_3 (_Tuple4 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3 -> analtypes.try_to_expand_synonym_type_for_TA_459 main_dcl_module_index_0 glob_object_4_0 glob_module_4_1 types_2_1 type_1 attribute_2 new_type_defs_5_0 icl_type_defs_5_1 type_heaps_5_2 dcl_modules_5_3) ) ) ) ) (_ -> case _x_3 (_Tuple4 new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3 -> _Tuple5 general.No new_type_defs_1_0 icl_type_defs_1_1 type_heaps_1_2 dcl_modules_1_3) )
analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_0::I !_x_1 new_type_defs_2 icl_type_defs_3 type_heaps_4 dcl_modules_5 = case _x_1 (syntax._SymbolType st_vars_1_0 _x_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> case _x_1_1 (_predefined._Cons type_2_0 _x_2_1 -> case type_2_0 (syntax._AType at_attribute_3_0 at_type_3_1 -> case _x_2_1 (_predefined._Nil -> analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_0 type_2_0 at_attribute_3_0 (_Tuple4 new_type_defs_2 icl_type_defs_3 type_heaps_4 dcl_modules_5)) ) ) ) 
analtypes.expand_new_type_rhs_not_in_icl_module_461 !_vArray_0 !_vArray_1 main_dcl_module_index_2::I !gi_module_3::I !constructor_index_4::I new_type_defs_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11 = case (<{StdInt.==_16}> (select _vArray_1::<{_SystemArray.Array;}> 4 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_7 gi_module_3)) 0) (True -> let _x_2_0 = select (analtypes.select_249 (select (select (analtypes.select_257 dcl_modules_10 gi_module_3)::syntax._DclModule 7)::syntax._CommonDefs 1) constructor_index_4)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, dcl_modules_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_2 cons_type_2_1 new_type_defs_5 icl_type_defs_6 type_heaps_9 dcl_modules_2_2, dcl_modules_2_4 = select _x_2_3::_Tuple5 4, type_heaps_2_5 = select _x_2_3::_Tuple5 3, icl_type_defs_2_6 = select _x_2_3::_Tuple5 2, new_type_defs_2_7 = select _x_2_3::_Tuple5 1 in <{analtypes._c;178;19_648}> (select _x_2_3::_Tuple5 0) _vArray_1 constructor_index_4 dcl_modules_2_4 gi_module_3 new_type_defs_2_7 icl_type_defs_2_6 new_cons_defs_7 _vArray_0 icl_cons_defs_8 type_heaps_2_5 error_11) (False -> let _x_2_0 = select (select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 new_cons_defs_7 gi_module_3) constructor_index_4)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_2 cons_type_2_1 new_type_defs_5 icl_type_defs_6 type_heaps_9 dcl_modules_10, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, new_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;189;19_649}> (select _x_2_2::_Tuple5 0) new_cons_defs_2_7 gi_module_3 _vArray_0 constructor_index_4 _vArray_1 new_type_defs_2_6 icl_type_defs_2_5 icl_cons_defs_8 type_heaps_2_4 dcl_modules_2_3 error_11) 
<{analtypes._c;189;19_649}> !_x_0 new_cons_defs_1 gi_module_2::I _vArray_3 constructor_index_4::I _vArray_5 new_type_defs_6 icl_type_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select _vArray_5::<{_SystemArray.Array;}> 3 (select _vArray_3::<{_SystemArray.Array;}> 3 new_cons_defs_1 gi_module_2) constructor_index_4, e0_2_1 = select _x_2_0::_Tuple2 0 in _Tuple7 new_type_defs_6 icl_type_defs_7 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _vArray_3::<{_SystemArray.Array;}> 3 (select _x_2_0::_Tuple2 1) gi_module_2) constructor_index_4 (update e0_2_1::syntax._ConsDef [1:update (select e0_2_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_1 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) 
<{analtypes._c;178;19_648}> !_x_0 _vArray_1 constructor_index_2::I dcl_modules_3 gi_module_4::I new_type_defs_5 icl_type_defs_6 new_cons_defs_7 _vArray_8 icl_cons_defs_9 type_heaps_10 error_11 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select (select (analtypes.select_257 dcl_modules_3 gi_module_4)::syntax._DclModule 7)::syntax._CommonDefs 1, _x_2_1 = analtypes.usize_253 (select _x_2_0::_Tuple2 0), g_s2_2_2::I = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1, _x_2_3 = select _vArray_1::<{_SystemArray.Array;}> 6 (<{analtypes.cu;181;63_396}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) constructor_index_2, e0_2_4 = select _x_2_3::_Tuple2 0 in _Tuple7 new_type_defs_5 icl_type_defs_6 (select _vArray_8::<{_SystemArray.Array;}> 5 new_cons_defs_7 gi_module_4 (select _vArray_1::<{_SystemArray.Array;}> 5 (select _x_2_3::_Tuple2 1) constructor_index_2 (update e0_2_4::syntax._ConsDef [1:update (select e0_2_4::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]]))) icl_cons_defs_9 type_heaps_10 (select _x_2_0::_Tuple2 1) error_11) (general.No -> _Tuple7 new_type_defs_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_9 type_heaps_10 dcl_modules_3 error_11) 
analtypes.expand_new_type_rhs_460 !_vArray_0 !_vArray_1 !_vArray_2 !main_dcl_module_index_3::I !gi_module_4::I !constructor_index_5::I new_type_defs_6 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_9 type_heaps_10 dcl_modules_11 error_12 = case (StdBool.not (<{StdInt.==_16}> gi_module_4 main_dcl_module_index_3)) (True -> analtypes.expand_new_type_rhs_not_in_icl_module_461 _vArray_0 _vArray_1 main_dcl_module_index_3 gi_module_4 constructor_index_5 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_9 type_heaps_10 dcl_modules_11 error_12) (False -> let _x_2_0 = select (select _vArray_2::<{_SystemArray.Array;}> 3 icl_cons_defs_9 constructor_index_5)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_3 cons_type_2_1 new_type_defs_6 icl_type_defs_7 type_heaps_10 dcl_modules_11, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, icl_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;164;19_650}> (select _x_2_2::_Tuple5 0) constructor_index_5 dcl_modules_2_3 main_dcl_module_index_3 icl_cons_defs_2_7 _vArray_2 _vArray_0 _vArray_1 gi_module_4 new_type_defs_2_6 icl_type_defs_2_5 new_cons_defs_8 type_heaps_2_4 error_12) 
<{analtypes._c;164;19_650}> !_x_0 constructor_index_1::I dcl_modules_2 main_dcl_module_index_3::I icl_cons_defs_4 _vArray_5 _vArray_6 _vArray_7 gi_module_8::I new_type_defs_9 icl_type_defs_10 new_cons_defs_11 type_heaps_12 error_13 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> constructor_index_1 (analtypes.size_250 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 1))) (True -> let _x_3_0 = select _vArray_5::<{_SystemArray.Array;}> 6 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in analtypes.expand_new_type_rhs_not_in_icl_module_461 _vArray_6 _vArray_7 main_dcl_module_index_3 gi_module_8 constructor_index_1 new_type_defs_9 icl_type_defs_10 new_cons_defs_11 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_12 dcl_modules_2 error_13) (False -> let _x_3_0 = select _vArray_5::<{_SystemArray.Array;}> 6 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in _Tuple7 new_type_defs_9 icl_type_defs_10 new_cons_defs_11 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_12 dcl_modules_2 error_13) ) (general.No -> _Tuple7 new_type_defs_9 icl_type_defs_10 new_cons_defs_11 icl_cons_defs_4 type_heaps_12 dcl_modules_2 error_13) 
analtypes.expand_synonym_type_not_in_icl_module_457 !_vArray_0 !_vArray_1 !_vArray_2 main_dcl_module_index_3::I main_dcl_module_index_4 !gi_5 !_x_6 = case gi_5 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_6 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0)) 0) (True -> let _x_4_0 = analtypes.select_241 (select (select (analtypes.select_257 dcl_modules_2_5 gi_module_1_0)::syntax._DclModule 7)::syntax._CommonDefs 0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, dcl_modules_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;126;19_652}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_3 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_4_2 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_0 _vArray_1 _vArray_2) (False -> let _x_4_0 = analtypes.select_241 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, new_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;143;19_654}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_3 td_attribute_4_3 new_type_defs_4_2 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_2_5 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_0 _vArray_1 _vArray_2) ) ) 
<{analtypes._c;143;19_654}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_module_7::I gi_index_8::I td_9 new_cons_defs_10 icl_cons_defs_11 error_12 _vArray_13 _vArray_14 _vArray_15 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;147;28_653}> (select _x_2_0::_Tuple5 0) new_type_defs_2_4 gi_module_7 gi_index_8 td_9 icl_type_defs_2_3 new_cons_defs_10 icl_cons_defs_11 type_heaps_2_2 dcl_modules_2_1 error_12) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_460 _vArray_13 _vArray_14 _vArray_15 main_dcl_module_index_1 gi_module_7 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12)
<{analtypes._c;147;28_653}> !_x_0 new_type_defs_1 gi_module_2::I gi_index_3::I td_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10 = case _x_0 (general.Yes type_1_0 -> _Tuple7 (analtypes.update_243 (_SystemArray.select_75 new_type_defs_1 gi_module_2) gi_index_3 (update td_4::syntax._TypeDef [5:syntax.SynType type_1_0])) icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) (general.No -> _Tuple7 new_type_defs_1 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) 
<{analtypes._c;126;19_652}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_module_7::I gi_index_8::I td_9 new_cons_defs_10 icl_cons_defs_11 error_12 _vArray_13 _vArray_14 _vArray_15 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;130;28_651}> (select _x_2_0::_Tuple5 0) dcl_modules_2_1 gi_module_7 new_type_defs_2_4 gi_index_8 td_9 icl_type_defs_2_3 new_cons_defs_10 icl_cons_defs_11 type_heaps_2_2 error_12) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_460 _vArray_13 _vArray_14 _vArray_15 main_dcl_module_index_1 gi_module_7 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12)
<{analtypes._c;130;28_651}> !_x_0 dcl_modules_1 gi_module_2::I new_type_defs_3 gi_index_4::I td_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 error_10 = case _x_0 (general.Yes type_1_0 -> let _x_2_0::I = select (select (analtypes.select_257 dcl_modules_1 gi_module_2)::syntax._DclModule 7)::syntax._CommonDefs 0, _x_2_1 = analtypes.usize_245 (select _x_2_0::_Tuple2 0), g_s2_2_2 = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1 in _Tuple7 (_SystemArray.update_77 new_type_defs_3 gi_module_2 (analtypes.update_243 (<{analtypes.cu;133;71_435}> (analtypes._createArray_238 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) gi_index_4 (update td_5::syntax._TypeDef [5:syntax.SynType type_1_0]))) icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 (select _x_2_0::_Tuple2 1) error_10) (general.No -> _Tuple7 new_type_defs_3 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_1 error_10) 
analtypes.expand_synonym_type_456 !_vArray_0 !_vArray_1 !_vArray_2 main_dcl_module_index_3::I !main_dcl_module_index_4::I !gi_5 !_x_6 = case gi_5 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_6 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (StdBool.not (<{StdInt.==_16}> gi_module_1_0 main_dcl_module_index_4)) (True -> analtypes.expand_synonym_type_not_in_icl_module_457 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 main_dcl_module_index_4 gi_5 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6)) (False -> let _x_4_0 = analtypes.uselect_244 icl_type_defs_2_1 gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, icl_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;106;19_656}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_3 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_4_2 type_heaps_2_4 dcl_modules_2_5 gi_index_1_1 main_dcl_module_index_4 _vArray_0 _vArray_1 _vArray_2 gi_5 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 gi_module_1_0) ) ) 
<{analtypes._c;106;19_656}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_index_7::I main_dcl_module_index_8::I _vArray_9 _vArray_10 _vArray_11 gi_12 td_13 new_cons_defs_14 icl_cons_defs_15 error_16 gi_module_17::I = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;110;28_655}> (select _x_2_0::_Tuple5 0) gi_index_7 dcl_modules_2_1 main_dcl_module_index_8 _vArray_9 _vArray_10 _vArray_11 main_dcl_module_index_1 gi_12 new_type_defs_2_4 icl_type_defs_2_3 td_13 new_cons_defs_14 icl_cons_defs_15 type_heaps_2_2 error_16) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_460 _vArray_9 _vArray_10 _vArray_11 main_dcl_module_index_1 gi_module_17 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_14 icl_cons_defs_15 type_heaps_5 dcl_modules_6 error_16) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_14 icl_cons_defs_15 type_heaps_5 dcl_modules_6 error_16)
<{analtypes._c;110;28_655}> !_x_0 gi_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 _vArray_5 _vArray_6 main_dcl_module_index_7::I gi_8 new_type_defs_9 icl_type_defs_10 td_11 new_cons_defs_12 icl_cons_defs_13 type_heaps_14 error_15 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> gi_index_1 (analtypes.size_242 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 0))) (True -> analtypes.expand_synonym_type_not_in_icl_module_457 _vArray_4 _vArray_5 _vArray_6 main_dcl_module_index_7 main_dcl_module_index_3 gi_8 (_Tuple7 new_type_defs_9 (analtypes.update_243 icl_type_defs_10 gi_index_1 (update td_11::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_12 icl_cons_defs_13 type_heaps_14 dcl_modules_2 error_15)) (False -> _Tuple7 new_type_defs_9 (analtypes.update_243 icl_type_defs_10 gi_index_1 (update td_11::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_12 icl_cons_defs_13 type_heaps_14 dcl_modules_2 error_15) ) (general.No -> _Tuple7 new_type_defs_9 icl_type_defs_10 new_cons_defs_12 icl_cons_defs_13 type_heaps_14 dcl_modules_2 error_15) 
analtypes.fold_st_455 !_vArray_0 !_vArray_1 !_vArray_2 main_dcl_module_index_3::I main_dcl_module_index_4::I !_x_5 !st_6 = case _x_5 (_predefined._Nil -> st_6) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_455 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 main_dcl_module_index_4 x_1_1 (analtypes.expand_synonym_type_456 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 main_dcl_module_index_4 a_1_0 st_6)) 
analtypes.expand_synonym_types_of_group_454 !_vArray_0 !_vArray_1 !_vArray_2 main_dcl_module_index_3::I !group_members_4 !_x_5 = case _x_5 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> analtypes.fold_st_455 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 main_dcl_module_index_3 group_members_4 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) 
analtypes.fold_st_453 !_vArray_0 !_vArray_1 !_vArray_2 main_dcl_module_index_3::I !_x_4 !st_5 = case _x_4 (_predefined._Nil -> st_5) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_453 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 x_1_1 (analtypes.expand_synonym_types_of_group_454 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 a_1_0 st_5)) 
analtypes.expand_synonym_types_of_groups_452 !_vArray_0 !_vArray_1 !_vArray_2 main_dcl_module_index_3::I pi_groups_4 !_x_5 = case _x_5 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> case (select error_1_6::checksupport._ErrorAdmin 2) (True -> analtypes.fold_st_453 _vArray_0 _vArray_1 _vArray_2 main_dcl_module_index_3 pi_groups_4 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) (False -> _Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6) ) 
analtypes.expand_new_type_rhs_not_in_icl_module_470 !_vArray_0 main_dcl_module_index_1::I !gi_module_2::I !constructor_index_3::I new_type_defs_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10 = case (<{StdInt.==_16}> (select _vArray_0::<{_SystemArray.Array;}> 4 (_SystemArray.select_43 new_cons_defs_6 gi_module_2)) 0) (True -> let _x_2_0 = select (analtypes.select_249 (select (select (analtypes.select_257 dcl_modules_9 gi_module_2)::syntax._DclModule 7)::syntax._CommonDefs 1) constructor_index_3)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, dcl_modules_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_1 cons_type_2_1 new_type_defs_4 icl_type_defs_5 type_heaps_8 dcl_modules_2_2, dcl_modules_2_4 = select _x_2_3::_Tuple5 4, type_heaps_2_5 = select _x_2_3::_Tuple5 3, icl_type_defs_2_6 = select _x_2_3::_Tuple5 2, new_type_defs_2_7 = select _x_2_3::_Tuple5 1 in <{analtypes._c;178;19_657}> (select _x_2_3::_Tuple5 0) _vArray_0 constructor_index_3 dcl_modules_2_4 gi_module_2 new_type_defs_2_7 icl_type_defs_2_6 new_cons_defs_6 icl_cons_defs_7 type_heaps_2_5 error_10) (False -> let _x_2_0 = select (select _vArray_0::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 new_cons_defs_6 gi_module_2) constructor_index_3)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_1 cons_type_2_1 new_type_defs_4 icl_type_defs_5 type_heaps_8 dcl_modules_9, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, new_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;189;19_658}> (select _x_2_2::_Tuple5 0) new_cons_defs_2_7 gi_module_2 constructor_index_3 _vArray_0 new_type_defs_2_6 icl_type_defs_2_5 icl_cons_defs_7 type_heaps_2_4 dcl_modules_2_3 error_10) 
<{analtypes._c;189;19_658}> !_x_0 new_cons_defs_1 gi_module_2::I constructor_index_3::I _vArray_4 new_type_defs_5 icl_type_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select _vArray_4::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 new_cons_defs_1 gi_module_2) constructor_index_3, e0_2_1 = select _x_2_0::_Tuple2 0 in _Tuple7 new_type_defs_5 icl_type_defs_6 (select _vArray_4::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_2_0::_Tuple2 1) gi_module_2) constructor_index_3 (update e0_2_1::syntax._ConsDef [1:update (select e0_2_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) (general.No -> _Tuple7 new_type_defs_5 icl_type_defs_6 new_cons_defs_1 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) 
<{analtypes._c;178;19_657}> !_x_0 _vArray_1 constructor_index_2::I dcl_modules_3 gi_module_4::I new_type_defs_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 error_10 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select (select (analtypes.select_257 dcl_modules_3 gi_module_4)::syntax._DclModule 7)::syntax._CommonDefs 1, _x_2_1 = analtypes.usize_253 (select _x_2_0::_Tuple2 0), g_s2_2_2::I = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1, _x_2_3 = select _vArray_1::<{_SystemArray.Array;}> 6 (<{analtypes.cu;181;63_396}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) constructor_index_2, e0_2_4 = select _x_2_3::_Tuple2 0 in _Tuple7 new_type_defs_5 icl_type_defs_6 (_SystemArray.update_45 new_cons_defs_7 gi_module_4 (select _vArray_1::<{_SystemArray.Array;}> 5 (select _x_2_3::_Tuple2 1) constructor_index_2 (update e0_2_4::syntax._ConsDef [1:update (select e0_2_4::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]]))) icl_cons_defs_8 type_heaps_9 (select _x_2_0::_Tuple2 1) error_10) (general.No -> _Tuple7 new_type_defs_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_3 error_10) 
analtypes.expand_new_type_rhs_469 !_vArray_0 !_vArray_1 !main_dcl_module_index_2::I !gi_module_3::I !constructor_index_4::I new_type_defs_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11 = case (StdBool.not (<{StdInt.==_16}> gi_module_3 main_dcl_module_index_2)) (True -> analtypes.expand_new_type_rhs_not_in_icl_module_470 _vArray_0 main_dcl_module_index_2 gi_module_3 constructor_index_4 new_type_defs_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_10 error_11) (False -> let _x_2_0 = select (select _vArray_1::<{_SystemArray.Array;}> 3 icl_cons_defs_8 constructor_index_4)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_2 cons_type_2_1 new_type_defs_5 icl_type_defs_6 type_heaps_9 dcl_modules_10, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, icl_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;164;19_659}> (select _x_2_2::_Tuple5 0) constructor_index_4 dcl_modules_2_3 main_dcl_module_index_2 icl_cons_defs_2_7 _vArray_1 _vArray_0 gi_module_3 new_type_defs_2_6 icl_type_defs_2_5 new_cons_defs_7 type_heaps_2_4 error_11) 
<{analtypes._c;164;19_659}> !_x_0 constructor_index_1::I dcl_modules_2 main_dcl_module_index_3::I icl_cons_defs_4 _vArray_5 _vArray_6 gi_module_7::I new_type_defs_8 icl_type_defs_9 new_cons_defs_10 type_heaps_11 error_12 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> constructor_index_1 (analtypes.size_250 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 1))) (True -> let _x_3_0 = select _vArray_5::<{_SystemArray.Array;}> 6 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in analtypes.expand_new_type_rhs_not_in_icl_module_470 _vArray_6 main_dcl_module_index_3 gi_module_7 constructor_index_1 new_type_defs_8 icl_type_defs_9 new_cons_defs_10 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_11 dcl_modules_2 error_12) (False -> let _x_3_0 = select _vArray_5::<{_SystemArray.Array;}> 6 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in _Tuple7 new_type_defs_8 icl_type_defs_9 new_cons_defs_10 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_11 dcl_modules_2 error_12) ) (general.No -> _Tuple7 new_type_defs_8 icl_type_defs_9 new_cons_defs_10 icl_cons_defs_4 type_heaps_11 dcl_modules_2 error_12) 
analtypes.expand_synonym_type_not_in_icl_module_468 !_vArray_0 !_vArray_1 main_dcl_module_index_2::I main_dcl_module_index_3 !gi_4 !_x_5 = case gi_4 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_5 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0)) 0) (True -> let _x_4_0 = analtypes.select_241 (select (select (analtypes.select_257 dcl_modules_2_5 gi_module_1_0)::syntax._DclModule 7)::syntax._CommonDefs 0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, dcl_modules_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;126;19_661}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_2 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_4_2 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_0 _vArray_1) (False -> let _x_4_0 = analtypes.select_241 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, new_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;143;19_663}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_2 td_attribute_4_3 new_type_defs_4_2 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_2_5 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_0 _vArray_1) ) ) 
<{analtypes._c;143;19_663}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_module_7::I gi_index_8::I td_9 new_cons_defs_10 icl_cons_defs_11 error_12 _vArray_13 _vArray_14 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;147;28_662}> (select _x_2_0::_Tuple5 0) new_type_defs_2_4 gi_module_7 gi_index_8 td_9 icl_type_defs_2_3 new_cons_defs_10 icl_cons_defs_11 type_heaps_2_2 dcl_modules_2_1 error_12) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_469 _vArray_13 _vArray_14 main_dcl_module_index_1 gi_module_7 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12)
<{analtypes._c;147;28_662}> !_x_0 new_type_defs_1 gi_module_2::I gi_index_3::I td_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10 = case _x_0 (general.Yes type_1_0 -> _Tuple7 (analtypes.update_243 (_SystemArray.select_75 new_type_defs_1 gi_module_2) gi_index_3 (update td_4::syntax._TypeDef [5:syntax.SynType type_1_0])) icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) (general.No -> _Tuple7 new_type_defs_1 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) 
<{analtypes._c;126;19_661}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_module_7::I gi_index_8::I td_9 new_cons_defs_10 icl_cons_defs_11 error_12 _vArray_13 _vArray_14 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;130;28_660}> (select _x_2_0::_Tuple5 0) dcl_modules_2_1 gi_module_7 new_type_defs_2_4 gi_index_8 td_9 icl_type_defs_2_3 new_cons_defs_10 icl_cons_defs_11 type_heaps_2_2 error_12) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_469 _vArray_13 _vArray_14 main_dcl_module_index_1 gi_module_7 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12)
<{analtypes._c;130;28_660}> !_x_0 dcl_modules_1 gi_module_2::I new_type_defs_3 gi_index_4::I td_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 error_10 = case _x_0 (general.Yes type_1_0 -> let _x_2_0::I = select (select (analtypes.select_257 dcl_modules_1 gi_module_2)::syntax._DclModule 7)::syntax._CommonDefs 0, _x_2_1 = analtypes.usize_245 (select _x_2_0::_Tuple2 0), g_s2_2_2 = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1 in _Tuple7 (_SystemArray.update_77 new_type_defs_3 gi_module_2 (analtypes.update_243 (<{analtypes.cu;133;71_435}> (analtypes._createArray_238 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) gi_index_4 (update td_5::syntax._TypeDef [5:syntax.SynType type_1_0]))) icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 (select _x_2_0::_Tuple2 1) error_10) (general.No -> _Tuple7 new_type_defs_3 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_1 error_10) 
analtypes.expand_synonym_type_467 !_vArray_0 !_vArray_1 main_dcl_module_index_2::I !main_dcl_module_index_3::I !gi_4 !_x_5 = case gi_4 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_5 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (StdBool.not (<{StdInt.==_16}> gi_module_1_0 main_dcl_module_index_3)) (True -> analtypes.expand_synonym_type_not_in_icl_module_468 _vArray_0 _vArray_1 main_dcl_module_index_2 main_dcl_module_index_3 gi_4 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6)) (False -> let _x_4_0 = analtypes.uselect_244 icl_type_defs_2_1 gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, icl_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;106;19_665}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_2 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_4_2 type_heaps_2_4 dcl_modules_2_5 gi_index_1_1 main_dcl_module_index_3 _vArray_0 _vArray_1 gi_4 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 gi_module_1_0) ) ) 
<{analtypes._c;106;19_665}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_index_7::I main_dcl_module_index_8::I _vArray_9 _vArray_10 gi_11 td_12 new_cons_defs_13 icl_cons_defs_14 error_15 gi_module_16::I = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;110;28_664}> (select _x_2_0::_Tuple5 0) gi_index_7 dcl_modules_2_1 main_dcl_module_index_8 _vArray_9 _vArray_10 main_dcl_module_index_1 gi_11 new_type_defs_2_4 icl_type_defs_2_3 td_12 new_cons_defs_13 icl_cons_defs_14 type_heaps_2_2 error_15) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_469 _vArray_9 _vArray_10 main_dcl_module_index_1 gi_module_16 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_13 icl_cons_defs_14 type_heaps_5 dcl_modules_6 error_15) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_13 icl_cons_defs_14 type_heaps_5 dcl_modules_6 error_15)
<{analtypes._c;110;28_664}> !_x_0 gi_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 _vArray_5 main_dcl_module_index_6::I gi_7 new_type_defs_8 icl_type_defs_9 td_10 new_cons_defs_11 icl_cons_defs_12 type_heaps_13 error_14 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> gi_index_1 (analtypes.size_242 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 0))) (True -> analtypes.expand_synonym_type_not_in_icl_module_468 _vArray_4 _vArray_5 main_dcl_module_index_6 main_dcl_module_index_3 gi_7 (_Tuple7 new_type_defs_8 (analtypes.update_243 icl_type_defs_9 gi_index_1 (update td_10::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_11 icl_cons_defs_12 type_heaps_13 dcl_modules_2 error_14)) (False -> _Tuple7 new_type_defs_8 (analtypes.update_243 icl_type_defs_9 gi_index_1 (update td_10::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_11 icl_cons_defs_12 type_heaps_13 dcl_modules_2 error_14) ) (general.No -> _Tuple7 new_type_defs_8 icl_type_defs_9 new_cons_defs_11 icl_cons_defs_12 type_heaps_13 dcl_modules_2 error_14) 
analtypes.fold_st_466 !_vArray_0 !_vArray_1 main_dcl_module_index_2::I main_dcl_module_index_3::I !_x_4 !st_5 = case _x_4 (_predefined._Nil -> st_5) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_466 _vArray_0 _vArray_1 main_dcl_module_index_2 main_dcl_module_index_3 x_1_1 (analtypes.expand_synonym_type_467 _vArray_0 _vArray_1 main_dcl_module_index_2 main_dcl_module_index_3 a_1_0 st_5)) 
analtypes.expand_synonym_types_of_group_465 !_vArray_0 !_vArray_1 main_dcl_module_index_2::I !group_members_3 !_x_4 = case _x_4 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> analtypes.fold_st_466 _vArray_0 _vArray_1 main_dcl_module_index_2 main_dcl_module_index_2 group_members_3 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) 
analtypes.fold_st_464 !_vArray_0 !_vArray_1 main_dcl_module_index_2::I !_x_3 !st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_464 _vArray_0 _vArray_1 main_dcl_module_index_2 x_1_1 (analtypes.expand_synonym_types_of_group_465 _vArray_0 _vArray_1 main_dcl_module_index_2 a_1_0 st_4)) 
analtypes.expand_synonym_types_of_groups_463 !_vArray_0 !_vArray_1 main_dcl_module_index_2::I pi_groups_3 !_x_4 = case _x_4 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> case (select error_1_6::checksupport._ErrorAdmin 2) (True -> analtypes.fold_st_464 _vArray_0 _vArray_1 main_dcl_module_index_2 pi_groups_3 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) (False -> _Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6) ) 
<{analtypes.cu;181;63_479}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = analtypes.uselect_252 g_a_3 c_i_1 in <{analtypes.cu;181;63_479}> (analtypes.update_251 c_a_0 c_i_1 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
analtypes.expand_new_type_rhs_not_in_icl_module_478 main_dcl_module_index_0::I !gi_module_1::I !constructor_index_2::I new_type_defs_3 icl_type_defs_4 !new_cons_defs_5 icl_cons_defs_6 type_heaps_7 dcl_modules_8 error_9 = case (<{StdInt.==_16}> (analtypes.size_250 (_SystemArray.select_43 new_cons_defs_5 gi_module_1)) 0) (True -> let _x_2_0 = select (analtypes.select_249 (select (select (analtypes.select_257 dcl_modules_8 gi_module_1)::syntax._DclModule 7)::syntax._CommonDefs 1) constructor_index_2)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, dcl_modules_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_0 cons_type_2_1 new_type_defs_3 icl_type_defs_4 type_heaps_7 dcl_modules_2_2, dcl_modules_2_4 = select _x_2_3::_Tuple5 4, type_heaps_2_5 = select _x_2_3::_Tuple5 3, icl_type_defs_2_6 = select _x_2_3::_Tuple5 2, new_type_defs_2_7 = select _x_2_3::_Tuple5 1 in <{analtypes._c;178;19_666}> (select _x_2_3::_Tuple5 0) constructor_index_2 dcl_modules_2_4 gi_module_1 new_type_defs_2_7 icl_type_defs_2_6 new_cons_defs_5 icl_cons_defs_6 type_heaps_2_5 error_9) (False -> let _x_2_0 = select (analtypes.select_249 (_SystemArray.select_43 new_cons_defs_5 gi_module_1) constructor_index_2)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_0 cons_type_2_1 new_type_defs_3 icl_type_defs_4 type_heaps_7 dcl_modules_8, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, new_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;189;19_667}> (select _x_2_2::_Tuple5 0) new_cons_defs_2_7 gi_module_1 constructor_index_2 new_type_defs_2_6 icl_type_defs_2_5 icl_cons_defs_6 type_heaps_2_4 dcl_modules_2_3 error_9) 
<{analtypes._c;189;19_667}> !_x_0 new_cons_defs_1 gi_module_2::I constructor_index_3::I new_type_defs_4 icl_type_defs_5 icl_cons_defs_6 type_heaps_7 dcl_modules_8 error_9 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = analtypes.select_249 (_SystemArray.select_43 new_cons_defs_1 gi_module_2) constructor_index_3, e0_2_1 = select _x_2_0::_Tuple2 0 in _Tuple7 new_type_defs_4 icl_type_defs_5 (analtypes.update_251 (_SystemArray.select_43 (select _x_2_0::_Tuple2 1) gi_module_2) constructor_index_3 (update e0_2_1::syntax._ConsDef [1:update (select e0_2_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) icl_cons_defs_6 type_heaps_7 dcl_modules_8 error_9) (general.No -> _Tuple7 new_type_defs_4 icl_type_defs_5 new_cons_defs_1 icl_cons_defs_6 type_heaps_7 dcl_modules_8 error_9) 
<{analtypes._c;178;19_666}> !_x_0 constructor_index_1::I dcl_modules_2 gi_module_3::I new_type_defs_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 error_9 = case _x_0 (general.Yes type_1_0 -> let _x_2_0 = select (select (analtypes.select_257 dcl_modules_2 gi_module_3)::syntax._DclModule 7)::syntax._CommonDefs 1, _x_2_1 = analtypes.usize_253 (select _x_2_0::_Tuple2 0), g_s2_2_2::I = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1, _x_2_3 = analtypes.uselect_252 (<{analtypes.cu;181;63_479}> (analtypes._createArray_246 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) constructor_index_1, e0_2_4 = select _x_2_3::_Tuple2 0 in _Tuple7 new_type_defs_4 icl_type_defs_5 (_SystemArray.update_45 new_cons_defs_6 gi_module_3 (analtypes.update_251 (select _x_2_3::_Tuple2 1) constructor_index_1 (update e0_2_4::syntax._ConsDef [1:update (select e0_2_4::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]]))) icl_cons_defs_7 type_heaps_8 (select _x_2_0::_Tuple2 1) error_9) (general.No -> _Tuple7 new_type_defs_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_2 error_9) 
analtypes.expand_new_type_rhs_477 !_vArray_0 !main_dcl_module_index_1::I !gi_module_2::I !constructor_index_3::I new_type_defs_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10 = case (StdBool.not (<{StdInt.==_16}> gi_module_2 main_dcl_module_index_1)) (True -> analtypes.expand_new_type_rhs_not_in_icl_module_478 main_dcl_module_index_1 gi_module_2 constructor_index_3 new_type_defs_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) (False -> let _x_2_0 = select (select _vArray_0::<{_SystemArray.Array;}> 3 icl_cons_defs_7 constructor_index_3)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_1 cons_type_2_1 new_type_defs_4 icl_type_defs_5 type_heaps_8 dcl_modules_9, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, icl_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;164;19_668}> (select _x_2_2::_Tuple5 0) constructor_index_3 dcl_modules_2_3 main_dcl_module_index_1 icl_cons_defs_2_7 _vArray_0 gi_module_2 new_type_defs_2_6 icl_type_defs_2_5 new_cons_defs_6 type_heaps_2_4 error_10) 
<{analtypes._c;164;19_668}> !_x_0 constructor_index_1::I dcl_modules_2 main_dcl_module_index_3::I icl_cons_defs_4 _vArray_5 gi_module_6::I new_type_defs_7 icl_type_defs_8 new_cons_defs_9 type_heaps_10 error_11 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> constructor_index_1 (analtypes.size_250 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 1))) (True -> let _x_3_0 = select _vArray_5::<{_SystemArray.Array;}> 6 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in analtypes.expand_new_type_rhs_not_in_icl_module_478 main_dcl_module_index_3 gi_module_6 constructor_index_1 new_type_defs_7 icl_type_defs_8 new_cons_defs_9 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_10 dcl_modules_2 error_11) (False -> let _x_3_0 = select _vArray_5::<{_SystemArray.Array;}> 6 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in _Tuple7 new_type_defs_7 icl_type_defs_8 new_cons_defs_9 (select _vArray_5::<{_SystemArray.Array;}> 5 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_10 dcl_modules_2 error_11) ) (general.No -> _Tuple7 new_type_defs_7 icl_type_defs_8 new_cons_defs_9 icl_cons_defs_4 type_heaps_10 dcl_modules_2 error_11) 
analtypes.expand_synonym_type_not_in_icl_module_476 !_vArray_0 main_dcl_module_index_1::I main_dcl_module_index_2 !gi_3 !_x_4 = case gi_3 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_4 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0)) 0) (True -> let _x_4_0 = analtypes.select_241 (select (select (analtypes.select_257 dcl_modules_2_5 gi_module_1_0)::syntax._DclModule 7)::syntax._CommonDefs 0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, dcl_modules_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;126;19_670}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_1 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_4_2 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_0) (False -> let _x_4_0 = analtypes.select_241 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, new_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;143;19_672}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_1 td_attribute_4_3 new_type_defs_4_2 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_2_5 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 _vArray_0) ) ) 
<{analtypes._c;143;19_672}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_module_7::I gi_index_8::I td_9 new_cons_defs_10 icl_cons_defs_11 error_12 _vArray_13 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;147;28_671}> (select _x_2_0::_Tuple5 0) new_type_defs_2_4 gi_module_7 gi_index_8 td_9 icl_type_defs_2_3 new_cons_defs_10 icl_cons_defs_11 type_heaps_2_2 dcl_modules_2_1 error_12) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_477 _vArray_13 main_dcl_module_index_1 gi_module_7 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12)
<{analtypes._c;147;28_671}> !_x_0 new_type_defs_1 gi_module_2::I gi_index_3::I td_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10 = case _x_0 (general.Yes type_1_0 -> _Tuple7 (analtypes.update_243 (_SystemArray.select_75 new_type_defs_1 gi_module_2) gi_index_3 (update td_4::syntax._TypeDef [5:syntax.SynType type_1_0])) icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) (general.No -> _Tuple7 new_type_defs_1 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) 
<{analtypes._c;126;19_670}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_module_7::I gi_index_8::I td_9 new_cons_defs_10 icl_cons_defs_11 error_12 _vArray_13 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;130;28_669}> (select _x_2_0::_Tuple5 0) dcl_modules_2_1 gi_module_7 new_type_defs_2_4 gi_index_8 td_9 icl_type_defs_2_3 new_cons_defs_10 icl_cons_defs_11 type_heaps_2_2 error_12) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_477 _vArray_13 main_dcl_module_index_1 gi_module_7 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12)
<{analtypes._c;130;28_669}> !_x_0 dcl_modules_1 gi_module_2::I new_type_defs_3 gi_index_4::I td_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 error_10 = case _x_0 (general.Yes type_1_0 -> let _x_2_0::I = select (select (analtypes.select_257 dcl_modules_1 gi_module_2)::syntax._DclModule 7)::syntax._CommonDefs 0, _x_2_1 = analtypes.usize_245 (select _x_2_0::_Tuple2 0), g_s2_2_2 = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1 in _Tuple7 (_SystemArray.update_77 new_type_defs_3 gi_module_2 (analtypes.update_243 (<{analtypes.cu;133;71_435}> (analtypes._createArray_238 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) gi_index_4 (update td_5::syntax._TypeDef [5:syntax.SynType type_1_0]))) icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 (select _x_2_0::_Tuple2 1) error_10) (general.No -> _Tuple7 new_type_defs_3 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_1 error_10) 
analtypes.expand_synonym_type_475 !_vArray_0 main_dcl_module_index_1::I !main_dcl_module_index_2::I !gi_3 !_x_4 = case gi_3 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_4 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (StdBool.not (<{StdInt.==_16}> gi_module_1_0 main_dcl_module_index_2)) (True -> analtypes.expand_synonym_type_not_in_icl_module_476 _vArray_0 main_dcl_module_index_1 main_dcl_module_index_2 gi_3 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6)) (False -> let _x_4_0 = analtypes.uselect_244 icl_type_defs_2_1 gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, icl_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;106;19_674}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_1 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_4_2 type_heaps_2_4 dcl_modules_2_5 gi_index_1_1 main_dcl_module_index_2 _vArray_0 gi_3 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 gi_module_1_0) ) ) 
<{analtypes._c;106;19_674}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_index_7::I main_dcl_module_index_8::I _vArray_9 gi_10 td_11 new_cons_defs_12 icl_cons_defs_13 error_14 gi_module_15::I = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;110;28_673}> (select _x_2_0::_Tuple5 0) gi_index_7 dcl_modules_2_1 main_dcl_module_index_8 _vArray_9 main_dcl_module_index_1 gi_10 new_type_defs_2_4 icl_type_defs_2_3 td_11 new_cons_defs_12 icl_cons_defs_13 type_heaps_2_2 error_14) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_477 _vArray_9 main_dcl_module_index_1 gi_module_15 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_12 icl_cons_defs_13 type_heaps_5 dcl_modules_6 error_14) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_12 icl_cons_defs_13 type_heaps_5 dcl_modules_6 error_14)
<{analtypes._c;110;28_673}> !_x_0 gi_index_1::I dcl_modules_2 main_dcl_module_index_3::I _vArray_4 main_dcl_module_index_5::I gi_6 new_type_defs_7 icl_type_defs_8 td_9 new_cons_defs_10 icl_cons_defs_11 type_heaps_12 error_13 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> gi_index_1 (analtypes.size_242 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 0))) (True -> analtypes.expand_synonym_type_not_in_icl_module_476 _vArray_4 main_dcl_module_index_5 main_dcl_module_index_3 gi_6 (_Tuple7 new_type_defs_7 (analtypes.update_243 icl_type_defs_8 gi_index_1 (update td_9::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_10 icl_cons_defs_11 type_heaps_12 dcl_modules_2 error_13)) (False -> _Tuple7 new_type_defs_7 (analtypes.update_243 icl_type_defs_8 gi_index_1 (update td_9::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_10 icl_cons_defs_11 type_heaps_12 dcl_modules_2 error_13) ) (general.No -> _Tuple7 new_type_defs_7 icl_type_defs_8 new_cons_defs_10 icl_cons_defs_11 type_heaps_12 dcl_modules_2 error_13) 
analtypes.fold_st_474 !_vArray_0 main_dcl_module_index_1::I main_dcl_module_index_2::I !_x_3 !st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_474 _vArray_0 main_dcl_module_index_1 main_dcl_module_index_2 x_1_1 (analtypes.expand_synonym_type_475 _vArray_0 main_dcl_module_index_1 main_dcl_module_index_2 a_1_0 st_4)) 
analtypes.expand_synonym_types_of_group_473 !_vArray_0 main_dcl_module_index_1::I !group_members_2 !_x_3 = case _x_3 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> analtypes.fold_st_474 _vArray_0 main_dcl_module_index_1 main_dcl_module_index_1 group_members_2 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) 
analtypes.fold_st_472 !_vArray_0 main_dcl_module_index_1::I !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_472 _vArray_0 main_dcl_module_index_1 x_1_1 (analtypes.expand_synonym_types_of_group_473 _vArray_0 main_dcl_module_index_1 a_1_0 st_3)) 
analtypes.expand_synonym_types_of_groups_471 !_vArray_0 main_dcl_module_index_1::I pi_groups_2 !_x_3 = case _x_3 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> case (select error_1_6::checksupport._ErrorAdmin 2) (True -> analtypes.fold_st_472 _vArray_0 main_dcl_module_index_1 pi_groups_2 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) (False -> _Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6) ) 
analtypes.expand_new_type_rhs_486 !main_dcl_module_index_0::I !gi_module_1::I !constructor_index_2::I new_type_defs_3 icl_type_defs_4 new_cons_defs_5 icl_cons_defs_6 type_heaps_7 dcl_modules_8 error_9 = case (StdBool.not (<{StdInt.==_16}> gi_module_1 main_dcl_module_index_0)) (True -> analtypes.expand_new_type_rhs_not_in_icl_module_478 main_dcl_module_index_0 gi_module_1 constructor_index_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_5 icl_cons_defs_6 type_heaps_7 dcl_modules_8 error_9) (False -> let _x_2_0 = select (analtypes.select_249 icl_cons_defs_6 constructor_index_2)::syntax._ConsDef 1, cons_type_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = analtypes.try_to_expand_new_type_constructor_arg_462 main_dcl_module_index_0 cons_type_2_1 new_type_defs_3 icl_type_defs_4 type_heaps_7 dcl_modules_8, dcl_modules_2_3 = select _x_2_2::_Tuple5 4, type_heaps_2_4 = select _x_2_2::_Tuple5 3, icl_type_defs_2_5 = select _x_2_2::_Tuple5 2, new_type_defs_2_6 = select _x_2_2::_Tuple5 1, icl_cons_defs_2_7 = select _x_2_0::_Tuple2 1 in <{analtypes._c;164;19_675}> (select _x_2_2::_Tuple5 0) constructor_index_2 dcl_modules_2_3 main_dcl_module_index_0 icl_cons_defs_2_7 gi_module_1 new_type_defs_2_6 icl_type_defs_2_5 new_cons_defs_5 type_heaps_2_4 error_9) 
<{analtypes._c;164;19_675}> !_x_0 constructor_index_1::I dcl_modules_2 main_dcl_module_index_3::I icl_cons_defs_4 gi_module_5::I new_type_defs_6 icl_type_defs_7 new_cons_defs_8 type_heaps_9 error_10 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> constructor_index_1 (analtypes.size_250 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 1))) (True -> let _x_3_0 = analtypes.uselect_252 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in analtypes.expand_new_type_rhs_not_in_icl_module_478 main_dcl_module_index_3 gi_module_5 constructor_index_1 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 (analtypes.update_251 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_9 dcl_modules_2 error_10) (False -> let _x_3_0 = analtypes.uselect_252 icl_cons_defs_4 constructor_index_1, e0_3_1 = select _x_3_0::_Tuple2 0 in _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 (analtypes.update_251 (select _x_3_0::_Tuple2 1) constructor_index_1 (update e0_3_1::syntax._ConsDef [1:update (select e0_3_1::syntax._ConsDef 1)::syntax._SymbolType [1:_predefined._Cons type_1_0 _predefined._Nil]])) type_heaps_9 dcl_modules_2 error_10) ) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_8 icl_cons_defs_4 type_heaps_9 dcl_modules_2 error_10) 
analtypes.expand_synonym_type_not_in_icl_module_485 main_dcl_module_index_0::I main_dcl_module_index_1 !gi_2 !_x_3 = case gi_2 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_3 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (<{StdInt.==_16}> (analtypes.size_242 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0)) 0) (True -> let _x_4_0 = analtypes.select_241 (select (select (analtypes.select_257 dcl_modules_2_5 gi_module_1_0)::syntax._DclModule 7)::syntax._CommonDefs 0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, dcl_modules_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;126;19_677}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_0 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_4_2 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6) (False -> let _x_4_0 = analtypes.select_241 (_SystemArray.select_75 new_type_defs_2_0 gi_module_1_0) gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, new_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;143;19_679}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_0 td_attribute_4_3 new_type_defs_4_2 icl_type_defs_2_1 type_heaps_2_4 dcl_modules_2_5 gi_module_1_0 gi_index_1_1 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6) ) ) 
<{analtypes._c;143;19_679}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_module_7::I gi_index_8::I td_9 new_cons_defs_10 icl_cons_defs_11 error_12 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;147;28_678}> (select _x_2_0::_Tuple5 0) new_type_defs_2_4 gi_module_7 gi_index_8 td_9 icl_type_defs_2_3 new_cons_defs_10 icl_cons_defs_11 type_heaps_2_2 dcl_modules_2_1 error_12) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_486 main_dcl_module_index_1 gi_module_7 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12)
<{analtypes._c;147;28_678}> !_x_0 new_type_defs_1 gi_module_2::I gi_index_3::I td_4 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10 = case _x_0 (general.Yes type_1_0 -> _Tuple7 (analtypes.update_243 (_SystemArray.select_75 new_type_defs_1 gi_module_2) gi_index_3 (update td_4::syntax._TypeDef [5:syntax.SynType type_1_0])) icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) (general.No -> _Tuple7 new_type_defs_1 icl_type_defs_5 new_cons_defs_6 icl_cons_defs_7 type_heaps_8 dcl_modules_9 error_10) 
<{analtypes._c;126;19_677}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_module_7::I gi_index_8::I td_9 new_cons_defs_10 icl_cons_defs_11 error_12 = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;130;28_676}> (select _x_2_0::_Tuple5 0) dcl_modules_2_1 gi_module_7 new_type_defs_2_4 gi_index_8 td_9 icl_type_defs_2_3 new_cons_defs_10 icl_cons_defs_11 type_heaps_2_2 error_12) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_486 main_dcl_module_index_1 gi_module_7 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_10 icl_cons_defs_11 type_heaps_5 dcl_modules_6 error_12)
<{analtypes._c;130;28_676}> !_x_0 dcl_modules_1 gi_module_2::I new_type_defs_3 gi_index_4::I td_5 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 error_10 = case _x_0 (general.Yes type_1_0 -> let _x_2_0::I = select (select (analtypes.select_257 dcl_modules_1 gi_module_2)::syntax._DclModule 7)::syntax._CommonDefs 0, _x_2_1 = analtypes.usize_245 (select _x_2_0::_Tuple2 0), g_s2_2_2 = <{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1 in _Tuple7 (_SystemArray.update_77 new_type_defs_3 gi_module_2 (analtypes.update_243 (<{analtypes.cu;133;71_435}> (analtypes._createArray_238 (<{StdInt.+_6}> g_s2_2_2 StdInt.one_11)) 0 g_s2_2_2 (select _x_2_1::_Tuple2 1)) gi_index_4 (update td_5::syntax._TypeDef [5:syntax.SynType type_1_0]))) icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 (select _x_2_0::_Tuple2 1) error_10) (general.No -> _Tuple7 new_type_defs_3 icl_type_defs_6 new_cons_defs_7 icl_cons_defs_8 type_heaps_9 dcl_modules_1 error_10) 
analtypes.expand_synonym_type_484 main_dcl_module_index_0::I !main_dcl_module_index_1::I !gi_2 !_x_3 = case gi_2 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_3 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6 -> case (StdBool.not (<{StdInt.==_16}> gi_module_1_0 main_dcl_module_index_1)) (True -> analtypes.expand_synonym_type_not_in_icl_module_485 main_dcl_module_index_0 main_dcl_module_index_1 gi_2 (_Tuple7 new_type_defs_2_0 icl_type_defs_2_1 new_cons_defs_2_2 icl_cons_defs_2_3 type_heaps_2_4 dcl_modules_2_5 error_2_6)) (False -> let _x_4_0 = analtypes.uselect_244 icl_type_defs_2_1 gi_index_1_1, td_4_1 = select _x_4_0::_Tuple2 0, icl_type_defs_4_2 = select _x_4_0::_Tuple2 1, td_attribute_4_3 = select td_4_1::syntax._TypeDef 6 in <{analtypes._c;106;19_681}> (select td_4_1::syntax._TypeDef 5) main_dcl_module_index_0 td_attribute_4_3 new_type_defs_2_0 icl_type_defs_4_2 type_heaps_2_4 dcl_modules_2_5 gi_index_1_1 main_dcl_module_index_1 gi_2 td_4_1 new_cons_defs_2_2 icl_cons_defs_2_3 error_2_6 gi_module_1_0) ) ) 
<{analtypes._c;106;19_681}> !_x_0 main_dcl_module_index_1::I td_attribute_2 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6 gi_index_7::I main_dcl_module_index_8::I gi_9 td_10 new_cons_defs_11 icl_cons_defs_12 error_13 gi_module_14::I = case _x_0 (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.try_to_expand_synonym_type_458 main_dcl_module_index_1 type_1_0 td_attribute_2 (_Tuple4 new_type_defs_3 icl_type_defs_4 type_heaps_5 dcl_modules_6), dcl_modules_2_1 = select _x_2_0::_Tuple5 4, type_heaps_2_2 = select _x_2_0::_Tuple5 3, icl_type_defs_2_3 = select _x_2_0::_Tuple5 2, new_type_defs_2_4 = select _x_2_0::_Tuple5 1 in <{analtypes._c;110;28_680}> (select _x_2_0::_Tuple5 0) gi_index_7 dcl_modules_2_1 main_dcl_module_index_8 main_dcl_module_index_1 gi_9 new_type_defs_2_4 icl_type_defs_2_3 td_10 new_cons_defs_11 icl_cons_defs_12 type_heaps_2_2 error_13) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.expand_new_type_rhs_486 main_dcl_module_index_1 gi_module_14 ds_index_2_2 new_type_defs_3 icl_type_defs_4 new_cons_defs_11 icl_cons_defs_12 type_heaps_5 dcl_modules_6 error_13) ) (_ -> _Tuple7 new_type_defs_3 icl_type_defs_4 new_cons_defs_11 icl_cons_defs_12 type_heaps_5 dcl_modules_6 error_13)
<{analtypes._c;110;28_680}> !_x_0 gi_index_1::I dcl_modules_2 main_dcl_module_index_3::I main_dcl_module_index_4::I gi_5 new_type_defs_6 icl_type_defs_7 td_8 new_cons_defs_9 icl_cons_defs_10 type_heaps_11 error_12 = case _x_0 (general.Yes type_1_0 -> case (<{StdInt.<_17}> gi_index_1 (analtypes.size_242 (select (select (analtypes.select_257 dcl_modules_2 main_dcl_module_index_3)::syntax._DclModule 7)::syntax._CommonDefs 0))) (True -> analtypes.expand_synonym_type_not_in_icl_module_485 main_dcl_module_index_4 main_dcl_module_index_3 gi_5 (_Tuple7 new_type_defs_6 (analtypes.update_243 icl_type_defs_7 gi_index_1 (update td_8::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_9 icl_cons_defs_10 type_heaps_11 dcl_modules_2 error_12)) (False -> _Tuple7 new_type_defs_6 (analtypes.update_243 icl_type_defs_7 gi_index_1 (update td_8::syntax._TypeDef [5:syntax.SynType type_1_0])) new_cons_defs_9 icl_cons_defs_10 type_heaps_11 dcl_modules_2 error_12) ) (general.No -> _Tuple7 new_type_defs_6 icl_type_defs_7 new_cons_defs_9 icl_cons_defs_10 type_heaps_11 dcl_modules_2 error_12) 
analtypes.fold_st_483 main_dcl_module_index_0::I main_dcl_module_index_1::I !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_483 main_dcl_module_index_0 main_dcl_module_index_1 x_1_1 (analtypes.expand_synonym_type_484 main_dcl_module_index_0 main_dcl_module_index_1 a_1_0 st_3)) 
analtypes.expand_synonym_types_of_group_482 main_dcl_module_index_0::I !group_members_1 !_x_2 = case _x_2 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> analtypes.fold_st_483 main_dcl_module_index_0 main_dcl_module_index_0 group_members_1 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) 
analtypes.fold_st_481 main_dcl_module_index_0::I !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_481 main_dcl_module_index_0 x_1_1 (analtypes.expand_synonym_types_of_group_482 main_dcl_module_index_0 a_1_0 st_2)) 
analtypes.expand_synonym_types_of_groups_480 main_dcl_module_index_0::I pi_groups_1 !_x_2 = case _x_2 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6 -> case (select error_1_6::checksupport._ErrorAdmin 2) (True -> analtypes.fold_st_481 main_dcl_module_index_0 pi_groups_1 (_Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6)) (False -> _Tuple7 new_type_defs_1_0 icl_type_defs_1_1 new_cons_defs_1_2 icl_cons_defs_1_3 type_heaps_1_4 dcl_modules_1_5 error_1_6) ) 
analtypes.partionateAndExpandTypes !used_module_numbers_0 !main_dcl_module_index_1::I !icl_common_2 !dcl_modules_3 !type_heaps_4 !error_5 = case icl_common_2 (syntax._CommonDefs com_type_defs_1_0 com_cons_defs_1_1 com_selector_defs_1_2 com_class_defs_1_3 com_member_defs_1_4 com_instance_defs_1_5 com_generic_defs_1_6 com_gencase_defs_1_7 -> let !nr_of_modules_2_0::I = analtypes.size_258 dcl_modules_3, !n_exported_dictionaries_2_1::I = analtypes.size_282 (select (select (analtypes.select_257 dcl_modules_3 main_dcl_module_index_1)::syntax._DclModule 7)::syntax._CommonDefs 3), !index_of_first_not_exported_type_or_dictionary_2_2::I = analtypes.size_242 (select (select (analtypes.select_257 dcl_modules_3 main_dcl_module_index_1)::syntax._DclModule 7)::syntax._CommonDefs 0), !n_exported_icl_types_2_3::I = <{StdInt.-_7}> index_of_first_not_exported_type_or_dictionary_2_2 n_exported_dictionaries_2_1, !n_types_without_not_exported_dictionaries_2_4::I = <{StdInt.-_7}> (analtypes.size_242 com_type_defs_1_0) (<{StdInt.-_7}> (analtypes.size_282 com_class_defs_1_3) n_exported_dictionaries_2_1), _x_2_5 = analtypes.create_type_defs_marks_and_infos_55 used_module_numbers_0 main_dcl_module_index_1 n_types_without_not_exported_dictionaries_2_4 nr_of_modules_2_0 (_Tuple2 com_type_defs_1_0 (select (select (select (analtypes.select_257 dcl_modules_3 main_dcl_module_index_1)::syntax._DclModule 7)::syntax._CommonDefs 0)::_Tuple2 1)), _x_2_6 = analtypes.i_fold_st_451 main_dcl_module_index_1 index_of_first_not_exported_type_or_dictionary_2_2 n_exported_icl_types_2_3 0 nr_of_modules_2_0 (analtypes._PartitioningInfo (select _x_2_5::_Tuple4 2) (select _x_2_5::_Tuple4 1) (select _x_2_5::_Tuple4 3) 0 0 _predefined._Nil _predefined._Nil error_5), reversed_groups_2_7::I = StdList.reverse (select _x_2_6::analtypes._PartitioningInfo 5), g_s_2_8::I = <{StdInt.-_7}> nr_of_modules_2_0 1, _x_2_9 = analtypes.usize_245 (_SystemArray.select_43 (select _x_2_6::analtypes._PartitioningInfo 1) main_dcl_module_index_1), g_s2_2_10::I = <{StdInt.-_7}> (select _x_2_9::_Tuple2 0) 1, g_s_2_11 = <{StdInt.-_7}> nr_of_modules_2_0 1, _x_2_12 = analtypes.expand_synonym_types_of_groups_480 main_dcl_module_index_1 reversed_groups_2_7 (_Tuple7 (<{analtypes.cu;57;28_425}> (_SystemArray._createArray_72 (<{StdInt.+_6}> g_s_2_8 StdInt.one_11)) 0 g_s_2_8) (<{analtypes.cu;56;38_424}> (analtypes._createArray_238 (<{StdInt.+_6}> g_s2_2_10 StdInt.one_11)) 0 g_s2_2_10 (select _x_2_9::_Tuple2 1)) (<{analtypes.cu;59;28_426}> (_SystemArray._createArray_40 (<{StdInt.+_6}> g_s_2_11 StdInt.one_11)) 0 g_s_2_11) com_cons_defs_1_1 type_heaps_4 (select _x_2_5::_Tuple4 0) (select _x_2_6::analtypes._PartitioningInfo 7)), _x_2_13 = analtypes.update_modules_and_create_commondefs_58 used_module_numbers_0 (select _x_2_12::_Tuple7 0) (select _x_2_12::_Tuple7 2) nr_of_modules_2_0 (select _x_2_12::_Tuple7 5) in <{_Tuple7!127}> reversed_groups_2_7 (select _x_2_13::_Tuple2 1) (select _x_2_6::analtypes._PartitioningInfo 2) (update icl_common_2::syntax._CommonDefs [0:select _x_2_12::_Tuple7 1,1:select _x_2_12::_Tuple7 3]) (select _x_2_13::_Tuple2 0) (select _x_2_12::_Tuple7 4) (select _x_2_12::_Tuple7 6)) 
analtypes.fold_st_213 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_213 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.fold_st_212 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_212 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.map_st_211 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_211 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.fold_st_210 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_210 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.fold_st_209 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_209 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.map_st_208 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_208 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.new_kind_80 !_x_0 !_x_1 = case _x_0 (syntax._ATypeVar atv_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax._TypeVar tv_ident_2_0 tv_info_ptr_2_1 -> case _x_1 (_Tuple2 type_var_heap_3_0 kind_heap_3_1 -> let _x_4_0 = Heap.newPtr syntax.KI_Const kind_heap_3_1, kind_info_ptr_4_1 = select _x_4_0::_Tuple2 0, ptr_and_val_4_2 = _Tuple2 tv_info_ptr_2_1 (syntax.TVI_TypeKind kind_info_ptr_4_1), ptr_and_val_4_3 = _Tuple2 kind_info_ptr_4_1 (syntax.KI_Var kind_info_ptr_4_1) in <{_Tuple2!3}> (syntax.KindVar kind_info_ptr_4_1) (_Tuple2 (Heap.writePtr (select ptr_and_val_4_2::_Tuple2 0) (select ptr_and_val_4_2::_Tuple2 1) type_var_heap_3_0) (Heap.writePtr (select ptr_and_val_4_3::_Tuple2 0) (select ptr_and_val_4_3::_Tuple2 1) (select _x_4_0::_Tuple2 1)))) ) ) 
analtypes.map_st_487 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.new_kind_80 x_1_0 s_1, _x_2_2 = analtypes.map_st_487 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.newKindVariables_99 !td_args_0 !_x_1 = case _x_1 (_Tuple2 type_var_heap_1_0 as_kind_heap_1_1 -> analtypes.map_st_487 td_args_0 (_Tuple2 type_var_heap_1_0 as_kind_heap_1_1)) 
analtypes.map_st_207 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_207 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.new_kind_const_81 !_x_0 !_x_1 = case _x_0 (syntax._ATypeVar atv_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax._TypeVar tv_ident_2_0 tv_info_ptr_2_1 -> case _x_1 (_Tuple2 type_var_heap_3_0 kind_heap_3_1 -> let _x_4_0 = Heap.newPtr syntax.KI_Const kind_heap_3_1, kind_info_ptr_4_1 = select _x_4_0::_Tuple2 0 in <{_Tuple2!3}> (syntax.KindVar kind_info_ptr_4_1) (_Tuple2 (Heap.writePtr tv_info_ptr_2_1 (syntax.TVI_TypeKind kind_info_ptr_4_1) type_var_heap_3_0) (select _x_4_0::_Tuple2 1))) ) ) 
analtypes.map_st_488 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.new_kind_const_81 x_1_0 s_1, _x_2_2 = analtypes.map_st_488 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.newKindConstVariables_100 !td_args_0 !_x_1 = case _x_1 (_Tuple2 type_var_heap_1_0 as_kind_heap_1_1 -> analtypes.map_st_488 td_args_0 (_Tuple2 type_var_heap_1_0 as_kind_heap_1_1)) 
<{analtypes.c;649;53_79}> !g_l_0 = <{analtypes.g_c1;649;58_682}> g_l_0
<{analtypes.g_c1;649;58_682}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> _predefined._Cons syntax.KindConst (<{analtypes.c;649;53_79}> g_t_1_1)) (_ -> _predefined._Nil)
<{analtypes.c;650;66_78}> !_vone_0 !<{_v+_1}> !g_l_2 i_3 = <{analtypes.g_c1;650;55_683}> g_l_2 i_3 _vone_0 <{_v+_1}>
<{analtypes.g_c1;650;55_683}> !g_l_0 i_1 _vone_2 <{_v+_3}> = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> _predefined._Cons i_1 (<{analtypes.c;650;66_78}> _vone_2 <{_v+_3}> g_t_1_1 (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_1 (select _vone_2::<{StdOverloaded.one;}> 0)))) (_ -> _predefined._Nil)
<{analtypes.c;650;66_489}> !<{_v+_0}> !g_l_1 i_2::I = <{analtypes.g_c1;650;55_684}> g_l_1 i_2 <{_v+_0}>
<{analtypes.g_c1;650;55_684}> !g_l_0 i_1::I <{_v+_2}> = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> _predefined._Cons i_1 (<{analtypes.c;650;66_489}> <{_v+_2}> g_t_1_1 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_1 StdInt.one_11))) (_ -> _predefined._Nil)
<{analtypes.c;650;66_490}> !g_l_0 i_1::I = <{analtypes.g_c1;650;55_685}> g_l_0 i_1
<{analtypes.g_c1;650;55_685}> !g_l_0 i_1::I = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> _predefined._Cons i_1 (<{analtypes.c;650;66_490}> g_t_1_1 (<{StdInt.+_6}> i_1 StdInt.one_11))) (_ -> _predefined._Nil)
analtypes.init_abstract_type_def_98 !_vArray_0 !_vArray_1 properties_2::I td_args_3 !gi_module_4::I !gi_index_5::I !type_def_infos_6 = let _x_1_0 = select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 type_def_infos_6 gi_module_4) gi_index_5 in select _vArray_1::<{_SystemArray.Array;}> 5 (select _vArray_0::<{_SystemArray.Array;}> 3 (select _x_1_0::_Tuple2 1) gi_module_4) gi_index_5 (update (select _x_1_0::_Tuple2 0)::syntax._TypeDefInfo [0:<{analtypes.c;649;53_79}> td_args_3,1:StdInt.bitor properties_2 4,4:<{analtypes.c;650;66_490}> td_args_3 0])
analtypes.init_type_def_infos_97 !_vArray_0 !_vArray_1 !_vArray_2 modules_3 !gi_4 !_x_5 = case gi_4 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_5 (_Tuple4 is_abstract_type_2_0 type_def_infos_2_1 as_type_var_heap_2_2 kind_heap_2_3 -> let _x_3_0 = analtypes.select_241 (select (select _vArray_0::<{_SystemArray.Array;}> 3 modules_3 gi_module_1_0)::syntax._CommonDefs 0) gi_index_1_1, td_args_3_1 = select _x_3_0::syntax._TypeDef 3 in <{analtypes._c;630;11_686}> (select _x_3_0::syntax._TypeDef 5) _vArray_1 _vArray_2 td_args_3_1 gi_module_1_0 gi_index_1_1 type_def_infos_2_1 as_type_var_heap_2_2 kind_heap_2_3 is_abstract_type_2_0) ) 
<{analtypes._c;630;11_686}> !_x_0 _vArray_1 _vArray_2 td_args_3 gi_module_4::I gi_index_5::I type_def_infos_6 as_type_var_heap_7 kind_heap_8 is_abstract_type_9::B = case _x_0 (syntax.AbstractType properties_1_0 -> _Tuple4 True (analtypes.init_abstract_type_def_98 _vArray_1 _vArray_2 properties_1_0 td_args_3 gi_module_4 gi_index_5 type_def_infos_6) as_type_var_heap_7 kind_heap_8) (syntax.AbstractSynType properties_1_0 _x_1_1 -> _Tuple4 True (analtypes.init_abstract_type_def_98 _vArray_1 _vArray_2 properties_1_0 td_args_3 gi_module_4 gi_index_5 type_def_infos_6) as_type_var_heap_7 kind_heap_8) (syntax.ExtensibleAlgType _x_1_0 -> let _x_2_0 = select _vArray_2::<{_SystemArray.Array;}> 3 (select _vArray_1::<{_SystemArray.Array;}> 3 type_def_infos_6 gi_module_4) gi_index_5, _x_2_1 = analtypes.newKindConstVariables_100 td_args_3 (_Tuple2 as_type_var_heap_7 kind_heap_8), _x_2_2 = select _x_2_1::_Tuple2 1 in _Tuple4 is_abstract_type_9 (select _vArray_2::<{_SystemArray.Array;}> 5 (select _vArray_1::<{_SystemArray.Array;}> 3 (select _x_2_0::_Tuple2 1) gi_module_4) gi_index_5 (update (select _x_2_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_2_1::_Tuple2 0])) (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1)) (syntax.AlgConses _x_1_0 _x_1_1 -> let _x_2_0 = select _vArray_2::<{_SystemArray.Array;}> 3 (select _vArray_1::<{_SystemArray.Array;}> 3 type_def_infos_6 gi_module_4) gi_index_5, _x_2_1 = analtypes.newKindConstVariables_100 td_args_3 (_Tuple2 as_type_var_heap_7 kind_heap_8), _x_2_2 = select _x_2_1::_Tuple2 1 in _Tuple4 is_abstract_type_9 (select _vArray_2::<{_SystemArray.Array;}> 5 (select _vArray_1::<{_SystemArray.Array;}> 3 (select _x_2_0::_Tuple2 1) gi_module_4) gi_index_5 (update (select _x_2_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_2_1::_Tuple2 0])) (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1)) (_ -> let _x_1_0 = select _vArray_2::<{_SystemArray.Array;}> 3 (select _vArray_1::<{_SystemArray.Array;}> 3 type_def_infos_6 gi_module_4) gi_index_5, _x_1_1 = analtypes.newKindVariables_99 td_args_3 (_Tuple2 as_type_var_heap_7 kind_heap_8), _x_1_2 = select _x_1_1::_Tuple2 1 in _Tuple4 is_abstract_type_9 (select _vArray_2::<{_SystemArray.Array;}> 5 (select _vArray_1::<{_SystemArray.Array;}> 3 (select _x_1_0::_Tuple2 1) gi_module_4) gi_index_5 (update (select _x_1_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_1_1::_Tuple2 0])) (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1))
analtypes.fold_st_206 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_206 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.is_not_a_variable_75::B !_x_0 = case _x_0 (syntax.TA_RootVar var_1_0 -> False) (_ -> True)
analtypes.new_kind_74 !_x_0 !_x_1 = case _x_0 (syntax._ATypeVar atv_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax._TypeVar tv_ident_2_0 tv_info_ptr_2_1 -> case _x_1 (_Tuple3 coercible_3_0 type_var_heap_3_1 kind_heap_3_2 -> let _x_4_0 = Heap.newPtr syntax.KI_Const kind_heap_3_2, kind_info_ptr_4_1 = select _x_4_0::_Tuple2 0, ptr_and_val_4_2 = _Tuple2 tv_info_ptr_2_1 (syntax.TVI_TypeKind kind_info_ptr_4_1), ptr_and_val_4_3 = _Tuple2 kind_info_ptr_4_1 (syntax.KI_Var kind_info_ptr_4_1) in <{_Tuple3!7}> (analtypes._f687_687 coercible_3_0 atv_attribute_1_0) (Heap.writePtr (select ptr_and_val_4_2::_Tuple2 0) (select ptr_and_val_4_2::_Tuple2 1) type_var_heap_3_1) (Heap.writePtr (select ptr_and_val_4_3::_Tuple2 0) (select ptr_and_val_4_3::_Tuple2 1) (select _x_4_0::_Tuple2 1))) ) ) 
analtypes._f687_687::B !coercible_0::B atv_attribute_1 = case coercible_0 (True -> analtypes.is_not_a_variable_75 atv_attribute_1) (_ -> False)
analtypes.fold_st_491 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_491 x_1_1 (analtypes.new_kind_74 a_1_0 st_1)) 
analtypes.new_local_kind_variables_76 !td_args_0 !_x_1 = case _x_1 (_Tuple2 type_var_heap_1_0 as_kind_heap_1_1 -> analtypes.fold_st_491 td_args_0 (_Tuple3 True type_var_heap_1_0 as_kind_heap_1_1)) 
analtypes.skip_indirections_68 this_info_ptr_0 !kind_1 kind_heap_2 = case kind_1 (syntax.KI_Var kind_info_ptr_1_0 -> case (<{Heap.==_10}> this_info_ptr_0 kind_info_ptr_1_0) (True -> _Tuple2 kind_1 kind_heap_2) (False -> let _x_3_0 = Heap.readPtr kind_info_ptr_1_0 kind_heap_2 in analtypes.skip_indirections_68 kind_info_ptr_1_0 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) ) (_ -> _Tuple2 kind_1 kind_heap_2)
analtypes.skipIndirections !_x_0 kind_heap_1 = case _x_0 (syntax.KI_Var kind_info_ptr_1_0 -> let _x_2_0 = Heap.readPtr kind_info_ptr_1_0 kind_heap_1 in analtypes.skip_indirections_68 kind_info_ptr_1_0 (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1)) (_ -> _Tuple2 _x_0 kind_heap_1)
analtypes.contains_kind_ptr_69 info_ptr_0 !_x_1 kind_heap_2 = case _x_1 (syntax.KI_Arrow kind1_1_0 kind2_1_1 -> let _x_2_0 = analtypes.skipIndirections kind1_1_0 kind_heap_2, kind1_2_1 = select _x_2_0::_Tuple2 0, kind_heap_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.contains_kind_ptr_69 info_ptr_0 kind1_2_1 kind_heap_2_2 in case (select _x_2_3::_Tuple2 0) (True -> _Tuple2 True (select _x_2_3::_Tuple2 1)) (False -> let _x_4_0 = analtypes.skipIndirections kind2_1_1 (select _x_2_3::_Tuple2 1) in analtypes.contains_kind_ptr_69 info_ptr_0 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1)) ) (syntax.KI_Var kind_info_ptr_1_0 -> _Tuple2 (<{Heap.==_10}> info_ptr_0 kind_info_ptr_1_0) kind_heap_2) (syntax.KI_Const -> _Tuple2 False kind_heap_2) 
analtypes.kindError !_vtoString_0 !_vtoString_1 kind1_2 kind2_3 !error_4 = checksupport.checkError (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) "conflicting kinds: " (<{StdString.+++_11}> (select _vtoString_0::<{StdOverloaded.toString;}> 0 kind1_2) (<{StdString.+++_11}> " and " (select _vtoString_1::<{StdOverloaded.toString;}> 0 kind2_3))) error_4
analtypes.kindError_492 !_vtoString_0 !kind1_1 kind2_2 !error_3 = checksupport.checkError (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) "conflicting kinds: " (<{StdString.+++_11}> (syntax.toString_12 kind1_1) (<{StdString.+++_11}> " and " (select _vtoString_0::<{StdOverloaded.toString;}> 0 kind2_2))) error_3
analtypes.kindError_493 !kind1_0 !kind2_1 !error_2 = checksupport.checkError (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) "conflicting kinds: " (<{StdString.+++_11}> (syntax.toString_12 kind1_0) (<{StdString.+++_11}> " and " (syntax.toString_12 kind2_1))) error_2
analtypes.unify_kinds_70 !kind1_0 !kind2_1 !uni_info_2 = case kind1_0 (syntax.KI_Var info_ptr1_1_0 -> <{analtypes._c;342;11_688}> kind2_1 info_ptr1_1_0 uni_info_2 kind1_0) (_ -> case kind2_1 (syntax.KI_Var info_ptr1_1_0 -> analtypes.unify_kinds_70 kind2_1 kind1_0 uni_info_2) (syntax.KI_Arrow x2_1_0 y2_1_1 -> case kind1_0 (syntax.KI_Arrow x1_2_0 y1_2_1 -> analtypes.unifyKinds x1_2_0 x2_1_0 (analtypes.unifyKinds y1_2_1 y2_1_1 uni_info_2)) ) (syntax.KI_Const -> case kind1_0 (syntax.KI_Const -> uni_info_2) ) (_ -> case uni_info_2 (analtypes._UnifyKindsInfo uki_kind_heap_1_0 uki_error_1_1 -> update uni_info_2::analtypes._UnifyKindsInfo [1:analtypes.kindError_493 kind1_0 kind2_1 uki_error_1_1]) ))
analtypes.unifyKinds !kind1_0 !kind2_1 !uni_info_2 = case uni_info_2 (analtypes._UnifyKindsInfo uki_kind_heap_1_0 uki_error_1_1 -> let _x_2_0 = analtypes.skipIndirections kind1_0 uki_kind_heap_1_0, _x_2_1 = analtypes.skipIndirections kind2_1 (select _x_2_0::_Tuple2 1) in analtypes.unify_kinds_70 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0) (update uni_info_2::analtypes._UnifyKindsInfo [0:select _x_2_1::_Tuple2 1])) 
<{analtypes._c;342;11_688}> !kind2_0 info_ptr1_1 !uni_info_2 kind1_3 = case kind2_0 (syntax.KI_Var info_ptr2_1_0 -> case (<{Heap.==_10}> info_ptr1_1 info_ptr2_1_0) (True -> uni_info_2) (False -> let ptr_and_val_3_0 = _Tuple2 info_ptr1_1 kind2_0 in update uni_info_2::analtypes._UnifyKindsInfo [0:Heap.writePtr (select ptr_and_val_3_0::_Tuple2 0) (select ptr_and_val_3_0::_Tuple2 1) (select uni_info_2::analtypes._UnifyKindsInfo 0)]) ) (_ -> let _x_1_0 = analtypes.contains_kind_ptr_69 info_ptr1_1 kind2_0 (select uni_info_2::analtypes._UnifyKindsInfo 0) in case (select _x_1_0::_Tuple2 0) (True -> update uni_info_2::analtypes._UnifyKindsInfo [0:select _x_1_0::_Tuple2 1,1:analtypes.kindError_493 kind1_3 kind2_0 (select uni_info_2::analtypes._UnifyKindsInfo 1)]) (False -> let ptr_and_val_3_0 = _Tuple2 info_ptr1_1 kind2_0 in update uni_info_2::analtypes._UnifyKindsInfo [0:Heap.writePtr (select ptr_and_val_3_0::_Tuple2 0) (select ptr_and_val_3_0::_Tuple2 1) (select _x_1_0::_Tuple2 1)]) )
analtypes.anal_types_of_cons_77 !_vanalTypes_0 modules_1 !_x_2 args_strictness_3 strictness_index_4::I conds_as_5 = case _x_2 (_predefined._Nil -> _Tuple2 1 conds_as_5) (_predefined._Cons type_1_0 types_1_1 -> let _x_2_0::I = analtypes.anal_types_of_cons_77 _vanalTypes_0 modules_1 types_1_1 args_strictness_3 (<{StdInt.+_6}> strictness_index_4 1) conds_as_5, conds_as_2_1::I = select _x_2_0::_Tuple2 1, _x_2_2 = select _vanalTypes_0::<{analtypes.analTypes;}> 0 False modules_1 _predefined._Nil type_1_0 conds_as_2_1, _x_2_3 = select _x_2_2::_Tuple3 2, as_2_4 = select _x_2_3::_Tuple2 1, _x_2_5 = analtypes.unifyKinds (select _x_2_2::_Tuple3 0) syntax.KI_Const (analtypes._UnifyKindsInfo (select as_2_4::analtypes._AnalyseState 2) (select as_2_4::analtypes._AnalyseState 3)), cv_props_2_6 = select _x_2_2::_Tuple3 1, other_type_props_2_7 = select _x_2_0::_Tuple2 0 in _Tuple2 (<{analtypes._if;595;24_689}> (containers.arg_is_strict strictness_index_4 args_strictness_3) cv_props_2_6 other_type_props_2_7) (_Tuple2 (select _x_2_3::_Tuple2 0) (update as_2_4::analtypes._AnalyseState [2:select _x_2_5::analtypes._UnifyKindsInfo 0,3:select _x_2_5::analtypes._UnifyKindsInfo 1]))) 
<{analtypes._if;595;24_689}>::I !_x_0::B !cv_props_1::I !other_type_props_2::I = case _x_0 (True -> StdInt.bitor (StdInt.bitand (StdInt.bitand cv_props_1 other_type_props_2) 1) (StdInt.bitand (StdInt.bitor cv_props_1 other_type_props_2) 2)) (_ -> StdInt.bitand (StdInt.bitor cv_props_1 other_type_props_2) 2)
analtypes.has_root_attr_158::B !_x_0 = case _x_0 (syntax.TA_RootVar _x_1_0 -> True) (_ -> False)
analtypes.kindToKindInfo !_x_0 = case _x_0 (syntax.KindVar info_ptr_1_0 -> syntax.KI_Var info_ptr_1_0) (syntax.KindConst -> syntax.KI_Const) (syntax.KindArrow ks_1_0 -> analtypes.kindArrowToKindInfo ks_1_0) 
analtypes.kindArrowToKindInfo !_x_0 = case _x_0 (_predefined._Nil -> syntax.KI_Const) (_predefined._Cons k_1_0 ks_1_1 -> syntax.KI_Arrow (analtypes.kindToKindInfo k_1_0) (analtypes.kindArrowToKindInfo ks_1_1)) 
analtypes.is_type_var_71::B !_x_0 = case _x_0 (syntax._AType at_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax.TV _x_2_0 -> True) ) (_ -> False)
analtypes.anal_types_of_type_cons_73 !_vanalTypes_0 !<{_v<<<_1}> has_root_attr_2::B modules_3 form_tvs_4 !_x_5 _x_6 conds_as_7 = case _x_5 (_predefined._Nil -> _Tuple2 1 conds_as_7) (_predefined._Cons type_1_0 types_1_1 -> case _x_6 (_predefined._Cons tk_2_0 tks_2_1 -> let _x_3_0::I = select _vanalTypes_0::<{analtypes.analTypes;}> 0 has_root_attr_2 modules_3 form_tvs_4 type_1_0 conds_as_7, type_props_3_1 = select _x_3_0::_Tuple3 1, _x_3_2 = select _x_3_0::_Tuple3 2, as_3_3 = select _x_3_2::_Tuple2 1, _x_3_4 = analtypes.unifyKinds (select _x_3_0::_Tuple3 0) (analtypes.kindToKindInfo tk_2_0) (analtypes._UnifyKindsInfo (select as_3_3::analtypes._AnalyseState 2) (select as_3_3::analtypes._AnalyseState 3)), _x_3_5::I = analtypes.anal_types_of_type_cons_73 _vanalTypes_0 <{_v<<<_1}> has_root_attr_2 modules_3 form_tvs_4 types_1_1 tks_2_1 (_Tuple2 (select _x_3_2::_Tuple2 0) (update as_3_3::analtypes._AnalyseState [2:select _x_3_4::analtypes._UnifyKindsInfo 0,3:select _x_3_4::analtypes._UnifyKindsInfo 1])), other_type_props_3_6 = select _x_3_5::_Tuple2 0 in _Tuple2 (StdInt.bitor (StdInt.bitand (StdInt.bitand type_props_3_1 other_type_props_3_6) 1) (StdInt.bitand (StdInt.bitor type_props_3_1 other_type_props_3_6) 2)) (select _x_3_5::_Tuple2 1)) ) (_ -> StdMisc.abort (<{general.--->}> (<{StdFile.<<<;}> (<{general.<<<_7}> (<{StdFile.<<<;}> (<{general.<<<_13}> <{_v<<<_1}>)) (<{StdFile.<<<;}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_10}>))))) "anal_types_of_type_cons (analtypes.icl)" (_Tuple2 _x_5 _x_6)))
analtypes.condCombineTypeProperties::I !has_root_attr_0::B !prop1_1::I !prop2_2::I = case has_root_attr_0 (True -> StdInt.bitor (StdInt.bitand (StdInt.bitand prop1_1 prop2_2) 1) (StdInt.bitand (StdInt.bitor prop1_1 prop2_2) 2)) (False -> let prop2_2_0::I = StdInt.bitand prop2_2 (StdInt.bitnot 2) in StdInt.bitor (StdInt.bitand (StdInt.bitand prop1_1 prop2_2_0) 1) (StdInt.bitand (StdInt.bitor prop1_1 prop2_2_0) 2)) 
analtypes.type_appl_error = "type constructor has too many arguments"
analtypes.freshKindVar kind_heap_0 = let _x_1_0 = Heap.newPtr syntax.KI_Const kind_heap_0, kind_info_ptr_1_1 = select _x_1_0::_Tuple2 0, kind_var_1_2 = syntax.KI_Var kind_info_ptr_1_1, ptr_and_val_1_3 = _Tuple2 kind_info_ptr_1_1 kind_var_1_2 in _Tuple2 kind_var_1_2 (Heap.writePtr (select ptr_and_val_1_3::_Tuple2 0) (select ptr_and_val_1_3::_Tuple2 1) (select _x_1_0::_Tuple2 1))
analtypes.check_type_list_159 !_vanalTypes_0 has_root_attr_1::B kind_var_2 modules_3 form_tvs_4 !_x_5 conds_as_6 = case _x_5 (_predefined._Nil -> _Tuple3 kind_var_2 False conds_as_6) (_predefined._Cons type_1_0 types_1_1 -> let _x_2_0 = select _vanalTypes_0::<{analtypes.analTypes;}> 0 has_root_attr_1 modules_3 form_tvs_4 type_1_0 conds_as_6, _x_2_1 = analtypes.check_type_list_159 _vanalTypes_0 has_root_attr_1 kind_var_2 modules_3 form_tvs_4 types_1_1 (select _x_2_0::_Tuple3 2) in _Tuple3 (syntax.KI_Arrow (select _x_2_0::_Tuple3 0) (select _x_2_1::_Tuple3 0)) (analtypes._f690_690 (select _x_2_1::_Tuple3 1) _x_2_0) (select _x_2_1::_Tuple3 2)) 
analtypes._f690_690::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select _x_1::_Tuple3 1) 2) 0))
analtypes.fold_st_227 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_227 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.new_kind_134 !_x_0 !_x_1 = case _x_0 (syntax._ATypeVar atv_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax._TypeVar tv_ident_2_0 tv_info_ptr_2_1 -> case _x_1 (_Tuple2 type_var_heap_3_0 kind_heap_3_1 -> let _x_4_0 = Heap.newPtr syntax.KI_Const kind_heap_3_1, kind_info_ptr_4_1 = select _x_4_0::_Tuple2 0, ptr_and_val_4_2 = _Tuple2 tv_info_ptr_2_1 (syntax.TVI_TypeKind kind_info_ptr_4_1), ptr_and_val_4_3 = _Tuple2 kind_info_ptr_4_1 (syntax.KI_Var kind_info_ptr_4_1) in <{_Tuple2!3}> (Heap.writePtr (select ptr_and_val_4_2::_Tuple2 0) (select ptr_and_val_4_2::_Tuple2 1) type_var_heap_3_0) (Heap.writePtr (select ptr_and_val_4_3::_Tuple2 0) (select ptr_and_val_4_3::_Tuple2 1) (select _x_4_0::_Tuple2 1))) ) ) 
analtypes.fold_st_494 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_494 x_1_1 (analtypes.new_kind_134 a_1_0 st_1)) 
analtypes.new_local_kind_variables_for_universal_vars !type_vars_0 !type_var_heap_1 !as_kind_heap_2 = analtypes.fold_st_494 type_vars_0 (_Tuple2 type_var_heap_1 as_kind_heap_2)
analtypes.analTypes_173 !has_root_attr_0::B !modules_1 !form_tvs_2 !_x_3 !_x_4 = case _x_3 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> case _x_4 (_Tuple2 conds_2_0 as_2_1 -> case conds_2_0 (analtypes._Conditions con_top_var_binds_3_0 con_var_binds_3_1 -> case as_2_1 (analtypes._AnalyseState as_td_infos_4_0 as_type_var_heap_4_1 as_kind_heap_4_2 as_error_4_3 -> case (StdList.isEmpty form_tvs_2) (True -> let _x_6_0 = Heap.readPtr tv_info_ptr_1_1 as_type_var_heap_4_1, _x_6_1 = Heap.readPtr (select (select _x_6_0::_Tuple2 0)::_Tuple1 0) as_kind_heap_4_2, _x_6_2 = analtypes.skipIndirections (select _x_6_1::_Tuple2 0) (select _x_6_1::_Tuple2 1) in <{_Tuple3!7}> (select _x_6_2::_Tuple2 0) 1 (_Tuple2 conds_2_0 (update as_2_1::analtypes._AnalyseState [1:select _x_6_0::_Tuple2 1,2:select _x_6_2::_Tuple2 1]))) (False -> let _x_6_0 = Heap.readPtr tv_info_ptr_1_1 as_type_var_heap_4_1, kind_info_ptr_6_1 = select (select _x_6_0::_Tuple2 0)::_Tuple1 0, _x_6_2 = Heap.readPtr kind_info_ptr_6_1 as_kind_heap_4_2, _x_6_3 = analtypes.skipIndirections (select _x_6_2::_Tuple2 0) (select _x_6_2::_Tuple2 1) in <{_Tuple3!7}> (select _x_6_3::_Tuple2 0) 1 (_Tuple2 (update conds_2_0::analtypes._Conditions [1:_predefined._Cons (analtypes._VarBind kind_info_ptr_6_1 form_tvs_2) con_var_binds_3_1]) (update as_2_1::analtypes._AnalyseState [1:select _x_6_0::_Tuple2 1,2:select _x_6_3::_Tuple2 1]))) ) ) ) ) 
analtypes.anal_types_of_type_cons_497 has_root_attr_0::B modules_1 form_tvs_2 !_x_3 _x_4 conds_as_5 = case _x_3 (_predefined._Nil -> _Tuple2 1 conds_as_5) (_predefined._Cons type_1_0 types_1_1 -> case _x_4 (_predefined._Cons tk_2_0 tks_2_1 -> let _x_3_0::I = analtypes.analTypes_172 has_root_attr_0 modules_1 form_tvs_2 type_1_0 conds_as_5, type_props_3_1 = select _x_3_0::_Tuple3 1, _x_3_2 = select _x_3_0::_Tuple3 2, as_3_3 = select _x_3_2::_Tuple2 1, _x_3_4 = analtypes.unifyKinds (select _x_3_0::_Tuple3 0) (analtypes.kindToKindInfo tk_2_0) (analtypes._UnifyKindsInfo (select as_3_3::analtypes._AnalyseState 2) (select as_3_3::analtypes._AnalyseState 3)), _x_3_5::I = analtypes.anal_types_of_type_cons_497 has_root_attr_0 modules_1 form_tvs_2 types_1_1 tks_2_1 (_Tuple2 (select _x_3_2::_Tuple2 0) (update as_3_3::analtypes._AnalyseState [2:select _x_3_4::analtypes._UnifyKindsInfo 0,3:select _x_3_4::analtypes._UnifyKindsInfo 1])), other_type_props_3_6 = select _x_3_5::_Tuple2 0 in _Tuple2 (StdInt.bitor (StdInt.bitand (StdInt.bitand type_props_3_1 other_type_props_3_6) 1) (StdInt.bitand (StdInt.bitor type_props_3_1 other_type_props_3_6) 2)) (select _x_3_5::_Tuple2 1)) ) (_ -> StdMisc.abort (<{general.--->}> (<{StdFile.<<<;}> (<{general.<<<_7}> (<{StdFile.<<<;}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_28}>))) (<{StdFile.<<<;}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_10}>))))) "anal_types_of_type_cons (analtypes.icl)" (_Tuple2 _x_3 _x_4)))
analtypes.anal_types_of_rec_type_cons_72 has_root_attr_0::B modules_1 form_tvs_2 !_x_3 _x_4 conds_as_5 = case _x_3 (_predefined._Nil -> _Tuple2 1 conds_as_5) (_predefined._Cons type_1_0 types_1_1 -> case _x_4 (_predefined._Cons _x_2_0 tvs_2_1 -> case _x_2_0 (syntax.KindVar kind_info_ptr_3_0 -> case (analtypes.is_type_var_71 type_1_0) (True -> let _x_5_0::I = analtypes.analTypes_172 has_root_attr_0 modules_1 (_predefined._Cons kind_info_ptr_3_0 form_tvs_2) type_1_0 conds_as_5, type_props_5_1 = select _x_5_0::_Tuple3 1, _x_5_2 = select _x_5_0::_Tuple3 2, as_5_3 = select _x_5_2::_Tuple2 1, _x_5_4 = Heap.readPtr kind_info_ptr_3_0 (select as_5_3::analtypes._AnalyseState 2), _x_5_5 = analtypes.unifyKinds (select _x_5_0::_Tuple3 0) (select _x_5_4::_Tuple2 0) (analtypes._UnifyKindsInfo (select _x_5_4::_Tuple2 1) (select as_5_3::analtypes._AnalyseState 3)), _x_5_6::I = analtypes.anal_types_of_rec_type_cons_72 has_root_attr_0 modules_1 form_tvs_2 types_1_1 tvs_2_1 (_Tuple2 (select _x_5_2::_Tuple2 0) (update as_5_3::analtypes._AnalyseState [2:select _x_5_5::analtypes._UnifyKindsInfo 0,3:select _x_5_5::analtypes._UnifyKindsInfo 1])), other_type_props_5_7 = select _x_5_6::_Tuple2 0 in _Tuple2 (StdInt.bitor (StdInt.bitand (StdInt.bitand type_props_5_1 other_type_props_5_7) 1) (StdInt.bitand (StdInt.bitor type_props_5_1 other_type_props_5_7) 2)) (select _x_5_6::_Tuple2 1)) (False -> let _x_5_0::I = analtypes.analTypes_172 has_root_attr_0 modules_1 (_predefined._Cons kind_info_ptr_3_0 form_tvs_2) type_1_0 conds_as_5, type_props_5_1 = select _x_5_0::_Tuple3 1, _x_5_2 = select _x_5_0::_Tuple3 2, conds_5_3 = select _x_5_2::_Tuple2 0, as_5_4 = select _x_5_2::_Tuple2 1, _x_5_5 = Heap.readPtr kind_info_ptr_3_0 (select as_5_4::analtypes._AnalyseState 2), _x_5_6 = analtypes.unifyKinds (select _x_5_0::_Tuple3 0) (select _x_5_5::_Tuple2 0) (analtypes._UnifyKindsInfo (select _x_5_5::_Tuple2 1) (select as_5_4::analtypes._AnalyseState 3)), _x_5_7::I = analtypes.anal_types_of_rec_type_cons_72 has_root_attr_0 modules_1 form_tvs_2 types_1_1 tvs_2_1 (_Tuple2 (update conds_5_3::analtypes._Conditions [0:_predefined._Cons kind_info_ptr_3_0 (select conds_5_3::analtypes._Conditions 0)]) (update as_5_4::analtypes._AnalyseState [2:select _x_5_6::analtypes._UnifyKindsInfo 0,3:select _x_5_6::analtypes._UnifyKindsInfo 1])), other_type_props_5_8 = select _x_5_7::_Tuple2 0 in _Tuple2 (StdInt.bitor (StdInt.bitand (StdInt.bitand type_props_5_1 other_type_props_5_8) 1) (StdInt.bitand (StdInt.bitor type_props_5_1 other_type_props_5_8) 2)) (select _x_5_7::_Tuple2 1)) ) ) ) 
analtypes.analTypes_for_TA type_ident_0 !glob_module_1::I !glob_object_2::I !type_arity_3::I types_4 !has_root_attr_5::B !modules_6 !form_tvs_7 !conds_8 !as_9 = case (StdBool.not (<{StdInt.<_17}> (select (analtypes.select_241 (select (analtypes.select_265 modules_6 glob_module_1)::syntax._CommonDefs 0) glob_object_2)::syntax._TypeDef 2) type_arity_3)) (True -> let _x_2_0::I = analtypes.select_273 (_SystemArray.select_43 (select as_9::analtypes._AnalyseState 0) glob_module_1) glob_object_2, _x_2_1 = select _x_2_0::_Tuple2 0, tdi_properties_2_2 = select _x_2_1::syntax._TypeDefInfo 1 in case (<{StdInt.==_16}> (StdInt.bitand tdi_properties_2_2 4) 0) (True -> let tdi_kinds_4_0 = select _x_2_1::syntax._TypeDefInfo 0, _x_4_1 = analtypes.anal_types_of_rec_type_cons_72 has_root_attr_5 modules_6 form_tvs_7 types_4 tdi_kinds_4_0 (_Tuple2 conds_8 (select _x_2_0::_Tuple2 1)) in <{_Tuple3!7}> (analtypes.kindArrowToKindInfo (StdList.drop type_arity_3 tdi_kinds_4_0)) (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)) (False -> let tdi_kinds_4_0 = select _x_2_1::syntax._TypeDefInfo 0, _x_4_1 = analtypes.anal_types_of_type_cons_497 has_root_attr_5 modules_6 form_tvs_7 types_4 tdi_kinds_4_0 (_Tuple2 conds_8 (select _x_2_0::_Tuple2 1)) in <{_Tuple3!7}> (analtypes.kindArrowToKindInfo (StdList.drop type_arity_3 tdi_kinds_4_0)) (analtypes.condCombineTypeProperties has_root_attr_5 (select _x_4_1::_Tuple2 0) tdi_properties_2_2) (select _x_4_1::_Tuple2 1)) ) (False -> let _x_2_0 = analtypes.select_273 (_SystemArray.select_43 (select as_9::analtypes._AnalyseState 0) glob_module_1) glob_object_2, as_2_1 = select _x_2_0::_Tuple2 1 in <{_Tuple3!7}> syntax.KI_Const (select (select _x_2_0::_Tuple2 0)::syntax._TypeDefInfo 1) (_Tuple2 conds_8 (update as_2_1::analtypes._AnalyseState [3:checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) type_ident_0 analtypes.type_appl_error (select as_2_1::analtypes._AnalyseState 3)]))) 
analtypes.check_type_list_495 has_root_attr_0::B kind_var_1 modules_2 form_tvs_3 !_x_4 conds_as_5 = case _x_4 (_predefined._Nil -> _Tuple3 kind_var_1 False conds_as_5) (_predefined._Cons type_1_0 types_1_1 -> let _x_2_0 = analtypes.analTypes_172 has_root_attr_0 modules_2 form_tvs_3 type_1_0 conds_as_5, _x_2_1 = analtypes.check_type_list_495 has_root_attr_0 kind_var_1 modules_2 form_tvs_3 types_1_1 (select _x_2_0::_Tuple3 2) in _Tuple3 (syntax.KI_Arrow (select _x_2_0::_Tuple3 0) (select _x_2_1::_Tuple3 0)) (analtypes._f696_696 (select _x_2_1::_Tuple3 1) _x_2_0) (select _x_2_1::_Tuple3 2)) 
analtypes.analTypes_174 !has_root_attr_0::B !modules_1 !form_tvs_2 !_x_3 !conds_as_4 = case _x_3 (syntax.TV tv_1_0 -> analtypes.analTypes_173 has_root_attr_0 modules_1 form_tvs_2 tv_1_0 conds_as_4) (syntax.TA _x_1_0 types_1_1 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 _x_2_2 type_prop_2_3 -> case _x_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> case conds_as_4 (_Tuple2 conds_4_0 as_4_1 -> analtypes.analTypes_for_TA type_ident_2_0 glob_module_3_1 glob_object_3_0 type_arity_2_1 types_1_1 has_root_attr_0 modules_1 form_tvs_2 conds_4_0 as_4_1) ) ) ) (syntax.TAS _x_1_0 types_1_1 _x_1_2 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 _x_2_2 type_prop_2_3 -> case _x_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> case conds_as_4 (_Tuple2 conds_4_0 as_4_1 -> analtypes.analTypes_for_TA type_ident_2_0 glob_module_3_1 glob_object_3_0 type_arity_2_1 types_1_1 has_root_attr_0 modules_1 form_tvs_2 conds_4_0 as_4_1) ) ) ) (<{syntax.-->}> arg_type_1_0 res_type_1_1 -> let _x_2_0::I = analtypes.analTypes_172 has_root_attr_0 modules_1 form_tvs_2 arg_type_1_0 conds_as_4, conds_as_2_1::I = select _x_2_0::_Tuple3 2, _x_2_2 = analtypes.analTypes_172 has_root_attr_0 modules_1 form_tvs_2 res_type_1_1 conds_as_2_1, _x_2_3 = select _x_2_2::_Tuple3 2, as_2_4 = select _x_2_3::_Tuple2 1, _x_2_5 = analtypes.unifyKinds (select _x_2_2::_Tuple3 0) syntax.KI_Const (analtypes.unifyKinds (select _x_2_0::_Tuple3 0) syntax.KI_Const (analtypes._UnifyKindsInfo (select as_2_4::analtypes._AnalyseState 2) (select as_2_4::analtypes._AnalyseState 3))), res_type_props_2_6 = select _x_2_2::_Tuple3 1, arg_type_props_2_7 = select _x_2_0::_Tuple3 1 in <{_Tuple3!7}> syntax.KI_Const (<{analtypes._if;515;24_691}> has_root_attr_0 arg_type_props_2_7 res_type_props_2_6) (_Tuple2 (select _x_2_3::_Tuple2 0) (update as_2_4::analtypes._AnalyseState [2:select _x_2_5::analtypes._UnifyKindsInfo 0,3:select _x_2_5::analtypes._UnifyKindsInfo 1]))) (syntax.TArrow -> <{_Tuple3!7}> (syntax.KI_Arrow syntax.KI_Const (syntax.KI_Arrow syntax.KI_Const syntax.KI_Const)) (<{analtypes._if;520;24_692}> has_root_attr_0) conds_as_4) (syntax.TArrow1 arg_type_1_0 -> let _x_2_0::I = analtypes.analTypes_172 has_root_attr_0 modules_1 form_tvs_2 arg_type_1_0 conds_as_4, conds_as_2_1 = select _x_2_0::_Tuple3 2, as_2_2 = select conds_as_2_1::_Tuple2 1, _x_2_3 = analtypes.unifyKinds (select _x_2_0::_Tuple3 0) syntax.KI_Const (analtypes._UnifyKindsInfo (select as_2_2::analtypes._AnalyseState 2) (select as_2_2::analtypes._AnalyseState 3)), arg_type_props_2_4 = select _x_2_0::_Tuple3 1 in <{_Tuple3!7}> (syntax.KI_Arrow syntax.KI_Const syntax.KI_Const) (<{analtypes._if;527;24_693}> has_root_attr_0 arg_type_props_2_4) (_Tuple2 (select conds_as_2_1::_Tuple2 0) (update as_2_2::analtypes._AnalyseState [2:select _x_2_3::analtypes._UnifyKindsInfo 0,3:select _x_2_3::analtypes._UnifyKindsInfo 1]))) (<{syntax.:@:}> _x_1_0 types_1_1 -> case _x_1_0 (syntax.CV tv_2_0 -> let _x_3_0::I = analtypes.analTypes_173 has_root_attr_0 modules_1 form_tvs_2 tv_2_0 conds_as_4, _x_3_1 = select _x_3_0::_Tuple3 2, as_3_2 = select _x_3_1::_Tuple2 1, _x_3_3 = analtypes.freshKindVar (select as_3_2::analtypes._AnalyseState 2), kind_var_3_4 = select _x_3_3::_Tuple2 0, _x_3_5 = analtypes.check_type_list_495 has_root_attr_0 kind_var_3_4 modules_1 form_tvs_2 types_1_1 (_Tuple2 (select _x_3_1::_Tuple2 0) (update as_3_2::analtypes._AnalyseState [2:select _x_3_3::_Tuple2 1])), _x_3_6 = select _x_3_5::_Tuple3 2, as_3_7 = select _x_3_6::_Tuple2 1, _x_3_8 = analtypes.unifyKinds (select _x_3_0::_Tuple3 0) (select _x_3_5::_Tuple3 0) (analtypes._UnifyKindsInfo (select as_3_7::analtypes._AnalyseState 2) (select as_3_7::analtypes._AnalyseState 3)), cv_props_3_9 = select _x_3_0::_Tuple3 1 in <{_Tuple3!7}> kind_var_3_4 (<{analtypes._if;538;24_695}> (analtypes._f694_694 (select _x_3_5::_Tuple3 1) has_root_attr_0) cv_props_3_9) (_Tuple2 (select _x_3_6::_Tuple2 0) (update as_3_7::analtypes._AnalyseState [2:select _x_3_8::analtypes._UnifyKindsInfo 0,3:select _x_3_8::analtypes._UnifyKindsInfo 1]))) ) (syntax.TFA vars_1_0 type_1_1 -> case conds_as_4 (_Tuple2 conds_2_0 as_2_1 -> case as_2_1 (analtypes._AnalyseState as_td_infos_3_0 as_type_var_heap_3_1 as_kind_heap_3_2 as_error_3_3 -> let _x_4_0 = analtypes.new_local_kind_variables_for_universal_vars vars_1_0 as_type_var_heap_3_1 as_kind_heap_3_2 in analtypes.analTypes_174 has_root_attr_0 modules_1 form_tvs_2 type_1_1 (_Tuple2 conds_2_0 (update as_2_1::analtypes._AnalyseState [1:select _x_4_0::_Tuple2 0,2:select _x_4_0::_Tuple2 1]))) ) ) (_ -> <{_Tuple3!7}> syntax.KI_Const 1 conds_as_4)
analtypes.analTypes_172 !_x_0::B !modules_1 !form_tvs_2 !atype_3 !conds_as_4 = case atype_3 (syntax._AType at_attribute_1_0 at_type_1_1 -> analtypes.analTypes_174 (analtypes.has_root_attr_158 at_attribute_1_0) modules_1 form_tvs_2 at_type_1_1 conds_as_4) 
analtypes._f696_696::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> StdBool.not (<{StdInt.==_16}> (StdInt.bitand (select _x_1::_Tuple3 1) 2) 0))
<{analtypes._if;538;24_695}>::I !_x_0::B cv_props_1::I = case _x_0 (True -> 2) (_ -> StdInt.bitand cv_props_1 2)
analtypes._f694_694::B !_x_0::B has_root_attr_1::B = case _x_0 (True -> True) (_ -> has_root_attr_1)
<{analtypes._if;527;24_693}>::I !has_root_attr_0::B !arg_type_props_1::I = case has_root_attr_0 (True -> StdInt.bitor arg_type_props_1 2) (_ -> arg_type_props_1)
<{analtypes._if;520;24_692}>::I !has_root_attr_0::B = case has_root_attr_0 (True -> StdInt.bitor 1 2) (_ -> 1)
<{analtypes._if;515;24_691}>::I !has_root_attr_0::B !arg_type_props_1::I !res_type_props_2::I = case has_root_attr_0 (True -> StdInt.bitor (StdInt.bitand (StdInt.bitor arg_type_props_1 res_type_props_2) 2) 2) (_ -> StdInt.bitand (StdInt.bitor arg_type_props_1 res_type_props_2) 2)
analtypes.anal_types_of_type_cons_496 !<{_v<<<_0}> has_root_attr_1::B modules_2 form_tvs_3 !_x_4 _x_5 conds_as_6 = case _x_4 (_predefined._Nil -> _Tuple2 1 conds_as_6) (_predefined._Cons type_1_0 types_1_1 -> case _x_5 (_predefined._Cons tk_2_0 tks_2_1 -> let _x_3_0::I = analtypes.analTypes_172 has_root_attr_1 modules_2 form_tvs_3 type_1_0 conds_as_6, type_props_3_1 = select _x_3_0::_Tuple3 1, _x_3_2 = select _x_3_0::_Tuple3 2, as_3_3 = select _x_3_2::_Tuple2 1, _x_3_4 = analtypes.unifyKinds (select _x_3_0::_Tuple3 0) (analtypes.kindToKindInfo tk_2_0) (analtypes._UnifyKindsInfo (select as_3_3::analtypes._AnalyseState 2) (select as_3_3::analtypes._AnalyseState 3)), _x_3_5::I = analtypes.anal_types_of_type_cons_496 <{_v<<<_0}> has_root_attr_1 modules_2 form_tvs_3 types_1_1 tks_2_1 (_Tuple2 (select _x_3_2::_Tuple2 0) (update as_3_3::analtypes._AnalyseState [2:select _x_3_4::analtypes._UnifyKindsInfo 0,3:select _x_3_4::analtypes._UnifyKindsInfo 1])), other_type_props_3_6 = select _x_3_5::_Tuple2 0 in _Tuple2 (StdInt.bitor (StdInt.bitand (StdInt.bitand type_props_3_1 other_type_props_3_6) 1) (StdInt.bitand (StdInt.bitor type_props_3_1 other_type_props_3_6) 2)) (select _x_3_5::_Tuple2 1)) ) (_ -> StdMisc.abort (<{general.--->}> (<{StdFile.<<<;}> (<{general.<<<_7}> (<{StdFile.<<<;}> (<{general.<<<_13}> <{_v<<<_0}>)) (<{StdFile.<<<;}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_10}>))))) "anal_types_of_type_cons (analtypes.icl)" (_Tuple2 _x_4 _x_5)))
analtypes.anal_types_of_cons_498 modules_0 !_x_1 args_strictness_2 strictness_index_3::I conds_as_4 = case _x_1 (_predefined._Nil -> _Tuple2 1 conds_as_4) (_predefined._Cons type_1_0 types_1_1 -> let _x_2_0::I = analtypes.anal_types_of_cons_498 modules_0 types_1_1 args_strictness_2 (<{StdInt.+_6}> strictness_index_3 1) conds_as_4, conds_as_2_1::I = select _x_2_0::_Tuple2 1, _x_2_2 = analtypes.analTypes_172 False modules_0 _predefined._Nil type_1_0 conds_as_2_1, _x_2_3 = select _x_2_2::_Tuple3 2, as_2_4 = select _x_2_3::_Tuple2 1, _x_2_5 = analtypes.unifyKinds (select _x_2_2::_Tuple3 0) syntax.KI_Const (analtypes._UnifyKindsInfo (select as_2_4::analtypes._AnalyseState 2) (select as_2_4::analtypes._AnalyseState 3)), cv_props_2_6 = select _x_2_2::_Tuple3 1, other_type_props_2_7 = select _x_2_0::_Tuple2 0 in _Tuple2 (<{analtypes._if;595;24_697}> (containers.arg_is_strict strictness_index_3 args_strictness_2) cv_props_2_6 other_type_props_2_7) (_Tuple2 (select _x_2_3::_Tuple2 0) (update as_2_4::analtypes._AnalyseState [2:select _x_2_5::analtypes._UnifyKindsInfo 0,3:select _x_2_5::analtypes._UnifyKindsInfo 1]))) 
<{analtypes._if;595;24_697}>::I !_x_0::B !cv_props_1::I !other_type_props_2::I = case _x_0 (True -> StdInt.bitor (StdInt.bitand (StdInt.bitand cv_props_1 other_type_props_2) 1) (StdInt.bitand (StdInt.bitor cv_props_1 other_type_props_2) 2)) (_ -> StdInt.bitand (StdInt.bitor cv_props_1 other_type_props_2) 2)
analtypes.anal_types_of_constructor !_vArray_0 modules_1 cons_defs_2 !_x_3 !_x_4 = case _x_3 (syntax._DefinedSymbol ds_ident_1_0 ds_arity_1_1 ds_index_1_2 -> case _x_4 (_Tuple2 conds_2_0 as_2_1 -> case as_2_1 (analtypes._AnalyseState as_td_infos_3_0 as_type_var_heap_3_1 as_kind_heap_3_2 as_error_3_3 -> let _x_4_0::I = select _vArray_0::<{_SystemArray.Array;}> 3 cons_defs_2 ds_index_1_2, cons_exi_vars_4_1 = select _x_4_0::syntax._ConsDef 5, _x_4_2 = analtypes.new_local_kind_variables_76 cons_exi_vars_4_1 (_Tuple2 as_type_var_heap_3_1 as_kind_heap_3_2), cons_type_4_3 = select _x_4_0::syntax._ConsDef 1, as_type_var_heap_4_4 = select _x_4_2::_Tuple3 1, as_kind_heap_4_5 = select _x_4_2::_Tuple3 2, _x_4_6 = analtypes.anal_types_of_cons_498 modules_1 (select cons_type_4_3::syntax._SymbolType 1) (select cons_type_4_3::syntax._SymbolType 2) 0 (_Tuple2 conds_2_0 (update as_2_1::analtypes._AnalyseState [1:as_type_var_heap_4_4,2:as_kind_heap_4_5])), cons_properties_4_7 = select _x_4_6::_Tuple2 0 in _Tuple2 (<{analtypes._if;574;8_698}> (select _x_4_2::_Tuple3 0) cons_properties_4_7) (select _x_4_6::_Tuple2 1)) ) ) 
<{analtypes._if;574;8_698}>::I !_x_0::B !cons_properties_1::I = case _x_0 (True -> cons_properties_1) (_ -> StdInt.bitor cons_properties_1 2)
analtypes.analTypesOfConstructors !_vArray_0 modules_1 cons_defs_2 !_x_3 _x_4 = case _x_3 (_predefined._Cons cons_1_0 conses_1_1 -> case _x_4 (_Tuple2 conds_2_0 as_2_1 -> case as_2_1 (analtypes._AnalyseState as_td_infos_3_0 as_type_var_heap_3_1 as_kind_heap_3_2 as_error_3_3 -> let _x_4_0::I = analtypes.anal_types_of_constructor _vArray_0 modules_1 cons_defs_2 cons_1_0 (_Tuple2 conds_2_0 as_2_1), cons_properties_4_1 = select _x_4_0::_Tuple2 0, _x_4_2::I = analtypes.analTypesOfConstructors _vArray_0 modules_1 cons_defs_2 conses_1_1 (select _x_4_0::_Tuple2 1), other_properties_4_3 = select _x_4_2::_Tuple2 0 in _Tuple2 (StdInt.bitor (StdInt.bitand (StdInt.bitand cons_properties_4_1 other_properties_4_3) 1) (StdInt.bitand (StdInt.bitor cons_properties_4_1 other_properties_4_3) 2)) (select _x_4_2::_Tuple2 1)) ) ) (_predefined._Nil -> _Tuple2 1 _x_4) 
analtypes.analTypesOfConstructor !_vArray_0 modules_1 cons_defs_2 cons_3 !_x_4 = case _x_4 (_Tuple2 conds_1_0 as_1_1 -> let _x_2_0::I = analtypes.anal_types_of_constructor _vArray_0 modules_1 cons_defs_2 cons_3 (_Tuple2 conds_1_0 as_1_1), cons_properties_2_1::I = select _x_2_0::_Tuple2 0, prop2_2_2 = 1 in _Tuple2 (StdInt.bitor (StdInt.bitand (StdInt.bitand cons_properties_2_1 prop2_2_2) 1) (StdInt.bitand (StdInt.bitor cons_properties_2_1 prop2_2_2) 2)) (select _x_2_0::_Tuple2 1)) 
analtypes.anal_rhs_of_type_def_82 !_vArray_0 modules_1 com_cons_defs_2 !_x_3 conds_as_4 = case _x_3 (syntax.AlgType conses_1_0 -> analtypes.analTypesOfConstructors _vArray_0 modules_1 com_cons_defs_2 conses_1_0 conds_as_4) (syntax.RecordType _x_1_0 -> case _x_1_0 (syntax._RecordType rt_constructor_2_0 rt_fields_2_1 rt_is_boxed_record_2_2 -> analtypes.analTypesOfConstructor _vArray_0 modules_1 com_cons_defs_2 rt_constructor_2_0 conds_as_4) ) (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.analTypes_174 True modules_1 _predefined._Nil (select type_1_0::syntax._AType 1) conds_as_4, _x_2_1 = select _x_2_0::_Tuple3 2, as_2_2 = select _x_2_1::_Tuple2 1, _x_2_3 = analtypes.unifyKinds (select _x_2_0::_Tuple3 0) syntax.KI_Const (analtypes._UnifyKindsInfo (select as_2_2::analtypes._AnalyseState 2) (select as_2_2::analtypes._AnalyseState 3)) in _Tuple2 (select _x_2_0::_Tuple3 1) (_Tuple2 (select _x_2_1::_Tuple2 0) (update as_2_2::analtypes._AnalyseState [2:select _x_2_3::analtypes._UnifyKindsInfo 0,3:select _x_2_3::analtypes._UnifyKindsInfo 1]))) (syntax.NewType cons_1_0 -> analtypes.analTypesOfConstructor _vArray_0 modules_1 com_cons_defs_2 cons_1_0 conds_as_4) (syntax.ExtensibleAlgType conses_1_0 -> let _x_2_0 = analtypes.analTypesOfConstructors _vArray_0 modules_1 com_cons_defs_2 conses_1_0 conds_as_4, _x_2_1 = select _x_2_0::_Tuple2 1 in _Tuple2 (StdInt.bitand (select _x_2_0::_Tuple2 0) (StdInt.bitnot 1)) (_Tuple2 (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1))) (syntax.AlgConses conses_1_0 _x_1_1 -> let _x_2_0 = analtypes.analTypesOfConstructors _vArray_0 modules_1 com_cons_defs_2 conses_1_0 conds_as_4, _x_2_1 = select _x_2_0::_Tuple2 1 in _Tuple2 (StdInt.bitand (select _x_2_0::_Tuple2 0) (StdInt.bitnot 1)) (_Tuple2 (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1))) 
analtypes.anal_types_of_constructor_501 modules_0 cons_defs_1 !_x_2 !_x_3 = case _x_2 (syntax._DefinedSymbol ds_ident_1_0 ds_arity_1_1 ds_index_1_2 -> case _x_3 (_Tuple2 conds_2_0 as_2_1 -> case as_2_1 (analtypes._AnalyseState as_td_infos_3_0 as_type_var_heap_3_1 as_kind_heap_3_2 as_error_3_3 -> let _x_4_0::I = analtypes.select_249 cons_defs_1 ds_index_1_2, cons_exi_vars_4_1 = select _x_4_0::syntax._ConsDef 5, _x_4_2 = analtypes.new_local_kind_variables_76 cons_exi_vars_4_1 (_Tuple2 as_type_var_heap_3_1 as_kind_heap_3_2), cons_type_4_3 = select _x_4_0::syntax._ConsDef 1, as_type_var_heap_4_4 = select _x_4_2::_Tuple3 1, as_kind_heap_4_5 = select _x_4_2::_Tuple3 2, _x_4_6 = analtypes.anal_types_of_cons_498 modules_0 (select cons_type_4_3::syntax._SymbolType 1) (select cons_type_4_3::syntax._SymbolType 2) 0 (_Tuple2 conds_2_0 (update as_2_1::analtypes._AnalyseState [1:as_type_var_heap_4_4,2:as_kind_heap_4_5])), cons_properties_4_7 = select _x_4_6::_Tuple2 0 in _Tuple2 (<{analtypes._if;574;8_699}> (select _x_4_2::_Tuple3 0) cons_properties_4_7) (select _x_4_6::_Tuple2 1)) ) ) 
<{analtypes._if;574;8_699}>::I !_x_0::B !cons_properties_1::I = case _x_0 (True -> cons_properties_1) (_ -> StdInt.bitor cons_properties_1 2)
analtypes.analTypesOfConstructors_500 modules_0 cons_defs_1 !_x_2 _x_3 = case _x_2 (_predefined._Cons cons_1_0 conses_1_1 -> case _x_3 (_Tuple2 conds_2_0 as_2_1 -> case as_2_1 (analtypes._AnalyseState as_td_infos_3_0 as_type_var_heap_3_1 as_kind_heap_3_2 as_error_3_3 -> let _x_4_0::I = analtypes.anal_types_of_constructor_501 modules_0 cons_defs_1 cons_1_0 (_Tuple2 conds_2_0 as_2_1), cons_properties_4_1 = select _x_4_0::_Tuple2 0, _x_4_2::I = analtypes.analTypesOfConstructors_500 modules_0 cons_defs_1 conses_1_1 (select _x_4_0::_Tuple2 1), other_properties_4_3 = select _x_4_2::_Tuple2 0 in _Tuple2 (StdInt.bitor (StdInt.bitand (StdInt.bitand cons_properties_4_1 other_properties_4_3) 1) (StdInt.bitand (StdInt.bitor cons_properties_4_1 other_properties_4_3) 2)) (select _x_4_2::_Tuple2 1)) ) ) (_predefined._Nil -> _Tuple2 1 _x_3) 
analtypes.analTypesOfConstructor_502 modules_0 cons_defs_1 cons_2 !_x_3 = case _x_3 (_Tuple2 conds_1_0 as_1_1 -> let _x_2_0::I = analtypes.anal_types_of_constructor_501 modules_0 cons_defs_1 cons_2 (_Tuple2 conds_1_0 as_1_1), cons_properties_2_1::I = select _x_2_0::_Tuple2 0, prop2_2_2 = 1 in _Tuple2 (StdInt.bitor (StdInt.bitand (StdInt.bitand cons_properties_2_1 prop2_2_2) 1) (StdInt.bitand (StdInt.bitor cons_properties_2_1 prop2_2_2) 2)) (select _x_2_0::_Tuple2 1)) 
analtypes.anal_rhs_of_type_def_499 modules_0 com_cons_defs_1 !_x_2 conds_as_3 = case _x_2 (syntax.AlgType conses_1_0 -> analtypes.analTypesOfConstructors_500 modules_0 com_cons_defs_1 conses_1_0 conds_as_3) (syntax.RecordType _x_1_0 -> case _x_1_0 (syntax._RecordType rt_constructor_2_0 rt_fields_2_1 rt_is_boxed_record_2_2 -> analtypes.analTypesOfConstructor_502 modules_0 com_cons_defs_1 rt_constructor_2_0 conds_as_3) ) (syntax.SynType type_1_0 -> let _x_2_0 = analtypes.analTypes_174 True modules_0 _predefined._Nil (select type_1_0::syntax._AType 1) conds_as_3, _x_2_1 = select _x_2_0::_Tuple3 2, as_2_2 = select _x_2_1::_Tuple2 1, _x_2_3 = analtypes.unifyKinds (select _x_2_0::_Tuple3 0) syntax.KI_Const (analtypes._UnifyKindsInfo (select as_2_2::analtypes._AnalyseState 2) (select as_2_2::analtypes._AnalyseState 3)) in _Tuple2 (select _x_2_0::_Tuple3 1) (_Tuple2 (select _x_2_1::_Tuple2 0) (update as_2_2::analtypes._AnalyseState [2:select _x_2_3::analtypes._UnifyKindsInfo 0,3:select _x_2_3::analtypes._UnifyKindsInfo 1]))) (syntax.NewType cons_1_0 -> analtypes.analTypesOfConstructor_502 modules_0 com_cons_defs_1 cons_1_0 conds_as_3) (syntax.ExtensibleAlgType conses_1_0 -> let _x_2_0 = analtypes.analTypesOfConstructors_500 modules_0 com_cons_defs_1 conses_1_0 conds_as_3, _x_2_1 = select _x_2_0::_Tuple2 1 in _Tuple2 (StdInt.bitand (select _x_2_0::_Tuple2 0) (StdInt.bitnot 1)) (_Tuple2 (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1))) (syntax.AlgConses conses_1_0 _x_1_1 -> let _x_2_0 = analtypes.analTypesOfConstructors_500 modules_0 com_cons_defs_1 conses_1_0 conds_as_3, _x_2_1 = select _x_2_0::_Tuple2 1 in _Tuple2 (StdInt.bitand (select _x_2_0::_Tuple2 0) (StdInt.bitnot 1)) (_Tuple2 (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1))) 
analtypes.anal_type_def_101 modules_0 !gi_1 !_x_2 = case gi_1 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_2 (_Tuple3 group_properties_2_0 conds_2_1 as_2_2 -> case as_2_2 (analtypes._AnalyseState as_td_infos_3_0 as_type_var_heap_3_1 as_kind_heap_3_2 as_error_3_3 -> let _x_4_0 = analtypes.select_265 modules_0 gi_module_1_0, _x_4_1 = analtypes.select_241 (select _x_4_0::syntax._CommonDefs 0) gi_index_1_1, _x_4_2::I = analtypes.anal_rhs_of_type_def_499 modules_0 (select _x_4_0::syntax._CommonDefs 1) (select _x_4_1::syntax._TypeDef 5) (_Tuple2 conds_2_1 (update as_2_2::analtypes._AnalyseState [3:checksupport.pushErrorAdmin_32 (checksupport.newPosition (select _x_4_1::syntax._TypeDef 0) (select _x_4_1::syntax._TypeDef 7)) as_error_3_3])), type_properties_4_3 = select _x_4_2::_Tuple2 0, _x_4_4 = select _x_4_2::_Tuple2 1, as_4_5 = select _x_4_4::_Tuple2 1 in _Tuple3 (StdInt.bitor (StdInt.bitand (StdInt.bitand group_properties_2_0 type_properties_4_3) 1) (StdInt.bitand (StdInt.bitor group_properties_2_0 type_properties_4_3) 2)) (select _x_4_4::_Tuple2 0) (update as_4_5::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (select as_4_5::analtypes._AnalyseState 3)])) ) ) 
analtypes.map_st_205 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_205 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.kindInfoToKind !kind_info_0 kind_heap_1 = let _x_1_0 = analtypes.skipIndirections kind_info_0 kind_heap_1, kind_heap_1_1 = select _x_1_0::_Tuple2 1 in <{analtypes._c;387;7_701}> (select _x_1_0::_Tuple2 0) kind_heap_1_1
<{analtypes._c;387;7_701}> !_x_0 kind_heap_1 = case _x_0 (syntax.KI_Arrow x_1_0 y_1_1 -> let _x_2_0 = analtypes.kindInfoToKind x_1_0 kind_heap_1, kind_heap_2_1 = select _x_2_0::_Tuple2 1, _x_2_2 = analtypes.kindInfoToKind y_1_1 kind_heap_2_1, kind_heap_2_3 = select _x_2_2::_Tuple2 1, x_2_4 = select _x_2_0::_Tuple2 0 in <{analtypes._c;391;16_700}> (select _x_2_2::_Tuple2 0) x_2_4 kind_heap_2_3) (_ -> _Tuple2 syntax.KindConst kind_heap_1)
<{analtypes._c;391;16_700}> !_x_0 x_1 kind_heap_2 = case _x_0 (syntax.KindArrow ks_1_0 -> _Tuple2 (syntax.KindArrow (_predefined._Cons x_1 ks_1_0)) kind_heap_2) (_ -> _Tuple2 (syntax.KindArrow (_predefined._Cons x_1 _predefined._Nil)) kind_heap_2)
analtypes.retrieve_kind_83 !_x_0 !kind_heap_1 = case _x_0 (syntax.KindVar kind_info_ptr_1_0 -> let _x_2_0 = Heap.readPtr kind_info_ptr_1_0 kind_heap_1 in analtypes.kindInfoToKind (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1)) 
analtypes.map_st_503 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.retrieve_kind_83 x_1_0 s_1, _x_2_2 = analtypes.map_st_503 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.determine_kinds_102 !_vArray_0 !_vArray_1 !_x_2 !_x_3 = case _x_2 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_3 (_Tuple2 kind_heap_2_0 td_infos_2_1 -> let _x_3_0 = select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 td_infos_2_1 gi_module_1_0) gi_index_1_1, _x_3_1 = analtypes.map_st_503 (select (select _x_3_0::_Tuple2 0)::syntax._TypeDefInfo 0) kind_heap_2_0 in _Tuple2 (select _x_3_1::_Tuple2 0) (_Tuple2 (select _x_3_1::_Tuple2 1) (select _x_3_0::_Tuple2 1))) ) 
analtypes.foldr_204 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (analtypes.foldr_204 op_0 r_1 x_1_1)) 
analtypes.determine_var_bind_85 _x_0 !_x_1 kind_heap_2 = case _x_1 (syntax.KI_VarBind kind_info_ptr_1_0 -> let _x_2_0 = Heap.readPtr kind_info_ptr_1_0 kind_heap_2 in analtypes.determine_var_bind_85 kind_info_ptr_1_0 (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1)) (_ -> _Tuple2 _x_0 kind_heap_2)
analtypes.redirect_vars_84 kind_info_ptr_0 !_x_1 !kind_heap_2 = case _x_1 (_predefined._Cons var_info_ptr_1_0 var_info_ptrs_1_1 -> let _x_2_0 = Heap.readPtr var_info_ptr_1_0 kind_heap_2, kind_info_2_1 = select _x_2_0::_Tuple2 0, kind_heap_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.determine_var_bind_85 var_info_ptr_1_0 kind_info_2_1 kind_heap_2_2, var_info_ptr_2_4 = select _x_2_3::_Tuple2 0 in case (<{Heap.==_10}> kind_info_ptr_0 var_info_ptr_2_4) (True -> analtypes.redirect_vars_84 kind_info_ptr_0 var_info_ptrs_1_1 (select _x_2_3::_Tuple2 1)) (False -> analtypes.redirect_vars_84 kind_info_ptr_0 var_info_ptrs_1_1 (Heap.writePtr kind_info_ptr_0 (syntax.KI_VarBind var_info_ptr_2_4) (select _x_2_3::_Tuple2 1))) ) (_predefined._Nil -> kind_heap_2) 
analtypes.unify_var_bind_104 !_x_0 !kind_heap_1 = case _x_0 (analtypes._VarBind vb_var_1_0 vb_vars_1_1 -> let _x_2_0 = Heap.readPtr vb_var_1_0 kind_heap_1, _x_2_1 = analtypes.determine_var_bind_85 vb_var_1_0 (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1) in analtypes.redirect_vars_84 (select _x_2_1::_Tuple2 0) vb_vars_1_1 (select _x_2_1::_Tuple2 1)) 
analtypes.foldr_504 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> analtypes.unify_var_bind_104 a_1_0 (analtypes.foldr_504 r_0 x_1_1)) 
analtypes.unify_var_binds_103 !binds_0 !kind_heap_1 = analtypes.foldr_504 kind_heap_1 binds_0
analtypes.map_st_203 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_203 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.normalize_var_105 !orig_kind_info_0 !_x_1 !_x_2 = case _x_1 (syntax.KI_VarBind kind_info_ptr_1_0 -> case _x_2 (_Tuple2 kind_store_2_0 kind_heap_2_1 -> let _x_3_0 = Heap.readPtr kind_info_ptr_1_0 kind_heap_2_1 in analtypes.normalize_var_105 kind_info_ptr_1_0 (select _x_3_0::_Tuple2 0) (_Tuple2 kind_store_2_0 (select _x_3_0::_Tuple2 1))) ) (syntax.KI_NormVar var_number_1_0 -> case _x_2 (_Tuple2 kind_store_2_0 kind_heap_2_1 -> <{_Tuple2!3}> var_number_1_0 (_Tuple2 kind_store_2_0 kind_heap_2_1)) ) (_ -> case _x_2 (_Tuple2 kind_store_1_0 kind_heap_1_1 -> <{_Tuple2!3}> kind_store_1_0 (_Tuple2 (<{StdInt.+_6}> kind_store_1_0 StdInt.one_11) (Heap.writePtr orig_kind_info_0 (syntax.KI_NormVar kind_store_1_0) kind_heap_1_1))) )
analtypes.normalize_top_var_86 !kind_info_ptr_0 !_x_1 = case _x_1 (_Tuple2 kind_store_1_0 kind_heap_1_1 -> let _x_2_0 = Heap.readPtr kind_info_ptr_0 kind_heap_1_1 in analtypes.normalize_var_105 kind_info_ptr_0 (select _x_2_0::_Tuple2 0) (_Tuple2 kind_store_1_0 (select _x_2_0::_Tuple2 1))) 
analtypes.map_st_505 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.normalize_top_var_86 x_1_0 s_1, _x_2_2 = analtypes.map_st_505 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.normalize_top_vars_106 !top_vars_0 !kind_store_1::I !kind_heap_2 = analtypes.map_st_505 top_vars_0 (_Tuple2 kind_store_1 kind_heap_2)
analtypes.fold_st2_202 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (analtypes.fold_st2_202 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.is_a_top_var_89::B !<{_v==_0}> var_number_1 !_x_2 = case _x_2 (_predefined._Cons top_var_number_1_0 top_var_numbers_1_1 -> case (select <{_v==_0}>::<{StdOverloaded.==;}> 0 var_number_1 top_var_number_1_0) (True -> True) (False -> analtypes.is_a_top_var_89 <{_v==_0}> var_number_1 top_var_numbers_1_1) ) (_predefined._Nil -> False) 
analtypes.is_a_top_var_506::B var_number_0::I !_x_1 = case _x_1 (_predefined._Cons top_var_number_1_0 top_var_numbers_1_1 -> case (<{StdInt.==_16}> var_number_0 top_var_number_1_0) (True -> True) (False -> analtypes.is_a_top_var_506 var_number_0 top_var_numbers_1_1) ) (_predefined._Nil -> False) 
analtypes.determine_type_def_info_88 !_x_0 !_x_1 top_vars_2 kind_store_3::I kind_heap_4 = case _x_0 (_predefined._Cons _x_1_0 kind_vars_1_1 -> case _x_1_0 (syntax.KindVar kind_info_ptr_2_0 -> case _x_1 (_predefined._Cons kind_3_0 kinds_3_1 -> <{analtypes._c;768;15_702}> kind_3_0 kind_info_ptr_2_0 kind_store_3 kind_heap_4 top_vars_2 kind_vars_1_1 kinds_3_1) ) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> _Tuple4 _predefined._Nil _predefined._Nil kind_store_3 kind_heap_4) ) 
<{analtypes._c;768;15_702}> !kind_0 kind_info_ptr_1 kind_store_2::I kind_heap_3 top_vars_4 kind_vars_5 kinds_6 = case kind_0 (syntax.KindArrow _x_1_0 -> let _x_2_0::I = Heap.readPtr kind_info_ptr_1 kind_heap_3, kind_info_2_1 = select _x_2_0::_Tuple2 0, kind_heap_2_2 = select _x_2_0::_Tuple2 1, _x_2_3 = analtypes.normalize_var_105 kind_info_ptr_1 kind_info_2_1 (_Tuple2 kind_store_2 kind_heap_2_2), var_number_2_4 = select _x_2_3::_Tuple2 0 in case (analtypes.is_a_top_var_506 var_number_2_4 top_vars_4) (True -> let _x_4_0 = select _x_2_3::_Tuple2 1, _x_4_1 = analtypes.determine_type_def_info_88 kind_vars_5 kinds_6 top_vars_4 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1) in _Tuple4 (_predefined._Cons var_number_2_4 (select _x_4_1::_Tuple4 0)) (_predefined._Cons (<{StdInt.-_7}> (<{StdInt.~_15}> var_number_2_4) StdInt.one_11) (select _x_4_1::_Tuple4 1)) (select _x_4_1::_Tuple4 2) (select _x_4_1::_Tuple4 3)) (False -> let _x_4_0 = select _x_2_3::_Tuple2 1, _x_4_1 = analtypes.determine_type_def_info_88 kind_vars_5 kinds_6 top_vars_4 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1) in _Tuple4 (_predefined._Cons var_number_2_4 (select _x_4_1::_Tuple4 0)) (_predefined._Cons var_number_2_4 (select _x_4_1::_Tuple4 1)) (select _x_4_1::_Tuple4 2) (select _x_4_1::_Tuple4 3)) ) (_ -> let _x_1_0 = Heap.readPtr kind_info_ptr_1 kind_heap_3, _x_1_1 = analtypes.normalize_var_105 kind_info_ptr_1 (select _x_1_0::_Tuple2 0) (_Tuple2 kind_store_2 (select _x_1_0::_Tuple2 1)), _x_1_2 = select _x_1_1::_Tuple2 1, _x_1_3 = analtypes.determine_type_def_info_88 kind_vars_5 kinds_6 top_vars_4 (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1) in _Tuple4 (_predefined._Cons (select _x_1_1::_Tuple2 0) (select _x_1_3::_Tuple4 0)) (select _x_1_3::_Tuple4 1) (select _x_1_3::_Tuple4 2) (select _x_1_3::_Tuple4 3))
analtypes.is_ExtensibleAlgType_or_AlgConses_90::B !_x_0 = case _x_0 (syntax.ExtensibleAlgType _x_1_0 -> True) (syntax.AlgConses _x_1_0 _x_1_1 -> True) (_ -> False)
analtypes.isUniqueAttr::B !_x_0 = case _x_0 (syntax.TA_Unique -> True) (_ -> False)
analtypes.update_type_def_info_87 !_vArray_0 !_vArray_1 !_vArray_2 modules_3 !type_properties_4::I top_vars_5 !_x_6 updated_kinds_7 !_x_8 = case _x_6 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_8 (_Tuple4 kind_store_2_0 kind_heap_2_1 td_infos_2_2 error_2_3 -> let !td_infos_3_0 = select _vArray_1::<{_SystemArray.Array;}> 5 (select _vArray_0::<{_SystemArray.Array;}> 3 (select _x_3_1::_Tuple2 1) gi_module_1_0) gi_index_1_1 (update td_info_3_2::syntax._TypeDefInfo [0:updated_kinds_7,1:type_properties_4,4:select _x_3_4::_Tuple4 0,5:select _x_3_4::_Tuple4 1]), _x_3_1 = select _vArray_1::<{_SystemArray.Array;}> 3 (select _vArray_0::<{_SystemArray.Array;}> 3 td_infos_2_2 gi_module_1_0) gi_index_1_1, td_info_3_2 = select _x_3_1::_Tuple2 0, tdi_kinds_3_3 = select td_info_3_2::syntax._TypeDefInfo 0, _x_3_4 = analtypes.determine_type_def_info_88 tdi_kinds_3_3 updated_kinds_7 top_vars_5 kind_store_2_0 kind_heap_2_1 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand type_properties_4 2) 0)) (True -> let type_def_5_0 = analtypes.select_241 (select (select _vArray_2::<{_SystemArray.Array;}> 3 modules_3 gi_module_1_0)::syntax._CommonDefs 0) gi_index_1_1 in case (case (StdBool.not (analtypes.isUniqueAttr (select type_def_5_0::syntax._TypeDef 6))) (True -> analtypes.is_ExtensibleAlgType_or_AlgConses_90 (select type_def_5_0::syntax._TypeDef 5)) (False -> False) ) (True -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 (checksupport.checkErrorWithPosition (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (select type_def_5_0::syntax._TypeDef 0) (select type_def_5_0::syntax._TypeDef 7) "a non unique extensible algebraic data type must be coercible" error_2_3)) (False -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 error_2_3) ) (False -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 error_2_3) ) ) 
analtypes.fold_st2_507 !_vArray_0 !_vArray_1 !_vArray_2 modules_3 type_properties_4::I top_vars_5 !_x_6 !_x_7 !st_8 = case _x_6 (_predefined._Cons x_1_0 xs_1_1 -> case _x_7 (_predefined._Cons y_2_0 ys_2_1 -> analtypes.update_type_def_info_87 _vArray_0 _vArray_1 _vArray_2 modules_3 type_properties_4 top_vars_5 x_1_0 y_2_0 (analtypes.fold_st2_507 _vArray_0 _vArray_1 _vArray_2 modules_3 type_properties_4 top_vars_5 xs_1_1 ys_2_1 st_8)) ) (_predefined._Nil -> case _x_7 (_predefined._Nil -> st_8) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_7 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.update_type_def_infos_107 !_vArray_0 !_vArray_1 !_vArray_2 modules_3 type_properties_4::I top_vars_5 group_6 updated_kinds_of_group_7 kind_store_8::I kind_heap_9 td_infos_10 error_11 = let _x_1_0 = analtypes.fold_st2_507 _vArray_0 _vArray_1 _vArray_2 modules_3 (StdInt.bitor type_properties_4 4) top_vars_5 group_6 updated_kinds_of_group_7 (_Tuple4 kind_store_8 kind_heap_9 td_infos_10 error_11) in _Tuple3 (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)
analtypes.check_coercibility_93::B !dcl_props_0::I icl_props_1::I = case (<{StdInt.<_17}> 0 (StdInt.bitand dcl_props_0 2)) (True -> True) (False -> <{StdInt.==_16}> (StdInt.bitand icl_props_1 2) 0) 
analtypes.check_hyperstrictness_94::B !dcl_props_0::I icl_props_1::I = case (<{StdInt.==_16}> (StdInt.bitand dcl_props_0 1) 0) (True -> True) (False -> <{StdInt.<_17}> 0 (StdInt.bitand icl_props_1 1)) 
<{analtypes.c;819;42_92}> !g_l_0 = <{analtypes.g_c1;819;47_703}> g_l_0
<{analtypes.g_c1;819;47_703}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> _predefined._Cons (typeproperties._SignClassification (StdInt.bitnot 0) (StdInt.bitnot 0)) (<{analtypes.c;819;42_92}> g_t_1_1)) (_ -> _predefined._Nil)
analtypes.check_positive_sign_95 !mod_index_0::I !type_index_1::I !modules_2 !td_args_3 !type_var_heap_4 !type_def_infos_5 error_6 = let top_signs_1_0 = <{analtypes.c;819;42_92}> td_args_3, _x_1_1 = analunitypes.signClassification type_index_1 mod_index_0 top_signs_1_0 modules_2 type_var_heap_4 type_def_infos_5 in case (<{StdInt.==_16}> (select (select _x_1_1::_Tuple3 0)::typeproperties._SignClassification 1) 0) (True -> _Tuple3 (select _x_1_1::_Tuple3 1) (select _x_1_1::_Tuple3 2) error_6) (False -> _Tuple3 (select _x_1_1::_Tuple3 1) (select _x_1_1::_Tuple3 2) (checksupport.checkError (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) "signs of abstract type variables should be positive" "" error_6)) 
analtypes.check_abstract_type_91 gi_module_0::I gi_index_1::I modules_2 properties_3::I !spec_properties_4::I td_ident_5 td_args_6 td_pos_7 !as_8 = case (analtypes.check_coercibility_93 spec_properties_4 properties_3) (True -> case (analtypes.check_hyperstrictness_94 spec_properties_4 properties_3) (True -> case (<{StdInt.==_16}> (StdInt.bitand spec_properties_4 2) 0) (True -> let _x_4_0 = analtypes.check_positive_sign_95 gi_module_0 gi_index_1 modules_2 td_args_6 (select as_8::analtypes._AnalyseState 1) (select as_8::analtypes._AnalyseState 0) (checksupport.pushErrorAdmin_32 (checksupport.newPosition td_ident_5 td_pos_7) (select as_8::analtypes._AnalyseState 3)) in update as_8::analtypes._AnalyseState [0:select _x_4_0::_Tuple3 1,1:select _x_4_0::_Tuple3 0,3:checksupport.popErrorAdmin_31 (select _x_4_0::_Tuple3 2)]) (False -> update as_8::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (checksupport.pushErrorAdmin_32 (checksupport.newPosition td_ident_5 td_pos_7) (select as_8::analtypes._AnalyseState 3))]) ) (False -> update as_8::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (checksupport.checkError (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) "abstract type as defined in the implementation module is not hyperstrict" "" (checksupport.pushErrorAdmin_32 (checksupport.newPosition td_ident_5 td_pos_7) (select as_8::analtypes._AnalyseState 3)))]) ) (False -> update as_8::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (checksupport.checkError (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) "abstract type as defined in the implementation module is not coercible" "" (checksupport.pushErrorAdmin_32 (checksupport.newPosition td_ident_5 td_pos_7) (select as_8::analtypes._AnalyseState 3)))]) 
analtypes.check_dcl_properties_108 !_vArray_0 modules_1 dcl_types_2 !dcl_mod_index_3::I properties_4::I !_x_5 !as_6 = case _x_5 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case (case (<{StdInt.==_16}> gi_module_1_0 dcl_mod_index_3) (True -> <{StdInt.<_17}> gi_index_1_1 (select _vArray_0::<{_SystemArray.Array;}> 4 dcl_types_2)) (False -> False) ) (True -> let _x_3_0 = select _vArray_0::<{_SystemArray.Array;}> 3 dcl_types_2 gi_index_1_1, td_pos_3_1 = select _x_3_0::syntax._TypeDef 7, td_args_3_2 = select _x_3_0::syntax._TypeDef 3, td_ident_3_3 = select _x_3_0::syntax._TypeDef 0 in <{analtypes._c;790;15_704}> (select _x_3_0::syntax._TypeDef 5) gi_module_1_0 gi_index_1_1 modules_1 properties_4 td_ident_3_3 td_args_3_2 td_pos_3_1 as_6) (False -> as_6) ) 
<{analtypes._c;790;15_704}> !_x_0 gi_module_1::I gi_index_2::I modules_3 properties_4::I td_ident_5 td_args_6 td_pos_7 !as_8 = case _x_0 (syntax.AbstractType spec_properties_1_0 -> analtypes.check_abstract_type_91 gi_module_1 gi_index_2 modules_3 properties_4 spec_properties_1_0 td_ident_5 td_args_6 td_pos_7 as_8) (syntax.AbstractSynType spec_properties_1_0 _x_1_1 -> analtypes.check_abstract_type_91 gi_module_1 gi_index_2 modules_3 properties_4 spec_properties_1_0 td_ident_5 td_args_6 td_pos_7 as_8) (_ -> as_8)
analtypes.init_type_def_infos_508 !_vArray_0 !_vArray_1 !modules_2 !gi_3 !_x_4 = case gi_3 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_4 (_Tuple4 is_abstract_type_2_0 type_def_infos_2_1 as_type_var_heap_2_2 kind_heap_2_3 -> let _x_3_0 = analtypes.select_241 (select (analtypes.select_265 modules_2 gi_module_1_0)::syntax._CommonDefs 0) gi_index_1_1, td_args_3_1 = select _x_3_0::syntax._TypeDef 3 in <{analtypes._c;630;11_705}> (select _x_3_0::syntax._TypeDef 5) _vArray_0 _vArray_1 td_args_3_1 gi_module_1_0 gi_index_1_1 type_def_infos_2_1 as_type_var_heap_2_2 kind_heap_2_3 is_abstract_type_2_0) ) 
<{analtypes._c;630;11_705}> !_x_0 _vArray_1 _vArray_2 td_args_3 gi_module_4::I gi_index_5::I type_def_infos_6 as_type_var_heap_7 kind_heap_8 is_abstract_type_9::B = case _x_0 (syntax.AbstractType properties_1_0 -> _Tuple4 True (analtypes.init_abstract_type_def_98 _vArray_1 _vArray_2 properties_1_0 td_args_3 gi_module_4 gi_index_5 type_def_infos_6) as_type_var_heap_7 kind_heap_8) (syntax.AbstractSynType properties_1_0 _x_1_1 -> _Tuple4 True (analtypes.init_abstract_type_def_98 _vArray_1 _vArray_2 properties_1_0 td_args_3 gi_module_4 gi_index_5 type_def_infos_6) as_type_var_heap_7 kind_heap_8) (syntax.ExtensibleAlgType _x_1_0 -> let _x_2_0 = select _vArray_2::<{_SystemArray.Array;}> 3 (select _vArray_1::<{_SystemArray.Array;}> 3 type_def_infos_6 gi_module_4) gi_index_5, _x_2_1 = analtypes.newKindConstVariables_100 td_args_3 (_Tuple2 as_type_var_heap_7 kind_heap_8), _x_2_2 = select _x_2_1::_Tuple2 1 in _Tuple4 is_abstract_type_9 (select _vArray_2::<{_SystemArray.Array;}> 5 (select _vArray_1::<{_SystemArray.Array;}> 3 (select _x_2_0::_Tuple2 1) gi_module_4) gi_index_5 (update (select _x_2_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_2_1::_Tuple2 0])) (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1)) (syntax.AlgConses _x_1_0 _x_1_1 -> let _x_2_0 = select _vArray_2::<{_SystemArray.Array;}> 3 (select _vArray_1::<{_SystemArray.Array;}> 3 type_def_infos_6 gi_module_4) gi_index_5, _x_2_1 = analtypes.newKindConstVariables_100 td_args_3 (_Tuple2 as_type_var_heap_7 kind_heap_8), _x_2_2 = select _x_2_1::_Tuple2 1 in _Tuple4 is_abstract_type_9 (select _vArray_2::<{_SystemArray.Array;}> 5 (select _vArray_1::<{_SystemArray.Array;}> 3 (select _x_2_0::_Tuple2 1) gi_module_4) gi_index_5 (update (select _x_2_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_2_1::_Tuple2 0])) (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1)) (_ -> let _x_1_0 = select _vArray_2::<{_SystemArray.Array;}> 3 (select _vArray_1::<{_SystemArray.Array;}> 3 type_def_infos_6 gi_module_4) gi_index_5, _x_1_1 = analtypes.newKindVariables_99 td_args_3 (_Tuple2 as_type_var_heap_7 kind_heap_8), _x_1_2 = select _x_1_1::_Tuple2 1 in _Tuple4 is_abstract_type_9 (select _vArray_2::<{_SystemArray.Array;}> 5 (select _vArray_1::<{_SystemArray.Array;}> 3 (select _x_1_0::_Tuple2 1) gi_module_4) gi_index_5 (update (select _x_1_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_1_1::_Tuple2 0])) (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1))
analtypes.fold_st_509 !_vArray_0 !_vArray_1 modules_2 !_x_3 !st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_509 _vArray_0 _vArray_1 modules_2 x_1_1 (analtypes.init_type_def_infos_508 _vArray_0 _vArray_1 modules_2 a_1_0 st_4)) 
analtypes.fold_st_510 modules_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_510 modules_0 x_1_1 (analtypes.anal_type_def_101 modules_0 a_1_0 st_2)) 
analtypes.determine_kinds_511 !_vArray_0 !_x_1 !_x_2 = case _x_1 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_2 (_Tuple2 kind_heap_2_0 td_infos_2_1 -> let _x_3_0 = select _vArray_0::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 td_infos_2_1 gi_module_1_0) gi_index_1_1, _x_3_1 = analtypes.map_st_503 (select (select _x_3_0::_Tuple2 0)::syntax._TypeDefInfo 0) kind_heap_2_0 in _Tuple2 (select _x_3_1::_Tuple2 0) (_Tuple2 (select _x_3_1::_Tuple2 1) (select _x_3_0::_Tuple2 1))) ) 
analtypes.map_st_512 !_vArray_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.determine_kinds_511 _vArray_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_512 _vArray_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.update_type_def_info_515 !_vArray_0 !_vArray_1 modules_2 !type_properties_3::I top_vars_4 !_x_5 updated_kinds_6 !_x_7 = case _x_5 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_7 (_Tuple4 kind_store_2_0 kind_heap_2_1 td_infos_2_2 error_2_3 -> let !td_infos_3_0 = select _vArray_0::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_3_1::_Tuple2 1) gi_module_1_0) gi_index_1_1 (update td_info_3_2::syntax._TypeDefInfo [0:updated_kinds_6,1:type_properties_3,4:select _x_3_4::_Tuple4 0,5:select _x_3_4::_Tuple4 1]), _x_3_1 = select _vArray_0::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 td_infos_2_2 gi_module_1_0) gi_index_1_1, td_info_3_2 = select _x_3_1::_Tuple2 0, tdi_kinds_3_3 = select td_info_3_2::syntax._TypeDefInfo 0, _x_3_4 = analtypes.determine_type_def_info_88 tdi_kinds_3_3 updated_kinds_6 top_vars_4 kind_store_2_0 kind_heap_2_1 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand type_properties_3 2) 0)) (True -> let type_def_5_0 = analtypes.select_241 (select (select _vArray_1::<{_SystemArray.Array;}> 3 modules_2 gi_module_1_0)::syntax._CommonDefs 0) gi_index_1_1 in case (case (StdBool.not (analtypes.isUniqueAttr (select type_def_5_0::syntax._TypeDef 6))) (True -> analtypes.is_ExtensibleAlgType_or_AlgConses_90 (select type_def_5_0::syntax._TypeDef 5)) (False -> False) ) (True -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 (checksupport.checkErrorWithPosition (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (select type_def_5_0::syntax._TypeDef 0) (select type_def_5_0::syntax._TypeDef 7) "a non unique extensible algebraic data type must be coercible" error_2_3)) (False -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 error_2_3) ) (False -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 error_2_3) ) ) 
analtypes.fold_st2_514 !_vArray_0 !_vArray_1 modules_2 type_properties_3::I top_vars_4 !_x_5 !_x_6 !st_7 = case _x_5 (_predefined._Cons x_1_0 xs_1_1 -> case _x_6 (_predefined._Cons y_2_0 ys_2_1 -> analtypes.update_type_def_info_515 _vArray_0 _vArray_1 modules_2 type_properties_3 top_vars_4 x_1_0 y_2_0 (analtypes.fold_st2_514 _vArray_0 _vArray_1 modules_2 type_properties_3 top_vars_4 xs_1_1 ys_2_1 st_7)) ) (_predefined._Nil -> case _x_6 (_predefined._Nil -> st_7) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_6 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.update_type_def_infos_513 !_vArray_0 !_vArray_1 modules_2 type_properties_3::I top_vars_4 group_5 updated_kinds_of_group_6 kind_store_7::I kind_heap_8 td_infos_9 error_10 = let _x_1_0 = analtypes.fold_st2_514 _vArray_0 _vArray_1 modules_2 (StdInt.bitor type_properties_3 4) top_vars_4 group_5 updated_kinds_of_group_6 (_Tuple4 kind_store_7 kind_heap_8 td_infos_9 error_10) in _Tuple3 (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)
analtypes.fold_st_516 !_vArray_0 modules_1 dcl_types_2 dcl_mod_index_3::I properties_4::I !_x_5 !st_6 = case _x_5 (_predefined._Nil -> st_6) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_516 _vArray_0 modules_1 dcl_types_2 dcl_mod_index_3 properties_4 x_1_1 (analtypes.check_dcl_properties_108 _vArray_0 modules_1 dcl_types_2 dcl_mod_index_3 properties_4 a_1_0 st_6)) 
analtypes.init_abstract_type_def_519 !_vArray_0 properties_1::I td_args_2 !gi_module_3::I !gi_index_4::I !type_def_infos_5 = let _x_1_0 = select _vArray_0::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 type_def_infos_5 gi_module_3) gi_index_4 in select _vArray_0::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_1_0::_Tuple2 1) gi_module_3) gi_index_4 (update (select _x_1_0::_Tuple2 0)::syntax._TypeDefInfo [0:<{analtypes.c;649;53_79}> td_args_2,1:StdInt.bitor properties_1 4,4:<{analtypes.c;650;66_490}> td_args_2 0])
analtypes.init_type_def_infos_518 !_vArray_0 !modules_1 !gi_2 !_x_3 = case gi_2 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_3 (_Tuple4 is_abstract_type_2_0 type_def_infos_2_1 as_type_var_heap_2_2 kind_heap_2_3 -> let _x_3_0 = analtypes.select_241 (select (analtypes.select_265 modules_1 gi_module_1_0)::syntax._CommonDefs 0) gi_index_1_1, td_args_3_1 = select _x_3_0::syntax._TypeDef 3 in <{analtypes._c;630;11_706}> (select _x_3_0::syntax._TypeDef 5) _vArray_0 td_args_3_1 gi_module_1_0 gi_index_1_1 type_def_infos_2_1 as_type_var_heap_2_2 kind_heap_2_3 is_abstract_type_2_0) ) 
<{analtypes._c;630;11_706}> !_x_0 _vArray_1 td_args_2 gi_module_3::I gi_index_4::I type_def_infos_5 as_type_var_heap_6 kind_heap_7 is_abstract_type_8::B = case _x_0 (syntax.AbstractType properties_1_0 -> _Tuple4 True (analtypes.init_abstract_type_def_519 _vArray_1 properties_1_0 td_args_2 gi_module_3 gi_index_4 type_def_infos_5) as_type_var_heap_6 kind_heap_7) (syntax.AbstractSynType properties_1_0 _x_1_1 -> _Tuple4 True (analtypes.init_abstract_type_def_519 _vArray_1 properties_1_0 td_args_2 gi_module_3 gi_index_4 type_def_infos_5) as_type_var_heap_6 kind_heap_7) (syntax.ExtensibleAlgType _x_1_0 -> let _x_2_0 = select _vArray_1::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 type_def_infos_5 gi_module_3) gi_index_4, _x_2_1 = analtypes.newKindConstVariables_100 td_args_2 (_Tuple2 as_type_var_heap_6 kind_heap_7), _x_2_2 = select _x_2_1::_Tuple2 1 in _Tuple4 is_abstract_type_8 (select _vArray_1::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_2_0::_Tuple2 1) gi_module_3) gi_index_4 (update (select _x_2_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_2_1::_Tuple2 0])) (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1)) (syntax.AlgConses _x_1_0 _x_1_1 -> let _x_2_0 = select _vArray_1::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 type_def_infos_5 gi_module_3) gi_index_4, _x_2_1 = analtypes.newKindConstVariables_100 td_args_2 (_Tuple2 as_type_var_heap_6 kind_heap_7), _x_2_2 = select _x_2_1::_Tuple2 1 in _Tuple4 is_abstract_type_8 (select _vArray_1::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_2_0::_Tuple2 1) gi_module_3) gi_index_4 (update (select _x_2_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_2_1::_Tuple2 0])) (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1)) (_ -> let _x_1_0 = select _vArray_1::<{_SystemArray.Array;}> 3 (_SystemArray.select_43 type_def_infos_5 gi_module_3) gi_index_4, _x_1_1 = analtypes.newKindVariables_99 td_args_2 (_Tuple2 as_type_var_heap_6 kind_heap_7), _x_1_2 = select _x_1_1::_Tuple2 1 in _Tuple4 is_abstract_type_8 (select _vArray_1::<{_SystemArray.Array;}> 5 (_SystemArray.select_43 (select _x_1_0::_Tuple2 1) gi_module_3) gi_index_4 (update (select _x_1_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_1_1::_Tuple2 0])) (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1))
analtypes.fold_st_517 !_vArray_0 modules_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_517 _vArray_0 modules_1 x_1_1 (analtypes.init_type_def_infos_518 _vArray_0 modules_1 a_1_0 st_3)) 
analtypes.determine_kinds_521 !_x_0 !_x_1 = case _x_0 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_1 (_Tuple2 kind_heap_2_0 td_infos_2_1 -> let _x_3_0 = analtypes.select_273 (_SystemArray.select_43 td_infos_2_1 gi_module_1_0) gi_index_1_1, _x_3_1 = analtypes.map_st_503 (select (select _x_3_0::_Tuple2 0)::syntax._TypeDefInfo 0) kind_heap_2_0 in _Tuple2 (select _x_3_1::_Tuple2 0) (_Tuple2 (select _x_3_1::_Tuple2 1) (select _x_3_0::_Tuple2 1))) ) 
analtypes.map_st_520 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.determine_kinds_521 x_1_0 s_1, _x_2_2 = analtypes.map_st_520 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.update_type_def_info_524 !_vArray_0 modules_1 !type_properties_2::I top_vars_3 !_x_4 !updated_kinds_5 !_x_6 = case _x_4 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_6 (_Tuple4 kind_store_2_0 kind_heap_2_1 td_infos_2_2 error_2_3 -> let !td_infos_3_0 = analtypes.update_275 (_SystemArray.select_43 (select _x_3_1::_Tuple2 1) gi_module_1_0) gi_index_1_1 (update td_info_3_2::syntax._TypeDefInfo [0:updated_kinds_5,1:type_properties_2,4:select _x_3_4::_Tuple4 0,5:select _x_3_4::_Tuple4 1]), _x_3_1 = analtypes.select_273 (_SystemArray.select_43 td_infos_2_2 gi_module_1_0) gi_index_1_1, td_info_3_2 = select _x_3_1::_Tuple2 0, tdi_kinds_3_3 = select td_info_3_2::syntax._TypeDefInfo 0, _x_3_4 = analtypes.determine_type_def_info_88 tdi_kinds_3_3 updated_kinds_5 top_vars_3 kind_store_2_0 kind_heap_2_1 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand type_properties_2 2) 0)) (True -> let type_def_5_0 = analtypes.select_241 (select (select _vArray_0::<{_SystemArray.Array;}> 3 modules_1 gi_module_1_0)::syntax._CommonDefs 0) gi_index_1_1 in case (case (StdBool.not (analtypes.isUniqueAttr (select type_def_5_0::syntax._TypeDef 6))) (True -> analtypes.is_ExtensibleAlgType_or_AlgConses_90 (select type_def_5_0::syntax._TypeDef 5)) (False -> False) ) (True -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 (checksupport.checkErrorWithPosition (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (select type_def_5_0::syntax._TypeDef 0) (select type_def_5_0::syntax._TypeDef 7) "a non unique extensible algebraic data type must be coercible" error_2_3)) (False -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 error_2_3) ) (False -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 error_2_3) ) ) 
analtypes.fold_st2_523 !_vArray_0 modules_1 type_properties_2::I top_vars_3 !_x_4 !_x_5 !st_6 = case _x_4 (_predefined._Cons x_1_0 xs_1_1 -> case _x_5 (_predefined._Cons y_2_0 ys_2_1 -> analtypes.update_type_def_info_524 _vArray_0 modules_1 type_properties_2 top_vars_3 x_1_0 y_2_0 (analtypes.fold_st2_523 _vArray_0 modules_1 type_properties_2 top_vars_3 xs_1_1 ys_2_1 st_6)) ) (_predefined._Nil -> case _x_5 (_predefined._Nil -> st_6) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_5 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.update_type_def_infos_522 !_vArray_0 modules_1 type_properties_2::I top_vars_3 group_4 updated_kinds_of_group_5 kind_store_6::I kind_heap_7 td_infos_8 error_9 = let _x_1_0 = analtypes.fold_st2_523 _vArray_0 modules_1 (StdInt.bitor type_properties_2 4) top_vars_3 group_4 updated_kinds_of_group_5 (_Tuple4 kind_store_6 kind_heap_7 td_infos_8 error_9) in _Tuple3 (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)
analtypes.init_abstract_type_def_527 !properties_0::I !td_args_1 !gi_module_2::I !gi_index_3::I !type_def_infos_4 = let _x_1_0 = analtypes.select_273 (_SystemArray.select_43 type_def_infos_4 gi_module_2) gi_index_3 in analtypes.update_275 (_SystemArray.select_43 (select _x_1_0::_Tuple2 1) gi_module_2) gi_index_3 (update (select _x_1_0::_Tuple2 0)::syntax._TypeDefInfo [0:<{analtypes.c;649;53_79}> td_args_1,1:StdInt.bitor properties_0 4,4:<{analtypes.c;650;66_490}> td_args_1 0])
analtypes.init_type_def_infos_526 !modules_0 !gi_1 !_x_2 = case gi_1 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_2 (_Tuple4 is_abstract_type_2_0 type_def_infos_2_1 as_type_var_heap_2_2 kind_heap_2_3 -> let _x_3_0 = analtypes.select_241 (select (analtypes.select_265 modules_0 gi_module_1_0)::syntax._CommonDefs 0) gi_index_1_1, td_args_3_1 = select _x_3_0::syntax._TypeDef 3 in <{analtypes._c;630;11_707}> (select _x_3_0::syntax._TypeDef 5) td_args_3_1 gi_module_1_0 gi_index_1_1 type_def_infos_2_1 as_type_var_heap_2_2 kind_heap_2_3 is_abstract_type_2_0) ) 
<{analtypes._c;630;11_707}> !_x_0 td_args_1 gi_module_2::I gi_index_3::I type_def_infos_4 as_type_var_heap_5 kind_heap_6 is_abstract_type_7::B = case _x_0 (syntax.AbstractType properties_1_0 -> _Tuple4 True (analtypes.init_abstract_type_def_527 properties_1_0 td_args_1 gi_module_2 gi_index_3 type_def_infos_4) as_type_var_heap_5 kind_heap_6) (syntax.AbstractSynType properties_1_0 _x_1_1 -> _Tuple4 True (analtypes.init_abstract_type_def_527 properties_1_0 td_args_1 gi_module_2 gi_index_3 type_def_infos_4) as_type_var_heap_5 kind_heap_6) (syntax.ExtensibleAlgType _x_1_0 -> let _x_2_0 = analtypes.select_273 (_SystemArray.select_43 type_def_infos_4 gi_module_2) gi_index_3, _x_2_1 = analtypes.newKindConstVariables_100 td_args_1 (_Tuple2 as_type_var_heap_5 kind_heap_6), _x_2_2 = select _x_2_1::_Tuple2 1 in _Tuple4 is_abstract_type_7 (analtypes.update_275 (_SystemArray.select_43 (select _x_2_0::_Tuple2 1) gi_module_2) gi_index_3 (update (select _x_2_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_2_1::_Tuple2 0])) (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1)) (syntax.AlgConses _x_1_0 _x_1_1 -> let _x_2_0 = analtypes.select_273 (_SystemArray.select_43 type_def_infos_4 gi_module_2) gi_index_3, _x_2_1 = analtypes.newKindConstVariables_100 td_args_1 (_Tuple2 as_type_var_heap_5 kind_heap_6), _x_2_2 = select _x_2_1::_Tuple2 1 in _Tuple4 is_abstract_type_7 (analtypes.update_275 (_SystemArray.select_43 (select _x_2_0::_Tuple2 1) gi_module_2) gi_index_3 (update (select _x_2_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_2_1::_Tuple2 0])) (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1)) (_ -> let _x_1_0 = analtypes.select_273 (_SystemArray.select_43 type_def_infos_4 gi_module_2) gi_index_3, _x_1_1 = analtypes.newKindVariables_99 td_args_1 (_Tuple2 as_type_var_heap_5 kind_heap_6), _x_1_2 = select _x_1_1::_Tuple2 1 in _Tuple4 is_abstract_type_7 (analtypes.update_275 (_SystemArray.select_43 (select _x_1_0::_Tuple2 1) gi_module_2) gi_index_3 (update (select _x_1_0::_Tuple2 0)::syntax._TypeDefInfo [0:select _x_1_1::_Tuple2 0])) (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1))
analtypes.fold_st_525 modules_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_525 modules_0 x_1_1 (analtypes.init_type_def_infos_526 modules_0 a_1_0 st_2)) 
analtypes.update_type_def_info_530 modules_0 !type_properties_1::I top_vars_2 !_x_3 !updated_kinds_4 !_x_5 = case _x_3 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_5 (_Tuple4 kind_store_2_0 kind_heap_2_1 td_infos_2_2 error_2_3 -> let !td_infos_3_0 = analtypes.update_275 (_SystemArray.select_43 (select _x_3_1::_Tuple2 1) gi_module_1_0) gi_index_1_1 (update td_info_3_2::syntax._TypeDefInfo [0:updated_kinds_4,1:type_properties_1,4:select _x_3_4::_Tuple4 0,5:select _x_3_4::_Tuple4 1]), _x_3_1 = analtypes.select_273 (_SystemArray.select_43 td_infos_2_2 gi_module_1_0) gi_index_1_1, td_info_3_2 = select _x_3_1::_Tuple2 0, tdi_kinds_3_3 = select td_info_3_2::syntax._TypeDefInfo 0, _x_3_4 = analtypes.determine_type_def_info_88 tdi_kinds_3_3 updated_kinds_4 top_vars_2 kind_store_2_0 kind_heap_2_1 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand type_properties_1 2) 0)) (True -> let type_def_5_0 = analtypes.select_241 (select (analtypes.select_265 modules_0 gi_module_1_0)::syntax._CommonDefs 0) gi_index_1_1 in case (case (StdBool.not (analtypes.isUniqueAttr (select type_def_5_0::syntax._TypeDef 6))) (True -> analtypes.is_ExtensibleAlgType_or_AlgConses_90 (select type_def_5_0::syntax._TypeDef 5)) (False -> False) ) (True -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 (checksupport.checkErrorWithPosition (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (select type_def_5_0::syntax._TypeDef 0) (select type_def_5_0::syntax._TypeDef 7) "a non unique extensible algebraic data type must be coercible" error_2_3)) (False -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 error_2_3) ) (False -> _Tuple4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) td_infos_3_0 error_2_3) ) ) 
analtypes.fold_st2_529 modules_0 type_properties_1::I top_vars_2 !_x_3 !_x_4 !st_5 = case _x_3 (_predefined._Cons x_1_0 xs_1_1 -> case _x_4 (_predefined._Cons y_2_0 ys_2_1 -> analtypes.update_type_def_info_530 modules_0 type_properties_1 top_vars_2 x_1_0 y_2_0 (analtypes.fold_st2_529 modules_0 type_properties_1 top_vars_2 xs_1_1 ys_2_1 st_5)) ) (_predefined._Nil -> case _x_4 (_predefined._Nil -> st_5) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_4 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.update_type_def_infos_528 modules_0 type_properties_1::I top_vars_2 group_3 updated_kinds_of_group_4 kind_store_5::I kind_heap_6 td_infos_7 error_8 = let _x_1_0 = analtypes.fold_st2_529 modules_0 (StdInt.bitor type_properties_1 4) top_vars_2 group_3 updated_kinds_of_group_4 (_Tuple4 kind_store_5 kind_heap_6 td_infos_7 error_8) in _Tuple3 (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)
analtypes.anal_type_defs_in_group_96 !_vArray_0 dcl_types_1 dcl_mod_index_2::I modules_3 !group_4 !as_5 = case as_5 (analtypes._AnalyseState as_td_infos_1_0 as_type_var_heap_1_1 as_kind_heap_1_2 as_error_1_3 -> let _x_2_0 = analtypes.fold_st_525 modules_3 group_4 (_Tuple4 False as_td_infos_1_0 as_type_var_heap_1_1 as_kind_heap_1_2) in case (select _x_2_0::_Tuple4 0) (True -> update as_5::analtypes._AnalyseState [0:select _x_2_0::_Tuple4 1,1:select _x_2_0::_Tuple4 2,2:select _x_2_0::_Tuple4 3]) (False -> let _x_4_0 = analtypes.fold_st_510 modules_3 group_4 (_Tuple3 1 (analtypes._Conditions _predefined._Nil _predefined._Nil) (update as_5::analtypes._AnalyseState [0:select _x_2_0::_Tuple4 1,1:select _x_2_0::_Tuple4 2,2:select _x_2_0::_Tuple4 3])), type_properties_4_1 = select _x_4_0::_Tuple3 0, as_4_2 = select _x_4_0::_Tuple3 2, conds_4_3 = select _x_4_0::_Tuple3 1, _x_4_4 = analtypes.map_st_520 group_4 (_Tuple2 (select as_4_2::analtypes._AnalyseState 2) (select as_4_2::analtypes._AnalyseState 0)), _x_4_5 = select _x_4_4::_Tuple2 1, _x_4_6 = analtypes.normalize_top_vars_106 (select conds_4_3::analtypes._Conditions 0) 0 (analtypes.unify_var_binds_103 (select conds_4_3::analtypes._Conditions 1) (select _x_4_5::_Tuple2 0)), _x_4_7::I = select _x_4_6::_Tuple2 1, _x_4_8 = analtypes.update_type_def_infos_528 modules_3 type_properties_4_1 (select _x_4_6::_Tuple2 0) group_4 (select _x_4_4::_Tuple2 0) (select _x_4_7::_Tuple2 0) (select _x_4_7::_Tuple2 1) (select _x_4_5::_Tuple2 1) (select as_4_2::analtypes._AnalyseState 3) in analtypes.fold_st_516 _vArray_0 modules_3 dcl_types_1 dcl_mod_index_2 type_properties_4_1 group_4 (update as_4_2::analtypes._AnalyseState [0:select _x_4_8::_Tuple3 1,2:select _x_4_8::_Tuple3 0,3:select _x_4_8::_Tuple3 2])) ) 
analtypes.fold_st_201 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_201 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.fold_st_200 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_200 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.foldSt_199 op_0 !l_1 st_2 = analtypes.fold_st_200 op_0 l_1 st_2
analtypes.map_st_198 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_198 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.map_st_237 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_237 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.unique_if_arg_is_unique_and_propagating_157::B !_x_0 _x_1::I = case _x_0 (_predefined._Nil -> False) (_predefined._Cons is_unique_argument_1_0 rest_1_1 -> case (case (StdInt.isOdd_19 _x_1) (True -> is_unique_argument_1_0) (False -> False) ) (True -> True) (False -> analtypes.unique_if_arg_is_unique_and_propagating_157 rest_1_1 (<{StdInt.>>}> _x_1 1)) ) 
analtypes.map_st_531 !common_defs_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.isUnique_177 common_defs_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_531 common_defs_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.isUnique_for_TA !glob_module_0::I !glob_object_1::I type_args_2 !common_defs_3 !td_infos_4 !th_vars_5 = let type_def_1_0 = analtypes.select_241 (select (analtypes.select_265 common_defs_3 glob_module_0)::syntax._CommonDefs 0) glob_object_1 in case (analtypes.isUniqueAttr (select type_def_1_0::syntax._TypeDef 6)) (True -> <{_Tuple2!3}> True (_Tuple2 td_infos_4 th_vars_5)) (False -> let _x_3_0 = analunitypes.propClassification glob_object_1 glob_module_0 (StdList.repeatn (select type_def_1_0::syntax._TypeDef 2) 0) common_defs_3 th_vars_5 td_infos_4, _x_3_1 = analtypes.map_st_531 common_defs_3 type_args_2 (_Tuple2 (select _x_3_0::_Tuple3 2) (select _x_3_0::_Tuple3 1)), _x_3_2 = select _x_3_1::_Tuple2 1 in <{_Tuple2!3}> (analtypes.unique_if_arg_is_unique_and_propagating_157 (select _x_3_1::_Tuple2 0) (select _x_3_0::_Tuple3 0)) (_Tuple2 (select _x_3_2::_Tuple2 0) (select _x_3_2::_Tuple2 1))) 
analtypes.isUnique_178 !common_defs_0 !_x_1 !_x_2 = case _x_1 (syntax.TA _x_1_0 type_args_1_1 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 _x_2_2 type_prop_2_3 -> case _x_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> case _x_2 (_Tuple2 td_infos_4_0 th_vars_4_1 -> analtypes.isUnique_for_TA glob_module_3_1 glob_object_3_0 type_args_1_1 common_defs_0 td_infos_4_0 th_vars_4_1) ) ) ) (syntax.TAS _x_1_0 type_args_1_1 _x_1_2 -> case _x_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 _x_2_2 type_prop_2_3 -> case _x_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> case _x_2 (_Tuple2 td_infos_4_0 th_vars_4_1 -> analtypes.isUnique_for_TA glob_module_3_1 glob_object_3_0 type_args_1_1 common_defs_0 td_infos_4_0 th_vars_4_1) ) ) ) (_ -> <{_Tuple2!3}> False _x_2)
analtypes.isUnique_177 !common_defs_0 !_x_1 !state_2 = case _x_1 (syntax._AType _x_1_0 at_type_1_1 -> case _x_1_0 (syntax.TA_Unique -> <{_Tuple2!3}> True state_2) (_ -> analtypes.isUnique_178 common_defs_0 at_type_1_1 state_2)) 
analtypes.map_st_532 !common_defs_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.isUnique_177 common_defs_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_532 common_defs_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.constructor_is_unique mod_index_0::I index_1::I common_defs_2 state_3 = let _x_1_0 = analtypes.map_st_532 common_defs_2 (select (select (analtypes.select_249 (select (analtypes.select_265 common_defs_2 mod_index_0)::syntax._CommonDefs 1) index_1)::syntax._ConsDef 1)::syntax._SymbolType 1) state_3 in _Tuple2 (StdList.or (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
analtypes.has_unique_constructor !_x_0 common_defs_1 mod_index_2::I state_3 = case _x_0 (_predefined._Cons _x_1_0 constructors_1_1 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> let _x_3_0 = analtypes.constructor_is_unique mod_index_2 ds_index_2_2 common_defs_1 state_3 in case (select _x_3_0::_Tuple2 0) (True -> _Tuple2 True (select _x_3_0::_Tuple2 1)) (False -> analtypes.has_unique_constructor constructors_1_1 common_defs_1 mod_index_2 (select _x_3_0::_Tuple2 1)) ) ) (_predefined._Nil -> _Tuple2 False state_3) 
analtypes.isUniqueTypeRhs common_defs_0 mod_index_1::I !_x_2 state_3 = case _x_2 (syntax.AlgType constructors_1_0 -> analtypes.has_unique_constructor constructors_1_0 common_defs_0 mod_index_1 state_3) (syntax.SynType rhs_1_0 -> analtypes.isUnique_177 common_defs_0 rhs_1_0 state_3) (syntax.RecordType _x_1_0 -> case _x_1_0 (syntax._RecordType _x_2_0 rt_fields_2_1 rt_is_boxed_record_2_2 -> case _x_2_0 (syntax._DefinedSymbol ds_ident_3_0 ds_arity_3_1 ds_index_3_2 -> analtypes.constructor_is_unique mod_index_1 ds_index_3_2 common_defs_0 state_3) ) ) (syntax.NewType _x_1_0 -> case _x_1_0 (syntax._DefinedSymbol ds_ident_2_0 ds_arity_2_1 ds_index_2_2 -> analtypes.constructor_is_unique mod_index_1 ds_index_2_2 common_defs_0 state_3) ) (syntax.ExtensibleAlgType constructors_1_0 -> analtypes.has_unique_constructor constructors_1_0 common_defs_0 mod_index_1 state_3) (syntax.AlgConses constructors_1_0 _x_1_1 -> analtypes.has_unique_constructor constructors_1_0 common_defs_0 mod_index_1 state_3) (_ -> _Tuple2 False state_3)
analtypes.checkLeftRootAttributionOfTypeDef !common_defs_0 !_x_1 !_x_2 = case _x_1 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case _x_2 (_Tuple3 td_infos_2_0 th_vars_2_1 error_2_2 -> let _x_3_0 = analtypes.select_241 (select (analtypes.select_265 common_defs_0 gi_module_1_0)::syntax._CommonDefs 0) gi_index_1_1 in case (analtypes.isUniqueAttr (select _x_3_0::syntax._TypeDef 6)) (True -> <{_Tuple3!7}> td_infos_2_0 th_vars_2_1 error_2_2) (False -> let td_rhs_5_0 = select _x_3_0::syntax._TypeDef 5, _x_5_1 = analtypes.isUniqueTypeRhs common_defs_0 gi_module_1_0 td_rhs_5_0 (_Tuple2 td_infos_2_0 th_vars_2_1) in case (select _x_5_1::_Tuple2 0) (True -> let _x_7_0 = select _x_5_1::_Tuple2 1 in <{_Tuple3!7}> (select _x_7_0::_Tuple2 0) (select _x_7_0::_Tuple2 1) (checksupport.checkErrorWithIdentPos (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (checksupport.newPosition (select _x_3_0::syntax._TypeDef 0) (select _x_3_0::syntax._TypeDef 7)) " left root * attribute expected" error_2_2)) (False -> let _x_7_0 = select _x_5_1::_Tuple2 1 in <{_Tuple3!7}> (select _x_7_0::_Tuple2 0) (select _x_7_0::_Tuple2 1) error_2_2) ) ) ) 
analtypes.fold_st_534 common_defs_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_534 common_defs_0 x_1_1 (analtypes.checkLeftRootAttributionOfTypeDef common_defs_0 a_1_0 st_2)) 
analtypes.foldSt_533 common_defs_0 !l_1 !st_2 = analtypes.fold_st_534 common_defs_0 l_1 st_2
analtypes.fold_st_535 common_defs_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_535 common_defs_0 x_1_1 (analtypes.foldSt_533 common_defs_0 a_1_0 st_2)) 
analtypes.check_left_root_attribution_of_typedefs_109 modules_0 !groups_1 !type_def_infos_2 !type_var_heap_3 !error_4 = analtypes.fold_st_535 modules_0 groups_1 (_Tuple3 type_def_infos_2 type_var_heap_3 error_4)
analtypes.check_dcl_properties_538 modules_0 dcl_types_1 !dcl_mod_index_2::I properties_3::I !_x_4 !as_5 = case _x_4 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> case (case (<{StdInt.==_16}> gi_module_1_0 dcl_mod_index_2) (True -> <{StdInt.<_17}> gi_index_1_1 (analtypes.size_242 dcl_types_1)) (False -> False) ) (True -> let _x_3_0 = analtypes.select_241 dcl_types_1 gi_index_1_1, td_pos_3_1 = select _x_3_0::syntax._TypeDef 7, td_args_3_2 = select _x_3_0::syntax._TypeDef 3, td_ident_3_3 = select _x_3_0::syntax._TypeDef 0 in <{analtypes._c;790;15_708}> (select _x_3_0::syntax._TypeDef 5) gi_module_1_0 gi_index_1_1 modules_0 properties_3 td_ident_3_3 td_args_3_2 td_pos_3_1 as_5) (False -> as_5) ) 
<{analtypes._c;790;15_708}> !_x_0 gi_module_1::I gi_index_2::I modules_3 properties_4::I td_ident_5 td_args_6 td_pos_7 !as_8 = case _x_0 (syntax.AbstractType spec_properties_1_0 -> analtypes.check_abstract_type_91 gi_module_1 gi_index_2 modules_3 properties_4 spec_properties_1_0 td_ident_5 td_args_6 td_pos_7 as_8) (syntax.AbstractSynType spec_properties_1_0 _x_1_1 -> analtypes.check_abstract_type_91 gi_module_1 gi_index_2 modules_3 properties_4 spec_properties_1_0 td_ident_5 td_args_6 td_pos_7 as_8) (_ -> as_8)
analtypes.fold_st_537 modules_0 dcl_types_1 dcl_mod_index_2::I properties_3::I !_x_4 !st_5 = case _x_4 (_predefined._Nil -> st_5) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_537 modules_0 dcl_types_1 dcl_mod_index_2 properties_3 x_1_1 (analtypes.check_dcl_properties_538 modules_0 dcl_types_1 dcl_mod_index_2 properties_3 a_1_0 st_5)) 
analtypes.anal_type_defs_in_group_536 dcl_types_0 dcl_mod_index_1::I modules_2 !group_3 !as_4 = case as_4 (analtypes._AnalyseState as_td_infos_1_0 as_type_var_heap_1_1 as_kind_heap_1_2 as_error_1_3 -> let _x_2_0 = analtypes.fold_st_525 modules_2 group_3 (_Tuple4 False as_td_infos_1_0 as_type_var_heap_1_1 as_kind_heap_1_2) in case (select _x_2_0::_Tuple4 0) (True -> update as_4::analtypes._AnalyseState [0:select _x_2_0::_Tuple4 1,1:select _x_2_0::_Tuple4 2,2:select _x_2_0::_Tuple4 3]) (False -> let _x_4_0 = analtypes.fold_st_510 modules_2 group_3 (_Tuple3 1 (analtypes._Conditions _predefined._Nil _predefined._Nil) (update as_4::analtypes._AnalyseState [0:select _x_2_0::_Tuple4 1,1:select _x_2_0::_Tuple4 2,2:select _x_2_0::_Tuple4 3])), type_properties_4_1 = select _x_4_0::_Tuple3 0, as_4_2 = select _x_4_0::_Tuple3 2, conds_4_3 = select _x_4_0::_Tuple3 1, _x_4_4 = analtypes.map_st_520 group_3 (_Tuple2 (select as_4_2::analtypes._AnalyseState 2) (select as_4_2::analtypes._AnalyseState 0)), _x_4_5 = select _x_4_4::_Tuple2 1, _x_4_6 = analtypes.normalize_top_vars_106 (select conds_4_3::analtypes._Conditions 0) 0 (analtypes.unify_var_binds_103 (select conds_4_3::analtypes._Conditions 1) (select _x_4_5::_Tuple2 0)), _x_4_7::I = select _x_4_6::_Tuple2 1, _x_4_8 = analtypes.update_type_def_infos_528 modules_2 type_properties_4_1 (select _x_4_6::_Tuple2 0) group_3 (select _x_4_4::_Tuple2 0) (select _x_4_7::_Tuple2 0) (select _x_4_7::_Tuple2 1) (select _x_4_5::_Tuple2 1) (select as_4_2::analtypes._AnalyseState 3) in analtypes.fold_st_537 modules_2 dcl_types_0 dcl_mod_index_1 type_properties_4_1 group_3 (update as_4_2::analtypes._AnalyseState [0:select _x_4_8::_Tuple3 1,2:select _x_4_8::_Tuple3 0,3:select _x_4_8::_Tuple3 2])) ) 
analtypes.fold_st_539 dcl_types_0 dcl_mod_index_1::I modules_2 !_x_3 !st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_539 dcl_types_0 dcl_mod_index_1 modules_2 x_1_1 (analtypes.anal_type_defs_in_group_536 dcl_types_0 dcl_mod_index_1 modules_2 a_1_0 st_4)) 
analtypes.analyseTypeDefs !modules_0 !groups_1 !dcl_types_2 !dcl_mod_index_3::I !type_def_infos_4 !type_var_heap_5 !error_6 = let _x_1_0 = analtypes.fold_st_539 dcl_types_2 dcl_mod_index_3 modules_0 groups_1 (analtypes._AnalyseState type_def_infos_4 type_var_heap_5 Heap.newHeap error_6) in analtypes.check_left_root_attribution_of_typedefs_109 modules_0 groups_1 (select _x_1_0::analtypes._AnalyseState 0) (select _x_1_0::analtypes._AnalyseState 1) (select _x_1_0::analtypes._AnalyseState 3)
analtypes.i_fold_st_226 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_226 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.i_fold_st_225 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_225 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
<{analtypes.cu;876;25_112}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{analtypes.cu;876;25_112}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _vArray_0::<{_SystemArray.Array;}> 0 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
analtypes.initialyse_info_for_module_124 !_vArray_0 !_vArray_1 !_vArray_2 !used_module_numbers_3 modules_4 !module_index_5::I class_infos_6 = case (containers.inNumberSet module_index_5 used_module_numbers_3) (True -> select _vArray_2::<{_SystemArray.Array;}> 5 class_infos_6 module_index_5 (select _vArray_1::<{_SystemArray.Array;}> 1 (analtypes.size_282 (select (select _vArray_0::<{_SystemArray.Array;}> 3 modules_4 module_index_5)::syntax._CommonDefs 3)) _predefined._Nil)) (False -> class_infos_6) 
analtypes.i_fold_st_224 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_224 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.fresh_kind_vars_115 !nr_of_vars_0::I fresh_vars_1 kind_heap_2 = case (<{StdInt.<_17}> 0 nr_of_vars_0) (True -> let _x_2_0 = Heap.newPtr syntax.KI_Const kind_heap_2, kind_info_ptr_2_1 = select _x_2_0::_Tuple2 0, ptr_and_val_2_2 = _Tuple2 kind_info_ptr_2_1 (syntax.KI_Var kind_info_ptr_2_1) in analtypes.fresh_kind_vars_115 (<{StdInt.-_7}> nr_of_vars_0 StdInt.one_11) (_predefined._Cons kind_info_ptr_2_1 fresh_vars_1) (Heap.writePtr (select ptr_and_val_2_2::_Tuple2 0) (select ptr_and_val_2_2::_Tuple2 1) (select _x_2_0::_Tuple2 1))) (False -> _Tuple2 fresh_vars_1 kind_heap_2) 
analtypes.fold_st2_221 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (analtypes.fold_st2_221 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.bind_kind_var_119 !_x_0 !kind_info_ptr_1 !type_var_heap_2 = case _x_0 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> let ptr_and_val_2_0 = _Tuple2 tv_info_ptr_1_1 (syntax.TVI_TypeKind kind_info_ptr_1) in Heap.writePtr (select ptr_and_val_2_0::_Tuple2 0) (select ptr_and_val_2_0::_Tuple2 1) type_var_heap_2) 
analtypes.fold_st2_540 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> analtypes.bind_kind_var_119 x_1_0 y_2_0 (analtypes.fold_st2_540 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.bind_kind_vars_129 !type_vars_0 !kind_ptrs_1 !type_var_heap_2 = analtypes.fold_st2_540 type_vars_0 kind_ptrs_1 type_var_heap_2
analtypes.cyclicClassInfoMark =: _predefined._Cons syntax.KindCycle _predefined._Nil
analtypes.fold_st_223 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_223 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.fold_st_216 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_216 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.fold_st2_215 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (analtypes.fold_st2_215 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.cDummyConditions =: analtypes._Conditions _predefined._Nil _predefined._Nil
analtypes.determineKind !_vanalTypes_0 modules_1 type_2 as_3 = let _x_1_0 = select _vanalTypes_0::<{analtypes.analTypes;}> 0 False modules_1 _predefined._Nil type_2 (_Tuple2 analtypes.cDummyConditions as_3) in _Tuple2 (select _x_1_0::_Tuple3 0) (select (select _x_1_0::_Tuple3 2)::_Tuple2 1)
analtypes.verify_kind_of_type_111 !_vanalTypes_0 modules_1 !req_kind_2 type_3 as_4 = let _x_1_0 = analtypes.determineKind _vanalTypes_0 modules_1 type_3 as_4, as_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = analtypes.unifyKinds (select _x_1_0::_Tuple2 0) (analtypes.kindToKindInfo req_kind_2) (analtypes._UnifyKindsInfo (select as_1_1::analtypes._AnalyseState 2) (select as_1_1::analtypes._AnalyseState 3)) in update as_1_1::analtypes._AnalyseState [2:select _x_1_2::analtypes._UnifyKindsInfo 0,3:select _x_1_2::analtypes._UnifyKindsInfo 1]
analtypes.determineKind_542 modules_0 type_1 as_2 = let _x_1_0 = analtypes.analTypes_174 False modules_0 _predefined._Nil type_1 (_Tuple2 analtypes.cDummyConditions as_2) in _Tuple2 (select _x_1_0::_Tuple3 0) (select (select _x_1_0::_Tuple3 2)::_Tuple2 1)
analtypes.verify_kind_of_type_541 !modules_0 !req_kind_1 !type_2 !as_3 = let _x_1_0 = analtypes.determineKind_542 modules_0 type_2 as_3, as_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = analtypes.unifyKinds (select _x_1_0::_Tuple2 0) (analtypes.kindToKindInfo req_kind_1) (analtypes._UnifyKindsInfo (select as_1_1::analtypes._AnalyseState 2) (select as_1_1::analtypes._AnalyseState 3)) in update as_1_1::analtypes._AnalyseState [2:select _x_1_2::analtypes._UnifyKindsInfo 0,3:select _x_1_2::analtypes._UnifyKindsInfo 1]
analtypes.fold_st2_543 modules_0 !_x_1 !_x_2 !st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> analtypes.verify_kind_of_type_541 modules_0 x_1_0 y_2_0 (analtypes.fold_st2_543 modules_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.determine_kinds_of_type_context_110 !modules_0 !_x_1 !_x_2 = case _x_1 (syntax._TypeContext _x_1_0 tc_types_1_1 tc_var_1_2 -> case _x_1_0 (syntax.TCClass _x_2_0 -> case _x_2_0 (syntax._Global _x_3_0 glob_module_3_1 -> case _x_3_0 (syntax._DefinedSymbol ds_ident_4_0 ds_arity_4_1 ds_index_4_2 -> case _x_2 (_Tuple2 class_infos_5_0 as_5_1 -> let _x_6_0 = _SystemArray.select_3 (_SystemArray.select_51 class_infos_5_0 glob_module_3_1) ds_index_4_2, class_kinds_6_1 = select _x_6_0::_Tuple2 0 in case (<{StdInt.==_16}> (StdList.length_47 class_kinds_6_1) (StdList.length_47 tc_types_1_1)) (True -> <{_Tuple2!3}> (select _x_6_0::_Tuple2 1) (analtypes.fold_st2_543 modules_0 class_kinds_6_1 tc_types_1_1 as_5_1)) (False -> StdMisc.abort (<{general.--->}> (<{StdFile.<<<;}> (<{general.<<<_8}> (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_10}>))) (<{StdFile.<<<;}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_23}>))))) "determine_kinds_of_type_context" (_Tuple3 ds_ident_4_0 class_kinds_6_1 tc_types_1_1))) ) ) ) ) (syntax.TCGeneric _x_2_0 -> case _x_2_0 (syntax._GenericTypeContext gtc_generic_3_0 gtc_kind_3_1 gtc_class_3_2 gtc_generic_dict_3_3 -> case _x_2 (_Tuple2 class_infos_4_0 as_4_1 -> case (<{StdInt.==_16}> (StdList.length_47 tc_types_1_1) 1) (True -> <{_Tuple2!3}> class_infos_4_0 (analtypes.verify_kind_of_type_541 modules_0 gtc_kind_3_1 (StdList.hd tc_types_1_1) as_4_1)) (False -> StdMisc.abort (<{general.--->}> (<{StdFile.<<<;}> (<{general.<<<_8}> (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{syntax.<<<_10}>) (<{StdFile.<<<;}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_23}>))))) "determine_kinds_of_type_context" (_Tuple3 (select (select gtc_generic_3_0::syntax._Global 0)::syntax._DefinedSymbol 0) gtc_kind_3_1 tc_types_1_1))) ) ) ) ) 
analtypes.fold_st_544 modules_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_544 modules_0 x_1_1 (analtypes.determine_kinds_of_type_context_110 modules_0 a_1_0 st_2)) 
analtypes.determine_kinds_of_type_contexts !modules_0 !type_contexts_1 !class_infos_2 !as_3 = analtypes.fold_st_544 modules_0 type_contexts_1 (_Tuple2 class_infos_2 as_3)
analtypes.i_fold_st_222 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_222 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.fold_st_220 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_220 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.clear_variable_120 !_x_0 !type_var_heap_1 = case _x_0 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> let ptr_and_val_2_0 = _Tuple2 tv_info_ptr_1_1 syntax.TVI_Empty in Heap.writePtr (select ptr_and_val_2_0::_Tuple2 0) (select ptr_and_val_2_0::_Tuple2 1) type_var_heap_1) 
analtypes.fold_st_545 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_545 x_1_1 (analtypes.clear_variable_120 a_1_0 st_1)) 
analtypes.clear_variables_130 !type_vars_0 !type_var_heap_1 = analtypes.fold_st_545 type_vars_0 type_var_heap_1
analtypes.fold_st2_219 op_0 !_x_1 !_x_2 st_3 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> case _x_2 (_predefined._Cons y_2_0 ys_2_1 -> op_0 x_1_0 y_2_0 (analtypes.fold_st2_219 op_0 xs_1_1 ys_2_1 st_3)) ) (_predefined._Nil -> case _x_2 (_predefined._Nil -> st_3) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_2 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.bind_kind_avar_118 !_x_0 !kind_info_ptr_1 !type_var_heap_2 = case _x_0 (syntax._ATypeVar atv_attribute_1_0 _x_1_1 -> case _x_1_1 (syntax._TypeVar tv_ident_2_0 tv_info_ptr_2_1 -> let ptr_and_val_3_0 = _Tuple2 tv_info_ptr_2_1 (syntax.TVI_TypeKind kind_info_ptr_1) in Heap.writePtr (select ptr_and_val_3_0::_Tuple2 0) (select ptr_and_val_3_0::_Tuple2 1) type_var_heap_2) ) 
analtypes.fold_st2_546 !_x_0 !_x_1 !st_2 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons y_2_0 ys_2_1 -> analtypes.bind_kind_avar_118 x_1_0 y_2_0 (analtypes.fold_st2_546 xs_1_1 ys_2_1 st_2)) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> st_2) (_ -> StdMisc.abort "fold_st2: second argument list contains more elements")) (_ -> case _x_1 (_predefined._Nil -> StdMisc.abort "fold_st2: first argument list contains more elements") )
analtypes.bind_kind_avars_128 !type_vars_0 !kind_ptrs_1 !type_var_heap_2 = analtypes.fold_st2_546 type_vars_0 kind_ptrs_1 type_var_heap_2
analtypes.fold_st_218 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_218 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.fresh_kind_vars_for_unbound_var_122 !_x_0 !_x_1 = case _x_0 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> case _x_1 (_Tuple2 type_var_heap_2_0 kind_heap_2_1 -> let _x_3_0 = Heap.readPtr tv_info_ptr_1_1 type_var_heap_2_0, type_var_heap_3_1 = select _x_3_0::_Tuple2 1 in <{analtypes._c;977;15_709}> (select _x_3_0::_Tuple2 0) tv_info_ptr_1_1 kind_heap_2_1 type_var_heap_3_1) ) 
<{analtypes._c;977;15_709}> !_x_0 tv_info_ptr_1 kind_heap_2 type_var_heap_3 = case _x_0 (syntax.TVI_Empty -> let _x_2_0 = Heap.newPtr syntax.KI_Const kind_heap_2, kind_info_ptr_2_1 = select _x_2_0::_Tuple2 0, ptr_and_val_2_2 = _Tuple2 tv_info_ptr_1 (syntax.TVI_TypeKind kind_info_ptr_2_1), ptr_and_val_2_3 = _Tuple2 kind_info_ptr_2_1 (syntax.KI_Var kind_info_ptr_2_1) in _Tuple2 (Heap.writePtr (select ptr_and_val_2_2::_Tuple2 0) (select ptr_and_val_2_2::_Tuple2 1) type_var_heap_3) (Heap.writePtr (select ptr_and_val_2_3::_Tuple2 0) (select ptr_and_val_2_3::_Tuple2 1) (select _x_2_0::_Tuple2 1))) (_ -> _Tuple2 type_var_heap_3 kind_heap_2)
analtypes.fold_st_547 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_547 x_1_1 (analtypes.fresh_kind_vars_for_unbound_var_122 a_1_0 st_1)) 
analtypes.fresh_kind_vars_for_unbound_vars_121 !type_vars_0 type_var_heap_1 kind_heap_2 = analtypes.fold_st_547 type_vars_0 (_Tuple2 type_var_heap_1 kind_heap_2)
analtypes.fold_st_217 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_217 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.force_star_kind !_vanalTypes_0 modules_1 type_2 as_3 = let _x_1_0 = analtypes.determineKind _vanalTypes_0 modules_1 type_2 as_3, as_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = analtypes.unifyKinds (select _x_1_0::_Tuple2 0) syntax.KI_Const (analtypes._UnifyKindsInfo (select as_1_1::analtypes._AnalyseState 2) (select as_1_1::analtypes._AnalyseState 3)) in update as_1_1::analtypes._AnalyseState [2:select _x_1_2::analtypes._UnifyKindsInfo 0,3:select _x_1_2::analtypes._UnifyKindsInfo 1]
analtypes.determineKind_549 modules_0 type_1 as_2 = let _x_1_0 = analtypes.analTypes_172 False modules_0 _predefined._Nil type_1 (_Tuple2 analtypes.cDummyConditions as_2) in _Tuple2 (select _x_1_0::_Tuple3 0) (select (select _x_1_0::_Tuple3 2)::_Tuple2 1)
analtypes.force_star_kind_548 !modules_0 !type_1 !as_2 = let _x_1_0 = analtypes.determineKind_549 modules_0 type_1 as_2, as_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = analtypes.unifyKinds (select _x_1_0::_Tuple2 0) syntax.KI_Const (analtypes._UnifyKindsInfo (select as_1_1::analtypes._AnalyseState 2) (select as_1_1::analtypes._AnalyseState 3)) in update as_1_1::analtypes._AnalyseState [2:select _x_1_2::analtypes._UnifyKindsInfo 0,3:select _x_1_2::analtypes._UnifyKindsInfo 1]
analtypes.fold_st_550 modules_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_550 modules_0 x_1_1 (analtypes.force_star_kind_548 modules_0 a_1_0 st_2)) 
analtypes.determine_kinds_type_list !modules_0 !types_1 !as_2 = analtypes.fold_st_550 modules_0 types_1 as_2
analtypes.map_st_214 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_214 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.retrieve_kind_123 !kind_info_ptr_0 !kind_heap_1 = let _x_1_0 = Heap.readPtr kind_info_ptr_0 kind_heap_1 in analtypes.kindInfoToKind (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
analtypes.map_st_551 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.retrieve_kind_123 x_1_0 s_1, _x_2_2 = analtypes.map_st_551 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.retrieve_class_kinds_133 !class_kind_vars_0 !kind_heap_1 = analtypes.map_st_551 class_kind_vars_0 kind_heap_1
<{analtypes.c;916;76_113}> !<{_v<_0}> !_vone_1 !<{_v+_2}> g_i_3 g_s_4 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_4 g_i_3)) (True -> _predefined._Cons syntax.KindConst (<{analtypes.c;916;76_113}> <{_v<_0}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 g_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_4)) (False -> _predefined._Nil) 
analtypes.isCyclicClass_116::B !_x_0 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_0 (syntax.KindCycle -> True) ) (_ -> False)
<{analtypes.c;919;73_114}> !<{_v<_0}> !_vone_1 !<{_v+_2}> g_i_3 g_s_4 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_4 g_i_3)) (True -> _predefined._Cons syntax.KindConst (<{analtypes.c;919;73_114}> <{_v<_0}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 g_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_4)) (False -> _predefined._Nil) 
analtypes.class_def_error = "cyclic dependencies between type classes"
analtypes.i_fold_st_555 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_555 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
<{analtypes.c;916;76_552}> !_vone_0 !<{_v+_1}> !g_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) (True -> _predefined._Cons syntax.KindConst (<{analtypes.c;916;76_552}> _vone_0 <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 g_i_2 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_3)) (False -> _predefined._Nil) 
<{analtypes.c;919;73_553}> !_vone_0 !<{_v+_1}> !g_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) (True -> _predefined._Cons syntax.KindConst (<{analtypes.c;919;73_553}> _vone_0 <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 g_i_2 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_3)) (False -> _predefined._Nil) 
analtypes.i_fold_st_558 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_558 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
<{analtypes.c;916;76_556}> !<{_v+_0}> !g_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> _predefined._Cons syntax.KindConst (<{analtypes.c;916;76_556}> <{_v+_0}> (select <{_v+_0}>::<{StdOverloaded.+;}> 0 g_i_1 StdInt.one_11) g_s_2)) (False -> _predefined._Nil) 
<{analtypes.c;919;73_557}> !<{_v+_0}> !g_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> _predefined._Cons syntax.KindConst (<{analtypes.c;919;73_557}> <{_v+_0}> (select <{_v+_0}>::<{StdOverloaded.+;}> 0 g_i_1 StdInt.one_11) g_s_2)) (False -> _predefined._Nil) 
analtypes.i_fold_st_561 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_561 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
<{analtypes.c;916;76_559}> !g_i_0::I !g_s_1::I = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> _predefined._Cons syntax.KindConst (<{analtypes.c;916;76_559}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1)) (False -> _predefined._Nil) 
<{analtypes.c;919;73_560}> !g_i_0::I !g_s_1::I = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> _predefined._Cons syntax.KindConst (<{analtypes.c;919;73_560}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1)) (False -> _predefined._Nil) 
analtypes.determine_kind_of_member_132 modules_0 !modules_1 !members_2 !member_defs_3 class_kind_vars_4 !loc_member_index_5::I !class_infos_and_as_6 = let _x_1_0 = analtypes.select_297 member_defs_3 (select (analtypes.select_289 members_2 loc_member_index_5)::syntax._DefinedSymbol 2), _x_1_1 = select _x_1_0::syntax._MemberDef 3, other_contexts_1_2 = StdList.tl (select _x_1_1::syntax._SymbolType 5), _x_1_3 = analtypes.determine_kinds_of_context_classes_127 modules_0 other_contexts_1_2 class_infos_and_as_6, as_1_4 = select _x_1_3::_Tuple2 1, st_vars_1_5 = select _x_1_1::syntax._SymbolType 0, _x_1_6 = analtypes.fresh_kind_vars_for_unbound_vars_121 st_vars_1_5 (analtypes.bind_kind_avars_128 (select _x_1_0::syntax._MemberDef 5) class_kind_vars_4 (analtypes.clear_variables_130 st_vars_1_5 (select as_1_4::analtypes._AnalyseState 1))) (select as_1_4::analtypes._AnalyseState 2) in analtypes.determine_kinds_of_type_contexts modules_1 other_contexts_1_2 (select _x_1_3::_Tuple2 0) (analtypes.determine_kinds_type_list modules_1 (_predefined._Cons (select _x_1_1::syntax._SymbolType 4) (select _x_1_1::syntax._SymbolType 1)) (update as_1_4::analtypes._AnalyseState [1:select _x_1_6::_Tuple2 0,2:select _x_1_6::_Tuple2 1]))
analtypes.i_fold_st_562 modules_0 modules_1 members_2 member_defs_3 class_kind_vars_4 !fr_5::I !to_6::I !st_7 = case (StdBool.not (<{StdInt.<_17}> fr_5 to_6)) (True -> st_7) (False -> analtypes.i_fold_st_562 modules_0 modules_1 members_2 member_defs_3 class_kind_vars_4 (<{StdInt.+_6}> fr_5 StdInt.one_11) to_6 (analtypes.determine_kind_of_member_132 modules_0 modules_1 members_2 member_defs_3 class_kind_vars_4 fr_5 st_7)) 
analtypes.determine_kinds_of_members_131 modules_0 modules_1 !members_2 member_defs_3 class_kind_vars_4 !_x_5 = case _x_5 (_Tuple2 class_infos_1_0 as_1_1 -> analtypes.i_fold_st_562 modules_0 modules_1 members_2 member_defs_3 class_kind_vars_4 0 (analtypes.size_290 members_2) (_Tuple2 class_infos_1_0 as_1_1)) 
analtypes.determine_kinds_of_context_class_117 modules_0 modules_1 !_x_2 !infos_and_as_3 = case _x_2 (syntax._TypeContext _x_1_0 tc_types_1_1 tc_var_1_2 -> case _x_1_0 (syntax.TCClass _x_2_0 -> case _x_2_0 (syntax._Global _x_3_0 glob_module_3_1 -> case _x_3_0 (syntax._DefinedSymbol ds_ident_4_0 ds_arity_4_1 ds_index_4_2 -> analtypes.determine_kinds_of_class_126 modules_0 modules_1 glob_module_3_1 ds_index_4_2 infos_and_as_3) ) ) (syntax.TCGeneric _x_2_0 -> case _x_2_0 (syntax._GenericTypeContext gtc_generic_3_0 gtc_kind_3_1 gtc_class_3_2 gtc_generic_dict_3_3 -> infos_and_as_3) ) ) 
analtypes.fold_st_554 modules_0 modules_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_554 modules_0 modules_1 x_1_1 (analtypes.determine_kinds_of_context_class_117 modules_0 modules_1 a_1_0 st_3)) 
analtypes.determine_kinds_of_context_classes_127 modules_0 !contexts_1 !class_infos_and_as_2 = analtypes.fold_st_554 modules_0 modules_0 contexts_1 class_infos_and_as_2
analtypes.determine_kinds_of_class_126 modules_0 !modules_1 !class_module_2::I !class_index_3::I !_x_4 = case _x_4 (_Tuple2 class_infos_1_0 as_1_1 -> case (StdList.isEmpty (_SystemArray.select_3 (_SystemArray.select_51 class_infos_1_0 class_module_2) class_index_3)) (True -> let _x_3_0 = analtypes.select_265 modules_1 class_module_2, com_class_defs_3_1 = select _x_3_0::syntax._CommonDefs 3, _x_3_2 = analtypes.select_281 com_class_defs_3_1 class_index_3, class_context_3_3 = select _x_3_2::syntax._ClassDef 3, class_infos_3_4 = _SystemArray.update_5 (_SystemArray.select_51 class_infos_1_0 class_module_2) class_index_3 analtypes.cyclicClassInfoMark, class_args_3_5 = select _x_3_2::syntax._ClassDef 2, class_arity_3_6 = select _x_3_2::syntax._ClassDef 1, _x_3_7 = analtypes.fresh_kind_vars_115 class_arity_3_6 _predefined._Nil (select as_1_1::analtypes._AnalyseState 2), class_kind_vars_3_8 = select _x_3_7::_Tuple2 0, as_type_var_heap_3_9::I = analtypes.bind_kind_vars_129 class_args_3_5 class_kind_vars_3_8 (select as_1_1::analtypes._AnalyseState 1), as_kind_heap_3_10 = select _x_3_7::_Tuple2 1, class_ident_3_11 = select _x_3_2::syntax._ClassDef 0, class_pos_3_12 = select _x_3_2::syntax._ClassDef 6, as_error_3_13 = checksupport.pushErrorAdmin_32 (checksupport.newPosition class_ident_3_11 class_pos_3_12) (select as_1_1::analtypes._AnalyseState 3), _x_3_14 = analtypes.determine_kinds_of_context_classes_127 modules_0 class_context_3_3 (_Tuple2 class_infos_3_4 (update as_1_1::analtypes._AnalyseState [1:as_type_var_heap_3_9,2:as_kind_heap_3_10,3:as_error_3_13])), as_3_15 = select _x_3_14::_Tuple2 1 in case (select (select as_3_15::analtypes._AnalyseState 3)::checksupport._ErrorAdmin 2) (True -> let _x_5_0 = analtypes.determine_kinds_of_type_contexts modules_1 class_context_3_3 (select _x_3_14::_Tuple2 0) as_3_15, _x_5_1 = analtypes.determine_kinds_of_members_131 modules_0 modules_1 (select _x_3_2::syntax._ClassDef 4) (select _x_3_0::syntax._CommonDefs 4) class_kind_vars_3_8 (_Tuple2 (select _x_5_0::_Tuple2 0) (select _x_5_0::_Tuple2 1)), as_5_2 = select _x_5_1::_Tuple2 1, _x_5_3 = analtypes.retrieve_class_kinds_133 class_kind_vars_3_8 (select as_5_2::analtypes._AnalyseState 2) in <{_Tuple2!3}> (_SystemArray.update_5 (_SystemArray.select_51 (select _x_5_1::_Tuple2 0) class_module_2) class_index_3 (select _x_5_3::_Tuple2 0)) (update as_5_2::analtypes._AnalyseState [2:select _x_5_3::_Tuple2 1,3:checksupport.popErrorAdmin_31 (select as_5_2::analtypes._AnalyseState 3)])) (False -> <{_Tuple2!3}> (_SystemArray.update_5 (_SystemArray.select_51 (select _x_3_14::_Tuple2 0) class_module_2) class_index_3 (<{analtypes.c;916;76_559}> 1 class_arity_3_6)) (update as_3_15::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (select as_3_15::analtypes._AnalyseState 3)])) ) (False -> case (analtypes.isCyclicClass_116 (_SystemArray.select_3 (_SystemArray.select_51 class_infos_1_0 class_module_2) class_index_3)) (True -> let _x_4_0 = analtypes.select_281 (select (analtypes.select_265 modules_1 class_module_2)::syntax._CommonDefs 3) class_index_3 in <{_Tuple2!3}> (_SystemArray.update_5 (_SystemArray.select_51 class_infos_1_0 class_module_2) class_index_3 (<{analtypes.c;919;73_560}> 1 (select _x_4_0::syntax._ClassDef 1))) (update as_1_1::analtypes._AnalyseState [3:checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_24}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (select _x_4_0::syntax._ClassDef 0) analtypes.class_def_error (select as_1_1::analtypes._AnalyseState 3)])) (False -> <{_Tuple2!3}> class_infos_1_0 as_1_1) ) ) 
analtypes.i_fold_st_563 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_563 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
analtypes.i_fold_st_564 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_564 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.i_fold_st_565 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_565 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.i_fold_st_566 modules_0 modules_1 class_module_2::I !fr_3::I !to_4::I !st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_566 modules_0 modules_1 class_module_2 (<{StdInt.+_6}> fr_3 StdInt.one_11) to_4 (analtypes.determine_kinds_of_class_126 modules_0 modules_1 class_module_2 fr_3 st_5)) 
analtypes.determine_kinds_of_class_in_module_125 modules_0 modules_1 !module_index_2::I !_x_3 = case _x_3 (_Tuple2 class_infos_1_0 as_1_1 -> let !nr_of_classes_2_0::I = _SystemArray.size_4 (_SystemArray.select_51 class_infos_1_0 module_index_2) in analtypes.i_fold_st_566 modules_0 modules_1 module_index_2 0 nr_of_classes_2_0 (_Tuple2 class_infos_1_0 as_1_1)) 
<{analtypes.cu;876;25_567}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{analtypes.cu;876;25_567}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (_SystemArray._createArray_0 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
analtypes.initialyse_info_for_module_568 !_vArray_0 !_vArray_1 !used_module_numbers_2 modules_3 !module_index_4::I class_infos_5 = case (containers.inNumberSet module_index_4 used_module_numbers_2) (True -> select _vArray_1::<{_SystemArray.Array;}> 5 class_infos_5 module_index_4 (select _vArray_0::<{_SystemArray.Array;}> 1 (analtypes.size_282 (select (analtypes.select_265 modules_3 module_index_4)::syntax._CommonDefs 3)) _predefined._Nil)) (False -> class_infos_5) 
analtypes.i_fold_st_569 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_569 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
analtypes.i_fold_st_570 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_570 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
<{analtypes.cu;876;25_571}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{analtypes.cu;876;25_571}> (_SystemArray.update_53 c_a_0 c_i_1 (_SystemArray._createArray_0 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
analtypes.initialyse_info_for_module_572 !_vArray_0 !used_module_numbers_1 modules_2 !module_index_3::I class_infos_4 = case (containers.inNumberSet module_index_3 used_module_numbers_1) (True -> select _vArray_0::<{_SystemArray.Array;}> 5 class_infos_4 module_index_3 (_SystemArray.createArray_1 (analtypes.size_282 (select (analtypes.select_265 modules_2 module_index_3)::syntax._CommonDefs 3)) _predefined._Nil)) (False -> class_infos_4) 
analtypes.i_fold_st_573 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_573 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.i_fold_st_574 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_574 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.initialyse_info_for_module_575 !used_module_numbers_0 modules_1 !module_index_2::I !class_infos_3 = case (containers.inNumberSet module_index_2 used_module_numbers_0) (True -> _SystemArray.update_53 class_infos_3 module_index_2 (_SystemArray.createArray_1 (analtypes.size_282 (select (analtypes.select_265 modules_1 module_index_2)::syntax._CommonDefs 3)) _predefined._Nil)) (False -> class_infos_3) 
analtypes.i_fold_st_576 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_576 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.i_fold_st_577 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_577 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.i_fold_st_578 used_module_numbers_0 modules_1 !fr_2::I !to_3::I !st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_578 used_module_numbers_0 modules_1 (<{StdInt.+_6}> fr_2 StdInt.one_11) to_3 (analtypes.initialyse_info_for_module_575 used_module_numbers_0 modules_1 fr_2 st_4)) 
analtypes.i_fold_st_579 modules_0 modules_1 !fr_2::I !to_3::I !st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_579 modules_0 modules_1 (<{StdInt.+_6}> fr_2 StdInt.one_11) to_3 (analtypes.determine_kinds_of_class_in_module_125 modules_0 modules_1 fr_2 st_4)) 
analtypes.determineKindsOfClasses !used_module_numbers_0 !modules_1 !type_def_infos_2 !type_var_heap_3 !error_4 = let !prev_error_ok_1_0::B = select error_4::checksupport._ErrorAdmin 2, !ok_1_1::B = select as_error_1_5::checksupport._ErrorAdmin 2, nr_of_modules_1_2 = analtypes.size_266 modules_1, _x_1_3 = analtypes.i_fold_st_579 modules_1 modules_1 0 nr_of_modules_1_2 (_Tuple2 (analtypes.i_fold_st_578 used_module_numbers_0 modules_1 0 nr_of_modules_1_2 (<{analtypes.cu;876;25_571}> (_SystemArray._createArray_48 (<{StdInt.+_6}> nr_of_modules_1_2 StdInt.one_11)) 0 nr_of_modules_1_2)) (analtypes._AnalyseState type_def_infos_2 type_var_heap_3 Heap.newHeap (update error_4::checksupport._ErrorAdmin [2:True]))), _x_1_4 = select _x_1_3::_Tuple2 1, as_error_1_5::I = select _x_1_4::analtypes._AnalyseState 3 in <{_Tuple4!15}> (select _x_1_3::_Tuple2 0) (select _x_1_4::analtypes._AnalyseState 0) (select _x_1_4::analtypes._AnalyseState 1) (update as_error_1_5::checksupport._ErrorAdmin [2:analtypes._f710_710 prev_error_ok_1_0 ok_1_1])
analtypes._f710_710::B !prev_error_ok_0::B ok_1::B = case prev_error_ok_0 (True -> ok_1) (_ -> False)
analtypes.i_fold_st_236 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_236 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.fold_st_235 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_235 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.fold_st_228 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_228 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.new_kind_135 !_x_0 !_x_1 = case _x_0 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> case _x_1 (_Tuple2 type_var_heap_2_0 kind_heap_2_1 -> let _x_3_0 = Heap.newPtr syntax.KI_Const kind_heap_2_1, kind_info_ptr_3_1 = select _x_3_0::_Tuple2 0, ptr_and_val_3_2 = _Tuple2 tv_info_ptr_1_1 (syntax.TVI_TypeKind kind_info_ptr_3_1), ptr_and_val_3_3 = _Tuple2 kind_info_ptr_3_1 (syntax.KI_Var kind_info_ptr_3_1) in <{_Tuple2!3}> (Heap.writePtr (select ptr_and_val_3_2::_Tuple2 0) (select ptr_and_val_3_2::_Tuple2 1) type_var_heap_2_0) (Heap.writePtr (select ptr_and_val_3_3::_Tuple2 0) (select ptr_and_val_3_3::_Tuple2 1) (select _x_3_0::_Tuple2 1))) ) 
analtypes.fold_st_580 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_580 x_1_1 (analtypes.new_kind_135 a_1_0 st_1)) 
analtypes.bindFreshKindVariablesToTypeVars !type_vars_0 !type_var_heap_1 !as_kind_heap_2 = analtypes.fold_st_580 type_vars_0 (_Tuple2 type_var_heap_1 as_kind_heap_2)
analtypes.check_kinds_of_class_instance_137 !common_defs_0 !_x_1 !class_infos_2 !as_3 = case _x_1 (syntax._ClassInstance ins_class_index_1_0 _x_1_1 ins_ident_1_2 _x_1_3 ins_member_types_1_4 ins_members_1_5 ins_specials_1_6 ins_pos_1_7 -> case _x_1_1 (syntax._ClassIdent _x_2_0 ci_arity_2_1 -> case _x_2_0 (syntax.Ident class_ident_3_0 -> case _x_1_3 (syntax._InstanceType it_vars_4_0 it_types_4_1 it_attr_vars_4_2 it_context_4_3 -> case as_3 (analtypes._AnalyseState as_td_infos_5_0 as_type_var_heap_5_1 as_kind_heap_5_2 as_error_5_3 -> let _x_6_0 = analtypes.bindFreshKindVariablesToTypeVars it_vars_4_0 as_type_var_heap_5_1 as_kind_heap_5_2, _x_6_1 = analtypes.determine_kinds_of_type_contexts common_defs_0 (_predefined._Cons (syntax._TypeContext (syntax.TCClass (syntax._Global (syntax._DefinedSymbol class_ident_3_0 ci_arity_2_1 (select ins_class_index_1_0::syntax._GlobalIndex 1)) (select ins_class_index_1_0::syntax._GlobalIndex 0))) it_types_4_1 Heap.nilPtr) it_context_4_3) class_infos_2 (update as_3::analtypes._AnalyseState [1:select _x_6_0::_Tuple2 0,2:select _x_6_0::_Tuple2 1,3:checksupport.pushErrorAdmin_32 (checksupport.newPosition ins_ident_1_2 ins_pos_1_7) as_error_5_3]), as_6_2 = select _x_6_1::_Tuple2 1 in <{_Tuple2!3}> (select _x_6_1::_Tuple2 0) (update as_6_2::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (select as_6_2::analtypes._AnalyseState 3)])) ) ) ) ) 
analtypes.check_kinds_of_class_instances_150 !_vArray_0 common_defs_1 !instance_index_2::I instance_defs_3 class_infos_4 as_5 = case (<{StdInt.==_16}> instance_index_2 (select _vArray_0::<{_SystemArray.Array;}> 4 instance_defs_3)) (True -> _Tuple2 class_infos_4 as_5) (False -> let _x_2_0 = analtypes.check_kinds_of_class_instance_137 common_defs_1 (select _vArray_0::<{_SystemArray.Array;}> 3 instance_defs_3 instance_index_2) class_infos_4 as_5 in analtypes.check_kinds_of_class_instances_150 _vArray_0 common_defs_1 (<{StdInt.+_6}> instance_index_2 StdInt.one_11) instance_defs_3 (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1)) 
analtypes.map_st_234 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = analtypes.map_st_234 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.force_star_kind_581 !modules_0 !type_1 !as_2 = let _x_1_0 = analtypes.determineKind_542 modules_0 type_1 as_2, as_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = analtypes.unifyKinds (select _x_1_0::_Tuple2 0) syntax.KI_Const (analtypes._UnifyKindsInfo (select as_1_1::analtypes._AnalyseState 2) (select as_1_1::analtypes._AnalyseState 3)) in update as_1_1::analtypes._AnalyseState [2:select _x_1_2::analtypes._UnifyKindsInfo 0,3:select _x_1_2::analtypes._UnifyKindsInfo 1]
analtypes.check_kinds_of_function_arguments_144 !_x_0 common_defs_1 !class_infos_2 !as_3 = case _x_0 (_predefined._Cons _x_1_0 types_1_1 -> case _x_1_0 (syntax._AType at_attribute_2_0 _x_2_1 -> case _x_2_1 (syntax.TFAC vars_3_0 type_3_1 contexts_3_2 -> let _x_4_0 = analtypes.new_local_kind_variables_for_universal_vars vars_3_0 (select as_3::analtypes._AnalyseState 1) (select as_3::analtypes._AnalyseState 2), _x_4_1 = analtypes.determine_kinds_of_type_contexts common_defs_1 contexts_3_2 class_infos_2 (analtypes.force_star_kind_581 common_defs_1 type_3_1 (update as_3::analtypes._AnalyseState [1:select _x_4_0::_Tuple2 0,2:select _x_4_0::_Tuple2 1])) in analtypes.check_kinds_of_function_arguments_144 types_1_1 common_defs_1 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)) ) (_ -> analtypes.check_kinds_of_function_arguments_144 types_1_1 common_defs_1 class_infos_2 (analtypes.force_star_kind_548 common_defs_1 _x_1_0 as_3))) (_predefined._Nil -> <{_Tuple2!3}> class_infos_2 as_3) 
analtypes.check_kinds_of_symbol_type_155 !common_defs_0 !_x_1 !class_infos_2 !as_3 = case _x_1 (syntax._SymbolType st_vars_1_0 st_args_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> case as_3 (analtypes._AnalyseState as_td_infos_2_0 as_type_var_heap_2_1 as_kind_heap_2_2 as_error_2_3 -> let _x_3_0 = analtypes.bindFreshKindVariablesToTypeVars st_vars_1_0 as_type_var_heap_2_1 as_kind_heap_2_2, _x_3_1 = analtypes.check_kinds_of_function_arguments_144 st_args_1_1 common_defs_0 class_infos_2 (analtypes.force_star_kind_548 common_defs_0 st_result_1_4 (update as_3::analtypes._AnalyseState [1:select _x_3_0::_Tuple2 0,2:select _x_3_0::_Tuple2 1])) in analtypes.determine_kinds_of_type_contexts common_defs_0 st_context_1_5 (select _x_3_1::_Tuple2 0) (select _x_3_1::_Tuple2 1)) ) 
analtypes.retrieve_tv_kind_139 !tv_0 !as_1 = case tv_0 (syntax._TypeVar tv_ident_1_0 tv_info_ptr_1_1 -> case as_1 (analtypes._AnalyseState as_td_infos_2_0 as_type_var_heap_2_1 as_kind_heap_2_2 as_error_2_3 -> let !_x_3_0 = Heap.readPtr tv_info_ptr_1_1 as_type_var_heap_2_1, !_x_3_1 = Heap.readPtr (select (select _x_3_0::_Tuple2 0)::_Tuple1 0) as_kind_heap_2_2, !_x_3_2 = analtypes.kindInfoToKind (select _x_3_1::_Tuple2 0) (select _x_3_1::_Tuple2 1) in <{_Tuple2!3}> (select _x_3_2::_Tuple2 0) (update as_1::analtypes._AnalyseState [1:select _x_3_0::_Tuple2 1,2:select _x_3_2::_Tuple2 1])) ) 
analtypes.check_kinds_of_generic_vars_140 !_x_0 !as_1 = case _x_0 (_predefined._Cons gen_kind_1_0 gen_kinds_1_1 -> case (StdList.all (<{syntax.==_11}> syntax.KindConst) (_predefined._Cons gen_kind_1_0 gen_kinds_1_1)) (True -> as_1) (False -> update as_1::analtypes._AnalyseState [3:checksupport.checkError (<{StdFile.<<<;}> <{StdFile.<<<_38}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) "conflicting kinds: " "generic variables must have the same kind" (select as_1::analtypes._AnalyseState 3)]) ) 
analtypes.map_st_582 !_x_0 !s_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = analtypes.retrieve_tv_kind_139 x_1_0 s_1, _x_2_2 = analtypes.map_st_582 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_1 in _Tuple2 _predefined._Nil s_2_0) 
analtypes.check_kinds_of_generic_138 !common_defs_0 !_x_1 !class_infos_2 !gen_heap_3 !as_4 = case _x_1 (syntax._GenericDef gen_ident_1_0 gen_member_ident_1_1 gen_pos_1_2 gen_type_1_3 gen_vars_1_4 gen_deps_1_5 gen_info_ptr_1_6 -> let _x_2_0 = analtypes.check_kinds_of_symbol_type_155 common_defs_0 gen_type_1_3 class_infos_2 (update as_4::analtypes._AnalyseState [3:checksupport.pushErrorAdmin_32 (checksupport.newPosition gen_ident_1_0 gen_pos_1_2) (select as_4::analtypes._AnalyseState 3)]), _x_2_1 = Heap.readPtr gen_info_ptr_1_6 gen_heap_3, _x_2_2 = analtypes.map_st_582 (select gen_type_1_3::syntax._SymbolType 0) (select _x_2_0::_Tuple2 1), kinds_2_3 = select _x_2_2::_Tuple2 0, as_2_4 = analtypes.check_kinds_of_generic_vars_140 (StdList.take (StdList.length_47 gen_vars_1_4) kinds_2_3) (select _x_2_2::_Tuple2 1) in <{_Tuple3!7}> (select _x_2_0::_Tuple2 0) (Heap.writePtr gen_info_ptr_1_6 (update (select _x_2_1::_Tuple2 0)::syntax._GenericInfo [1:kinds_2_3]) (select _x_2_1::_Tuple2 1)) (update as_2_4::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (select as_2_4::analtypes._AnalyseState 3)])) 
analtypes.check_kinds_of_generics_151 !_vArray_0 common_defs_1 !index_2::I generic_defs_3 class_infos_4 gen_heap_5 as_6 = case (<{StdInt.==_16}> index_2 (select _vArray_0::<{_SystemArray.Array;}> 4 generic_defs_3)) (True -> _Tuple3 class_infos_4 gen_heap_5 as_6) (False -> let _x_2_0 = analtypes.check_kinds_of_generic_138 common_defs_1 (select _vArray_0::<{_SystemArray.Array;}> 3 generic_defs_3 index_2) class_infos_4 gen_heap_5 as_6 in analtypes.check_kinds_of_generics_151 _vArray_0 common_defs_1 (<{StdInt.+_6}> index_2 StdInt.one_11) generic_defs_3 (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) 
analtypes.foldr_233 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (analtypes.foldr_233 op_0 r_1 x_1_1)) 
analtypes.max_232 !_vOrd_0 !x_1 !y_2 = case (select (select _vOrd_0::<{StdClass.Ord;}> 0)::<{StdOverloaded.<;}> 0 x_1 y_2) (True -> y_2) (False -> x_1) 
analtypes.max_583::I !x_0::I !y_1::I = case (<{StdInt.<_17}> x_0 y_1) (True -> y_1) (False -> x_0) 
analtypes.foldr_584::I !r_0::I !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> analtypes.max_583 a_1_0 (analtypes.foldr_584 r_0 x_1_1)) 
analtypes.rank_of_kind_141::I !_x_0 = case _x_0 (syntax.KindConst -> 0) (syntax.KindArrow kinds_1_0 -> <{StdInt.+_6}> 1 (analtypes.foldr_584 0 (StdList.map analtypes.rank_of_kind_141 kinds_1_0))) 
analtypes.check_kinds_of_gencase_142 !gencase_0 !as_1 = case gencase_0 (syntax._GenericCaseDef gc_pos_1_0 gc_type_1_1 gc_type_cons_1_2 gc_gcf_1_3 -> case gc_type_cons_1_2 (syntax.TypeConsSymb _x_2_0 -> case _x_2_0 (syntax._TypeSymbIdent type_ident_3_0 type_arity_3_1 type_index_3_2 type_prop_3_3 -> case as_1 (analtypes._AnalyseState as_td_infos_4_0 as_type_var_heap_4_1 as_kind_heap_4_2 as_error_4_3 -> let _x_5_0 = analtypes.select_273 (_SystemArray.select_43 as_td_infos_4_0 (select type_index_3_2::syntax._Global 1)) (select type_index_3_2::syntax._Global 0), _x_5_1 = select _x_5_0::_Tuple2 0, tdi_kinds_5_2 = select _x_5_1::syntax._TypeDefInfo 0, kind_5_3 = <{analtypes._if;1107;22_711}> (StdList.isEmpty tdi_kinds_5_2) tdi_kinds_5_2 in update as_1::analtypes._AnalyseState [0:select _x_5_0::_Tuple2 1,3:<{analtypes._c;1108;26_712}> (<{StdInt.<_17}> 2 (analtypes.rank_of_kind_141 kind_5_3)) kind_5_3 as_error_4_3]) ) ) ) (_ -> as_1)
<{analtypes._c;1108;26_712}> !_x_0::B kind_1 !as_error_2 = case _x_0 (True -> checksupport.checkError (<{StdFile.<<<;}> <{syntax.<<<_10}>) (<{StdFile.<<<;}> <{StdFile.<<<_38}>) kind_1 "only kinds up to rank-2 supported by generics" as_error_2) (False -> as_error_2) 
<{analtypes._if;1107;22_711}> !_x_0::B tdi_kinds_1 = case _x_0 (True -> syntax.KindConst) (_ -> syntax.KindArrow tdi_kinds_1)
analtypes.check_kinds_of_gencases_152 !index_0::I !gencases_1 !as_2 = case (<{StdInt.==_16}> index_0 (analtypes.size_314 gencases_1)) (True -> as_2) (False -> analtypes.check_kinds_of_gencases_152 (<{StdInt.+_6}> index_0 StdInt.one_11) gencases_1 (analtypes.check_kinds_of_gencase_142 (analtypes.select_313 gencases_1 index_0) as_2)) 
analtypes.i_fold_st_231 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_231 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.fold_st_230 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_230 op_0 x_1_1 (op_0 a_1_0 st_2)) 
analtypes.check_kinds_of_dynamic_type_148 !common_defs_0 !_x_1 !class_infos_2 !as_3 = case _x_1 (syntax._DynamicType dt_uni_vars_1_0 dt_global_vars_1_1 dt_type_1_2 dt_contexts_1_3 -> case as_3 (analtypes._AnalyseState as_td_infos_2_0 as_type_var_heap_2_1 as_kind_heap_2_2 as_error_2_3 -> let _x_3_0 = analtypes.new_local_kind_variables_for_universal_vars dt_uni_vars_1_0 as_type_var_heap_2_1 as_kind_heap_2_2, _x_3_1 = analtypes.bindFreshKindVariablesToTypeVars dt_global_vars_1_1 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1) in analtypes.determine_kinds_of_type_contexts common_defs_0 dt_contexts_1_3 class_infos_2 (analtypes.force_star_kind_548 common_defs_0 dt_type_1_2 (update as_3::analtypes._AnalyseState [1:select _x_3_1::_Tuple2 0,2:select _x_3_1::_Tuple2 1]))) ) 
analtypes.check_kinds_of_opt_dynamic_type_147 common_defs_0 !_x_1 !class_infos_2 !as_3 = case _x_1 (general.Yes type_1_0 -> analtypes.check_kinds_of_dynamic_type_148 common_defs_0 type_1_0 class_infos_2 as_3) (general.No -> <{_Tuple2!3}> class_infos_2 as_3) 
analtypes.check_kinds_of_dynamic_info_146 !_x_0 common_defs_1 !_x_2 = case _x_0 (syntax.EI_Dynamic opt_type_1_0 locals_1_1 -> case _x_2 (_Tuple3 expr_heap_2_0 class_infos_2_1 as_2_2 -> let _x_3_0 = analtypes.check_kinds_of_opt_dynamic_type_147 common_defs_1 opt_type_1_0 class_infos_2_1 as_2_2 in analtypes.check_kinds_of_dynamics_156 common_defs_1 locals_1_1 expr_heap_2_0 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) ) (syntax.EI_DynamicTypeWithVars vars_1_0 type_1_1 locals_1_2 -> case _x_2 (_Tuple3 expr_heap_2_0 class_infos_2_1 as_2_2 -> case as_2_2 (analtypes._AnalyseState as_td_infos_3_0 as_type_var_heap_3_1 as_kind_heap_3_2 as_error_3_3 -> let _x_4_0 = analtypes.bindFreshKindVariablesToTypeVars vars_1_0 as_type_var_heap_3_1 as_kind_heap_3_2, _x_4_1 = analtypes.check_kinds_of_dynamic_type_148 common_defs_1 type_1_1 class_infos_2_1 (update as_2_2::analtypes._AnalyseState [1:select _x_4_0::_Tuple2 0,2:select _x_4_0::_Tuple2 1]) in analtypes.check_kinds_of_dynamics_156 common_defs_1 locals_1_2 expr_heap_2_0 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)) ) ) (syntax.EI_UnmarkedDynamic _x_1_0 _x_1_1 -> case _x_2 (_Tuple3 expr_heap_2_0 class_infos_2_1 as_2_2 -> <{_Tuple3!7}> expr_heap_2_0 class_infos_2_1 as_2_2) ) 
analtypes.check_kinds_of_dynamic_145 common_defs_0 !dynamic_ptr_1 !_x_2 = case _x_2 (_Tuple3 expr_heap_1_0 class_infos_1_1 as_1_2 -> let _x_2_0 = Heap.readPtr dynamic_ptr_1 expr_heap_1_0 in analtypes.check_kinds_of_dynamic_info_146 (select _x_2_0::_Tuple2 0) common_defs_0 (_Tuple3 (select _x_2_0::_Tuple2 1) class_infos_1_1 as_1_2)) 
analtypes.fold_st_585 common_defs_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_585 common_defs_0 x_1_1 (analtypes.check_kinds_of_dynamic_145 common_defs_0 a_1_0 st_2)) 
analtypes.check_kinds_of_dynamics_156 common_defs_0 !dynamic_ptrs_1 !expr_heap_2 class_infos_3 as_4 = analtypes.fold_st_585 common_defs_0 dynamic_ptrs_1 (_Tuple3 expr_heap_2 class_infos_3 as_4)
analtypes.check_kinds_of_icl_fuction_153 !_vArray_0 common_defs_1 fun_index_2::I !_x_3 = case _x_3 (_Tuple4 icl_fun_defs_1_0 class_infos_1_1 expression_heap_1_2 as_1_3 -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 icl_fun_defs_1_0 fun_index_2, _x_2_1 = select _x_2_0::_Tuple2 0, icl_fun_defs_2_2 = select _x_2_0::_Tuple2 1, fun_info_2_3 = select _x_2_1::syntax._FunDef 8, fun_pos_2_4 = select _x_2_1::syntax._FunDef 5, fun_ident_2_5 = select _x_2_1::syntax._FunDef 0 in <{analtypes._c;1121;11_713}> (select _x_2_1::syntax._FunDef 4) common_defs_1 fun_ident_2_5 fun_pos_2_4 fun_info_2_3 expression_heap_1_2 class_infos_1_1 as_1_3 icl_fun_defs_2_2) 
<{analtypes._c;1121;11_713}> !_x_0 common_defs_1 fun_ident_2 fun_pos_3 fun_info_4 expression_heap_5 class_infos_6 as_7 icl_fun_defs_8 = case _x_0 (general.Yes symbol_type_1_0 -> let _x_2_0 = analtypes.check_kinds_of_dynamics_156 common_defs_1 (select fun_info_4::syntax._FunInfo 5) expression_heap_5 class_infos_6 as_7, as_2_1 = select _x_2_0::_Tuple3 2, _x_2_2 = analtypes.check_kinds_of_symbol_type_155 common_defs_1 symbol_type_1_0 (select _x_2_0::_Tuple3 1) (update as_2_1::analtypes._AnalyseState [3:checksupport.pushErrorAdmin_32 (checksupport.newPosition fun_ident_2 fun_pos_3) (select as_2_1::analtypes._AnalyseState 3)]), as_2_3 = select _x_2_2::_Tuple2 1 in _Tuple4 icl_fun_defs_8 (select _x_2_2::_Tuple2 0) (select _x_2_0::_Tuple3 0) (update as_2_3::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (select as_2_3::analtypes._AnalyseState 3)])) (general.No -> let _x_2_0 = analtypes.check_kinds_of_dynamics_156 common_defs_1 (select fun_info_4::syntax._FunInfo 5) expression_heap_5 class_infos_6 as_7 in _Tuple4 icl_fun_defs_8 (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 2)) 
analtypes.i_fold_st_586 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_586 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
analtypes.i_fold_st_587 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_587 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.i_fold_st_588 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_588 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.i_fold_st_589 !_vArray_0 common_defs_1 !fr_2::I !to_3::I !st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_589 _vArray_0 common_defs_1 (<{StdInt.+_6}> fr_2 StdInt.one_11) to_3 (analtypes.check_kinds_of_icl_fuction_153 _vArray_0 common_defs_1 fr_2 st_4)) 
analtypes.check_kinds_of_icl_fuctions_136 !_vArray_0 common_defs_1 !_x_2 !_x_3 = case _x_2 (syntax._IndexRange ir_from_1_0 ir_to_1_1 -> case _x_3 (_Tuple4 icl_fun_defs_2_0 class_infos_2_1 expression_heap_2_2 as_2_3 -> analtypes.i_fold_st_589 _vArray_0 common_defs_1 ir_from_1_0 ir_to_1_1 (_Tuple4 icl_fun_defs_2_0 class_infos_2_1 expression_heap_2_2 as_2_3)) ) 
analtypes.i_fold_st_229 !<{_v<_0}> !_vone_1 !<{_v+_2}> op_3 fr_4 to_5 st_6 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 fr_4 to_5)) (True -> st_6) (False -> analtypes.i_fold_st_229 <{_v<_0}> _vone_1 <{_v+_2}> op_3 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 fr_4 (select _vone_1::<{StdOverloaded.one;}> 0)) to_5 (op_3 fr_4 st_6)) 
analtypes.check_kinds_of_dcl_fuction_143 !_vArray_0 common_defs_1 dcl_functions_2 fun_index_3::I !_x_4 = case _x_4 (_Tuple2 class_infos_1_0 as_1_1 -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 3 dcl_functions_2 fun_index_3, _x_2_1 = analtypes.check_kinds_of_symbol_type_155 common_defs_1 (select _x_2_0::syntax._FunType 3) class_infos_1_0 (update as_1_1::analtypes._AnalyseState [3:checksupport.pushErrorAdmin_32 (checksupport.newPosition (select _x_2_0::syntax._FunType 0) (select _x_2_0::syntax._FunType 4)) (select as_1_1::analtypes._AnalyseState 3)]), as_2_2 = select _x_2_1::_Tuple2 1 in _Tuple2 (select _x_2_1::_Tuple2 0) (update as_2_2::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (select as_2_2::analtypes._AnalyseState 3)])) 
analtypes.check_kinds_of_dcl_fuction_590 common_defs_0 dcl_functions_1 fun_index_2::I !_x_3 = case _x_3 (_Tuple2 class_infos_1_0 as_1_1 -> let _x_2_0 = analtypes.select_305 dcl_functions_1 fun_index_2, _x_2_1 = analtypes.check_kinds_of_symbol_type_155 common_defs_0 (select _x_2_0::syntax._FunType 3) class_infos_1_0 (update as_1_1::analtypes._AnalyseState [3:checksupport.pushErrorAdmin_32 (checksupport.newPosition (select _x_2_0::syntax._FunType 0) (select _x_2_0::syntax._FunType 4)) (select as_1_1::analtypes._AnalyseState 3)]), as_2_2 = select _x_2_1::_Tuple2 1 in _Tuple2 (select _x_2_1::_Tuple2 0) (update as_2_2::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (select as_2_2::analtypes._AnalyseState 3)])) 
analtypes.i_fold_st_591 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_591 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
analtypes.i_fold_st_592 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_592 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.i_fold_st_593 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_593 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.i_fold_st_594 common_defs_0 dcl_functions_1 !fr_2::I !to_3::I !st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_594 common_defs_0 dcl_functions_1 (<{StdInt.+_6}> fr_2 StdInt.one_11) to_3 (analtypes.check_kinds_of_dcl_fuction_590 common_defs_0 dcl_functions_1 fr_2 st_4)) 
analtypes.check_kinds_of_dcl_fuctions_154 !_vArray_0 common_defs_1 module_index_2::I dcl_modules_3 class_infos_4 as_5 = let _x_1_0 = select _vArray_0::<{_SystemArray.Array;}> 6 dcl_modules_3 module_index_2, _x_1_1 = select _x_1_0::_Tuple2 0, _x_1_2 = analtypes.i_fold_st_594 common_defs_1 (select _x_1_1::syntax._DclModule 1) 0 (select (select _x_1_1::syntax._DclModule 2)::syntax._IndexRange 0) (_Tuple2 class_infos_4 as_5) in _Tuple3 (select _x_1_0::_Tuple2 1) (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1)
analtypes.check_kinds_of_class_instances_595 common_defs_0 !instance_index_1::I !instance_defs_2 class_infos_3 as_4 = case (<{StdInt.==_16}> instance_index_1 (analtypes.size_322 instance_defs_2)) (True -> _Tuple2 class_infos_3 as_4) (False -> let _x_2_0 = analtypes.check_kinds_of_class_instance_137 common_defs_0 (analtypes.select_321 instance_defs_2 instance_index_1) class_infos_3 as_4 in analtypes.check_kinds_of_class_instances_595 common_defs_0 (<{StdInt.+_6}> instance_index_1 StdInt.one_11) instance_defs_2 (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1)) 
analtypes.check_kinds_of_generics_596 common_defs_0 !index_1::I !generic_defs_2 class_infos_3 gen_heap_4 as_5 = case (<{StdInt.==_16}> index_1 (analtypes.size_330 generic_defs_2)) (True -> _Tuple3 class_infos_3 gen_heap_4 as_5) (False -> let _x_2_0 = analtypes.check_kinds_of_generic_138 common_defs_0 (analtypes.select_329 generic_defs_2 index_1) class_infos_3 gen_heap_4 as_5 in analtypes.check_kinds_of_generics_596 common_defs_0 (<{StdInt.+_6}> index_1 StdInt.one_11) generic_defs_2 (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) 
analtypes.fold_st_597 !_vArray_0 common_defs_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_597 _vArray_0 common_defs_1 x_1_1 (analtypes.check_kinds_of_icl_fuctions_136 _vArray_0 common_defs_1 a_1_0 st_3)) 
analtypes.check_kinds_of_module_149 !_vArray_0 !_vArray_1 first_uncached_module_2::I main_module_index_3::I !used_module_numbers_4 icl_fun_def_ranges_5 common_defs_6 !module_index_7::I !_x_8 = case _x_8 (_Tuple6 icl_fun_defs_1_0 dcl_modules_1_1 class_infos_1_2 expression_heap_1_3 gen_heap_1_4 as_1_5 -> case (containers.inNumberSet module_index_7 used_module_numbers_4) (True -> case (<{StdInt.==_16}> module_index_7 main_module_index_3) (True -> let _x_4_0 = analtypes.check_kinds_of_class_instances_595 common_defs_6 0 (select (analtypes.select_265 common_defs_6 module_index_7)::syntax._CommonDefs 5) class_infos_1_2 as_1_5, _x_4_1 = analtypes.check_kinds_of_generics_596 common_defs_6 0 (select (analtypes.select_265 common_defs_6 module_index_7)::syntax._CommonDefs 6) (select _x_4_0::_Tuple2 0) gen_heap_1_4 (select _x_4_0::_Tuple2 1), _x_4_2 = analtypes.fold_st_597 _vArray_0 common_defs_6 icl_fun_def_ranges_5 (_Tuple4 icl_fun_defs_1_0 (select _x_4_1::_Tuple3 0) expression_heap_1_3 (analtypes.check_kinds_of_gencases_152 0 (select (analtypes.select_265 common_defs_6 module_index_7)::syntax._CommonDefs 7) (select _x_4_1::_Tuple3 2))) in _Tuple6 (select _x_4_2::_Tuple4 0) dcl_modules_1_1 (select _x_4_2::_Tuple4 1) (select _x_4_2::_Tuple4 2) (select _x_4_1::_Tuple3 1) (select _x_4_2::_Tuple4 3)) (False -> case (StdBool.not (<{StdInt.<_17}> module_index_7 first_uncached_module_2)) (True -> let _x_5_0 = analtypes.check_kinds_of_class_instances_595 common_defs_6 0 (select (analtypes.select_265 common_defs_6 module_index_7)::syntax._CommonDefs 5) class_infos_1_2 as_1_5, _x_5_1 = analtypes.check_kinds_of_generics_596 common_defs_6 0 (select (analtypes.select_265 common_defs_6 module_index_7)::syntax._CommonDefs 6) (select _x_5_0::_Tuple2 0) gen_heap_1_4 (select _x_5_0::_Tuple2 1), _x_5_2 = analtypes.check_kinds_of_dcl_fuctions_154 _vArray_1 common_defs_6 module_index_7 dcl_modules_1_1 (select _x_5_1::_Tuple3 0) (analtypes.check_kinds_of_gencases_152 0 (select (analtypes.select_265 common_defs_6 module_index_7)::syntax._CommonDefs 7) (select _x_5_1::_Tuple3 2)) in _Tuple6 icl_fun_defs_1_0 (select _x_5_2::_Tuple3 0) (select _x_5_2::_Tuple3 1) expression_heap_1_3 (select _x_5_1::_Tuple3 1) (select _x_5_2::_Tuple3 2)) (False -> _Tuple6 icl_fun_defs_1_0 dcl_modules_1_1 class_infos_1_2 expression_heap_1_3 gen_heap_1_4 as_1_5) ) ) (False -> _Tuple6 icl_fun_defs_1_0 dcl_modules_1_1 class_infos_1_2 expression_heap_1_3 gen_heap_1_4 as_1_5) ) 
analtypes.check_kinds_of_icl_fuction_602 common_defs_0 !fun_index_1::I !_x_2 = case _x_2 (_Tuple4 icl_fun_defs_1_0 class_infos_1_1 expression_heap_1_2 as_1_3 -> let _x_2_0 = analtypes.uselect_340 icl_fun_defs_1_0 fun_index_1, _x_2_1 = select _x_2_0::_Tuple2 0, icl_fun_defs_2_2 = select _x_2_0::_Tuple2 1, fun_info_2_3 = select _x_2_1::syntax._FunDef 8, fun_pos_2_4 = select _x_2_1::syntax._FunDef 5, fun_ident_2_5 = select _x_2_1::syntax._FunDef 0 in <{analtypes._c;1121;11_714}> (select _x_2_1::syntax._FunDef 4) common_defs_0 fun_ident_2_5 fun_pos_2_4 fun_info_2_3 expression_heap_1_2 class_infos_1_1 as_1_3 icl_fun_defs_2_2) 
<{analtypes._c;1121;11_714}> !_x_0 common_defs_1 fun_ident_2 fun_pos_3 fun_info_4 expression_heap_5 class_infos_6 as_7 icl_fun_defs_8 = case _x_0 (general.Yes symbol_type_1_0 -> let _x_2_0 = analtypes.check_kinds_of_dynamics_156 common_defs_1 (select fun_info_4::syntax._FunInfo 5) expression_heap_5 class_infos_6 as_7, as_2_1 = select _x_2_0::_Tuple3 2, _x_2_2 = analtypes.check_kinds_of_symbol_type_155 common_defs_1 symbol_type_1_0 (select _x_2_0::_Tuple3 1) (update as_2_1::analtypes._AnalyseState [3:checksupport.pushErrorAdmin_32 (checksupport.newPosition fun_ident_2 fun_pos_3) (select as_2_1::analtypes._AnalyseState 3)]), as_2_3 = select _x_2_2::_Tuple2 1 in _Tuple4 icl_fun_defs_8 (select _x_2_2::_Tuple2 0) (select _x_2_0::_Tuple3 0) (update as_2_3::analtypes._AnalyseState [3:checksupport.popErrorAdmin_31 (select as_2_3::analtypes._AnalyseState 3)])) (general.No -> let _x_2_0 = analtypes.check_kinds_of_dynamics_156 common_defs_1 (select fun_info_4::syntax._FunInfo 5) expression_heap_5 class_infos_6 as_7 in _Tuple4 icl_fun_defs_8 (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 2)) 
analtypes.i_fold_st_601 common_defs_0 !fr_1::I !to_2::I !st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_601 common_defs_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (analtypes.check_kinds_of_icl_fuction_602 common_defs_0 fr_1 st_3)) 
analtypes.check_kinds_of_icl_fuctions_600 common_defs_0 !_x_1 !_x_2 = case _x_1 (syntax._IndexRange ir_from_1_0 ir_to_1_1 -> case _x_2 (_Tuple4 icl_fun_defs_2_0 class_infos_2_1 expression_heap_2_2 as_2_3 -> analtypes.i_fold_st_601 common_defs_0 ir_from_1_0 ir_to_1_1 (_Tuple4 icl_fun_defs_2_0 class_infos_2_1 expression_heap_2_2 as_2_3)) ) 
analtypes.fold_st_599 common_defs_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> analtypes.fold_st_599 common_defs_0 x_1_1 (analtypes.check_kinds_of_icl_fuctions_600 common_defs_0 a_1_0 st_2)) 
analtypes.check_kinds_of_module_598 !_vArray_0 first_uncached_module_1::I main_module_index_2::I !used_module_numbers_3 icl_fun_def_ranges_4 common_defs_5 !module_index_6::I !_x_7 = case _x_7 (_Tuple6 icl_fun_defs_1_0 dcl_modules_1_1 class_infos_1_2 expression_heap_1_3 gen_heap_1_4 as_1_5 -> case (containers.inNumberSet module_index_6 used_module_numbers_3) (True -> case (<{StdInt.==_16}> module_index_6 main_module_index_2) (True -> let _x_4_0 = analtypes.check_kinds_of_class_instances_595 common_defs_5 0 (select (analtypes.select_265 common_defs_5 module_index_6)::syntax._CommonDefs 5) class_infos_1_2 as_1_5, _x_4_1 = analtypes.check_kinds_of_generics_596 common_defs_5 0 (select (analtypes.select_265 common_defs_5 module_index_6)::syntax._CommonDefs 6) (select _x_4_0::_Tuple2 0) gen_heap_1_4 (select _x_4_0::_Tuple2 1), _x_4_2 = analtypes.fold_st_599 common_defs_5 icl_fun_def_ranges_4 (_Tuple4 icl_fun_defs_1_0 (select _x_4_1::_Tuple3 0) expression_heap_1_3 (analtypes.check_kinds_of_gencases_152 0 (select (analtypes.select_265 common_defs_5 module_index_6)::syntax._CommonDefs 7) (select _x_4_1::_Tuple3 2))) in _Tuple6 (select _x_4_2::_Tuple4 0) dcl_modules_1_1 (select _x_4_2::_Tuple4 1) (select _x_4_2::_Tuple4 2) (select _x_4_1::_Tuple3 1) (select _x_4_2::_Tuple4 3)) (False -> case (StdBool.not (<{StdInt.<_17}> module_index_6 first_uncached_module_1)) (True -> let _x_5_0 = analtypes.check_kinds_of_class_instances_595 common_defs_5 0 (select (analtypes.select_265 common_defs_5 module_index_6)::syntax._CommonDefs 5) class_infos_1_2 as_1_5, _x_5_1 = analtypes.check_kinds_of_generics_596 common_defs_5 0 (select (analtypes.select_265 common_defs_5 module_index_6)::syntax._CommonDefs 6) (select _x_5_0::_Tuple2 0) gen_heap_1_4 (select _x_5_0::_Tuple2 1), _x_5_2 = analtypes.check_kinds_of_dcl_fuctions_154 _vArray_0 common_defs_5 module_index_6 dcl_modules_1_1 (select _x_5_1::_Tuple3 0) (analtypes.check_kinds_of_gencases_152 0 (select (analtypes.select_265 common_defs_5 module_index_6)::syntax._CommonDefs 7) (select _x_5_1::_Tuple3 2)) in _Tuple6 icl_fun_defs_1_0 (select _x_5_2::_Tuple3 0) (select _x_5_2::_Tuple3 1) expression_heap_1_3 (select _x_5_1::_Tuple3 1) (select _x_5_2::_Tuple3 2)) (False -> _Tuple6 icl_fun_defs_1_0 dcl_modules_1_1 class_infos_1_2 expression_heap_1_3 gen_heap_1_4 as_1_5) ) ) (False -> _Tuple6 icl_fun_defs_1_0 dcl_modules_1_1 class_infos_1_2 expression_heap_1_3 gen_heap_1_4 as_1_5) ) 
analtypes.i_fold_st_603 !_vone_0 !<{_v+_1}> op_2 !fr_3::I !to_4::I st_5 = case (StdBool.not (<{StdInt.<_17}> fr_3 to_4)) (True -> st_5) (False -> analtypes.i_fold_st_603 _vone_0 <{_v+_1}> op_2 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 fr_3 (select _vone_0::<{StdOverloaded.one;}> 0)) to_4 (op_2 fr_3 st_5)) 
analtypes.check_kinds_of_dcl_fuctions_605 common_defs_0 module_index_1::I dcl_modules_2 class_infos_3 as_4 = let _x_1_0 = analtypes.uselect_260 dcl_modules_2 module_index_1, _x_1_1 = select _x_1_0::_Tuple2 0, _x_1_2 = analtypes.i_fold_st_594 common_defs_0 (select _x_1_1::syntax._DclModule 1) 0 (select (select _x_1_1::syntax._DclModule 2)::syntax._IndexRange 0) (_Tuple2 class_infos_3 as_4) in _Tuple3 (select _x_1_0::_Tuple2 1) (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1)
analtypes.check_kinds_of_module_604 first_uncached_module_0::I main_module_index_1::I !used_module_numbers_2 icl_fun_def_ranges_3 common_defs_4 !module_index_5::I !_x_6 = case _x_6 (_Tuple6 icl_fun_defs_1_0 dcl_modules_1_1 class_infos_1_2 expression_heap_1_3 gen_heap_1_4 as_1_5 -> case (containers.inNumberSet module_index_5 used_module_numbers_2) (True -> case (<{StdInt.==_16}> module_index_5 main_module_index_1) (True -> let _x_4_0 = analtypes.check_kinds_of_class_instances_595 common_defs_4 0 (select (analtypes.select_265 common_defs_4 module_index_5)::syntax._CommonDefs 5) class_infos_1_2 as_1_5, _x_4_1 = analtypes.check_kinds_of_generics_596 common_defs_4 0 (select (analtypes.select_265 common_defs_4 module_index_5)::syntax._CommonDefs 6) (select _x_4_0::_Tuple2 0) gen_heap_1_4 (select _x_4_0::_Tuple2 1), _x_4_2 = analtypes.fold_st_599 common_defs_4 icl_fun_def_ranges_3 (_Tuple4 icl_fun_defs_1_0 (select _x_4_1::_Tuple3 0) expression_heap_1_3 (analtypes.check_kinds_of_gencases_152 0 (select (analtypes.select_265 common_defs_4 module_index_5)::syntax._CommonDefs 7) (select _x_4_1::_Tuple3 2))) in _Tuple6 (select _x_4_2::_Tuple4 0) dcl_modules_1_1 (select _x_4_2::_Tuple4 1) (select _x_4_2::_Tuple4 2) (select _x_4_1::_Tuple3 1) (select _x_4_2::_Tuple4 3)) (False -> case (StdBool.not (<{StdInt.<_17}> module_index_5 first_uncached_module_0)) (True -> let _x_5_0 = analtypes.check_kinds_of_class_instances_595 common_defs_4 0 (select (analtypes.select_265 common_defs_4 module_index_5)::syntax._CommonDefs 5) class_infos_1_2 as_1_5, _x_5_1 = analtypes.check_kinds_of_generics_596 common_defs_4 0 (select (analtypes.select_265 common_defs_4 module_index_5)::syntax._CommonDefs 6) (select _x_5_0::_Tuple2 0) gen_heap_1_4 (select _x_5_0::_Tuple2 1), _x_5_2 = analtypes.check_kinds_of_dcl_fuctions_605 common_defs_4 module_index_5 dcl_modules_1_1 (select _x_5_1::_Tuple3 0) (analtypes.check_kinds_of_gencases_152 0 (select (analtypes.select_265 common_defs_4 module_index_5)::syntax._CommonDefs 7) (select _x_5_1::_Tuple3 2)) in _Tuple6 icl_fun_defs_1_0 (select _x_5_2::_Tuple3 0) (select _x_5_2::_Tuple3 1) expression_heap_1_3 (select _x_5_1::_Tuple3 1) (select _x_5_2::_Tuple3 2)) (False -> _Tuple6 icl_fun_defs_1_0 dcl_modules_1_1 class_infos_1_2 expression_heap_1_3 gen_heap_1_4 as_1_5) ) ) (False -> _Tuple6 icl_fun_defs_1_0 dcl_modules_1_1 class_infos_1_2 expression_heap_1_3 gen_heap_1_4 as_1_5) ) 
analtypes.i_fold_st_606 !<{_v+_0}> op_1 !fr_2::I !to_3::I st_4 = case (StdBool.not (<{StdInt.<_17}> fr_2 to_3)) (True -> st_4) (False -> analtypes.i_fold_st_606 <{_v+_0}> op_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 fr_2 StdInt.one_11) to_3 (op_1 fr_2 st_4)) 
analtypes.i_fold_st_607 op_0 !fr_1::I !to_2::I st_3 = case (StdBool.not (<{StdInt.<_17}> fr_1 to_2)) (True -> st_3) (False -> analtypes.i_fold_st_607 op_0 (<{StdInt.+_6}> fr_1 StdInt.one_11) to_2 (op_0 fr_1 st_3)) 
analtypes.i_fold_st_608 first_uncached_module_0::I main_module_index_1::I used_module_numbers_2 icl_fun_def_ranges_3 common_defs_4 !fr_5::I !to_6::I !st_7 = case (StdBool.not (<{StdInt.<_17}> fr_5 to_6)) (True -> st_7) (False -> analtypes.i_fold_st_608 first_uncached_module_0 main_module_index_1 used_module_numbers_2 icl_fun_def_ranges_3 common_defs_4 (<{StdInt.+_6}> fr_5 StdInt.one_11) to_6 (analtypes.check_kinds_of_module_604 first_uncached_module_0 main_module_index_1 used_module_numbers_2 icl_fun_def_ranges_3 common_defs_4 fr_5 st_7)) 
analtypes.checkKindsOfCommonDefsAndFunctions !first_uncached_module_0::I !main_module_index_1::I !used_module_numbers_2 !icl_fun_def_ranges_3 !common_defs_4 !icl_fun_defs_5 !dcl_modules_6 !type_def_infos_7 !class_infos_8 !type_var_heap_9 !expression_heap_10 !gen_heap_11 !error_12 = let _x_1_0 = analtypes.i_fold_st_608 first_uncached_module_0 main_module_index_1 used_module_numbers_2 icl_fun_def_ranges_3 common_defs_4 0 (analtypes.size_266 common_defs_4) (_Tuple6 icl_fun_defs_5 dcl_modules_6 class_infos_8 expression_heap_10 gen_heap_11 (analtypes._AnalyseState type_def_infos_7 type_var_heap_9 Heap.newHeap error_12)), as_1_1 = select _x_1_0::_Tuple6 5 in <{_Tuple7!127}> (select _x_1_0::_Tuple6 0) (select _x_1_0::_Tuple6 1) (select as_1_1::analtypes._AnalyseState 0) (select as_1_1::analtypes._AnalyseState 1) (select _x_1_0::_Tuple6 3) (select _x_1_0::_Tuple6 4) (select as_1_1::analtypes._AnalyseState 3)
<{analtypes.<<<_175}> !file_0 !_x_1 = case _x_1 (syntax._DynamicType dt_uni_vars_1_0 dt_global_vars_1_1 dt_type_1_2 dt_contexts_1_3 -> <{syntax.<<<_28}> (<{general.<<<_13}> (<{StdFile.<<<;}> <{syntax.<<<_20}>) file_0 dt_global_vars_1_1) dt_type_1_2) 
<{analtypes.<<<_176}> !file_0 !_x_1 = case _x_1 (syntax._GlobalIndex gi_module_1_0 gi_index_1_1 -> <{StdFile.<<<_37}> (<{StdFile.<<<_36}> (<{StdFile.<<<_37}> (<{StdFile.<<<_36}> (<{StdFile.<<<_37}> file_0 '[') gi_module_1_0) ',') gi_index_1_1) ']') 
<{analtypes.TD;TypeGroups}> _x_0::B = _predefined._Nil
<{analtypes.TD;PartitioningInfo}> _x_0::B = _predefined._Nil
<{analtypes.TD;UnifyKindsInfo}> _x_0::B = _predefined._Nil
<{analtypes.TD;VarBind}> _x_0::B = _predefined._Nil
<{analtypes.TD;Conditions}> _x_0::B = _predefined._Nil
<{analtypes.TD;AnalyseState}> _x_0::B = _predefined._Nil
<{analtypes.TD;TypeProperties}> _x_0::B = _predefined._Nil
<{analtypes.TD;analTypes;}> _x_0::B = _predefined._Nil
<{analtypes.TD;isUnique;}> _x_0::B = _predefined._Nil


|| Converted Records
:: analtypes._PartitioningInfo = {!analtypes.pi_marks, !analtypes.pi_type_defs, !analtypes.pi_type_def_infos, !analtypes.pi_next_num::I, !analtypes.pi_next_group_num::I, !analtypes.pi_groups, !analtypes.pi_deps, !analtypes.pi_error}

:: analtypes._UnifyKindsInfo = {!analtypes.uki_kind_heap, !analtypes.uki_error}

:: analtypes._VarBind = {!analtypes.vb_var, !analtypes.vb_vars}

:: analtypes._Conditions = {!analtypes.con_top_var_binds, !analtypes.con_var_binds}

:: analtypes._AnalyseState = {!analtypes.as_td_infos, !analtypes.as_type_var_heap, !analtypes.as_kind_heap, !analtypes.as_error}

:: <{analtypes.analTypes;}> = {!analtypes.analTypes}

:: <{analtypes.isUnique;}> = {!analtypes.isUnique}

