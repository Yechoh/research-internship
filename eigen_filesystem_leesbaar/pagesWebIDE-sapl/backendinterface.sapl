|| ?module? backendinterface


backendinterface.anon_47 !x_0 = x_0
backendinterface.anon_48 !g_0 f_1 x_2 = g_0 (f_1 x_2)
backendinterface.foldState_46 function_0 !_x_1 = case _x_1 (_predefined._Nil -> backendinterface.anon_47) (_predefined._Cons hd_1_0 tl_1_1 -> backendinterface.anon_48 (backendinterface.foldState_46 function_0 tl_1_1) (function_0 hd_1_0)) 
backendinterface.checkVersion !_x_0 !errorFile_1 = case _x_0 (Version.VersionsAreCompatible -> <{_Tuple2!3}> True errorFile_1) (Version.VersionObservedIsTooNew -> <{_Tuple2!3}> False (StdFile.fwrites "Error: the back end library is too new\n" errorFile_1)) (Version.VersionObservedIsTooOld -> <{_Tuple2!3}> False (StdFile.fwrites "Error: the back end library is too old\n" errorFile_1)) 
backendinterface.function_indices2_20 !_vArray_0 !_x_1 i_2::I components_3 = case _x_1 (checksupport.ComponentMember member_1_0 members_1_1 -> _predefined._Cons member_1_0 (backendinterface.function_indices2_20 _vArray_0 members_1_1 i_2 components_3)) (checksupport.GeneratedComponentMember member_1_0 _x_1_1 members_1_2 -> _predefined._Cons member_1_0 (backendinterface.function_indices2_20 _vArray_0 members_1_2 i_2 components_3)) (checksupport.NoComponentMembers -> backendinterface.function_indices_19 _vArray_0 (<{StdInt.+_6}> i_2 1) components_3) 
backendinterface.function_indices_19 !_vArray_0 !i_1::I components_2 = case (<{StdInt.<_17}> i_1 (select _vArray_0::<{_SystemArray.Array;}> 4 components_2)) (True -> backendinterface.function_indices2_20 _vArray_0 (select (select _vArray_0::<{_SystemArray.Array;}> 3 components_2 i_1)::checksupport._Component 0) i_1 components_2) (False -> _predefined._Nil) 
<{backendinterface.cu;97;29_22}> !_vArray_0 !_vone_1 !<{_v+_2}> c_l_i_3 !g_i_4::I !g_s_5::I g_a_6 = <{backendinterface.g_c1;97;45_119}> (StdBool.not (<{StdInt.<_17}> g_s_5 g_i_4)) g_a_6 g_i_4 _vArray_0 _vone_1 <{_v+_2}> c_l_i_3 g_s_5
<{backendinterface.g_c1;97;45_119}> !_x_0::B g_a_1 g_i_2::I _vArray_3 _vone_4 <{_v+_5}> c_l_i_6 g_s_7::I = case _x_0 (True -> <{backendinterface.g_c2;97;45_118}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 _vone_4 <{_v+_5}> c_l_i_6 g_i_2 g_s_7 g_a_1) (_ -> c_l_i_6)
<{backendinterface.g_c2;97;45_118}> !_x_0 !_vArray_1 !_vone_2 !<{_v+_3}> c_l_i_4 !g_i_5::I !g_s_6::I g_a_7 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule dcl_name_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> <{backendinterface.cu;97;29_22}> _vArray_1 _vone_2 <{_v+_3}> (select <{_v+_3}>::<{StdOverloaded.+;}> 0 c_l_i_4 (select _vone_2::<{StdOverloaded.one;}> 0)) (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_1_1) ) (_ -> <{backendinterface.cu;97;29_22}> _vArray_1 _vone_2 <{_v+_3}> c_l_i_4 (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_7)
<{backendinterface.cu;97;29_21}> !_vArray_0 !_vArray_1 c_a_2 c_i_3::I !g_i_4::I !g_s_5::I g_a_6 = <{backendinterface.g_c1;97;45_121}> (StdBool.not (<{StdInt.<_17}> g_s_5 g_i_4)) g_a_6 g_i_4 _vArray_0 _vArray_1 c_a_2 c_i_3 g_s_5
<{backendinterface.g_c1;97;45_121}> !_x_0::B g_a_1 g_i_2::I _vArray_3 _vArray_4 c_a_5 c_i_6::I g_s_7::I = case _x_0 (True -> <{backendinterface.g_c2;97;45_120}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 _vArray_4 c_a_5 c_i_6 g_i_2 g_s_7 g_a_1) (_ -> c_a_5)
<{backendinterface.g_c2;97;45_120}> !_x_0 !_vArray_1 !_vArray_2 c_a_3 c_i_4::I !g_i_5::I !g_s_6::I g_a_7 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule dcl_name_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> <{backendinterface.cu;97;29_21}> _vArray_1 _vArray_2 (select _vArray_2::<{_SystemArray.Array;}> 5 c_a_3 c_i_4 dcl_common_2_7) (<{StdInt.+_6}> c_i_4 StdInt.one_11) (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_1_1) ) (_ -> <{backendinterface.cu;97;29_21}> _vArray_1 _vArray_2 c_a_3 c_i_4 (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_7)
backendinterface.fold_st_43 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> backendinterface.fold_st_43 op_0 x_1_1 (op_0 a_1_0 st_2)) 
<{backendinterface.cu;485;35_28}> !_vArray_0 cArray_1::I c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{backendinterface.cu;485;35_28}> _vArray_0 cArray_1 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (backend.BEGetIntFromArray c_i_3 cArray_1)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
<{backendinterface.cu;485;35_98}> cArray_0::I !c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{backendinterface.cu;485;35_98}> cArray_0 (_SystemArray.update_13 c_a_1 c_i_2 (backend.BEGetIntFromArray c_i_2 cArray_0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
backendinterface.copyInts !length_0::I !cArray_1::I = let g_s_1_0::I = <{StdInt.-_7}> length_0 1 in <{backendinterface.cu;485;35_98}> cArray_1 (_SystemArray._createArray_8 (<{StdInt.+_6}> g_s_1_0 StdInt.one_11)) 0 g_s_1_0
backendinterface.nextBit !_x_0 !offset_1::I = case _x_0 (backendinterface._StrictnessInfo si_size_1_0 si_positions_1_1 si_name_1_2 si_robust_encoding_1_3 -> case (<{StdInt.<_17}> offset_1 si_size_1_0) (True -> _Tuple2 (containers.bitvectSelect offset_1 si_positions_1_1) (<{StdInt.+_6}> offset_1 1)) (False -> case si_robust_encoding_1_3 (True -> StdMisc.abort "backendinterface, nextBit: bit vector too small") (False -> _Tuple2 False offset_1) ) ) 
backendinterface.addStrictness_30 !_vaddStrictness_0 !strictPositions_1 !_x_2 offset_3::I args_strictness_4 args_strictness_index_5::I = case _x_2 (_predefined._Nil -> <{_Tuple3!7}> _predefined._Nil offset_3 args_strictness_4) (_predefined._Cons type_1_0 types_1_1 -> let _x_2_0 = select _vaddStrictness_0::<{backendinterface.addStrictness;}> 0 strictPositions_1 type_1_0 offset_3 args_strictness_4 args_strictness_index_5, _x_2_1 = backendinterface.addStrictness_30 _vaddStrictness_0 strictPositions_1 types_1_1 (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2) (<{StdInt.+_6}> args_strictness_index_5 1) in <{_Tuple3!7}> (_predefined._Cons (select _x_2_0::_Tuple3 0) (select _x_2_1::_Tuple3 0)) (select _x_2_1::_Tuple3 1) (select _x_2_1::_Tuple3 2)) 
backendinterface.checkStrictness::I !info_0 wasStrict_1::B !offset_2::I = case info_0 (backendinterface._StrictnessInfo si_size_1_0 si_positions_1_1 si_name_1_2 si_robust_encoding_1_3 -> case si_robust_encoding_1_3 (True -> let _x_3_0 = backendinterface.nextBit info_0 offset_2 in case (StdBool.not (<{StdBool.==_3}> (select _x_3_0::_Tuple2 0) wasStrict_1)) (True -> StdMisc.abort "backendinterface, checkStrictness: wrong info for strictness annotation") (False -> select _x_3_0::_Tuple2 1) ) (False -> offset_2) ) 
backendinterface.addStrictnessAnnotation !info_0 !offset_1::I args_strictness_2 args_strictness_index_3::I = let wasStrict_1_0 = containers.arg_is_strict args_strictness_index_3 args_strictness_2, offset_1_1::I = backendinterface.checkStrictness info_0 wasStrict_1_0 offset_1, _x_1_2::B = backendinterface.nextBit info_0 offset_1_1 in case (select _x_1_2::_Tuple2 0) (True -> case wasStrict_1_0 (True -> StdMisc.abort "backendinterface, addStrictness: already strict") (False -> _Tuple3 True (select _x_1_2::_Tuple2 1) (containers.add_strictness args_strictness_index_3 args_strictness_2)) ) (False -> _Tuple3 wasStrict_1_0 (select _x_1_2::_Tuple2 1) args_strictness_2) 
backendinterface.checkType::I !info_0 isTuple_1::B !offset_2::I = case info_0 (backendinterface._StrictnessInfo si_size_1_0 si_positions_1_1 si_name_1_2 si_robust_encoding_1_3 -> case si_robust_encoding_1_3 (True -> let _x_3_0 = backendinterface.nextBit info_0 offset_2 in case (StdBool.not (<{StdBool.==_3}> (select _x_3_0::_Tuple2 0) isTuple_1)) (True -> StdMisc.abort "backendinterface, checkType: wrong type") (False -> select _x_3_0::_Tuple2 1) ) (False -> offset_2) ) 
backendinterface.addStrictness_99 !strictPositions_0 !_x_1 !offset_2::I !args_strictness_3 args_strictness_index_4::I = case _x_1 (_predefined._Nil -> <{_Tuple3!7}> _predefined._Nil offset_2 args_strictness_3) (_predefined._Cons type_1_0 types_1_1 -> let _x_2_0 = backendinterface.addStrictness_31 strictPositions_0 type_1_0 offset_2 args_strictness_3 args_strictness_index_4, _x_2_1 = backendinterface.addStrictness_99 strictPositions_0 types_1_1 (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2) (<{StdInt.+_6}> args_strictness_index_4 1) in <{_Tuple3!7}> (_predefined._Cons (select _x_2_0::_Tuple3 0) (select _x_2_1::_Tuple3 0)) (select _x_2_1::_Tuple3 1) (select _x_2_1::_Tuple3 2)) 
backendinterface.addStrictnessToType strictPositions_0 isStrict_1::B !type_2 offset_3::I = case type_2 (syntax.TA ident_1_0 args_1_1 -> case ident_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop_2_3 -> case type_index_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> let isTuple_4_0::B = backendinterface._f122_122 (<{StdInt.==_16}> glob_module_3_1 1) glob_object_3_0 in case (case isTuple_4_0 (True -> isStrict_1) (False -> False) ) (True -> let offset_6_0 = backendinterface.checkType strictPositions_0 isTuple_4_0 offset_3, _x_6_1 = backendinterface.addStrictness_99 strictPositions_0 args_1_1 offset_6_0 syntax.NotStrict 0, args_strictness_6_2::I = select _x_6_1::_Tuple3 2 in case (containers.is_not_strict args_strictness_6_2) (True -> _Tuple2 (syntax.TA ident_1_0 (select _x_6_1::_Tuple3 0)) (select _x_6_1::_Tuple3 1)) (False -> _Tuple2 (syntax.TAS ident_1_0 (select _x_6_1::_Tuple3 0) args_strictness_6_2) (select _x_6_1::_Tuple3 1)) ) (False -> _Tuple2 type_2 (backendinterface.checkType strictPositions_0 isTuple_4_0 offset_3)) ) ) ) (syntax.TAS ident_1_0 args_1_1 strictness_1_2 -> case ident_1_0 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 type_index_2_2 type_prop_2_3 -> case type_index_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> let isTuple_4_0::B = backendinterface._f123_123 (<{StdInt.==_16}> glob_module_3_1 1) glob_object_3_0 in case (case isTuple_4_0 (True -> isStrict_1) (False -> False) ) (True -> let _x_6_0 = backendinterface.addStrictness_99 strictPositions_0 args_1_1 (backendinterface.checkType strictPositions_0 isTuple_4_0 offset_3) strictness_1_2 0 in _Tuple2 (syntax.TAS ident_1_0 (select _x_6_0::_Tuple3 0) (select _x_6_0::_Tuple3 2)) (select _x_6_0::_Tuple3 1)) (False -> _Tuple2 type_2 (backendinterface.checkType strictPositions_0 isTuple_4_0 offset_3)) ) ) ) (_ -> _Tuple2 type_2 (backendinterface.checkType strictPositions_0 False offset_3))
backendinterface.addStrictness_31 !strictPositions_0 !arg_1 !offset_2::I !args_strictness_3 args_strictness_index_4::I = case arg_1 (syntax._AType at_attribute_1_0 at_type_1_1 -> let _x_2_0 = backendinterface.addStrictnessAnnotation strictPositions_0 offset_2 args_strictness_3 args_strictness_index_4, _x_2_1 = backendinterface.addStrictnessToType strictPositions_0 (select _x_2_0::_Tuple3 0) at_type_1_1 (select _x_2_0::_Tuple3 1) in <{_Tuple3!7}> (update arg_1::syntax._AType [1:select _x_2_1::_Tuple2 0]) (select _x_2_1::_Tuple2 1) (select _x_2_0::_Tuple3 2)) 
backendinterface._f123_123::B !_x_0::B glob_object_1::I = case _x_0 (True -> case (StdBool.not (<{StdInt.<_17}> glob_object_1 8)) (True -> StdBool.not (<{StdInt.<_17}> 38 glob_object_1)) (False -> False) ) (_ -> False)
backendinterface._f122_122::B !_x_0::B glob_object_1::I = case _x_0 (True -> case (StdBool.not (<{StdInt.<_17}> glob_object_1 8)) (True -> StdBool.not (<{StdInt.<_17}> 38 glob_object_1)) (False -> False) ) (_ -> False)
backendinterface.addStrictnessToSymbolType !strictPositions_0 args_1 !offset_2::I = case strictPositions_0 (backendinterface._StrictnessInfo si_size_1_0 si_positions_1_1 si_name_1_2 si_robust_encoding_1_3 -> case (StdBool.not (<{StdInt.<_17}> offset_2 si_size_1_0)) (True -> _Tuple2 args_1 offset_2) ) (_ -> case args_1 (syntax._SymbolType st_vars_1_0 st_args_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> let _x_2_0 = backendinterface.addStrictness_99 strictPositions_0 st_args_1_1 offset_2 st_args_strictness_1_2 0 in _Tuple2 (update args_1::syntax._SymbolType [1:select _x_2_0::_Tuple3 0,2:select _x_2_0::_Tuple3 2]) (select _x_2_0::_Tuple3 1)) )
backendinterface.checkFinalOffset !info_0 !offset_1::I !value_2 = case info_0 (backendinterface._StrictnessInfo si_size_1_0 si_positions_1_1 si_name_1_2 si_robust_encoding_1_3 -> case (case (<{StdInt.<_17}> offset_1 si_size_1_0) (True -> True) (False -> case si_robust_encoding_1_3 (True -> <{StdInt.<_17}> si_size_1_0 offset_1) (False -> False) ) ) (True -> StdMisc.abort "backendinterface, checkFinalOffset: wrong offset") (False -> value_2) ) 
backendinterface.addStrictnessFromBackEnd !function_0::I functionName_1 !backEnd_2::I type_3 = let _x_1_0::I = backend.BEStrictPositions function_0 backEnd_2, bitSize_1_1 = select _x_1_0::_Tuple3 0 in case (<{StdInt.==_16}> bitSize_1_1 0) (True -> _Tuple3 False type_3 (select _x_1_0::_Tuple3 2)) (False -> let strictness_3_0 = backendinterface._StrictnessInfo bitSize_1_1 (backendinterface.copyInts (<{StdInt./_10}> (<{StdInt.+_6}> bitSize_1_1 31) 32) (select _x_1_0::_Tuple3 1)) functionName_1 False, _x_3_1 = backendinterface.nextBit strictness_3_0 0, strictness_3_2 = update strictness_3_0::backendinterface._StrictnessInfo [3:select _x_3_1::_Tuple2 0], _x_3_3 = backendinterface.nextBit strictness_3_2 (select _x_3_1::_Tuple2 1), _x_3_4 = backendinterface.addStrictnessToSymbolType strictness_3_2 type_3 (select _x_3_3::_Tuple2 1) in _Tuple3 (select _x_3_3::_Tuple2 0) (backendinterface.checkFinalOffset strictness_3_2 (select _x_3_4::_Tuple2 1) (select _x_3_4::_Tuple2 0)) (select _x_1_0::_Tuple3 2)) 
backendinterface.fold_st_42 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> backendinterface.fold_st_42 op_0 x_1_1 (op_0 a_1_0 st_2)) 
backendinterface.markAttrVarCollected !_x_0 !attrVarHeap_1 = case _x_0 (syntax._AttributeVar av_ident_1_0 av_info_ptr_1_1 -> Heap.writePtr av_info_ptr_1_1 syntax.AVI_Collected attrVarHeap_1) 
backendinterface.collectAttrVars_35 !attrVar_0 !_x_1 = case attrVar_0 (syntax._AttributeVar av_ident_1_0 av_info_ptr_1_1 -> case _x_1 (_Tuple2 attrVars_2_0 attrVarHeap_2_1 -> let _x_3_0 = Heap.readPtr av_info_ptr_1_1 attrVarHeap_2_1, attrVarHeap_3_1 = select _x_3_0::_Tuple2 1 in <{backendinterface._c;385;13_124}> (select _x_3_0::_Tuple2 0) attrVars_2_0 attrVarHeap_3_1 attrVar_0) ) 
<{backendinterface._c;385;13_124}> !_x_0 attrVars_1 attrVarHeap_2 attrVar_3 = case _x_0 (syntax.AVI_Collected -> _Tuple2 attrVars_1 attrVarHeap_2) (_ -> _Tuple2 (_predefined._Cons attrVar_3 attrVars_1) (backendinterface.markAttrVarCollected attrVar_3 attrVarHeap_2))
backendinterface.collectAttrVars_33 !_x_0 !collect_1 = case _x_0 (syntax.TA_Var attrVar_1_0 -> backendinterface.collectAttrVars_35 attrVar_1_0 collect_1) (syntax.TA_RootVar attrVar_1_0 -> backendinterface.collectAttrVars_35 attrVar_1_0 collect_1) (syntax.TA_List _x_1_0 attribute_1_1 -> backendinterface.collectAttrVars_33 attribute_1_1 collect_1) (syntax.TA_Locked attribute_1_0 -> backendinterface.collectAttrVars_33 attribute_1_0 collect_1) (_ -> collect_1)
backendinterface.fold_st_49 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> backendinterface.fold_st_49 op_0 x_1_1 (op_0 a_1_0 st_2)) 
backendinterface.collectAttrVars_36 !_vcollectAttrVars_0 !l_1 collect_2 = backendinterface.fold_st_49 (select _vcollectAttrVars_0::<{backendinterface.collectAttrVars;}> 0) l_1 collect_2
backendinterface.fold_st_101 !_x_0 st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> backendinterface.fold_st_101 x_1_1 (backendinterface.collectAttrVars_32 a_1_0 st_1)) 
backendinterface.collectAttrVars_100 !l_0 collect_1 = backendinterface.fold_st_101 l_0 collect_1
backendinterface.collectAttrVars_34 !_x_0 collect_1 = case _x_0 (syntax.TA _x_1_0 types_1_1 -> backendinterface.collectAttrVars_100 types_1_1 collect_1) (syntax.TAS _x_1_0 types_1_1 _x_1_2 -> backendinterface.collectAttrVars_100 types_1_1 collect_1) (<{syntax.-->}> type1_1_0 type2_1_1 -> backendinterface.collectAttrVars_32 type1_1_0 (backendinterface.collectAttrVars_32 type2_1_1 collect_1)) (syntax.TArrow1 type_1_0 -> backendinterface.collectAttrVars_32 type_1_0 collect_1) (<{syntax.:@:}> _x_1_0 types_1_1 -> backendinterface.collectAttrVars_100 types_1_1 collect_1) (syntax.TFA _x_1_0 type_1_1 -> backendinterface.collectAttrVars_34 type_1_1 collect_1) (_ -> collect_1)
backendinterface.collectAttrVars_32 !_x_0 collect_1 = case _x_0 (syntax._AType at_attribute_1_0 at_type_1_1 -> backendinterface.collectAttrVars_33 at_attribute_1_0 (backendinterface.collectAttrVars_34 at_type_1_1 collect_1)) 
backendinterface.fold_st_102 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> backendinterface.fold_st_102 x_1_1 (backendinterface.markAttrVarCollected a_1_0 st_1)) 
backendinterface.collectSymbolTypeAttrVars !type_0 attrVarHeap_1 = case type_0 (syntax._SymbolType st_vars_1_0 st_args_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> let _x_2_0 = backendinterface.collectAttrVars_32 st_result_1_4 (backendinterface.collectAttrVars_100 st_args_1_1 (_Tuple2 st_attr_vars_1_6 (backendinterface.fold_st_102 st_attr_vars_1_6 attrVarHeap_1))) in _Tuple2 (update type_0::syntax._SymbolType [6:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
backendinterface.fold_st_41 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> backendinterface.fold_st_41 op_0 x_1_1 (op_0 a_1_0 st_2)) 
backendinterface.typeToClass !_x_0 !_x_1 = case _x_0 (backendinterface._DictionaryToClassInfo dtci_iclModule_1_0 dtci_iclModule_1_1 dtci_dclModules_1_2 -> case _x_1 (syntax._TypeSymbIdent type_ident_2_0 type_arity_2_1 _x_2_2 type_prop_2_3 -> case _x_2_2 (syntax._Global glob_object_3_0 glob_module_3_1 -> let !nDclTypes_4_0::I = backendinterface.size_70 (select (select dclModule_4_1::syntax._DclModule 7)::syntax._CommonDefs 0), dclModule_4_1 = backendinterface.select_53 dtci_dclModules_1_2 glob_module_3_1 in case (case (StdBool.not (<{StdInt.==_16}> glob_module_3_1 dtci_iclModule_1_0)) (True -> True) (False -> <{StdInt.<_17}> glob_object_3_0 nDclTypes_4_0) ) (True -> let nDclClasses_6_0::I = backendinterface.size_62 (select (select dclModule_4_1::syntax._DclModule 7)::syntax._CommonDefs 3), class_6_1::I = <{StdInt.-_7}> glob_object_3_0 (<{StdInt.-_7}> nDclTypes_4_0 nDclClasses_6_0) in case (StdBool.not (<{StdInt.<_17}> class_6_1 0)) (True -> general.Yes (syntax._Global (syntax._DefinedSymbol (select (backendinterface.select_61 (select (select dclModule_4_1::syntax._DclModule 7)::syntax._CommonDefs 3) class_6_1)::syntax._ClassDef 0) type_arity_2_1 glob_object_3_0) glob_module_3_1)) (False -> general.No) ) (False -> let n_6_0::I = backendinterface.size_70 (select (select dtci_iclModule_1_1::syntax._IclModule 3)::syntax._CommonDefs 0), n_6_1::I = backendinterface.size_62 (select (select dtci_iclModule_1_1::syntax._IclModule 3)::syntax._CommonDefs 3), class_6_2::I = <{StdInt.-_7}> glob_object_3_0 (<{StdInt.-_7}> n_6_0 n_6_1) in case (StdBool.not (<{StdInt.<_17}> class_6_2 (backendinterface.size_62 (select (select dclModule_4_1::syntax._DclModule 7)::syntax._CommonDefs 3)))) (True -> general.Yes (syntax._Global (syntax._DefinedSymbol (select (backendinterface.select_61 (select (select dtci_iclModule_1_1::syntax._IclModule 3)::syntax._CommonDefs 3) class_6_2)::syntax._ClassDef 0) type_arity_2_1 glob_object_3_0) glob_module_3_1)) (False -> general.No) ) ) ) ) 
<{backendinterface.c;429;60_25}> !g_l_0 = <{backendinterface.g_c1;429;73_126}> g_l_0
<{backendinterface.g_c1;429;73_126}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{backendinterface.g_c2;429;73_125}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{backendinterface.g_c2;429;73_125}> !g_h_0 g_t_1 = case g_h_0 (syntax._AType at_attribute_1_0 at_type_1_1 -> _predefined._Cons at_type_1_1 (<{backendinterface.c;429;60_25}> g_t_1)) (_ -> <{backendinterface.c;429;60_25}> g_t_1)
backendinterface.dictionary_to_context_27 !klass_0 !args_1 = syntax._TypeContext (syntax.TCClass klass_0) (<{backendinterface.c;429;60_25}> args_1) Heap.nilPtr
backendinterface.dictionaryArgToClass_26 info_0 !type_1 !_x_2 = case type_1 (syntax._AType at_attribute_1_0 at_type_1_1 -> case at_type_1_1 (syntax.TA typeSymbol_2_0 args_2_1 -> case _x_2 (_Tuple2 reversedTypes_3_0 reversedContexts_3_1 -> <{backendinterface._c;414;13_127}> (backendinterface.typeToClass info_0 typeSymbol_2_0) reversedTypes_3_0 args_2_1 reversedContexts_3_1 type_1) ) (syntax.TAS typeSymbol_2_0 args_2_1 _x_2_2 -> case _x_2 (_Tuple2 reversedTypes_3_0 reversedContexts_3_1 -> <{backendinterface._c;420;13_128}> (backendinterface.typeToClass info_0 typeSymbol_2_0) reversedTypes_3_0 args_2_1 reversedContexts_3_1 type_1) ) ) (_ -> case _x_2 (_Tuple2 reversedTypes_1_0 reversedContexts_1_1 -> _Tuple2 (_predefined._Cons type_1 reversedTypes_1_0) reversedContexts_1_1) )
<{backendinterface._c;420;13_128}> !_x_0 reversedTypes_1 args_2 reversedContexts_3 type_4 = case _x_0 (general.Yes klass_1_0 -> _Tuple2 reversedTypes_1 (_predefined._Cons (backendinterface.dictionary_to_context_27 klass_1_0 args_2) reversedContexts_3)) (general.No -> _Tuple2 (_predefined._Cons type_4 reversedTypes_1) reversedContexts_3) 
<{backendinterface._c;414;13_127}> !_x_0 reversedTypes_1 args_2 reversedContexts_3 type_4 = case _x_0 (general.Yes klass_1_0 -> _Tuple2 reversedTypes_1 (_predefined._Cons (backendinterface.dictionary_to_context_27 klass_1_0 args_2) reversedContexts_3)) (general.No -> _Tuple2 (_predefined._Cons type_4 reversedTypes_1) reversedContexts_3) 
backendinterface.fold_st_103 info_0 !_x_1 !st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> backendinterface.fold_st_103 info_0 x_1_1 (backendinterface.dictionaryArgToClass_26 info_0 a_1_0 st_2)) 
backendinterface.dictionaryArgsToClasses info_0 !args_1 !result_2 = backendinterface.fold_st_103 info_0 args_1 result_2
backendinterface.dictionariesToClasses info_0 !type_1 = case type_1 (syntax._SymbolType st_vars_1_0 st_args_1_1 st_args_strictness_1_2 st_arity_1_3 st_result_1_4 st_context_1_5 st_attr_vars_1_6 st_attr_env_1_7 -> case st_context_1_5 (_predefined._Nil -> let _x_3_0::I = backendinterface.dictionaryArgsToClasses info_0 st_args_1_1 (_Tuple2 _predefined._Nil _predefined._Nil), reversedContexts_3_1 = select _x_3_0::_Tuple2 1, n_contexts_3_2 = StdList.length_47 reversedContexts_3_1 in update type_1::syntax._SymbolType [1:StdList.reverse (select _x_3_0::_Tuple2 0),2:containers.remove_first_n n_contexts_3_2 st_args_strictness_1_2,3:<{StdInt.-_7}> st_arity_1_3 n_contexts_3_2,5:StdList.reverse reversedContexts_3_1]) ) 
backendinterface.printFunctionType !all_0::B attr_1::B info_2 !_x_3 !_x_4 = case _x_3 (_Tuple2 function_1_0 _x_1_1 -> case _x_1_1 (syntax._FunDef fun_ident_2_0 fun_arity_2_1 fun_priority_2_2 fun_body_2_3 _x_2_4 fun_pos_2_5 fun_kind_2_6 fun_lifted_2_7 fun_info_2_8 -> case _x_2_4 (general.Yes type_3_0 -> case _x_4 (_Tuple3 attrHeap_4_0 file_4_1 backEnd_4_2 -> case (case (StdBool.not all_0) (True -> StdBool.not (<{StdInt.<_17}> function_1_0 (backendinterface.size_78 (select (backendinterface.select_53 (select info_2::backendinterface._DictionaryToClassInfo 2) (select info_2::backendinterface._DictionaryToClassInfo 0))::syntax._DclModule 1)))) (False -> False) ) (True -> _Tuple3 attrHeap_4_0 file_4_1 backEnd_4_2) (False -> let _x_6_0 = backendinterface.addStrictnessFromBackEnd function_1_0 (select fun_ident_2_0::syntax._Ident 0) backEnd_4_2 type_3_0 in case (case (StdBool.not (select _x_6_0::_Tuple3 0)) (True -> StdBool.not all_0) (False -> False) ) (True -> _Tuple3 attrHeap_4_0 file_4_1 (select _x_6_0::_Tuple3 2)) (False -> let _x_8_0 = backendinterface.collectSymbolTypeAttrVars (select _x_6_0::_Tuple3 1) attrHeap_4_0, _x_8_1 = typesupport.beautifulizeAttributes (backendinterface.dictionariesToClasses info_2 (select _x_8_0::_Tuple2 0)) (select _x_8_0::_Tuple2 1) in _Tuple3 (select _x_8_1::_Tuple2 1) (<{StdFile.<<<_37}> (<{typesupport.<::}> (<{typesupport.writeType;}> typesupport.writeType_25) (<{StdFile.<<<_38}> (<{syntax.<<<_24}> file_4_1 fun_ident_2_0) " :: ") (_Tuple3 (typesupport._Format (StdInt.bitor (<{backendinterface._if;189;43_129}> attr_1) 2) general.No) (select _x_8_1::_Tuple2 0) (general.Yes typesupport.initialTypeVarBeautifulizer))) '\n') (select _x_6_0::_Tuple3 2)) ) ) ) ) ) 
<{backendinterface._if;189;43_129}>::I !attr_0::B = case attr_0 (True -> 1) (_ -> 0)
backendinterface.function_indices_and_functions2_24 !_vArray_0 !_vArray_1 functions_2 !_x_3 i_4::I components_5 = case _x_3 (checksupport.ComponentMember member_1_0 members_1_1 -> _predefined._Cons (_Tuple2 member_1_0 (select _vArray_1::<{_SystemArray.Array;}> 3 functions_2 member_1_0)) (backendinterface.function_indices_and_functions2_24 _vArray_0 _vArray_1 functions_2 members_1_1 i_4 components_5)) (checksupport.GeneratedComponentMember member_1_0 _x_1_1 members_1_2 -> _predefined._Cons (_Tuple2 member_1_0 (select _vArray_1::<{_SystemArray.Array;}> 3 functions_2 member_1_0)) (backendinterface.function_indices_and_functions2_24 _vArray_0 _vArray_1 functions_2 members_1_2 i_4 components_5)) (checksupport.NoComponentMembers -> backendinterface.function_indices_and_functions_23 _vArray_0 _vArray_1 functions_2 (<{StdInt.+_6}> i_4 1) components_5) 
backendinterface.function_indices_and_functions_23 !_vArray_0 !_vArray_1 functions_2 !i_3::I components_4 = case (<{StdInt.<_17}> i_3 (select _vArray_0::<{_SystemArray.Array;}> 4 components_4)) (True -> backendinterface.function_indices_and_functions2_24 _vArray_0 _vArray_1 functions_2 (select (select _vArray_0::<{_SystemArray.Array;}> 3 components_4 i_3)::checksupport._Component 0) i_3 components_4) (False -> _predefined._Nil) 
backendinterface.function_indices_and_functions2_105 !_vArray_0 functions_1 !_x_2 i_3::I components_4 = case _x_2 (checksupport.ComponentMember member_1_0 members_1_1 -> _predefined._Cons (_Tuple2 member_1_0 (select _vArray_0::<{_SystemArray.Array;}> 3 functions_1 member_1_0)) (backendinterface.function_indices_and_functions2_105 _vArray_0 functions_1 members_1_1 i_3 components_4)) (checksupport.GeneratedComponentMember member_1_0 _x_1_1 members_1_2 -> _predefined._Cons (_Tuple2 member_1_0 (select _vArray_0::<{_SystemArray.Array;}> 3 functions_1 member_1_0)) (backendinterface.function_indices_and_functions2_105 _vArray_0 functions_1 members_1_2 i_3 components_4)) (checksupport.NoComponentMembers -> backendinterface.function_indices_and_functions_104 _vArray_0 functions_1 (<{StdInt.+_6}> i_3 1) components_4) 
backendinterface.function_indices_and_functions_104 !_vArray_0 functions_1 !i_2::I !components_3 = case (<{StdInt.<_17}> i_2 (_SystemArray.size_4 components_3)) (True -> backendinterface.function_indices_and_functions2_105 _vArray_0 functions_1 (select (_SystemArray.select_3 components_3 i_2)::checksupport._Component 0) i_2 components_3) (False -> _predefined._Nil) 
backendinterface.fold_st_106 all_0::B attr_1::B info_2 !_x_3 !st_4 = case _x_3 (_predefined._Nil -> st_4) (_predefined._Cons a_1_0 x_1_1 -> backendinterface.fold_st_106 all_0 attr_1 info_2 x_1_1 (backendinterface.printFunctionType all_0 attr_1 info_2 a_1_0 st_4)) 
backendinterface.function_indices_and_functions2_108 functions_0 !_x_1 i_2::I components_3 = case _x_1 (checksupport.ComponentMember member_1_0 members_1_1 -> _predefined._Cons (_Tuple2 member_1_0 (backendinterface.select_85 functions_0 member_1_0)) (backendinterface.function_indices_and_functions2_108 functions_0 members_1_1 i_2 components_3)) (checksupport.GeneratedComponentMember member_1_0 _x_1_1 members_1_2 -> _predefined._Cons (_Tuple2 member_1_0 (backendinterface.select_85 functions_0 member_1_0)) (backendinterface.function_indices_and_functions2_108 functions_0 members_1_2 i_2 components_3)) (checksupport.NoComponentMembers -> backendinterface.function_indices_and_functions_107 functions_0 (<{StdInt.+_6}> i_2 1) components_3) 
backendinterface.function_indices_and_functions_107 functions_0 !i_1::I !components_2 = case (<{StdInt.<_17}> i_1 (_SystemArray.size_4 components_2)) (True -> backendinterface.function_indices_and_functions2_108 functions_0 (select (_SystemArray.select_3 components_2 i_1)::checksupport._Component 0) i_1 components_2) (False -> _predefined._Nil) 
backendinterface.printFunctionTypes all_0::B attr_1::B info_2 !components_3 functions_4 attrHeap_5 file_6 backEnd_7::I = backendinterface.fold_st_106 all_0 attr_1 info_2 (backendinterface.function_indices_and_functions_107 functions_4 0 components_3) (_Tuple3 attrHeap_5 file_6 backEnd_7)
backendinterface.optionallyPrintFunctionTypes !_x_0 typesPath_1 info_2 components_3 functions_4 attrHeap_5 outFile_6 !backEnd_7::I = case _x_0 (frontend._ListTypesOption lto_showAttributes_1_0 lto_listTypesKind_1_1 -> case (case (<{frontend.==_1}> lto_listTypesKind_1_1 frontend.ListTypesStrictExports) (True -> True) (False -> <{frontend.==_1}> lto_listTypesKind_1_1 frontend.ListTypesAll) ) (True -> backendinterface.printFunctionTypes (<{frontend.==_1}> lto_listTypesKind_1_1 frontend.ListTypesAll) lto_showAttributes_1_0 info_2 components_3 functions_4 attrHeap_5 outFile_6 backEnd_7) (False -> _Tuple3 attrHeap_5 outFile_6 backEnd_7) ) 
backendinterface.function_indices2_110 !_x_0 i_1::I components_2 = case _x_0 (checksupport.ComponentMember member_1_0 members_1_1 -> _predefined._Cons member_1_0 (backendinterface.function_indices2_110 members_1_1 i_1 components_2)) (checksupport.GeneratedComponentMember member_1_0 _x_1_1 members_1_2 -> _predefined._Cons member_1_0 (backendinterface.function_indices2_110 members_1_2 i_1 components_2)) (checksupport.NoComponentMembers -> backendinterface.function_indices_109 (<{StdInt.+_6}> i_1 1) components_2) 
backendinterface.function_indices_109 !i_0::I !components_1 = case (<{StdInt.<_17}> i_0 (_SystemArray.size_4 components_1)) (True -> backendinterface.function_indices2_110 (select (_SystemArray.select_3 components_1 i_0)::checksupport._Component 0) i_0 components_1) (False -> _predefined._Nil) 
backendinterface.anon_112 !g_0 _x_1 x_2::I = g_0 (backend.BEArg _x_1 x_2)
backendinterface.foldState_111 !_x_0 = case _x_0 (_predefined._Nil -> backendinterface.anon_47) (_predefined._Cons hd_1_0 tl_1_1 -> backendinterface.anon_112 (backendinterface.foldState_111 tl_1_1) hd_1_0) 
<{backendinterface.cu;97;29_113}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_i_3::I !g_s_4::I g_a_5 = <{backendinterface.g_c1;97;45_131}> (StdBool.not (<{StdInt.<_17}> g_s_4 g_i_3)) g_a_5 g_i_3 _vone_0 <{_v+_1}> c_l_i_2 g_s_4
<{backendinterface.g_c1;97;45_131}> !_x_0::B g_a_1 g_i_2::I _vone_3 <{_v+_4}> c_l_i_5 g_s_6::I = case _x_0 (True -> <{backendinterface.g_c2;97;45_130}> (backendinterface.uselect_56 g_a_1 g_i_2) _vone_3 <{_v+_4}> c_l_i_5 g_i_2 g_s_6 g_a_1) (_ -> c_l_i_5)
<{backendinterface.g_c2;97;45_130}> !_x_0 !_vone_1 !<{_v+_2}> c_l_i_3 !g_i_4::I !g_s_5::I g_a_6 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule dcl_name_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> <{backendinterface.cu;97;29_113}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_1_1) ) (_ -> <{backendinterface.cu;97;29_113}> _vone_1 <{_v+_2}> c_l_i_3 (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_6)
<{backendinterface.cu;97;29_114}> !_vArray_0 c_a_1 c_i_2::I !g_i_3::I !g_s_4::I g_a_5 = <{backendinterface.g_c1;97;45_133}> (StdBool.not (<{StdInt.<_17}> g_s_4 g_i_3)) g_a_5 g_i_3 _vArray_0 c_a_1 c_i_2 g_s_4
<{backendinterface.g_c1;97;45_133}> !_x_0::B g_a_1 g_i_2::I _vArray_3 c_a_4 c_i_5::I g_s_6::I = case _x_0 (True -> <{backendinterface.g_c2;97;45_132}> (backendinterface.uselect_56 g_a_1 g_i_2) _vArray_3 c_a_4 c_i_5 g_i_2 g_s_6 g_a_1) (_ -> c_a_4)
<{backendinterface.g_c2;97;45_132}> !_x_0 !_vArray_1 c_a_2 c_i_3::I !g_i_4::I !g_s_5::I g_a_6 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule dcl_name_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> <{backendinterface.cu;97;29_114}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 dcl_common_2_7) (<{StdInt.+_6}> c_i_3 StdInt.one_11) (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_1_1) ) (_ -> <{backendinterface.cu;97;29_114}> _vArray_1 c_a_2 c_i_3 (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_6)
<{backendinterface.cu;97;29_115}>::I !<{_v+_0}> c_l_i_1::I !g_i_2::I !g_s_3::I g_a_4 = <{backendinterface.g_c1;97;45_135}> (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) g_a_4 g_i_2 <{_v+_0}> c_l_i_1 g_s_3
<{backendinterface.g_c1;97;45_135}>::I !_x_0::B g_a_1 g_i_2::I <{_v+_3}> c_l_i_4::I g_s_5::I = case _x_0 (True -> <{backendinterface.g_c2;97;45_134}> (backendinterface.uselect_56 g_a_1 g_i_2) <{_v+_3}> c_l_i_4 g_i_2 g_s_5 g_a_1) (_ -> c_l_i_4)
<{backendinterface.g_c2;97;45_134}>::I !_x_0 !<{_v+_1}> c_l_i_2::I !g_i_3::I !g_s_4::I g_a_5 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule dcl_name_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> <{backendinterface.cu;97;29_115}> <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_2 StdInt.one_11) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_1_1) ) (_ -> <{backendinterface.cu;97;29_115}> <{_v+_1}> c_l_i_2 (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_5)
<{backendinterface.cu;97;29_116}> !c_a_0 c_i_1::I !g_i_2::I !g_s_3::I g_a_4 = <{backendinterface.g_c1;97;45_137}> (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) g_a_4 g_i_2 c_a_0 c_i_1 g_s_3
<{backendinterface.g_c1;97;45_137}> !_x_0::B g_a_1 g_i_2::I !c_a_3 c_i_4::I g_s_5::I = case _x_0 (True -> <{backendinterface.g_c2;97;45_136}> (backendinterface.uselect_56 g_a_1 g_i_2) c_a_3 c_i_4 g_i_2 g_s_5 g_a_1) (_ -> c_a_3)
<{backendinterface.g_c2;97;45_136}> !_x_0 !c_a_1 !c_i_2::I !g_i_3::I !g_s_4::I g_a_5 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule dcl_name_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> <{backendinterface.cu;97;29_116}> (backendinterface.update_95 c_a_1 c_i_2 dcl_common_2_7) (<{StdInt.+_6}> c_i_2 StdInt.one_11) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_1_1) ) (_ -> <{backendinterface.cu;97;29_116}> c_a_1 c_i_2 (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_5)
<{backendinterface.cu;97;29_117}>::I !c_l_i_0::I !g_i_1::I !g_s_2::I g_a_3 = <{backendinterface.g_c1;97;45_139}> (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) g_a_3 g_i_1 c_l_i_0 g_s_2
<{backendinterface.g_c1;97;45_139}>::I !_x_0::B g_a_1 g_i_2::I !c_l_i_3::I g_s_4::I = case _x_0 (True -> <{backendinterface.g_c2;97;45_138}> (backendinterface.uselect_56 g_a_1 g_i_2) c_l_i_3 g_i_2 g_s_4 g_a_1) (_ -> c_l_i_3)
<{backendinterface.g_c2;97;45_138}>::I !_x_0 !c_l_i_1::I !g_i_2::I !g_s_3::I g_a_4 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule dcl_name_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> <{backendinterface.cu;97;29_117}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_1) ) (_ -> <{backendinterface.cu;97;29_117}> c_l_i_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_4)
backendinterface.backEndInterface !outputFileName_0 commandLineArgs_1 !listTypes_2 !typesPath_3 !predef_symbols_4 !syntaxTree_5 !main_dcl_module_n_6::I !heaps_7 !sapl_file_8 !errorFile_9 !outFile_10 = case syntaxTree_5 (frontend._FrontEndSyntaxTree fe_icl_1_0 fe_dcls_1_1 fe_components_1_2 fe_array_1_3 -> let expectedVersion_2_0 = Version._VersionInfo 34693120 34604033 34604033, _x_2_1 = backend.BEGetVersion, observedCurrent_2_2::I = select _x_2_1::_Tuple3 0, observedOldestDefinition_2_3::I = select _x_2_1::_Tuple3 1, observedOldest_2_4::I = select _x_2_1::_Tuple3 2, observedVersion_2_5 = Version._VersionInfo observedCurrent_2_2 observedOldestDefinition_2_3 observedOldest_2_4, _x_2_6 = backendinterface.checkVersion (Version.versionCompare expectedVersion_2_0 observedVersion_2_5) errorFile_9 in case (StdBool.not (select _x_2_6::_Tuple2 0)) (True -> <{_Tuple5!31}> False heaps_7 sapl_file_8 (select _x_2_6::_Tuple2 1) outFile_10) (False -> let _x_4_0 = <{backendinterface._c;91;9_140}> sapl_file_8 main_dcl_module_n_6 syntaxTree_5 backEnd_4_16 heaps_4_7 var_heap_4_18 hp_type_heaps_4_9 attrHeap_4_17, heaps_4_1 = select _x_4_0::_Tuple3 2, hp_type_heaps_4_2 = select heaps_4_1::checksupport._Heaps 2, _x_4_3 = backendinterface.optionallyPrintFunctionTypes listTypes_2 typesPath_3 (backendinterface._DictionaryToClassInfo main_dcl_module_n_6 fe_icl_1_0 fe_dcls_1_1) fe_components_1_2 (select fe_icl_1_0::syntax._IclModule 1) (select hp_type_heaps_4_2::syntax._TypeHeaps 1) outFile_10 (backend.BECloseFiles (select _x_4_0::_Tuple3 1)), backEndFiles_4_4 = 0, _x_4_5 = backend.BEInit (StdList.length_47 commandLineArgs_1) backEndFiles_4_4, var_heap_4_6 = backendpreprocess.backEndPreprocess (_SystemArray.select_3 predef.predefined_idents 148) (backendinterface.function_indices_109 0 fe_components_1_2) fe_icl_1_0 (select heaps_7::checksupport._Heaps 0), heaps_4_7 = update heaps_7::checksupport._Heaps [0:var_heap_4_6], var_heap_4_8 = select heaps_4_7::checksupport._Heaps 0, hp_type_heaps_4_9 = select heaps_4_7::checksupport._Heaps 2, attrHeap_4_10 = select hp_type_heaps_4_9::syntax._TypeHeaps 1, backEnd_4_11 = select _x_4_5::_Tuple2 0, backEnd_4_12 = backendinterface.foldState_111 commandLineArgs_1 backEnd_4_11, _x_4_13 = backendconvert.backEndConvertModules predef_symbols_4 syntaxTree_5 main_dcl_module_n_6 var_heap_4_8 attrHeap_4_10 backEnd_4_12, backEnd_4_14::I = select _x_4_13::_Tuple3 2, _x_4_15 = backend.BEGenerateCode outputFileName_0 backEnd_4_14, backEnd_4_16 = select _x_4_15::_Tuple2 1, attrHeap_4_17 = select _x_4_13::_Tuple3 1, var_heap_4_18 = select _x_4_13::_Tuple3 0 in <{_Tuple5!31}> (backendinterface._f141_141 (<{StdInt.==_16}> (backend.BEFree (select _x_4_3::_Tuple3 2) (select _x_4_5::_Tuple2 1)) 0) _x_4_15) (update heaps_4_1::checksupport._Heaps [2:update hp_type_heaps_4_2::syntax._TypeHeaps [1:select _x_4_3::_Tuple3 0]]) (select _x_4_0::_Tuple3 0) (select _x_2_6::_Tuple2 1) (select _x_4_3::_Tuple3 1)) ) 
backendinterface._f141_141::B !_x_0::B _x_1 = case _x_0 (True -> select _x_1::_Tuple2 0) (_ -> False)
<{backendinterface._c;91;9_140}> !sapl_file_0 main_dcl_module_n_1::I syntaxTree_2 backEnd_3::I heaps_4 var_heap_5 hp_type_heaps_6 attrHeap_7 = case sapl_file_0 (general.Yes file_1_0 -> let _x_2_0 = backendinterface.usize_57 (select syntaxTree_2::frontend._FrontEndSyntaxTree 1), _x_2_1 = backendinterface.usize_57 (select syntaxTree_2::frontend._FrontEndSyntaxTree 1), _x_2_2 = saplinterface.gensaplfiles main_dcl_module_n_1 (select syntaxTree_2::frontend._FrontEndSyntaxTree 1) (select syntaxTree_2::frontend._FrontEndSyntaxTree 2) (select (select syntaxTree_2::frontend._FrontEndSyntaxTree 0)::syntax._IclModule 1) (select (select syntaxTree_2::frontend._FrontEndSyntaxTree 0)::syntax._IclModule 3) (backendinterface.update_95 (<{backendinterface.cu;97;29_116}> (backendinterface._createArray_90 (<{backendinterface.cu;97;29_117}> 0 0 (<{StdInt.-_7}> (select _x_2_0::_Tuple2 0) 1) (select _x_2_0::_Tuple2 1))) 0 0 (<{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1) (select _x_2_1::_Tuple2 1)) main_dcl_module_n_1 (select (select syntaxTree_2::frontend._FrontEndSyntaxTree 0)::syntax._IclModule 3)) (select (select syntaxTree_2::frontend._FrontEndSyntaxTree 0)::syntax._IclModule 0) (select (select (select syntaxTree_2::frontend._FrontEndSyntaxTree 0)::syntax._IclModule 2)::syntax._IclFunctionIndices 0) file_1_0 backEnd_3 (update heaps_4::checksupport._Heaps [0:var_heap_5,2:update hp_type_heaps_6::syntax._TypeHeaps [1:attrHeap_7]]) in _Tuple3 (general.Yes (select _x_2_2::_Tuple3 0)) (select _x_2_2::_Tuple3 1) (select _x_2_2::_Tuple3 2)) (_ -> _Tuple3 sapl_file_0 backEnd_3 (update heaps_4::checksupport._Heaps [0:var_heap_5,2:update hp_type_heaps_6::syntax._TypeHeaps [1:attrHeap_7]]))
<{backendinterface.TD;DictionaryToClassInfo}> _x_0::B = _predefined._Nil
<{backendinterface.TD;StrictnessInfo}> _x_0::B = _predefined._Nil
<{backendinterface.TD;addStrictness;}> _x_0::B = _predefined._Nil
<{backendinterface.TD;collectAttrVars;}> _x_0::B = _predefined._Nil


|| Converted Records
:: backendinterface._DictionaryToClassInfo = {backendinterface.dtci_iclModuleIndex::I, backendinterface.dtci_iclModule, backendinterface.dtci_dclModules}

:: backendinterface._StrictnessInfo = {!backendinterface.si_size::I, !backendinterface.si_positions, backendinterface.si_name, !backendinterface.si_robust_encoding::B}

:: <{backendinterface.addStrictness;}> = {!backendinterface.addStrictness}

:: <{backendinterface.collectAttrVars;}> = {!backendinterface.collectAttrVars}

