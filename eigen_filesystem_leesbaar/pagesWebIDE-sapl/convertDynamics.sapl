|| ?module? convertDynamics


convertDynamics.create_dynamic_and_selector_idents !_vArray_0 !_vArray_1 common_defs_2 predefined_symbols_3 = case (<{StdInt.==_16}> (select (select _vArray_0::<{_SystemArray.Array;}> 3 predefined_symbols_3 164)::predef._PredefinedSymbol 0) -1) (True -> _Tuple2 (convertDynamics._DynamicRepresentation StdMisc.undef StdMisc.undef StdMisc.undef StdMisc.undef) predefined_symbols_3) (False -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 predefined_symbols_3 165, _x_2_1::I = select _x_2_0::_Tuple2 0, pds_module1_2_2 = select _x_2_1::predef._PredefinedSymbol 0, pds_def1_2_3 = select _x_2_1::predef._PredefinedSymbol 1, rt_constructor_2_4 = select (select (select (convertDynamics.select_77 (select (select _vArray_1::<{_SystemArray.Array;}> 3 common_defs_2 pds_module1_2_2)::syntax._CommonDefs 0) pds_def1_2_3)::syntax._TypeDef 5)::_Tuple1 0)::syntax._RecordType 0, _x_2_5::I = select _vArray_0::<{_SystemArray.Array;}> 6 (select _x_2_0::_Tuple2 1) 247, _x_2_6::I = select _x_2_5::_Tuple2 0, pds_module2_2_7 = select _x_2_6::predef._PredefinedSymbol 0, rt_constructor_2_8 = select (select (select (convertDynamics.select_77 (select (select _vArray_1::<{_SystemArray.Array;}> 3 common_defs_2 pds_module2_2_7)::syntax._CommonDefs 0) (select _x_2_6::predef._PredefinedSymbol 1))::syntax._TypeDef 5)::_Tuple1 0)::syntax._RecordType 0 in _Tuple2 (convertDynamics._DynamicRepresentation (syntax._SymbIdent (select rt_constructor_2_4::syntax._DefinedSymbol 0) (syntax.SK_Constructor (syntax._Global (select rt_constructor_2_4::syntax._DefinedSymbol 2) pds_module1_2_2))) (syntax._GlobalIndex pds_module1_2_2 pds_def1_2_3) (syntax._Global rt_constructor_2_4 pds_module1_2_2) (syntax._SymbIdent (select rt_constructor_2_8::syntax._DefinedSymbol 0) (syntax.SK_Constructor (syntax._Global (select rt_constructor_2_8::syntax._DefinedSymbol 2) pds_module2_2_7)))) (select _x_2_5::_Tuple2 1)) 
<{convertDynamics.cu;91;39_32}> !_vArray_0 !_vone_1 !<{_v+_2}> c_l_i_3 !g_i_4::I !g_s_5::I g_a_6 = <{convertDynamics.g_c1;91;58_156}> (StdBool.not (<{StdInt.<_17}> g_s_5 g_i_4)) g_a_6 g_i_4 _vArray_0 _vone_1 <{_v+_2}> c_l_i_3 g_s_5
<{convertDynamics.g_c1;91;58_156}> !_x_0::B g_a_1 g_i_2::I _vArray_3 _vone_4 <{_v+_5}> c_l_i_6 g_s_7::I = case _x_0 (True -> <{convertDynamics.g_c2;91;58_155}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 _vone_4 <{_v+_5}> c_l_i_6 g_i_2 g_s_7 g_a_1) (_ -> c_l_i_6)
<{convertDynamics.g_c2;91;58_155}> !_x_0 !_vArray_1 !_vone_2 !<{_v+_3}> c_l_i_4 !g_i_5::I !g_s_6::I g_a_7 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._CommonDefs com_type_defs_2_0 com_cons_defs_2_1 com_selector_defs_2_2 com_class_defs_2_3 com_member_defs_2_4 com_instance_defs_2_5 com_generic_defs_2_6 com_gencase_defs_2_7 -> <{convertDynamics.cu;91;39_32}> _vArray_1 _vone_2 <{_v+_3}> (select <{_v+_3}>::<{StdOverloaded.+;}> 0 c_l_i_4 (select _vone_2::<{StdOverloaded.one;}> 0)) (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_1_1) ) (_ -> <{convertDynamics.cu;91;39_32}> _vArray_1 _vone_2 <{_v+_3}> c_l_i_4 (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_7)
<{convertDynamics.cu;91;39_31}> !_vArray_0 !_vArray_1 c_a_2 c_i_3::I !g_i_4::I !g_s_5::I g_a_6 = <{convertDynamics.g_c1;91;58_158}> (StdBool.not (<{StdInt.<_17}> g_s_5 g_i_4)) g_a_6 g_i_4 _vArray_0 _vArray_1 c_a_2 c_i_3 g_s_5
<{convertDynamics.g_c1;91;58_158}> !_x_0::B g_a_1 g_i_2::I _vArray_3 _vArray_4 c_a_5 c_i_6::I g_s_7::I = case _x_0 (True -> <{convertDynamics.g_c2;91;58_157}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 _vArray_4 c_a_5 c_i_6 g_i_2 g_s_7 g_a_1) (_ -> c_a_5)
<{convertDynamics.g_c2;91;58_157}> !_x_0 !_vArray_1 !_vArray_2 c_a_3 c_i_4::I !g_i_5::I !g_s_6::I g_a_7 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._CommonDefs com_type_defs_2_0 com_cons_defs_2_1 com_selector_defs_2_2 com_class_defs_2_3 com_member_defs_2_4 com_instance_defs_2_5 com_generic_defs_2_6 com_gencase_defs_2_7 -> <{convertDynamics.cu;91;39_31}> _vArray_1 _vArray_2 (select _vArray_2::<{_SystemArray.Array;}> 5 c_a_3 c_i_4 com_type_defs_2_0) (<{StdInt.+_6}> c_i_4 StdInt.one_11) (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_1_1) ) (_ -> <{convertDynamics.cu;91;39_31}> _vArray_1 _vArray_2 c_a_3 c_i_4 (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_7)
convertDynamics.newVariable !var_ident_0 !var_info_1 !ci_2 = case ci_2 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> let _x_2_0 = Heap.newPtr var_info_1 ci_var_heap_1_1 in <{_Tuple2!3}> (syntax._BoundVar (syntax._Ident var_ident_0 Heap.nilPtr) (select _x_2_0::_Tuple2 0) Heap.nilPtr) (update ci_2::convertDynamics._ConversionState [1:select _x_2_0::_Tuple2 1])) 
convertDynamics.global_type_pattern_in_free_vars::B !_x_0 var_heap_1 = case _x_0 (_predefined._Cons _x_1_0 free_vars_1_1 -> case _x_1_0 (syntax._FreeVar fv_def_level_2_0 fv_ident_2_1 fv_info_ptr_2_2 fv_count_2_3 -> <{convertDynamics._c;182;7_159}> (Heap.sreadPtr fv_info_ptr_2_2 var_heap_1) free_vars_1_1 var_heap_1) ) (_predefined._Nil -> False) 
<{convertDynamics._c;182;7_159}>::B !_x_0 free_vars_1 var_heap_2 = case _x_0 (syntax.VI_TypeCodeVariable _x_1_0 -> case _x_1_0 (syntax.TCI_TypePatternVar _x_2_0 -> True) (syntax.TCI_SelectionsTypePatternVar _x_2_0 -> case _x_2_0 (_predefined._Cons _x_3_0 _x_3_1 -> True) ) ) (_ -> convertDynamics.global_type_pattern_in_free_vars free_vars_1 var_heap_2)
convertDynamics.getSymbol !index_0::I symb_kind_1 arity_2::I !ci_3 = case ci_3 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> let _x_2_0 = convertDynamics.uselect_104 ci_predef_symb_1_0 index_0, _x_2_1 = select _x_2_0::_Tuple2 0 in <{_Tuple2!2}> (syntax._SymbIdent (_SystemArray.select_3 predef.predefined_idents index_0) (symb_kind_1 (syntax._Global (select _x_2_1::predef._PredefinedSymbol 1) (select _x_2_1::predef._PredefinedSymbol 0)))) (update ci_3::convertDynamics._ConversionState [0:select _x_2_0::_Tuple2 1])) 
convertDynamics.make_initial_unification_environment_expr_45 !ci_0 = case ci_0 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> let _x_2_0 = convertDynamics.getSymbol 174 syntax.SK_Function 2 ci_0 in <{_Tuple2!3}> (syntax.App (syntax._App (select _x_2_0::_Tuple2 0) (_predefined._Cons (syntax.BasicExpr (syntax.BVInt ci_type_pattern_var_count_1_4)) (_predefined._Cons (syntax.BasicExpr (syntax.BVInt ci_type_var_count_1_5)) _predefined._Nil)) Heap.nilPtr)) (select _x_2_0::_Tuple2 1)) 
convertDynamics.fold_st_70 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> convertDynamics.fold_st_70 op_0 x_1_1 (op_0 a_1_0 st_2)) 
convertDynamics.bind_global_type_pattern_var_37 tpv_0 type_code_1 unification_environment_expr_2 ci_3 = let _x_1_0 = convertDynamics.getSymbol 175 syntax.SK_Function 3 ci_3 in _Tuple2 (syntax.App (syntax._App (select _x_1_0::_Tuple2 0) (_predefined._Cons tpv_0 (_predefined._Cons type_code_1 (_predefined._Cons unification_environment_expr_2 _predefined._Nil))) Heap.nilPtr)) (select _x_1_0::_Tuple2 1)
convertDynamics.bind_global_type_pattern_var_selections_36 !_x_0 fv_info_ptr_1 unification_environment_expr_2 ci_3 = case _x_0 (_predefined._Cons _x_1_0 tc_selections_1_1 -> case _x_1_0 (_Tuple2 tpv_2_0 selections_2_1 -> let _x_3_0 = convertDynamics.bind_global_type_pattern_var_37 tpv_2_0 (syntax.Selection syntax.NormalSelector (syntax.Var (syntax._BoundVar (syntax._Ident "a_ij" Heap.nilPtr) fv_info_ptr_1 Heap.nilPtr)) selections_2_1) unification_environment_expr_2 ci_3 in convertDynamics.bind_global_type_pattern_var_selections_36 tc_selections_1_1 fv_info_ptr_1 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) ) (_predefined._Nil -> _Tuple2 unification_environment_expr_2 ci_3) 
convertDynamics.bind_global_type_pattern_var_38 !_x_0 !_x_1 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> case _x_1 (_Tuple2 unification_environment_expr_2_0 ci_2_1 -> let _x_3_0 = Heap.readPtr fv_info_ptr_1_2 (select ci_2_1::convertDynamics._ConversionState 1), ci_var_heap_3_1 = select _x_3_0::_Tuple2 1 in <{convertDynamics._c;199;9_162}> (select _x_3_0::_Tuple2 0) fv_info_ptr_1_2 unification_environment_expr_2_0 ci_2_1 ci_var_heap_3_1) ) 
<{convertDynamics._c;199;9_162}> !_x_0 fv_info_ptr_1 unification_environment_expr_2 !ci_3 !ci_var_heap_4 = case _x_0 (syntax.VI_TypeCodeVariable _x_1_0 -> convertDynamics._f161_161 _x_1_0 fv_info_ptr_1 unification_environment_expr_2 ci_3 ci_var_heap_4) (_ -> <{convertDynamics._c;199;9_160}> unification_environment_expr_2 ci_3 ci_var_heap_4)
convertDynamics._f161_161 !_x_0 fv_info_ptr_1 unification_environment_expr_2 !ci_3 !ci_var_heap_4 = case _x_0 (syntax.TCI_TypePatternVar tpv_1_0 -> convertDynamics.bind_global_type_pattern_var_37 tpv_1_0 (syntax.Var (syntax._BoundVar (syntax._Ident "a_ij" Heap.nilPtr) fv_info_ptr_1 Heap.nilPtr)) unification_environment_expr_2 (update ci_3::convertDynamics._ConversionState [1:ci_var_heap_4])) (syntax.TCI_SelectionsTypePatternVar tc_selections_1_0 -> convertDynamics.bind_global_type_pattern_var_selections_36 tc_selections_1_0 fv_info_ptr_1 unification_environment_expr_2 (update ci_3::convertDynamics._ConversionState [1:ci_var_heap_4])) (_ -> <{convertDynamics._c;199;9_160}> unification_environment_expr_2 ci_3 ci_var_heap_4)
<{convertDynamics._c;199;9_160}> unification_environment_expr_0 !ci_1 !ci_var_heap_2 = <{_Tuple2!2}> unification_environment_expr_0 (update ci_1::convertDynamics._ConversionState [1:ci_var_heap_2])
convertDynamics.fold_st_122 !_x_0 !st_1 = case _x_0 (_predefined._Nil -> st_1) (_predefined._Cons a_1_0 x_1_1 -> convertDynamics.fold_st_122 x_1_1 (convertDynamics.bind_global_type_pattern_var_38 a_1_0 st_1)) 
convertDynamics.bind_global_type_pattern_vars !free_vars_0 unification_environment_expr_1 !ci_2 = convertDynamics.fold_st_122 free_vars_0 (_Tuple2 unification_environment_expr_1 ci_2)
convertDynamics.varToFreeVar !_x_0 !count_1::I = case _x_0 (syntax._BoundVar var_ident_1_0 var_info_ptr_1_1 var_expr_ptr_1_2 -> syntax._FreeVar -1 var_ident_1_0 var_info_ptr_1_1 count_1) 
convertDynamics.toAType !type_0 = syntax._AType syntax.TA_Multi type_0
convertDynamics.empty_attributed_type = convertDynamics.toAType syntax.TE
convertDynamics.let_ptr2 !let_types_0 !ci_1 = case ci_1 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> let _x_2_0 = Heap.newPtr (syntax.EI_LetType let_types_0) ci_expr_heap_1_2 in <{_Tuple2!2}> (select _x_2_0::_Tuple2 0) (update ci_1::convertDynamics._ConversionState [2:select _x_2_0::_Tuple2 1])) 
convertDynamics.let_ptr !nr_of_binds_0::I !ci_1 = case ci_1 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> convertDynamics.let_ptr2 (StdList.repeatn nr_of_binds_0 convertDynamics.empty_attributed_type) ci_1) 
convertDynamics.share_init_subst subst_0 !rhs_1 initial_unification_environment_expr_2 !ci_3 = let let_bind_initial_subst_var_1_0 = convertDynamics.varToFreeVar subst_0 1, _x_1_1 = convertDynamics.let_ptr 1 ci_3, ci_1_2 = select _x_1_1::_Tuple2 1 in <{_Tuple2!3}> (syntax.Let (syntax._Let _predefined._Nil (_predefined._Cons (syntax._LetBind let_bind_initial_subst_var_1_0 initial_unification_environment_expr_2 syntax.NoPos) _predefined._Nil) rhs_1 (select _x_1_1::_Tuple2 0) syntax.NoPos)) (update ci_1_2::convertDynamics._ConversionState [3:_predefined._Cons let_bind_initial_subst_var_1_0 (select ci_1_2::convertDynamics._ConversionState 3)])
convertDynamics.fold_st_72 op_0 !_x_1 st_2 = case _x_1 (_predefined._Nil -> st_2) (_predefined._Cons a_1_0 x_1_1 -> convertDynamics.fold_st_72 op_0 x_1_1 (op_0 a_1_0 st_2)) 
convertDynamics.foldl_71 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> convertDynamics.foldl_71 op_0 (op_0 r_1 a_1_0) x_1_1) 
convertDynamics.createTypePatternVariable !ci_0 = let _x_1_0 = convertDynamics.getSymbol 170 syntax.SK_Constructor 1 ci_0, ci_1_1 = select _x_1_0::_Tuple2 1 in <{_Tuple2!3}> (syntax.App (syntax._App (select _x_1_0::_Tuple2 0) (_predefined._Cons (syntax.BasicExpr (syntax.BVInt (select ci_1_1::convertDynamics._ConversionState 4))) _predefined._Nil) Heap.nilPtr)) (update ci_1_1::convertDynamics._ConversionState [4:<{StdInt.+_6}> (select ci_1_1::convertDynamics._ConversionState 4) 1])
convertDynamics.constructorExp_40 !index_0::I symb_kind_1 arity_2::I !ci_3 = let _x_1_0 = convertDynamics.getSymbol index_0 symb_kind_1 arity_2 ci_3 in <{_Tuple2!2}> (syntax.App (syntax._App (select _x_1_0::_Tuple2 0) _predefined._Nil Heap.nilPtr)) (select _x_1_0::_Tuple2 1)
convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_0 predefined_TC_type_1::I ci_2 = let _x_1_0 = convertDynamics.constructorExp_40 predefined_TC_type_1 syntax.SK_Constructor 0 ci_2 in _Tuple2 (syntax.App (syntax._App (select cinp_dynamic_representation_0::convertDynamics._DynamicRepresentation 3) (_predefined._Cons (select _x_1_0::_Tuple2 0) _predefined._Nil) Heap.nilPtr)) (select _x_1_0::_Tuple2 1)
convertDynamics.typeConstructor_41 cinp_dynamic_representation_0 !_x_1 ci_2 = case _x_1 (syntax.GTT_PredefTypeConstructor _x_1_0 -> case _x_1_0 (syntax._Global type_index_2_0 glob_module_2_1 -> case (case (StdBool.not (<{StdInt.<_17}> type_index_2_0 8)) (True -> StdBool.not (<{StdInt.<_17}> 38 type_index_2_0)) (False -> False) ) (True -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_0 (<{StdInt.+_6}> type_index_2_0 (<{StdInt.-_7}> 262 8)) ci_2) (False -> <{convertDynamics._c;576;15_163}> (<{StdInt.+_6}> type_index_2_0 1) cinp_dynamic_representation_0 ci_2) ) ) (syntax.GTT_Constructor fun_ident_1_0 _x_1_1 -> _Tuple2 (syntax.App (syntax._App (select cinp_dynamic_representation_0::convertDynamics._DynamicRepresentation 3) (_predefined._Cons (syntax.App (syntax._App fun_ident_1_0 _predefined._Nil Heap.nilPtr)) _predefined._Nil) Heap.nilPtr)) ci_2) (syntax.GTT_Basic basic_type_1_0 -> let !predefined_TC_basic_type_2_0::I = <{convertDynamics._c;604;15_164}> basic_type_1_0 in convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_0 predefined_TC_basic_type_2_0 ci_2) (syntax.GTT_Function -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_0 255 ci_2) 
<{convertDynamics._c;604;15_164}>::I !basic_type_0 = case basic_type_0 (syntax.BT_Int -> 248) (syntax.BT_Char -> 249) (syntax.BT_Real -> 250) (syntax.BT_Bool -> 251) (syntax.BT_Dynamic -> 252) (syntax.BT_File -> 253) (syntax.BT_World -> 254) 
<{convertDynamics._c;576;15_163}> !_x_0::I cinp_dynamic_representation_1 ci_2 = case _x_0 (2 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 256 ci_2) (3 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 257 ci_2) (4 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 258 ci_2) (5 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 259 ci_2) (6 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 260 ci_2) (7 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 261 ci_2) (40 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 293 ci_2) (41 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 294 ci_2) (42 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 295 ci_2) (43 -> convertDynamics.type_code_constructor_expression_42 cinp_dynamic_representation_1 296 ci_2) 
convertDynamics.build_tv_44 !tv_symb_0 number_1::I = syntax.App (syntax._App tv_symb_0 (_predefined._Cons (syntax.BasicExpr (syntax.BVInt number_1)) _predefined._Nil) Heap.nilPtr)
convertDynamics.mark_uni_var_43 pattern_0::B build_var_code_1 var_info_ptr_2 !_x_3 = case _x_3 (_Tuple2 count_1_0 var_heap_1_1 -> _Tuple2 (<{StdInt.+_6}> count_1_0 (<{convertDynamics._if;652;31_165}> pattern_0)) (Heap.writePtr var_info_ptr_2 (syntax.VI_TypeCodeVariable (syntax.TCI_TypeVar (build_var_code_1 count_1_0))) var_heap_1_1)) 
<{convertDynamics._if;652;31_165}>::I !pattern_0::B = case pattern_0 (True -> -1) (_ -> 1)
convertDynamics.fold_st_123 pattern_0::B build_var_code_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> convertDynamics.fold_st_123 pattern_0 build_var_code_1 x_1_1 (convertDynamics.mark_uni_var_43 pattern_0 build_var_code_1 a_1_0 st_3)) 
convertDynamics.fold_st_124 pattern_0::B tv_symb_1 !_x_2 !st_3 = case _x_2 (_predefined._Nil -> st_3) (_predefined._Cons a_1_0 x_1_1 -> convertDynamics.fold_st_124 pattern_0 tv_symb_1 x_1_1 (convertDynamics.mark_uni_var_43 pattern_0 (convertDynamics.build_tv_44 tv_symb_1) a_1_0 st_3)) 
convertDynamics.convertTypeCode !pattern_0::B !_x_1 !_x_2 !_x_3 = case _x_2 (syntax.TCE_Var var_info_ptr_1_0 -> case _x_3 (_Tuple3 has_var_2_0 binds_2_1 ci_2_2 -> case ci_2_2 (convertDynamics._ConversionState ci_predef_symb_3_0 ci_var_heap_3_1 ci_expr_heap_3_2 ci_new_variables_3_3 ci_type_pattern_var_count_3_4 ci_type_var_count_3_5 ci_subst_var_used_3_6 -> let _x_4_0 = Heap.readPtr var_info_ptr_1_0 ci_var_heap_3_1, ci_var_heap_4_1 = select _x_4_0::_Tuple2 1 in <{convertDynamics._c;524;9_168}> (select _x_4_0::_Tuple2 0) has_var_2_0 binds_2_1 ci_2_2 ci_var_heap_4_1 var_info_ptr_1_0) ) ) (syntax.TCE_TypeTerm var_info_ptr_1_0 -> case _x_3 (_Tuple3 has_var_2_0 binds_2_1 ci_2_2 -> case ci_2_2 (convertDynamics._ConversionState ci_predef_symb_3_0 ci_var_heap_3_1 ci_expr_heap_3_2 ci_new_variables_3_3 ci_type_pattern_var_count_3_4 ci_type_var_count_3_5 ci_subst_var_used_3_6 -> let _x_4_0 = Heap.readPtr var_info_ptr_1_0 ci_var_heap_3_1, ci_var_heap_4_1 = select _x_4_0::_Tuple2 1 in <{convertDynamics._c;536;9_171}> (select _x_4_0::_Tuple2 0) has_var_2_0 binds_2_1 ci_2_2 ci_var_heap_4_1 var_info_ptr_1_0) ) ) (syntax.TCE_App t_1_0 arg_1_1 -> case _x_3 (_Tuple3 has_var_2_0 binds_2_1 ci_2_2 -> let _x_3_0 = convertDynamics.getSymbol 169 syntax.SK_Constructor 2 ci_2_2, _x_3_1 = convertDynamics.convertTypeCode pattern_0 _x_1 t_1_0 (_Tuple3 has_var_2_0 binds_2_1 (select _x_3_0::_Tuple2 1)), _x_3_2 = convertDynamics.convertTypeCode pattern_0 _x_1 arg_1_1 (select _x_3_1::_Tuple2 1) in <{_Tuple2!3}> (syntax.App (syntax._App (select _x_3_0::_Tuple2 0) (_predefined._Cons (select _x_3_1::_Tuple2 0) (_predefined._Cons (select _x_3_2::_Tuple2 0) _predefined._Nil)) Heap.nilPtr)) (select _x_3_2::_Tuple2 1)) ) (syntax.TCE_Constructor cons_1_0 _x_1_1 -> case _x_1 (convertDynamics._ConversionInput cinp_dynamic_representation_2_0 cinp_subst_var_2_1 -> case _x_1_1 (_predefined._Nil -> case _x_3 (_Tuple3 has_var_4_0 binds_4_1 ci_4_2 -> let _x_5_0 = convertDynamics.getSymbol 171 syntax.SK_Constructor 1 ci_4_2, _x_5_1 = convertDynamics.typeConstructor_41 cinp_dynamic_representation_2_0 cons_1_0 (select _x_5_0::_Tuple2 1) in <{_Tuple2!3}> (syntax.App (syntax._App (select _x_5_0::_Tuple2 0) (_predefined._Cons (select _x_5_1::_Tuple2 0) _predefined._Nil) Heap.nilPtr)) (_Tuple3 has_var_4_0 binds_4_1 (select _x_5_1::_Tuple2 1))) ) ) (_ -> convertDynamics.convertTypeCode pattern_0 _x_1 (convertDynamics.foldl_71 syntax.TCE_App (syntax.TCE_Constructor cons_1_0 _predefined._Nil) _x_1_1) _x_3)) (syntax.TCE_UniType uni_vars_1_0 type_code_1_1 -> case _x_3 (_Tuple3 has_var_2_0 binds_2_1 ci_2_2 -> let init_count_3_0::I = <{convertDynamics._if;628;17_173}> pattern_0 ci_3_3, _x_3_1 = convertDynamics.getSymbol (<{convertDynamics._if;626;28_172}> pattern_0) syntax.SK_Constructor 1 ci_2_2, tv_symb_3_2 = select _x_3_1::_Tuple2 0, ci_3_3 = select _x_3_1::_Tuple2 1, _x_3_4 = convertDynamics.fold_st_124 pattern_0 tv_symb_3_2 uni_vars_1_0 (_Tuple2 init_count_3_0 (select ci_3_3::convertDynamics._ConversionState 1)), count_3_5::I = select _x_3_4::_Tuple2 0 in case (<{StdInt.<_17}> init_count_3_0 count_3_5) (True -> let _x_5_0 = convertDynamics.convertTypeCode pattern_0 _x_1 type_code_1_1 (_Tuple3 has_var_2_0 binds_2_1 (update ci_3_3::convertDynamics._ConversionState [1:select _x_3_4::_Tuple2 1,4:<{convertDynamics._if;634;49_174}> pattern_0 ci_3_3 count_3_5,5:<{convertDynamics._if;633;41_175}> pattern_0 count_3_5 ci_3_3])), _x_5_1 = select _x_5_0::_Tuple2 1, _x_5_2 = convertDynamics.getSymbol 168 syntax.SK_Constructor 2 (select _x_5_1::_Tuple3 2) in <{_Tuple2!3}> (syntax.App (syntax._App (select _x_5_2::_Tuple2 0) (_predefined._Cons (syntax.BasicExpr (syntax.BVInt (<{StdInt.-_7}> count_3_5 init_count_3_0))) (_predefined._Cons (select _x_5_0::_Tuple2 0) _predefined._Nil)) Heap.nilPtr)) (_Tuple3 (convertDynamics._f176_176 (select _x_5_1::_Tuple3 0) init_count_3_0) (select _x_5_1::_Tuple3 1) (select _x_5_2::_Tuple2 1))) (False -> let _x_5_0 = convertDynamics.convertTypeCode pattern_0 _x_1 type_code_1_1 (_Tuple3 has_var_2_0 binds_2_1 (update ci_3_3::convertDynamics._ConversionState [1:select _x_3_4::_Tuple2 1,4:<{convertDynamics._if;634;49_177}> pattern_0 ci_3_3 count_3_5,5:<{convertDynamics._if;633;41_178}> pattern_0 count_3_5 ci_3_3])), _x_5_1 = select _x_5_0::_Tuple2 1 in <{_Tuple2!3}> (select _x_5_0::_Tuple2 0) (_Tuple3 (select _x_5_1::_Tuple3 0) (select _x_5_1::_Tuple3 1) (select _x_5_1::_Tuple3 2))) ) ) (syntax.TCE_UnqType type_1_0 -> case _x_3 (_Tuple3 has_var_2_0 binds_2_1 ci_2_2 -> let _x_3_0 = convertDynamics.getSymbol 172 syntax.SK_Constructor 1 ci_2_2, _x_3_1 = convertDynamics.convertTypeCode pattern_0 _x_1 type_1_0 (_Tuple3 has_var_2_0 binds_2_1 (select _x_3_0::_Tuple2 1)), _x_3_2 = select _x_3_1::_Tuple2 1 in <{_Tuple2!3}> (syntax.App (syntax._App (select _x_3_0::_Tuple2 0) (_predefined._Cons (select _x_3_1::_Tuple2 0) _predefined._Nil) Heap.nilPtr)) (_Tuple3 (select _x_3_2::_Tuple3 0) (select _x_3_2::_Tuple3 1) (select _x_3_2::_Tuple3 2))) ) (syntax.TCE_Selector selections_1_0 var_info_ptr_1_1 -> let ci_2_0 = select _x_3::_Tuple3 2, _x_2_1 = Heap.readPtr var_info_ptr_1_1 (select ci_2_0::convertDynamics._ConversionState 1), ci_var_heap_2_2 = select _x_2_1::_Tuple2 1 in <{convertDynamics._c;672;5_181}> (select _x_2_1::_Tuple2 0) ci_2_0 ci_var_heap_2_2 _x_3 var_info_ptr_1_1 selections_1_0) 
<{convertDynamics._c;672;5_181}> !_x_0 !ci_1 !ci_var_heap_2 !_x_3 !var_info_ptr_4 selections_5 = case _x_0 (syntax.VI_TypeCodeVariable _x_1_0 -> convertDynamics._f180_180 _x_1_0 ci_1 ci_var_heap_2 _x_3 var_info_ptr_4 selections_5) (_ -> <{convertDynamics._c;672;5_179}> ci_1 ci_var_heap_2 _x_3 var_info_ptr_4 selections_5)
convertDynamics._f180_180 !_x_0 !ci_1 !ci_var_heap_2 !_x_3 !var_info_ptr_4 selections_5 = case _x_0 (syntax.TCI_TypeVar tv_1_0 -> StdMisc.abort "convertTypeCode TCE_Selector") (syntax.TCI_TypePatternVar tpv_1_0 -> StdMisc.abort "convertTypeCode TCE_Selector") (syntax.TCI_SelectionsTypePatternVar tc_selections_1_0 -> let _x_2_0 = convertDynamics.createTypePatternVariable (update ci_1::convertDynamics._ConversionState [1:ci_var_heap_2]), var_2_1 = select _x_2_0::_Tuple2 0, ci_2_2 = select _x_2_0::_Tuple2 1 in <{_Tuple2!3}> var_2_1 (_Tuple3 True (select _x_3::_Tuple3 1) (update ci_2_2::convertDynamics._ConversionState [1:Heap.writePtr var_info_ptr_4 (syntax.VI_TypeCodeVariable (syntax.TCI_SelectionsTypePatternVar (_predefined._Cons (_Tuple2 var_2_1 selections_5) tc_selections_1_0))) (select ci_2_2::convertDynamics._ConversionState 1)]))) (_ -> <{convertDynamics._c;672;5_179}> ci_1 ci_var_heap_2 _x_3 var_info_ptr_4 selections_5)
<{convertDynamics._c;672;5_179}> !ci_0 !ci_var_heap_1 !_x_2 !var_info_ptr_3 selections_4 = let _x_1_0 = convertDynamics.createTypePatternVariable (update ci_0::convertDynamics._ConversionState [1:ci_var_heap_1]), var_1_1 = select _x_1_0::_Tuple2 0, ci_1_2 = select _x_1_0::_Tuple2 1 in <{_Tuple2!3}> var_1_1 (_Tuple3 True (select _x_2::_Tuple3 1) (update ci_1_2::convertDynamics._ConversionState [1:Heap.writePtr var_info_ptr_3 (syntax.VI_TypeCodeVariable (syntax.TCI_SelectionsTypePatternVar (_predefined._Cons (_Tuple2 var_1_1 selections_4) _predefined._Nil))) (select ci_1_2::convertDynamics._ConversionState 1)]))
<{convertDynamics._if;633;41_178}>::I !pattern_0::B count_1::I ci_2 = case pattern_0 (True -> count_1) (_ -> select ci_2::convertDynamics._ConversionState 5)
<{convertDynamics._if;634;49_177}>::I !pattern_0::B ci_1 count_2::I = case pattern_0 (True -> select ci_1::convertDynamics._ConversionState 4) (_ -> count_2)
convertDynamics._f176_176::B !_x_0::B init_count_1::I = case _x_0 (True -> True) (_ -> StdBool.not (<{StdInt.==_16}> init_count_1 0))
<{convertDynamics._if;633;41_175}>::I !pattern_0::B count_1::I ci_2 = case pattern_0 (True -> count_1) (_ -> select ci_2::convertDynamics._ConversionState 5)
<{convertDynamics._if;634;49_174}>::I !pattern_0::B ci_1 count_2::I = case pattern_0 (True -> select ci_1::convertDynamics._ConversionState 4) (_ -> count_2)
<{convertDynamics._if;628;17_173}>::I !pattern_0::B !ci_1 = case pattern_0 (True -> select ci_1::convertDynamics._ConversionState 5) (_ -> select ci_1::convertDynamics._ConversionState 4)
<{convertDynamics._if;626;28_172}>::I !pattern_0::B = case pattern_0 (True -> 173) (_ -> 170)
<{convertDynamics._c;536;9_171}> !_x_0 has_var_1::B !binds_2 !ci_3 !ci_var_heap_4 var_info_ptr_5 = case _x_0 (syntax.VI_TypeCodeVariable _x_1_0 -> convertDynamics._f170_170 _x_1_0 has_var_1 binds_2 ci_3 ci_var_heap_4 var_info_ptr_5) (_ -> <{convertDynamics._c;536;9_169}> ci_3 ci_var_heap_4 binds_2 var_info_ptr_5)
convertDynamics._f170_170 !_x_0 has_var_1::B !binds_2 !ci_3 !ci_var_heap_4 var_info_ptr_5 = case _x_0 (syntax.TCI_TypeVar tv_1_0 -> <{_Tuple2!3}> tv_1_0 (_Tuple3 has_var_1 binds_2 (update ci_3::convertDynamics._ConversionState [1:ci_var_heap_4]))) (syntax.TCI_TypePatternVar tpv_1_0 -> <{_Tuple2!3}> tpv_1_0 (_Tuple3 True binds_2 (update ci_3::convertDynamics._ConversionState [1:ci_var_heap_4]))) (_ -> <{convertDynamics._c;536;9_169}> ci_3 ci_var_heap_4 binds_2 var_info_ptr_5)
<{convertDynamics._c;536;9_169}> !ci_0 !ci_var_heap_1 !binds_2 !var_info_ptr_3 = let _x_1_0 = convertDynamics.createTypePatternVariable (update ci_0::convertDynamics._ConversionState [1:ci_var_heap_1]), expr_1_1 = select _x_1_0::_Tuple2 0, ci_1_2 = select _x_1_0::_Tuple2 1 in <{_Tuple2!3}> expr_1_1 (_Tuple3 True binds_2 (update ci_1_2::convertDynamics._ConversionState [1:Heap.writePtr var_info_ptr_3 (syntax.VI_TypeCodeVariable (syntax.TCI_TypePatternVar expr_1_1)) (select ci_1_2::convertDynamics._ConversionState 1)]))
<{convertDynamics._c;524;9_168}> !_x_0 has_var_1::B !binds_2 !ci_3 !ci_var_heap_4 var_info_ptr_5 = case _x_0 (syntax.VI_TypeCodeVariable _x_1_0 -> convertDynamics._f167_167 _x_1_0 has_var_1 binds_2 ci_3 ci_var_heap_4 var_info_ptr_5) (_ -> <{convertDynamics._c;524;9_166}> ci_3 ci_var_heap_4 binds_2 var_info_ptr_5)
convertDynamics._f167_167 !_x_0 has_var_1::B !binds_2 !ci_3 !ci_var_heap_4 var_info_ptr_5 = case _x_0 (syntax.TCI_TypeVar tv_1_0 -> <{_Tuple2!3}> tv_1_0 (_Tuple3 has_var_1 binds_2 (update ci_3::convertDynamics._ConversionState [1:ci_var_heap_4]))) (syntax.TCI_TypePatternVar tpv_1_0 -> <{_Tuple2!3}> tpv_1_0 (_Tuple3 True binds_2 (update ci_3::convertDynamics._ConversionState [1:ci_var_heap_4]))) (_ -> <{convertDynamics._c;524;9_166}> ci_3 ci_var_heap_4 binds_2 var_info_ptr_5)
<{convertDynamics._c;524;9_166}> !ci_0 !ci_var_heap_1 !binds_2 !var_info_ptr_3 = let _x_1_0 = convertDynamics.createTypePatternVariable (update ci_0::convertDynamics._ConversionState [1:ci_var_heap_1]), expr_1_1 = select _x_1_0::_Tuple2 0, ci_1_2 = select _x_1_0::_Tuple2 1 in <{_Tuple2!3}> expr_1_1 (_Tuple3 True binds_2 (update ci_1_2::convertDynamics._ConversionState [1:Heap.writePtr var_info_ptr_3 (syntax.VI_TypeCodeVariable (syntax.TCI_TypePatternVar expr_1_1)) (select ci_1_2::convertDynamics._ConversionState 1)]))
convertDynamics.convertExprTypeCode !cinp_0 !tce_1 !ci_2 = case cinp_0 (convertDynamics._ConversionInput cinp_dynamic_representation_1_0 cinp_subst_var_1_1 -> let _x_2_0 = convertDynamics.convertTypeCode False cinp_0 tce_1 (_Tuple3 False _predefined._Nil ci_2), _x_2_1 = select _x_2_0::_Tuple2 1 in case (StdBool.not (StdList.isEmpty (select _x_2_1::_Tuple3 1))) (True -> StdMisc.abort "unexpected binds in expression type code") (False -> case (select _x_2_1::_Tuple3 0) (True -> let _x_5_0 = convertDynamics.getSymbol 177 syntax.SK_Function 2 (update (select _x_2_1::_Tuple3 2)::convertDynamics._ConversionState [6:True]) in <{_Tuple2!3}> (syntax.App (syntax._App (select _x_5_0::_Tuple2 0) (_predefined._Cons (syntax.Var (select cinp_0::convertDynamics._ConversionInput 1)) (_predefined._Cons (select _x_2_0::_Tuple2 0) _predefined._Nil)) Heap.nilPtr)) (select _x_5_0::_Tuple2 1)) (False -> <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple3 2)) ) ) 
convertDynamics.map_st_73 f_0 !_x_1 s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = f_0 x_1_0 s_2, _x_2_2 = convertDynamics.map_st_73 f_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
convertDynamics.convertDynamics_48 !_vconvertDynamics_0 !cinp_1 !xs_2 !ci_3 = convertDynamics.map_st_73 (select _vconvertDynamics_0::<{convertDynamics.convertDynamics;}> 0 cinp_1) xs_2 ci_3
convertDynamics.convertDynamics_53 !_vconvertDynamics_0 !cinp_1 !binding_2 !ci_3 = case binding_2 (general._Bind bind_src_1_0 bind_dst_1_1 -> let _x_2_0 = select _vconvertDynamics_0::<{convertDynamics.convertDynamics;}> 0 cinp_1 bind_src_1_0 ci_3 in <{_Tuple2!3}> (update binding_2::general._Bind [0:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
convertDynamics.getResultType !case_info_ptr_0 !ci_1 = case ci_1 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> let _x_2_0 = Heap.readPtr case_info_ptr_0 ci_expr_heap_1_2 in <{_Tuple2!3}> (select (select (select _x_2_0::_Tuple2 0)::_Tuple1 0)::syntax._CaseType 1) (update ci_1::convertDynamics._ConversionState [2:select _x_2_0::_Tuple2 1])) 
convertDynamics.convertPatternTypeCode !cinp_0 !tce_1 !ci_2 = let _x_1_0 = convertDynamics.convertTypeCode True cinp_0 tce_1 (_Tuple3 False _predefined._Nil ci_2), _x_1_1 = select _x_1_0::_Tuple2 1 in <{_Tuple3!7}> (select _x_1_0::_Tuple2 0) (select _x_1_1::_Tuple3 1) (select _x_1_1::_Tuple3 2)
convertDynamics.bool_case_ptr !result_type_0 !ci_1 = case ci_1 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> let _x_2_0 = Heap.newPtr (syntax.EI_CaseType (syntax._CaseType (convertDynamics.toAType (syntax.TB syntax.BT_Bool)) result_type_0 (_predefined._Cons (_predefined._Cons (convertDynamics.toAType (syntax.TB syntax.BT_Bool)) _predefined._Nil) _predefined._Nil))) ci_expr_heap_1_2 in <{_Tuple2!2}> (select _x_2_0::_Tuple2 0) (update ci_1::convertDynamics._ConversionState [2:select _x_2_0::_Tuple2 1])) 
convertDynamics.getTupleSymbol arity_0::I !ci_1 = case ci_1 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> let _x_2_0 = convertDynamics.uselect_104 ci_predef_symb_1_0 (<{StdInt.-_7}> (<{StdInt.+_6}> 58 arity_0) 2) in _Tuple2 (syntax._DefinedSymbol (_SystemArray.select_3 predef.predefined_idents (<{StdInt.-_7}> (<{StdInt.+_6}> 58 arity_0) 2)) arity_0 (select (select _x_2_0::_Tuple2 0)::predef._PredefinedSymbol 1)) (update ci_1::convertDynamics._ConversionState [0:select _x_2_0::_Tuple2 1])) 
convertDynamics.dummy_case_ptr !result_type_0 !ci_1 = case ci_1 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> let _x_2_0 = Heap.newPtr (syntax.EI_CaseType (syntax._CaseType (convertDynamics.toAType syntax.TE) result_type_0 (_predefined._Cons (_predefined._Cons convertDynamics.empty_attributed_type (_predefined._Cons convertDynamics.empty_attributed_type _predefined._Nil)) _predefined._Nil))) ci_expr_heap_1_2 in <{_Tuple2!2}> (select _x_2_0::_Tuple2 0) (update ci_1::convertDynamics._ConversionState [2:select _x_2_0::_Tuple2 1])) 
convertDynamics.position_59 !_vposition_0 !_x_1 = case _x_1 (_predefined._Nil -> syntax.NoPos) (_predefined._Cons h_1_0 _x_1_1 -> select _vposition_0::<{convertDynamics.position;}> 0 h_1_0) 
convertDynamics.position_60 !_x_0 = case _x_0 (syntax._DynamicPattern dp_var_1_0 dp_type_1_1 dp_type_code_1_2 dp_rhs_1_3 dp_position_1_4 -> dp_position_1_4) 
convertDynamics.add_global_type_pattern_vars_and_let_39 !ap_vars_0 subst_var_1 ap_expr_2 ci_3 = case (StdBool.not (convertDynamics.global_type_pattern_in_free_vars ap_vars_0 (select ci_3::convertDynamics._ConversionState 1))) (True -> _Tuple3 ap_expr_2 subst_var_1 ci_3) (False -> let _x_2_0 = convertDynamics.newVariable "gtpv_subst" syntax.VI_Empty (update ci_3::convertDynamics._ConversionState [6:True]), new_subst_var_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = convertDynamics.bind_global_type_pattern_vars ap_vars_0 (syntax.Var subst_var_1) (select _x_2_0::_Tuple2 1), _x_2_3 = convertDynamics.share_init_subst new_subst_var_2_1 ap_expr_2 (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1) in _Tuple3 (select _x_2_3::_Tuple2 0) new_subst_var_2_1 (select _x_2_3::_Tuple2 1)) 
convertDynamics.convertDynamics_49 !_vconvertDynamics_0 !cinp_1 !_x_2 !ci_3 = case _x_2 (general.Yes x_1_0 -> let _x_2_0 = select _vconvertDynamics_0::<{convertDynamics.convertDynamics;}> 0 cinp_1 x_1_0 ci_3 in <{_Tuple2!3}> (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (general.No -> <{_Tuple2!3}> general.No ci_3) 
convertDynamics.position_135 !_x_0 = case _x_0 (_predefined._Nil -> syntax.NoPos) (_predefined._Cons h_1_0 _x_1_1 -> convertDynamics.position_60 h_1_0) 
convertDynamics.convertDynamics_55 !cinp_0 !app_1 !ci_2 = case app_1 (syntax._App app_symb_1_0 app_args_1_1 app_info_ptr_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_125 cinp_0 app_args_1_1 ci_2 in <{_Tuple2!3}> (update app_1::syntax._App [1:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
convertDynamics.map_st_126 !cinp_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = convertDynamics.convertDynamics_54 cinp_0 x_1_0 s_2, _x_2_2 = convertDynamics.map_st_126 cinp_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
convertDynamics.convertDynamics_125 !cinp_0 !xs_1 !ci_2 = convertDynamics.map_st_126 cinp_0 xs_1 ci_2
convertDynamics.convertDynamics_52 !cinp_0 !binding_1 !ci_2 = case binding_1 (syntax._LetBind lb_dst_1_0 lb_src_1_1 lb_position_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 lb_src_1_1 ci_2 in <{_Tuple2!3}> (update binding_1::syntax._LetBind [1:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
convertDynamics.map_st_133 !cinp_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = convertDynamics.convertDynamics_52 cinp_0 x_1_0 s_2, _x_2_2 = convertDynamics.map_st_133 cinp_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
convertDynamics.convertDynamics_132 !cinp_0 !xs_1 !ci_2 = convertDynamics.map_st_133 cinp_0 xs_1 ci_2
convertDynamics.convertDynamics_56 !cinp_0 !letje_1 !ci_2 = case letje_1 (syntax._Let let_strict_binds_1_0 let_lazy_binds_1_1 let_expr_1_2 let_info_ptr_1_3 let_expr_position_1_4 -> let _x_2_0 = convertDynamics.convertDynamics_132 cinp_0 let_strict_binds_1_0 ci_2, _x_2_1 = convertDynamics.convertDynamics_132 cinp_0 let_lazy_binds_1_1 (select _x_2_0::_Tuple2 1), _x_2_2 = convertDynamics.convertDynamics_54 cinp_0 let_expr_1_2 (select _x_2_1::_Tuple2 1) in <{_Tuple2!3}> (update letje_1::syntax._Let [0:select _x_2_0::_Tuple2 0,1:select _x_2_1::_Tuple2 0,2:select _x_2_2::_Tuple2 0]) (select _x_2_2::_Tuple2 1)) 
convertDynamics.convertDynamics_61 !cinp_0 !alt_1 !ci_2 = case alt_1 (syntax._BasicPattern bp_value_1_0 bp_expr_1_1 bp_position_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 bp_expr_1_1 ci_2 in <{_Tuple2!3}> (update alt_1::syntax._BasicPattern [1:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
convertDynamics.map_st_137 !cinp_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = convertDynamics.convertDynamics_61 cinp_0 x_1_0 s_2, _x_2_2 = convertDynamics.map_st_137 cinp_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
convertDynamics.convertDynamics_136 !cinp_0 !xs_1 !ci_2 = convertDynamics.map_st_137 cinp_0 xs_1 ci_2
convertDynamics.convertDynamics_62 !cinp_0 !alt_1 !ci_2 = case alt_1 (syntax._AlgebraicPattern ap_symbol_1_0 ap_vars_1_1 ap_expr_1_2 ap_position_1_3 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 ap_expr_1_2 ci_2 in <{_Tuple2!3}> (update alt_1::syntax._AlgebraicPattern [2:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
convertDynamics.map_st_139 !cinp_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = convertDynamics.convertDynamics_62 cinp_0 x_1_0 s_2, _x_2_2 = convertDynamics.map_st_139 cinp_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
convertDynamics.convertDynamics_138 !cinp_0 !xs_1 !ci_2 = convertDynamics.map_st_139 cinp_0 xs_1 ci_2
convertDynamics.convertDynamics_58 !cinp_0 !_x_1 !ci_2 = case _x_1 (syntax.BasicPatterns type_1_0 alts_1_1 -> let _x_2_0 = convertDynamics.convertDynamics_136 cinp_0 alts_1_1 ci_2 in <{_Tuple2!3}> (syntax.BasicPatterns type_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.AlgebraicPatterns type_1_0 alts_1_1 -> let _x_2_0 = convertDynamics.convertDynamics_138 cinp_0 alts_1_1 ci_2 in <{_Tuple2!3}> (syntax.AlgebraicPatterns type_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.OverloadedListPatterns type_1_0 decons_1_1 alts_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_138 cinp_0 alts_1_2 ci_2 in <{_Tuple2!3}> (syntax.OverloadedListPatterns type_1_0 decons_1_1 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) 
convertDynamics.convertDynamicsAlgebraicPatternsWithContexts cinp_0 !_x_1 ci_2 = case _x_1 (_predefined._Cons ap_1_0 aps_1_1 -> case ap_1_0 (syntax._AlgebraicPattern ap_symbol_2_0 ap_vars_2_1 ap_expr_2_2 ap_position_2_3 -> case ci_2 (convertDynamics._ConversionState ci_predef_symb_3_0 ci_var_heap_3_1 ci_expr_heap_3_2 ci_new_variables_3_3 ci_type_pattern_var_count_3_4 ci_type_var_count_3_5 ci_subst_var_used_3_6 -> let subst_var_4_0 = select _x_4_3::_Tuple3 1, _x_4_1 = convertDynamics.convertDynamics_54 (update cinp_0::convertDynamics._ConversionInput [1:subst_var_4_0]) ap_expr_2_2 ci_2, ci2_4_2 = select _x_4_1::_Tuple2 1, _x_4_3 = <{convertDynamics._if;372;15_186}> (convertDynamics._f185_185 (<{StdInt.==_16}> (select ci2_4_2::convertDynamics._ConversionState 4) ci_type_pattern_var_count_3_4) ci2_4_2 ci_type_var_count_3_5) ap_expr2_4_5 cinp_0 ci2_4_2 ap_vars_2_1, _x_4_4 = convertDynamics.convertDynamicsAlgebraicPatternsWithContexts cinp_0 aps_1_1 (select _x_4_3::_Tuple3 2), ap_expr2_4_5 = select _x_4_1::_Tuple2 0 in _Tuple2 (_predefined._Cons (update ap_1_0::syntax._AlgebraicPattern [2:select _x_4_3::_Tuple3 0]) (select _x_4_4::_Tuple2 0)) (select _x_4_4::_Tuple2 1)) ) ) (_predefined._Nil -> _Tuple2 _predefined._Nil ci_2) 
convertDynamics.convertDynamicAlts _x_0 _x_1 _x_2 _x_3 _x_4 defoult_5 !_x_6 ci_7 = case _x_6 (_predefined._Nil -> _Tuple2 defoult_5 ci_7) (_predefined._Cons _x_1_0 alts_1_1 -> case _x_0 (convertDynamics._ConversionInput cinp_dynamic_representation_2_0 cinp_subst_var_2_1 -> case _x_1_0 (syntax._DynamicPattern dp_var_3_0 dp_type_3_1 dp_type_code_3_2 dp_rhs_3_3 dp_position_3_4 -> let _x_4_0 = convertDynamics.convertPatternTypeCode _x_0 dp_type_code_3_2 ci_7, binds_4_1 = select _x_4_0::_Tuple3 1, _x_4_2 = convertDynamics.getSymbol 176 syntax.SK_Function 3 (select _x_4_0::_Tuple3 2), _x_4_3 = convertDynamics.let_ptr (<{StdInt.+_6}> 3 (StdList.length_47 binds_4_1)) (update (select _x_4_2::_Tuple2 1)::convertDynamics._ConversionState [6:True]), _x_4_4 = convertDynamics.newVariable "result" syntax.VI_Empty (select _x_4_3::_Tuple2 1), unify_result_var_4_5 = select _x_4_4::_Tuple2 0, unify_result_fv_4_6 = convertDynamics.varToFreeVar unify_result_var_4_5 1, _x_4_7 = convertDynamics.newVariable "unify_bool" syntax.VI_Empty (select _x_4_4::_Tuple2 1), unify_bool_var_4_8 = select _x_4_7::_Tuple2 0, unify_bool_fv_4_9 = convertDynamics.varToFreeVar unify_bool_var_4_8 1, _x_4_10 = convertDynamics.newVariable "unify_subst" syntax.VI_Empty (select _x_4_7::_Tuple2 1), unify_subst_var_4_11 = select _x_4_10::_Tuple2 0, ci_4_12 = select _x_4_10::_Tuple2 1, _x_4_13 = convertDynamics.convertDynamics_54 (update _x_0::convertDynamics._ConversionInput [1:unify_subst_var_4_11]) dp_rhs_3_3 (update ci_4_12::convertDynamics._ConversionState [1:Heap.writePtr (select dp_var_3_0::syntax._FreeVar 2) (syntax.VI_DynamicValueAlias _x_3) (select ci_4_12::convertDynamics._ConversionState 1)]), _x_4_14 = convertDynamics.bool_case_ptr _x_4 (select _x_4_13::_Tuple2 1), _x_4_15 = convertDynamics.convertDynamicAlts _x_0 _x_1 _x_2 _x_3 _x_4 defoult_5 alts_1_1 (select _x_4_14::_Tuple2 1), ci_4_16 = select _x_4_15::_Tuple2 1, unify_subst_fv_4_17 = convertDynamics.varToFreeVar unify_subst_var_4_11 1, _x_4_18 = convertDynamics.getTupleSymbol 2 (update ci_4_16::convertDynamics._ConversionState [3:_predefined._Cons unify_result_fv_4_6 (_predefined._Cons unify_bool_fv_4_9 (_predefined._Cons unify_subst_fv_4_17 (select ci_4_16::convertDynamics._ConversionState 3)))]), twotuple_4_19 = select _x_4_18::_Tuple2 0 in _Tuple2 (general.Yes (syntax.Let (syntax._Let (_predefined._Cons (syntax._LetBind unify_result_fv_4_6 (syntax.App (syntax._App (select _x_4_2::_Tuple2 0) (_predefined._Cons (syntax.Var cinp_subst_var_2_1) (_predefined._Cons (syntax.Var _x_2) (_predefined._Cons (select _x_4_0::_Tuple3 0) _predefined._Nil))) Heap.nilPtr)) syntax.NoPos) (_predefined._Cons (syntax._LetBind unify_bool_fv_4_9 (syntax.TupleSelect twotuple_4_19 0 (syntax.Var unify_result_var_4_5)) syntax.NoPos) _predefined._Nil)) (<{StdList.++}> (_predefined._Cons (syntax._LetBind unify_subst_fv_4_17 (syntax.TupleSelect twotuple_4_19 1 (syntax.Var unify_result_var_4_5)) syntax.NoPos) _predefined._Nil) binds_4_1) (syntax.Case (update _x_1::syntax._Case [0:syntax.Var unify_bool_var_4_8,1:syntax.BasicPatterns syntax.BT_Bool (_predefined._Cons (syntax._BasicPattern (syntax.BVB True) (select _x_4_13::_Tuple2 0) dp_position_3_4) _predefined._Nil),2:select _x_4_15::_Tuple2 0,4:select _x_4_14::_Tuple2 0,5:False])) (select _x_4_3::_Tuple2 0) syntax.NoPos))) (select _x_4_18::_Tuple2 1)) ) ) 
convertDynamics.convertDynamicCase !cinp_0 !kees_1 ci_2 = case cinp_0 (convertDynamics._ConversionInput cinp_dynamic_representation_1_0 cinp_subst_var_1_1 -> case cinp_dynamic_representation_1_0 (convertDynamics._DynamicRepresentation dr_type_ident_2_0 dr_dynamic_type_2_1 dr_dynamic_symbol_2_2 dr_type_code_constructor_symb_ident_2_3 -> case kees_1 (syntax._Case case_expr_3_0 case_guards_3_1 case_default_3_2 case_ident_3_3 case_info_ptr_3_4 case_explicit_3_5 case_default_pos_3_6 -> case case_guards_3_1 (syntax.DynamicPatterns alts_4_0 -> let _x_5_0 = convertDynamics.newVariable "value" syntax.VI_Empty ci_2, value_var_5_1 = select _x_5_0::_Tuple2 0, _x_5_2 = convertDynamics.newVariable "type" syntax.VI_Empty (select _x_5_0::_Tuple2 1), type_var_5_3 = select _x_5_2::_Tuple2 0, ci_5_4 = select _x_5_2::_Tuple2 1, _x_5_5 = convertDynamics.getResultType case_info_ptr_3_4 (update ci_5_4::convertDynamics._ConversionState [3:_predefined._Cons (convertDynamics.varToFreeVar value_var_5_1 1) (_predefined._Cons (convertDynamics.varToFreeVar type_var_5_3 1) (select ci_5_4::convertDynamics._ConversionState 3))]), result_type_5_6 = select _x_5_5::_Tuple2 0, _x_5_7 = <{convertDynamics._c;398;13_184}> (convertDynamics.convertDynamicAlts cinp_0 kees_1 type_var_5_3 value_var_5_1 result_type_5_6 case_default_3_2 alts_4_0 (select _x_5_5::_Tuple2 1)), _x_5_8 = convertDynamics.dummy_case_ptr result_type_5_6 (select _x_5_7::_Tuple2 1) in _Tuple2 (update kees_1::syntax._Case [1:syntax.AlgebraicPatterns dr_dynamic_type_2_1 (_predefined._Cons (syntax._AlgebraicPattern dr_dynamic_symbol_2_2 (_predefined._Cons (convertDynamics.varToFreeVar value_var_5_1 1) (_predefined._Cons (convertDynamics.varToFreeVar type_var_5_3 1) _predefined._Nil)) (select _x_5_7::_Tuple2 0) (convertDynamics.position_135 alts_4_0)) _predefined._Nil),2:general.No,4:select _x_5_8::_Tuple2 0,5:False]) (select _x_5_8::_Tuple2 1)) ) ) ) 
convertDynamics.convertDynamics_134 !cinp_0 !_x_1 !ci_2 = case _x_1 (general.Yes x_1_0 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 x_1_0 ci_2 in <{_Tuple2!3}> (general.Yes (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (general.No -> <{_Tuple2!3}> general.No ci_2) 
convertDynamics.convertDynamics_57 !cinp_0 !kees_1 !ci_2 = case kees_1 (syntax._Case case_expr_1_0 case_guards_1_1 case_default_1_2 case_ident_1_3 case_info_ptr_1_4 case_explicit_1_5 case_default_pos_1_6 -> <{convertDynamics._c;332;11_183}> case_guards_1_1 cinp_0 case_default_1_2 case_expr_1_0 ci_2 kees_1) 
convertDynamics.convertDynamics_63 !cinp_0 !selection_1 !ci_2 = case selection_1 (syntax.RecordSelection _x_1_0 _x_1_1 -> <{_Tuple2!3}> selection_1 ci_2) (syntax.ArraySelection selector_1_0 expr_ptr_1_1 expr_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expr_1_2 ci_2 in <{_Tuple2!3}> (syntax.ArraySelection selector_1_0 expr_ptr_1_1 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.DictionarySelection var_1_0 selectors_1_1 expr_ptr_1_2 expr_1_3 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expr_1_3 ci_2 in <{_Tuple2!3}> (syntax.DictionarySelection var_1_0 selectors_1_1 expr_ptr_1_2 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) 
convertDynamics.map_st_128 !cinp_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = convertDynamics.convertDynamics_63 cinp_0 x_1_0 s_2, _x_2_2 = convertDynamics.map_st_128 cinp_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
convertDynamics.convertDynamics_127 !cinp_0 !xs_1 !ci_2 = convertDynamics.map_st_128 cinp_0 xs_1 ci_2
convertDynamics.convertDynamics_129 !cinp_0 !binding_1 !ci_2 = case binding_1 (general._Bind bind_src_1_0 bind_dst_1_1 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 bind_src_1_0 ci_2 in <{_Tuple2!3}> (update binding_1::general._Bind [0:select _x_2_0::_Tuple2 0]) (select _x_2_0::_Tuple2 1)) 
convertDynamics.map_st_131 !cinp_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons x_1_0 xs_1_1 -> let !s_2_0 = _predefined._dummyForStrictAlias (select _x_2_2::_Tuple2 1), _x_2_1 = convertDynamics.convertDynamics_129 cinp_0 x_1_0 s_2, _x_2_2 = convertDynamics.map_st_131 cinp_0 xs_1_1 (select _x_2_1::_Tuple2 1) in _Tuple2 (_predefined._Cons (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) s_2_0) (_predefined._Nil -> let !s_2_0 = _predefined._dummyForStrictAlias s_2 in _Tuple2 _predefined._Nil s_2_0) 
convertDynamics.convertDynamics_130 !cinp_0 !xs_1 !ci_2 = convertDynamics.map_st_131 cinp_0 xs_1 ci_2
convertDynamics.convertDynamic !cinp_0 !_x_1 ci_2 = case cinp_0 (convertDynamics._ConversionInput cinp_dynamic_representation_1_0 cinp_subst_var_1_1 -> case cinp_dynamic_representation_1_0 (convertDynamics._DynamicRepresentation dr_type_ident_2_0 dr_dynamic_type_2_1 dr_dynamic_symbol_2_2 dr_type_code_constructor_symb_ident_2_3 -> case _x_1 (syntax._DynamicExpr dyn_expr_3_0 dyn_opt_type_3_1 dyn_info_ptr_3_2 dyn_type_code_3_3 -> let _x_4_0 = convertDynamics.convertDynamics_54 cinp_0 dyn_expr_3_0 ci_2, _x_4_1 = convertDynamics.convertExprTypeCode cinp_0 dyn_type_code_3_3 (select _x_4_0::_Tuple2 1) in _Tuple2 (syntax.App (syntax._App dr_type_ident_2_0 (_predefined._Cons (select _x_4_0::_Tuple2 0) (_predefined._Cons (select _x_4_1::_Tuple2 0) _predefined._Nil)) Heap.nilPtr)) (select _x_4_1::_Tuple2 1)) ) ) 
convertDynamics.convertDynamics_54 !cinp_0 !_x_1 !ci_2 = case _x_1 (syntax.TypeCodeExpression tce_1_0 -> let _x_2_0 = convertDynamics.convertExprTypeCode cinp_0 tce_1_0 ci_2 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1)) (syntax.Var var_1_0 -> let _x_2_0 = Heap.readPtr (select var_1_0::syntax._BoundVar 1) (select ci_2::convertDynamics._ConversionState 1) in <{convertDynamics._c;258;13_182}> (_Tuple2 (select _x_2_0::_Tuple2 0) (update ci_2::convertDynamics._ConversionState [1:select _x_2_0::_Tuple2 1])) var_1_0) (syntax.App app_1_0 -> let _x_2_0 = convertDynamics.convertDynamics_55 cinp_0 app_1_0 ci_2 in <{_Tuple2!3}> (syntax.App (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (<{syntax.@}> expr_1_0 exprs_1_1 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expr_1_0 ci_2, _x_2_1 = convertDynamics.convertDynamics_125 cinp_0 exprs_1_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (<{syntax.@}> (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (syntax.Let letje_1_0 -> let _x_2_0 = convertDynamics.convertDynamics_56 cinp_0 letje_1_0 ci_2 in <{_Tuple2!3}> (syntax.Let (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.Case kees_1_0 -> let _x_2_0 = convertDynamics.convertDynamics_57 cinp_0 kees_1_0 ci_2 in <{_Tuple2!3}> (syntax.Case (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.Selection opt_symb_1_0 expression_1_1 selections_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expression_1_1 ci_2, _x_2_1 = convertDynamics.convertDynamics_127 cinp_0 selections_1_2 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (syntax.Selection opt_symb_1_0 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (syntax.Update expression1_1_0 selections_1_1 expression2_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expression1_1_0 ci_2, _x_2_1 = convertDynamics.convertDynamics_127 cinp_0 selections_1_1 (select _x_2_0::_Tuple2 1), _x_2_2 = convertDynamics.convertDynamics_54 cinp_0 expression2_1_2 (select _x_2_1::_Tuple2 1) in <{_Tuple2!3}> (syntax.Update (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0) (select _x_2_2::_Tuple2 0)) (select _x_2_2::_Tuple2 1)) (syntax.RecordUpdate cons_symbol_1_0 expression_1_1 expressions_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expression_1_1 ci_2, _x_2_1 = convertDynamics.convertDynamics_130 cinp_0 expressions_1_2 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (syntax.RecordUpdate cons_symbol_1_0 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (syntax.TupleSelect definedSymbol_1_0 int_1_1 expression_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expression_1_2 ci_2 in <{_Tuple2!3}> (syntax.TupleSelect definedSymbol_1_0 int_1_1 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.BasicExpr _x_1_0 -> <{_Tuple2!3}> _x_1 ci_2) (syntax.MatchExpr symb_1_0 expression_1_1 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expression_1_1 ci_2 in <{_Tuple2!3}> (syntax.MatchExpr symb_1_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (syntax.IsConstructor expr_1_0 cons_symbol_1_1 cons_arity_1_2 global_type_index_1_3 case_ident_1_4 position_1_5 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expr_1_0 ci_2 in <{_Tuple2!3}> (syntax.IsConstructor (select _x_2_0::_Tuple2 0) cons_symbol_1_1 cons_arity_1_2 global_type_index_1_3 case_ident_1_4 position_1_5) (select _x_2_0::_Tuple2 1)) (syntax.AnyCodeExpr _x_1_0 _x_1_1 _x_1_2 -> <{_Tuple2!3}> _x_1 ci_2) (syntax.ABCCodeExpr _x_1_0 _x_1_1 -> <{_Tuple2!3}> _x_1 ci_2) (syntax.DynamicExpr dyno_1_0 -> convertDynamics.convertDynamic cinp_0 dyno_1_0 ci_2) (syntax.EE -> <{_Tuple2!3}> syntax.EE ci_2) (syntax.NoBind _x_1_0 -> <{_Tuple2!3}> _x_1 ci_2) (syntax.DictionariesFunction dictionaries_1_0 expr_1_1 expr_type_1_2 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_0 expr_1_1 ci_2 in <{_Tuple2!3}> (syntax.DictionariesFunction dictionaries_1_0 (select _x_2_0::_Tuple2 0) expr_type_1_2) (select _x_2_0::_Tuple2 1)) 
<{convertDynamics._if;372;15_186}> !_x_0::B ap_expr2_1 cinp_2 ci2_3 ap_vars_4 = case _x_0 (True -> _Tuple3 ap_expr2_1 (select cinp_2::convertDynamics._ConversionInput 1) ci2_3) (_ -> convertDynamics.add_global_type_pattern_vars_and_let_39 ap_vars_4 (select cinp_2::convertDynamics._ConversionInput 1) ap_expr2_1 ci2_3)
convertDynamics._f185_185::B !_x_0::B ci2_1 ci_type_var_count_2::I = case _x_0 (True -> <{StdInt.==_16}> (select ci2_1::convertDynamics._ConversionState 5) ci_type_var_count_2) (_ -> False)
<{convertDynamics._c;398;13_184}> !_x_0 = case _x_0 (_Tuple2 _x_1_0 ci_1_1 -> case _x_1_0 (general.Yes matches_2_0 -> _Tuple2 matches_2_0 ci_1_1) ) (_ -> StdMisc.abort "where are those converted dynamics?")
<{convertDynamics._c;332;11_183}> !case_guards_0 !cinp_1 case_default_2 !case_expr_3 !ci_4 !kees_5 = case case_guards_0 (syntax.AlgebraicPatterns type_1_0 alts_1_1 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_1 case_expr_3 ci_4, _x_2_1 = convertDynamics.convertDynamics_134 cinp_1 case_default_2 (select _x_2_0::_Tuple2 1), _x_2_2 = convertDynamics.convertDynamicsAlgebraicPatternsWithContexts cinp_1 alts_1_1 (select _x_2_1::_Tuple2 1) in <{_Tuple2!3}> (update (update kees_5::syntax._Case [0:select _x_2_0::_Tuple2 0,2:select _x_2_1::_Tuple2 0])::syntax._Case [1:syntax.AlgebraicPatterns type_1_0 (select _x_2_2::_Tuple2 0)]) (select _x_2_2::_Tuple2 1)) (syntax.DynamicPatterns alts_1_0 -> let _x_2_0 = convertDynamics.convertDynamics_54 cinp_1 case_expr_3 ci_4, _x_2_1 = convertDynamics.convertDynamics_134 cinp_1 case_default_2 (select _x_2_0::_Tuple2 1) in convertDynamics.convertDynamicCase cinp_1 (update kees_5::syntax._Case [0:select _x_2_0::_Tuple2 0,2:select _x_2_1::_Tuple2 0]) (select _x_2_1::_Tuple2 1)) (_ -> let _x_1_0 = convertDynamics.convertDynamics_54 cinp_1 case_expr_3 ci_4, _x_1_1 = convertDynamics.convertDynamics_134 cinp_1 case_default_2 (select _x_1_0::_Tuple2 1), _x_1_2 = convertDynamics.convertDynamics_58 cinp_1 case_guards_0 (select _x_1_1::_Tuple2 1) in <{_Tuple2!3}> (update (update kees_5::syntax._Case [0:select _x_1_0::_Tuple2 0,2:select _x_1_1::_Tuple2 0])::syntax._Case [1:select _x_1_2::_Tuple2 0]) (select _x_1_2::_Tuple2 1))
<{convertDynamics._c;258;13_182}> !_x_0 var_1 = case _x_0 (_Tuple2 _x_1_0 ci_1_1 -> case _x_1_0 (syntax.VI_DynamicValueAlias value_var_2_0 -> <{_Tuple2!3}> (syntax.Var value_var_2_0) ci_1_1) (_ -> <{_Tuple2!3}> (syntax.Var var_1) ci_1_1)) 
convertDynamics.convertDynamics_51 !cinp_0 !body_1 !ci_2 = case cinp_0 (convertDynamics._ConversionInput cinp_dynamic_representation_1_0 cinp_subst_var_1_1 -> case body_1 (syntax._TransformedBody tb_args_2_0 tb_rhs_2_1 -> case ci_2 (convertDynamics._ConversionState ci_predef_symb_3_0 ci_var_heap_3_1 ci_expr_heap_3_2 ci_new_variables_3_3 ci_type_pattern_var_count_3_4 ci_type_var_count_3_5 ci_subst_var_used_3_6 -> let !has_global_type_pattern_var_4_0::B = convertDynamics.global_type_pattern_in_free_vars tb_args_2_0 (select ci_4_2::convertDynamics._ConversionState 1), _x_4_1 = convertDynamics.convertDynamics_54 cinp_0 tb_rhs_2_1 (update ci_2::convertDynamics._ConversionState [1:ci_var_heap_3_1]), ci_4_2 = select _x_4_1::_Tuple2 1, ci_4_3 = update ci_4_2::convertDynamics._ConversionState [6:convertDynamics._f187_187 (select ci_4_2::convertDynamics._ConversionState 6) has_global_type_pattern_var_4_0] in case (StdBool.not (select ci_4_3::convertDynamics._ConversionState 6)) (True -> <{_Tuple2!3}> (update body_1::syntax._TransformedBody [1:select _x_4_1::_Tuple2 0]) ci_4_3) (False -> let _x_6_0 = convertDynamics.make_initial_unification_environment_expr_45 ci_4_3, _x_6_1 = convertDynamics.bind_global_type_pattern_vars tb_args_2_0 (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1), _x_6_2 = convertDynamics.share_init_subst cinp_subst_var_1_1 (select _x_4_1::_Tuple2 0) (select _x_6_1::_Tuple2 0) (select _x_6_1::_Tuple2 1) in <{_Tuple2!3}> (update body_1::syntax._TransformedBody [1:select _x_6_2::_Tuple2 0]) (select _x_6_2::_Tuple2 1)) ) ) ) 
convertDynamics._f187_187::B !_x_0::B has_global_type_pattern_var_1::B = case _x_0 (True -> True) (_ -> has_global_type_pattern_var_1)
convertDynamics.convertDynamics_50 !cinp_0 !_x_1 !ci_2 = case _x_1 (syntax.TransformedBody body_1_0 -> let _x_2_0 = convertDynamics.convertDynamics_51 cinp_0 body_1_0 ci_2 in <{_Tuple2!3}> (syntax.TransformedBody (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) 
convertDynamics.convert_function_35 group_nr_0 dynamic_representation_1 !fun_2::I !cds_3 = case cds_3 (convertDynamics._ConvertDynamicsState cds_fun_defs_1_0 cds_predef_symb_1_1 cds_var_heap_1_2 cds_expr_heap_1_3 -> let _x_2_0 = convertDynamics.uselect_96 cds_fun_defs_1_0 fun_2, fun_def_2_1 = select _x_2_0::_Tuple2 0, fun_info_2_2 = select fun_def_2_1::syntax._FunDef 8 in case (case (<{StdInt.==_16}> (StdInt.bitand (select fun_info_2_2::syntax._FunInfo 6) 256) 0) (True -> StdList.isEmpty (select fun_info_2_2::syntax._FunInfo 5)) (False -> False) ) (True -> update cds_3::convertDynamics._ConvertDynamicsState [0:select _x_2_0::_Tuple2 1]) (False -> let _x_4_0 = convertDynamics.newVariable "unify_subst" syntax.VI_Empty (convertDynamics._ConversionState (select cds_3::convertDynamics._ConvertDynamicsState 1) (select cds_3::convertDynamics._ConvertDynamicsState 2) (select cds_3::convertDynamics._ConvertDynamicsState 3) _predefined._Nil 0 0 False), _x_4_1 = convertDynamics.convertDynamics_50 (convertDynamics._ConversionInput dynamic_representation_1 (select _x_4_0::_Tuple2 0)) (select fun_def_2_1::syntax._FunDef 3) (select _x_4_0::_Tuple2 1), ci_4_2 = select _x_4_1::_Tuple2 1 in convertDynamics._ConvertDynamicsState (convertDynamics.update_95 (select _x_2_0::_Tuple2 1) fun_2 (update fun_def_2_1::syntax._FunDef [3:select _x_4_1::_Tuple2 0,8:update fun_info_2_2::syntax._FunInfo [4:<{StdList.++}> (select ci_4_2::convertDynamics._ConversionState 3) (select fun_info_2_2::syntax._FunInfo 4)]])) (select ci_4_2::convertDynamics._ConversionState 0) (select ci_4_2::convertDynamics._ConversionState 1) (select ci_4_2::convertDynamics._ConversionState 2)) ) 
convertDynamics.convert_functions_34 !_x_0 group_nr_1 dynamic_representation_2 !cds_3 = case _x_0 (checksupport.ComponentMember member_1_0 members_1_1 -> convertDynamics.convert_functions_34 members_1_1 group_nr_1 dynamic_representation_2 (convertDynamics.convert_function_35 group_nr_1 dynamic_representation_2 member_1_0 cds_3)) (checksupport.NoComponentMembers -> cds_3) 
convertDynamics.convert_groups_33 !_vArray_0 !group_nr_1::I groups_2 dynamic_representation_3 cds_4 = case (<{StdInt.==_16}> group_nr_1 (select _vArray_0::<{_SystemArray.Array;}> 4 groups_2)) (True -> _Tuple2 groups_2 cds_4) (False -> let _x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 groups_2 group_nr_1 in convertDynamics.convert_groups_33 _vArray_0 (<{StdInt.+_6}> group_nr_1 StdInt.one_11) (select _x_2_0::_Tuple2 1) dynamic_representation_3 (convertDynamics.convert_functions_34 (select (select _x_2_0::_Tuple2 0)::checksupport._Component 0) group_nr_1 dynamic_representation_3 cds_4)) 
<{convertDynamics.cu;66;38_29}> !_vArray_0 !_vone_1 !<{_v+_2}> c_l_i_3 !g_i_4::I !g_s_5::I g_a_6 = <{convertDynamics.g_c1;66;62_189}> (StdBool.not (<{StdInt.<_17}> g_s_5 g_i_4)) g_a_6 g_i_4 _vArray_0 _vone_1 <{_v+_2}> c_l_i_3 g_s_5
<{convertDynamics.g_c1;66;62_189}> !_x_0::B g_a_1 g_i_2::I _vArray_3 _vone_4 <{_v+_5}> c_l_i_6 g_s_7::I = case _x_0 (True -> <{convertDynamics.g_c2;66;62_188}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 _vone_4 <{_v+_5}> c_l_i_6 g_i_2 g_s_7 g_a_1) (_ -> c_l_i_6)
<{convertDynamics.g_c2;66;62_188}> !_x_0 !_vArray_1 !_vone_2 !<{_v+_3}> c_l_i_4 !g_i_5::I !g_s_6::I g_a_7 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule _x_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> case _x_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> <{convertDynamics.cu;66;38_29}> _vArray_1 _vone_2 <{_v+_3}> (select <{_v+_3}>::<{StdOverloaded.+;}> 0 c_l_i_4 (select _vone_2::<{StdOverloaded.one;}> 0)) (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_1_1) ) ) (_ -> <{convertDynamics.cu;66;38_29}> _vArray_1 _vone_2 <{_v+_3}> c_l_i_4 (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_7)
<{convertDynamics.cu;66;38_28}> !_vArray_0 !_vArray_1 c_a_2 c_i_3::I !g_i_4::I !g_s_5::I g_a_6 = <{convertDynamics.g_c1;66;62_191}> (StdBool.not (<{StdInt.<_17}> g_s_5 g_i_4)) g_a_6 g_i_4 _vArray_0 _vArray_1 c_a_2 c_i_3 g_s_5
<{convertDynamics.g_c1;66;62_191}> !_x_0::B g_a_1 g_i_2::I _vArray_3 _vArray_4 c_a_5 c_i_6::I g_s_7::I = case _x_0 (True -> <{convertDynamics.g_c2;66;62_190}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 _vArray_4 c_a_5 c_i_6 g_i_2 g_s_7 g_a_1) (_ -> c_a_5)
<{convertDynamics.g_c2;66;62_190}> !_x_0 !_vArray_1 !_vArray_2 c_a_3 c_i_4::I !g_i_5::I !g_s_6::I g_a_7 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule _x_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> case _x_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> <{convertDynamics.cu;66;38_28}> _vArray_1 _vArray_2 (select _vArray_2::<{_SystemArray.Array;}> 5 c_a_3 c_i_4 id_name_3_0) (<{StdInt.+_6}> c_i_4 StdInt.one_11) (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_1_1) ) ) (_ -> <{convertDynamics.cu;66;38_28}> _vArray_1 _vArray_2 c_a_3 c_i_4 (<{StdInt.+_6}> g_i_5 StdInt.one_11) g_s_6 g_a_7)
convertDynamics.f_30 !write_type_info_state_0 = case write_type_info_state_0 (type_io._WriteTypeInfoState wtis_n_type_vars_1_0 wtis_common_defs_1_1 wtis_type_defs_1_2 wtis_type_heaps_1_3 wtis_var_heap_1_4 wtis_main_dcl_module_n_1_5 wtis_icl_generic_defs_1_6 -> _Tuple3 wtis_type_heaps_1_3 wtis_type_defs_1_2 wtis_var_heap_1_4) 
<{convertDynamics.cu;66;38_140}>::I !_vArray_0 !<{_v+_1}> c_l_i_2::I !g_i_3::I !g_s_4::I g_a_5 = <{convertDynamics.g_c1;66;62_193}> (StdBool.not (<{StdInt.<_17}> g_s_4 g_i_3)) g_a_5 g_i_3 _vArray_0 <{_v+_1}> c_l_i_2 g_s_4
<{convertDynamics.g_c1;66;62_193}>::I !_x_0::B g_a_1 g_i_2::I _vArray_3 <{_v+_4}> c_l_i_5::I g_s_6::I = case _x_0 (True -> <{convertDynamics.g_c2;66;62_192}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 <{_v+_4}> c_l_i_5 g_i_2 g_s_6 g_a_1) (_ -> c_l_i_5)
<{convertDynamics.g_c2;66;62_192}>::I !_x_0 !_vArray_1 !<{_v+_2}> c_l_i_3::I !g_i_4::I !g_s_5::I g_a_6 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule _x_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> case _x_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> <{convertDynamics.cu;66;38_140}> _vArray_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 StdInt.one_11) (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_1_1) ) ) (_ -> <{convertDynamics.cu;66;38_140}> _vArray_1 <{_v+_2}> c_l_i_3 (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_6)
<{convertDynamics.cu;66;38_141}> !_vArray_0 !c_a_1 c_i_2::I !g_i_3::I !g_s_4::I g_a_5 = <{convertDynamics.g_c1;66;62_195}> (StdBool.not (<{StdInt.<_17}> g_s_4 g_i_3)) g_a_5 g_i_3 _vArray_0 c_a_1 c_i_2 g_s_4
<{convertDynamics.g_c1;66;62_195}> !_x_0::B g_a_1 g_i_2::I _vArray_3 !c_a_4 c_i_5::I g_s_6::I = case _x_0 (True -> <{convertDynamics.g_c2;66;62_194}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 c_a_4 c_i_5 g_i_2 g_s_6 g_a_1) (_ -> c_a_4)
<{convertDynamics.g_c2;66;62_194}> !_x_0 !_vArray_1 !c_a_2 !c_i_3::I !g_i_4::I !g_s_5::I g_a_6 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule _x_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> case _x_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> <{convertDynamics.cu;66;38_141}> _vArray_1 (_SystemArray.update_45 c_a_2 c_i_3 id_name_3_0) (<{StdInt.+_6}> c_i_3 StdInt.one_11) (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_1_1) ) ) (_ -> <{convertDynamics.cu;66;38_141}> _vArray_1 c_a_2 c_i_3 (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_6)
<{convertDynamics.cu;66;38_142}>::I !_vArray_0 !c_l_i_1::I !g_i_2::I !g_s_3::I g_a_4 = <{convertDynamics.g_c1;66;62_197}> (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) g_a_4 g_i_2 _vArray_0 c_l_i_1 g_s_3
<{convertDynamics.g_c1;66;62_197}>::I !_x_0::B g_a_1 g_i_2::I _vArray_3 !c_l_i_4::I g_s_5::I = case _x_0 (True -> <{convertDynamics.g_c2;66;62_196}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 c_l_i_4 g_i_2 g_s_5 g_a_1) (_ -> c_l_i_4)
<{convertDynamics.g_c2;66;62_196}>::I !_x_0 !_vArray_1 !c_l_i_2::I !g_i_3::I !g_s_4::I g_a_5 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule _x_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> case _x_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> <{convertDynamics.cu;66;38_142}> _vArray_1 (<{StdInt.+_6}> c_l_i_2 StdInt.one_11) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_1_1) ) ) (_ -> <{convertDynamics.cu;66;38_142}> _vArray_1 c_l_i_2 (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_5)
convertDynamics.write_tcl_file !_vArray_0 !_vWriteType_1 !main_dcl_module_n_2::I dcl_mods_3 directly_imported_dcl_modules_4 !common_defs_5 !icl_common_6 !n_types_with_type_functions_7::I !n_constructors_with_type_functions_8::I !tcl_file_9 !type_heaps_10 predefined_symbols_11 !imported_types_12 !var_heap_13 = let !_x_1_0 = select _vArray_0::<{_SystemArray.Array;}> 6 dcl_mods_3 main_dcl_module_n_2, !_x_1_1 = type_io.write_type_info_of_types_and_constructors icl_common_6 n_types_with_type_functions_7 n_constructors_with_type_functions_8 tcl_file_9 (type_io._WriteTypeInfoState 0 common_defs_5 imported_types_12 type_heaps_10 var_heap_13 main_dcl_module_n_2 (select icl_common_6::syntax._CommonDefs 6)), !_x_1_2 = select _vWriteType_1::<{type_io.WriteTypeInfo;}> 0 directly_imported_dcl_modules_4 (select _x_1_1::_Tuple2 0) (select _x_1_1::_Tuple2 1), !_x_1_3 = type_io.write_type_info_3 (<{_SystemArray.Array;}> _SystemArray._createArray_40 _SystemArray.createArray_41 _SystemArray.replace_42 _SystemArray.select_43 _SystemArray.size_44 _SystemArray.update_45 _SystemArray.uselect_46 _SystemArray.usize_47) (<{type_io.WriteTypeInfo;}> (type_io.write_type_info_3 (<{_SystemArray.Array;}> _SystemArray._createArray_16 _SystemArray.createArray_17 _SystemArray.replace_18 _SystemArray.select_19 _SystemArray.size_20 _SystemArray.update_21 _SystemArray.uselect_22 _SystemArray.usize_23) (<{type_io.WriteTypeInfo;}> type_io.write_type_info_1))) (<{convertDynamics.cu;66;38_141}> _vArray_0 (_SystemArray._createArray_40 (<{convertDynamics.cu;66;38_142}> _vArray_0 0 0 (<{StdInt.-_7}> (select _x_1_9::_Tuple2 0) 1) (select _x_1_9::_Tuple2 1))) 0 0 (<{StdInt.-_7}> (select _x_1_10::_Tuple2 0) 1) (select _x_1_10::_Tuple2 1)) (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1), !tcl_file_1_4 = StdFile.fwritei (convertDynamics.size_78 (select (select main_dcl_module_1_7::syntax._DclModule 7)::syntax._CommonDefs 0)) (select _x_1_3::_Tuple2 0), !tcl_file_1_5 = StdFile.fwritei (convertDynamics.size_86 (select (select main_dcl_module_1_7::syntax._DclModule 7)::syntax._CommonDefs 1)) tcl_file_1_4, !_x_1_6 = convertDynamics.f_30 (select _x_1_3::_Tuple2 1), main_dcl_module_1_7 = select _x_1_0::_Tuple2 0, dcl_mods_1_8 = select _x_1_0::_Tuple2 1, _x_1_9 = select _vArray_0::<{_SystemArray.Array;}> 7 dcl_mods_1_8, _x_1_10 = select _vArray_0::<{_SystemArray.Array;}> 7 dcl_mods_1_8 in _Tuple6 True tcl_file_1_5 (select _x_1_6::_Tuple3 0) predefined_symbols_11 (select _x_1_6::_Tuple3 1) (select _x_1_6::_Tuple3 2)
convertDynamics.create_dynamic_and_selector_idents_143 !_vArray_0 common_defs_1 !predefined_symbols_2 = case (<{StdInt.==_16}> (select (convertDynamics.select_101 predefined_symbols_2 164)::predef._PredefinedSymbol 0) -1) (True -> _Tuple2 (convertDynamics._DynamicRepresentation StdMisc.undef StdMisc.undef StdMisc.undef StdMisc.undef) predefined_symbols_2) (False -> let _x_2_0 = convertDynamics.uselect_104 predefined_symbols_2 165, _x_2_1::I = select _x_2_0::_Tuple2 0, pds_module1_2_2 = select _x_2_1::predef._PredefinedSymbol 0, pds_def1_2_3 = select _x_2_1::predef._PredefinedSymbol 1, rt_constructor_2_4 = select (select (select (convertDynamics.select_77 (select (select _vArray_0::<{_SystemArray.Array;}> 3 common_defs_1 pds_module1_2_2)::syntax._CommonDefs 0) pds_def1_2_3)::syntax._TypeDef 5)::_Tuple1 0)::syntax._RecordType 0, _x_2_5::I = convertDynamics.uselect_104 (select _x_2_0::_Tuple2 1) 247, _x_2_6::I = select _x_2_5::_Tuple2 0, pds_module2_2_7 = select _x_2_6::predef._PredefinedSymbol 0, rt_constructor_2_8 = select (select (select (convertDynamics.select_77 (select (select _vArray_0::<{_SystemArray.Array;}> 3 common_defs_1 pds_module2_2_7)::syntax._CommonDefs 0) (select _x_2_6::predef._PredefinedSymbol 1))::syntax._TypeDef 5)::_Tuple1 0)::syntax._RecordType 0 in _Tuple2 (convertDynamics._DynamicRepresentation (syntax._SymbIdent (select rt_constructor_2_4::syntax._DefinedSymbol 0) (syntax.SK_Constructor (syntax._Global (select rt_constructor_2_4::syntax._DefinedSymbol 2) pds_module1_2_2))) (syntax._GlobalIndex pds_module1_2_2 pds_def1_2_3) (syntax._Global rt_constructor_2_4 pds_module1_2_2) (syntax._SymbIdent (select rt_constructor_2_8::syntax._DefinedSymbol 0) (syntax.SK_Constructor (syntax._Global (select rt_constructor_2_8::syntax._DefinedSymbol 2) pds_module2_2_7)))) (select _x_2_5::_Tuple2 1)) 
<{convertDynamics.cu;91;39_144}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_i_3::I !g_s_4::I g_a_5 = <{convertDynamics.g_c1;91;58_199}> (StdBool.not (<{StdInt.<_17}> g_s_4 g_i_3)) g_a_5 g_i_3 _vone_0 <{_v+_1}> c_l_i_2 g_s_4
<{convertDynamics.g_c1;91;58_199}> !_x_0::B g_a_1 g_i_2::I _vone_3 <{_v+_4}> c_l_i_5 g_s_6::I = case _x_0 (True -> <{convertDynamics.g_c2;91;58_198}> (convertDynamics.uselect_112 g_a_1 g_i_2) _vone_3 <{_v+_4}> c_l_i_5 g_i_2 g_s_6 g_a_1) (_ -> c_l_i_5)
<{convertDynamics.g_c2;91;58_198}> !_x_0 !_vone_1 !<{_v+_2}> c_l_i_3 !g_i_4::I !g_s_5::I g_a_6 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._CommonDefs com_type_defs_2_0 com_cons_defs_2_1 com_selector_defs_2_2 com_class_defs_2_3 com_member_defs_2_4 com_instance_defs_2_5 com_generic_defs_2_6 com_gencase_defs_2_7 -> <{convertDynamics.cu;91;39_144}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_1_1) ) (_ -> <{convertDynamics.cu;91;39_144}> _vone_1 <{_v+_2}> c_l_i_3 (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_6)
<{convertDynamics.cu;91;39_145}> !_vArray_0 c_a_1 c_i_2::I !g_i_3::I !g_s_4::I g_a_5 = <{convertDynamics.g_c1;91;58_201}> (StdBool.not (<{StdInt.<_17}> g_s_4 g_i_3)) g_a_5 g_i_3 _vArray_0 c_a_1 c_i_2 g_s_4
<{convertDynamics.g_c1;91;58_201}> !_x_0::B g_a_1 g_i_2::I _vArray_3 c_a_4 c_i_5::I g_s_6::I = case _x_0 (True -> <{convertDynamics.g_c2;91;58_200}> (convertDynamics.uselect_112 g_a_1 g_i_2) _vArray_3 c_a_4 c_i_5 g_i_2 g_s_6 g_a_1) (_ -> c_a_4)
<{convertDynamics.g_c2;91;58_200}> !_x_0 !_vArray_1 c_a_2 c_i_3::I !g_i_4::I !g_s_5::I g_a_6 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._CommonDefs com_type_defs_2_0 com_cons_defs_2_1 com_selector_defs_2_2 com_class_defs_2_3 com_member_defs_2_4 com_instance_defs_2_5 com_generic_defs_2_6 com_gencase_defs_2_7 -> <{convertDynamics.cu;91;39_145}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 com_type_defs_2_0) (<{StdInt.+_6}> c_i_3 StdInt.one_11) (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_1_1) ) (_ -> <{convertDynamics.cu;91;39_145}> _vArray_1 c_a_2 c_i_3 (<{StdInt.+_6}> g_i_4 StdInt.one_11) g_s_5 g_a_6)
convertDynamics.convert_groups_146 !group_nr_0::I !groups_1 dynamic_representation_2 cds_3 = case (<{StdInt.==_16}> group_nr_0 (_SystemArray.size_4 groups_1)) (True -> _Tuple2 groups_1 cds_3) (False -> let _x_2_0 = _SystemArray.uselect_6 groups_1 group_nr_0 in convertDynamics.convert_groups_146 (<{StdInt.+_6}> group_nr_0 StdInt.one_11) (select _x_2_0::_Tuple2 1) dynamic_representation_2 (convertDynamics.convert_functions_34 (select (select _x_2_0::_Tuple2 0)::checksupport._Component 0) group_nr_0 dynamic_representation_2 cds_3)) 
<{convertDynamics.cu;66;38_148}>::I !c_l_i_0::I !g_i_1::I !g_s_2::I g_a_3 = <{convertDynamics.g_c1;66;62_203}> (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) g_a_3 g_i_1 c_l_i_0 g_s_2
<{convertDynamics.g_c1;66;62_203}>::I !_x_0::B g_a_1 g_i_2::I !c_l_i_3::I g_s_4::I = case _x_0 (True -> <{convertDynamics.g_c2;66;62_202}> (convertDynamics.uselect_120 g_a_1 g_i_2) c_l_i_3 g_i_2 g_s_4 g_a_1) (_ -> c_l_i_3)
<{convertDynamics.g_c2;66;62_202}>::I !_x_0 !c_l_i_1::I !g_i_2::I !g_s_3::I g_a_4 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule _x_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> case _x_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> <{convertDynamics.cu;66;38_148}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_1) ) ) (_ -> <{convertDynamics.cu;66;38_148}> c_l_i_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_4)
<{convertDynamics.cu;66;38_149}> !c_a_0 c_i_1::I !g_i_2::I !g_s_3::I g_a_4 = <{convertDynamics.g_c1;66;62_205}> (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) g_a_4 g_i_2 c_a_0 c_i_1 g_s_3
<{convertDynamics.g_c1;66;62_205}> !_x_0::B g_a_1 g_i_2::I !c_a_3 c_i_4::I g_s_5::I = case _x_0 (True -> <{convertDynamics.g_c2;66;62_204}> (convertDynamics.uselect_120 g_a_1 g_i_2) c_a_3 c_i_4 g_i_2 g_s_5 g_a_1) (_ -> c_a_3)
<{convertDynamics.g_c2;66;62_204}> !_x_0 !c_a_1 !c_i_2::I !g_i_3::I !g_s_4::I g_a_5 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._DclModule _x_2_0 dcl_functions_2_1 dcl_instances_2_2 dcl_macros_2_3 dcl_specials_2_4 dcl_gencases_2_5 dcl_type_funs_2_6 dcl_common_2_7 dcl_sizes_2_8 dcl_dictionary_info_2_9 dcl_declared_2_10 dcl_has_macro_conversions_2_11 dcl_module_kind_2_12 dcl_modification_time_2_13 dcl_imported_module_numbers_2_14 -> case _x_2_0 (syntax._Ident id_name_3_0 id_info_3_1 -> <{convertDynamics.cu;66;38_149}> (_SystemArray.update_45 c_a_1 c_i_2 id_name_3_0) (<{StdInt.+_6}> c_i_2 StdInt.one_11) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_1_1) ) ) (_ -> <{convertDynamics.cu;66;38_149}> c_a_1 c_i_2 (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_5)
convertDynamics.write_tcl_file_147 !_vWriteType_0 !main_dcl_module_n_1::I !dcl_mods_2 directly_imported_dcl_modules_3 !common_defs_4 !icl_common_5 !n_types_with_type_functions_6::I !n_constructors_with_type_functions_7::I !tcl_file_8 !type_heaps_9 predefined_symbols_10 !imported_types_11 !var_heap_12 = let !_x_1_0 = convertDynamics.uselect_120 dcl_mods_2 main_dcl_module_n_1, !_x_1_1 = type_io.write_type_info_of_types_and_constructors icl_common_5 n_types_with_type_functions_6 n_constructors_with_type_functions_7 tcl_file_8 (type_io._WriteTypeInfoState 0 common_defs_4 imported_types_11 type_heaps_9 var_heap_12 main_dcl_module_n_1 (select icl_common_5::syntax._CommonDefs 6)), !_x_1_2 = select _vWriteType_0::<{type_io.WriteTypeInfo;}> 0 directly_imported_dcl_modules_3 (select _x_1_1::_Tuple2 0) (select _x_1_1::_Tuple2 1), !_x_1_3 = type_io.write_type_info_3 (<{_SystemArray.Array;}> _SystemArray._createArray_40 _SystemArray.createArray_41 _SystemArray.replace_42 _SystemArray.select_43 _SystemArray.size_44 _SystemArray.update_45 _SystemArray.uselect_46 _SystemArray.usize_47) (<{type_io.WriteTypeInfo;}> (type_io.write_type_info_3 (<{_SystemArray.Array;}> _SystemArray._createArray_16 _SystemArray.createArray_17 _SystemArray.replace_18 _SystemArray.select_19 _SystemArray.size_20 _SystemArray.update_21 _SystemArray.uselect_22 _SystemArray.usize_23) (<{type_io.WriteTypeInfo;}> type_io.write_type_info_1))) (<{convertDynamics.cu;66;38_149}> (_SystemArray._createArray_40 (<{convertDynamics.cu;66;38_148}> 0 0 (<{StdInt.-_7}> (select _x_1_9::_Tuple2 0) 1) (select _x_1_9::_Tuple2 1))) 0 0 (<{StdInt.-_7}> (select _x_1_10::_Tuple2 0) 1) (select _x_1_10::_Tuple2 1)) (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1), !tcl_file_1_4 = StdFile.fwritei (convertDynamics.size_78 (select (select main_dcl_module_1_7::syntax._DclModule 7)::syntax._CommonDefs 0)) (select _x_1_3::_Tuple2 0), !tcl_file_1_5 = StdFile.fwritei (convertDynamics.size_86 (select (select main_dcl_module_1_7::syntax._DclModule 7)::syntax._CommonDefs 1)) tcl_file_1_4, !_x_1_6 = convertDynamics.f_30 (select _x_1_3::_Tuple2 1), main_dcl_module_1_7 = select _x_1_0::_Tuple2 0, dcl_mods_1_8 = select _x_1_0::_Tuple2 1, _x_1_9 = convertDynamics.usize_121 dcl_mods_1_8, _x_1_10 = convertDynamics.usize_121 dcl_mods_1_8 in _Tuple6 True tcl_file_1_5 (select _x_1_6::_Tuple3 0) predefined_symbols_10 (select _x_1_6::_Tuple3 1) (select _x_1_6::_Tuple3 2)
convertDynamics.create_dynamic_and_selector_idents_150 common_defs_0 !predefined_symbols_1 = case (<{StdInt.==_16}> (select (convertDynamics.select_101 predefined_symbols_1 164)::predef._PredefinedSymbol 0) -1) (True -> _Tuple2 (convertDynamics._DynamicRepresentation StdMisc.undef StdMisc.undef StdMisc.undef StdMisc.undef) predefined_symbols_1) (False -> let _x_2_0 = convertDynamics.uselect_104 predefined_symbols_1 165, _x_2_1::I = select _x_2_0::_Tuple2 0, pds_module1_2_2 = select _x_2_1::predef._PredefinedSymbol 0, pds_def1_2_3 = select _x_2_1::predef._PredefinedSymbol 1, rt_constructor_2_4 = select (select (select (convertDynamics.select_77 (select (convertDynamics.select_109 common_defs_0 pds_module1_2_2)::syntax._CommonDefs 0) pds_def1_2_3)::syntax._TypeDef 5)::_Tuple1 0)::syntax._RecordType 0, _x_2_5::I = convertDynamics.uselect_104 (select _x_2_0::_Tuple2 1) 247, _x_2_6::I = select _x_2_5::_Tuple2 0, pds_module2_2_7 = select _x_2_6::predef._PredefinedSymbol 0, rt_constructor_2_8 = select (select (select (convertDynamics.select_77 (select (convertDynamics.select_109 common_defs_0 pds_module2_2_7)::syntax._CommonDefs 0) (select _x_2_6::predef._PredefinedSymbol 1))::syntax._TypeDef 5)::_Tuple1 0)::syntax._RecordType 0 in _Tuple2 (convertDynamics._DynamicRepresentation (syntax._SymbIdent (select rt_constructor_2_4::syntax._DefinedSymbol 0) (syntax.SK_Constructor (syntax._Global (select rt_constructor_2_4::syntax._DefinedSymbol 2) pds_module1_2_2))) (syntax._GlobalIndex pds_module1_2_2 pds_def1_2_3) (syntax._Global rt_constructor_2_4 pds_module1_2_2) (syntax._SymbIdent (select rt_constructor_2_8::syntax._DefinedSymbol 0) (syntax.SK_Constructor (syntax._Global (select rt_constructor_2_8::syntax._DefinedSymbol 2) pds_module2_2_7)))) (select _x_2_5::_Tuple2 1)) 
<{convertDynamics.cu;91;39_151}>::I !<{_v+_0}> c_l_i_1::I !g_i_2::I !g_s_3::I g_a_4 = <{convertDynamics.g_c1;91;58_207}> (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) g_a_4 g_i_2 <{_v+_0}> c_l_i_1 g_s_3
<{convertDynamics.g_c1;91;58_207}>::I !_x_0::B g_a_1 g_i_2::I <{_v+_3}> c_l_i_4::I g_s_5::I = case _x_0 (True -> <{convertDynamics.g_c2;91;58_206}> (convertDynamics.uselect_112 g_a_1 g_i_2) <{_v+_3}> c_l_i_4 g_i_2 g_s_5 g_a_1) (_ -> c_l_i_4)
<{convertDynamics.g_c2;91;58_206}>::I !_x_0 !<{_v+_1}> c_l_i_2::I !g_i_3::I !g_s_4::I g_a_5 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._CommonDefs com_type_defs_2_0 com_cons_defs_2_1 com_selector_defs_2_2 com_class_defs_2_3 com_member_defs_2_4 com_instance_defs_2_5 com_generic_defs_2_6 com_gencase_defs_2_7 -> <{convertDynamics.cu;91;39_151}> <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_2 StdInt.one_11) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_1_1) ) (_ -> <{convertDynamics.cu;91;39_151}> <{_v+_1}> c_l_i_2 (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_5)
<{convertDynamics.cu;91;39_152}> !c_a_0 c_i_1::I !g_i_2::I !g_s_3::I g_a_4 = <{convertDynamics.g_c1;91;58_209}> (StdBool.not (<{StdInt.<_17}> g_s_3 g_i_2)) g_a_4 g_i_2 c_a_0 c_i_1 g_s_3
<{convertDynamics.g_c1;91;58_209}> !_x_0::B g_a_1 g_i_2::I !c_a_3 c_i_4::I g_s_5::I = case _x_0 (True -> <{convertDynamics.g_c2;91;58_208}> (convertDynamics.uselect_112 g_a_1 g_i_2) c_a_3 c_i_4 g_i_2 g_s_5 g_a_1) (_ -> c_a_3)
<{convertDynamics.g_c2;91;58_208}> !_x_0 !c_a_1 !c_i_2::I !g_i_3::I !g_s_4::I g_a_5 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._CommonDefs com_type_defs_2_0 com_cons_defs_2_1 com_selector_defs_2_2 com_class_defs_2_3 com_member_defs_2_4 com_instance_defs_2_5 com_generic_defs_2_6 com_gencase_defs_2_7 -> <{convertDynamics.cu;91;39_152}> (_SystemArray.update_45 c_a_1 c_i_2 com_type_defs_2_0) (<{StdInt.+_6}> c_i_2 StdInt.one_11) (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_1_1) ) (_ -> <{convertDynamics.cu;91;39_152}> c_a_1 c_i_2 (<{StdInt.+_6}> g_i_3 StdInt.one_11) g_s_4 g_a_5)
convertDynamics.write_tcl_file_153 !main_dcl_module_n_0::I !dcl_mods_1 directly_imported_dcl_modules_2 !common_defs_3 !icl_common_4 !n_types_with_type_functions_5::I !n_constructors_with_type_functions_6::I !tcl_file_7 !type_heaps_8 predefined_symbols_9 !imported_types_10 !var_heap_11 = let !_x_1_0 = convertDynamics.uselect_120 dcl_mods_1 main_dcl_module_n_0, !_x_1_1 = type_io.write_type_info_of_types_and_constructors icl_common_4 n_types_with_type_functions_5 n_constructors_with_type_functions_6 tcl_file_7 (type_io._WriteTypeInfoState 0 common_defs_3 imported_types_10 type_heaps_8 var_heap_11 main_dcl_module_n_0 (select icl_common_4::syntax._CommonDefs 6)), !_x_1_2 = type_io.write_type_info_2 (<{type_io.WriteTypeInfo;}> (type_io.write_type_info_3 (<{_SystemArray.Array;}> _SystemArray._createArray_16 _SystemArray.createArray_17 _SystemArray.replace_18 _SystemArray.select_19 _SystemArray.size_20 _SystemArray.update_21 _SystemArray.uselect_22 _SystemArray.usize_23) (<{type_io.WriteTypeInfo;}> type_io.write_type_info_1))) directly_imported_dcl_modules_2 (select _x_1_1::_Tuple2 0) (select _x_1_1::_Tuple2 1), !_x_1_3 = type_io.write_type_info_3 (<{_SystemArray.Array;}> _SystemArray._createArray_40 _SystemArray.createArray_41 _SystemArray.replace_42 _SystemArray.select_43 _SystemArray.size_44 _SystemArray.update_45 _SystemArray.uselect_46 _SystemArray.usize_47) (<{type_io.WriteTypeInfo;}> (type_io.write_type_info_3 (<{_SystemArray.Array;}> _SystemArray._createArray_16 _SystemArray.createArray_17 _SystemArray.replace_18 _SystemArray.select_19 _SystemArray.size_20 _SystemArray.update_21 _SystemArray.uselect_22 _SystemArray.usize_23) (<{type_io.WriteTypeInfo;}> type_io.write_type_info_1))) (<{convertDynamics.cu;66;38_149}> (_SystemArray._createArray_40 (<{convertDynamics.cu;66;38_148}> 0 0 (<{StdInt.-_7}> (select _x_1_9::_Tuple2 0) 1) (select _x_1_9::_Tuple2 1))) 0 0 (<{StdInt.-_7}> (select _x_1_10::_Tuple2 0) 1) (select _x_1_10::_Tuple2 1)) (select _x_1_2::_Tuple2 0) (select _x_1_2::_Tuple2 1), !tcl_file_1_4 = StdFile.fwritei (convertDynamics.size_78 (select (select main_dcl_module_1_7::syntax._DclModule 7)::syntax._CommonDefs 0)) (select _x_1_3::_Tuple2 0), !tcl_file_1_5 = StdFile.fwritei (convertDynamics.size_86 (select (select main_dcl_module_1_7::syntax._DclModule 7)::syntax._CommonDefs 1)) tcl_file_1_4, !_x_1_6 = convertDynamics.f_30 (select _x_1_3::_Tuple2 1), main_dcl_module_1_7 = select _x_1_0::_Tuple2 0, dcl_mods_1_8 = select _x_1_0::_Tuple2 1, _x_1_9 = convertDynamics.usize_121 dcl_mods_1_8, _x_1_10 = convertDynamics.usize_121 dcl_mods_1_8 in _Tuple6 True tcl_file_1_5 (select _x_1_6::_Tuple3 0) predefined_symbols_9 (select _x_1_6::_Tuple3 1) (select _x_1_6::_Tuple3 2)
<{convertDynamics.cu;91;39_154}>::I !c_l_i_0::I !g_i_1::I !g_s_2::I g_a_3 = <{convertDynamics.g_c1;91;58_211}> (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) g_a_3 g_i_1 c_l_i_0 g_s_2
<{convertDynamics.g_c1;91;58_211}>::I !_x_0::B g_a_1 g_i_2::I !c_l_i_3::I g_s_4::I = case _x_0 (True -> <{convertDynamics.g_c2;91;58_210}> (convertDynamics.uselect_112 g_a_1 g_i_2) c_l_i_3 g_i_2 g_s_4 g_a_1) (_ -> c_l_i_3)
<{convertDynamics.g_c2;91;58_210}>::I !_x_0 !c_l_i_1::I !g_i_2::I !g_s_3::I g_a_4 = case _x_0 (_Tuple2 _x_1_0 g_a_1_1 -> case _x_1_0 (syntax._CommonDefs com_type_defs_2_0 com_cons_defs_2_1 com_selector_defs_2_2 com_class_defs_2_3 com_member_defs_2_4 com_instance_defs_2_5 com_generic_defs_2_6 com_gencase_defs_2_7 -> <{convertDynamics.cu;91;39_154}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_1) ) (_ -> <{convertDynamics.cu;91;39_154}> c_l_i_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_4)
convertDynamics.convertDynamicPatternsIntoUnifyAppls !common_defs_0 !main_dcl_module_n_1::I dcl_mods_2 !icl_mod_3 directly_imported_dcl_modules_4 !n_types_with_type_functions_5::I !n_constructors_with_type_functions_6::I !groups_7 !fun_defs_8 !predefined_symbols_9 !var_heap_10 !type_heaps_11 !expr_heap_12 !tcl_file_13 = let !_x_1_0 = convertDynamics.create_dynamic_and_selector_idents_150 common_defs_0 predefined_symbols_9, _x_1_1 = <{convertDynamics._c;98;11_212}> tcl_file_13 common_defs_0 type_heaps_11 cds_predef_symb_1_7 cds_var_heap_1_6 main_dcl_module_n_1 dcl_mods_2 directly_imported_dcl_modules_4 icl_mod_3 n_types_with_type_functions_5 n_constructors_with_type_functions_6, dynamic_representation_1_2 = select _x_1_0::_Tuple2 0, predefined_symbols_1_3 = select _x_1_0::_Tuple2 1, _x_1_4 = convertDynamics.convert_groups_146 0 groups_7 dynamic_representation_1_2 (convertDynamics._ConvertDynamicsState fun_defs_8 predefined_symbols_1_3 var_heap_10 expr_heap_12), _x_1_5 = select _x_1_4::_Tuple2 1, cds_var_heap_1_6 = select _x_1_5::convertDynamics._ConvertDynamicsState 2, cds_predef_symb_1_7 = select _x_1_5::convertDynamics._ConvertDynamicsState 1 in <{_Tuple8!255}> (select _x_1_1::_Tuple5 3) (select _x_1_4::_Tuple2 0) (select _x_1_5::convertDynamics._ConvertDynamicsState 0) (select _x_1_1::_Tuple5 2) (select _x_1_1::_Tuple5 4) (select _x_1_1::_Tuple5 1) (select _x_1_5::convertDynamics._ConvertDynamicsState 3) (select _x_1_1::_Tuple5 0)
<{convertDynamics._c;98;11_212}> !tcl_file_0 common_defs_1 type_heaps_2 cds_predef_symb_3 cds_var_heap_4 main_dcl_module_n_5::I dcl_mods_6 directly_imported_dcl_modules_7 icl_mod_8 n_types_with_type_functions_9::I n_constructors_with_type_functions_10::I = case tcl_file_0 (general.No -> let _x_2_0 = convertDynamics.usize_113 common_defs_1, _x_2_1 = convertDynamics.usize_113 common_defs_1 in _Tuple5 general.No type_heaps_2 cds_predef_symb_3 (<{convertDynamics.cu;91;39_152}> (_SystemArray._createArray_40 (<{convertDynamics.cu;91;39_154}> 0 0 (<{StdInt.-_7}> (select _x_2_0::_Tuple2 0) 1) (select _x_2_0::_Tuple2 1))) 0 0 (<{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1) (select _x_2_1::_Tuple2 1)) cds_var_heap_4) (general.Yes tcl_file_1_0 -> let _x_2_0 = convertDynamics.usize_113 common_defs_1, _x_2_1 = convertDynamics.usize_113 common_defs_1, imported_types_2_2 = <{convertDynamics.cu;91;39_152}> (_SystemArray._createArray_40 (<{convertDynamics.cu;91;39_154}> 0 0 (<{StdInt.-_7}> (select _x_2_0::_Tuple2 0) 1) (select _x_2_0::_Tuple2 1))) 0 0 (<{StdInt.-_7}> (select _x_2_1::_Tuple2 0) 1) (select _x_2_1::_Tuple2 1), _x_2_3 = convertDynamics.write_tcl_file_153 main_dcl_module_n_5 dcl_mods_6 directly_imported_dcl_modules_7 common_defs_1 (select icl_mod_8::syntax._IclModule 3) n_types_with_type_functions_9 n_constructors_with_type_functions_10 tcl_file_1_0 type_heaps_2 cds_predef_symb_3 imported_types_2_2 cds_var_heap_4 in case (StdBool.not (select _x_2_3::_Tuple6 0)) (True -> StdMisc.abort "convertDynamicPatternsIntoUnifyAppls: error writing tcl file") (False -> _Tuple5 (general.Yes (select _x_2_3::_Tuple6 1)) (select _x_2_3::_Tuple6 2) (select _x_2_3::_Tuple6 3) (select _x_2_3::_Tuple6 4) (select _x_2_3::_Tuple6 5)) ) 
convertDynamics.fatal !function_name_0 !message_1 = StdMisc.abort (<{StdString.+++_11}> "convertDynamics, " (<{StdString.+++_11}> function_name_0 (<{StdString.+++_11}> ": " message_1)))
convertDynamics.freeVarToVar !_x_0 = case _x_0 (syntax._FreeVar fv_def_level_1_0 fv_ident_1_1 fv_info_ptr_1_2 fv_count_1_3 -> syntax._BoundVar fv_ident_1_1 fv_info_ptr_1_2 Heap.nilPtr) 
convertDynamics.typed_let_ptr type_id_0 !ci_1 = case ci_1 (convertDynamics._ConversionState ci_predef_symb_1_0 ci_var_heap_1_1 ci_expr_heap_1_2 ci_new_variables_1_3 ci_type_pattern_var_count_1_4 ci_type_var_count_1_5 ci_subst_var_used_1_6 -> convertDynamics.let_ptr2 (_predefined._Cons (convertDynamics.toAType (syntax.TA type_id_0 _predefined._Nil)) _predefined._Nil) ci_1) 
<{convertDynamics.TD;ConvertDynamicsState}> _x_0::B = _predefined._Nil
<{convertDynamics.TD;ConversionState}> _x_0::B = _predefined._Nil
<{convertDynamics.TD;DynamicRepresentation}> _x_0::B = _predefined._Nil
<{convertDynamics.TD;ConversionInput}> _x_0::B = _predefined._Nil
<{convertDynamics.TD;convertDynamics;}> _x_0::B = _predefined._Nil
<{convertDynamics.TD;position;}> _x_0::B = _predefined._Nil


|| Converted Records
:: convertDynamics._ConvertDynamicsState = {!convertDynamics.cds_fun_defs, !convertDynamics.cds_predef_symb, !convertDynamics.cds_var_heap, !convertDynamics.cds_expr_heap}

:: convertDynamics._ConversionState = {!convertDynamics.ci_predef_symb, !convertDynamics.ci_var_heap, !convertDynamics.ci_expr_heap, !convertDynamics.ci_new_variables, !convertDynamics.ci_type_pattern_var_count::I, !convertDynamics.ci_type_var_count::I, !convertDynamics.ci_subst_var_used::B}

:: convertDynamics._DynamicRepresentation = {convertDynamics.dr_type_ident, convertDynamics.dr_dynamic_type, convertDynamics.dr_dynamic_symbol, convertDynamics.dr_type_code_constructor_symb_ident}

:: convertDynamics._ConversionInput = {!convertDynamics.cinp_dynamic_representation, convertDynamics.cinp_subst_var}

:: <{convertDynamics.convertDynamics;}> = {!convertDynamics.convertDynamics}

:: <{convertDynamics.position;}> = {!convertDynamics.position}

