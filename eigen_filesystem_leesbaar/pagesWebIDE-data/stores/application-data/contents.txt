20170420-162750["Bin",2,"C:\\Users\\Martin\\Documents\\clean-bundle-itasks-windows-x86-latest\\research-internship\\eigen_filesystem_leesbaar\\tempfiles.icl",["implementation module tempfiles","","import Text","","totemp :: String -> String","totemp name = \"temporal__\"+++name","","fromtemp :: String -> String","fromtemp name = replaceSubString \"temporal__\" \"\" name","","totemptxt :: [String] String -> [String]","totemptxt [hd:rest] name = [\"module \"+++name+++\" \\\\\"+++hd:rest]","","fromtemptxt :: [String] String -> [String]","fromtemptxt [hd:rest] name = [(replaceSubString (\"module \"+++name+++\" \\\\\") \"\" hd):rest]",""],["Bin",1,"C:\\Users\\Martin\\Documents\\clean-bundle-itasks-windows-x86-latest\\research-internship\\eigen_filesystem_leesbaar\\settings.icl",["implementation module settings","","import System.FilePath, System.Environment, Text.HTML","import ideConstants, ideUtil, directoryBrowsing, createAndRunExec, projectOptions","-","-","settings :: Shared Settings","settings \t= sharedStore \"settings\" \t{ cpmDirectory\t= \"\"","\t\t\t\t\t\t\t\t\t\t} ","environment :: Shared Environment","environment\t= sharedStore \"evironment\" \t{ environmentName = \"\"","\t\t\t\t\t\t\t\t\t\t, environmentLibs = []","\t\t\t\t\t\t\t\t\t\t}","project :: Shared Project","project \t= sharedStore \"project\" \t{ projectName\t\t= \"\"","\t\t\t\t\t\t\t\t\t\t, projectPath \t\t= \"\"","\t\t\t\t\t\t\t\t\t\t, projectSources\t= [] ","\t\t\t\t\t\t\t\t\t\t}","","","setSettings :: Task ()","setSettings = setSettings` <<@ ApplyLayout frameCompact","where ","\tsetSettings`","\t\t=\t\t\t\taccWorld (getEnvironmentVariable \"CLEAN_HOME\")","\t\t>>- \\mbHome ->  upd (\\cs -> {cs & cpmDirectory = if (cs.cpmDirectory == \"\" && isJust mbHome) (fromJust mbHome) cs.cpmDirectory}) settings ","\t\t>>|\t\t\t\tget settings","\t\t>>- \\curSet ->\tget project","\t\t>>-\t\\project ->\tget recentProjects","\t\t>>- \\recProj -> let isProj \t\t\t= project.projectPath <> \"\" && project.projectName <> \"\"","\t\t\t\t\t\t\tisCPM  \t\t\t= curSet.cpmDirectory <> \"\"","\t\t\t\t\t\t\tprojectPath \t= project.projectPath <\/> project.projectName +++ \".prj\"","\t\t\t\t\t\t\tapplicationPath = curSet.cpmDirectory","\t\t\t\t\t\tin\t(if (not isCPM)  (viewInformation () [] \"Where is cpm.exe ? Should be in Clean home directory...\")","\t\t\t\t\t\t\t(if (not isProj) (viewInformation () [] (\"The location of cpm.exe currently set is: \" +++ curSet.cpmDirectory )","\t\t\t\t\t\t\t\t\t\t\t -||-","\t\t\t\t\t\t\t\t\t\t\t viewInformation () [] \"No Project Set...\")","\t\t\t\t\t   \t\t\t(viewInformation () [] \"Change Settings..\")","\t\t\t\t\t\t\t))","\t\t\t\t\t\t\t>>*\t\t[ OnAction (Action \"Set cpm location\")\t(always \t\t(mbCancel findCPM <<@ ApplyLayout frameCompact))","\t\t\t\t\t\t\t \t\t, OnAction (Action \"Set Project\")\t\t(ifCond isCPM   (mbCancel NewProject <<@ ApplyLayout frameCompact))","\t\t\t\t\t\t\t\t\t, OnAction (Action \"Use Recent Project\")(ifCond (isCPM && recProj <> []) ","\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(mbCancel useRecentProject <<@ ApplyLayout frameCompact))  ","\t\t\t\t\t\t\t\t\t, OnAction (Action \"Project Options\")\t\t(ifCond (isCPM && recProj <> []) ","\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(projectOptionsEditor projectPath applicationPath))  ","\t\t\t\t\t\t\t \t\t]","","\tfindCPM ","\t\t= \t\t\t\t\taskUserForFile cpmFile isCPM ","\t\t>>- \\(path,file) ->\tupd (\\curSet -> {curSet & cpmDirectory  = path}) settings","","\tNewProject  ","\t\t= \t\t\t\t\taskUserForFile \"the Clean .icl main file\" isCleanIcl ","\t\t>>- \\(path,file) -> upd (\\myProj -> { myProj \t& projectPath \t\t= path","\t\t\t\t\t\t\t\t\t\t\t\t\t\t, projectName \t\t= dropExtension file","\t\t\t\t\t\t\t\t\t\t\t\t\t\t, projectSources \t= [path]","\t\t\t\t  \t\t\t\t\t\t\t}) project","\t\t>>|\t\t\t\t\tAddStdEvironment","\t\t>>|\t\t\t\t\tget settings ","\t\t>>- \\curSet ->\t\tget project","\t\t>>- \\myProj ->\t\tcreateProject (curSet.cpmDirectory <\/> cpmFile) myProj.projectPath myProj.projectName","\t\t>>|\t\t\t\t\taddToRecentProjects myProj","","\tAddStdEvironment :: Task ()","\tAddStdEvironment ","\t\t=\t\t\t\t\tget settings","\t\t>>- \\curSet ->  \tfetchDirectories (curSet.cpmDirectory <\/> \"Libraries\") isCleanIclDcl","\t\t>>- \\libs ->\t\tupd (\\cs -> {cs & environmentName = \"MyLibraries\"","\t\t\t\t\t\t\t\t\t\t\t, environmentLibs = [libs]","\t\t\t\t\t\t\t\t\t\t}) environment @! ()","\t\t\t\t\t\t\t\t","\tuseRecentProject :: Task ()","\tuseRecentProject ","\t\t=\t\t\t\tget recentProjects","\t\t>>- \\recent ->\tenterChoice \"Select previous project to open...\" [ChooseFromGrid (\\rec -> rec.projectName)] recent","\t\t>>* \t\t\t[ OnAction (Action \"Use\") (hasValue (\\oldProj -> set oldProj project @! () ))","\t\t\t\t\t\t]\t ",""],["Tip"],["Tip"]],["Tip"]]