20170815-164359{"functionmap":["Bin",4881,["Location","Platform","System.IO",["Just",34],["Just",89],"unsafePerformIO"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]]],["Var","a"],[]],"fe_representation":"unsafePerformIO :: (*World -> *(.a,*World)) -> .a"},["Bin",1800,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"AShapeNormal"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrowShape",[]],[]],"fe_representation":"AShapeNormal :: ArrowShape"},["Bin",934,["Location","Platform","Data.Graphviz",["Just",17],["Just",147],"digraphAtts"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Digraph",[]]],["Type","_List",[["Type","GraphAttribute",[]]]],[]],"fe_representation":"digraphAtts :: !Digraph -> [GraphAttribute]"},["Bin",646,["Location","Platform","Data.Functor",["Just",17],["Just",22],"void"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]]],["Cons","f",[["Type","_Unit",[]]]],[[["Class","Functor"],["Var","f"]]]],"fe_representation":"void :: (f a) -> f () | Functor f"},["Bin",396,["Location","Platform","Control.Monad",["Just",45],["Just",97],"liftM5"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Func",[["Var","d"]],["Func",[["Var","e"]],["Var","f"],[]],[]],[]],[]],[]],["Cons","g",[["Var","a"]]],["Cons","g",[["Var","b"]]],["Cons","g",[["Var","c"]]],["Cons","g",[["Var","d"]]],["Cons","g",[["Var","e"]]]],["Cons","g",[["Var","f"]]],[[["Class","Monad"],["Var","g"]]]],"fe_representation":"liftM5 :: (a -> .(b -> .(c -> .(d -> .(e -> f))))) (g a) (g b) (g c) (g d) (g e) -> g f | Monad g"},["Bin",228,["Location","Generics","GenZip",["Just",5],["Just",9],"gZip"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","b"]],["Var","c"],[]],"fe_generic_vars":["a","b","c"],"fe_representation":"generic gZip a b c :: .a .b -> .c"},["Bin",146,["Location","Dynamics","_SystemDynamic",["Just",64],["Just",616],"TC__Tuple21"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple21",[]],[]],"fe_representation":"TC__Tuple21 :: TC__Tuple21"},["Bin",61,["Location","Dynamics","_SystemDynamic",["Just",48],["Just",600],"TC__Tuple5"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple5",[]],[]],"fe_representation":"TC__Tuple5 :: TC__Tuple5"},["Bin",45,["Location","Dynamics","_SystemDynamic",["Just",26],["Just",563],"_tcc_cons"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TypeCodeConstructor",[]]],["Var","a"],[]],"fe_representation":"._tcc_cons :: TypeCodeConstructor -> a"},["Bin",27,["Location","Dynamics","_SystemDynamic",["Just",6],["Nothing"],"_value"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicTemp",[]]],["Var","a"],[]],"fe_representation":"._value :: DynamicTemp -> a"},["Bin",19,["Location","Dynamics","StdCleanTypes",["Just",24],["Nothing"],"fd_exist"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTFieldDef",[]]],["Type","Int",[]],[]],"fe_representation":".fd_exist :: CTFieldDef -> Int"},["Bin",10,["Location","Dynamics","StdCleanTypes",["Just",6],["Nothing"],"CTSynType"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CTTypeRHS",[]],[]],"fe_representation":"CTSynType :: CTTypeRHS"},["Bin",3,["Location","Dynamics","StdCleanTypes",["Just",6],["Nothing"],"CTPredefined"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CTTypeRHS",[]],[]],"fe_representation":"CTPredefined :: CTTypeRHS"},["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",6],["Nothing"],"CTAlgType"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","CTConsDef",[]]]]],["Type","CTTypeRHS",[]],[]],"fe_representation":"CTAlgType :: [CTConsDef] -> CTTypeRHS"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",6],["Nothing"],"CTRecordType"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","CTFieldDef",[]]]]],["Type","CTTypeRHS",[]],[]],"fe_representation":"CTRecordType :: [CTFieldDef] -> CTTypeRHS"},["Tip"],["Tip"]]],["Bin",6,["Location","Dynamics","StdCleanTypes",["Just",19],["Nothing"],"CTFixLeft"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CTFixity",[]],[]],"fe_representation":"CTFixLeft :: CTFixity"},["Bin",3,["Location","Dynamics","StdCleanTypes",["Just",12],["Nothing"],"cd_cons"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTConsDef",[]]],["Type","CTCons",[]],[]],"fe_representation":".cd_cons :: CTConsDef -> CTCons"},["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",12],["Nothing"],"cd_args"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTConsDef",[]]],["Type","_List",[["Type","TypeCode",[]]]],[]],"fe_representation":".cd_args :: CTConsDef -> [TypeCode]"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",12],["Nothing"],"cd_exist"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTConsDef",[]]],["Type","Int",[]],[]],"fe_representation":".cd_exist :: CTConsDef -> Int"},["Tip"],["Tip"]]],["Bin",2,["Location","Dynamics","StdCleanTypes",["Just",19],["Nothing"],"CTFixRight"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CTFixity",[]],[]],"fe_representation":"CTFixRight :: CTFixity"},["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",19],["Nothing"],"CTFixNone"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CTFixity",[]],[]],"fe_representation":"CTFixNone :: CTFixity"},["Tip"],["Tip"]],["Tip"]]]],["Bin",8,["Location","Dynamics","StdCleanTypes",["Just",30],["Nothing"],"td_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTTypeDef",[]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":".td_name :: CTTypeDef -> {#Char}"},["Bin",3,["Location","Dynamics","StdCleanTypes",["Just",24],["Nothing"],"fd_type"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTFieldDef",[]]],["Type","TypeCode",[]],[]],"fe_representation":".fd_type :: CTFieldDef -> TypeCode"},["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",24],["Nothing"],"fd_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTFieldDef",[]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":".fd_name :: CTFieldDef -> {#Char}"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",30],["Nothing"],"td_arity"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTTypeDef",[]]],["Type","Int",[]],[]],"fe_representation":".td_arity :: CTTypeDef -> Int"},["Tip"],["Tip"]]],["Bin",4,["Location","Dynamics","StdCleanTypes",["Just",30],["Nothing"],"td_unq"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTTypeDef",[]]],["Type","Bool",[]],[]],"fe_representation":".td_unq :: CTTypeDef -> Bool"},["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",30],["Nothing"],"td_rhs"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CTTypeDef",[]]],["Type","CTTypeRHS",[]],[]],"fe_representation":".td_rhs :: CTTypeDef -> CTTypeRHS"},["Tip"],["Tip"]],["Bin",2,["Location","Dynamics","_SystemDynamic",["Just",6],["Nothing"],"_type"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicTemp",[]]],["Type","TypeCode",[]],[]],"fe_representation":"._type :: DynamicTemp -> TypeCode"},["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",38],["Just",18],"CTToCons"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","CTCons",[]],[]],"fe_representation":"CTToCons :: !a -> CTCons"},["Tip"],["Tip"]],["Tip"]]]]],["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",12],["Nothing"],"TypeUnique"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TypeCode",[]]],["Type","TypeCode",[]],[]],"fe_representation":"TypeUnique :: TypeCode -> TypeCode"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",12],["Nothing"],"TypeCons"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TypeCodeConstructor",[]]],["Type","TypeCode",[]],[]],"fe_representation":"TypeCons :: TypeCodeConstructor -> TypeCode"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",12],["Nothing"],"TypeApp"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TypeCode",[]],["Type","TypeCode",[]]],["Type","TypeCode",[]],[]],"fe_representation":"TypeApp :: TypeCode TypeCode -> TypeCode"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",12],["Nothing"],"TypeScheme"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","TypeCode",[]]],["Type","TypeCode",[]],[]],"fe_representation":"TypeScheme :: Int TypeCode -> TypeCode"},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",12],["Nothing"],"_TypeEmpty"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TypeCode",[]],[]],"fe_representation":"_TypeEmpty :: TypeCode"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",12],["Nothing"],"TypeVar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","TypeCode",[]],[]],"fe_representation":"TypeVar :: Int -> TypeCode"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",12],["Nothing"],"_TypeFixedVar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","TypeCode",[]],[]],"fe_representation":"_TypeFixedVar :: Int -> TypeCode"},["Tip"],["Tip"]]]]],["Bin",17,["Location","Dynamics","_SystemDynamic",["Just",39],["Just",591],"TC__StrictList"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__StrictList",[]],[]],"fe_representation":"TC__StrictList :: TC__StrictList"},["Bin",9,["Location","Dynamics","_SystemDynamic",["Just",33],["Just",585],"TC_File"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC_File",[]],[]],"fe_representation":"TC_File :: TC_File"},["Bin",5,["Location","Dynamics","_SystemDynamic",["Just",31],["Just",583],"TC_Bool"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC_Bool",[]],[]],"fe_representation":"TC_Bool :: TC_Bool"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",29],["Just",581],"TC_Char"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC_Char",[]],[]],"fe_representation":"TC_Char :: TC_Char"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",28],["Just",580],"TC_Int"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC_Int",[]],[]],"fe_representation":"TC_Int :: TC_Int"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",30],["Just",582],"TC_Real"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC_Real",[]],[]],"fe_representation":"TC_Real :: TC_Real"},["Tip"],["Tip"]]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",32],["Just",584],"TC_Dynamic"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC_Dynamic",[]],[]],"fe_representation":"TC_Dynamic :: TC_Dynamic"},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",36],["Just",588],"TC__Arrow"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Arrow",[]],[]],"fe_representation":"TC__Arrow :: TC__Arrow"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",34],["Just",586],"TC_World"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC_World",[]],[]],"fe_representation":"TC_World :: TC_World"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",38],["Just",590],"TC__List"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__List",[["Var","a"]]],[]],"fe_representation":"TC__List :: TC__List a"},["Tip"],["Tip"]]]],["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",43],["Just",595],"TC__UnboxedTailStrictList"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__UnboxedTailStrictList",[]],[]],"fe_representation":"TC__UnboxedTailStrictList :: TC__UnboxedTailStrictList"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",41],["Just",593],"TC__TailStrictList"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__TailStrictList",[]],[]],"fe_representation":"TC__TailStrictList :: TC__TailStrictList"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",40],["Just",592],"TC__UnboxedList"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__UnboxedList",[]],[]],"fe_representation":"TC__UnboxedList :: TC__UnboxedList"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",42],["Just",594],"TC__StrictTailStrictList"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__StrictTailStrictList",[]],[]],"fe_representation":"TC__StrictTailStrictList :: TC__StrictTailStrictList"},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",46],["Just",598],"TC__Tuple3"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple3",[]],[]],"fe_representation":"TC__Tuple3 :: TC__Tuple3"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",45],["Just",597],"TC__Tuple2"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple2",[]],[]],"fe_representation":"TC__Tuple2 :: TC__Tuple2"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",47],["Just",599],"TC__Tuple4"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple4",[]],[]],"fe_representation":"TC__Tuple4 :: TC__Tuple4"},["Tip"],["Tip"]]]]]],["Bin",15,["Location","Dynamics","_SystemDynamic",["Just",56],["Just",608],"TC__Tuple13"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple13",[]],[]],"fe_representation":"TC__Tuple13 :: TC__Tuple13"},["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",52],["Just",604],"TC__Tuple9"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple9",[]],[]],"fe_representation":"TC__Tuple9 :: TC__Tuple9"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",50],["Just",602],"TC__Tuple7"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple7",[]],[]],"fe_representation":"TC__Tuple7 :: TC__Tuple7"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",49],["Just",601],"TC__Tuple6"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple6",[]],[]],"fe_representation":"TC__Tuple6 :: TC__Tuple6"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",51],["Just",603],"TC__Tuple8"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple8",[]],[]],"fe_representation":"TC__Tuple8 :: TC__Tuple8"},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",54],["Just",606],"TC__Tuple11"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple11",[]],[]],"fe_representation":"TC__Tuple11 :: TC__Tuple11"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",53],["Just",605],"TC__Tuple10"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple10",[]],[]],"fe_representation":"TC__Tuple10 :: TC__Tuple10"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",55],["Just",607],"TC__Tuple12"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple12",[]],[]],"fe_representation":"TC__Tuple12 :: TC__Tuple12"},["Tip"],["Tip"]]]],["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",60],["Just",612],"TC__Tuple17"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple17",[]],[]],"fe_representation":"TC__Tuple17 :: TC__Tuple17"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",58],["Just",610],"TC__Tuple15"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple15",[]],[]],"fe_representation":"TC__Tuple15 :: TC__Tuple15"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",57],["Just",609],"TC__Tuple14"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple14",[]],[]],"fe_representation":"TC__Tuple14 :: TC__Tuple14"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",59],["Just",611],"TC__Tuple16"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple16",[]],[]],"fe_representation":"TC__Tuple16 :: TC__Tuple16"},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",62],["Just",614],"TC__Tuple19"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple19",[]],[]],"fe_representation":"TC__Tuple19 :: TC__Tuple19"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",61],["Just",613],"TC__Tuple18"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple18",[]],[]],"fe_representation":"TC__Tuple18 :: TC__Tuple18"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",63],["Just",615],"TC__Tuple20"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple20",[]],[]],"fe_representation":"TC__Tuple20 :: TC__Tuple20"},["Tip"],["Tip"]]]]]],["Bin",84,["Location","Generics","GenHylo",["Just",10],["Just",16],"ana"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","f",[["Var","a"]]],[]]],["Func",[["Var","a"]],["Type","Fix",[["Var","f"]]],[]],[[["Generic","gMap",["KindArrow",[["KindConst"]]]],["Var","f"]]]],"fe_representation":"ana :: (.a -> u:(f .a)) -> .a -> Fix u:f | gMap{|*->*|} f"},["Bin",58,["Location","Generics","GenCompress",["Just",9],["Just",152],"gCompress"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Func",[["Uniq",["Type","CompressSt",[]]]],["Uniq",["Type","CompressSt",[]]],[]],[]],"fe_generic_vars":["a"],"fe_representation":"generic gCompress a :: !a -> *CompressSt -> *CompressSt"},["Bin",40,["Location","Dynamics","_SystemDynamic",["Just",81],["Nothing"],"TC__Unit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Unit",[]],[]],"fe_representation":"TC__Unit :: TC__Unit"},["Bin",14,["Location","Dynamics","_SystemDynamic",["Just",72],["Just",624],"TC__Tuple29"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple29",[]],[]],"fe_representation":"TC__Tuple29 :: TC__Tuple29"},["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",68],["Just",620],"TC__Tuple25"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple25",[]],[]],"fe_representation":"TC__Tuple25 :: TC__Tuple25"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",66],["Just",618],"TC__Tuple23"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple23",[]],[]],"fe_representation":"TC__Tuple23 :: TC__Tuple23"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",65],["Just",617],"TC__Tuple22"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple22",[]],[]],"fe_representation":"TC__Tuple22 :: TC__Tuple22"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",67],["Just",619],"TC__Tuple24"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple24",[]],[]],"fe_representation":"TC__Tuple24 :: TC__Tuple24"},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",70],["Just",622],"TC__Tuple27"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple27",[]],[]],"fe_representation":"TC__Tuple27 :: TC__Tuple27"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",69],["Just",621],"TC__Tuple26"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple26",[]],[]],"fe_representation":"TC__Tuple26 :: TC__Tuple26"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",71],["Just",623],"TC__Tuple28"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple28",[]],[]],"fe_representation":"TC__Tuple28 :: TC__Tuple28"},["Tip"],["Tip"]]]],["Bin",6,["Location","Dynamics","_SystemDynamic",["Just",77],["Just",629],"TC__LazyArray"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__LazyArray",[]],[]],"fe_representation":"TC__LazyArray :: TC__LazyArray"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",74],["Just",626],"TC__Tuple31"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple31",[]],[]],"fe_representation":"TC__Tuple31 :: TC__Tuple31"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",73],["Just",625],"TC__Tuple30"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple30",[]],[]],"fe_representation":"TC__Tuple30 :: TC__Tuple30"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",75],["Just",627],"TC__Tuple32"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__Tuple32",[]],[]],"fe_representation":"TC__Tuple32 :: TC__Tuple32"},["Tip"],["Tip"]]],["Bin",2,["Location","Dynamics","_SystemDynamic",["Just",79],["Just",631],"TC__UnboxedArray"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__UnboxedArray",[]],[]],"fe_representation":"TC__UnboxedArray :: TC__UnboxedArray"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",78],["Just",630],"TC__StrictArray"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TC__StrictArray",[]],[]],"fe_representation":"TC__StrictArray :: TC__StrictArray"},["Tip"],["Tip"]],["Tip"]]]],["Bin",25,["Location","Dynamics","_SystemDynamic",["Just",104],["Just",768],"TypeCodeConstructor_StrictArray"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_StrictArray :: TypeCodeConstructor"},["Bin",17,["Location","Dynamics","_SystemDynamic",["Just",96],["Just",734],"TypeCodeConstructor_List"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_List :: TypeCodeConstructor"},["Bin",9,["Location","Dynamics","_SystemDynamic",["Just",92],["Just",718],"TypeCodeConstructorDynamic"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructorDynamic :: TypeCodeConstructor"},["Bin",5,["Location","Dynamics","_SystemDynamic",["Just",90],["Just",710],"TypeCodeConstructorReal"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructorReal :: TypeCodeConstructor"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",88],["Just",702],"TypeCodeConstructorInt"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructorInt :: TypeCodeConstructor"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",85],["Just",221],"typeCodeOfDynamic"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Dynamic",[]]],["Type","TypeCode",[]],[]],"fe_representation":"typeCodeOfDynamic :: !Dynamic -> TypeCode"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",89],["Just",706],"TypeCodeConstructorChar"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructorChar :: TypeCodeConstructor"},["Tip"],["Tip"]]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",91],["Just",714],"TypeCodeConstructorBool"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructorBool :: TypeCodeConstructor"},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",94],["Just",726],"TypeCodeConstructorWorld"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructorWorld :: TypeCodeConstructor"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",93],["Just",722],"TypeCodeConstructorFile"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructorFile :: TypeCodeConstructor"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",95],["Just",730],"TypeCodeConstructor_Arrow"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_Arrow :: TypeCodeConstructor"},["Tip"],["Tip"]]]],["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",100],["Just",750],"TypeCodeConstructor_StrictTailStrictList"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_StrictTailStrictList :: TypeCodeConstructor"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",98],["Just",742],"TypeCodeConstructor_UnboxedList"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_UnboxedList :: TypeCodeConstructor"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",97],["Just",738],"TypeCodeConstructor_StrictList"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_StrictList :: TypeCodeConstructor"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",99],["Just",746],"TypeCodeConstructor_TailStrictList"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_TailStrictList :: TypeCodeConstructor"},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",102],["Just",758],"TypeCodeConstructor_Tuple"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_Tuple :: !Int -> TypeCodeConstructor"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",101],["Just",754],"TypeCodeConstructor_UnboxedTailStrictList"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_UnboxedTailStrictList :: TypeCodeConstructor"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",103],["Just",764],"TypeCodeConstructor_LazyArray"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_LazyArray :: TypeCodeConstructor"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",114],["Just",196],"_unify"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_UnificationEnvironment",[]],["Type","TypeCode",[]],["Type","TypeCode",[]]],["Type","_Tuple2",[["Type","Bool",[]],["Type","_UnificationEnvironment",[]]]],[]],"fe_representation":"_unify :: !_UnificationEnvironment !TypeCode !TypeCode -> (!Bool,_UnificationEnvironment)"},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",111],["Just",187],"_initial_unification_environment"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]]],["Uniq",["Type","_UnificationEnvironment",[]]],[]],"fe_representation":"_initial_unification_environment :: !Int !Int -> *_UnificationEnvironment"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",105],["Just",772],"TypeCodeConstructor_UnboxedArray"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"TypeCodeConstructor_UnboxedArray :: TypeCodeConstructor"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",112],["Just",191],"_bind_global_type_pattern_var"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TypeCode",[]],["Type","TypeCode",[]],["Uniq",["Type","_UnificationEnvironment",[]]]],["Uniq",["Type","_UnificationEnvironment",[]]],[]],"fe_representation":"_bind_global_type_pattern_var :: !TypeCode !TypeCode !*_UnificationEnvironment -> *_UnificationEnvironment"},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",117],["Just",641],"typeCodeConstructorIsPredefined"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TypeCodeConstructor",[]]],["Type","Bool",[]],[]],"fe_representation":"typeCodeConstructorIsPredefined :: !TypeCodeConstructor -> Bool"},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",115],["Just",201],"_normalise"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_UnificationEnvironment",[]],["Type","TypeCode",[]]],["Type","TypeCode",[]],[]],"fe_representation":"_normalise :: !_UnificationEnvironment !TypeCode -> TypeCode"},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",119],["Just",776],"_to_TypeCodeConstructor"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Bool",[]]],["Var","a"],[]]],["Type","TypeCodeConstructor",[]],[]],"fe_representation":"_to_TypeCodeConstructor :: !(Bool -> a) -> TypeCodeConstructor"},["Tip"],["Tip"]]]]]],["Bin",17,["Location","Generics","GenFMap",["Just",10],["Just",36],"gLookupFMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","key"],["Type","FMap",[["Var","value"]]]],["Type","FMap",[["Var","value"]]],[]],"fe_generic_vars":["key"],"fe_representation":"generic gLookupFMap key :: key (FMap value) -> FMap value"},["Bin",9,["Location","Generics","GenDefault",["Just",5],["Just",6],"gDefault"],{"fe_kind":["Function"],"fe_type":["Func",[],["Var","a"],[]],"fe_generic_vars":["a"],"fe_representation":"generic gDefault a :: a"},["Bin",4,["Location","Generics","GenCompress",["Just",15],["Just",187],"gUncompress"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","CompressSt",[]]],["Type","_Tuple2",[["Type","Maybe",[["Var","a"]]],["Type","CompressSt",[]]]],[]],[]],"fe_generic_vars":["a"],"fe_representation":"generic gUncompress a :: u:CompressSt -> (Maybe a,u:CompressSt)"},["Bin",1,["Location","Generics","GenCompress",["Just",12],["Just",170],"gCompressedSize"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Int",[]],[]],"fe_generic_vars":["a"],"fe_representation":"generic gCompressedSize a :: a -> Int"},["Tip"],["Tip"]],["Bin",2,["Location","Generics","GenCompress",["Just",19],["Just",211],"uncompress"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","BitVector",[]]],["Type","Maybe",[["Var","a"]]],[]],[[["Generic","gUncompress",["KindConst"]],["Var","a"]]]],"fe_representation":"uncompress :: BitVector -> Maybe a | gUncompress{|*|} a"},["Bin",1,["Location","Generics","GenCompress",["Just",18],["Just",214],"compress"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","BitVector",[]],[[["Generic","gCompressedSize",["KindConst"]],["Var","a"]],[["Generic","gCompress",["KindConst"]],["Var","a"]]]],"fe_representation":"compress :: !a -> BitVector | gCompressedSize{|*|} a & gCompress{|*|} a"},["Tip"],["Tip"]],["Tip"]]],["Bin",4,["Location","Generics","GenEq",["Just",13],["Just",26],"==="],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[[["Generic","gEq",["KindConst"]],["Var","a"]]]],"fe_priority":["NoAssoc",4],"fe_representation":"(===) infix 4 :: a a -> Bool | gEq{|*|} a"},["Bin",1,["Location","Generics","GenEq",["Just",5],["Just",5],"gEq"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[]],"fe_generic_vars":["a"],"fe_representation":"generic gEq a :: a a -> Bool"},["Tip"],["Tip"]],["Bin",2,["Location","Generics","GenEq",["Just",14],["Just",29],"=!="],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[[["Generic","gEq",["KindConst"]],["Var","a"]]]],"fe_priority":["NoAssoc",4],"fe_representation":"(=!=) infix 4 :: a a -> Bool | gEq{|*|} a"},["Tip"],["Bin",1,["Location","Generics","GenFMap",["Just",8],["Just",15],"emptyFMap"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","FMap",[["Var","v"]]],[]],"fe_representation":"emptyFMap :: .(FMap .v)"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Generics","GenHylo",["Just",5],["Just",5],"In"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Cons","f",[["Type","Fix",[["Var","f"]]]]]],["Type","Fix",[["Var","f"]]],[]],"fe_representation":"In :: (f (Fix f)) -> Fix f"},["Bin",3,["Location","Generics","GenFMap",["Just",18],["Just",72],"lookupFMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Type","FMap",[["Var","v"]]]],["Type","Maybe",[["Var","v"]]],[[["Generic","gLookupFMap",["KindConst"]],["Var","k"]],[["Generic","bimap",["KindConst"]],["Var","v"]]]],"fe_representation":"lookupFMap :: !k .(FMap v) -> .(Maybe v) | gLookupFMap{|*|} k & bimap{|*|} v"},["Bin",1,["Location","Generics","GenFMap",["Just",14],["Just",81],"gInsertFMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","key"],["Type","_Tuple2",[["Type","FMap",[["Var","value"]]],["Type","FMap",[["Var","value"]]]]]],["Type","_Tuple2",[["Type","FMap",[["Var","value"]]],["Type","FMap",[["Var","value"]]]]],[]],"fe_generic_vars":["key"],"fe_representation":"generic gInsertFMap key :: key (FMap value,FMap value) -> (FMap value,FMap value)"},["Tip"],["Tip"]],["Bin",1,["Location","Generics","GenFMap",["Just",19],["Just",139],"<<="],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FMap",[["Var","v"]]],["Type","_Tuple2",[["Var","k"],["Var","v"]]]],["Type","FMap",[["Var","v"]]],[[["Generic","gInsertFMap",["KindConst"]],["Var","k"]],[["Generic","bimap",["KindConst"]],["Var","v"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(<<=) infixl 1 :: .(FMap v) !.(k,v) -> FMap v | gInsertFMap{|*|} k & bimap{|*|} v"},["Tip"],["Tip"]]],["Bin",3,["Location","Generics","GenHylo",["Just",8],["Just",10],"hylo"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Cons","f",[["Var","b"]]]],["Var","b"],[]],["Func",[["Var","a"]],["Cons","f",[["Var","a"]]],[]]],["Func",[["Var","a"]],["Var","b"],[]],[[["Generic","gMap",["KindArrow",[["KindConst"]]]],["Var","f"]]]],"fe_representation":"hylo :: (.(f .b) -> .b) (.a -> .(f .a)) -> .a -> .b | gMap{|*->*|} f"},["Bin",1,["Location","Generics","GenHylo",["Just",6],["Just",7],"Out"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Fix",[["Var","a"]]]],["Cons","a",[["Type","Fix",[["Var","a"]]]]],[]],"fe_representation":"Out :: !u:(Fix v:a) -> v:(a w:(Fix v:a)), [u<=w]"},["Tip"],["Tip"]],["Bin",1,["Location","Generics","GenHylo",["Just",9],["Just",13],"cata"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Cons","f",[["Var","a"]]]],["Var","a"],[]]],["Func",[["Type","Fix",[["Var","f"]]]],["Var","a"],[]],[[["Generic","gMap",["KindArrow",[["KindConst"]]]],["Var","f"]]]],"fe_representation":"cata :: (u:(f .a) -> .a) -> (Fix u:f) -> .a | gMap{|*->*|} f"},["Tip"],["Tip"]]]]]],["Bin",25,["Location","Generics","GenParse",["Just",8],["Just",8],"si_str"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StringInput",[]]],["Type","String",[]],[]],"fe_representation":".si_str :: StringInput -> String"},["Bin",12,["Location","Generics","GenMonad",["Just",9],["Nothing"],"st_monad"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StMonad",[["Var","s"],["Var","a"]]]],["Func",[["Var","s"]],["Uniq",["Type","_Tuple2",[["Var","a"],["Var","s"]]]],[]],[]],"fe_representation":".st_monad :: (StMonad s a) -> s -> *(a, s)"},["Bin",8,["Location","Generics","GenMap",["Just",5],["Just",6],"gMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","b"],[]],"fe_generic_vars":["a","b"],"fe_representation":"generic gMap a b :: .a -> .b"},["Bin",5,["Location","Generics","GenLexOrd",["Just",5],["Just",6],"GT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","LexOrd",[]],[]],"fe_representation":"GT :: LexOrd"},["Bin",1,["Location","Generics","GenLexOrd",["Just",5],["Just",6],"EQ"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","LexOrd",[]],[]],"fe_representation":"EQ :: LexOrd"},["Tip"],["Tip"]],["Bin",3,["Location","Generics","GenLexOrd",["Just",8],["Just",9],"gLexOrd"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","b"]],["Type","LexOrd",[]],[]],"fe_generic_vars":["a","b"],"fe_representation":"generic gLexOrd a b :: a b -> LexOrd"},["Bin",1,["Location","Generics","GenLexOrd",["Just",5],["Just",6],"LT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","LexOrd",[]],[]],"fe_representation":"LT :: LexOrd"},["Tip"],["Tip"]],["Bin",1,["Location","Generics","GenLexOrd",["Just",16],["Just",66],"=?="],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","LexOrd",[]],[[["Generic","gLexOrd",["KindConst"]],["Var","a"]]]],"fe_priority":["NoAssoc",4],"fe_representation":"(=?=) infix 4 :: a a -> LexOrd | gLexOrd{|*|} a"},["Tip"],["Tip"]]]],["Bin",2,["Location","Generics","GenMapSt",["Just",5],["Just",7],"gMapLSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","st"]],["Type","_Tuple2",[["Var","b"],["Var","st"]]],[]],"fe_generic_vars":["a","b"],"fe_representation":"generic gMapLSt a b :: .a .st -> (.b,.st)"},["Tip"],["Bin",1,["Location","Generics","GenMapSt",["Just",9],["Just",22],"gMapRSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","st"]],["Type","_Tuple2",[["Var","b"],["Var","st"]]],[]],"fe_generic_vars":["a","b"],"fe_representation":"generic gMapRSt a b :: .a .st -> (.b,.st)"},["Tip"],["Tip"]]]],["Bin",3,["Location","Generics","GenMonad",["Just",17],["Just",13],"gMapRM"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[[["Class","Monad"],["Var","m"]]]],"fe_generic_vars":["a","b"],"fe_representation":"generic gMapRM a b :: .a -> m:(m .b) | Monad m, [m<=b]"},["Bin",1,["Location","Generics","GenMonad",["Just",13],["Just",5],"gMapLM"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[[["Class","Monad"],["Var","m"]]]],"fe_generic_vars":["a","b"],"fe_representation":"generic gMapLM a b :: .a -> m:(m .b) | Monad m, [m<=b]"},["Tip"],["Tip"]],["Bin",1,["Location","Generics","GenParse",["Just",8],["Just",8],"si_pos"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StringInput",[]]],["Type","Int",[]],[]],"fe_representation":".si_pos :: StringInput -> Int"},["Tip"],["Tip"]]]],["Bin",12,["Location","Generics","GenPrint",["Just",23],["Just",172],"gPrint"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","PrintState",[["Uniq",["Var","s"]]]]],["Type","PrintState",[["Uniq",["Var","s"]]]],[[["Class","PrintOutput"],["Var","s"]]]],"fe_generic_vars":["a"],"fe_representation":"generic gPrint a :: a (PrintState *s) -> PrintState *s | PrintOutput s"},["Bin",8,["Location","Generics","GenParse",["Just",19],["Just",737],"parseString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Maybe",[["Var","a"]]],[[["Generic","gParse",["KindConst"]],["Var","a"]]]],"fe_representation":"parseString :: String -> Maybe a | gParse{|*|} a"},["Bin",2,["Location","Generics","GenParse",["Just",15],["Just",541],"gParse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Expr",[]]],["Type","Maybe",[["Var","a"]]],[]],"fe_generic_vars":["a"],"fe_representation":"generic gParse a :: Expr -> Maybe a"},["Bin",1,["Location","Generics","GenParse",["Just",9],["Just",10],"mkStringInput"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","StringInput",[]],[]],"fe_representation":"mkStringInput :: String -> StringInput"},["Tip"],["Tip"]],["Tip"]],["Bin",5,["Location","Generics","GenPrint",["Just",14],["Just",298],"printToString"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[[["Generic","gPrint",["KindConst"]],["Var","a"]]]],"fe_representation":"printToString :: a -> String | gPrint{|*|} a"},["Bin",3,["Location","Generics","GenPrint",["Just",12],["Just",283],"mkPrintState"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","s"]]],["Type","PrintState",[["Uniq",["Var","s"]]]],[[["Class","PrintOutput"],["Var","s"]]]],"fe_representation":"mkPrintState :: *s -> PrintState *s | PrintOutput s"},["Bin",1,["Location","Generics","GenParse",["Just",20],["Just",740],"parseFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","File",[]]],["Type","Maybe",[["Var","a"]]],[[["Generic","gParse",["KindConst"]],["Var","a"]]]],"fe_representation":"parseFile :: File -> Maybe a | gParse{|*|} a"},["Tip"],["Tip"]],["Bin",1,["Location","Generics","GenPrint",["Just",13],["Just",289],"mkStringPrintState"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","PrintState",[["Type","StringOutput",[]]]],[]],"fe_representation":"mkStringPrintState :: PrintState StringOutput"},["Tip"],["Tip"]]],["Bin",1,["Location","Generics","GenPrint",["Just",16],["Just",280],"<<-"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","PrintState",[["Uniq",["Var","s"]]]],["Var","a"]],["Uniq",["Type","PrintState",[["Uniq",["Var","s"]]]]],[[["Class","PrintOutput"],["Var","s"]],[["Generic","gPrint",["KindConst"]],["Var","a"]]]],"fe_priority":["LeftAssoc",0],"fe_representation":"(<<-) infixl 0 :: (PrintState *s) a -> *(PrintState *s) | gPrint{|*|} a & PrintOutput s"},["Tip"],["Tip"]]]],["Bin",3,["Location","Generics","GenReduce",["Just",9],["Just",18],"gReduceRSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","t"],["Var","st"]],["Var","st"],[]],"fe_generic_vars":["t"],"fe_representation":"generic gReduceRSt t :: .t .st -> .st"},["Bin",1,["Location","Generics","GenReduce",["Just",5],["Just",6],"gReduce"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Var","a"],["Var","t"]],["Var","a"],[]],"fe_generic_vars":["t"],"fe_representation":"generic gReduce t :: (a -> a -> a) a t -> a"},["Tip"],["Tip"]],["Bin",1,["Location","Generics","GenReduce",["Just",13],["Just",29],"gReduceLSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","t"],["Var","st"]],["Var","st"],[]],"fe_generic_vars":["t"],"fe_representation":"generic gReduceLSt t :: .t .st -> .st"},["Tip"],["Tip"]]]]]]],["Bin",81,["Location","Platform","Control.Category",["Just",27],["Just",22],"<<<"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","cat",[["Var","b"],["Var","c"]]],["Cons","cat",[["Var","a"],["Var","b"]]]],["Cons","cat",[["Var","a"],["Var","c"]]],[[["Class","Category"],["Var","cat"]]]],"fe_priority":["RightAssoc",1],"fe_representation":"(<<<) infixr 1 :: (cat b c) (cat a b) -> cat a c | Category cat"},["Bin",58,["Location","GraphCopy","graph_to_string_and_descriptors",["Just",7],["Just",565],"graph_to_string_with_descriptor_and_module_table"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_Tuple3",[["Type","_#Array",[["Type","Char",[]]]],["Type","_#Array",[["Type","_#Array",[["Type","Char",[]]]]]],["Type","_#Array",[["Type","_#Array",[["Type","Char",[]]]]]]]],[]],"fe_representation":"graph_to_string_with_descriptor_and_module_table :: !a -> (!{#Char},!{#{#Char}},!{#{#Char}})"},["Bin",33,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"FunctionS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],["Type","DynamicSapl",[]],[]],"fe_representation":"FunctionS :: String String Int [DynamicSapl] -> DynamicSapl"},["Bin",20,["Location","Generics","_Array",["Just",29],["Just",83],"reduceArray"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Var","a"],[]],[]],[]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Var","b"],["Cons","d",[["Var","c"]]]],["Var","b"],[[["Class","Array"],["Cons","d",[["Var","c"]]]]]],"fe_representation":"reduceArray :: ((.a -> u:(b -> b)) -> .(b -> .(c -> .a))) (.a -> u:(b -> b)) b .(d c) -> b | Array d c"},["Bin",5,["Location","Generics","_Array",["Just",27],["Just",52],"mapArrayLSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","_Tuple2",[["Var","c"],["Var","b"]]],[]],[]],["Cons","d",[["Var","a"]]],["Var","b"]],["Type","_Tuple2",[["Cons","e",[["Var","c"]]],["Var","b"]]],[[["Class","Array"],["Cons","e",[["Var","c"]]]],[["Class","UnsafeArray"],["Var","d"]],[["Class","UnsafeArray"],["Var","e"]],[["Class","Array"],["Cons","d",[["Var","a"]]]]]],"fe_representation":"mapArrayLSt :: (u:a -> .(.b -> (v:c,.b))) w:(d u:a) .b -> (x:(e v:c),.b) | Array e c & UnsafeArray d & UnsafeArray e & Array d a, [w<=u, x<=v]"},["Bin",3,["Location","Generics","_Array",["Just",5],["Just",6],"createArrayUnsafe"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Cons","a",[["Var","b"]]],[[["Class","Array"],["Cons","a",[["Var","b"]]]]]],"fe_representation":"createArrayUnsafe :: .Int -> u:(a v:b) | Array a b, [u<=v]"},["Bin",1,["Location","Generics","GenZip",["Just",9],["Just",25],"gMaybeZip"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","b"]],["Type","Maybe",[["Var","c"]]],[]],"fe_generic_vars":["a","b","c"],"fe_representation":"generic gMaybeZip a b c :: .a .b -> Maybe .c"},["Tip"],["Tip"]],["Bin",1,["Location","Generics","_Array",["Just",26],["Just",37],"mapArray"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Cons","c",[["Var","a"]]]],["Cons","d",[["Var","b"]]],[[["Class","Array"],["Cons","d",[["Var","b"]]]],[["Class","UnsafeArray"],["Var","c"]],[["Class","UnsafeArray"],["Var","d"]],[["Class","Array"],["Cons","c",[["Var","a"]]]]]],"fe_representation":"mapArray :: (u:a -> v:b) w:(c u:a) -> x:(d v:b) | Array d b & UnsafeArray c & UnsafeArray d & Array c a, [w<=u, x<=v]"},["Tip"],["Tip"]]],["Bin",1,["Location","Generics","_Array",["Just",28],["Just",68],"mapArrayRSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","_Tuple2",[["Var","c"],["Var","b"]]],[]],[]],["Cons","d",[["Var","a"]]],["Var","b"]],["Type","_Tuple2",[["Cons","e",[["Var","c"]]],["Var","b"]]],[[["Class","Array"],["Cons","e",[["Var","c"]]]],[["Class","UnsafeArray"],["Var","d"]],[["Class","UnsafeArray"],["Var","e"]],[["Class","Array"],["Cons","d",[["Var","a"]]]]]],"fe_representation":"mapArrayRSt :: (u:a -> .(.b -> (v:c,.b))) w:(d u:a) .b -> (x:(e v:c),.b) | Array e c & UnsafeArray d & UnsafeArray e & Array d a, [w<=u, x<=v]"},["Tip"],["Tip"]]],["Bin",14,["Location","GraphCopy","graph_copy_with_names",["Just",6],["Just",500],"di_prefix_arity_and_mod"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DescInfo",[]]],["Type","Int",[]],[]],"fe_representation":".di_prefix_arity_and_mod :: DescInfo -> Int"},["Bin",7,["Location","GraphCopy","dynamic_string",["Just",6],["Just",30],"string_to_dynamic"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]]],["Type","Dynamic",[]],[]],"fe_representation":"string_to_dynamic :: *{#Char} -> .Dynamic"},["Bin",3,["Location","Generics","_Array",["Just",31],["Just",106],"reduceArrayRSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Cons","c",[["Var","a"]]],["Var","b"]],["Var","b"],[[["Class","UnsafeArray"],["Var","c"]],[["Class","Array"],["Cons","c",[["Var","a"]]]]]],"fe_representation":"reduceArrayRSt :: (u:a -> .(.b -> .b)) v:(c u:a) .b -> .b | UnsafeArray c & Array c a, [v<=u]"},["Bin",1,["Location","Generics","_Array",["Just",30],["Just",93],"reduceArrayLSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Cons","c",[["Var","a"]]],["Var","b"]],["Var","b"],[[["Class","UnsafeArray"],["Var","c"]],[["Class","Array"],["Cons","c",[["Var","a"]]]]]],"fe_representation":"reduceArrayLSt :: (u:a -> .(.b -> .b)) v:(c u:a) .b -> .b | UnsafeArray c & Array c a, [v<=u]"},["Tip"],["Tip"]],["Bin",1,["Location","GraphCopy","dynamic_string",["Just",5],["Just",26],"dynamic_to_string"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Dynamic",[]]],["Uniq",["Type","_#Array",[["Type","Char",[]]]]],[]],"fe_representation":"dynamic_to_string :: !Dynamic -> *{#Char}"},["Tip"],["Tip"]]],["Bin",3,["Location","GraphCopy","dynamic_string",["Just",9],["Just",18],"copy_from_string"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]]],["Type","_Tuple2",[["Var","a"],["Type","Int",[]]]],[]],"fe_representation":"copy_from_string :: !*{#Char} -> (.a,!Int)"},["Bin",1,["Location","GraphCopy","dynamic_string",["Just",8],["Just",11],"copy_to_string"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Uniq",["Type","_#Array",[["Type","Char",[]]]]],[]],"fe_representation":"copy_to_string :: !.a -> *{#Char}"},["Tip"],["Tip"]],["Bin",1,["Location","GraphCopy","graph_copy_with_names",["Just",6],["Just",500],"di_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DescInfo",[]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":".di_name :: DescInfo -> {#Char}"},["Tip"],["Tip"]]]],["Bin",6,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"ArrayS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],["Type","DynamicSapl",[]],[]],"fe_representation":"ArrayS :: Int [DynamicSapl] -> DynamicSapl"},["Bin",2,["Location","GraphCopy","graph_copy_with_names",["Just",9],["Just",776],"copy_from_string_with_names"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Uniq",["Type","_#Array",[["Type","DescInfo",[]]]]],["Uniq",["Type","_#Array",[["Type","String",[]]]]],["Type","_#Array",[["Type","Symbol",[]]]]],["Type","_Tuple2",[["Var","a"],["Type","Int",[]]]],[]],"fe_representation":"copy_from_string_with_names :: !*{#Char} !*{#DescInfo} !*{#String} !{#Symbol} -> (.a,!Int)"},["Bin",1,["Location","GraphCopy","graph_copy_with_names",["Just",8],["Just",693],"copy_to_string_with_names"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_Tuple3",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Uniq",["Type","_#Array",[["Type","DescInfo",[]]]]],["Uniq",["Type","_#Array",[["Type","String",[]]]]]]],[]],"fe_representation":"copy_to_string_with_names :: a -> (!*{#Char},!*{#DescInfo},!*{#String})"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"CharS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Char",[]]],["Type","DynamicSapl",[]],[]],"fe_representation":"CharS :: Char -> DynamicSapl"},["Bin",1,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"BoolS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","DynamicSapl",[]],[]],"fe_representation":"BoolS :: Bool -> DynamicSapl"},["Tip"],["Tip"]],["Bin",1,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"CstrS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],["Type","DynamicSapl",[]],[]],"fe_representation":"CstrS :: String String Int [DynamicSapl] -> DynamicSapl"},["Tip"],["Tip"]]]]]],["Bin",12,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"RecS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],["Type","DynamicSapl",[]],[]],"fe_representation":"RecS :: String String Int [DynamicSapl] -> DynamicSapl"},["Bin",3,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"ListS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","DynamicSapl",[]]]]],["Type","DynamicSapl",[]],[]],"fe_representation":"ListS :: [DynamicSapl] -> DynamicSapl"},["Bin",1,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"IntS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","DynamicSapl",[]],[]],"fe_representation":"IntS :: Int -> DynamicSapl"},["Tip"],["Tip"]],["Bin",1,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"RealS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","DynamicSapl",[]],[]],"fe_representation":"RealS :: Real -> DynamicSapl"},["Tip"],["Tip"]]],["Bin",8,["Location","GraphCopy","graph_to_sapl_string",["Just",19],["Just",97],"graph_to_sapl_dynamic_test"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_Tuple5",[["Type","_Tuple5",[["Type","_#Array",[["Type","Int",[]]]],["Type","Char",[]],["Type","_#Array",[["Type","String",[]]]],["Type","Char",[]],["Type","_#Array",[["Type","String",[]]]]]],["Type","Char",[]],["Type","DynamicSapl",[]],["Type","Char",[]],["Type","String",[]]]],[]],"fe_representation":"graph_to_sapl_dynamic_test :: !a -> (({#Int},Char,{#String},Char,{#String}),Char,DynamicSapl,Char,String)"},["Bin",5,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"TupleS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],["Type","DynamicSapl",[]],[]],"fe_representation":"TupleS :: Int [DynamicSapl] -> DynamicSapl"},["Bin",1,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"StringS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","DynamicSapl",[]],[]],"fe_representation":"StringS :: String -> DynamicSapl"},["Tip"],["Tip"]],["Bin",3,["Location","GraphCopy","graph_to_sapl_string",["Just",13],["Just",87],"string_to_graph"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Var","a"],[]],"fe_representation":"string_to_graph :: !String -> .a"},["Bin",1,["Location","GraphCopy","graph_to_sapl_string",["Just",12],["Just",84],"graph_to_sapl_string"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[]],"fe_representation":"graph_to_sapl_string :: !a -> String"},["Tip"],["Tip"]],["Bin",1,["Location","GraphCopy","graph_to_sapl_string",["Just",16],["Just",90],"graph_to_sapl_dynamic"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","DynamicSapl",[]],[]],"fe_representation":"graph_to_sapl_dynamic :: !a -> DynamicSapl"},["Tip"],["Tip"]]]],["Bin",2,["Location","GraphCopy","graph_to_sapl_string",["Just",22],["Just",486],"print_graph"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[]],"fe_representation":"print_graph :: !a -> String"},["Tip"],["Bin",1,["Location","GraphCopy","graph_to_string_and_descriptors",["Just",5],["Just",578],"graph_to_string_with_descriptors"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":"graph_to_string_with_descriptors :: !a -> {#Char}"},["Tip"],["Tip"]]]]]],["Bin",24,["Location","Platform","Control.Applicative",["Just",53],["Just",86],"liftA"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Cons","f",[["Var","a"]]]],["Cons","f",[["Var","b"]]],[[["Class","Applicative"],["Var","f"]]]],"fe_representation":"liftA :: (a -> b) (f a) -> f b | Applicative f"},["Bin",11,["Location","Platform","Control.Applicative",["Just",41],["Just",64],"some"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]]],["Cons","f",[["Type","_List",[["Var","a"]]]]],[[["Class","Alternative"],["Var","f"]]]],"fe_representation":"some :: (f a) -> f [a] | Alternative f"},["Bin",5,["Location","Platform","Control.Applicative",["Just",9],["Nothing"],"WrapMonad"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Cons","m",[["Var","a"]]]],["Type","WrappedMonad",[["Var","m"],["Var","a"]]],[]],"fe_representation":"WrapMonad :: (m a) -> WrappedMonad m a"},["Bin",2,["Location","Platform","Control.Applicative",["Just",8],["Nothing"],"Const"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","Const",[["Var","a"],["Var","b"]]],[]],"fe_representation":"Const :: a -> Const a b"},["Bin",1,["Location","GraphCopy","sapldebug",["Just",3],["Just",5],"sapldebug"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","b"]],["Var","b"],[]],"fe_representation":"sapldebug :: !a .b -> .b"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","Platform","Control.Applicative",["Just",13],["Just",9],"getConst"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Const",[["Var","a"],["Var","b"]]]],["Var","a"],[]],"fe_representation":"getConst :: (Const a b) -> a"},["Bin",1,["Location","Platform","Control.Applicative",["Just",11],["Just",25],"unwrapMonad"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","WrappedMonad",[["Var","m"],["Var","a"]]]],["Cons","m",[["Var","a"]]],[]],"fe_representation":"unwrapMonad :: (WrappedMonad m a) -> m a"},["Tip"],["Tip"]],["Tip"]]],["Bin",5,["Location","Platform","Control.Applicative",["Just",47],["Just",77],"<*"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]],["Cons","f",[["Var","b"]]]],["Cons","f",[["Var","a"]]],[[["Class","Applicative"],["Var","f"]]]],"fe_priority":["LeftAssoc",4],"fe_representation":"(<*) infixl 4 :: (f a) (f b) -> f a | Applicative f"},["Bin",2,["Location","Platform","Control.Applicative",["Just",43],["Just",69],"many"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]]],["Cons","f",[["Type","_List",[["Var","a"]]]]],[[["Class","Alternative"],["Var","f"]]]],"fe_representation":"many :: (f a) -> f [a] | Alternative f"},["Tip"],["Bin",1,["Location","Platform","Control.Applicative",["Just",45],["Just",74],"*>"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]],["Cons","f",[["Var","b"]]]],["Cons","f",[["Var","b"]]],[[["Class","Applicative"],["Var","f"]]]],"fe_priority":["LeftAssoc",4],"fe_representation":"(*>) infixl 4 :: (f a) (f b) -> f b | Applicative f"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Control.Applicative",["Just",49],["Just",80],"<**>"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]],["Cons","f",[["Func",[["Var","a"]],["Var","b"],[]]]]],["Cons","f",[["Var","b"]]],[[["Class","Applicative"],["Var","f"]]]],"fe_priority":["LeftAssoc",4],"fe_representation":"(<**>) infixl 4 :: (f a) (f (a -> b)) -> f b | Applicative f"},["Tip"],["Bin",1,["Location","Platform","Control.Applicative",["Just",51],["Just",83],"lift"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Cons","f",[["Var","a"]]],[[["Class","Applicative"],["Var","f"]]]],"fe_representation":"lift :: a -> f a | Applicative f"},["Tip"],["Tip"]]]]],["Bin",12,["Location","Platform","Control.Arrow",["Just",85],["Just",75],"<<^"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","c"],["Var","d"]]],["Func",[["Var","b"]],["Var","c"],[]]],["Cons","a",[["Var","b"],["Var","d"]]],[[["Class","Arrow"],["Var","a"]]]],"fe_priority":["RightAssoc",1],"fe_representation":"(<<^) infixr 1 :: (a c d) (b -> c) -> a b d | Arrow a"},["Bin",8,["Location","Platform","Control.Applicative",["Just",59],["Just",95],"optional"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]]],["Cons","f",[["Type","Maybe",[["Var","a"]]]]],[[["Class","Alternative"],["Var","f"]]]],"fe_representation":"optional :: (f a) -> f (Maybe a) | Alternative f"},["Bin",2,["Location","Platform","Control.Applicative",["Just",55],["Just",89],"liftA2"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","c"],[]],[]],["Cons","f",[["Var","a"]]],["Cons","f",[["Var","b"]]]],["Cons","f",[["Var","c"]]],[[["Class","Applicative"],["Var","f"]]]],"fe_representation":"liftA2 :: (a -> b -> c) (f a) (f b) -> f c | Applicative f"},["Tip"],["Bin",1,["Location","Platform","Control.Applicative",["Just",57],["Just",92],"liftA3"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Var","d"],[]],[]],[]],["Cons","f",[["Var","a"]]],["Cons","f",[["Var","b"]]],["Cons","f",[["Var","c"]]]],["Cons","f",[["Var","d"]]],[[["Class","Applicative"],["Var","f"]]]],"fe_representation":"liftA3 :: (a -> b -> c -> d) (f a) (f b) (f c) -> f d | Applicative f"},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Control.Arrow",["Just",79],["Just",67],"^>>"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Var","c"],[]],["Cons","a",[["Var","c"],["Var","d"]]]],["Cons","a",[["Var","b"],["Var","d"]]],[[["Class","Arrow"],["Var","a"]]]],"fe_priority":["RightAssoc",1],"fe_representation":"(^>>) infixr 1 :: (b -> c) (a c d) -> a b d | Arrow a"},["Bin",3,["Location","Platform","Control.Arrow",["Just",69],["Just",47],"runKleisli"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Kleisli",[["Var","m"],["Var","a"],["Var","b"]]]],["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]],[]],"fe_representation":"runKleisli :: (Kleisli m a b) -> a -> m b"},["Bin",1,["Location","Platform","Control.Arrow",["Just",67],["Just",45],"Kleisli"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]]],["Type","Kleisli",[["Var","m"],["Var","a"],["Var","b"]]],[]],"fe_representation":"Kleisli :: (a -> m b) -> Kleisli m a b"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Arrow",["Just",76],["Just",63],"pureA"],{"fe_kind":["Function"],"fe_type":["Func",[],["Cons","a",[["Var","b"],["Var","b"]]],[[["Class","Arrow"],["Var","a"]]]],"fe_representation":"pureA :: a b b | Arrow a"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Control.Arrow",["Just",82],["Just",71],">>^"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]],["Func",[["Var","c"]],["Var","d"],[]]],["Cons","a",[["Var","b"],["Var","d"]]],[[["Class","Arrow"],["Var","a"]]]],"fe_priority":["RightAssoc",1],"fe_representation":"(>>^) infixr 1 :: (a b c) (c -> d) -> a b d | Arrow a"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Control.Arrow",["Just",179],["Nothing"],"ArrowMonad"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Cons","a",[["Type","_Unit",[]],["Var","b"]]]],["Type","ArrowMonad",[["Var","a"],["Var","b"]]],[]],"fe_representation":"ArrowMonad :: (a () b) -> ArrowMonad a b"},["Bin",1,["Location","Platform","Control.Arrow",["Just",88],["Just",79],"^<<"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","c"]],["Var","d"],[]],["Cons","a",[["Var","b"],["Var","c"]]]],["Cons","a",[["Var","b"],["Var","d"]]],[[["Class","Arrow"],["Var","a"]]]],"fe_priority":["RightAssoc",1],"fe_representation":"(^<<) infixr 1 :: (c -> d) (a b c) -> a b d | Arrow a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Arrow",["Just",195],["Just",131],"leftApp"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]]],["Cons","a",[["Type","Either",[["Var","b"],["Var","d"]]],["Type","Either",[["Var","c"],["Var","d"]]]]],[[["Class","ArrowApply"],["Var","a"]]]],"fe_representation":"leftApp :: (a b c) -> a (Either b d) (Either c d) | ArrowApply a"},["Tip"],["Tip"]]]]]],["Bin",22,["Location","Platform","Control.Monad",["Just",37],["Just",72],"foldM"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Cons","c",[["Var","a"]]],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]]],["Cons","c",[["Var","a"]]],[[["Class","Monad"],["Var","c"]]]],"fe_representation":"foldM :: (a -> .(b -> c a)) a [b] -> c a | Monad c"},["Bin",14,["Location","Platform","Control.Monad",["Just",29],["Just",48],"sequence_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Cons","a",[["Var","b"]]]]]],["Cons","a",[["Type","_Unit",[]]]],[[["Class","Monad"],["Var","a"]]]],"fe_representation":"sequence_ :: .[a b] -> a () | Monad a"},["Bin",6,["Location","Platform","Control.Monad",["Just",25],["Just",34],"`b`"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]],["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]]],["Cons","m",[["Var","b"]]],[[["Class","Monad"],["Var","m"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(`b`) infixl 1 :: (m a) (a -> m b) -> m b | Monad m"},["Bin",2,["Location","Platform","Control.Category",["Just",30],["Just",26],">>>"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","cat",[["Var","a"],["Var","b"]]],["Cons","cat",[["Var","b"],["Var","c"]]]],["Cons","cat",[["Var","a"],["Var","c"]]],[[["Class","Category"],["Var","cat"]]]],"fe_priority":["RightAssoc",1],"fe_representation":"(>>>) infixr 1 :: (cat a b) (cat b c) -> cat a c | Category cat"},["Tip"],["Bin",1,["Location","Platform","Control.Monad",["Just",24],["Just",31],">>="],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]],["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]]],["Cons","m",[["Var","b"]]],[[["Class","Monad"],["Var","m"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>>=) infixl 1 :: (m a) (a -> m b) -> m b | Monad m"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Control.Monad",["Just",27],["Just",40],"=<<"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]],["Cons","m",[["Var","a"]]]],["Cons","m",[["Var","b"]]],[[["Class","Monad"],["Var","m"]]]],"fe_priority":["RightAssoc",1],"fe_representation":"(=<<) infixr 1 :: (a -> m b) (m a) -> m b | Monad m"},["Bin",1,["Location","Platform","Control.Monad",["Just",26],["Just",37],">>|"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]],["Cons","m",[["Var","b"]]]],["Cons","m",[["Var","b"]]],[[["Class","Monad"],["Var","m"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>>|) infixl 1 :: (m a) (m b) -> m b | Monad m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad",["Just",28],["Just",43],"sequence"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Cons","a",[["Var","b"]]]]]],["Cons","a",[["Type","_List",[["Var","b"]]]]],[[["Class","Monad"],["Var","a"]]]],"fe_representation":"sequence :: .[a b] -> a [b] | Monad a"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Control.Monad",["Just",33],["Just",60],"forM_"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Var","a"]]]],["Func",[["Func",[["Var","a"]],["Cons","b",[["Var","c"]]],[]]],["Cons","b",[["Type","_Unit",[]]]],[]],[]],[[["Class","Monad"],["Var","b"]]]],"fe_representation":"forM_ :: u:([v:a] -> w:((v:a -> b c) -> b ())) | Monad b, [w<=u, w<=v]"},["Bin",3,["Location","Platform","Control.Monad",["Just",31],["Just",54],"mapM_"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","b",[["Var","c"]]],[]],["Type","_List",[["Var","a"]]]],["Cons","b",[["Type","_Unit",[]]]],[[["Class","Monad"],["Var","b"]]]],"fe_representation":"mapM_ :: (.a -> b c) [.a] -> b () | Monad b"},["Bin",1,["Location","Platform","Control.Monad",["Just",30],["Just",51],"mapM"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","b",[["Var","c"]]],[]],["Type","_List",[["Var","a"]]]],["Cons","b",[["Type","_List",[["Var","c"]]]]],[[["Class","Monad"],["Var","b"]]]],"fe_representation":"mapM :: (.a -> b c) [.a] -> b [c] | Monad b"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad",["Just",32],["Just",57],"forM"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Var","a"]]]],["Func",[["Func",[["Var","a"]],["Cons","b",[["Var","c"]]],[]]],["Cons","b",[["Type","_List",[["Var","c"]]]]],[]],[]],[[["Class","Monad"],["Var","b"]]]],"fe_representation":"forM :: u:([v:a] -> w:((v:a -> b c) -> b [c])) | Monad b, [w<=u, w<=v]"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Control.Monad",["Just",35],["Just",66],"join"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Cons","a",[["Var","b"]]]]]],["Cons","a",[["Var","b"]]],[[["Class","Monad"],["Var","a"]]]],"fe_representation":"join :: (a (a b)) -> a b | Monad a"},["Bin",1,["Location","Platform","Control.Monad",["Just",34],["Just",63],"forever"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"]]]],["Cons","a",[["Var","c"]]],[[["Class","Monad"],["Var","a"]]]],"fe_representation":"forever :: (a b) -> a c | Monad a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad",["Just",36],["Just",69],"zipWithM"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Cons","c",[["Var","d"]]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Cons","c",[["Type","_List",[["Var","d"]]]]],[[["Class","Monad"],["Var","c"]]]],"fe_representation":"zipWithM :: (.a -> .(.b -> c d)) [.a] [.b] -> c [d] | Monad c"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Control.Monad",["Just",41],["Just",85],"liftM"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Cons","c",[["Var","a"]]]],["Cons","c",[["Var","b"]]],[[["Class","Monad"],["Var","c"]]]],"fe_representation":"liftM :: (a -> b) (c a) -> c b | Monad c"},["Bin",3,["Location","Platform","Control.Monad",["Just",39],["Just",79],">=>"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","b",[["Var","c"]]],[]],["Func",[["Var","c"]],["Cons","b",[["Var","d"]]],[]]],["Func",[["Var","a"]],["Cons","b",[["Var","d"]]],[]],[[["Class","Monad"],["Var","b"]]]],"fe_priority":["RightAssoc",1],"fe_representation":"(>=>) infixr 1 :: u:(.a -> b c) (c -> b d) -> v:(.a -> b d) | Monad b, [v<=u]"},["Bin",1,["Location","Platform","Control.Monad",["Just",38],["Just",76],"replicateM"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Cons","a",[["Var","b"]]]],["Cons","a",[["Type","_List",[["Var","b"]]]]],[[["Class","Monad"],["Var","a"]]]],"fe_representation":"replicateM :: .Int (a b) -> a [b] | Monad a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad",["Just",40],["Just",82],"<=<"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Func",[["Var","a"]],["Cons","b",[["Var","c"]]],[]]],["Func",[["Func",[["Var","d"]],["Cons","b",[["Var","a"]]],[]]],["Func",[["Var","d"]],["Cons","b",[["Var","c"]]],[]],[]],[]],[[["Class","Monad"],["Var","b"]]]],"fe_priority":["RightAssoc",1],"fe_representation":"(<=<) infixr 1 :: u:((a -> b c) -> v:(w:(.d -> b a) -> x:(.d -> b c))) | Monad b, [v<=u, x<=w]"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Control.Monad",["Just",43],["Just",91],"liftM3"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Var","d"],[]],[]],[]],["Cons","e",[["Var","a"]]],["Cons","e",[["Var","b"]]],["Cons","e",[["Var","c"]]]],["Cons","e",[["Var","d"]]],[[["Class","Monad"],["Var","e"]]]],"fe_representation":"liftM3 :: (a -> .(b -> .(c -> d))) (e a) (e b) (e c) -> e d | Monad e"},["Bin",1,["Location","Platform","Control.Monad",["Just",42],["Just",88],"liftM2"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","c"],[]],[]],["Cons","d",[["Var","a"]]],["Cons","d",[["Var","b"]]]],["Cons","d",[["Var","c"]]],[[["Class","Monad"],["Var","d"]]]],"fe_representation":"liftM2 :: (a -> .(b -> c)) (d a) (d b) -> d c | Monad d"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad",["Just",44],["Just",94],"liftM4"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Func",[["Var","d"]],["Var","e"],[]],[]],[]],[]],["Cons","f",[["Var","a"]]],["Cons","f",[["Var","b"]]],["Cons","f",[["Var","c"]]],["Cons","f",[["Var","d"]]]],["Cons","f",[["Var","e"]]],[[["Class","Monad"],["Var","f"]]]],"fe_representation":"liftM4 :: (a -> .(b -> .(c -> .(d -> e)))) (f a) (f b) (f c) (f d) -> f e | Monad f"},["Tip"],["Tip"]]]]]]],["Bin",167,["Location","Platform","Data.Array",["Just",24],["Just",72],"takeArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Cons","arr",[["Var","a"]]]],["Cons","arr",[["Var","a"]]],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"takeArr :: !Int !.(arr a) -> .(arr a) | Array arr a"},["Bin",85,["Location","Platform","Control.Monad.RWST",["Just",50],["Just",120],"gets"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Var","a"],[]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"gets :: (s -> a) -> RWST r w s m a | Monoid w & Monad m"},["Bin",24,["Location","Platform","Control.Monad.RWST",["Just",32],["Just",71],"withRWST"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r`"]],["Func",[["Var","s"]],["Type","_Tuple2",[["Var","r"],["Var","s"]]],[]],[]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]]],["Type","RWST",[["Var","r`"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[]],"fe_representation":"withRWST :: (r` -> s -> (r,s)) (RWST r w s m a) -> RWST r` w s m a"},["Bin",12,["Location","Platform","Control.Monad.RWST",["Just",25],["Just",46],"mapRWS"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]],["Type","_Tuple3",[["Var","b"],["Var","s"],["Var","w`"]]],[]],["Type","RWS",[["Var","r"],["Var","w"],["Var","s"],["Var","a"]]]],["Type","RWS",[["Var","r"],["Var","w`"],["Var","s"],["Var","b"]]],[]],"fe_representation":"mapRWS :: ((a,s,w) -> (b,s,w`)) (RWS r w s a) -> RWS r w` s b"},["Bin",6,["Location","Platform","Control.Monad.RWST",["Just",22],["Just",33],"runRWS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWS",[["Var","r"],["Var","w"],["Var","s"],["Var","a"]]],["Var","r"],["Var","s"]],["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]],[]],"fe_representation":"runRWS :: (RWS r w s a) r s -> (a,s,w)"},["Bin",3,["Location","Platform","Control.Monad.RWST",["Just",14],["Just",53],"RWST"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","r"]],["Func",[["Var","s"]],["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]],[]],[]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[]],"fe_representation":"RWST :: (r -> s -> m (a, s, w)) -> RWST r w s m a"},["Bin",1,["Location","Platform","Control.Monad",["Just",46],["Just",100],"ap"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Cons","a",[["Func",[["Var","b"]],["Var","c"],[]]]]],["Func",[["Cons","a",[["Var","b"]]]],["Cons","a",[["Var","c"]]],[]],[]],[[["Class","Monad"],["Var","a"]]]],"fe_representation":"ap :: u:((a (b -> c)) -> v:((a b) -> a c)) | Monad a, [v<=u]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",21],["Just",30],"rws"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Func",[["Var","s"]],["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]],[]],[]]],["Type","RWS",[["Var","r"],["Var","w"],["Var","s"],["Var","a"]]],[]],"fe_representation":"rws :: (r -> s -> (a,s,w)) -> RWS r w s a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Control.Monad.RWST",["Just",23],["Just",36],"evalRWS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWS",[["Var","r"],["Var","w"],["Var","s"],["Var","a"]]],["Var","r"],["Var","s"]],["Type","_Tuple2",[["Var","a"],["Var","w"]]],[]],"fe_representation":"evalRWS :: (RWS r w s a) r s -> (a,w)"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",24],["Just",41],"execRWS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWS",[["Var","r"],["Var","w"],["Var","s"],["Var","a"]]],["Var","r"],["Var","s"]],["Type","_Tuple2",[["Var","s"],["Var","w"]]],[]],"fe_representation":"execRWS :: (RWS r w s a) r s -> (s,w)"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Control.Monad.RWST",["Just",29],["Just",58],"evalRWST"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],["Var","r"],["Var","s"]],["Cons","m",[["Type","_Tuple2",[["Var","a"],["Var","w"]]]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"evalRWST :: (RWST r w s m a) r s -> m (a,w) | Monad m"},["Bin",2,["Location","Platform","Control.Monad.RWST",["Just",26],["Just",49],"withRWS"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r`"]],["Func",[["Var","s"]],["Type","_Tuple2",[["Var","r"],["Var","s"]]],[]],[]],["Type","RWS",[["Var","r"],["Var","w"],["Var","s"],["Var","a"]]]],["Type","RWS",[["Var","r`"],["Var","w"],["Var","s"],["Var","a"]]],[]],"fe_representation":"withRWS :: (r` -> s -> (r,s)) (RWS r w s a) -> RWS r` w s a"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",28],["Just",55],"runRWST"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],["Var","r"],["Var","s"]],["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]],[]],"fe_representation":"runRWST :: (RWST r w s m a) r s -> m (a,s,w)"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Control.Monad.RWST",["Just",30],["Just",63],"execRWST"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],["Var","r"],["Var","s"]],["Cons","m",[["Type","_Tuple2",[["Var","s"],["Var","w"]]]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"execRWST :: (RWST r w s m a) r s -> m (s,w) | Monad m"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",31],["Just",68],"mapRWST"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]]],["Cons","n",[["Type","_Tuple3",[["Var","b"],["Var","s"],["Var","w`"]]]]],[]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]]],["Type","RWST",[["Var","r"],["Var","w`"],["Var","s"],["Var","n"],["Var","b"]]],[]],"fe_representation":"mapRWST :: ((m (a,s,w)) -> n (b,s,w`)) (RWST r w s m a) -> RWST r w` s n b"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Control.Monad.RWST",["Just",42],["Just",95],"pass"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Type","_Tuple2",[["Var","a"],["Func",[["Var","w"]],["Var","w"],[]]]]]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"pass :: (RWST r w s m (a,w -> w)) -> RWST r w s m a | Monoid w & Monad m"},["Bin",5,["Location","Platform","Control.Monad.RWST",["Just",37],["Just",81],"asks"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Var","a"],[]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"asks :: (r -> a) -> RWST r w s m a | Monoid w & Monad m"},["Bin",2,["Location","Platform","Control.Monad.RWST",["Just",35],["Just",75],"ask"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","r"]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"ask :: RWST r w s m r | Monoid w & Monad m"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",36],["Just",78],"local"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Var","r"],[]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"local :: (r -> r) (RWST r w s m a) -> RWST r w s m a | Monoid w & Monad m"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Control.Monad.RWST",["Just",40],["Just",87],"tell"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","w"]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Type","_Unit",[]]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"tell :: w -> RWST r w s m () | Monoid w & Monad m"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",41],["Just",90],"listen"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Type","_Tuple2",[["Var","a"],["Var","w"]]]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"listen :: (RWST r w s m a) -> RWST r w s m (a,w) | Monoid w & Monad m"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Control.Monad.RWST",["Just",47],["Just",109],"get"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","s"]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"get :: RWST r w s m s | Monoid w & Monad m"},["Bin",2,["Location","Platform","Control.Monad.RWST",["Just",43],["Just",100],"listens"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","w"]],["Var","b"],[]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"listens :: (w -> b) (RWST r w s m a) -> RWST r w s m (a,b) | Monoid w & Monad m"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",44],["Just",105],"censor"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","w"]],["Var","w"],[]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"censor :: (w -> w) (RWST r w s m a) -> RWST r w s m a | Monoid w & Monad m"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Control.Monad.RWST",["Just",48],["Just",112],"put"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Type","_Unit",[]]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"put :: s -> RWST r w s m () | Monoid w & Monad m"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",49],["Just",115],"modify"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Var","s"],[]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Type","_Unit",[]]]],[[["Class","Monoid"],["Var","w"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"modify :: (s -> s) -> RWST r w s m () | Monoid w & Monad m"},["Tip"],["Tip"]]]]]],["Bin",60,["Location","Platform","Control.Monad.State",["Just",24],["Just",58],"mapState"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_Tuple2",[["Var","a"],["Var","s"]]]],["Type","_Tuple2",[["Var","b"],["Var","s"]]],[]],["Type","StateT",[["Var","s"],["Type","Identity",[]],["Var","a"]]]],["Type","StateT",[["Var","s"],["Type","Identity",[]],["Var","b"]]],[]],"fe_representation":"mapState :: ((a,s) -> (b,s)) .(StateT s Identity a) -> StateT s Identity b"},["Bin",27,["Location","Platform","Control.Monad.Reader",["Just",22],["Just",53],"local"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Func",[["Var","a"]],["Var","b"],[]]],["Func",[["Type","ReaderT",[["Var","b"],["Var","c"],["Var","d"]]]],["Type","ReaderT",[["Var","a"],["Var","c"],["Var","d"]]],[]],[]],[]],"fe_representation":"local :: u:((.a -> .b) -> v:(.(ReaderT .b .c .d) -> .(ReaderT .a .c .d))), [v<=u]"},["Bin",13,["Location","Platform","Control.Monad.Reader",["Just",18],["Just",44],"withReaderT"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","ReaderT",[["Var","b"],["Var","c"],["Var","d"]]]],["Type","ReaderT",[["Var","a"],["Var","c"],["Var","d"]]],[]],"fe_representation":"withReaderT :: (.a -> .b) .(ReaderT .b .c .d) -> .(ReaderT .a .c .d)"},["Bin",9,["Location","Platform","Control.Monad.RWST",["Just",55],["Just",132],"liftCatch"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]]],["Func",[["Func",[["Var","e"]],["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]],[]]],["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]],[]],[]],["Type","RWST",[["Var","l"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],["Func",[["Var","e"]],["Type","RWST",[["Var","l"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[]]],["Type","RWST",[["Var","l"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[]],"fe_representation":"liftCatch :: ((m (a,s,w)) -> (e -> m (a,s,w)) -> m (a,s,w)) (RWST l w s m a) (e -> RWST l w s m a) -> RWST l w s m a"},["Bin",2,["Location","Platform","Control.Monad.RWST",["Just",53],["Just",126],"liftCallCC"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Func",[["Func",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]],["Cons","m",[["Type","_Tuple3",[["Var","b"],["Var","s"],["Var","w"]]]]],[]]],["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]],[]]],["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]],[]],["Func",[["Func",[["Var","a"]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","b"]]],[]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[[["Class","Monoid"],["Var","w"]]]],"fe_representation":"liftCallCC :: ((((a,s,w) -> m (b,s,w)) -> m (a,s,w)) -> m (a,s,w)) ((a -> RWST r w s m b) -> RWST r w s m a) -> RWST r w s m a | Monoid w"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",54],["Just",129],"liftCallCC`"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Func",[["Func",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]],["Cons","m",[["Type","_Tuple3",[["Var","b"],["Var","s"],["Var","w"]]]]],[]]],["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]],[]]],["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]],[]],["Func",[["Func",[["Var","a"]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","b"]]],[]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[]]],["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]]],[[["Class","Monoid"],["Var","w"]]]],"fe_representation":"liftCallCC` :: ((((a,s,w) -> m (b,s,w)) -> m (a,s,w)) -> m (a,s,w)) ((a -> RWST r w s m b) -> RWST r w s m a) -> RWST r w s m a | Monoid w"},["Tip"],["Tip"]]],["Bin",6,["Location","Platform","Control.Monad.Reader",["Just",14],["Just",29],"reader"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]]],["Type","ReaderT",[["Var","a"],["Type","Identity",[]],["Var","b"]]],[]],"fe_representation":"reader :: (.a -> .b) -> .(ReaderT .a .Identity .b)"},["Bin",2,["Location","Platform","Control.Monad.Reader",["Just",9],["Just",9],"ReaderT"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","r"]],["Cons","m",[["Var","a"]]],[]]],["Type","ReaderT",[["Var","r"],["Var","m"],["Var","a"]]],[]],"fe_representation":"ReaderT :: (r -> m a) -> ReaderT r m a"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.Reader",["Just",13],["Just",26],"runReaderT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ReaderT",[["Var","a"],["Var","b"],["Var","c"]]]],["Func",[["Var","a"]],["Cons","b",[["Var","c"]]],[]],[]],"fe_representation":"runReaderT :: .(ReaderT .a u:b .c) -> .a -> u:(b .c)"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Control.Monad.Reader",["Just",16],["Just",41],"mapReaderT"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Cons","a",[["Var","b"]]]],["Cons","c",[["Var","d"]]],[]],["Type","ReaderT",[["Var","e"],["Var","a"],["Var","b"]]]],["Type","ReaderT",[["Var","e"],["Var","c"],["Var","d"]]],[]],"fe_representation":"mapReaderT :: (u:(a .b) -> v:(c .d)) .(ReaderT .e u:a .b) -> .(ReaderT .e v:c .d)"},["Bin",1,["Location","Platform","Control.Monad.Reader",["Just",15],["Just",32],"runReader"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ReaderT",[["Var","a"],["Type","Identity",[]],["Var","b"]]]],["Func",[["Var","a"]],["Var","b"],[]],[]],"fe_representation":"runReader :: .(ReaderT .a u:Identity v:b) -> .(.a -> v:b), [u<=v]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad.Reader",["Just",17],["Just",35],"mapReader"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]]],["Func",[["Type","ReaderT",[["Var","c"],["Type","Identity",[]],["Var","a"]]]],["Type","ReaderT",[["Var","c"],["Type","Identity",[]],["Var","b"]]],[]],[]],"fe_representation":"mapReader :: (u:a -> .b) -> .(.(ReaderT .c v:Identity u:a) -> .(ReaderT .c .Identity .b)), [v<=u]"},["Tip"],["Tip"]]]]],["Bin",3,["Location","Platform","Control.Monad.Reader",["Just",20],["Just",47],"liftReaderT"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"]]]],["Type","ReaderT",[["Var","c"],["Var","a"],["Var","b"]]],[]],"fe_representation":"liftReaderT :: (a .b) -> .(ReaderT .c a .b)"},["Bin",1,["Location","Platform","Control.Monad.Reader",["Just",19],["Just",38],"withReader"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Func",[["Var","a"]],["Var","b"],[]]],["Func",[["Type","ReaderT",[["Var","b"],["Var","c"],["Var","d"]]]],["Type","ReaderT",[["Var","a"],["Var","c"],["Var","d"]]],[]],[]],[]],"fe_representation":"withReader :: u:((.a -> .b) -> v:(.(ReaderT .b .c .d) -> .(ReaderT .a .c .d))), [v<=u]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad.Reader",["Just",21],["Just",50],"ask"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ReaderT",[["Var","a"],["Var","b"],["Var","a"]]],[[["Class","Monad"],["Var","b"]]]],"fe_representation":"ask :: .(ReaderT a b a) | Monad b"},["Tip"],["Tip"]]]],["Bin",13,["Location","Platform","Control.Monad.State",["Just",18],["Just",40],"runState"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StateT",[["Var","s"],["Type","Identity",[]],["Var","a"]]],["Var","s"]],["Type","_Tuple2",[["Var","a"],["Var","s"]]],[]],"fe_representation":"runState :: .(StateT s Identity a) s -> (a,s)"},["Bin",7,["Location","Platform","Control.Monad.State",["Just",15],["Just",31],"put"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Type","StateT",[["Var","s"],["Var","m"],["Type","_Unit",[]]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"put :: s -> StateT s m () | Monad m"},["Bin",4,["Location","Platform","Control.Monad.State",["Just",9],["Nothing"],"StateT"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","s"]],["Cons","m",[["Type","_Tuple2",[["Var","a"],["Var","s"]]]]],[]]],["Type","StateT",[["Var","s"],["Var","m"],["Var","a"]]],[]],"fe_representation":"StateT :: (s -> m (a, s)) -> StateT s m a"},["Bin",1,["Location","Platform","Control.Monad.Reader",["Just",23],["Just",56],"asks"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]]],["Type","ReaderT",[["Var","a"],["Var","c"],["Var","b"]]],[[["Class","Monad"],["Var","c"]]]],"fe_representation":"asks :: (a -> b) -> ReaderT a c b | Monad c"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Control.Monad.State",["Just",14],["Just",28],"getState"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","StateT",[["Var","s"],["Var","m"],["Var","s"]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"getState :: StateT s m s | Monad m"},["Bin",1,["Location","Platform","Control.Monad.State",["Just",13],["Just",25],"state"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Type","_Tuple2",[["Var","a"],["Var","s"]]],[]]],["Type","StateT",[["Var","s"],["Var","m"],["Var","a"]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"state :: (s -> .(a,s)) -> StateT s m a | Monad m"},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Control.Monad.State",["Just",16],["Just",34],"modify"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Var","s"],[]]],["Type","StateT",[["Var","s"],["Var","m"],["Type","_Unit",[]]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"modify :: (s -> s) -> StateT s m () | Monad m"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.State",["Just",17],["Just",37],"gets"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Var","a"],[]]],["Type","StateT",[["Var","s"],["Var","m"],["Var","a"]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"gets :: (s -> a) -> StateT s m a | Monad m"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Control.Monad.State",["Just",21],["Just",49],"evalStateT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StateT",[["Var","s"],["Var","m"],["Var","a"]]],["Var","s"]],["Cons","m",[["Var","a"]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"evalStateT :: .(StateT s m a) s -> m a | Monad m"},["Bin",2,["Location","Platform","Control.Monad.State",["Just",19],["Just",43],"runStateT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StateT",[["Var","s"],["Var","m"],["Var","a"]]],["Var","s"]],["Cons","m",[["Type","_Tuple2",[["Var","a"],["Var","s"]]]]],[]],"fe_representation":"runStateT :: u:(StateT v:s m a) v:s -> m w:(a,v:s), [w<=v, u<=w]"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.State",["Just",20],["Just",46],"evalState"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StateT",[["Var","s"],["Type","Identity",[]],["Var","a"]]],["Var","s"]],["Var","a"],[]],"fe_representation":"evalState :: .(StateT s Identity a) s -> a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Control.Monad.State",["Just",22],["Just",52],"execState"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StateT",[["Var","s"],["Type","Identity",[]],["Var","a"]]],["Var","s"]],["Var","s"],[]],"fe_representation":"execState :: .(StateT s Identity a) s -> s"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.State",["Just",23],["Just",55],"execStateT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StateT",[["Var","s"],["Var","m"],["Var","a"]]],["Var","s"]],["Cons","m",[["Var","s"]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"execStateT :: .(StateT s m a) s -> m s | Monad m"},["Tip"],["Tip"]]]]]],["Bin",32,["Location","Platform","Crypto.Hash.SHA1",["Just",31],["Just",18],"sha1StringDigest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","SHA1Digest",[]],[]],"fe_representation":"sha1StringDigest :: String -> SHA1Digest","fe_documentation":["FunctionDoc",["Just","Compute the SHA1 digest of a string"],["The message for which to compute the digest"],[],["Just","The raw 160 bit digest"]]},["Bin",22,["Location","Platform","Control.Monad.Writer",["Just",30],["Just",62],"listens"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","WriterT",[["Var","a"],["Var","c"],["Var","d"]]]],["Type","WriterT",[["Var","a"],["Var","c"],["Type","_Tuple2",[["Var","d"],["Var","b"]]]]],[[["Class","Monad"],["Var","c"]],[["Class","Monoid"],["Var","a"]]]],"fe_representation":"listens :: (a -> b) .(WriterT a c d) -> WriterT a c (d,b) | Monad c & Monoid a"},["Bin",14,["Location","Platform","Control.Monad.Writer",["Just",22],["Just",36],"runWriter"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","WriterT",[["Var","a"],["Type","Identity",[]],["Var","b"]]]],["Type","_Tuple2",[["Var","b"],["Var","a"]]],[]],[]],"fe_representation":"runWriter :: .((WriterT a .Identity b) -> (b,a))"},["Bin",6,["Location","Platform","Control.Monad.State",["Just",27],["Just",67],"withStateT"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Var","s"],[]],["Type","StateT",[["Var","s"],["Var","m"],["Var","c"]]]],["Type","StateT",[["Var","s"],["Var","m"],["Var","c"]]],[]],"fe_representation":"withStateT :: (s -> s) .(StateT s m c) -> StateT s m c"},["Bin",2,["Location","Platform","Control.Monad.State",["Just",25],["Just",61],"mapStateT"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Cons","m",[["Type","_Tuple2",[["Var","a"],["Var","s"]]]]]],["Cons","m`",[["Type","_Tuple2",[["Var","b"],["Var","s"]]]]],[]],["Type","StateT",[["Var","s"],["Var","m"],["Var","a"]]]],["Type","StateT",[["Var","s"],["Var","m`"],["Var","b"]]],[]],"fe_representation":"mapStateT :: ((m (a,s)) -> m` (b,s)) .(StateT s m a) -> StateT s m` b"},["Tip"],["Bin",1,["Location","Platform","Control.Monad.State",["Just",26],["Just",64],"withState"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Var","s"],[]],["Type","StateT",[["Var","s"],["Var","m"],["Var","c"]]]],["Type","StateT",[["Var","s"],["Var","m"],["Var","c"]]],[]],"fe_representation":"withState :: (s -> s) .(StateT s m c) -> StateT s m c"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Control.Monad.Writer",["Just",20],["Just",30],"runWriterT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","WriterT",[["Var","a"],["Var","b"],["Var","c"]]]],["Cons","b",[["Type","_Tuple2",[["Var","c"],["Var","a"]]]]],[]],"fe_representation":"runWriterT :: (WriterT a u:b c) -> u:(b (c,a))"},["Bin",1,["Location","Platform","Control.Monad.Writer",["Just",10],["Just",11],"WriterT"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Cons","m",[["Type","_Tuple2",[["Var","a"],["Var","w"]]]]]],["Type","WriterT",[["Var","w"],["Var","m"],["Var","a"]]],[]],"fe_representation":"WriterT :: (m (a, w)) -> WriterT w m a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad.Writer",["Just",21],["Just",33],"writer"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]],["Type","WriterT",[["Var","b"],["Type","Identity",[]],["Var","a"]]],[]],[]],"fe_representation":"writer :: .(.(a,b) -> WriterT b .Identity a)"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Control.Monad.Writer",["Just",26],["Just",48],"mapWriterT"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Cons","a",[["Type","_Tuple2",[["Var","b"],["Var","c"]]]]]],["Cons","d",[["Type","_Tuple2",[["Var","e"],["Var","f"]]]]],[]],["Type","WriterT",[["Var","c"],["Var","a"],["Var","b"]]]],["Type","WriterT",[["Var","f"],["Var","d"],["Var","e"]]],[]],"fe_representation":"mapWriterT :: .(u:(a (b,c)) -> v:(d (e,f))) (WriterT c u:a b) -> WriterT f v:d e"},["Bin",3,["Location","Platform","Control.Monad.Writer",["Just",24],["Just",42],"mapWriter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Var","c"],["Var","d"]]],[]]],["Func",[["Type","WriterT",[["Var","b"],["Type","Identity",[]],["Var","a"]]]],["Type","WriterT",[["Var","d"],["Type","Identity",[]],["Var","c"]]],[]],[]],"fe_representation":"mapWriter :: u:((a,b) -> .(c,d)) -> v:((WriterT b .Identity a) -> WriterT d .Identity c), [v<=u]"},["Bin",1,["Location","Platform","Control.Monad.Writer",["Just",23],["Just",39],"execWriter"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","WriterT",[["Var","a"],["Type","Identity",[]],["Var","b"]]]],["Var","a"],[]],"fe_representation":"execWriter :: (WriterT a .Identity b) -> a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad.Writer",["Just",25],["Just",45],"execWriterT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","WriterT",[["Var","a"],["Var","b"],["Var","c"]]]],["Cons","b",[["Var","a"]]],[[["Class","Monad"],["Var","b"]]]],"fe_representation":"execWriterT :: .(WriterT a b c) -> b a | Monad b"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Control.Monad.Writer",["Just",28],["Just",54],"listen"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","WriterT",[["Var","a"],["Var","b"],["Var","c"]]]],["Type","WriterT",[["Var","a"],["Var","b"],["Type","_Tuple2",[["Var","c"],["Var","a"]]]]],[[["Class","Monad"],["Var","b"]]]],"fe_representation":"listen :: .(WriterT a b c) -> .(WriterT a b (c,a)) | Monad b"},["Bin",1,["Location","Platform","Control.Monad.Writer",["Just",27],["Just",51],"tell"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","WriterT",[["Var","a"],["Var","b"],["Type","_Unit",[]]]],[[["Class","Monad"],["Var","b"]]]],"fe_representation":"tell :: a -> .(WriterT a b ()) | Monad b"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad.Writer",["Just",29],["Just",58],"pass"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","WriterT",[["Var","a"],["Var","b"],["Type","_Tuple2",[["Var","c"],["Func",[["Var","a"]],["Var","d"],[]]]]]]],["Type","WriterT",[["Var","d"],["Var","b"],["Var","c"]]],[[["Class","Monad"],["Var","b"]]]],"fe_representation":"pass :: .(WriterT a b (c,a -> d)) -> .(WriterT d b c) | Monad b"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Crypto.Hash.MD5",["Just",29],["Just",210],"md5StringDigest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","MD5Digest",[]],[]],"fe_representation":"md5StringDigest :: String -> MD5Digest","fe_documentation":["FunctionDoc",["Just","Compute the MD5 digest of a string"],["The message for which to compute the digest"],[],["Just","The raw 128 bit digest"]]},["Bin",3,["Location","Platform","Crypto.Hash.MD5",["Just",12],["Nothing"],"MD5Digest"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]]],["Type","MD5Digest",[]],[]],"fe_representation":"MD5Digest :: {#Char} -> MD5Digest"},["Bin",1,["Location","Platform","Control.Monad.Writer",["Just",31],["Just",65],"censor"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","WriterT",[["Var","a"],["Var","c"],["Var","d"]]]],["Type","WriterT",[["Var","b"],["Var","c"],["Var","d"]]],[[["Class","Monad"],["Var","c"]],[["Class","Monoid"],["Var","a"]]]],"fe_representation":"censor :: (a -> b) .(WriterT a c d) -> .(WriterT b c d) | Monad c & Monoid a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Crypto.Hash.MD5",["Just",21],["Just",9],"md5"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"md5 :: String -> String","fe_documentation":["FunctionDoc",["Just","Convenient shorthand for computing the MD5 digest of a string and\nreturning the ascii hexadecimal representation"],["The message for which to compute the digest"],[],["Just","The ascii hex representation of the message digest"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Crypto.Hash.SHA1",["Just",14],["Just",13],"SHA1Digest"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]]],["Type","SHA1Digest",[]],[]],"fe_representation":"SHA1Digest :: {#Char} -> SHA1Digest"},["Bin",1,["Location","Platform","Crypto.Hash.MD5",["Just",39],["Just",259],"md5FileDigest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Type","MD5Digest",[]]]],["Uniq",["Var","env"]]]],[[["Class","FileSystem"],["Var","env"]]]],"fe_representation":"md5FileDigest :: FilePath *env -> (!MaybeError FileError MD5Digest,!*env) | FileSystem env","fe_documentation":["FunctionDoc",["Just","Compute the MD5 digest of the contents of a file"],["The path of the file to get compute the digest of","A filesystem environment"],[],["Just","The raw 128 bit digest"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Crypto.Hash.SHA1",["Just",23],["Just",15],"sha1"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"sha1 :: String -> String","fe_documentation":["FunctionDoc",["Just","Convenient shorthand for computing the SHA1 digest of a string and\nreturning the ascii hexadecimal representation"],["The message for which to compute the digest"],[],["Just","The ascii hex representation of the message digest"]]},["Tip"],["Tip"]]]]],["Bin",9,["Location","Platform","Data.Array",["Just",15],["Just",38],"foldrUArrWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Int",[]]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Uniq",["Cons","arr",[["Var","a"]]]]],["Uniq",["Type","_Tuple2",[["Var","b"],["Uniq",["Cons","arr",[["Var","a"]]]]]]],[]],[]],[]],[]],["Var","b"],["Uniq",["Cons","arr",[["Var","a"]]]]],["Uniq",["Type","_Tuple2",[["Var","b"],["Uniq",["Cons","arr",[["Var","a"]]]]]]],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"foldrUArrWithKey :: !(Int -> a -> .(.b -> .(*(arr a) -> *(.b,*(arr a))))) .b *(arr a) -> *(.b,*(arr a)) | Array arr a"},["Bin",5,["Location","Platform","Data.Array",["Just",10],["Just",22],"foldrArrWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Int",[]]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],[]],["Var","b"],["Cons","arr",[["Var","a"]]]],["Var","b"],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"foldrArrWithKey :: !(Int -> a -> .(.b -> .b)) !.b !.(arr a) -> .b | Array arr a"},["Bin",3,["Location","Platform","Data.Array",["Just",6],["Just",5],"mapArrSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Uniq",["Var","st"]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Var","st"]]]]],[]],[]],["Uniq",["Cons","arr",[["Var","a"]]]],["Uniq",["Var","st"]]],["Uniq",["Type","_Tuple2",[["Uniq",["Cons","arr",[["Var","a"]]]],["Uniq",["Var","st"]]]]],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"mapArrSt :: !(.a -> .(*st -> *(!.a,!*st))) !*(arr .a) !*st -> *(!*(arr .a),!*st) | Array arr a"},["Bin",1,["Location","Platform","Crypto.Hash.SHA1",["Just",41],["Just",94],"sha1FileDigest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Type","SHA1Digest",[]]]],["Uniq",["Var","env"]]]],[[["Class","FileSystem"],["Var","env"]]]],"fe_representation":"sha1FileDigest :: FilePath *env -> (!MaybeError FileError SHA1Digest,!*env) | FileSystem env","fe_documentation":["FunctionDoc",["Just","Compute the SHA1 digest of the contents of a file"],["The path of the file to get compute the digest of","A filesystem environment"],[],["Just","The raw 160 bit digest"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Array",["Just",8],["Just",19],"foldrArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Var","b"],["Cons","arr",[["Var","a"]]]],["Var","b"],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"foldrArr :: !(a -> .b -> .b) !.b !.(arr a) -> .b | Array arr a"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Array",["Just",12],["Just",34],"foldrUArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Uniq",["Cons","arr",[["Var","a"]]]]],["Uniq",["Type","_Tuple2",[["Var","b"],["Uniq",["Cons","arr",[["Var","a"]]]]]]],[]],[]],[]],["Var","b"],["Uniq",["Cons","arr",[["Var","a"]]]]],["Uniq",["Type","_Tuple2",[["Var","b"],["Uniq",["Cons","arr",[["Var","a"]]]]]]],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"foldrUArr :: !(a -> .(.b -> .(*(arr a) -> *(.b,*(arr a))))) .b *(arr a) -> *(.b,*(arr a)) | Array arr a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Array",["Just",20],["Just",54],"foldlArrWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Int",[]]],["Func",[["Var","b"]],["Func",[["Var","a"]],["Var","b"],[]],[]],[]],["Var","b"],["Cons","arr",[["Var","a"]]]],["Var","b"],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"foldlArrWithKey :: !(Int -> .b -> .(a -> .b)) !.b !.(arr a) -> .b | Array arr a"},["Bin",1,["Location","Platform","Data.Array",["Just",18],["Just",51],"foldlArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Func",[["Var","a"]],["Var","b"],[]],[]],["Var","b"],["Cons","arr",[["Var","a"]]]],["Var","b"],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"foldlArr :: !(.b -> a -> .b) !.b !.(arr a) -> .b | Array arr a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Array",["Just",22],["Just",67],"reverseArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","arr",[["Var","a"]]]],["Cons","arr",[["Var","a"]]],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"reverseArr :: !.(arr a) -> .(arr a) | Array arr a"},["Tip"],["Tip"]]]]]]],["Bin",81,["Location","Platform","Data.Eq",["Just",5],["Just",5],"\/"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[[["Class","=="],["Var","a"]]]],"fe_priority":["NoAssoc",4],"fe_representation":"(\/) infix 4 :: !a !a -> Bool | == a"},["Bin",30,["Location","Platform","Data.Complex",["Just",57],["Just",141],"cis"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Complex",[["Var","a"]]],[[["Class","cos"],["Var","a"]],[["Class","sin"],["Var","a"]]]],"fe_representation":"cis :: a -> Complex a | cos a & sin a"},["Bin",17,["Location","Platform","Data.CircularStack",["Just",6],["Nothing"],"stackData"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CircularStack",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":".stackData :: (CircularStack a) -> IntMap a"},["Bin",5,["Location","Platform","Data.CircularStack",["Just",6],["Nothing"],"actualSize"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CircularStack",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":".actualSize :: (CircularStack a) -> Int"},["Bin",2,["Location","Platform","Data.Array",["Just",28],["Just",98],"appendArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","arr",[["Var","a"]]],["Cons","arr",[["Var","a"]]]],["Cons","arr",[["Var","a"]]],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"appendArr :: !(arr a) !(arr a) -> arr a | Array arr a"},["Bin",1,["Location","Platform","Data.Array",["Just",26],["Just",83],"mapArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","a"],[]],["Cons","arr",[["Var","a"]]]],["Cons","arr",[["Var","a"]]],[[["Class","Array"],["Cons","arr",[["Var","a"]]]]]],"fe_representation":"mapArr :: !(a -> a) !(arr a) -> arr a | Array arr a"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","Platform","Data.CircularStack",["Just",6],["Nothing"],"nextIdx"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CircularStack",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":".nextIdx :: (CircularStack a) -> Int"},["Bin",1,["Location","Platform","Data.CircularStack",["Just",6],["Nothing"],"maxSize"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CircularStack",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":".maxSize :: (CircularStack a) -> Int"},["Tip"],["Tip"]],["Tip"]]],["Bin",11,["Location","Platform","Data.Complex",["Just",6],["Just",13],":+"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Complex",[["Var","a"]]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":":+ infixl 6 :: a a -> Complex a"},["Bin",7,["Location","Platform","Data.CircularStack",["Just",19],["Just",37],"peek"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CircularStack",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"peek :: (CircularStack a) -> Maybe a"},["Bin",3,["Location","Platform","Data.CircularStack",["Just",15],["Just",17],"push"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","CircularStack",[["Var","a"]]]],["Type","CircularStack",[["Var","a"]]],[]],"fe_representation":"push :: a (CircularStack a) -> CircularStack a"},["Bin",1,["Location","Platform","Data.CircularStack",["Just",13],["Just",9],"newStack"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","CircularStack",[["Var","a"]]],[]],"fe_representation":"newStack :: !Int -> CircularStack a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.CircularStack",["Just",17],["Just",27],"pop"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CircularStack",[["Var","a"]]]],["Type","_Tuple2",[["Type","Maybe",[["Var","a"]]],["Type","CircularStack",[["Var","a"]]]]],[]],"fe_representation":"pop :: (CircularStack a) -> (Maybe a,CircularStack a)"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.CircularStack",["Just",23],["Just",59],"fromList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","CircularStack",[["Var","a"]]],[]],"fe_representation":"fromList :: [a] -> CircularStack a"},["Bin",1,["Location","Platform","Data.CircularStack",["Just",21],["Just",47],"emptyStack"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CircularStack",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"emptyStack :: (CircularStack a) -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.CircularStack",["Just",25],["Just",50],"toList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CircularStack",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"toList :: (CircularStack a) -> [a]"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Complex",["Just",54],["Just",135],"imagPart"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Complex",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"imagPart :: (Complex a) -> a"},["Bin",1,["Location","Platform","Data.Complex",["Just",53],["Nothing"],"realPart"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Complex",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"realPart :: (Complex a) -> a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Complex",["Just",56],["Just",138],"mkPolar"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Complex",[["Var","a"]]],[[["Class","cos"],["Var","a"]],[["Class","sin"],["Var","a"]],[["Class","*"],["Var","a"]]]],"fe_representation":"mkPolar :: a a -> Complex a | cos a & sin a & * a"},["Tip"],["Tip"]]]]],["Bin",12,["Location","Platform","Data.Complex",["Just",62],["Just",159],"conjugate"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Complex",[["Var","a"]]]],["Type","Complex",[["Var","a"]]],[[["Class","~"],["Var","a"]]]],"fe_representation":"conjugate :: (Complex a) -> Complex a | ~ a"},["Bin",3,["Location","Platform","Data.Complex",["Just",59],["Just",147],"magnitude"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Complex",[["Var","a"]]]],["Var","a"],[[["Class","sqrt"],["Var","a"]],[["Class","*"],["Var","a"]],[["Class","+"],["Var","a"]]]],"fe_representation":"magnitude :: (Complex a) -> a | sqrt a & * a & + a"},["Bin",1,["Location","Platform","Data.Complex",["Just",58],["Just",144],"polar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Complex",[["Var","a"]]]],["Type","_Tuple2",[["Var","a"],["Var","a"]]],[[["Class","Ord"],["Var","a"]],[["Class","Eq"],["Var","a"]],[["Class","atan"],["Var","a"]],[["Class","sqrt"],["Var","a"]],[["Class","MultDiv"],["Var","a"]],[["Class","PlusMin"],["Var","a"]],[["Class","pi"],["Var","a"]]]],"fe_representation":"polar :: (Complex a) -> (a,a) | Ord a & Eq a & atan a & sqrt a & MultDiv a & PlusMin a & pi a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Complex",["Just",60],["Just",150],"phase"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Complex",[["Var","a"]]]],["Var","a"],[[["Class","Ord"],["Var","a"]],[["Class","Eq"],["Var","a"]],[["Class","atan"],["Var","a"]],[["Class","MultDiv"],["Var","a"]],[["Class","PlusMin"],["Var","a"]],[["Class","pi"],["Var","a"]]]],"fe_representation":"phase :: (Complex a) -> a | Ord a & Eq a & atan a & MultDiv a & PlusMin a & pi a"},["Tip"],["Tip"]]],["Bin",8,["Location","Platform","Data.Either",["Just",20],["Just",20],"either"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","c"],[]],["Func",[["Var","b"]],["Var","c"],[]],["Type","Either",[["Var","a"],["Var","b"]]]],["Var","c"],[]],"fe_representation":"either :: (.a -> .c) (.b -> .c) (Either .a .b) -> .c"},["Bin",3,["Location","Platform","Data.Either",["Just",12],["Nothing"],"Left"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","Either",[["Var","a"],["Var","b"]]],[]],"fe_representation":"Left :: a -> Either a b"},["Bin",1,["Location","Platform","Data.Data",["Just",8],["Just",10],"=+?="],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[]],"fe_priority":["NoAssoc",6],"fe_representation":"(=+?=) infix 6 :: a a -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Either",["Just",12],["Nothing"],"Right"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","b"]],["Type","Either",[["Var","a"],["Var","b"]]],[]],"fe_representation":"Right :: b -> Either a b"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Data.Encoding.RunLength",["Just",7],["Just",23],"encode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]]]],[[["Class","=="],["Var","a"]]]],"fe_representation":"encode :: ![a] -> [(Int,a)] | == a"},["Bin",2,["Location","Platform","Data.Encoding.RunLength",["Just",6],["Just",15],"decodeInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Type","Int",[]]]],[]],"fe_representation":"decodeInt :: ![Int] -> [Int]"},["Bin",1,["Location","Platform","Data.Encoding.RunLength",["Just",5],["Just",5],"encodeInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Type","Int",[]]]],[]],"fe_representation":"encodeInt :: ![Int] -> [Int]"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Data.Encoding.RunLength",["Just",8],["Just",33],"decode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]]]]],["Type","_List",[["Var","a"]]],[[["Class","=="],["Var","a"]]]],"fe_representation":"decode :: ![(!Int,!a)] -> [a] | == a"},["Tip"],["Tip"]]]]]],["Bin",50,["Location","Platform","Data.Foldable",["Just",165],["Just",249],"sum"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Var","a"]]]],["Var","a"],[[["Class","Foldable"],["Var","t"]],[["Class","+"],["Var","a"]],[["Class","zero"],["Var","a"]]]],"fe_representation":"sum :: (t a) -> a | Foldable t & + a & zero a"},["Bin",32,["Location","Platform","Data.Error",["Just",82],["Just",58],"combineErrors"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MaybeError",[["Var","e"],["Var","a"]]],["Type","MaybeError",[["Var","e"],["Var","b"]]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","MaybeError",[["Var","e"],["Var","c"]]],[]],[]]],["Type","MaybeError",[["Var","e"],["Var","c"]]],[]],"fe_representation":"combineErrors :: !(MaybeError e a) (MaybeError e b) (a -> b -> MaybeError e c) -> MaybeError e c","fe_documentation":["FunctionDoc",["Just","Combines two MaybeError values.\nIf one of the input is an Error, this Error is given as result (If both are, the first is given)."],["The first input","The second input","A combination function for the inputs if they are Ok"],[],["Just","The error of one of the inputs or the result of the combination"]]},["Bin",11,["Location","Platform","Data.Error",["Just",33],["Just",34],"fromError"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MaybeError",[["Var","a"],["Var","b"]]]],["Var","a"],[]],"fe_representation":"fromError :: !(MaybeError .a .b) -> .a","fe_documentation":["FunctionDoc",["Just","Return the contents of an Error value and abort at run-time otherwise."],[],[],["Nothing"]]},["Bin",5,["Location","Platform","Data.Error",["Just",8],["Nothing"],"Ok"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","b"]],["Type","MaybeError",[["Var","a"],["Var","b"]]],[]],"fe_representation":"Ok :: b -> MaybeError a b"},["Bin",1,["Location","Platform","Data.Error",["Just",8],["Nothing"],"Error"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","MaybeError",[["Var","a"],["Var","b"]]],[]],"fe_representation":"Error :: a -> MaybeError a b"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","Data.Error",["Just",23],["Just",26],"isError"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MaybeError",[["Var","a"],["Var","b"]]]],["Type","Bool",[]],[]],"fe_representation":"isError :: !(MaybeError a b) -> Bool","fe_documentation":["FunctionDoc",["Just","Return True when the argument is an Error value and return False otherwise."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","Data.Error",["Just",19],["Just",22],"isOk"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MaybeError",[["Var","a"],["Var","b"]]]],["Type","Bool",[]],[]],"fe_representation":"isOk :: !(MaybeError a b) -> Bool","fe_documentation":["FunctionDoc",["Just","Return True when the argument is an Ok value and return False otherwise."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Error",["Just",28],["Just",30],"fromOk"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MaybeError",[["Var","a"],["Var","b"]]]],["Var","b"],[]],"fe_representation":"fromOk :: !(MaybeError .a .b) -> .b","fe_documentation":["FunctionDoc",["Just","Return the contents of an Ok value and abort at run-time otherwise."],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.Error",["Just",53],["Just",45],"okSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","st"]],["Func",[["Var","a"]],["Func",[["Uniq",["Var","st"]]],["Uniq",["Var","st"]],[]],[]],["Type","MaybeError",[["Var","e"],["Var","a"]]]],["Uniq",["Var","st"]],[]],"fe_representation":"okSt :: *st (.a -> *st -> *st) (MaybeError .e .a) -> *st","fe_documentation":["FunctionDoc",["Just","Returns st on Error, state continuation on OK"],[],[],["Nothing"]]},["Bin",2,["Location","Platform","Data.Error",["Just",39],["Just",38],"liftError"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MaybeError",[["Var","a"],["Var","b"]]]],["Type","MaybeError",[["Var","a"],["Var","c"]]],[]],"fe_representation":"liftError :: !(MaybeError .a .b) -> MaybeError .a .c","fe_documentation":["FunctionDoc",["Just","Lifts a (MaybeError a b) to another MaybeError"],[],[],["Nothing"]]},["Tip"],["Bin",1,["Location","Platform","Data.Error",["Just",48],["Just",42],"mb2error"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"],["Type","Maybe",[["Var","a"]]]],["Type","MaybeError",[["Var","e"],["Var","a"]]],[]],"fe_representation":"mb2error :: !e !(Maybe a) -> MaybeError e a","fe_documentation":["FunctionDoc",["Just","Converts a Maybe value into a MaybeError value."],["The error used if the input is Nothing","The Maybe value to be converted"],[],["Just","The resulting MaybeError value"]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Error",["Just",61],["Just",49],"error2mb"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MaybeError",[["Var","e"],["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"error2mb :: !(MaybeError e a) -> Maybe a","fe_documentation":["FunctionDoc",["Just","Converts a MaybeError value into a Maybe value."],["The MaybeError value"],[],["Just","The converted value. Ok maps to Just and Error maps to Nothing."]]},["Tip"],["Bin",1,["Location","Platform","Data.Error",["Just",71],["Just",53],"seqErrors"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MaybeError",[["Var","e"],["Var","a"]]],["Func",[["Var","a"]],["Type","MaybeError",[["Var","e"],["Var","b"]]],[]]],["Type","MaybeError",[["Var","e"],["Var","b"]]],[]],"fe_representation":"seqErrors :: !(MaybeError e a) (a -> MaybeError e b) -> MaybeError e b","fe_documentation":["FunctionDoc",["Just","Sequences an operation on a MaybeError value.\nIf the input is already an Error the operation is not performed."],["The input","The operation on the value (performed if input is Ok)"],[],["Just","The error of the input or the result of the operation"]]},["Tip"],["Tip"]]]]],["Bin",20,["Location","Platform","Data.Foldable",["Just",129],["Nothing"],"msum"],{"fe_kind":["Macro"],"fe_representation":"msum x :== foldr mplus mzero x"},["Bin",11,["Location","Platform","Data.Foldable",["Just",112],["Nothing"],"forM_"],{"fe_kind":["Macro"],"fe_representation":"forM_ x f :== flip mapM_ x f"},["Bin",7,["Location","Platform","Data.Foldable",["Just",100],["Just",175],"traverse_"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","f",[["Var","b"]]],[]],["Cons","t",[["Var","a"]]]],["Cons","f",[["Type","_Unit",[]]]],[[["Class","Foldable"],["Var","t"]],[["Class","Applicative"],["Var","f"]]]],"fe_representation":"traverse_ :: (a -> f b) (t a) -> f () | Foldable t & Applicative f"},["Bin",4,["Location","Platform","Data.Error",["Just",103],["Just",73],"combineErrorsSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","st"]],["Type","_Tuple2",[["Type","MaybeError",[["Var","e"],["Var","a"]]],["Var","st"]]],[]],["Func",[["Var","st"]],["Type","_Tuple2",[["Type","MaybeError",[["Var","e"],["Var","b"]]],["Var","st"]]],[]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","MaybeError",[["Var","e"],["Var","c"]]],[]],[]],["Var","st"]],["Type","_Tuple2",[["Type","MaybeError",[["Var","e"],["Var","c"]]],["Var","st"]]],[]],"fe_representation":"combineErrorsSt :: !(.st -> (!MaybeError e a,!.st)) (.st -> (!MaybeError e b,!.st)) (a -> b -> MaybeError e c) !.st -> (!MaybeError e c,!.st)","fe_documentation":["FunctionDoc",["Just","Combines two MaybeError values, resulting from two operations on a state.\nIf one of the operations yields an Error, this Error is given as result (If both are, the first is given)."],["The first operation","The second operation","A combination function for the inputs if they are Ok"],[],["Just","The error of one of the operations or the result of the combination"]]},["Bin",1,["Location","Platform","Data.Error",["Just",92],["Just",65],"seqErrorsSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","st"]],["Type","_Tuple2",[["Type","MaybeError",[["Var","e"],["Var","a"]]],["Var","st"]]],[]],["Func",[["Var","a"]],["Func",[["Var","st"]],["Type","_Tuple2",[["Type","MaybeError",[["Var","e"],["Var","b"]]],["Var","st"]]],[]],[]],["Var","st"]],["Type","_Tuple2",[["Type","MaybeError",[["Var","e"],["Var","b"]]],["Var","st"]]],[]],"fe_representation":"seqErrorsSt :: !(.st -> (MaybeError e a,!.st)) (a -> .st -> u:(!MaybeError e b,!.st)) !.st -> v:(MaybeError e b,!.st), [u<=v]","fe_documentation":["FunctionDoc",["Just","Sequences two operations on a state, yielding MaybeError values.\nIf the first operation already yields an error, the second is not performed."],["The first operation","The second operation, getting the result of the first as input"],[],["Just","The Error of the first or the second operation"]]},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Data.Foldable",["Just",96],["Just",169],"foldlM"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]],[]],["Var","b"],["Cons","t",[["Var","a"]]]],["Cons","m",[["Var","b"]]],[[["Class","Foldable"],["Var","t"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"foldlM :: (b -> a -> m b) b (t a) -> m b | Foldable t & Monad m"},["Bin",1,["Location","Platform","Data.Foldable",["Just",92],["Just",163],"foldrM"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Cons","m",[["Var","b"]]],[]],[]],["Var","b"],["Cons","t",[["Var","a"]]]],["Cons","m",[["Var","b"]]],[[["Class","Foldable"],["Var","t"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"foldrM :: (a -> b -> m b) b (t a) -> m b | Foldable t & Monad m"},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Data.Foldable",["Just",104],["Nothing"],"for_"],{"fe_kind":["Macro"],"fe_representation":"for_ x f :== flip traverse_ x f"},["Tip"],["Bin",1,["Location","Platform","Data.Foldable",["Just",108],["Just",184],"mapM_"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]],["Cons","t",[["Var","a"]]]],["Cons","m",[["Type","_Unit",[]]]],[[["Class","Foldable"],["Var","t"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"mapM_ :: (a -> m b) (t a) -> m () | Foldable t & Monad m"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Foldable",["Just",121],["Nothing"],"sequence_"],{"fe_kind":["Macro"],"fe_representation":"sequence_ x :== foldr (\\ma mb -> (ma >>= (\\_ -> mb))) (pure _Unit) x"},["Bin",1,["Location","Platform","Data.Foldable",["Just",116],["Just",193],"sequenceA_"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Cons","f",[["Var","a"]]]]]],["Cons","f",[["Type","_Unit",[]]]],[[["Class","Foldable"],["Var","t"]],[["Class","Applicative"],["Var","f"]]]],"fe_representation":"sequenceA_ :: (t (f a)) -> f () | Foldable t & Applicative f"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Foldable",["Just",125],["Nothing"],"asum"],{"fe_kind":["Macro"],"fe_representation":"asum x :== foldr (<|>) empty x"},["Tip"],["Tip"]]]],["Bin",8,["Location","Platform","Data.Foldable",["Just",156],["Just",237],"or"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Type","Bool",[]]]]],["Type","Bool",[]],[[["Class","Foldable"],["Var","t"]]]],"fe_representation":"or :: (t Bool) -> Bool | Foldable t"},["Bin",5,["Location","Platform","Data.Foldable",["Just",138],["Nothing"],"build"],{"fe_kind":["Macro"],"fe_representation":"build g :== g (\\x xs -> [x:xs]) []"},["Bin",1,["Location","Platform","Data.Foldable",["Just",135],["Nothing"],"toList"],{"fe_kind":["Macro"],"fe_representation":"toList t :== build (\\c n -> (foldr c n t))"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","Data.Foldable",["Just",146],["Just",225],"concatMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","_List",[["Var","b"]]],[]],["Cons","t",[["Var","a"]]]],["Type","_List",[["Var","b"]]],[[["Class","Foldable"],["Var","t"]]]],"fe_representation":"concatMap :: (a -> [b]) (t a) -> [b] | Foldable t"},["Bin",1,["Location","Platform","Data.Foldable",["Just",142],["Just",220],"concat"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Type","_List",[["Var","a"]]]]]],["Type","_List",[["Var","a"]]],[[["Class","Foldable"],["Var","t"]]]],"fe_representation":"concat :: (t [a]) -> [a] | Foldable t"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Foldable",["Just",151],["Just",231],"and"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Type","Bool",[]]]]],["Type","Bool",[]],[[["Class","Foldable"],["Var","t"]]]],"fe_representation":"and :: (t Bool) -> Bool | Foldable t"},["Tip"],["Tip"]]]],["Bin",2,["Location","Platform","Data.Foldable",["Just",159],["Just",241],"any"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Cons","t",[["Var","a"]]]],["Type","Bool",[]],[[["Class","Foldable"],["Var","t"]]]],"fe_representation":"any :: (a -> Bool) (t a) -> Bool | Foldable t"},["Tip"],["Bin",1,["Location","Platform","Data.Foldable",["Just",162],["Just",245],"all"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Cons","t",[["Var","a"]]]],["Type","Bool",[]],[[["Class","Foldable"],["Var","t"]]]],"fe_representation":"all :: (a -> Bool) (t a) -> Bool | Foldable t"},["Tip"],["Tip"]]]]]],["Bin",17,["Location","Platform","Data.Foldable",["Just",185],["Just",277],"elem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Cons","t",[["Var","a"]]]],["Type","Bool",[]],[[["Class","Foldable"],["Var","t"]],[["Class","=="],["Var","a"]]]],"fe_representation":"elem :: a (t a) -> Bool | Foldable t & == a"},["Bin",5,["Location","Platform","Data.Foldable",["Just",175],["Just",262],"maximumBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Cons","t",[["Var","a"]]]],["Var","a"],[[["Class","Foldable"],["Var","t"]]]],"fe_representation":"maximumBy :: (a -> a -> Bool) (t a) -> a | Foldable t"},["Bin",2,["Location","Platform","Data.Foldable",["Just",168],["Just",253],"product"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Var","a"]]]],["Var","a"],[[["Class","Foldable"],["Var","t"]],[["Class","*"],["Var","a"]],[["Class","one"],["Var","a"]]]],"fe_representation":"product :: (t a) -> a | Foldable t & * a & one a"},["Tip"],["Bin",1,["Location","Platform","Data.Foldable",["Just",171],["Just",257],"maximum"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Var","a"]]]],["Var","a"],[[["Class","Foldable"],["Var","t"]],[["Class","Ord"],["Var","a"]]]],"fe_representation":"maximum :: (t a) -> a | Foldable t & Ord a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Foldable",["Just",178],["Just",267],"minimum"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Var","a"]]]],["Var","a"],[[["Class","Foldable"],["Var","t"]],[["Class","Ord"],["Var","a"]]]],"fe_representation":"minimum :: (t a) -> a | Foldable t & Ord a"},["Tip"],["Bin",1,["Location","Platform","Data.Foldable",["Just",182],["Just",272],"minimumBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Cons","t",[["Var","a"]]]],["Var","a"],[[["Class","Foldable"],["Var","t"]]]],"fe_representation":"minimumBy :: (a -> a -> Bool) (t a) -> a | Foldable t"},["Tip"],["Tip"]]]],["Bin",11,["Location","Platform","Data.Func",["Just",6],["Nothing"],"app"],{"fe_kind":["Macro"],"fe_representation":"app f :== f"},["Bin",3,["Location","Platform","Data.Foldable",["Just",193],["Just",287],"find"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Cons","t",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[[["Class","Foldable"],["Var","t"]]]],"fe_representation":"find :: (a -> Bool) (t a) -> Maybe a | Foldable t"},["Bin",1,["Location","Platform","Data.Foldable",["Just",188],["Just",281],"notElem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Cons","t",[["Var","a"]]]],["Type","Bool",[]],[[["Class","Foldable"],["Var","t"]],[["Class","=="],["Var","a"]]]],"fe_representation":"notElem :: a (t a) -> Bool | Foldable t & == a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Func",["Just",4],["Nothing"],"$"],{"fe_kind":["Macro"],"fe_priority":["RightAssoc",0],"fe_representation":"($) infixr 0\n($) f :== f"},["Tip"],["Tip"]]],["Bin",7,["Location","Platform","Data.Functor",["Just",11],["Just",13],"<$>"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Cons","f",[["Var","a"]]]],["Cons","f",[["Var","b"]]],[[["Class","Functor"],["Var","f"]]]],"fe_priority":["LeftAssoc",4],"fe_representation":"(<$>) infixl 4 :: (a -> b) (f a) -> f b | Functor f"},["Bin",4,["Location","Platform","Data.Func",["Just",10],["Just",14],"fix"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","a"],[]]],["Var","a"],[]],"fe_representation":"fix :: (a -> a) -> a"},["Bin",2,["Location","Platform","Data.Func",["Just",9],["Just",7],"mapSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","st"]],["Type","_Tuple2",[["Var","b"],["Var","st"]]],[]],[]],["Type","_List",[["Var","a"]]],["Var","st"]],["Type","_Tuple2",[["Type","_List",[["Var","b"]]],["Var","st"]]],[]],"fe_representation":"mapSt :: !(a -> .st -> (!b,!.st)) ![a] !.st -> (![b],!.st)"},["Bin",1,["Location","Platform","Data.Func",["Just",8],["Just",3],"seqSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","st"]],["Var","st"],[]],[]],["Type","_List",[["Var","a"]]],["Var","st"]],["Var","st"],[]],"fe_representation":"seqSt :: !(a -> .st -> .st) ![a] !.st -> .st"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Data.Func",["Just",11],["Just",17],"on"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Func",[["Var","b"]],["Var","c"],[]],[]],["Func",[["Var","a"]],["Var","b"],[]]],["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","c"],[]],[]],[]],"fe_representation":"on :: (b -> b -> c) (a -> b) -> a -> a -> c"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Functor",["Just",13],["Just",16],"<$"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Cons","f",[["Var","b"]]]],["Cons","f",[["Var","a"]]],[[["Class","Functor"],["Var","f"]]]],"fe_priority":["LeftAssoc",4],"fe_representation":"(<$) infixl 4 :: a (f b) -> f a | Functor f"},["Tip"],["Bin",1,["Location","Platform","Data.Functor",["Just",15],["Just",19],"$>"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","b"]]],["Var","a"]],["Cons","f",[["Var","a"]]],[[["Class","Functor"],["Var","f"]]]],"fe_priority":["LeftAssoc",4],"fe_representation":"($>) infixl 4 :: (f b) a -> f a | Functor f"},["Tip"],["Tip"]]]]]]]]]],["Bin",249,["Location","Platform","Data.Graph.Inductive.Graph",["Just",284],["Just",318],"pre`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[]],"fe_representation":"pre` :: (Context a b) -> [Node]"},["Bin",117,["Location","Platform","Data.Graph",["Just",60],["Just",122],"setNodeData"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeIndex",[]],["Var","a"],["Type","Graph",[["Var","a"],["Var","b"]]]],["Type","Graph",[["Var","a"],["Var","b"]]],[]],"fe_representation":"setNodeData :: NodeIndex a u:(Graph a b) -> v:(Graph a b), [u<=v]"},["Bin",39,["Location","Platform","Data.Graph",["Just",40],["Just",165],"directPredecessors"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_List",[["Type","NodeIndex",[]]]],[]],"fe_representation":"directPredecessors :: !NodeIndex !.(Graph n e) -> [NodeIndex]"},["Bin",23,["Location","Platform","Data.Graph",["Just",15],["Just",21],"successors"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Node",[["Var","n"]]]],["Type","_List",[["Type","NodeIndex",[]]]],[]],"fe_representation":".successors :: (Node n) -> [NodeIndex]"},["Bin",13,["Location","Platform","Data.Graph",["Just",9],["Just",15],"lastId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Int",[]],[]],"fe_representation":".lastId :: (Graph n e) -> Int"},["Bin",9,["Location","Platform","Data.Generic",["Just",8],["Just",14],"fromFIELD"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FIELD",[["Var","x"]]]],["Var","x"],[]],"fe_representation":"fromFIELD :: !(FIELD x) -> x"},["Bin",5,["Location","Platform","Data.Generic",["Just",6],["Just",8],"fromCONS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CONS",[["Var","x"]]]],["Var","x"],[]],"fe_representation":"fromCONS :: !(CONS x) -> x"},["Bin",3,["Location","Platform","Data.Functor.Identity",["Just",9],["Just",9],"runIdentity"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Identity",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"runIdentity :: (Identity .a) -> .a"},["Bin",1,["Location","Platform","Data.Functor.Identity",["Just",7],["Just",7],"Identity"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","Identity",[["Var","a"]]],[]],"fe_representation":"Identity :: a -> Identity a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Generic",["Just",5],["Just",5],"fromOBJECT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","OBJECT",[["Var","x"]]]],["Var","x"],[]],"fe_representation":"fromOBJECT :: !(OBJECT x) -> x"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Generic",["Just",7],["Just",11],"fromRECORD"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RECORD",[["Var","x"]]]],["Var","x"],[]],"fe_representation":"fromRECORD :: !(RECORD x) -> x"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Generic",["Just",10],["Just",20],"fromPAIRY"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","PAIR",[["Var","x"],["Var","y"]]]],["Var","y"],[]],"fe_representation":"fromPAIRY :: !(PAIR x y) -> y"},["Bin",1,["Location","Platform","Data.Generic",["Just",9],["Just",17],"fromPAIRX"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","PAIR",[["Var","x"],["Var","y"]]]],["Var","x"],[]],"fe_representation":"fromPAIRX :: !(PAIR x y) -> x"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",9],["Just",15],"edges"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Map",[["Type","EdgeIndex",[]],["Var","e"]]],[]],"fe_representation":".edges :: (Graph n e) -> Map EdgeIndex e"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Graph",["Just",15],["Just",21],"data"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Node",[["Var","n"]]]],["Var","n"],[]],"fe_representation":".data :: (Node n) -> n"},["Bin",1,["Location","Platform","Data.Graph",["Just",9],["Just",15],"nodes"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Map",[["Type","NodeIndex",[]],["Type","Node",[["Var","n"]]]]],[]],"fe_representation":".nodes :: (Graph n e) -> Map NodeIndex (Node n)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",15],["Just",21],"predecessors"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Node",[["Var","n"]]]],["Type","_List",[["Type","NodeIndex",[]]]],[]],"fe_representation":".predecessors :: (Node n) -> [NodeIndex]"},["Tip"],["Tip"]]]],["Bin",9,["Location","Platform","Data.Graph",["Just",36],["Just",144],"nodeIndices"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_List",[["Type","NodeIndex",[]]]],[]],"fe_representation":"nodeIndices :: !.(Graph n e) -> [NodeIndex]"},["Bin",5,["Location","Platform","Data.Graph",["Just",34],["Just",47],"getLastId"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Int",[]],[]],"fe_representation":"getLastId :: .(Graph n e) -> Int"},["Bin",3,["Location","Platform","Data.Graph",["Just",30],["Just",39],"emptyGraphWithLastId"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","Graph",[["Var","n"],["Var","e"]]],[]],"fe_representation":"emptyGraphWithLastId :: Int -> .(Graph n e)"},["Bin",1,["Location","Platform","Data.Graph",["Just",29],["Just",31],"emptyGraph"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Graph",[["Var","n"],["Var","e"]]],[]],"fe_representation":"emptyGraph :: .(Graph n e)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",31],["Just",132],"trivialGraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","n"]],["Type","_Tuple2",[["Type","NodeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]]],[]],"fe_representation":"trivialGraph :: n -> .(NodeIndex,.(Graph n e))"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graph",["Just",35],["Just",50],"setLastId"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]],["Type","Int",[]]],["Type","Graph",[["Var","n"],["Var","e"]]],[]],"fe_representation":"setLastId :: .(Graph n e) Int -> .(Graph n e)"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph",["Just",38],["Just",159],"nodeCount"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Int",[]],[]],"fe_representation":"nodeCount :: !.(Graph n e) -> Int"},["Bin",1,["Location","Platform","Data.Graph",["Just",37],["Just",147],"edgeIndices"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_List",[["Type","EdgeIndex",[]]]],[]],"fe_representation":"edgeIndices :: !.(Graph n e) -> [EdgeIndex]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",39],["Just",162],"edgeCount"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Int",[]],[]],"fe_representation":"edgeCount :: !.(Graph n e) -> Int"},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","Data.Graph",["Just",50],["Just",138],"isTrivialGraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Bool",[]],[]],"fe_representation":"isTrivialGraph :: !.(Graph n e) -> Bool"},["Bin",7,["Location","Platform","Data.Graph",["Just",44],["Just",200],"getNodeData"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Maybe",[["Var","n"]]],[]],"fe_representation":"getNodeData :: !NodeIndex !.(Graph n e) -> Maybe n"},["Bin",3,["Location","Platform","Data.Graph",["Just",42],["Just",177],"predecessorEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EdgeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_List",[["Type","EdgeIndex",[]]]],[]],"fe_representation":"predecessorEdges :: !EdgeIndex !.(Graph n e) -> [EdgeIndex]"},["Bin",1,["Location","Platform","Data.Graph",["Just",41],["Just",171],"directSuccessors"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_List",[["Type","NodeIndex",[]]]],[]],"fe_representation":"directSuccessors :: !NodeIndex !.(Graph n e) -> [NodeIndex]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",43],["Just",187],"successorEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EdgeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_List",[["Type","EdgeIndex",[]]]],[]],"fe_representation":"successorEdges :: !EdgeIndex !.(Graph n e) -> [EdgeIndex]"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph",["Just",46],["Just",209],"filterNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_List",[["Type","NodeIndex",[]]]]],["Func",[["Type","_List",[["Type","NodeIndex",[]]]]],["Func",[["Var","n"]],["Type","Bool",[]],[]],[]],[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_List",[["Type","NodeIndex",[]]]],[]],"fe_representation":"filterNodes :: !([NodeIndex] -> [NodeIndex] -> n -> Bool) !.(Graph n e) -> [NodeIndex]"},["Bin",1,["Location","Platform","Data.Graph",["Just",45],["Just",206],"getEdgeData"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EdgeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Maybe",[["Var","e"]]],[]],"fe_representation":"getEdgeData :: !EdgeIndex !.(Graph n e) -> Maybe e"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",49],["Just",135],"isEmptyGraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Bool",[]],[]],"fe_representation":"isEmptyGraph :: !.(Graph n e) -> Bool"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graph",["Just",56],["Just",56],"addNodeWithIndex"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","NodeIndex",[]]],["Var","n"],[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_Tuple2",[["Type","NodeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]]],[]],"fe_representation":"addNodeWithIndex :: (NodeIndex -> n) .(Graph n e) -> .(NodeIndex,.(Graph n e))"},["Bin",3,["Location","Platform","Data.Graph",["Just",52],["Just",156],"edgeExists"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EdgeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Bool",[]],[]],"fe_representation":"edgeExists :: !EdgeIndex !.(Graph n e) -> Bool"},["Bin",1,["Location","Platform","Data.Graph",["Just",51],["Just",153],"nodeExists"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Bool",[]],[]],"fe_representation":"nodeExists :: !NodeIndex !.(Graph n e) -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",55],["Just",53],"addNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","n"],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_Tuple2",[["Type","NodeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]]],[]],"fe_representation":"addNode :: n .(Graph n e) -> .(NodeIndex,.(Graph n e))"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph",["Just",58],["Just",95],"removeNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeIndex",[]],["Type","Graph",[["Var","a"],["Var","b"]]]],["Type","Graph",[["Var","a"],["Var","b"]]],[]],"fe_representation":"removeNode :: NodeIndex u:(Graph a b) -> v:(Graph a b), [u<=v]"},["Bin",1,["Location","Platform","Data.Graph",["Just",57],["Just",72],"addEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"],["Type","EdgeIndex",[]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Graph",[["Var","n"],["Var","e"]]],[]],"fe_representation":"addEdge :: e EdgeIndex u:(Graph n e) -> v:(Graph n e), [u<=v]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",59],["Just",107],"removeEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EdgeIndex",[]],["Type","Graph",[["Var","a"],["Var","b"]]]],["Type","Graph",[["Var","a"],["Var","b"]]],[]],"fe_representation":"removeEdge :: EdgeIndex u:(Graph a b) -> v:(Graph a b), [u<=v]"},["Tip"],["Tip"]]]]]],["Bin",77,["Location","Platform","Data.Graph.Inductive.Graph",["Just",180],["Just",175],"delAllLEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LEdge",[["Var","b"]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]],[["Class","Eq"],["Var","b"]]]],"fe_representation":"delAllLEdge :: (LEdge b) (gr a b) -> gr a b | DynGraph gr & Eq b"},["Bin",45,["Location","Platform","Data.Graph.Inductive.Graph",["Just",123],["Just",87],"gmap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Context",[["Var","c"],["Var","d"]]],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","c"],["Var","d"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"gmap :: ((Context a b) -> Context c d) (gr a b) -> gr c d | DynGraph gr"},["Bin",29,["Location","Platform","Data.Graph",["Just",74],["Just",258],"components"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_List",[["Type","Graph",[["Var","n"],["Var","e"]]]]],[]],"fe_representation":"components :: !.(Graph n e) -> .[.(Graph n e)]"},["Bin",7,["Location","Platform","Data.Graph",["Just",68],["Just",244],"foldrNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","NodeIndex",[]]],["Func",[["Type","Node",[["Var","n"]]]],["Func",[["Var","a"]],["Var","a"],[]],[]],[]],["Var","a"],["Type","Graph",[["Var","n"],["Var","e"]]]],["Var","a"],[]],"fe_representation":"foldrNodes :: (NodeIndex -> (Node n) -> .a -> .a) .a .(Graph n e) -> .a"},["Bin",3,["Location","Platform","Data.Graph",["Just",64],["Just",215],"mapEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","Graph",[["Var","n"],["Var","a"]]]],["Type","Graph",[["Var","n"],["Var","b"]]],[]],"fe_representation":"mapEdges :: !(a -> b) !.(Graph n a) -> .(Graph n b)"},["Bin",1,["Location","Platform","Data.Graph",["Just",63],["Just",212],"mapNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","Graph",[["Var","a"],["Var","e"]]]],["Type","Graph",[["Var","b"],["Var","e"]]],[]],"fe_representation":"mapNodes :: !(a -> b) !.(Graph a e) -> .(Graph b e)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",65],["Just",225],"mapIndices"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","NodeIndex",[]],["Type","NodeIndex",[]]]]]],["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Graph",[["Var","n"],["Var","e"]]],[]],"fe_representation":"mapIndices :: ![(!NodeIndex,!NodeIndex)] !.(Graph n e) -> .(Graph n e)"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph",["Just",70],["Just",250],"foldrEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","EdgeIndex",[]]],["Func",[["Var","e"]],["Func",[["Var","a"]],["Var","a"],[]],[]],[]],["Var","a"],["Type","Graph",[["Var","n"],["Var","e"]]]],["Var","a"],[]],"fe_representation":"foldrEdges :: (EdgeIndex -> e -> .a -> .a) .a .(Graph n e) -> .a"},["Bin",1,["Location","Platform","Data.Graph",["Just",69],["Just",247],"foldlNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Type","NodeIndex",[]]],["Func",[["Type","Node",[["Var","n"]]]],["Var","a"],[]],[]],[]],["Var","a"],["Type","Graph",[["Var","n"],["Var","e"]]]],["Var","a"],[]],"fe_representation":"foldlNodes :: (.a -> NodeIndex -> (Node n) -> .a) .a .(Graph n e) -> .a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",71],["Just",253],"foldlEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Type","EdgeIndex",[]]],["Func",[["Var","e"]],["Var","a"],[]],[]],[]],["Var","a"],["Type","Graph",[["Var","n"],["Var","e"]]]],["Var","a"],[]],"fe_representation":"foldlEdges :: (.a -> EdgeIndex -> e -> .a) .a .(Graph n e) -> .a"},["Tip"],["Tip"]]]],["Bin",21,["Location","Platform","Data.Graph.Inductive.Basic",["Just",47],["Just",72],"gfold1"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[]],["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Func",[["Var","r"]],["Var","t"],[]],[]],["Type","Collect",[["Type","Maybe",[["Var","t"]]],["Var","r"]]]],["Type","SplitM",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Var","t"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"gfold1 :: ((Context a b) -> [Node]) ((Context a b) -> r -> t) (Collect (Maybe t) r) -> SplitM (gr a b) Node t | Graph gr"},["Bin",13,["Location","Platform","Data.Graph",["Just",82],["Just",310],"sinkNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Maybe",[["Type","NodeIndex",[]]]],[]],"fe_representation":"sinkNode :: !.(Graph n e) -> Maybe NodeIndex"},["Bin",3,["Location","Platform","Data.Graph",["Just",78],["Just",300],"leafNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","_List",[["Type","NodeIndex",[]]]],[]],"fe_representation":"leafNodes :: !.(Graph n e) -> [NodeIndex]"},["Bin",1,["Location","Platform","Data.Graph",["Just",75],["Just",292],"isConnected"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Bool",[]],[]],"fe_representation":"isConnected :: !.(Graph n e) -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph",["Just",81],["Just",305],"sourceNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Graph",[["Var","n"],["Var","e"]]]],["Type","Maybe",[["Type","NodeIndex",[]]]],[]],"fe_representation":"sourceNode :: !.(Graph n e) -> Maybe NodeIndex"},["Tip"],["Tip"]]],["Bin",9,["Location","Platform","Data.Graph.Inductive.Basic",["Just",31],["Just",51],"elfilter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Type","Bool",[]],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"elfilter :: (b -> Bool) (gr a b) -> gr a b | DynGraph gr"},["Bin",5,["Location","Platform","Data.Graph.Inductive.Basic",["Just",19],["Just",33],"gsel"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Bool",[]],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Context",[["Var","a"],["Var","b"]]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"gsel :: ((Context a b) -> Bool) (gr a b) -> [Context a b] | Graph gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Basic",["Just",13],["Just",18],"undir"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]],[["Class","Eq"],["Var","b"]]]],"fe_representation":"undir :: (gr a b) -> gr a b | DynGraph gr & Eq b"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Basic",["Just",9],["Just",13],"grev"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"grev :: (gr a b) -> gr a b | DynGraph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Basic",["Just",16],["Just",26],"unlab"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Type","_Unit",[]],["Type","_Unit",[]]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"unlab :: (gr a b) -> gr () () | DynGraph gr"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Basic",["Just",28],["Just",44],"efilter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","LEdge",[["Var","b"]]]],["Type","Bool",[]],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"efilter :: ((LEdge b) -> Bool) (gr a b) -> gr a b | DynGraph gr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Basic",["Just",40],["Just",63],"isSimple"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Bool",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"isSimple :: (gr a b) -> Bool | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Basic",["Just",37],["Just",59],"hasLoop"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Bool",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"hasLoop :: (gr a b) -> Bool | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Basic",["Just",42],["Just",66],"threadGraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Func",[["Var","r"]],["Var","t"],[]],[]],["Type","Split",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Context",[["Var","a"],["Var","b"]]],["Var","r"]]]],["Type","SplitM",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Var","t"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"threadGraph :: ((Context a b) -> r -> t) (Split (gr a b) (Context a b) r) -> SplitM (gr a b) Node t | Graph gr"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",29],["Just",18],"unLPath"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LPath",[["Var","a"]]]],["Type","_List",[["Type","LNode",[["Var","a"]]]]],[]],"fe_representation":"unLPath :: (LPath a) -> [LNode a]"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Basic",["Just",65],["Just",92],"gfold"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[]],["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Func",[["Var","c"]],["Var","d"],[]],[]],["Type","_Tuple2",[["Func",[["Type","Maybe",[["Var","d"]]]],["Func",[["Var","c"]],["Var","c"],[]],[]],["Var","c"]]],["Type","_List",[["Type","Node",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Var","c"],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"gfold :: ((Context a b) -> [Node]) ((Context a b) -> c -> d) ((Maybe d) -> c -> c,c) [Node] (gr a b) -> c | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Basic",["Just",50],["Just",76],"gfoldn"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[]],["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Func",[["Var","r"]],["Var","t"],[]],[]],["Type","Collect",[["Type","Maybe",[["Var","t"]]],["Var","r"]]],["Type","_List",[["Type","Node",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Var","r"],["Cons","gr",[["Var","a"],["Var","b"]]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"gfoldn :: ((Context a b) -> [Node]) ((Context a b) -> r -> t) (Collect (Maybe t) r) [Node] (gr a b) -> (r,gr a b) | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",27],["Nothing"],"LP"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","LNode",[["Var","a"]]]]]],["Type","LPath",[["Var","a"]]],[]],"fe_representation":"LP :: [LNode a] -> LPath a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",117],["Just",75],"size"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Int",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"size :: (gr a b) -> Int | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",105],["Just",62],"order"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Int",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"order :: (gr a b) -> Int | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",120],["Just",79],"ufold"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Func",[["Var","c"]],["Var","c"],[]],[]],["Var","c"],["Cons","gr",[["Var","a"],["Var","b"]]]],["Var","c"],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"ufold :: ((Context a b) -> c -> c) c (gr a b) -> c | Graph gr"},["Tip"],["Tip"]]]]]],["Bin",15,["Location","Platform","Data.Graph.Inductive.Graph",["Just",147],["Just",123],"edgeLabel"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LEdge",[["Var","b"]]]],["Var","b"],[]],"fe_representation":"edgeLabel :: (LEdge b) -> b"},["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",135],["Just",107],"nodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"nodes :: (gr a b) -> [Node] | Graph gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",129],["Just",95],"emap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Var","c"],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","c"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"emap :: (b -> c) (gr a b) -> gr a c | DynGraph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",126],["Just",91],"nmap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","c"],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","c"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"nmap :: (a -> c) (gr a b) -> gr c b | DynGraph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",132],["Just",101],"nemap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","c"],[]],["Func",[["Var","b"]],["Var","d"],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","c"],["Var","d"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"nemap :: (a -> c) (b -> d) (gr a b) -> gr c d | DynGraph gr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",141],["Just",115],"toEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LEdge",[["Var","b"]]]],["Type","Edge",[]],[]],"fe_representation":"toEdge :: (LEdge b) -> Edge"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",138],["Just",111],"edges"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Edge",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"edges :: (gr a b) -> [Edge] | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",144],["Just",119],"toLEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Edge",[]],["Var","b"]],["Type","LEdge",[["Var","b"]]],[]],"fe_representation":"toLEdge :: Edge b -> LEdge b"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",159],["Just",143],"insEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LEdge",[["Var","b"]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"insEdge :: (LEdge b) (gr a b) -> gr a b | DynGraph gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",153],["Just",135],"gelem"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Bool",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"gelem :: Node (gr a b) -> Bool | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",150],["Just",127],"newNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"newNodes :: Int (gr a b) -> [Node] | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",156],["Just",139],"insNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LNode",[["Var","a"]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"insNode :: (LNode a) (gr a b) -> gr a b | DynGraph gr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",170],["Just",161],"delEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Edge",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"delEdge :: Edge (gr a b) -> gr a b | DynGraph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",162],["Just",152],"delNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"delNode :: Node (gr a b) -> gr a b | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",177],["Just",171],"delLEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LEdge",[["Var","b"]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]],[["Class","Eq"],["Var","b"]]]],"fe_representation":"delLEdge :: (LEdge b) (gr a b) -> gr a b | DynGraph gr & Eq b"},["Tip"],["Tip"]]]]]],["Bin",31,["Location","Platform","Data.Graph.Inductive.Graph",["Just",235],["Just",253],"lneighbors"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","Adj",[["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"lneighbors :: (gr a b) Node -> Adj b | Graph gr"},["Bin",15,["Location","Platform","Data.Graph.Inductive.Graph",["Just",207],["Just",215],"gfiltermap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","MContext",[["Var","c"],["Var","d"]]],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","c"],["Var","d"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"gfiltermap :: ((Context a b) -> MContext c d) (gr a b) -> gr c d | DynGraph gr"},["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",191],["Just",192],"delNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Node",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"delNodes :: [Node] (gr a b) -> gr a b | Graph gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",185],["Just",184],"insNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","LNode",[["Var","a"]]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"insNodes :: [LNode a] (gr a b) -> gr a b | DynGraph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",182],["Just",178],"delLEdgeBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_Tuple2",[["Var","b"],["Type","Node",[]]]]],["Func",[["Type","Adj",[["Var","b"]]]],["Type","Adj",[["Var","b"]]],[]],[]],["Type","LEdge",[["Var","b"]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"delLEdgeBy :: ((b,Node) -> (Adj b) -> Adj b) (LEdge b) (gr a b) -> gr a b | DynGraph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",188],["Just",188],"insEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","LEdge",[["Var","b"]]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"insEdges :: [LEdge b] (gr a b) -> gr a b | DynGraph gr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",200],["Just",203],"buildGr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Context",[["Var","a"],["Var","b"]]]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"buildGr :: [Context a b] -> gr a b | DynGraph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",194],["Just",196],"delEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Edge",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"delEdges :: [Edge] (gr a b) -> gr a b | DynGraph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",203],["Just",207],"mkUGraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Node",[]]]],["Type","_List",[["Type","Edge",[]]]]],["Cons","gr",[["Type","_Unit",[]],["Type","_Unit",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"mkUGraph :: [Node] [Edge] -> gr () () | Graph gr"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",222],["Just",234],"subgraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Node",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"subgraph :: [Node] (gr a b) -> gr a b | DynGraph gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",215],["Just",225],"nfilter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Node",[]]],["Type","Bool",[]],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"nfilter :: (Node -> Bool) (gr a b) -> gr a b | DynGraph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",211],["Just",220],"labnfilter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","LNode",[["Var","a"]]]],["Type","Bool",[]],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"labnfilter :: ((LNode a) -> Bool) (gr a b) -> gr a b | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",219],["Just",230],"labfilter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[[["Class","DynGraph"],["Var","gr"]]]],"fe_representation":"labfilter :: (a -> Bool) (gr a b) -> gr a b | DynGraph gr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",229],["Just",245],"lab"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","Maybe",[["Var","a"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"lab :: (gr a b) Node -> Maybe a | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",226],["Just",240],"context"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","Context",[["Var","a"],["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"context :: (gr a b) Node -> Context a b | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",232],["Just",249],"neighbors"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","_List",[["Type","Node",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"neighbors :: (gr a b) Node -> [Node] | Graph gr"},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","Data.Graph.Inductive.Graph",["Just",260],["Just",286],"indeg"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","Int",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"indeg :: (gr a b) Node -> Int | Graph gr"},["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",248],["Just",270],"lpre"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","_List",[["Type","_Tuple2",[["Type","Node",[]],["Var","b"]]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"lpre :: (gr a b) Node -> [(Node,b)] | Graph gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",241],["Just",261],"pre"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","_List",[["Type","Node",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"pre :: (gr a b) Node -> [Node] | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",238],["Just",257],"suc"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","_List",[["Type","Node",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"suc :: (gr a b) Node -> [Node] | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",245],["Just",266],"lsuc"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","_List",[["Type","_Tuple2",[["Type","Node",[]],["Var","b"]]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"lsuc :: (gr a b) Node -> [(Node,b)] | Graph gr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",254],["Just",278],"inn"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","_List",[["Type","LEdge",[["Var","b"]]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"inn :: (gr a b) Node -> [LEdge b] | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",251],["Just",274],"out"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","_List",[["Type","LEdge",[["Var","b"]]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"out :: (gr a b) Node -> [LEdge b] | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",257],["Just",282],"outdeg"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","Int",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"outdeg :: (gr a b) Node -> Int | Graph gr"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",272],["Just",302],"labNode`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","LNode",[["Var","a"]]],[]],"fe_representation":"labNode` :: (Context a b) -> LNode a"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",266],["Just",294],"node`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Node",[]],[]],"fe_representation":"node` :: (Context a b) -> Node"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",263],["Just",290],"deg"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","Int",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"deg :: (gr a b) Node -> Int | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",269],["Just",298],"lab`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Var","a"],[]],"fe_representation":"lab` :: (Context a b) -> a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",278],["Just",310],"lneighbors`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Adj",[["Var","b"]]],[]],"fe_representation":"lneighbors` :: (Context a b) -> Adj b"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",275],["Just",306],"neighbors`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[]],"fe_representation":"neighbors` :: (Context a b) -> [Node]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",281],["Just",314],"suc`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[]],"fe_representation":"suc` :: (Context a b) -> [Node]"},["Tip"],["Tip"]]]]]]]],["Bin",131,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",8],["Just",17],"map"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]]],["Type","Map",[["Var","a"],["Type","Node",[]]]],[]],"fe_representation":".map :: (NodeMap a) -> Map a Node"},["Bin",63,["Location","Platform","Data.Graph.Inductive.Graph",["Just",402],["Just",58],"defLabEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","LEdge",[["Var","b"]]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"defLabEdges :: (gr a b) -> [LEdge b] | Graph gr"},["Bin",26,["Location","Platform","Data.Graph.Inductive.Graph",["Just",355],["Just",421],"context1l"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","Adj",[["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"context1l :: (gr a b) Node -> Adj b | Graph gr"},["Bin",15,["Location","Platform","Data.Graph.Inductive.Graph",["Just",308],["Just",350],"hasEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Edge",[]]],["Type","Bool",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"hasEdge :: (gr a b) Edge -> Bool | Graph gr"},["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",296],["Just",334],"inn`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","LEdge",[["Var","b"]]]]],[]],"fe_representation":"inn` :: (Context a b) -> [LEdge b]"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",290],["Just",326],"lpre`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","_Tuple2",[["Type","Node",[]],["Var","b"]]]]],[]],"fe_representation":"lpre` :: (Context a b) -> [(Node,b)]"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",287],["Just",322],"lsuc`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","_Tuple2",[["Type","Node",[]],["Var","b"]]]]],[]],"fe_representation":"lsuc` :: (Context a b) -> [(Node,b)]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",293],["Just",330],"out`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","LEdge",[["Var","b"]]]]],[]],"fe_representation":"out` :: (Context a b) -> [LEdge b]"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",302],["Just",342],"indeg`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Int",[]],[]],"fe_representation":"indeg` :: (Context a b) -> Int"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",299],["Just",338],"outdeg`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Int",[]],[]],"fe_representation":"outdeg` :: (Context a b) -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",305],["Just",346],"deg`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Int",[]],[]],"fe_representation":"deg` :: (Context a b) -> Int"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",336],["Just",390],"GEs"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LEdge",[["Type","_List",[["Var","b"]]]]]],["Type","GroupEdges",[["Var","b"]]],[]],"fe_representation":"GEs :: (LEdge [b]) -> GroupEdges b"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",314],["Just",358],"hasLEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","LEdge",[["Var","b"]]]],["Type","Bool",[]],[[["Class","Graph"],["Var","gr"]],[["Class","Eq"],["Var","b"]]]],"fe_representation":"hasLEdge :: (gr a b) (LEdge b) -> Bool | Graph gr & Eq b"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",311],["Just",354],"hasNeighbor"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Type","Node",[]]],["Type","Bool",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"hasNeighbor :: (gr a b) Node Node -> Bool | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",317],["Just",362],"hasNeighborAdj"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Type","_Tuple2",[["Var","b"],["Type","Node",[]]]]],["Type","Bool",[]],[[["Class","Graph"],["Var","gr"]],[["Class","Eq"],["Var","b"]]]],"fe_representation":"hasNeighborAdj :: (gr a b) Node (b,Node) -> Bool | Graph gr & Eq b"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",349],["Just",409],".:"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","c"]],["Var","d"],[]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","c"],[]],[]],["Var","a"],["Var","b"]],["Var","d"],[]],"fe_priority":["LeftAssoc",9],"fe_representation":"(.:) infixl 9 :: (c -> d) (a -> b -> c) a b -> d"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",340],["Just",397],"eqLists"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[[["Class","Eq"],["Var","a"]]]],"fe_representation":"eqLists :: [a] [a] -> Bool | Eq a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",351],["Just",416],"flip2"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Var","b"],["Var","a"]]],[]],"fe_representation":"flip2 :: (a,b) -> (b,a)"},["Tip"],["Tip"]]]]],["Bin",10,["Location","Platform","Data.Graph.Inductive.Graph",["Just",380],["Just",458],"OrdGr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","OrdGr",[["Var","gr"],["Var","a"],["Var","b"]]],[]],"fe_representation":"OrdGr :: (gr a b) -> OrdGr gr a b"},["Bin",5,["Location","Platform","Data.Graph.Inductive.Graph",["Just",361],["Just",430],"context1l`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Adj",[["Var","b"]]],[]],"fe_representation":"context1l` :: (Context a b) -> Adj b"},["Bin",2,["Location","Platform","Data.Graph.Inductive.Graph",["Just",357],["Just",424],"context4l"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","Adj",[["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"context4l :: (gr a b) Node -> Adj b | Graph gr"},["Tip"],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",359],["Just",427],"mcontext"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]]],["Type","MContext",[["Var","a"],["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"mcontext :: (gr a b) Node -> MContext a b | Graph gr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graph.Inductive.Graph",["Just",363],["Just",433],"context4l`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Adj",[["Var","b"]]],[]],"fe_representation":"context4l` :: (Context a b) -> Adj b"},["Tip"],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",372],["Just",442],"prettify"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","String",[]],[[["Class","DynGraph"],["Var","gr"]],[["Class","toString"],["Var","a"]],[["Class","toString"],["Var","b"]]]],"fe_representation":"prettify :: (gr a b) -> String | DynGraph gr & toString a & toString b"},["Tip"],["Tip"]]]],["Bin",4,["Location","Platform","Data.Graph.Inductive.Graph",["Just",396],["Just",46],"defNoNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Int",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"defNoNodes :: (gr a b) -> Int | Graph gr"},["Bin",2,["Location","Platform","Data.Graph.Inductive.Graph",["Just",393],["Just",38],"defMatchAny"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","GDecomp",[["Var","gr"],["Var","a"],["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"defMatchAny :: (gr a b) -> GDecomp gr a b | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",382],["Just",460],"unOrdGr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","OrdGr",[["Var","gr"],["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[]],"fe_representation":"unOrdGr :: (OrdGr gr a b) -> gr a b"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",399],["Just",50],"defNodeRange"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Type","Node",[]],["Type","Node",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"defNodeRange :: (gr a b) -> (Node,Node) | Graph gr"},["Tip"],["Tip"]]]]],["Bin",36,["Location","Platform","Data.Graph.Inductive.Monad",["Just",52],["Just",45],"defNodeRangeM"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","_Tuple2",[["Type","Node",[]],["Type","Node",[]]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"defNodeRangeM :: (m (gr a b)) -> m (Node,Node) | GraphM m gr"},["Bin",21,["Location","Platform","Data.Graph.Inductive.Internal.RootPath",["Just",13],["Just",18],"findP"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Type","LRTree",[["Var","a"]]]],["Type","_List",[["Type","LNode",[["Var","a"]]]]],[]],"fe_representation":"findP :: Node (LRTree a) -> [LNode a]"},["Bin",7,["Location","Platform","Data.Graph.Inductive.Internal.Queue",["Just",9],["Just",14],"queuePutList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","Queue",[["Var","a"]]]],["Type","Queue",[["Var","a"]]],[]],"fe_representation":"queuePutList :: [a] (Queue a) -> Queue a"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Internal.Queue",["Just",5],["Just",8],"mkQueue"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Queue",[["Var","a"]]],[]],"fe_representation":"mkQueue :: Queue a"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.Queue",["Just",3],["Just",6],"MkQueue"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Queue",[["Var","a"]]],[]],"fe_representation":"MkQueue :: [a] [a] -> Queue a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.Queue",["Just",7],["Just",11],"queuePut"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Queue",[["Var","a"]]]],["Type","Queue",[["Var","a"]]],[]],"fe_representation":"queuePut :: a (Queue a) -> Queue a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Internal.Queue",["Just",13],["Just",21],"queueEmpty"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Queue",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"queueEmpty :: (Queue a) -> Bool"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.Queue",["Just",11],["Just",17],"queueGet"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Queue",[["Var","a"]]]],["Type","_Tuple2",[["Var","a"],["Type","Queue",[["Var","a"]]]]],[]],"fe_representation":"queueGet :: (Queue a) -> (a,Queue a)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.RootPath",["Just",10],["Just",12],"first"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[]],["Type","_List",[["Type","_List",[["Var","a"]]]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"first :: ([a] -> Bool) [[a]] -> [a]"},["Tip"],["Tip"]]]],["Bin",13,["Location","Platform","Data.Graph.Inductive.Internal.RootPath",["Just",21],["Just",33],"getLPathNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Type","LRTree",[["Var","a"]]]],["Type","Path",[]],[]],"fe_representation":"getLPathNodes :: Node (LRTree a) -> Path"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Internal.RootPath",["Just",17],["Just",27],"getLPath"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Type","LRTree",[["Var","a"]]]],["Type","LPath",[["Var","a"]]],[]],"fe_representation":"getLPath :: Node (LRTree a) -> LPath a"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.RootPath",["Just",15],["Just",24],"getPath"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Type","RTree",[]]],["Type","Path",[]],[]],"fe_representation":"getPath :: Node RTree -> Path"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.RootPath",["Just",19],["Just",30],"getDistance"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Type","LRTree",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"getDistance :: Node (LRTree a) -> a"},["Tip"],["Tip"]]],["Bin",9,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",107],["Just",127],"splitParM"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SplitM",[["Var","t"],["Var","i"],["Var","r"]]],["Type","Split",[["Var","u"],["Var","j"],["Var","s"]]]],["Type","SplitM",[["Type","_Tuple2",[["Var","t"],["Var","u"]]],["Type","_Tuple2",[["Var","i"],["Var","j"]]],["Type","_Tuple2",[["Var","r"],["Var","s"]]]]],[]],"fe_representation":"splitParM :: (SplitM t i r) (Split u j s) -> SplitM (t,u) (i,j) (r,s)"},["Bin",5,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",98],["Just",110],"threadMaybe"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","i"]],["Func",[["Var","r"]],["Var","a"],[]],[]],["Type","Split",[["Var","t"],["Var","i"],["Var","r"]]],["Type","SplitM",[["Var","t"],["Var","j"],["Var","i"]]]],["Type","SplitM",[["Var","t"],["Var","j"],["Var","a"]]],[]],"fe_representation":"threadMaybe :: (i -> r -> a) (Split t i r) (SplitM t j i) -> SplitM t j a"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",79],["Just",82],"threadList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Collect",[["Var","r"],["Var","c"]]],["Type","Split",[["Var","t"],["Var","i"],["Var","r"]]],["Type","_List",[["Var","i"]]],["Var","t"]],["Type","_Tuple2",[["Var","c"],["Var","t"]]],[]],"fe_representation":"threadList :: (Collect r c) (Split t i r) [i] t -> (c,t)"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",70],["Just",70],"threadList`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Collect",[["Var","r"],["Var","c"]]],["Type","Split",[["Var","t"],["Var","i"],["Var","r"]]],["Type","_List",[["Var","i"]]],["Var","t"]],["Type","_Tuple2",[["Var","c"],["Var","t"]]],[]],"fe_representation":"threadList` :: (Collect r c) (Split t i r) [i] t -> (c,t)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",91],["Just",99],"threadMaybe`"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Var","a"],[]],["Type","Split",[["Var","t"],["Var","i"],["Var","r"]]],["Type","Split",[["Var","t"],["Var","j"],["Type","Maybe",[["Var","i"]]]]]],["Type","Split",[["Var","t"],["Var","j"],["Type","Maybe",[["Var","a"]]]]],[]],"fe_representation":"threadMaybe` :: (r -> a) (Split t i r) (Split t j (Maybe i)) -> Split t j (Maybe a)"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",105],["Just",121],"splitPar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Split",[["Var","t"],["Var","i"],["Var","r"]]],["Type","Split",[["Var","u"],["Var","j"],["Var","s"]]]],["Type","Split",[["Type","_Tuple2",[["Var","t"],["Var","u"]]],["Type","_Tuple2",[["Var","i"],["Var","j"]]],["Type","_Tuple2",[["Var","r"],["Var","s"]]]]],[]],"fe_representation":"splitPar :: (Split t i r) (Split u j s) -> Split (t,u) (i,j) (r,s)"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Monad",["Just",48],["Just",36],"defMatchAnyM"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","GDecomp",[["Var","gr"],["Var","a"],["Var","b"]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"defMatchAnyM :: (m (gr a b)) -> m (GDecomp gr a b) | GraphM m gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Monad",["Just",46],["Just",30],"defLabEdgesM"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","_List",[["Type","LEdge",[["Var","b"]]]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"defLabEdgesM :: (m (gr a b)) -> m [LEdge b] | GraphM m gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Monad",["Just",50],["Just",42],"defNoNodesM"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","Int",[]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"defNoNodesM :: (m (gr a b)) -> m Int | GraphM m gr"},["Tip"],["Tip"]]]]]],["Bin",14,["Location","Platform","Data.Graph.Inductive.Monad",["Just",85],["Just",96],"mkUGraphM"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Node",[]]]],["Type","_List",[["Type","Edge",[]]]]],["Cons","m",[["Cons","gr",[["Type","_Unit",[]],["Type","_Unit",[]]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"mkUGraphM :: [Node] [Edge] -> m (gr () ()) | GraphM m gr"},["Bin",7,["Location","Platform","Data.Graph.Inductive.Monad",["Just",74],["Just",77],"edgesM"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","_List",[["Type","Edge",[]]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"edgesM :: (m (gr a b)) -> m [Edge] | GraphM m gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Monad",["Just",67],["Just",65],"ufoldM"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Func",[["Var","c"]],["Var","c"],[]],[]],["Var","c"],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Var","c"]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"ufoldM :: ((Context a b) -> c -> c) c (m (gr a b)) -> m c | GraphM m gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Monad",["Just",56],["Just",53],">>."],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Cons","m",[["Var","a"]]]],["Cons","m",[["Var","b"]]],[]],["Func",[["Var","b"]],["Var","c"],[]],["Cons","m",[["Var","a"]]]],["Cons","m",[["Var","c"]]],[[["Class","Monad"],["Var","m"]]]],"fe_priority":["LeftAssoc",9],"fe_representation":"(>>.) infixl 9 :: ((m a) -> m b) (b -> c) (m a) -> m c | Monad m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Monad",["Just",72],["Just",74],"nodesM"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","_List",[["Type","Node",[]]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"nodesM :: (m (gr a b)) -> m [Node] | GraphM m gr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Monad",["Just",81],["Just",89],"delNodeM"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"delNodeM :: Node (m (gr a b)) -> m (gr a b) | GraphM m gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Monad",["Just",76],["Just",80],"newNodesM"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","_List",[["Type","Node",[]]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"newNodesM :: Int (m (gr a b)) -> m [Node] | GraphM m gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Monad",["Just",83],["Just",92],"delNodesM"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Node",[]]]],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"delNodesM :: [Node] (m (gr a b)) -> m (gr a b) | GraphM m gr"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Data.Graph.Inductive.Monad",["Just",96],["Just",114],"contextM"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]],["Type","Node",[]]],["Cons","m",[["Type","Context",[["Var","a"],["Var","b"]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"contextM :: (m (gr a b)) Node -> m (Context a b) | GraphM m gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Monad",["Just",89],["Just",102],"labUNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Node",[]]]]],["Type","_List",[["Type","LNode",[["Type","_Unit",[]]]]]],[]],"fe_representation":"labUNodes :: [Node] -> [LNode ()]"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Monad",["Just",87],["Just",99],"labUEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Edge",[]]]]],["Type","_List",[["Type","LEdge",[["Type","_Unit",[]]]]]],[]],"fe_representation":"labUEdges :: [Edge] -> [LEdge ()]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Monad",["Just",94],["Just",108],"onMatch"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Var","c"],[]],["Var","c"],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]],["Type","Node",[]]],["Cons","m",[["Var","c"]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"onMatch :: ((Context a b) -> c) c (m (gr a b)) Node -> m c | GraphM m gr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graph.Inductive.Monad",["Just",98],["Just",117],"labM"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]],["Type","Node",[]]],["Cons","m",[["Type","Maybe",[["Var","a"]]]]],[[["Class","GraphM"],["Cons","m",[["Var","gr"]]]]]],"fe_representation":"labM :: (m (gr a b)) Node -> m (Maybe a) | GraphM m gr"},["Tip"],["Bin",1,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",8],["Just",17],"key"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":".key :: (NodeMap a) -> Int"},["Tip"],["Tip"]]]]]]],["Bin",67,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",73],["Just",175],"swap"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Var","b"],["Var","a"]]],[]],"fe_representation":"swap :: (a,b) -> (b,a)"},["Bin",32,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",48],["Just",86],"insMapEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_Tuple3",[["Var","a"],["Var","a"],["Var","b"]]],["Cons","g",[["Var","a"],["Var","b"]]]],["Cons","g",[["Var","a"],["Var","b"]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"insMapEdge :: (NodeMap a) (a,a,b) (g a b) -> g a b | Ord a & DynGraph g"},["Bin",11,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",34],["Just",58],"mkEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_List",[["Type","_Tuple3",[["Var","a"],["Var","a"],["Var","b"]]]]]],["Type","Maybe",[["Type","_List",[["Type","LEdge",[["Var","b"]]]]]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"mkEdges :: (NodeMap a) [(a,a,b)] -> Maybe [LEdge b] | Ord a"},["Bin",5,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",25],["Just",41],"mkNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Var","a"]],["Type","_Tuple2",[["Type","LNode",[["Var","a"]]],["Type","NodeMap",[["Var","a"]]]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"mkNode :: (NodeMap a) a -> (LNode a,NodeMap a) | Ord a"},["Bin",2,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",21],["Just",32],"fromGraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","g",[["Var","a"],["Var","b"]]]],["Type","NodeMap",[["Var","a"]]],[[["Class","Ord"],["Var","a"]],[["Class","Graph"],["Var","g"]]]],"fe_representation":"fromGraph :: (g a b) -> NodeMap a | Ord a & Graph g"},["Bin",1,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",16],["Just",26],"new"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","NodeMap",[["Var","a"]]],[]],"fe_representation":"new :: NodeMap a"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",28],["Just",50],"mkNode_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Var","a"]],["Type","LNode",[["Var","a"]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"mkNode_ :: (NodeMap a) a -> LNode a | Ord a"},["Tip"],["Bin",1,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",31],["Just",54],"mkEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_Tuple3",[["Var","a"],["Var","a"],["Var","b"]]]],["Type","Maybe",[["Type","LEdge",[["Var","b"]]]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"mkEdge :: (NodeMap a) (a,a,b) -> Maybe (LEdge b) | Ord a"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",42],["Just",73],"mkNodes_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","LNode",[["Var","a"]]]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"mkNodes_ :: (NodeMap a) [a] -> [LNode a] | Ord a"},["Bin",2,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",37],["Just",62],"mkNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","_Tuple2",[["Type","_List",[["Type","LNode",[["Var","a"]]]]],["Type","NodeMap",[["Var","a"]]]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"mkNodes :: (NodeMap a) [a] -> ([LNode a],NodeMap a) | Ord a"},["Tip"],["Bin",1,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",39],["Just",65],"map`"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","_Tuple2",[["Var","c"],["Var","a"]]],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]]],["Type","_Tuple2",[["Type","_List",[["Var","c"]]],["Var","a"]]],[]],"fe_representation":"map` :: (a -> b -> (c,a)) a [b] -> ([c],a)"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",44],["Just",76],"insMapNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Var","a"],["Cons","g",[["Var","a"],["Var","b"]]]],["Type","_Tuple3",[["Cons","g",[["Var","a"],["Var","b"]]],["Type","NodeMap",[["Var","a"]]],["Type","LNode",[["Var","a"]]]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"insMapNode :: (NodeMap a) a (g a b) -> (g a b,NodeMap a,LNode a) | Ord a & DynGraph g"},["Tip"],["Bin",1,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",46],["Just",81],"insMapNode_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Var","a"],["Cons","g",[["Var","a"],["Var","b"]]]],["Cons","g",[["Var","a"],["Var","b"]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"insMapNode_ :: (NodeMap a) a (g a b) -> g a b | Ord a & DynGraph g"},["Tip"],["Tip"]]]]],["Bin",20,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",60],["Just",116],"delMapNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_List",[["Var","a"]]],["Cons","g",[["Var","a"],["Var","b"]]]],["Cons","g",[["Var","a"],["Var","b"]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"delMapNodes :: (NodeMap a) [a] (g a b) -> g a b | Ord a & DynGraph g"},["Bin",5,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",54],["Just",101],"insMapNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_List",[["Var","a"]]],["Cons","g",[["Var","a"],["Var","b"]]]],["Type","_Tuple3",[["Cons","g",[["Var","a"],["Var","b"]]],["Type","NodeMap",[["Var","a"]]],["Type","_List",[["Type","LNode",[["Var","a"]]]]]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"insMapNodes :: (NodeMap a) [a] (g a b) -> (g a b,NodeMap a,[LNode a]) | Ord a & DynGraph g"},["Bin",2,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",50],["Just",91],"delMapNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Var","a"],["Cons","g",[["Var","a"],["Var","b"]]]],["Cons","g",[["Var","a"],["Var","b"]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"delMapNode :: (NodeMap a) a (g a b) -> g a b | Ord a & DynGraph g"},["Tip"],["Bin",1,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",52],["Just",96],"delMapEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_Tuple2",[["Var","a"],["Var","a"]]],["Cons","g",[["Var","a"],["Var","b"]]]],["Cons","g",[["Var","a"],["Var","b"]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"delMapEdge :: (NodeMap a) (a,a) (g a b) -> g a b | Ord a & DynGraph g"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",56],["Just",106],"insMapNodes_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_List",[["Var","a"]]],["Cons","g",[["Var","a"],["Var","b"]]]],["Cons","g",[["Var","a"],["Var","b"]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"insMapNodes_ :: (NodeMap a) [a] (g a b) -> g a b | Ord a & DynGraph g"},["Tip"],["Bin",1,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",58],["Just",111],"insMapEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_List",[["Type","_Tuple3",[["Var","a"],["Var","a"],["Var","b"]]]]],["Cons","g",[["Var","a"],["Var","b"]]]],["Cons","g",[["Var","a"],["Var","b"]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"insMapEdges :: (NodeMap a) [(a,a,b)] (g a b) -> g a b | Ord a & DynGraph g"},["Tip"],["Tip"]]]],["Bin",14,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",53],["Just",133],"fastGMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Context",[["Var","c"],["Var","d"]]],[]],["Type","Gr",[["Var","a"],["Var","b"]]]],["Type","Gr",[["Var","c"],["Var","d"]]],[]],"fe_representation":"fastGMap :: ((Context a b) -> Context c d) (Gr a b) -> Gr c d"},["Bin",6,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",25],["Just",38],"Gr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","GraphRep",[["Var","a"],["Var","b"]]]],["Type","Gr",[["Var","a"],["Var","b"]]],[]],"fe_representation":"Gr :: (GraphRep a b) -> Gr a b"},["Bin",2,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",64],["Just",127],"mkMapGraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Type","_Tuple3",[["Var","a"],["Var","a"],["Var","b"]]]]]],["Type","_Tuple2",[["Cons","g",[["Var","a"],["Var","b"]]],["Type","NodeMap",[["Var","a"]]]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"mkMapGraph :: [a] [(a,a,b)] -> (g a b,NodeMap a) | Ord a & DynGraph g"},["Bin",1,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",62],["Just",121],"delMapEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","NodeMap",[["Var","a"]]],["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","a"]]]]],["Cons","g",[["Var","a"],["Var","b"]]]],["Cons","g",[["Var","a"],["Var","b"]]],[[["Class","Ord"],["Var","a"]],[["Class","DynGraph"],["Var","g"]]]],"fe_representation":"delMapEdges :: (NodeMap a) [(a,a)] (g a b) -> g a b | Ord a & DynGraph g"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",49],["Just",119],"fastInsNode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LNode",[["Var","a"]]],["Type","Gr",[["Var","a"],["Var","b"]]]],["Type","Gr",[["Var","a"],["Var","b"]]],[]],"fe_representation":"fastInsNode :: (LNode a) !(Gr a b) -> Gr a b"},["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",43],["Just",101],"matchGr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Type","Gr",[["Var","a"],["Var","b"]]]],["Type","Decomp",[["Type","Gr",[]],["Var","a"],["Var","b"]]],[]],"fe_representation":"matchGr :: Node (Gr a b) -> Decomp Gr a b"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",51],["Just",124],"fastInsEdge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LEdge",[["Var","b"]]],["Type","Gr",[["Var","a"],["Var","b"]]]],["Type","Gr",[["Var","a"],["Var","b"]]],[]],"fe_representation":"fastInsEdge :: (LEdge b) !(Gr a b) -> Gr a b"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",65],["Just",161],"toAdj"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Type","_List",[["Var","b"]]]]]],["Type","Adj",[["Var","b"]]],[]],"fe_representation":"toAdj :: (IntMap [b]) -> Adj b"},["Bin",3,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",57],["Just",145],"fastEMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Var","c"],[]],["Type","Gr",[["Var","a"],["Var","b"]]]],["Type","Gr",[["Var","a"],["Var","c"]]],[]],"fe_representation":"fastEMap :: (b -> c) (Gr a b) -> Gr a c"},["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",55],["Just",139],"fastNMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","c"],[]],["Type","Gr",[["Var","a"],["Var","b"]]]],["Type","Gr",[["Var","c"],["Var","b"]]],[]],"fe_representation":"fastNMap :: (a -> c) (Gr a b) -> Gr c b"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",59],["Just",151],"fastNEMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","c"],[]],["Func",[["Var","b"]],["Var","d"],[]],["Type","Gr",[["Var","a"],["Var","b"]]]],["Type","Gr",[["Var","c"],["Var","d"]]],[]],"fe_representation":"fastNEMap :: (a -> c) (b -> d) (Gr a b) -> Gr c d"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",69],["Just",169],"toContext"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Type","Context`",[["Var","a"],["Var","b"]]]],["Type","Context",[["Var","a"],["Var","b"]]],[]],"fe_representation":"toContext :: Node (Context` a b) -> Context a b"},["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",67],["Just",166],"fromAdj"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Adj",[["Var","b"]]]],["Type","IntMap",[["Type","_List",[["Var","b"]]]]],[]],"fe_representation":"fromAdj :: (Adj b) -> IntMap [b]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",71],["Just",172],"fromContext"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","Context`",[["Var","a"],["Var","b"]]],[]],"fe_representation":"fromContext :: (Context a b) -> Context` a b"},["Tip"],["Tip"]]]]]]],["Bin",34,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",27],["Just",41],"suci"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]],["Type","Int",[]]],["Type","_List",[["Type","_Tuple2",[["Type","Node",[]],["Type","Int",[]]]]]],[]],"fe_representation":"suci :: (Context a b) Int -> [(Node,Int)]"},["Bin",11,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",85],["Just",203],"clearSucc"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","GraphRep",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Type","_List",[["Type","Node",[]]]]],["Type","GraphRep",[["Var","a"],["Var","b"]]],[]],"fe_representation":"clearSucc :: (GraphRep a b) Node [Node] -> GraphRep a b"},["Bin",3,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",81],["Just",187],"addSucc"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","GraphRep",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Type","_List",[["Type","_Tuple2",[["Var","b"],["Type","Node",[]]]]]]],["Type","GraphRep",[["Var","a"],["Var","b"]]],[]],"fe_representation":"addSucc :: (GraphRep a b) Node [(b,Node)] -> GraphRep a b"},["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",79],["Just",182],"addLists"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"addLists :: [a] [a] -> [a]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",83],["Just",195],"addPred"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","GraphRep",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Type","_List",[["Type","_Tuple2",[["Var","b"],["Type","Node",[]]]]]]],["Type","GraphRep",[["Var","a"],["Var","b"]]],[]],"fe_representation":"addPred :: (GraphRep a b) Node [(b,Node)] -> GraphRep a b"},["Tip"],["Tip"]]],["Bin",7,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",16],["Just",26],"bfsn"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Node",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bfsn :: [Node] (gr a b) -> [Node] | Graph gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",12],["Just",15],"bfsnInternal"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Var","c"],[]],["Type","Queue",[["Type","Node",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Var","c"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bfsnInternal :: ((Context a b) -> c) (Queue Node) (gr a b) -> [c] | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",87],["Just",211],"clearPred"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","GraphRep",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Type","_List",[["Type","Node",[]]]]],["Type","GraphRep",[["Var","a"],["Var","b"]]],[]],"fe_representation":"clearPred :: (GraphRep a b) Node [Node] -> GraphRep a b"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",14],["Just",23],"bfsnWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Var","c"],[]],["Type","_List",[["Type","Node",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Var","c"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bfsnWith :: ((Context a b) -> c) [Node] (gr a b) -> [c] | Graph gr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",20],["Just",32],"bfs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Node",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bfs :: Node (gr a b) -> [Node] | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",18],["Just",29],"bfsWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Var","c"],[]],["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Var","c"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bfsWith :: ((Context a b) -> c) Node (gr a b) -> [c] | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",25],["Just",38],"level"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","_Tuple2",[["Type","Node",[]],["Type","Int",[]]]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"level :: Node (gr a b) -> [(Node,Int)] | Graph gr"},["Tip"],["Tip"]]]]],["Bin",22,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",64],["Just",100],"esp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Path",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"esp :: Node Node (gr a b) -> Path | Graph gr"},["Bin",7,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",39],["Just",66],"bfe"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Edge",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bfe :: Node (gr a b) -> [Edge] | Graph gr"},["Bin",3,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",35],["Just",55],"bfenInternal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Queue",[["Type","Edge",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Edge",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bfenInternal :: (Queue Edge) (gr a b) -> [Edge] | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",29],["Just",44],"leveln"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Node",[]],["Type","Int",[]]]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","_Tuple2",[["Type","Node",[]],["Type","Int",[]]]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"leveln :: [(Node,Int)] (gr a b) -> [(Node,Int)] | Graph gr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",37],["Just",63],"bfen"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Edge",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Edge",[]]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bfen :: [Edge] (gr a b) -> [Edge] | Graph gr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",60],["Just",89],"bft"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","RTree",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bft :: Node (gr a b) -> RTree | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",41],["Just",69],"outU"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","Edge",[]]]],[]],"fe_representation":"outU :: (Context a b) -> [Edge]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",62],["Just",92],"bf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Queue",[["Type","Path",[]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","RTree",[]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"bf :: (Queue Path) (gr a b) -> RTree | Graph gr"},["Tip"],["Tip"]]]],["Bin",14,["Location","Platform","Data.Graph.Inductive.Query.MaxFlow",["Just",86],["Just",118],"maxFlowgraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Type","Node",[]]],["Cons","gr",[["Var","a"],["Type","_Tuple2",[["Var","b"],["Var","b"]]]]],[[["Class","DynGraph"],["Var","gr"]],[["Class","<"],["Var","b"]],[["Class","Ord"],["Var","b"]],[["Class","Eq"],["Var","b"]],[["Class","zero"],["Var","b"]],[["Class","~"],["Var","b"]],[["Class","+"],["Var","b"]],[["Class","-"],["Var","b"]]]],"fe_representation":"maxFlowgraph :: (gr a b) Node Node -> gr a (b,b) | DynGraph gr & < b & Ord b & Eq b & zero b & ~ b & + b & - b"},["Bin",9,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",75],["Just",123],"lesp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","LPath",[["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"lesp :: Node Node (gr a b) -> LPath b | Graph gr"},["Bin",2,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",73],["Just",114],"lbf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Queue",[["Type","LPath",[["Var","b"]]]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","LRTree",[["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"lbf :: (Queue (LPath b)) (gr a b) -> LRTree b | Graph gr"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.BFS",["Just",71],["Just",108],"lbft"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","LRTree",[["Var","b"]]],[[["Class","Graph"],["Var","gr"]]]],"fe_representation":"lbft :: Node (gr a b) -> LRTree b | Graph gr"},["Tip"],["Tip"]],["Tip"]],["Bin",6,["Location","Platform","Data.Graph.Inductive.Query.MaxFlow",["Just",56],["Just",66],"updAdjList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Adj",[["Type","_Tuple3",[["Var","b"],["Var","b"],["Var","b"]]]]],["Type","Node",[]],["Var","b"],["Type","Bool",[]]],["Type","Adj",[["Type","_Tuple3",[["Var","b"],["Var","b"],["Var","b"]]]]],[[["Class","<"],["Var","b"]],[["Class","Ord"],["Var","b"]],[["Class","Eq"],["Var","b"]],[["Class","zero"],["Var","b"]],[["Class","~"],["Var","b"]],[["Class","+"],["Var","b"]],[["Class","-"],["Var","b"]]]],"fe_representation":"updAdjList :: (Adj (b,b,b)) Node b Bool -> Adj (b,b,b) | < b & Ord b & Eq b & zero b & ~ b & + b & - b"},["Bin",2,["Location","Platform","Data.Graph.Inductive.Query.MaxFlow",["Just",50],["Just",59],"augmentGraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Type","_Tuple3",[["Var","b"],["Var","b"],["Var","b"]]]]],[[["Class","DynGraph"],["Var","gr"]],[["Class","zero"],["Var","b"]]]],"fe_representation":"augmentGraph :: (gr a b) -> gr a (b,b,b) | DynGraph gr & zero b"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.MaxFlow",["Just",39],["Just",45],"getRevEdges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Edge",[]]]]],["Type","_List",[["Type","LEdge",[["Var","b"]]]]],[[["Class","zero"],["Var","b"]]]],"fe_representation":"getRevEdges :: [Edge] -> [LEdge b] | zero b"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Query.MaxFlow",["Just",73],["Just",96],"mfmg"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Type","_Tuple3",[["Var","b"],["Var","b"],["Var","b"]]]]],["Type","Node",[]],["Type","Node",[]]],["Cons","gr",[["Var","a"],["Type","_Tuple3",[["Var","b"],["Var","b"],["Var","b"]]]]],[[["Class","DynGraph"],["Var","gr"]],[["Class","<"],["Var","b"]],[["Class","Ord"],["Var","b"]],[["Class","Eq"],["Var","b"]],[["Class","zero"],["Var","b"]],[["Class","~"],["Var","b"]],[["Class","+"],["Var","b"]],[["Class","-"],["Var","b"]]]],"fe_representation":"mfmg :: (gr a (b,b,b)) Node Node -> gr a (b,b,b) | DynGraph gr & < b & Ord b & Eq b & zero b & ~ b & + b & - b"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.MaxFlow",["Just",63],["Just",77],"updateFlow"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Path",[]],["Var","b"],["Cons","gr",[["Var","a"],["Type","_Tuple3",[["Var","b"],["Var","b"],["Var","b"]]]]]],["Cons","gr",[["Var","a"],["Type","_Tuple3",[["Var","b"],["Var","b"],["Var","b"]]]]],[[["Class","DynGraph"],["Var","gr"]],[["Class","<"],["Var","b"]],[["Class","Ord"],["Var","b"]],[["Class","Eq"],["Var","b"]],[["Class","zero"],["Var","b"]],[["Class","~"],["Var","b"]],[["Class","+"],["Var","b"]],[["Class","-"],["Var","b"]]]],"fe_representation":"updateFlow :: Path b (gr a (b,b,b)) -> gr a (b,b,b) | DynGraph gr & < b & Ord b & Eq b & zero b & ~ b & + b & - b"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.MaxFlow",["Just",80],["Just",111],"mf"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Type","Node",[]]],["Cons","gr",[["Var","a"],["Type","_Tuple3",[["Var","b"],["Var","b"],["Var","b"]]]]],[[["Class","DynGraph"],["Var","gr"]],[["Class","<"],["Var","b"]],[["Class","Ord"],["Var","b"]],[["Class","Eq"],["Var","b"]],[["Class","zero"],["Var","b"]],[["Class","~"],["Var","b"]],[["Class","+"],["Var","b"]],[["Class","-"],["Var","b"]]]],"fe_representation":"mf :: (gr a b) Node Node -> gr a (b,b,b) | DynGraph gr & < b & Ord b & Eq b & zero b & ~ b & + b & - b"},["Tip"],["Tip"]]]]],["Bin",4,["Location","Platform","Data.Graphviz",["Just",11],["Nothing"],"Digraph"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","GraphAttribute",[]]]],["Type","_List",[["Type","NodeDef",[]]]],["Type","Maybe",[["Type","SelectedItem",[]]]]],["Type","Digraph",[]],[]],"fe_representation":"Digraph :: String [GraphAttribute] [NodeDef] (Maybe SelectedItem) -> Digraph"},["Bin",1,["Location","Platform","Data.Graph.Inductive.Query.MaxFlow",["Just",89],["Just",124],"maxFlow"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]],["Type","Node",[]],["Type","Node",[]]],["Var","b"],[[["Class","DynGraph"],["Var","gr"]],[["Class","<"],["Var","b"]],[["Class","Ord"],["Var","b"]],[["Class","Eq"],["Var","b"]],[["Class","zero"],["Var","b"]],[["Class","~"],["Var","b"]],[["Class","+"],["Var","b"]],[["Class","-"],["Var","b"]]]],"fe_representation":"maxFlow :: (gr a b) Node Node -> b | DynGraph gr & < b & Ord b & Eq b & zero b & ~ b & + b & - b"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",13],["Nothing"],"SelectedItem"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","SelectedItem",[]],[]],"fe_representation":"SelectedItem :: Int -> SelectedItem"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",16],["Just",144],"digraphTitle"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Digraph",[]]],["Type","String",[]],[]],"fe_representation":"digraphTitle :: !Digraph -> String"},["Tip"],["Tip"]]]]]]]]]]],["Bin",287,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttHeadTarget"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttHeadTarget :: String -> EdgeAttribute"},["Bin",124,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttTrueColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttTrueColor :: Bool -> GraphAttribute"},["Bin",67,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttMargin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Margin",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttMargin :: Margin -> GraphAttribute"},["Bin",35,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttESep"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttESep :: Real -> GraphAttribute"},["Bin",18,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttClusterRank"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ClusterMode",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttClusterRank :: ClusterMode -> GraphAttribute"},["Bin",9,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttBB"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Rect",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttBB :: Rect -> GraphAttribute"},["Bin",5,["Location","Platform","Data.Graphviz",["Just",23],["Nothing"],"NodeDef"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Type","NodeState",[]]]],["Type","_List",[["Type","NodeAttribute",[]]]],["Type","_List",[["Type","EdgeDef",[]]]]],["Type","NodeDef",[]],[]],"fe_representation":"NodeDef :: Int [NodeState] [NodeAttribute] [EdgeDef] -> NodeDef"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",18],["Just",150],"digraphNodes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Digraph",[]]],["Type","_List",[["Type","NodeDef",[]]]],[]],"fe_representation":"digraphNodes :: !Digraph -> [NodeDef]"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",19],["Just",153],"digraphSelectedItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Digraph",[]]],["Type","Maybe",[["Type","SelectedItem",[]]]],[]],"fe_representation":"digraphSelectedItem :: !Digraph -> Maybe SelectedItem"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",29],["Nothing"],"NStAllEdgesFound"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","NodeState",[]],[]],"fe_representation":"NStAllEdgesFound :: Bool -> NodeState"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",34],["Just",166],"printDigraph"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Digraph",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":"printDigraph :: !Digraph -> [String]"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttCenter"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttCenter :: Bool -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttBGColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Color",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttBGColor :: Color -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttCharset"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttCharset :: String -> GraphAttribute"},["Tip"],["Tip"]]]],["Bin",8,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttConcentrate"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttConcentrate :: Bool -> GraphAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttComment"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttComment :: String -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttColorScheme"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttColorScheme :: String -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttCompound"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttCompound :: Bool -> GraphAttribute"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttDefaultDist"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttDefaultDist :: Real -> GraphAttribute"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttDPI"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttDPI :: Real -> GraphAttribute"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttDamping"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttDamping :: Real -> GraphAttribute"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttDim"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttDim :: Int -> GraphAttribute"},["Tip"],["Tip"]]]]],["Bin",16,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttLabel"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttLabel :: String -> GraphAttribute"},["Bin",8,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttFontNames"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttFontNames :: String -> GraphAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttFontColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Color",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttFontColor :: Color -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttEpsilon"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttEpsilon :: Real -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttFontName"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttFontName :: String -> GraphAttribute"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttFontSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttFontSize :: Real -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttFontPath"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttFontPath :: String -> GraphAttribute"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttLP"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","DotPoint",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttLP :: DotPoint -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttK"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttK :: Real -> GraphAttribute"},["Tip"],["Tip"]],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttLayerSep"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttLayerSep :: String -> GraphAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttLabelLoc"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttLabelLoc :: String -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttLabelJust"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttLabelJust :: String -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttLandscape"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttLandscape :: Bool -> GraphAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttLevelsGap"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttLevelsGap :: Real -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttLayers"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LayerList",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttLayers :: LayerList -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttMCLimit"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttMCLimit :: Real -> GraphAttribute"},["Tip"],["Tip"]]]]]],["Bin",31,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttPageDir"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","PageDir",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttPageDir :: PageDir -> GraphAttribute"},["Bin",15,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttNoJustify"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttNoJustify :: Bool -> GraphAttribute"},["Bin",7,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttModeL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttModeL :: String -> GraphAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttMinDist"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttMinDist :: Real -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttMaxIter"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttMaxIter :: Int -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttMode"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttMode :: String -> GraphAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttNSLimit"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttNSLimit :: Real -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttMosek"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttMosek :: Bool -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttNSLimit1"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttNSLimit1 :: Real -> GraphAttribute"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttOrientation"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttOrientation :: String -> GraphAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttNormalize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttNormalize :: Bool -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttNodeSep"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttNodeSep :: Real -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttOrdering"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttOrdering :: String -> GraphAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttPad"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Pad",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttPad :: Pad -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttOutputOrder"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OutputMode",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttOutputOrder :: OutputMode -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttPage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Pointf",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttPage :: Pointf -> GraphAttribute"},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttRoot"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttRoot :: String -> GraphAttribute"},["Bin",7,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttRankSep"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttRankSep :: Real -> GraphAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttRank"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","RankType",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttRank :: RankType -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttQuantum"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttQuantum :: Real -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttRankDir"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","RankDir",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttRankDir :: RankDir -> GraphAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttRemInCross"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttRemInCross :: Bool -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttRatio"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Ratio",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttRatio :: Ratio -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttResolution"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttResolution :: Real -> GraphAttribute"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Sizef",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttSize :: Sizef -> GraphAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttSearchSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttSearchSize :: Int -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttRotate"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttRotate :: Int -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttShowBoxes"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttShowBoxes :: Int -> GraphAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttStylesheet"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttStylesheet :: String -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttStart"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","StartType",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttStart :: StartType -> GraphAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttTarget"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttTarget :: String -> GraphAttribute"},["Tip"],["Tip"]]]]]]],["Bin",56,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttWidth"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttWidth :: Real -> NodeAttribute"},["Bin",33,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttMargin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Margin",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttMargin :: Margin -> NodeAttribute"},["Bin",16,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttFixedSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttFixedSize :: Bool -> NodeAttribute"},["Bin",8,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttColorScheme"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttColorScheme :: String -> NodeAttribute"},["Bin",4,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttVoroMargin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttVoroMargin :: Real -> GraphAttribute"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttViewport"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ViewPort",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttViewport :: ViewPort -> GraphAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GAttURL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GraphAttribute",[]],[]],"fe_representation":"GAttURL :: String -> GraphAttribute"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Color",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttColor :: Color -> NodeAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttDistortion"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttDistortion :: Real -> NodeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttComment"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttComment :: String -> NodeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttFillColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Color",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttFillColor :: Color -> NodeAttribute"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttGroup"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttGroup :: String -> NodeAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttFontName"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttFontName :: String -> NodeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttFontColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Color",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttFontColor :: Color -> NodeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttFontSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttFontSize :: Real -> NodeAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttLabel"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttLabel :: String -> NodeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttHeight"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttHeight :: Real -> NodeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttLayer"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LayerRange",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttLayer :: LayerRange -> NodeAttribute"},["Tip"],["Tip"]]]]],["Bin",16,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttShape"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","NodeShape",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttShape :: NodeShape -> NodeAttribute"},["Bin",7,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttPin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttPin :: Bool -> NodeAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttOrientation"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttOrientation :: Real -> NodeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttNoJustify"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttNoJustify :: Bool -> NodeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttPeripheries"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttPeripheries :: Int -> NodeAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttRegular"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttRegular :: Bool -> NodeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttRects"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Rect",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttRects :: Rect -> NodeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttSamplePoints"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttSamplePoints :: Int -> NodeAttribute"},["Tip"],["Tip"]]]],["Bin",8,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttSkew"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttSkew :: Real -> NodeAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttShowBoxes"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttShowBoxes :: Int -> NodeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttShapeFile"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttShapeFile :: String -> NodeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttSides"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttSides :: Int -> NodeAttribute"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttTarget"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttTarget :: String -> NodeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttStyle"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","NodeStyle",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttStyle :: NodeStyle -> NodeAttribute"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttTooltip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttTooltip :: String -> NodeAttribute"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttURL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttURL :: String -> NodeAttribute"},["Tip"],["Tip"]]]]]]],["Bin",22,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttConstraint"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttConstraint :: Bool -> EdgeAttribute"},["Bin",7,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttArrowTail"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ArrowType",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttArrowTail :: ArrowType -> EdgeAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttArrowHead"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ArrowType",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttArrowHead :: ArrowType -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NAttZ"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","NodeAttribute",[]],[]],"fe_representation":"NAttZ :: Real -> NodeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttArrowSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttArrowSize :: Real -> EdgeAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttColorScheme"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttColorScheme :: String -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Color",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttColor :: Color -> EdgeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttComment"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttComment :: String -> EdgeAttribute"},["Tip"],["Tip"]]]],["Bin",14,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttFontColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Color",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttFontColor :: Color -> EdgeAttribute"},["Bin",6,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttEdgeTarget"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttEdgeTarget :: String -> EdgeAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttDir"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","DirType",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttDir :: DirType -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttDecorate"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttDecorate :: Bool -> EdgeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttEdgeHRef"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttEdgeHRef :: String -> EdgeAttribute"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttEdgeTooltip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttEdgeTooltip :: String -> EdgeAttribute"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttEdgeURL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttEdgeURL :: String -> EdgeAttribute"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttHeadClip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttHeadClip :: Bool -> EdgeAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttFontSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttFontSize :: Real -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttFontName"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttFontName :: String -> EdgeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttHRef"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttHRef :: String -> EdgeAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttHeadLabel"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttHeadLabel :: String -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttHeadHRef"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttHeadHRef :: String -> EdgeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttHeadPort"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","PortPos",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttHeadPort :: PortPos -> EdgeAttribute"},["Tip"],["Tip"]]]]]]]],["Bin",162,["Location","Platform","Data.Graphviz",["Just",299],["Nothing"],"vpZ"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ViewPort",[]]],["Type","Maybe",[["Type","Real",[]]]],[]],"fe_representation":".vpZ :: ViewPort -> Maybe Real"},["Bin",95,["Location","Platform","Data.Graphviz",["Just",230],["Nothing"],"DoubleMargin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]],["Type","Real",[]]],["Type","Margin",[]],[]],"fe_representation":"DoubleMargin :: Real Real -> Margin"},["Bin",52,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttTailLabel"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttTailLabel :: String -> EdgeAttribute"},["Bin",26,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelFontColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Color",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelFontColor :: Color -> EdgeAttribute"},["Bin",9,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLTail"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLTail :: String -> EdgeAttribute"},["Bin",4,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLHead"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLHead :: String -> EdgeAttribute"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttHeadTooltip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttHeadTooltip :: String -> EdgeAttribute"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttHeadURL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttHeadURL :: String -> EdgeAttribute"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLP"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","DotPoint",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLP :: DotPoint -> EdgeAttribute"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelDistance"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelDistance :: Real -> EdgeAttribute"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelAngle"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelAngle :: Real -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabel"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabel :: String -> EdgeAttribute"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelFloat"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelFloat :: Bool -> EdgeAttribute"},["Tip"],["Tip"]]]],["Bin",16,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttMinLen"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttMinLen :: Int -> EdgeAttribute"},["Bin",8,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelTarget"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelTarget :: String -> EdgeAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelFontSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelFontSize :: Real -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelFontName"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelFontName :: String -> EdgeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelHref"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelHref :: String -> EdgeAttribute"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLayer"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LayerRange",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLayer :: LayerRange -> EdgeAttribute"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelTooltip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelTooltip :: String -> EdgeAttribute"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLabelURL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLabelURL :: String -> EdgeAttribute"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttLen"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttLen :: Real -> EdgeAttribute"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttShowBoxes"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttShowBoxes :: Int -> EdgeAttribute"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttSameHead"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttSameHead :: String -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttNoJustify"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttNoJustify :: Bool -> EdgeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttSameTail"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttSameTail :: String -> EdgeAttribute"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttTailClip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttTailClip :: Bool -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttStyle"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","EdgeStyle",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttStyle :: EdgeStyle -> EdgeAttribute"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttTailHRef"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttTailHRef :: String -> EdgeAttribute"},["Tip"],["Tip"]]]]]],["Bin",25,["Location","Platform","Data.Graphviz",["Just",201],["Nothing"],"CMLocal"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ClusterMode",[]],[]],"fe_representation":"CMLocal :: ClusterMode"},["Bin",9,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttTarget"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttTarget :: String -> EdgeAttribute"},["Bin",4,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttTailTarget"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttTailTarget :: String -> EdgeAttribute"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttTailPort"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","PortPos",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttTailPort :: PortPos -> EdgeAttribute"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttTailTooltip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttTailTooltip :: String -> EdgeAttribute"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttTailURL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttTailURL :: String -> EdgeAttribute"},["Tip"],["Tip"]]]],["Bin",4,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttWeight"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttWeight :: Real -> EdgeAttribute"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttTooltip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttTooltip :: String -> EdgeAttribute"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EAttURL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EdgeAttribute",[]],[]],"fe_representation":"EAttURL :: String -> EdgeAttribute"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",201],["Nothing"],"CMGlobal"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ClusterMode",[]],[]],"fe_representation":"CMGlobal :: ClusterMode"},["Tip"],["Tip"]]]],["Bin",15,["Location","Platform","Data.Graphviz",["Just",206],["Nothing"],"CPSW"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CompassPoint",[]],[]],"fe_representation":"CPSW :: CompassPoint"},["Bin",7,["Location","Platform","Data.Graphviz",["Just",206],["Nothing"],"CPNE"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CompassPoint",[]],[]],"fe_representation":"CPNE :: CompassPoint"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",206],["Nothing"],"CPE"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CompassPoint",[]],[]],"fe_representation":"CPE :: CompassPoint"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",201],["Nothing"],"CMNone"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ClusterMode",[]],[]],"fe_representation":"CMNone :: ClusterMode"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",206],["Nothing"],"CPN"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CompassPoint",[]],[]],"fe_representation":"CPN :: CompassPoint"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",206],["Nothing"],"CPS"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CompassPoint",[]],[]],"fe_representation":"CPS :: CompassPoint"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",206],["Nothing"],"CPNW"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CompassPoint",[]],[]],"fe_representation":"CPNW :: CompassPoint"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",206],["Nothing"],"CPSE"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CompassPoint",[]],[]],"fe_representation":"CPSE :: CompassPoint"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graphviz",["Just",219],["Nothing"],"LayerName"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LayerId",[]],[]],"fe_representation":"LayerName :: String -> LayerId"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",216],["Nothing"],"DotPoint"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]],["Type","Real",[]],["Type","Bool",[]]],["Type","DotPoint",[]],[]],"fe_representation":"DotPoint :: Real Real Bool -> DotPoint"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",206],["Nothing"],"CPW"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CompassPoint",[]],[]],"fe_representation":"CPW :: CompassPoint"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",219],["Nothing"],"LayerAll"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","LayerId",[]],[]],"fe_representation":"LayerAll :: LayerId"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",224],["Nothing"],"LayerList"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]]],["Type","LayerList",[]],[]],"fe_representation":"LayerList :: [String] -> LayerList"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",219],["Nothing"],"LayerNr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","LayerId",[]],[]],"fe_representation":"LayerNr :: Int -> LayerId"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",227],["Nothing"],"LayerRange"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LayerId",[]],["Type","_List",[["Type","LayerId",[]]]]],["Type","LayerRange",[]],[]],"fe_representation":"LayerRange :: LayerId [LayerId] -> LayerRange"},["Tip"],["Tip"]]]]]]],["Bin",42,["Location","Platform","Data.Graphviz",["Just",265],["Nothing"],"RTMin"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RankType",[]],[]],"fe_representation":"RTMin :: RankType"},["Bin",20,["Location","Platform","Data.Graphviz",["Just",243],["Nothing"],"PDBR"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","PageDir",[]],[]],"fe_representation":"PDBR :: PageDir"},["Bin",7,["Location","Platform","Data.Graphviz",["Just",234],["Nothing"],"OMNodesFirst"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","OutputMode",[]],[]],"fe_representation":"OMNodesFirst :: OutputMode"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",234],["Nothing"],"OMBreadthFirst"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","OutputMode",[]],[]],"fe_representation":"OMBreadthFirst :: OutputMode"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",230],["Nothing"],"SingleMargin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","Margin",[]],[]],"fe_representation":"SingleMargin :: Real -> Margin"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",234],["Nothing"],"OMEdgesFirst"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","OutputMode",[]],[]],"fe_representation":"OMEdgesFirst :: OutputMode"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",239],["Nothing"],"SinglePad"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","Pad",[]],[]],"fe_representation":"SinglePad :: Real -> Pad"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",239],["Nothing"],"DoublePad"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]],["Type","Real",[]]],["Type","Pad",[]],[]],"fe_representation":"DoublePad :: Real Real -> Pad"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",243],["Nothing"],"PDBL"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","PageDir",[]],[]],"fe_representation":"PDBL :: PageDir"},["Tip"],["Tip"]]]],["Bin",12,["Location","Platform","Data.Graphviz",["Just",253],["Nothing"],"Pointf"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]],["Type","Real",[]]],["Type","Pointf",[]],[]],"fe_representation":"Pointf :: Real Real -> Pointf"},["Bin",6,["Location","Platform","Data.Graphviz",["Just",243],["Nothing"],"PDRT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","PageDir",[]],[]],"fe_representation":"PDRT :: PageDir"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",243],["Nothing"],"PDLT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","PageDir",[]],[]],"fe_representation":"PDLT :: PageDir"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",243],["Nothing"],"PDLB"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","PageDir",[]],[]],"fe_representation":"PDLB :: PageDir"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",243],["Nothing"],"PDRB"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","PageDir",[]],[]],"fe_representation":"PDRB :: PageDir"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",243],["Nothing"],"PDTR"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","PageDir",[]],[]],"fe_representation":"PDTR :: PageDir"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",243],["Nothing"],"PDTL"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","PageDir",[]],[]],"fe_representation":"PDTL :: PageDir"},["Tip"],["Tip"]],["Tip"]]],["Bin",5,["Location","Platform","Data.Graphviz",["Just",259],["Nothing"],"RDRL"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RankDir",[]],[]],"fe_representation":"RDRL :: RankDir"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",259],["Nothing"],"RDBT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RankDir",[]],[]],"fe_representation":"RDBT :: RankDir"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",259],["Nothing"],"RDLR"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RankDir",[]],[]],"fe_representation":"RDLR :: RankDir"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",265],["Nothing"],"RTMax"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RankType",[]],[]],"fe_representation":"RTMax :: RankType"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",259],["Nothing"],"RDTB"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RankDir",[]],[]],"fe_representation":"RDTB :: RankDir"},["Tip"],["Tip"]],["Tip"]]]]],["Bin",21,["Location","Platform","Data.Graphviz",["Just",279],["Nothing"],"ury"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Rect",[]]],["Type","Int",[]],[]],"fe_representation":".ury :: Rect -> Int"},["Bin",11,["Location","Platform","Data.Graphviz",["Just",272],["Nothing"],"RExpand"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Ratio",[]],[]],"fe_representation":"RExpand :: Ratio"},["Bin",6,["Location","Platform","Data.Graphviz",["Just",272],["Nothing"],"AspectRatio"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","Ratio",[]],[]],"fe_representation":"AspectRatio :: Real -> Ratio"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",265],["Nothing"],"RTSink"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RankType",[]],[]],"fe_representation":"RTSink :: RankType"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",265],["Nothing"],"RTSame"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RankType",[]],[]],"fe_representation":"RTSame :: RankType"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",265],["Nothing"],"RTSource"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RankType",[]],[]],"fe_representation":"RTSource :: RankType"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",272],["Nothing"],"RAuto"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Ratio",[]],[]],"fe_representation":"RAuto :: Ratio"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",272],["Nothing"],"RCompress"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Ratio",[]],[]],"fe_representation":"RCompress :: Ratio"},["Tip"],["Tip"]]]],["Bin",4,["Location","Platform","Data.Graphviz",["Just",279],["Nothing"],"lly"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Rect",[]]],["Type","Int",[]],[]],"fe_representation":".lly :: Rect -> Int"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",279],["Nothing"],"llx"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Rect",[]]],["Type","Int",[]],[]],"fe_representation":".llx :: Rect -> Int"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",272],["Nothing"],"RFill"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Ratio",[]],[]],"fe_representation":"RFill :: Ratio"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",279],["Nothing"],"urx"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Rect",[]]],["Type","Int",[]],[]],"fe_representation":".urx :: Rect -> Int"},["Tip"],["Tip"]]]],["Bin",9,["Location","Platform","Data.Graphviz",["Just",294],["Nothing"],"startStyle"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StartType",[]]],["Type","Maybe",[["Type","StartStyle",[]]]],[]],"fe_representation":".startStyle :: StartType -> Maybe StartStyle"},["Bin",5,["Location","Platform","Data.Graphviz",["Just",289],["Nothing"],"SSSelf"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","StartStyle",[]],[]],"fe_representation":"SSSelf :: StartStyle"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",289],["Nothing"],"SSRandom"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","StartStyle",[]],[]],"fe_representation":"SSRandom :: StartStyle"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",286],["Nothing"],"Sizef"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]],["Type","Real",[]],["Type","Bool",[]]],["Type","Sizef",[]],[]],"fe_representation":"Sizef :: Real Real Bool -> Sizef"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",289],["Nothing"],"SSRegular"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","StartStyle",[]],[]],"fe_representation":"SSRegular :: StartStyle"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",294],["Nothing"],"startSeed"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StartType",[]]],["Type","Maybe",[["Type","Int",[]]]],[]],"fe_representation":".startSeed :: StartType -> Maybe Int"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",299],["Nothing"],"vpW"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ViewPort",[]]],["Type","Real",[]],[]],"fe_representation":".vpW :: ViewPort -> Real"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",299],["Nothing"],"vpH"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ViewPort",[]]],["Type","Real",[]],[]],"fe_representation":".vpH :: ViewPort -> Real"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",299],["Nothing"],"vpXY"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ViewPort",[]]],["Type","Maybe",[["Type","Pointf",[]]]],[]],"fe_representation":".vpXY :: ViewPort -> Maybe Pointf"},["Tip"],["Tip"]]]]]]],["Bin",66,["Location","Platform","Data.Graphviz",["Just",358],["Nothing"],"EStyleInvis"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","EdgeStyle",[]],[]],"fe_representation":"EStyleInvis :: EdgeStyle"},["Bin",41,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeRectangle"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeRectangle :: NodeShape"},["Bin",25,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeNone"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeNone :: NodeShape"},["Bin",17,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeHouse"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeHouse :: NodeShape"},["Bin",10,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeDoubleOctagon"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeDoubleOctagon :: NodeShape"},["Bin",6,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeBox"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeBox :: NodeShape"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",307],["Just",159],"hiddenNode"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","_List",[["Type","NodeAttribute",[]]]],[]],"fe_representation":"hiddenNode :: [NodeAttribute]"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",306],["Just",156],"pointNode"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","_List",[["Type","NodeAttribute",[]]]],[]],"fe_representation":"pointNode :: [NodeAttribute]"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeDiamond"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeDiamond :: NodeShape"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeCircle"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeCircle :: NodeShape"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeDoubleCircle"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeDoubleCircle :: NodeShape"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeEllipse"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeEllipse :: NodeShape"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeEgg"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeEgg :: NodeShape"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeHexagon"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeHexagon :: NodeShape"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeMCircle"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeMCircle :: NodeShape"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeInvTrapezium"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeInvTrapezium :: NodeShape"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeInvHouse"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeInvHouse :: NodeShape"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeInvTriangle"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeInvTriangle :: NodeShape"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeMDiamond"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeMDiamond :: NodeShape"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeMSquare"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeMSquare :: NodeShape"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapePoint"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapePoint :: NodeShape"},["Bin",4,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapePentagon"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapePentagon :: NodeShape"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeParallelogram"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeParallelogram :: NodeShape"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeOctagon"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeOctagon :: NodeShape"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapePlainText"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapePlainText :: NodeShape"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeRect"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeRect :: NodeShape"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapePolygon"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapePolygon :: NodeShape"},["Tip"],["Tip"]],["Tip"]]]],["Bin",15,["Location","Platform","Data.Graphviz",["Just",344],["Nothing"],"NStyleDotted"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeStyle",[]],[]],"fe_representation":"NStyleDotted :: NodeStyle"},["Bin",7,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeTripleOctagon"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeTripleOctagon :: NodeShape"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeTrapezium"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeTrapezium :: NodeShape"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeSeptagon"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeSeptagon :: NodeShape"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NShapeTriangle"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeShape",[]],[]],"fe_representation":"NShapeTriangle :: NodeShape"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",344],["Nothing"],"NStyleDashed"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeStyle",[]],[]],"fe_representation":"NStyleDashed :: NodeStyle"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",344],["Nothing"],"NStyleBold"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeStyle",[]],[]],"fe_representation":"NStyleBold :: NodeStyle"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",344],["Nothing"],"NStyleDiagonals"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeStyle",[]],[]],"fe_representation":"NStyleDiagonals :: NodeStyle"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graphviz",["Just",344],["Nothing"],"NStyleSolid"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeStyle",[]],[]],"fe_representation":"NStyleSolid :: NodeStyle"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",344],["Nothing"],"NStyleInvis"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeStyle",[]],[]],"fe_representation":"NStyleInvis :: NodeStyle"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",344],["Nothing"],"NStyleFilled"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeStyle",[]],[]],"fe_representation":"NStyleFilled :: NodeStyle"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",344],["Nothing"],"NStyleRounded"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NodeStyle",[]],[]],"fe_representation":"NStyleRounded :: NodeStyle"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",358],["Nothing"],"EStyleDashed"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","EdgeStyle",[]],[]],"fe_representation":"EStyleDashed :: EdgeStyle"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",358],["Nothing"],"EStyleBold"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","EdgeStyle",[]],[]],"fe_representation":"EStyleBold :: EdgeStyle"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",358],["Nothing"],"EStyleDotted"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","EdgeStyle",[]],[]],"fe_representation":"EStyleDotted :: EdgeStyle"},["Tip"],["Tip"]]]]]],["Bin",24,["Location","Platform","Data.Graphviz",["Just",391],["Nothing"],"shape"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Arrow",[]]],["Type","ArrowShape",[]],[]],"fe_representation":".shape :: Arrow -> ArrowShape"},["Bin",14,["Location","Platform","Data.Graphviz",["Just",379],["Nothing"],"CBlue"],{"fe_kind":["Macro"],"fe_representation":"CBlue :== Color \"blue\""},["Bin",9,["Location","Platform","Data.Graphviz",["Just",369],["Nothing"],"HSV"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]],["Type","Real",[]],["Type","Real",[]]],["Type","Color",[]],[]],"fe_representation":"HSV :: Real Real Real -> Color"},["Bin",2,["Location","Platform","Data.Graphviz",["Just",369],["Nothing"],"Color"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Color",[]],[]],"fe_representation":"Color :: String -> Color"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",358],["Nothing"],"EStyleSolid"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","EdgeStyle",[]],[]],"fe_representation":"EStyleSolid :: EdgeStyle"},["Tip"],["Tip"]],["Tip"]],["Bin",6,["Location","Platform","Data.Graphviz",["Just",375],["Nothing"],"CWhite"],{"fe_kind":["Macro"],"fe_representation":"CWhite :== Color \"white\""},["Bin",2,["Location","Platform","Data.Graphviz",["Just",369],["Nothing"],"RGB"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Type","Int",[]]],["Type","Color",[]],[]],"fe_representation":"RGB :: Int Int Int -> Color"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",374],["Nothing"],"CBlack"],{"fe_kind":["Macro"],"fe_representation":"CBlack :== Color \"black\""},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",377],["Nothing"],"CRed"],{"fe_kind":["Macro"],"fe_representation":"CRed :== Color \"red\""},["Bin",1,["Location","Platform","Data.Graphviz",["Just",376],["Nothing"],"CGray"],{"fe_kind":["Macro"],"fe_representation":"CGray :== Color \"gray\""},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",378],["Nothing"],"CGreen"],{"fe_kind":["Macro"],"fe_representation":"CGreen :== Color \"green\""},["Tip"],["Tip"]]]]],["Bin",4,["Location","Platform","Data.Graphviz",["Just",386],["Nothing"],"closest"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ArrowType",[]]],["Type","Arrow",[]],[]],"fe_representation":".closest :: ArrowType -> Arrow"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",380],["Nothing"],"CYellow"],{"fe_kind":["Macro"],"fe_representation":"CYellow :== Color \"yellow\""},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",386],["Nothing"],"furthest"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ArrowType",[]]],["Type","Maybe",[["Type","Arrow",[]]]],[]],"fe_representation":".furthest :: ArrowType -> Maybe Arrow"},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",391],["Nothing"],"open"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Arrow",[]]],["Type","Bool",[]],[]],"fe_representation":".open :: Arrow -> Bool"},["Tip"],["Tip"]]]]],["Bin",9,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"AShapeDiamond"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrowShape",[]],[]],"fe_representation":"AShapeDiamond :: ArrowShape"},["Bin",5,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"AShapeBox"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrowShape",[]],[]],"fe_representation":"AShapeBox :: ArrowShape"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",397],["Nothing"],"SideL"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Side",[]],[]],"fe_representation":"SideL :: Side"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",391],["Nothing"],"side"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Arrow",[]]],["Type","Maybe",[["Type","Side",[]]]],[]],"fe_representation":".side :: Arrow -> Maybe Side"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",397],["Nothing"],"SideR"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Side",[]],[]],"fe_representation":"SideR :: Side"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"AShapeCrow"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrowShape",[]],[]],"fe_representation":"AShapeCrow :: ArrowShape"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"AShapeInv"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrowShape",[]],[]],"fe_representation":"AShapeInv :: ArrowShape"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"AShapeDot"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrowShape",[]],[]],"fe_representation":"AShapeDot :: ArrowShape"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"AShapeNone"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrowShape",[]],[]],"fe_representation":"AShapeNone :: ArrowShape"},["Tip"],["Tip"]]]]]]]]],["Bin",865,["Location","Platform","Graphics.Scalable.Internal",["Just",77],["Nothing"],"fontstyle"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FontDef",[]]],["Type","String",[]],[]],"fe_representation":".fontstyle :: FontDef -> String"},["Bin",634,["Location","Platform","Database.SQL._MySQL",["Just",22],["Nothing"],"MYSQL_TYPE_VAR_STRING"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_VAR_STRING :== 253"},["Bin",472,["Location","Platform","Data.Map",["Just",224],["Nothing"],"putList"],{"fe_kind":["Macro"],"fe_representation":"putList xs m :== union (fromList xs) m"},["Bin",250,["Location","Platform","Data.List",["Just",26],["Just",101],"getItems"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"getItems :: ![a] ![Int] -> [a]"},["Bin",139,["Location","Platform","Data.IntMap.Strict",["Just",138],["Just",827],"toList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]]]],[]],"fe_representation":"toList :: !(IntMap a) -> [(!Int,!a)]"},["Bin",94,["Location","Platform","Data.Heap",["Just",81],["Nothing"],"splitAt"],{"fe_kind":["Macro"],"fe_representation":"splitAt :== splitWithList o 'L'.splitAt"},["Bin",34,["Location","Platform","Data.Heap",["Just",20],["Just",506],"Cons"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Tree",[["Var","a"]]],["Type","Forest",[["Var","a"]]]],["Type","Forest",[["Var","a"]]],[]],"fe_representation":"Cons :: (Tree a) (Forest a) -> Forest a"},["Bin",10,["Location","Platform","Data.Graphviz",["Just",427],["Nothing"],"layersep"],{"fe_kind":["Macro"],"fe_representation":"layersep :== \":\\t\""},["Bin",6,["Location","Platform","Data.Graphviz",["Just",417],["Nothing"],"DTBoth"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","DirType",[]],[]],"fe_representation":"DTBoth :: DirType"},["Bin",3,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"AShapeVee"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrowShape",[]],[]],"fe_representation":"AShapeVee :: ArrowShape"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"AShapeTee"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrowShape",[]],[]],"fe_representation":"AShapeTee :: ArrowShape"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",417],["Nothing"],"DTBack"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","DirType",[]],[]],"fe_representation":"DTBack :: DirType"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",417],["Nothing"],"DTNone"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","DirType",[]],[]],"fe_representation":"DTNone :: DirType"},["Bin",1,["Location","Platform","Data.Graphviz",["Just",417],["Nothing"],"DTForward"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","DirType",[]],[]],"fe_representation":"DTForward :: DirType"},["Tip"],["Tip"]],["Tip"]]],["Bin",3,["Location","Platform","Data.Heap",["Just",14],["Just",31],"Heap"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","Tree",[["Var","a"]]]],["Type","Heap",[["Var","a"]]],[]],"fe_representation":"Heap :: Int (a -> a -> Bool) (Tree a) -> Heap a"},["Bin",1,["Location","Platform","Data.Heap",["Just",14],["Just",31],"Empty"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Heap",[["Var","a"]]],[]],"fe_representation":"Empty :: Heap a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Heap",["Just",18],["Just",500],"Node"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Var","a"],["Type","Forest",[["Var","a"]]]],["Type","Tree",[["Var","a"]]],[]],"fe_representation":"Node :: Int a (Forest a) -> Tree a"},["Tip"],["Tip"]]]],["Bin",23,["Location","Platform","Data.Heap",["Just",59],["Nothing"],"viewMin"],{"fe_kind":["Macro"],"fe_representation":"viewMin :== uncons"},["Bin",12,["Location","Platform","Data.Heap",["Just",42],["Nothing"],"singleton"],{"fe_kind":["Macro"],"fe_representation":"singleton x :== singletonWith (<=) x"},["Bin",5,["Location","Platform","Data.Heap",["Just",32],["Nothing"],"Entry"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","p"],["Var","a"]],["Type","Entry",[["Var","p"],["Var","a"]]],[]],"fe_representation":"Entry :: p a -> Entry p a"},["Bin",1,["Location","Platform","Data.Heap",["Just",20],["Just",506],"Nil"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Forest",[["Var","a"]]],[]],"fe_representation":"Nil :: Forest a"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","Data.Heap",["Just",36],["Just",81],"size"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Heap",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":"size :: (Heap a) -> Int"},["Bin",1,["Location","Platform","Data.Heap",["Just",34],["Just",69],"null"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Heap",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"null :: (Heap a) -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Heap",["Just",39],["Nothing"],"empty"],{"fe_kind":["Macro"],"fe_representation":"empty :== Empty"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Data.Heap",["Just",52],["Just",133],"union"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Heap",[["Var","a"]]],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","a"]]],[]],"fe_representation":"union :: (Heap a) (Heap a) -> Heap a"},["Bin",3,["Location","Platform","Data.Heap",["Just",48],["Nothing"],"insert"],{"fe_kind":["Macro"],"fe_representation":"insert :== insertWith (<=)"},["Bin",1,["Location","Platform","Data.Heap",["Just",45],["Nothing"],"singletonWith"],{"fe_kind":["Macro"],"fe_representation":"singletonWith f a :== Heap 1 f (Node 0 a Nil)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Heap",["Just",50],["Just",121],"insertWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Var","a"],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","a"]]],[]],"fe_representation":"insertWith :: (a -> a -> Bool) a (Heap a) -> Heap a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Heap",["Just",54],["Just",144],"replicate"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Int",[]]],["Type","Heap",[["Var","a"]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"replicate :: a Int -> Heap a | Ord a"},["Tip"],["Bin",1,["Location","Platform","Data.Heap",["Just",56],["Just",164],"uncons"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Heap",[["Var","a"]]]],["Type","Maybe",[["Type","_Tuple2",[["Var","a"],["Type","Heap",[["Var","a"]]]]]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"uncons :: (Heap a) -> Maybe (a,Heap a) | Ord a"},["Tip"],["Tip"]]]]],["Bin",10,["Location","Platform","Data.Heap",["Just",73],["Just",346],"partition"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","Heap",[["Var","a"]]]],["Type","_Tuple2",[["Type","Heap",[["Var","a"]]],["Type","Heap",[["Var","a"]]]]],[]],"fe_representation":"partition :: (a -> Bool) (Heap a) -> (Heap a,Heap a)"},["Bin",6,["Location","Platform","Data.Heap",["Just",65],["Just",188],"deleteMin"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","a"]]],[]],"fe_representation":"deleteMin :: (Heap a) -> Heap a"},["Bin",2,["Location","Platform","Data.Heap",["Just",63],["Just",180],"trees"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Forest",[["Var","a"]]]],["Type","_List",[["Type","Tree",[["Var","a"]]]]],[]],"fe_representation":"trees :: (Forest a) -> [Tree a]"},["Bin",1,["Location","Platform","Data.Heap",["Just",61],["Just",176],"minimum"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Heap",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"minimum :: (Heap a) -> a"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Data.Heap",["Just",69],["Just",321],"mapMonotonic"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","b"]]],[[["Class","Ord"],["Var","b"]]]],"fe_representation":"mapMonotonic :: (a -> b) (Heap a) -> Heap b | Ord b"},["Bin",1,["Location","Platform","Data.Heap",["Just",67],["Just",310],"map"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","b"]]],[[["Class","Ord"],["Var","b"]]]],"fe_representation":"map :: (a -> b) (Heap a) -> Heap b | Ord b"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Heap",["Just",71],["Just",335],"filter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","a"]]],[]],"fe_representation":"filter :: (a -> Bool) (Heap a) -> Heap a"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Heap",["Just",77],["Nothing"],"take"],{"fe_kind":["Macro"],"fe_representation":"take :== withList o 'L'.take"},["Bin",1,["Location","Platform","Data.Heap",["Just",75],["Just",357],"split"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Heap",[["Var","a"]]]],["Type","_Tuple3",[["Type","Heap",[["Var","a"]]],["Type","Heap",[["Var","a"]]],["Type","Heap",[["Var","a"]]]]],[]],"fe_representation":"split :: a (Heap a) -> (Heap a,Heap a,Heap a)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Heap",["Just",79],["Nothing"],"drop"],{"fe_kind":["Macro"],"fe_representation":"drop :== withList o 'L'.drop"},["Tip"],["Tip"]]]]]],["Bin",59,["Location","Platform","Data.IntMap.Base",["Just",41],["Just",1585],"branchMask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Prefix",[]],["Type","Prefix",[]]],["Type","Mask",[]],[]],"fe_representation":"branchMask :: !Prefix !Prefix -> Mask"},["Bin",25,["Location","Platform","Data.Heap",["Just",101],["Just",472],"intersectWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","b"],[]],[]],["Type","Heap",[["Var","a"]]],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","b"]]],[[["Class","Ord"],["Var","b"]]]],"fe_representation":"intersectWith :: (a -> a -> b) (Heap a) (Heap a) -> Heap b | Ord b"},["Bin",9,["Location","Platform","Data.Heap",["Just",87],["Nothing"],"takeWhile"],{"fe_kind":["Macro"],"fe_representation":"takeWhile :== withList o 'L'.takeWhile"},["Bin",2,["Location","Platform","Data.Heap",["Just",83],["Nothing"],"break"],{"fe_kind":["Macro"],"fe_representation":"break :== splitWithList o 'L'.break"},["Tip"],["Bin",1,["Location","Platform","Data.Heap",["Just",85],["Nothing"],"span"],{"fe_kind":["Macro"],"fe_representation":"span :== splitWithList o 'L'.span"},["Tip"],["Tip"]]],["Bin",6,["Location","Platform","Data.Heap",["Just",93],["Just",435],"concatMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Heap",[["Var","b"]]],[]],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","b"]]],[[["Class","Ord"],["Var","b"]]]],"fe_representation":"concatMap :: (a -> Heap b) (Heap a) -> Heap b | Ord b"},["Bin",2,["Location","Platform","Data.Heap",["Just",89],["Nothing"],"dropWhile"],{"fe_kind":["Macro"],"fe_representation":"dropWhile :== withList o 'L'.dropWhile"},["Tip"],["Bin",1,["Location","Platform","Data.Heap",["Just",91],["Just",423],"nub"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","a"]]],[]],"fe_representation":"nub :: (Heap a) -> Heap a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Heap",["Just",97],["Just",448],"groupBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Type","Heap",[["Var","a"]]]]],[]],"fe_representation":"groupBy :: (a -> a -> Bool) (Heap a) -> Heap (Heap a)"},["Bin",1,["Location","Platform","Data.Heap",["Just",95],["Just",443],"group"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Type","Heap",[["Var","a"]]]]],[]],"fe_representation":"group :: (Heap a) -> Heap (Heap a)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Heap",["Just",99],["Just",457],"intersect"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Heap",[["Var","a"]]],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","a"]]],[]],"fe_representation":"intersect :: (Heap a) (Heap a) -> Heap a"},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","Data.IntMap.Base",["Just",25],["Just",1570],"nomatch"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Prefix",[]],["Type","Mask",[]]],["Type","Bool",[]],[]],"fe_representation":"nomatch :: !Int !Prefix !Mask -> Bool"},["Bin",7,["Location","Platform","Data.IntMap.Base",["Just",8],["Nothing"],"Nil"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"Nil :: IntMap a"},["Bin",3,["Location","Platform","Data.Heap",["Just",105],["Just",631],"splitWithList"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_List",[["Var","a"]]]],["Type","_Tuple2",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]]],[]],["Type","Heap",[["Var","a"]]]],["Type","_Tuple2",[["Type","Heap",[["Var","a"]]],["Type","Heap",[["Var","a"]]]]],[]],"fe_representation":"splitWithList :: ([a] -> ([a],[a])) (Heap a) -> (Heap a,Heap a)"},["Bin",1,["Location","Platform","Data.Heap",["Just",103],["Just",627],"withList"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],["Type","Heap",[["Var","a"]]]],["Type","Heap",[["Var","a"]]],[]],"fe_representation":"withList :: ([a] -> [a]) (Heap a) -> Heap a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Base",["Just",8],["Nothing"],"Bin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Prefix",[]],["Type","Mask",[]],["Type","IntMap",[["Var","a"]]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"Bin :: Prefix Mask (IntMap a) (IntMap a) -> IntMap a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.IntMap.Base",["Just",21],["Just",1532],"equal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]],["Type","IntMap",[["Var","a"]]]],["Type","Bool",[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"equal :: (IntMap a) (IntMap a) -> Bool | == a"},["Bin",1,["Location","Platform","Data.IntMap.Base",["Just",8],["Nothing"],"Tip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Var","a"]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"Tip :: Int a -> IntMap a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Base",["Just",23],["Just",1562],"bin"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Prefix",[]],["Type","Mask",[]],["Type","IntMap",[["Var","a"]]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"bin :: !Prefix !Mask !(IntMap a) !(IntMap a) -> IntMap a"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.IntMap.Base",["Just",33],["Just",524],"union"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"union :: (IntMap a) (IntMap a) -> IntMap a"},["Bin",3,["Location","Platform","Data.IntMap.Base",["Just",29],["Just",1278],"foldrWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Int",[]]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],[]],["Var","b"],["Type","IntMap",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"foldrWithKey :: (Int -> a -> b -> b) b (IntMap a) -> b"},["Bin",1,["Location","Platform","Data.IntMap.Base",["Just",27],["Just",287],"empty"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"empty :: IntMap a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Base",["Just",31],["Just",1506],"fromDistinctAscList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"fromDistinctAscList :: ![(!Int,!a)] -> IntMap a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.IntMap.Base",["Just",37],["Just",1576],"mask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Mask",[]]],["Type","Prefix",[]],[]],"fe_representation":"mask :: !Int !Mask -> Prefix"},["Bin",1,["Location","Platform","Data.IntMap.Base",["Just",35],["Just",509],"unions"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","IntMap",[["Var","a"]]]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"unions :: [IntMap a] -> IntMap a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Base",["Just",39],["Just",1582],"shorter"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Mask",[]],["Type","Mask",[]]],["Type","Bool",[]],[]],"fe_representation":"shorter :: !Mask !Mask -> Bool"},["Tip"],["Tip"]]]]]],["Bin",33,["Location","Platform","Data.IntMap.Strict",["Just",76],["Just",49],"get"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","IntMap",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"get :: !Int !.(IntMap .a) -> Maybe .a","fe_documentation":["FunctionDoc",["Just","Searches for a value at a given key position. Works only for non-unique\nmappings."],["The key to look for","The orginal mapping"],[],["Just","When found, the value at the key position, if not: Nothing"]]},["Bin",11,["Location","Platform","Data.IntMap.Strict",["Just",37],["Just",142],"put"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"put :: !Int !u:a !v:(IntMap u:a) -> w:(IntMap u:a), [w<=u, v<=w]","fe_documentation":["FunctionDoc",["Just","Adds or replaces the value for a given key."],["The key value to add\/update","The value to add\/update at the key position","The original mapping"],[],["Just","The modified mapping with the added value"]]},["Bin",7,["Location","Platform","Data.IntMap.Base",["Just",58],["Just",144],"lookup"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","IntMap",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"lookup :: !Int (IntMap a) -> Maybe a"},["Bin",2,["Location","Platform","Data.IntMap.Base",["Just",55],["Just",724],"maxViewWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]]],["Type","Maybe",[["Type","_Tuple2",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]],["Type","IntMap",[["Var","a"]]]]]]],[]],"fe_representation":"maxViewWithKey :: (IntMap a) -> Maybe ((Int,a),IntMap a)"},["Bin",1,["Location","Platform","Data.IntMap.Base",["Just",48],["Just",739],"minViewWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]]],["Type","Maybe",[["Type","_Tuple2",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]],["Type","IntMap",[["Var","a"]]]]]]],[]],"fe_representation":"minViewWithKey :: (IntMap a) -> Maybe ((Int,a),IntMap a)"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","Platform","Data.IntMap.Strict",["Just",25],["Just",102],"singleton"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"singleton :: !Int !.a -> .(IntMap .a)"},["Bin",2,["Location","Platform","Data.IntMap.Strict",["Just",23],["Just",115],"newMap"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","IntMap",[["Var","v"]]],[]],"fe_representation":"newMap :: w:(IntMap u:v), [w<=u]","fe_documentation":["FunctionDoc",["Just","Create an empty Map"],[],[],["Just","An empty map"]]},["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",16],["Just",118],"null"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"null :: !(IntMap a) -> Bool"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",27],["Just",105],"mapSize"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","v"]]]],["Type","Int",[]],[]],"fe_representation":"mapSize :: !(IntMap v) -> Int"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.IntMap.Strict",["Just",58],["Just",186],"insertWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","Int",[]],["Var","a"],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"insertWith :: !(a -> a -> a) !Int !a !(IntMap a) -> IntMap a"},["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",47],["Just",130],"insert"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"insert :: !Int !u:a !v:(IntMap u:a) -> w:(IntMap u:a), [w<=u, v<=w]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",66],["Just",250],"adjust"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","a"],[]],["Type","Int",[]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"adjust :: !(a -> a) !Int !(IntMap a) -> IntMap a"},["Tip"],["Tip"]]]],["Bin",21,["Location","Platform","Data.IntMap.Strict",["Just",112],["Just",433],"mergeWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Int",[]]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","Maybe",[["Var","c"]]],[]],[]],[]],["Func",[["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","c"]]],[]],["Func",[["Type","IntMap",[["Var","b"]]]],["Type","IntMap",[["Var","c"]]],[]],["Type","IntMap",[["Var","a"]]],["Type","IntMap",[["Var","b"]]]],["Type","IntMap",[["Var","c"]]],[]],"fe_representation":"mergeWithKey :: !(Int -> a -> b -> Maybe c) !((IntMap a) -> IntMap c) !((IntMap b) -> IntMap c) !(IntMap a) !(IntMap b) -> IntMap c"},["Bin",13,["Location","Platform","Data.IntMap.Strict",["Just",101],["Nothing"],"notMember"],{"fe_kind":["Macro"],"fe_representation":"notMember k m :== not (member k m)"},["Bin",7,["Location","Platform","Data.IntMap.Strict",["Just",90],["Just",156],"keys"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]]],["Type","_List",[["Type","Int",[]]]],[]],"fe_representation":"keys :: !.(IntMap a) -> [Int]"},["Bin",3,["Location","Platform","Data.IntMap.Strict",["Just",87],["Just",82],"del"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"del :: !Int !(IntMap a) -> IntMap a","fe_documentation":["FunctionDoc",["Just","Removes the value at a given key position. The mapping itself can be spine unique."],["The key to remove","The original mapping"],[],["Just","The modified mapping with the value\/key removed"]]},["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",78],["Just",62],"getU"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Type","IntMap",[["Var","a"]]]]],["Uniq",["Type","_Tuple2",[["Type","Maybe",[["Var","a"]]],["Uniq",["Type","IntMap",[["Var","a"]]]]]]],[]],"fe_representation":"getU :: !Int !*(IntMap a) -> *(.(Maybe a),*(IntMap a))"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",88],["Just",85],"delete"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"delete :: !Int !(IntMap a) -> IntMap a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.IntMap.Strict",["Just",97],["Just",108],"size"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":"size :: !(IntMap a) -> Int"},["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",91],["Just",153],"elems"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"elems :: !.(IntMap a) -> [a]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",99],["Just",145],"member"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","IntMap",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"member :: !Int !(IntMap a) -> Bool"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.IntMap.Strict",["Just",109],["Just",356],"unionWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","IntMap",[["Var","a"]]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"unionWith :: !(a -> a -> a) !(IntMap a) !(IntMap a) -> IntMap a"},["Bin",3,["Location","Platform","Data.IntMap.Strict",["Just",105],["Just",39],"findWithDefault"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Int",[]],["Type","IntMap",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"findWithDefault :: a !Int !(IntMap a) -> a"},["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",103],["Just",72],"find"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","IntMap",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"find :: !Int !(IntMap a) -> a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",107],["Just",326],"alter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Maybe",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],["Type","Int",[]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"alter :: !((Maybe a) -> Maybe a) !Int !(IntMap a) -> IntMap a"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",110],["Just",350],"unionsWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","_List",[["Type","IntMap",[["Var","a"]]]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"unionsWith :: !(a -> a -> a) ![IntMap a] -> IntMap a"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.IntMap.Strict",["Just",121],["Just",162],"unions"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","IntMap",[["Var","a"]]]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"unions :: ![IntMap a] -> IntMap a"},["Bin",3,["Location","Platform","Data.IntMap.Strict",["Just",117],["Just",165],"foldrWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Int",[]]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],[]],["Var","b"],["Type","IntMap",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"foldrWithKey :: !(Int -> .a -> .(.b -> .b)) !.b !.(IntMap .a) -> .b"},["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",115],["Just",745],"foldlStrict"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","a"],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]]],["Var","a"],[]],"fe_representation":"foldlStrict :: !(a -> b -> a) !a ![b] -> a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",119],["Just",159],"union"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"union :: !(IntMap a) !(IntMap a) -> IntMap a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.IntMap.Strict",["Just",134],["Just",499],"mapWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Int",[]]],["Func",[["Var","a"]],["Var","b"],[]],[]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","b"]]],[]],"fe_representation":"mapWithKey :: !(Int -> a -> b) !(IntMap a) -> IntMap b"},["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",128],["Just",488],"map"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","IntMap",[["Var","a"]]]],["Type","IntMap",[["Var","b"]]],[]],"fe_representation":"map :: !(a -> b) !(IntMap a) -> IntMap b"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",136],["Just",731],"mapSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Uniq",["Var","st"]]],["Uniq",["Type","_Tuple2",[["Var","b"],["Uniq",["Var","st"]]]]],[]],[]],["Type","IntMap",[["Var","a"]]],["Uniq",["Var","st"]]],["Uniq",["Type","_Tuple2",[["Type","IntMap",[["Var","b"]]],["Uniq",["Var","st"]]]]],[]],"fe_representation":"mapSt :: !(a -> *st -> *(!b,!*st)) !.(IntMap a) !*st -> *(!IntMap b,!*st)"},["Tip"],["Tip"]]]]]]]],["Bin",44,["Location","Platform","Data.List",["Just",14],["Just",42],"replaceInList"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Var","a"],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"replaceInList :: !(a -> a -> Bool) !a ![a] -> [a]"},["Bin",32,["Location","Platform","Data.Integer.Div",["Just",11],["Just",1063],"floordiv_mod_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]],["Type","Integer",[]]],["Type","_Tuple2",[["Uniq",["Type","Integer",[]]],["Uniq",["Type","Integer",[]]]]],[]],"fe_representation":"floordiv_mod_integer :: !Integer !Integer -> (!*Integer,!*Integer)"},["Bin",17,["Location","Platform","Data.Integer",["Just",8],["Nothing"],"integer_a"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Integer",[]]],["Type","_#Array",[["Type","Int",[]]]],[]],"fe_representation":".integer_a :: Integer -> {#Int}"},["Bin",8,["Location","Platform","Data.IntMap.Strict",["Just",148],["Just",653],"fromListWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"fromListWith :: !(a -> a -> a) ![(!Int,!a)] -> IntMap a"},["Bin",2,["Location","Platform","Data.IntMap.Strict",["Just",142],["Just",643],"fromList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]]]]],["Type","IntMap",[["Var","a"]]],[]],"fe_representation":"fromList :: ![(!Int,!a)] -> IntMap a"},["Bin",1,["Location","Platform","Data.IntMap.Strict",["Just",140],["Just",834],"toAscList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IntMap",[["Var","a"]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]]]],[]],"fe_representation":"toAscList :: !(IntMap a) -> [(!Int,!a)]"},["Tip"],["Tip"]],["Tip"]],["Bin",5,["Location","Platform","Data.IntSet.Base",["Just",3],["Nothing"],"Nil"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","IntSet",[]],[]],"fe_representation":"Nil :: IntSet"},["Bin",1,["Location","Platform","Data.IntSet.Base",["Just",3],["Nothing"],"Bin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Prefix",[]],["Type","Mask",[]],["Type","IntSet",[]],["Type","IntSet",[]]],["Type","IntSet",[]],[]],"fe_representation":"Bin :: Prefix Mask IntSet IntSet -> IntSet"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","Data.IntSet.Base",["Just",27],["Just",136],"member"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Key",[]],["Type","IntSet",[]]],["Type","Bool",[]],[]],"fe_representation":"member :: !Key IntSet -> Bool"},["Bin",1,["Location","Platform","Data.IntSet.Base",["Just",3],["Nothing"],"Tip"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Prefix",[]],["Type","BitMap",[]]],["Type","IntSet",[]],[]],"fe_representation":"Tip :: Prefix BitMap -> IntSet"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntSet.Base",["Just",29],["Just",761],"fromList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Key",[]]]]],["Type","IntSet",[]],[]],"fe_representation":"fromList :: [Key] -> IntSet"},["Tip"],["Tip"]]]]],["Bin",8,["Location","Platform","Data.Integer.Div",["Just",6],["Just",479],"rem_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]],["Type","Integer",[]]],["Uniq",["Type","Integer",[]]],[]],"fe_representation":"rem_integer :: !Integer !Integer -> *Integer"},["Bin",4,["Location","Platform","Data.Integer.Add",["Just",6],["Just",94],"sub_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]],["Type","Integer",[]]],["Uniq",["Type","Integer",[]]],[]],"fe_representation":"sub_integer :: !Integer !Integer -> *Integer"},["Bin",2,["Location","Platform","Data.Integer",["Just",8],["Nothing"],"integer_s"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Integer",[]]],["Type","Int",[]],[]],"fe_representation":".integer_s :: Integer -> Int"},["Tip"],["Bin",1,["Location","Platform","Data.Integer.Add",["Just",5],["Just",52],"add_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]],["Type","Integer",[]]],["Uniq",["Type","Integer",[]]],[]],"fe_representation":"add_integer :: !Integer !Integer -> *Integer"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Integer.Div",["Just",5],["Just",143],"div_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]],["Type","Integer",[]]],["Uniq",["Type","Integer",[]]],[]],"fe_representation":"div_integer :: !Integer !Integer -> *Integer"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Integer.Div",["Just",9],["Just",1045],"floordiv_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]],["Type","Integer",[]]],["Uniq",["Type","Integer",[]]],[]],"fe_representation":"floordiv_integer :: !Integer !Integer -> *Integer"},["Bin",1,["Location","Platform","Data.Integer.Div",["Just",7],["Just",442],"div_rem_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]],["Type","Integer",[]]],["Type","_Tuple2",[["Uniq",["Type","Integer",[]]],["Uniq",["Type","Integer",[]]]]],[]],"fe_representation":"div_rem_integer :: !Integer !Integer -> (!*Integer,!*Integer)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Integer.Div",["Just",10],["Just",1054],"mod_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]],["Type","Integer",[]]],["Uniq",["Type","Integer",[]]],[]],"fe_representation":"mod_integer :: !Integer !Integer -> *Integer"},["Tip"],["Tip"]]]]],["Bin",14,["Location","Platform","Data.List",["Just",8],["Just",11],"tail"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"tail :: !u:[.a] -> u:[.a]"},["Bin",8,["Location","Platform","Data.Integer.Mul",["Just",7],["Just",37],"mul_integer_a"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Int",[]]]],["Type","_#Array",[["Type","Int",[]]]]],["Uniq",["Type","_#Array",[["Type","Int",[]]]]],[]],"fe_representation":"mul_integer_a :: !{#Int} !{#Int} -> *{#Int}"},["Bin",3,["Location","Platform","Data.Integer.Div",["Just",15],["Just",601],"div_rem_integer_a"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","_#Array",[["Type","Int",[]]]]],["Type","_#Array",[["Type","Int",[]]]]],["Type","_Tuple2",[["Uniq",["Type","_#Array",[["Type","Int",[]]]]],["Uniq",["Type","Integer",[]]]]],[]],"fe_representation":"div_rem_integer_a :: !*{#Int} !{#Int} -> (!*{#Int},!*Integer)"},["Bin",1,["Location","Platform","Data.Integer.Div",["Just",13],["Just",231],"div_integer_a"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","_#Array",[["Type","Int",[]]]]],["Type","_#Array",[["Type","Int",[]]]]],["Uniq",["Type","_#Array",[["Type","Int",[]]]]],[]],"fe_representation":"div_integer_a :: !*{#Int} !{#Int} -> *{#Int}"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Integer.Mul",["Just",5],["Just",101],"mul_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]],["Type","Integer",[]]],["Uniq",["Type","Integer",[]]],[]],"fe_representation":"mul_integer :: !Integer !Integer -> *Integer"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Data.Integer.ToString",["Just",6],["Just",241],"u_integer_to_string"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","Integer",[]]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":"u_integer_to_string :: !*Integer -> {#Char}"},["Bin",2,["Location","Platform","Data.Integer.ToInteger",["Just",5],["Just",174],"string_to_integer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]]],["Uniq",["Type","Integer",[]]],[]],"fe_representation":"string_to_integer :: !{#Char} -> *Integer"},["Tip"],["Bin",1,["Location","Platform","Data.Integer.ToString",["Just",5],["Just",235],"integer_to_string"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Integer",[]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":"integer_to_string :: !Integer -> {#Char}"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.List",["Just",7],["Just",8],"head"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"head :: ![.a] -> .a"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.List",["Just",11],["Just",25],"unzip3"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]]]]],["Type","_Tuple3",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]]]],[]],"fe_representation":"unzip3 :: ![(.a,.b,.c)] -> ([.a],[.b],[.c])"},["Bin",2,["Location","Platform","Data.List",["Just",9],["Just",14],"isnull"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"isnull :: ![.a] -> Bool"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",10],["Just",22],"keep"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"keep :: Int [a] -> [a]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",12],["Just",31],"unzip4"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]]]]],["Type","_Tuple4",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]]]],[]],"fe_representation":"unzip4 :: ![(.a,.b,.c,.d)] -> ([.a],[.b],[.c],[.d])"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",13],["Just",36],"unzip5"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]]]]],["Type","_Tuple5",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]],["Type","_List",[["Var","e"]]]]],[]],"fe_representation":"unzip5 :: ![(.a,.b,.c,.d,.e)] -> ([.a],[.b],[.c],[.d],[.e])"},["Tip"],["Tip"]]]]]],["Bin",11,["Location","Platform","Data.List",["Just",20],["Just",70],"subsequences"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"subsequences :: .[a] -> .[[a]]"},["Bin",5,["Location","Platform","Data.List",["Just",17],["Just",57],"intersperse"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"intersperse :: !a ![a] -> [a]"},["Bin",2,["Location","Platform","Data.List",["Just",15],["Just",48],"splitWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","_Tuple2",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"splitWith :: !(a -> Bool) ![a] -> (![a],![a])"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",16],["Just",54],"sortByIndex"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Var","a"]]]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"sortByIndex :: ![(!Int,!a)] -> [a]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",18],["Just",62],"intercalate"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Type","_List",[["Var","a"]]]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"intercalate :: .[a] [.[a]] -> .[a]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",19],["Just",65],"transpose"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_List",[["Var","a"]]]]]],["Type","_List",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"transpose :: ![[a]] -> [.[a]]"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.List",["Just",23],["Just",91],"concatMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","_List",[["Var","b"]]],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","b"]]],[]],"fe_representation":"concatMap :: (.a -> [.b]) [.a] -> [.b]"},["Bin",2,["Location","Platform","Data.List",["Just",21],["Just",78],"permutations"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"permutations :: [a] -> .[[a]]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",22],["Just",88],"foldl1"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","_List",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"foldl1 :: (.a -> .(.a -> .a)) [.a] -> .a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",24],["Just",94],"maximum"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[[["Class","<"],["Var","a"]]]],"fe_representation":"maximum :: .[a] -> a | < a"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",25],["Just",98],"minimum"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"minimum :: .[a] -> a | Ord a"},["Tip"],["Tip"]]]]]]],["Bin",110,["Location","Platform","Data.List",["Just",77],["Just",332],"strictFoldr"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Var","b"],["Type","_List",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"strictFoldr :: !(.a -> .(.b -> .b)) !.b ![.a] -> .b"},["Bin",47,["Location","Platform","Data.List",["Just",50],["Just",219],"findIndex"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]]],["Func",[["Type","_List",[["Var","a"]]]],["Type","Maybe",[["Type","Int",[]]]],[]],[]],"fe_representation":"findIndex :: (.a -> .Bool) -> .([.a] -> .(Maybe Int))"},["Bin",23,["Location","Platform","Data.List",["Just",38],["Just",159],"tails"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"tails :: [a] -> .[[a]]"},["Bin",11,["Location","Platform","Data.List",["Just",32],["Just",128],"unfoldr"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Maybe",[["Type","_Tuple2",[["Var","b"],["Var","a"]]]]],[]],["Var","a"]],["Type","_List",[["Var","b"]]],[]],"fe_representation":"unfoldr :: (.a -> Maybe (.b,.a)) .a -> [.b]"},["Bin",5,["Location","Platform","Data.List",["Just",29],["Just",117],"foldr1"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","_List",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"foldr1 :: (.a -> .(.a -> .a)) [.a] -> .a"},["Bin",2,["Location","Platform","Data.List",["Just",27],["Just",108],"scanl"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","a"],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"scanl :: (a -> .(.b -> a)) a [.b] -> .[a]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",28],["Just",113],"scanl1"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"scanl1 :: (a -> .(a -> a)) .[a] -> .[a]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",30],["Just",121],"replicate"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"replicate :: .Int a -> .[a]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",31],["Just",124],"cycle"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"cycle :: .[a] -> [a]"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.List",["Just",35],["Just",146],"group"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","_List",[["Var","a"]]]]],[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"group :: .(.[a] -> [.[a]]) | == a"},["Bin",2,["Location","Platform","Data.List",["Just",33],["Just",134],"break"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","_Tuple2",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"break :: (a -> .Bool) .[a] -> .([a],[a])"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",34],["Just",140],"stripPrefix"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Maybe",[["Type","_List",[["Var","a"]]]]],[[["Class","=="],["Var","a"]]]],"fe_representation":"stripPrefix :: .[a] u:[a] -> Maybe v:[a] | == a, [u<=v]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",36],["Just",149],"groupBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"groupBy :: (a -> a -> .Bool) .[a] -> [.[a]]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",37],["Just",154],"inits"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"inits :: .[a] -> [.[a]]"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Data.List",["Just",44],["Just",186],"notElem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"notElem :: a .[a] -> .Bool | == a"},["Bin",5,["Location","Platform","Data.List",["Just",41],["Just",172],"isInfixOf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"isInfixOf :: .[a] .[a] -> Bool | == a"},["Bin",2,["Location","Platform","Data.List",["Just",39],["Just",164],"isPrefixOf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"isPrefixOf :: .[a] .[a] -> .Bool | == a"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",40],["Just",169],"isSuffixOf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"isSuffixOf :: .[a] .[a] -> .Bool | == a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",42],["Just",176],"levenshtein"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Int",[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"levenshtein :: .[a] .[a] -> Int | == a"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",43],["Just",182],"elem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"elem :: a .[a] -> .Bool | == a"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.List",["Just",47],["Just",199],"partition"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","_Tuple2",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"partition :: !(a -> .Bool) !.[a] -> (!.[a],!.[a])"},["Bin",2,["Location","Platform","Data.List",["Just",45],["Just",190],"lookup"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]],["Type","Maybe",[["Var","b"]]],[[["Class","=="],["Var","a"]]]],"fe_representation":"lookup :: a [(a,.b)] -> Maybe .b | == a"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",46],["Just",196],"find"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]]],["Func",[["Type","_List",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],[]],"fe_representation":"find :: (a -> .Bool) -> .(.[a] -> .(Maybe a))"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",48],["Just",213],"elemIndex"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Func",[["Type","_List",[["Var","a"]]]],["Type","Maybe",[["Type","Int",[]]]],[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"elemIndex :: a -> .(.[a] -> .(Maybe Int)) | == a"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",49],["Just",216],"elemIndices"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","Int",[]]]],[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"elemIndices :: a -> .(.[a] -> .[Int]) | == a"},["Tip"],["Tip"]]]]]],["Bin",23,["Location","Platform","Data.List",["Just",63],["Just",286],"nubBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"nubBy :: (a -> .(a -> .Bool)) .[a] -> .[a]"},["Bin",11,["Location","Platform","Data.List",["Just",56],["Just",243],"zipWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","h"],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Type","_List",[["Var","h"]]],[]],"fe_representation":"zipWith :: (.a -> .(.b -> .h)) ![.a] [.b] -> [.h]"},["Bin",5,["Location","Platform","Data.List",["Just",53],["Just",231],"zip4"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]]],["Type","_List",[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]]]],[]],"fe_representation":"zip4 :: ![.a] [.b] [.c] [.d] -> [(.a,.b,.c,.d)]"},["Bin",2,["Location","Platform","Data.List",["Just",51],["Just",222],"findIndices"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","Int",[]]]],[]],"fe_representation":"findIndices :: (.a -> .Bool) [.a] -> .[Int]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",52],["Just",225],"zip3"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]]],["Type","_List",[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]]]],[]],"fe_representation":"zip3 :: ![.a] [.b] [.c] -> [(.a,.b,.c)]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",54],["Just",237],"zip5"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]],["Type","_List",[["Var","e"]]]],["Type","_List",[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]]]],[]],"fe_representation":"zip5 :: ![.a] [.b] [.c] [.d] [.e] -> [(.a,.b,.c,.d,.e)]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",55],["Just",248],"zipSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","st"]],["Var","st"],[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Var","st"]],["Var","st"],[]],"fe_representation":"zipSt :: (.a -> .(.b -> .st -> .st)) ![.a] [.b] .st -> .st"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.List",["Just",59],["Just",266],"zipWith4"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Func",[["Var","d"]],["Var","h"],[]],[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]]],["Type","_List",[["Var","h"]]],[]],"fe_representation":"zipWith4 :: (.a -> .(.b -> .(.c -> .(.d -> .h)))) ![.a] [.b] [.c] [.d] -> [.h]"},["Bin",2,["Location","Platform","Data.List",["Just",57],["Just",254],"zipWithSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","st"]],["Type","_Tuple2",[["Var","h"],["Var","st"]]],[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Var","st"]],["Type","_Tuple2",[["Type","_List",[["Var","h"]]],["Var","st"]]],[]],"fe_representation":"zipWithSt :: (.a -> .(.b -> .st -> .(.h,.st))) ![.a] [.b] .st -> .([.h],.st)"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",58],["Just",261],"zipWith3"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Var","h"],[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]]],["Type","_List",[["Var","h"]]],[]],"fe_representation":"zipWith3 :: (.a -> .(.b -> .(.c -> .h))) ![.a] [.b] [.c] -> [.h]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",60],["Just",272],"zipWith5"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Func",[["Var","d"]],["Func",[["Var","e"]],["Var","h"],[]],[]],[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]],["Type","_List",[["Var","e"]]]],["Type","_List",[["Var","h"]]],[]],"fe_representation":"zipWith5 :: (.a -> .(.b -> .(.c -> .(.d -> .(.e -> .h))))) ![.a] [.b] [.c] [.d] [.e] -> [.h]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",62],["Just",278],"nub"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[[["Class","=="],["Var","a"]]]],"fe_representation":"nub :: .[a] -> .[a] | == a"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Data.List",["Just",69],["Just",311],"differenceBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"differenceBy :: (a -> a -> .Bool) u:[a] .[a] -> v:[a], [u<=v]"},["Bin",5,["Location","Platform","Data.List",["Just",66],["Just",301],"deleteBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","Bool",[]],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]]],["Type","_List",[["Var","b"]]],[]],"fe_representation":"deleteBy :: (a -> .(b -> .Bool)) a u:[b] -> v:[b], [u<=v]"},["Bin",2,["Location","Platform","Data.List",["Just",64],["Just",294],"elem_by"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","Bool",[]],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]]],["Type","Bool",[]],[]],"fe_representation":"elem_by :: (a -> .(.b -> .Bool)) a [.b] -> .Bool"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",65],["Just",298],"delete"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Var","a"]],["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"delete :: u:(a -> v:(w:[a] -> x:[a])) | == a, [v<=u, w<=x]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",67],["Just",305],"deleteFirstsBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","Bool",[]],[]],[]]],["Func",[["Type","_List",[["Var","b"]]]],["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","b"]]],[]],[]],[]],"fe_representation":"deleteFirstsBy :: (a -> .(b -> .Bool)) -> u:(v:[b] -> w:(.[a] -> x:[b])), [w<=u, w<=x, v<=x]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",68],["Just",308],"difference"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Var","a"]]]],["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"difference :: u:(v:[a] -> w:(.[a] -> x:[a])) | == a, [w<=u, w<=x, v<=x]"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.List",["Just",72],["Just",322],"union"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Var","a"]]]],["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"union :: u:(.[a] -> v:(.[a] -> .[a])) | == a, [v<=u]"},["Bin",2,["Location","Platform","Data.List",["Just",70],["Just",314],"intersect"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Var","a"]]]],["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],[]],[[["Class","=="],["Var","a"]]]],"fe_representation":"intersect :: u:(.[a] -> v:(.[a] -> .[a])) | == a, [v<=u]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",71],["Just",317],"intersectBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","Bool",[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"intersectBy :: (a -> b -> .Bool) .[a] .[b] -> .[a]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",73],["Just",325],"unionBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"unionBy :: (a -> .(a -> .Bool)) .[a] .[a] -> .[a]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",75],["Just",328],"isMemberGen"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[[["Generic","gEq",["KindConst"]],["Var","a"]]]],"fe_representation":"isMemberGen :: !a !.[a] -> Bool | gEq{|*|} a"},["Tip"],["Tip"]]]]]]],["Bin",62,["Location","Platform","Data.Map",["Just",31],["Nothing"],"Tip"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Map",[["Var","k"],["Var","a"]]],[]],"fe_representation":"Tip :: Map k a"},["Bin",23,["Location","Platform","Data.List",["Just",89],["Just",395],"strictTRZipWithRev"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","c"],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Type","_List",[["Var","c"]]],[]],"fe_representation":"strictTRZipWithRev :: !(a -> b -> c) ![a] ![b] -> [c]"},["Bin",11,["Location","Platform","Data.List",["Just",83],["Just",372],"flattenTR"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_List",[["Var","a"]]]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"flattenTR :: ![[a]] -> [a]"},["Bin",5,["Location","Platform","Data.List",["Just",80],["Just",358],"strictTRMapAcc"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Type","_List",[["Var","b"]]],[]],"fe_representation":"strictTRMapAcc :: !(u:a -> v:b) !w:[u:a] !x:[v:b] -> y:[v:b], [w<=u, y<=v, x<=y]"},["Bin",2,["Location","Platform","Data.List",["Just",78],["Just",349],"strictFoldl"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","a"],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]]],["Var","a"],[]],"fe_representation":"strictFoldl :: !(.a -> .(.b -> .a)) !.a ![.b] -> .a"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",79],["Just",355],"strictTRMapRev"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","b"]]],[]],"fe_representation":"strictTRMapRev :: !(.a -> .b) ![.a] -> [.b]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",81],["Just",362],"strictTRMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","b"]]],[]],"fe_representation":"strictTRMap :: !(.a -> .b) ![.a] -> [.b]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",82],["Just",365],"reverseTR"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"reverseTR :: ![.a] -> [.a]"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.List",["Just",86],["Just",381],"strictTRMapSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","st"]],["Type","_Tuple2",[["Var","b"],["Var","st"]]],[]],[]],["Type","_List",[["Var","a"]]],["Var","st"]],["Type","_Tuple2",[["Type","_List",[["Var","b"]]],["Var","st"]]],[]],"fe_representation":"strictTRMapSt :: !(a -> .st -> (!b,!.st)) ![a] !.st -> (![b],!.st)"},["Bin",2,["Location","Platform","Data.List",["Just",84],["Just",336],"strictFoldrSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Uniq",["Var","st"]]],["Uniq",["Type","_Tuple2",[["Var","b"],["Uniq",["Var","st"]]]]],[]],[]],[]],["Var","b"],["Type","_List",[["Var","a"]]],["Uniq",["Var","st"]]],["Uniq",["Type","_Tuple2",[["Var","b"],["Uniq",["Var","st"]]]]],[]],"fe_representation":"strictFoldrSt :: !(.a -> .(.b -> *st -> *(.b,*st))) !.b ![.a] *st -> *(.b,*st)"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",85],["Just",343],"strictFoldlSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Uniq",["Var","st"]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Var","st"]]]]],[]],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]],["Uniq",["Var","st"]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Var","st"]]]]],[]],"fe_representation":"strictFoldlSt :: !(.a -> .(.b -> *st -> *(.a,*st))) !.a ![.b] *st -> *(.a,*st)"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",87],["Just",386],"strictTRMapStAcc"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","st"]],["Type","_Tuple2",[["Var","b"],["Var","st"]]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Var","st"]],["Type","_Tuple2",[["Type","_List",[["Var","b"]]],["Var","st"]]],[]],"fe_representation":"strictTRMapStAcc :: !(a -> .st -> (!b,!.st)) ![a] ![b] !.st -> (![b],!.st)"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",88],["Just",392],"strictTRZipWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","c"],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Type","_List",[["Var","c"]]],[]],"fe_representation":"strictTRZipWith :: !(a -> b -> c) ![a] ![b] -> [c]"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Data.List",["Just",95],["Just",417],"strictTRZip2Rev"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[]],"fe_representation":"strictTRZip2Rev :: ![a] ![b] -> [(!a,!b)]"},["Bin",5,["Location","Platform","Data.List",["Just",92],["Just",406],"strictTRZip4Rev"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]]],["Type","_List",[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]]]],[]],"fe_representation":"strictTRZip4Rev :: ![a] ![b] ![c] ![d] -> [(!a,!b,!c,!d)]"},["Bin",2,["Location","Platform","Data.List",["Just",90],["Just",398],"strictTRZipWithAcc"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","c"],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]]],["Type","_List",[["Var","c"]]],[]],"fe_representation":"strictTRZipWithAcc :: !(a -> b -> c) ![a] ![b] ![c] -> [c]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",91],["Just",403],"strictTRZip4"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]]],["Type","_List",[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]]]],[]],"fe_representation":"strictTRZip4 :: ![a] ![b] ![c] ![d] -> [(!a,!b,!c,!d)]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",93],["Just",409],"strictTRZip4Acc"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]],["Type","_List",[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]]]]],["Type","_List",[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]]]],[]],"fe_representation":"strictTRZip4Acc :: ![a] ![b] ![c] ![d] ![(!a,!b,!c,!d)] -> [(!a,!b,!c,!d)]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",94],["Just",414],"strictTRZip2"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[]],"fe_representation":"strictTRZip2 :: ![a] ![b] -> [(!a,!b)]"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.List",["Just",98],["Just",428],"strictTRZipWith3Rev"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Var","d"],[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]]],["Type","_List",[["Var","d"]]],[]],"fe_representation":"strictTRZipWith3Rev :: !(a -> b -> c -> d) ![a] ![b] ![c] -> [d]"},["Bin",2,["Location","Platform","Data.List",["Just",96],["Just",420],"strictTRZip2Acc"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]],["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[]],"fe_representation":"strictTRZip2Acc :: ![a] ![b] ![(!a,!b)] -> [(!a,!b)]"},["Tip"],["Bin",1,["Location","Platform","Data.List",["Just",97],["Just",425],"strictTRZipWith3"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Var","d"],[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]]],["Type","_List",[["Var","d"]]],[]],"fe_representation":"strictTRZipWith3 :: !(a -> b -> c -> d) ![a] ![b] ![c] -> [d]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.List",["Just",99],["Just",431],"strictTRZipWith3Acc"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Var","d"],[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]],["Type","_List",[["Var","d"]]]],["Type","_List",[["Var","d"]]],[]],"fe_representation":"strictTRZipWith3Acc :: !(a -> b -> c -> d) ![a] ![b] ![c] ![d] -> [d]"},["Tip"],["Bin",1,["Location","Platform","Data.Map",["Just",31],["Nothing"],"Bin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Var","k"],["Var","a"],["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[]],"fe_representation":"Bin :: Int k a (Map k a) (Map k a) -> Map k a"},["Tip"],["Tip"]]]]]],["Bin",38,["Location","Platform","Data.Map",["Just",183],["Nothing"],"notMember"],{"fe_kind":["Macro"],"fe_representation":"notMember k m :== not (member k m)"},["Bin",18,["Location","Platform","Data.Map",["Just",134],["Nothing"],"keys"],{"fe_kind":["Macro"],"fe_representation":"keys m :== foldrWithKey (\\k _ ks -> [k:ks]) [] m"},["Bin",12,["Location","Platform","Data.Map",["Just",105],["Nothing"],"get"],{"fe_kind":["Macro"],"fe_representation":"get k m :== get` k m\nwhere\n\tget` _ Tip = Nothing\n\tget` k (Bin _ kx x l r) = if (k < kx) (get` k l) (if (k > kx) (get` k r) (Just x))","fe_documentation":["FunctionDoc",["Just","Searches for a value at a given key position. Works only for non-unique\nmappings."],["The key to look for","The orginal mapping"],[],["Just","When found, the value at the key position, if not: Nothing"]]},["Bin",5,["Location","Platform","Data.Map",["Just",56],["Just",54],"mapSize"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Map",[["Var","k"],["Var","v"]]]],["Type","Int",[]],[]],"fe_representation":"mapSize :: !(Map k v) -> Int"},["Bin",3,["Location","Platform","Data.Map",["Just",52],["Just",203],"newMap"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Map",[["Var","k"],["Var","v"]]],[]],"fe_representation":"newMap :: w:(Map k u:v), [w<=u]","fe_documentation":["FunctionDoc",["Just","Create an empty Map"],[],[],["Just","An empty map"]]},["Bin",1,["Location","Platform","Data.Map",["Just",43],["Nothing"],"null"],{"fe_kind":["Macro"],"fe_representation":"null mp :== case mp of\n\tTip = True\n\t_ = False"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Map",["Just",54],["Just",211],"singleton"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Var","a"]],["Type","Map",[["Var","k"],["Var","a"]]],[]],"fe_representation":"singleton :: !k !a -> Map k a"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Map",["Just",66],["Just",227],"put"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Var","a"],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"put :: !k !a !(Map k a) -> Map k a | < k","fe_documentation":["FunctionDoc",["Just","Adds or replaces the value for a given key."],["The key value to add\/update","The value to add\/update at the key position","The original mapping"],[],["Just","The modified mapping with the added value"]]},["Tip"],["Tip"]]],["Bin",6,["Location","Platform","Data.Map",["Just",126],["Just",1227],"foldrWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","k"]],["Func",[["Var","v"]],["Func",[["Var","a"]],["Var","a"],[]],[]],[]],["Var","a"],["Type","Map",[["Var","k"],["Var","v"]]]],["Var","a"],[]],"fe_representation":"foldrWithKey :: !(k -> v -> u:a -> u:a) !u:a !(Map k v) -> u:a"},["Bin",3,["Location","Platform","Data.Map",["Just",122],["Just",296],"del"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"del :: !k !(Map k a) -> Map k a | < k","fe_documentation":["FunctionDoc",["Just","Removes the value at a given key position. The mapping itself can be spine unique."],["The key to remove","The original mapping"],[],["Just","The modified mapping with the value\/key removed"]]},["Bin",1,["Location","Platform","Data.Map",["Just",114],["Just",2154],"getU"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Type","Map",[["Var","k"],["Var","v"]]]],["Type","_Tuple2",[["Type","Maybe",[["Var","v"]]],["Type","Map",[["Var","k"],["Var","v"]]]]],[[["Class","=="],["Var","k"]],[["Class","<"],["Var","k"]]]],"fe_representation":"getU :: !k !w:(Map k v) -> x:(!Maybe v,!y:(Map k v)) | == k & < k, [x<=y, w<=y]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Map",["Just",124],["Just",2168],"delU"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Map",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Type","Maybe",[["Var","b"]]],["Type","Map",[["Var","a"],["Var","b"]]]]],[[["Class","=="],["Var","a"]],[["Class","<"],["Var","a"]]]],"fe_representation":"delU :: !a !.(Map a b) -> u:(!v:(Maybe b),!Map a b) | == a & < a, [u<=v]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Map",["Just",128],["Just",1248],"foldlWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","k"]],["Func",[["Var","v"]],["Var","a"],[]],[]],[]],["Var","a"],["Type","Map",[["Var","k"],["Var","v"]]]],["Var","a"],[]],"fe_representation":"foldlWithKey :: !(u:a -> k -> v -> u:a) !u:a !(Map k v) -> u:a"},["Tip"],["Bin",1,["Location","Platform","Data.Map",["Just",131],["Just",969],"filterWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","k"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[]],"fe_representation":"filterWithKey :: !(k -> a -> Bool) !(Map k a) -> Map k a"},["Tip"],["Tip"]]]]],["Bin",5,["Location","Platform","Data.Map",["Just",148],["Nothing"],"toList"],{"fe_kind":["Macro"],"fe_representation":"toList m :== toAscList m","fe_documentation":["FunctionDoc",["Just","Converts a mapping to a list of key value pairs.\nBecause of the internal ordering of the mapping the resulting\nlist is sorted ascending on the key part of the tuple."],["The original mapping"],[],["Just","A list of key\/value tuples in the mapping"]]},["Bin",1,["Location","Platform","Data.Map",["Just",136],["Nothing"],"elems"],{"fe_kind":["Macro"],"fe_representation":"elems m :== foldrNoKey (\\x xs -> [x:xs]) [] m"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","Data.Map",["Just",157],["Just",1335],"fromList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]],["Type","Map",[["Var","a"],["Var","b"]]],[[["Class","=="],["Var","a"]],[["Class","<"],["Var","a"]]]],"fe_representation":"fromList :: !u:[v:(!a,!b)] -> Map a b | == a & < a, [u<=v]","fe_documentation":["FunctionDoc",["Just","Converts a list of key\/value tuples to a mapping."],["A list of key\/value tuples"],[],["Just","A mapping containing all the tuples in the list"]]},["Bin",1,["Location","Platform","Data.Map",["Just",149],["Nothing"],"toAscList"],{"fe_kind":["Macro"],"fe_representation":"toAscList m :== foldrWithKey (\\k x xs -> [(k,x):xs]) [] m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Map",["Just",181],["Just",68],"member"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Bool",[]],[[["Class","<"],["Var","k"]]]],"fe_representation":"member :: !k !(Map k a) -> Bool | < k"},["Tip"],["Tip"]]]]],["Bin",19,["Location","Platform","Data.Map",["Just",207],["Just",805],"intersectionWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","c"],[]],[]],["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","b"]]]],["Type","Map",[["Var","k"],["Var","c"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"intersectionWith :: !(a -> b -> c) !(Map k a) !(Map k b) -> Map k c | < k"},["Bin",11,["Location","Platform","Data.Map",["Just",199],["Just",681],"unionsWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","_List",[["Type","Map",[["Var","k"],["Var","a"]]]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"unionsWith :: !(a -> a -> a) ![Map k a] -> Map k a | < k"},["Bin",7,["Location","Platform","Data.Map",["Just",191],["Just",458],"elemAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","_Tuple2",[["Var","k"],["Var","a"]]],[]],"fe_representation":"elemAt :: !Int !(Map k a) -> (!k,!a)"},["Bin",3,["Location","Platform","Data.Map",["Just",187],["Just",99],"findWithDefault"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","k"],["Type","Map",[["Var","k"],["Var","a"]]]],["Var","a"],[[["Class","<"],["Var","k"]]]],"fe_representation":"findWithDefault :: !a !k !(Map k a) -> a | < k"},["Bin",1,["Location","Platform","Data.Map",["Just",185],["Just",85],"find"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Type","Map",[["Var","k"],["Var","a"]]]],["Var","a"],[[["Class","<"],["Var","k"]]]],"fe_representation":"find :: !k !(Map k a) -> a | < k"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Map",["Just",189],["Just",394],"alter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Maybe",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],["Var","k"],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"alter :: !((Maybe a) -> Maybe a) !k !(Map k a) -> Map k a | < k"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Map",["Just",195],["Just",532],"findMax"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Map",[["Var","k"],["Var","a"]]]],["Type","_Tuple2",[["Var","k"],["Var","a"]]],[]],"fe_representation":"findMax :: !(Map k a) -> (!k,!a)"},["Bin",1,["Location","Platform","Data.Map",["Just",193],["Just",522],"findMin"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Map",[["Var","k"],["Var","a"]]]],["Type","_Tuple2",[["Var","k"],["Var","a"]]],[]],"fe_representation":"findMin :: !(Map k a) -> (!k,!a)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Map",["Just",197],["Just",678],"unions"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Map",[["Var","k"],["Var","a"]]]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"unions :: ![Map k a] -> Map k a | < k"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Map",["Just",203],["Just",690],"unionWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","k"]],["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],[]],["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"unionWithKey :: !(k -> a -> a -> a) !(Map k a) !(Map k a) -> Map k a | < k"},["Bin",1,["Location","Platform","Data.Map",["Just",201],["Just",684],"unionWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"unionWith :: !(a -> a -> a) !(Map k a) !(Map k a) -> Map k a | < k"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Map",["Just",205],["Just",785],"intersection"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","b"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"intersection :: !(Map k a) !(Map k b) -> Map k a | < k"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Map",["Just",216],["Just",2115],"foldlStrict"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","a"],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]]],["Var","a"],[]],"fe_representation":"foldlStrict :: !(a -> b -> a) !a ![b] -> a"},["Bin",3,["Location","Platform","Data.Map",["Just",211],["Just",673],"union"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"union :: !(Map k a) !(Map k a) -> Map k a | < k"},["Bin",1,["Location","Platform","Data.Map",["Just",209],["Just",816],"intersectionWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","k"]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","c"],[]],[]],[]],["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","b"]]]],["Type","Map",[["Var","k"],["Var","c"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"intersectionWithKey :: !(k -> a -> b -> c) !(Map k a) !(Map k b) -> Map k c | < k"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Map",["Just",213],["Just",860],"mergeWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","k"]],["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","Maybe",[["Var","c"]]],[]],[]],[]],["Func",[["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","c"]]],[]],["Func",[["Type","Map",[["Var","k"],["Var","b"]]]],["Type","Map",[["Var","k"],["Var","c"]]],[]],["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","b"]]]],["Type","Map",[["Var","k"],["Var","c"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"mergeWithKey :: !(k -> a -> b -> Maybe c) !((Map k a) -> Map k c) !((Map k b) -> Map k c) !(Map k a) !(Map k b) -> Map k c | < k"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Map",["Just",220],["Nothing"],"foldlNoKey"],{"fe_kind":["Macro"],"fe_representation":"foldlNoKey f x m :== foldlWithKey (\\acc _ v -> (f acc v)) x m"},["Bin",1,["Location","Platform","Data.Map",["Just",218],["Nothing"],"foldrNoKey"],{"fe_kind":["Macro"],"fe_representation":"foldrNoKey f x m :== foldrWithKey (\\_ v acc -> (f v acc)) x m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Map",["Just",222],["Nothing"],"delList"],{"fe_kind":["Macro"],"fe_representation":"delList xs m :== 'SL'.foldr (\\k m -> (del k m)) m xs"},["Tip"],["Tip"]]]]]]]]],["Bin",221,["Location","Platform","Database.SQL",["Just",102],["Nothing"],"autoIncrement"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLColumn",[]]],["Type","Bool",[]],[]],"fe_representation":".autoIncrement :: SQLColumn -> Bool"},["Bin",162,["Location","Platform","Data.Set",["Just",127],["Just",241],"filter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"filter :: !(a -> Bool) !(Set a) -> Set a | < a & == a"},["Bin",73,["Location","Platform","Data.Set",["Just",72],["Nothing"],"isSubsetOf"],{"fe_kind":["Macro"],"fe_representation":"isSubsetOf t1 t2 :== (size t1 <= size t2) && (isSubsetOfX t1 t2)"},["Bin",53,["Location","Platform","Data.Maybe",["Just",71],["Just",61],"listToMaybe"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"listToMaybe :: ![.a] -> Maybe .a"},["Bin",22,["Location","Platform","Data.Maybe",["Just",11],["Just",9],"Nothing"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"Nothing :: Maybe a"},["Bin",12,["Location","Platform","Data.Matrix",["Just",18],["Just",23],"col"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Matrix",[["Var","a"]]]],["Type","Vector",[["Var","a"]]],[]],"fe_representation":"col :: Int (Matrix a) -> Vector a"},["Bin",8,["Location","Platform","Data.Map",["Just",230],["Just",890],"isSubmapOf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Bool",[]],[[["Class","<"],["Var","k"]],[["Class","Eq"],["Var","a"]]]],"fe_representation":"isSubmapOf :: !(Map k a) !(Map k a) -> Bool | < k & Eq a"},["Bin",2,["Location","Platform","Data.Map",["Just",229],["Just",1068],"mapWithKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","k"]],["Func",[["Var","a"]],["Var","b"],[]],[]],["Type","Map",[["Var","k"],["Var","a"]]]],["Type","Map",[["Var","k"],["Var","b"]]],[]],"fe_representation":"mapWithKey :: !(k -> a -> b) !(Map k a) -> Map k b"},["Bin",1,["Location","Platform","Data.Map",["Just",228],["Just",733],"difference"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","b"]]]],["Type","Map",[["Var","k"],["Var","a"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"difference :: !(Map k a) !(Map k b) -> Map k a | < k"},["Tip"],["Tip"]],["Tip"]],["Bin",5,["Location","Platform","Data.Matrix",["Just",14],["Just",17],"mulMatrixVec"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Matrix",[["Var","a"]]],["Type","Vector",[["Var","a"]]]],["Type","Matrix",[["Var","a"]]],[[["Class","*"],["Var","a"]],[["Class","+"],["Var","a"]],[["Class","zero"],["Var","a"]]]],"fe_representation":"mulMatrixVec :: (Matrix a) (Vector a) -> Matrix a | * a & + a & zero a"},["Bin",3,["Location","Platform","Data.Matrix",["Just",10],["Just",10],"dotVec"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Vector",[["Var","a"]]],["Type","Vector",[["Var","a"]]]],["Var","a"],[[["Class","*"],["Var","a"]],[["Class","+"],["Var","a"]],[["Class","zero"],["Var","a"]]]],"fe_representation":"dotVec :: (Vector a) (Vector a) -> a | * a & + a & zero a"},["Bin",1,["Location","Platform","Data.Map",["Just",231],["Just",910],"isSubmapOfBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Type","Bool",[]],[]],[]],["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","b"]]]],["Type","Bool",[]],[[["Class","<"],["Var","k"]]]],"fe_representation":"isSubmapOfBy :: !(a -> b -> Bool) !(Map k a) !(Map k b) -> Bool | < k"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Matrix",["Just",12],["Just",14],"mulVecMatrix"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Vector",[["Var","a"]]],["Type","Matrix",[["Var","a"]]]],["Type","Matrix",[["Var","a"]]],[[["Class","*"],["Var","a"]],[["Class","+"],["Var","a"]],[["Class","zero"],["Var","a"]]]],"fe_representation":"mulVecMatrix :: (Vector a) (Matrix a) -> Matrix a | * a & + a & zero a"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Matrix",["Just",16],["Just",20],"row"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Matrix",[["Var","a"]]]],["Type","Vector",[["Var","a"]]],[]],"fe_representation":"row :: Int (Matrix a) -> Vector a"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Matrix",["Just",22],["Just",31],"rows"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Matrix",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":"rows :: (Matrix a) -> Int"},["Bin",1,["Location","Platform","Data.Matrix",["Just",20],["Just",26],"cols"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Matrix",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":"cols :: (Matrix a) -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Maybe",["Just",11],["Just",9],"Just"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"Just :: a -> Maybe a"},["Tip"],["Tip"]]]],["Bin",9,["Location","Platform","Data.Maybe",["Just",52],["Just",45],"isJust"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"isJust :: !(Maybe .a) -> Bool"},["Bin",5,["Location","Platform","Data.Maybe",["Just",43],["Just",37],"isNothing"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"isNothing :: !(Maybe .a) -> Bool","fe_documentation":["FunctionDoc",["Just","Return True when the argument is a Nothing value and return False otherwise."],[],[],["Nothing"]]},["Bin",3,["Location","Platform","Data.Maybe",["Just",33],["Just",30],"maybeSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","st"]],["Func",[["Var","a"]],["Func",[["Uniq",["Var","st"]]],["Uniq",["Var","st"]],[]],[]],["Type","Maybe",[["Var","a"]]]],["Uniq",["Var","st"]],[]],"fe_representation":"maybeSt :: *st (.a -> *st -> *st) !(Maybe .a) -> *st","fe_documentation":["FunctionDoc",["Just","Apply a function to the the contents of a Just value and the state, and\ndirectly return the result and a new state. Return the state immediately\nif the argument is a Nothing value."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","Data.Maybe",["Just",26],["Just",26],"maybe"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","b"],["Func",[["Var","a"]],["Var","b"],[]],["Type","Maybe",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"maybe :: w:b v:(.a -> w:b) !.(Maybe .a) -> w:b","fe_documentation":["FunctionDoc",["Just","Apply a function to the the contents of a Just value and directly return\nthe result, or return a default value if the argument is a Nothing value."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Maybe",["Just",38],["Just",34],"fromMaybe"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Maybe",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"fromMaybe :: .a !(Maybe .a) -> .a","fe_documentation":["FunctionDoc",["Just","Directly return a Just value or return a default value if the argument is a Nothing value."],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Maybe",["Just",47],["Just",41],"isNothingU"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Var","a"]]]],["Type","_Tuple2",[["Type","Bool",[]],["Type","Maybe",[["Var","a"]]]]],[]],"fe_representation":"isNothingU :: !u:(Maybe .a) -> (!Bool,!u:(Maybe .a))","fe_documentation":["FunctionDoc",["Just","Variant of isNothing which returns its input parameter."],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Maybe",["Just",61],["Just",53],"fromJust"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"fromJust :: !(Maybe .a) -> .a","fe_documentation":["FunctionDoc",["Just","Return the contents of a Just value and abort at run-time otherwise."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","Data.Maybe",["Just",56],["Just",49],"isJustU"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Var","a"]]]],["Type","_Tuple2",[["Type","Bool",[]],["Type","Maybe",[["Var","a"]]]]],[]],"fe_representation":"isJustU :: !u:(Maybe .a) -> (!Bool,!u:(Maybe .a))","fe_documentation":["FunctionDoc",["Just","Variant of isJust which returns its input parameter."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Maybe",["Just",66],["Just",57],"maybeToList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"maybeToList :: !(Maybe .a) -> [.a]"},["Tip"],["Tip"]]]]],["Bin",30,["Location","Platform","Data.Queue",["Just",21],["Nothing"],"empty"],{"fe_kind":["Macro"],"fe_representation":"empty q :== case q of\n\tQueue [] [] = True\n\t_ = False","fe_documentation":["FunctionDoc",["Just","Test if the queue is empty"],[],[],["Nothing"]]},["Bin",21,["Location","Platform","Data.Monoid",["Just",45],["Nothing"],"First"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Maybe",[["Var","a"]]]],["Type","First",[["Var","a"]]],[]],"fe_representation":"First :: (Maybe a) -> First a"},["Bin",9,["Location","Platform","Data.Monoid",["Just",37],["Nothing"],"All"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","All",[]],[]],"fe_representation":"All :: Bool -> All"},["Bin",5,["Location","Platform","Data.Monoid",["Just",33],["Nothing"],"Dual"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","Dual",[["Var","a"]]],[]],"fe_representation":"Dual :: a -> Dual a"},["Bin",3,["Location","Platform","Data.Monoid",["Just",12],["Just",9],"mconcat"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[[["Class","Monoid"],["Var","a"]]]],"fe_representation":"mconcat :: .[a] -> a | Monoid a"},["Bin",1,["Location","Platform","Data.Maybe",["Just",76],["Just",65],"catMaybes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Maybe",[["Var","a"]]]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"catMaybes :: ![Maybe .a] -> .[.a]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Monoid",["Just",13],["Just",12],"<++>"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[[["Class","Semigroup"],["Var","a"]]]],"fe_priority":["RightAssoc",6],"fe_representation":"(<++>) infixr 6 :: a a -> a | Semigroup a"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Monoid",["Just",35],["Nothing"],"Endo"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","a"],[]]],["Type","Endo",[["Var","a"]]],[]],"fe_representation":"Endo :: (a -> a) -> Endo a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Monoid",["Just",41],["Nothing"],"Sum"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","Sum",[["Var","a"]]],[]],"fe_representation":"Sum :: a -> Sum a"},["Bin",1,["Location","Platform","Data.Monoid",["Just",39],["Nothing"],"Any"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","Any",[]],[]],"fe_representation":"Any :: Bool -> Any"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Monoid",["Just",43],["Nothing"],"Product"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","Product",[["Var","a"]]],[]],"fe_representation":"Product :: a -> Product a"},["Tip"],["Tip"]]]],["Bin",11,["Location","Platform","Data.Monoid",["Just",79],["Just",133],"getFirst"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","First",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"getFirst :: (First a) -> Maybe a"},["Bin",7,["Location","Platform","Data.Monoid",["Just",71],["Just",121],"getAll"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","All",[]]],["Type","Bool",[]],[]],"fe_representation":"getAll :: All -> Bool"},["Bin",3,["Location","Platform","Data.Monoid",["Just",67],["Just",115],"getDual"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Dual",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"getDual :: (Dual a) -> a"},["Bin",1,["Location","Platform","Data.Monoid",["Just",47],["Nothing"],"Last"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Maybe",[["Var","a"]]]],["Type","Last",[["Var","a"]]],[]],"fe_representation":"Last :: (Maybe a) -> Last a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Monoid",["Just",69],["Just",118],"appEndo"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Endo",[["Var","a"]]]],["Func",[["Var","a"]],["Var","a"],[]],[]],"fe_representation":"appEndo :: (Endo a) -> a -> a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Monoid",["Just",75],["Just",127],"getSum"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Sum",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"getSum :: (Sum a) -> a"},["Bin",1,["Location","Platform","Data.Monoid",["Just",73],["Just",124],"getAny"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Any",[]]],["Type","Bool",[]],[]],"fe_representation":"getAny :: Any -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Monoid",["Just",77],["Just",130],"getProduct"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Product",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"getProduct :: (Product a) -> a"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Queue",["Just",10],["Nothing"],"Queue"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Queue",[["Var","a"]]],[]],"fe_representation":"Queue :: [a] [a] -> Queue a"},["Bin",1,["Location","Platform","Data.Monoid",["Just",81],["Just",136],"getLast"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Last",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"getLast :: (Last a) -> Maybe a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Queue",["Just",15],["Just",9],"newQueue"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Queue",[["Var","a"]]],[]],"fe_representation":"newQueue :: Queue a","fe_documentation":["FunctionDoc",["Just","Create an empty queue"],[],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",8,["Location","Platform","Data.Set",["Just",46],["Just",17],"Tip"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Set",[["Var","a"]]],[]],"fe_representation":"Tip :: Set a"},["Bin",3,["Location","Platform","Data.Queue",["Just",35],["Just",23],"dequeue"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Queue",[["Var","a"]]]],["Type","_Tuple2",[["Type","Maybe",[["Var","a"]]],["Type","Queue",[["Var","a"]]]]],[]],"fe_representation":"dequeue :: (Queue a) -> (!Maybe a,!Queue a)","fe_documentation":["FunctionDoc",["Just","Take an element from the queue (if the queue is not empty)"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","Data.Queue",["Just",30],["Just",17],"enqueue"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Queue",[["Var","a"]]]],["Type","Queue",[["Var","a"]]],[]],"fe_representation":"enqueue :: a (Queue a) -> Queue a","fe_documentation":["FunctionDoc",["Just","Add an element to the queue"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Set",["Just",46],["Just",17],"Bin"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Var","a"],["Type","Set",[["Var","a"]]],["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[]],"fe_representation":"Bin :: Int a (Set a) (Set a) -> Set a"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Data.Set",["Just",61],["Nothing"],"size"],{"fe_kind":["Macro"],"fe_representation":"size s :== case s of\n\tTip = 0\n\tBin sz _ _ _ = sz"},["Bin",1,["Location","Platform","Data.Set",["Just",55],["Nothing"],"null"],{"fe_kind":["Macro"],"fe_representation":"null s :== case s of\n\tTip = True\n\tBin sz _ _ _ = False"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Data.Set",["Just",68],["Nothing"],"notMember"],{"fe_kind":["Macro"],"fe_representation":"notMember x t :== not (member x t)"},["Bin",1,["Location","Platform","Data.Set",["Just",65],["Just",56],"member"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Set",[["Var","a"]]]],["Type","Bool",[]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"member :: !a !(Set a) -> Bool | < a & == a"},["Tip"],["Tip"]],["Tip"]]]]]],["Bin",19,["Location","Platform","Data.Set",["Just",102],["Just",469],"deleteFindMax"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]]],["Type","_Tuple2",[["Var","a"],["Type","Set",[["Var","a"]]]]],[]],"fe_representation":"deleteFindMax :: !.(Set a) -> (!a,!Set a)"},["Bin",11,["Location","Platform","Data.Set",["Just",94],["Just",139],"findMax"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"findMax :: !(Set a) -> a"},["Bin",7,["Location","Platform","Data.Set",["Just",83],["Just",76],"singleton"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Set",[["Var","a"]]],[]],"fe_representation":"singleton :: !u:a -> w:(Set u:a), [w<=u]"},["Bin",3,["Location","Platform","Data.Set",["Just",78],["Nothing"],"isProperSubsetOf"],{"fe_kind":["Macro"],"fe_representation":"isProperSubsetOf s1 s2 :== (size s1 < size s2) && (isSubsetOf s1 s2)"},["Bin",1,["Location","Platform","Data.Set",["Just",74],["Just",121],"isSubsetOfX"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]],["Type","Set",[["Var","a"]]]],["Type","Bool",[]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"isSubsetOfX :: !(Set a) !(Set a) -> Bool | < a & == a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Set",["Just",81],["Just",72],"newSet"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Set",[["Var","a"]]],[]],"fe_representation":"newSet :: Set a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Set",["Just",89],["Just",101],"delete"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"delete :: !a !.(Set a) -> Set a | < a & == a"},["Bin",1,["Location","Platform","Data.Set",["Just",87],["Just",86],"insert"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"insert :: !a !.(Set a) -> Set a | < a & == a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Set",["Just",92],["Just",133],"findMin"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"findMin :: !(Set a) -> a"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Set",["Just",98],["Just",151],"deleteMax"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[]],"fe_representation":"deleteMax :: !.(Set a) -> Set a"},["Bin",1,["Location","Platform","Data.Set",["Just",96],["Just",145],"deleteMin"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[]],"fe_representation":"deleteMin :: !.(Set a) -> Set a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Set",["Just",100],["Just",459],"deleteFindMin"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]]],["Type","_Tuple2",[["Var","a"],["Type","Set",[["Var","a"]]]]],[]],"fe_representation":"deleteFindMin :: !.(Set a) -> (!a,!Set a)"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Set",["Just",117],["Nothing"],"unions"],{"fe_kind":["Macro"],"fe_representation":"unions ts :== foldl union newSet ts"},["Bin",3,["Location","Platform","Data.Set",["Just",108],["Just",484],"maxView"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]]],["Type","Maybe",[["Type","_Tuple2",[["Var","a"],["Type","Set",[["Var","a"]]]]]]],[]],"fe_representation":"maxView :: !.(Set a) -> .(Maybe (!a,!Set a))"},["Bin",1,["Location","Platform","Data.Set",["Just",105],["Just",478],"minView"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]]],["Type","Maybe",[["Type","_Tuple2",[["Var","a"],["Type","Set",[["Var","a"]]]]]]],[]],"fe_representation":"minView :: !.(Set a) -> .(Maybe (!a,!Set a))"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Set",["Just",114],["Just",168],"union"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]],["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"union :: !u:(Set a) !u:(Set a) -> Set a | < a & == a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Set",["Just",123],["Just",220],"intersection"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]],["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"intersection :: !(Set a) !(Set a) -> Set a | < a & == a"},["Bin",1,["Location","Platform","Data.Set",["Just",120],["Just",187],"difference"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Set",[["Var","a"]]],["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"difference :: !(Set a) !(Set a) -> Set a | < a & == a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Set",["Just",124],["Just",204],"intersections"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Set",[["Var","a"]]]]]],["Type","Set",[["Var","a"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"intersections :: ![Set a] -> Set a | < a & == a"},["Tip"],["Tip"]]]]]],["Bin",88,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVEnum"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVEnum :: String -> SQLValue"},["Bin",59,["Location","Platform","Data.Tree",["Just",52],["Just",90],"leafs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RTree",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"leafs :: (RTree a) -> [a]"},["Bin",33,["Location","Platform","Data.Stack",["Just",9],["Nothing"],"empty"],{"fe_kind":["Macro"],"fe_representation":"empty a :== case a of\n\tStack [] = True\n\t_ = False"},["Bin",11,["Location","Platform","Data.Set",["Just",146],["Nothing"],"toAscList"],{"fe_kind":["Macro"],"fe_representation":"toAscList t :== fold (\\a as -> [a:as]) [] t"},["Bin",5,["Location","Platform","Data.Set",["Just",137],["Just",370],"splitMember"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Set",[["Var","a"]]]],["Type","_Tuple3",[["Type","Set",[["Var","a"]]],["Type","Bool",[]],["Type","Set",[["Var","a"]]]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"splitMember :: !a !(Set a) -> (!Set a,!Bool,!Set a) | < a & == a"},["Bin",2,["Location","Platform","Data.Set",["Just",130],["Just",250],"partition"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","Set",[["Var","a"]]]],["Type","_Tuple2",[["Type","Set",[["Var","a"]]],["Type","Set",[["Var","a"]]]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"partition :: !(a -> Bool) !(Set a) -> (!Set a,!Set a) | < a & == a"},["Tip"],["Bin",1,["Location","Platform","Data.Set",["Just",134],["Just",357],"split"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Set",[["Var","a"]]]],["Type","_Tuple2",[["Type","Set",[["Var","a"]]],["Type","Set",[["Var","a"]]]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"split :: !a !(Set a) -> (!Set a,!Set a) | < a & == a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Set",["Just",140],["Just",263],"fold"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Var","b"],["Type","Set",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"fold :: !(a -> .b -> .b) !.b !.(Set a) -> .b"},["Tip"],["Bin",1,["Location","Platform","Data.Set",["Just",144],["Nothing"],"toList"],{"fe_kind":["Macro"],"fe_representation":"toList s :== toAscList s"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.Stack",["Just",5],["Nothing"],"Stack"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","Stack",[["Var","a"]]],[]],"fe_representation":"Stack :: [a] -> Stack a"},["Bin",3,["Location","Platform","Data.Set",["Just",152],["Nothing"],"mapSet"],{"fe_kind":["Macro"],"fe_representation":"mapSet f s :== fromList (map f (toList s))"},["Bin",1,["Location","Platform","Data.Set",["Just",149],["Just",280],"fromList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","Set",[["Var","a"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"fromList :: ![a] -> Set a | < a & == a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Set",["Just",154],["Just",9],"mapSetMonotonic"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","Set",[["Var","a"]]]],["Type","Set",[["Var","b"]]],[]],"fe_representation":"mapSetMonotonic :: !(a -> b) !(Set a) -> Set b"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Stack",["Just",7],["Just",5],"newStack"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Stack",[["Var","a"]]],[]],"fe_representation":"newStack :: Stack a"},["Tip"],["Tip"]]]],["Bin",21,["Location","Platform","Data.Traversable",["Just",125],["Just",131],"fmapDefault"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Cons","t",[["Var","a"]]]],["Cons","t",[["Var","b"]]],[[["Class","Traversable"],["Var","t"]]]],"fe_representation":"fmapDefault :: (a -> b) (t a) -> t b | Traversable t"},["Bin",7,["Location","Platform","Data.Stack",["Just",22],["Just",19],"peek"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Stack",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"peek :: (Stack a) -> Maybe a"},["Bin",2,["Location","Platform","Data.Stack",["Just",19],["Just",15],"pop"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Stack",[["Var","a"]]]],["Type","_Tuple2",[["Type","Maybe",[["Var","a"]]],["Type","Stack",[["Var","a"]]]]],[]],"fe_representation":"pop :: (Stack a) -> (Maybe a,Stack a)"},["Bin",1,["Location","Platform","Data.Stack",["Just",16],["Just",12],"push"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Stack",[["Var","a"]]]],["Type","Stack",[["Var","a"]]],[]],"fe_representation":"push :: a (Stack a) -> Stack a"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","Platform","Data.Traversable",["Just",123],["Just",96],"mapAccumL"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Func",[["Uniq",["Var","s"]]],["Uniq",["Type","_Tuple2",[["Var","c"],["Uniq",["Var","s"]]]]],[]],[]],["Cons","t",[["Var","b"]]],["Uniq",["Var","s"]]],["Uniq",["Type","_Tuple2",[["Cons","t",[["Var","c"]]],["Uniq",["Var","s"]]]]],[[["Class","Traversable"],["Var","t"]]]],"fe_representation":"mapAccumL :: (b -> *s -> *(c,*s)) (t b) *s -> *(t c,*s) | Traversable t"},["Bin",2,["Location","Platform","Data.Traversable",["Just",122],["Just",68],"forM"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Var","a"]]],["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]]],["Cons","m",[["Cons","t",[["Var","b"]]]]],[[["Class","Traversable"],["Var","t"]],[["Class","Monad"],["Var","m"]]]],"fe_representation":"forM :: (t a) (a -> m b) -> m (t b) | Traversable t & Monad m"},["Bin",1,["Location","Platform","Data.Traversable",["Just",121],["Just",64],"for"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Var","a"]]],["Func",[["Var","a"]],["Cons","f",[["Var","b"]]],[]]],["Cons","f",[["Cons","t",[["Var","b"]]]]],[[["Class","Traversable"],["Var","t"]],[["Class","Applicative"],["Var","f"]]]],"fe_representation":"for :: (t a) (a -> f b) -> f (t b) | Traversable t & Applicative f"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Data.Traversable",["Just",124],["Just",124],"mapAccumR"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Func",[["Uniq",["Var","s"]]],["Uniq",["Type","_Tuple2",[["Var","c"],["Uniq",["Var","s"]]]]],[]],[]],["Cons","t",[["Var","b"]]],["Uniq",["Var","s"]]],["Uniq",["Type","_Tuple2",[["Cons","t",[["Var","c"]]],["Uniq",["Var","s"]]]]],[[["Class","Traversable"],["Var","t"]]]],"fe_representation":"mapAccumR :: (b -> *s -> *(c,*s)) (t b) *s -> *(t c,*s) | Traversable t"},["Tip"],["Tip"]]]],["Bin",13,["Location","Platform","Data.Tree",["Just",35],["Just",37],"mergeForestsByChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","RForest",[["Var","a"]]],["Type","RForest",[["Var","a"]]]],["Type","RForest",[["Var","a"]]],[]],"fe_representation":"mergeForestsByChoice :: (a -> a -> Bool) (a -> a -> a) (RForest a) (RForest a) -> RForest a"},["Bin",7,["Location","Platform","Data.Tree",["Just",25],["Just",24],"fmapRTree"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","RTree",[["Var","a"]]]],["Type","RTree",[["Var","b"]]],[]],"fe_representation":"fmapRTree :: (a -> b) (RTree a) -> RTree b"},["Bin",4,["Location","Platform","Data.Tree",["Just",12],["Nothing"],"RNode"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"],["Type","RForest",[["Var","a"]]]],["Type","RTree",[["Var","a"]]],[]],"fe_representation":"RNode :: a (RForest a) -> RTree a"},["Bin",1,["Location","Platform","Data.Traversable",["Just",126],["Just",136],"foldMapDefault"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","m"],[]],["Cons","t",[["Var","a"]]]],["Var","m"],[[["Class","Traversable"],["Var","t"]],[["Class","Monoid"],["Var","m"]]]],"fe_representation":"foldMapDefault :: (a -> m) (t a) -> m | Traversable t & Monoid m"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Data.Tree",["Just",19],["Just",18],"subRForest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RTree",[["Var","a"]]]],["Type","RForest",[["Var","a"]]],[]],"fe_representation":"subRForest :: (RTree a) -> RForest a"},["Bin",1,["Location","Platform","Data.Tree",["Just",17],["Just",15],"rootLabel"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RTree",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"rootLabel :: (RTree a) -> a"},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Data.Tree",["Just",31],["Just",47],"mergeForests"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RForest",[["Var","a"]]],["Type","RForest",[["Var","a"]]]],["Type","RForest",[["Var","a"]]],[[["Class","=="],["Var","a"]]]],"fe_representation":"mergeForests :: (RForest a) (RForest a) -> RForest a | == a"},["Tip"],["Bin",1,["Location","Platform","Data.Tree",["Just",33],["Just",44],"mergeForestsBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","RForest",[["Var","a"]]],["Type","RForest",[["Var","a"]]]],["Type","RForest",[["Var","a"]]],[]],"fe_representation":"mergeForestsBy :: (a -> a -> Bool) (RForest a) (RForest a) -> RForest a"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.Tree",["Just",43],["Just",63],"drawRForest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RForest",[["Type","String",[]]]]],["Type","String",[]],[]],"fe_representation":"drawRForest :: (RForest String) -> String"},["Bin",2,["Location","Platform","Data.Tree",["Just",37],["Just",55],"unlines"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]]],["Type","String",[]],[]],"fe_representation":"unlines :: [String] -> String"},["Tip"],["Bin",1,["Location","Platform","Data.Tree",["Just",40],["Just",59],"drawRTree"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RTree",[["Type","String",[]]]]],["Type","String",[]],[]],"fe_representation":"drawRTree :: (RTree String) -> String"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Tree",["Just",45],["Just",66],"draw"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RTree",[["Type","String",[]]]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":"draw :: (RTree String) -> [String]"},["Tip"],["Bin",1,["Location","Platform","Data.Tree",["Just",50],["Just",84],"levels"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RTree",[["Var","a"]]]],["Type","_List",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"levels :: (RTree a) -> [[a]]"},["Tip"],["Tip"]]]]]]],["Bin",25,["Location","Platform","Data.Tuple",["Just",9],["Just",15],"appFst3"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","d"],[]],["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]]],["Type","_Tuple3",[["Var","d"],["Var","b"],["Var","c"]]],[]],"fe_representation":"appFst3 :: (.a -> .d) !(.a,.b,.c) -> (.d,.b,.c)"},["Bin",9,["Location","Platform","Data.Tuple",["Just",3],["Just",3],"tuple"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","b"]],["Type","_Tuple2",[["Var","a"],["Var","b"]]],[]],"fe_representation":"tuple :: a b -> (a,b)"},["Bin",5,["Location","Platform","Data.Tree",["Just",61],["Just",105],"unfoldRTreeM"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Cons","m",[["Type","_Tuple2",[["Var","a"],["Type","_List",[["Var","b"]]]]]]],[]],["Var","b"]],["Cons","m",[["Type","RTree",[["Var","a"]]]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"unfoldRTreeM :: (b -> m (a,[b])) b -> m (RTree a) | Monad m"},["Bin",2,["Location","Platform","Data.Tree",["Just",55],["Just",95],"unfoldRTree"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Type","_Tuple2",[["Var","a"],["Type","_List",[["Var","b"]]]]],[]],["Var","b"]],["Type","RTree",[["Var","a"]]],[]],"fe_representation":"unfoldRTree :: (b -> (a,[b])) b -> RTree a"},["Tip"],["Bin",1,["Location","Platform","Data.Tree",["Just",58],["Just",101],"unfoldRForest"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Type","_Tuple2",[["Var","a"],["Type","_List",[["Var","b"]]]]],[]],["Type","_List",[["Var","b"]]]],["Type","RForest",[["Var","a"]]],[]],"fe_representation":"unfoldRForest :: (b -> (a,[b])) [b] -> RForest a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Tree",["Just",64],["Just",112],"unfoldRForestM"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Cons","m",[["Type","_Tuple2",[["Var","a"],["Type","_List",[["Var","b"]]]]]]],[]],["Type","_List",[["Var","b"]]]],["Cons","m",[["Type","RForest",[["Var","a"]]]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"unfoldRForestM :: (b -> m (a,[b])) [b] -> m (RForest a) | Monad m"},["Tip"],["Bin",1,["Location","Platform","Data.Tree",["Just",66],["Just",115],"foldTree"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Type","_List",[["Var","b"]]]],["Var","b"],[]],[]],["Type","RTree",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"foldTree :: (a -> [b] -> b) (RTree a) -> b"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Tuple",["Just",6],["Just",9],"appFst"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","c"],[]],["Type","_Tuple2",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Var","c"],["Var","b"]]],[]],"fe_representation":"appFst :: (.a -> .c) !(.a,.b) -> (.c,.b)"},["Bin",1,["Location","Platform","Data.Tuple",["Just",4],["Just",6],"tuple3"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","b"],["Var","c"]],["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],[]],"fe_representation":"tuple3 :: a b c -> (a,b,c)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Tuple",["Just",7],["Just",12],"appSnd"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Var","c"],[]],["Type","_Tuple2",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Var","a"],["Var","c"]]],[]],"fe_representation":"appSnd :: (.b -> .c) !(.a,.b) -> (.a,.c)"},["Tip"],["Tip"]]]],["Bin",15,["Location","Platform","Database.SQL",["Just",14],["Nothing"],"password"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLDatabase",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".password :: SQLDatabase -> Maybe String"},["Bin",8,["Location","Platform","Data.Word8",["Just",16],["Just",27],"stringToBytes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_List",[["Type","Word8",[]]]],[]],"fe_representation":"stringToBytes :: !String -> [Word8]"},["Bin",4,["Location","Platform","Data.Tuple",["Just",11],["Just",21],"appThd3"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","c"]],["Var","d"],[]],["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]]],["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","d"]]],[]],"fe_representation":"appThd3 :: (.c -> .d) !(.a,.b,.c) -> (.a,.b,.d)"},["Bin",1,["Location","Platform","Data.Tuple",["Just",10],["Just",18],"appSnd3"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Var","d"],[]],["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]]],["Type","_Tuple3",[["Var","a"],["Var","d"],["Var","c"]]],[]],"fe_representation":"appSnd3 :: (.b -> .d) !(.a,.b,.c) -> (.a,.d,.c)"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Data.Tuple",["Just",13],["Just",24],"swap"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Var","b"],["Var","a"]]],[]],"fe_representation":"swap :: (a,b) -> (b,a)"},["Tip"],["Bin",1,["Location","Platform","Data.Void",["Just",5],["Nothing"],"Void"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Void",[]],[]],"fe_representation":"Void :: Void"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Database.SQL",["Just",14],["Nothing"],"database"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLDatabase",[]]],["Type","String",[]],[]],"fe_representation":".database :: SQLDatabase -> String"},["Bin",1,["Location","Platform","Data.Word8",["Just",17],["Just",30],"bytesToString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Word8",[]]]]],["Type","String",[]],[]],"fe_representation":"bytesToString :: ![Word8] -> String"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL",["Just",14],["Nothing"],"host"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLDatabase",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".host :: SQLDatabase -> Maybe String"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVDate"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SQLDate",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVDate :: SQLDate -> SQLValue"},["Bin",3,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVBlob"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVBlob :: String -> SQLValue"},["Bin",1,["Location","Platform","Database.SQL",["Just",14],["Nothing"],"username"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLDatabase",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".username :: SQLDatabase -> Maybe String"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVChar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVChar :: String -> SQLValue"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVDatetime"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SQLDate",[]],["Type","SQLTime",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVDatetime :: SQLDate SQLTime -> SQLValue"},["Tip"],["Bin",1,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVDouble"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVDouble :: Real -> SQLValue"},["Tip"],["Tip"]]]]]]],["Bin",28,["Location","Platform","Database.SQL",["Just",49],["Nothing"],"hour"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLTime",[]]],["Type","Int",[]],[]],"fe_representation":".hour :: SQLTime -> Int"},["Bin",12,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVTime"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SQLTime",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVTime :: SQLTime -> SQLValue"},["Bin",5,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVNull"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLValue",[]],[]],"fe_representation":"SQLVNull :: SQLValue"},["Bin",2,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVFloat"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVFloat :: Real -> SQLValue"},["Tip"],["Bin",1,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVInteger"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVInteger :: Int -> SQLValue"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVReal"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVReal :: Real -> SQLValue"},["Tip"],["Bin",1,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVText"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVText :: String -> SQLValue"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Database.SQL",["Just",44],["Nothing"],"day"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLDate",[]]],["Type","Int",[]],[]],"fe_representation":".day :: SQLDate -> Int"},["Bin",3,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVUnknown"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVUnknown :: String -> SQLValue"},["Bin",1,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVTimestamp"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVTimestamp :: Int -> SQLValue"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLVVarchar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SQLValue",[]],[]],"fe_representation":"SQLVVarchar :: String -> SQLValue"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL",["Just",44],["Nothing"],"month"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLDate",[]]],["Type","Int",[]],[]],"fe_representation":".month :: SQLDate -> Int"},["Tip"],["Bin",1,["Location","Platform","Database.SQL",["Just",44],["Nothing"],"year"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLDate",[]]],["Type","Int",[]],[]],"fe_representation":".year :: SQLDate -> Int"},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLNotSupportedError"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLError",[]],[]],"fe_representation":"SQLNotSupportedError :: SQLError"},["Bin",7,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLDataError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","SQLError",[]],[]],"fe_representation":"SQLDataError :: Int String -> SQLError"},["Bin",2,["Location","Platform","Database.SQL",["Just",49],["Nothing"],"second"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLTime",[]]],["Type","Int",[]],[]],"fe_representation":".second :: SQLTime -> Int"},["Bin",1,["Location","Platform","Database.SQL",["Just",49],["Nothing"],"minute"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLTime",[]]],["Type","Int",[]],[]],"fe_representation":".minute :: SQLTime -> Int"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLIntegrityError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","SQLError",[]],[]],"fe_representation":"SQLIntegrityError :: Int String -> SQLError"},["Bin",1,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLDatabaseError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","SQLError",[]],[]],"fe_representation":"SQLDatabaseError :: Int String -> SQLError"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLInternalError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","SQLError",[]],[]],"fe_representation":"SQLInternalError :: Int String -> SQLError"},["Bin",1,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLInterfaceError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","SQLError",[]],[]],"fe_representation":"SQLInterfaceError :: Int String -> SQLError"},["Tip"],["Tip"]],["Tip"]]]],["Bin",7,["Location","Platform","Database.SQL",["Just",92],["Nothing"],"foreignKeys"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLTable",[]]],["Type","_List",[["Type","_Tuple3",[["Type","_List",[["Type","SQLColumnName",[]]]],["Type","SQLTableName",[]],["Type","_List",[["Type","SQLColumnName",[]]]]]]]],[]],"fe_representation":".foreignKeys :: SQLTable -> [([SQLColumnName], SQLTableName, [SQLColumnName])]"},["Bin",4,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLProgrammingError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","SQLError",[]],[]],"fe_representation":"SQLProgrammingError :: Int String -> SQLError"},["Bin",1,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLOperationalError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","SQLError",[]],[]],"fe_representation":"SQLOperationalError :: Int String -> SQLError"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Database.SQL",["Just",92],["Nothing"],"columns"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLTable",[]]],["Type","_List",[["Type","SQLColumn",[]]]],[]],"fe_representation":".columns :: SQLTable -> [SQLColumn]"},["Bin",1,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLWarning"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","SQLError",[]],[]],"fe_representation":"SQLWarning :: Int String -> SQLError"},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL",["Just",92],["Nothing"],"primaryKey"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLTable",[]]],["Type","_List",[["Type","SQLColumnName",[]]]],[]],"fe_representation":".primaryKey :: SQLTable -> [SQLColumnName]"},["Bin",1,["Location","Platform","Database.SQL",["Just",92],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLTable",[]]],["Type","SQLTableName",[]],[]],"fe_representation":".name :: SQLTable -> SQLTableName"},["Tip"],["Tip"]],["Tip"]]]]]]],["Bin",58,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"fld_match"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RelMapFieldInfo",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".fld_match :: RelMapFieldInfo -> Maybe String"},["Bin",32,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTTimestamp"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTTimestamp :: SQLColumnType"},["Bin",14,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTEnum"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]]],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTEnum :: [String] -> SQLColumnType"},["Bin",8,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTBlob"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTBlob :: SQLColumnType"},["Bin",3,["Location","Platform","Database.SQL",["Just",102],["Nothing"],"null"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLColumn",[]]],["Type","Bool",[]],[]],"fe_representation":".null :: SQLColumn -> Bool"},["Bin",1,["Location","Platform","Database.SQL",["Just",102],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLColumn",[]]],["Type","SQLColumnName",[]],[]],"fe_representation":".name :: SQLColumn -> SQLColumnName"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL",["Just",102],["Nothing"],"type"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SQLColumn",[]]],["Type","SQLColumnType",[]],[]],"fe_representation":".type :: SQLColumn -> SQLColumnType"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTDatetime"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTDatetime :: SQLColumnType"},["Bin",2,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTDate"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTDate :: SQLColumnType"},["Bin",1,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTChar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTChar :: Int -> SQLColumnType"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTDouble"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTDouble :: SQLColumnType"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTReal"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTReal :: SQLColumnType"},["Bin",2,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTFloat"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTFloat :: SQLColumnType"},["Tip"],["Bin",1,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTInteger"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTInteger :: SQLColumnType"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTTime"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTTime :: SQLColumnType"},["Bin",1,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTText"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTText :: SQLColumnType"},["Tip"],["Tip"]],["Tip"]]]],["Bin",17,["Location","Platform","Database.SQL.RelationalMapping",["Just",36],["Just",57],"RelMapInfo"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RelMapMode",[]],[]],"fe_representation":"RelMapInfo :: RelMapMode"},["Bin",10,["Location","Platform","Database.SQL.RelationalMapping",["Just",19],["Just",22],"mapUpdate"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","val"],["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","MappingError",[]]]],["Type","Maybe",[["Var","ref"]]],["Uniq",["Var","cur"]]]],[[["Class","SQLCursor"],["Var","cur"]],[["Generic","relMap",["KindConst"]],["Var","ref"]],[["Generic","relMap",["KindConst"]],["Var","val"]],[["Generic","bimap",["KindConst"]],["Var","cur"]]]],"fe_representation":"mapUpdate :: !val !*cur -> (!Maybe MappingError,!Maybe ref,!*cur) | relMap{|*|} ref & relMap{|*|} val & SQLCursor cur & bimap{|*|} cur"},["Bin",4,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTVarchar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTVarchar :: Int -> SQLColumnType"},["Bin",1,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLTUnknown"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SQLColumnType",[]],[]],"fe_representation":"SQLTUnknown :: SQLColumnType"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Database.SQL.RelationalMapping",["Just",18],["Just",14],"mapCreate"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","val"],["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","MappingError",[]]]],["Type","Maybe",[["Var","ref"]]],["Uniq",["Var","cur"]]]],[[["Class","SQLCursor"],["Var","cur"]],[["Generic","relMap",["KindConst"]],["Var","ref"]],[["Generic","relMap",["KindConst"]],["Var","val"]],[["Generic","bimap",["KindConst"]],["Var","cur"]]]],"fe_representation":"mapCreate :: !val !*cur -> (!Maybe MappingError,!Maybe ref,!*cur) | relMap{|*|} ref & relMap{|*|} val & SQLCursor cur & bimap{|*|} cur"},["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",17],["Just",7],"mapRead"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","ref"],["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","MappingError",[]]]],["Type","Maybe",[["Var","val"]]],["Uniq",["Var","cur"]]]],[[["Class","SQLCursor"],["Var","cur"]],[["Generic","relMap",["KindConst"]],["Var","ref"]],[["Generic","relMap",["KindConst"]],["Var","val"]],[["Generic","bimap",["KindConst"]],["Var","cur"]]]],"fe_representation":"mapRead :: !ref !*cur -> (!Maybe MappingError,!Maybe val,!*cur) | relMap{|*|} ref & relMap{|*|} val & SQLCursor cur & bimap{|*|} cur"},["Tip"],["Tip"]],["Tip"]]],["Bin",5,["Location","Platform","Database.SQL.RelationalMapping",["Just",23],["Nothing"],"TypeError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","MappingError",[]],[]],"fe_representation":"TypeError :: String -> MappingError"},["Bin",2,["Location","Platform","Database.SQL.RelationalMapping",["Just",20],["Just",30],"mapDelete"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","ref"],["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","MappingError",[]]]],["Type","Maybe",[["Var","val"]]],["Uniq",["Var","cur"]]]],[[["Class","SQLCursor"],["Var","cur"]],[["Generic","relMap",["KindConst"]],["Var","ref"]],[["Generic","relMap",["KindConst"]],["Var","val"]],[["Generic","bimap",["KindConst"]],["Var","cur"]]]],"fe_representation":"mapDelete :: !ref !*cur -> (!Maybe MappingError,!Maybe val,!*cur) | relMap{|*|} ref & relMap{|*|} val & SQLCursor cur & bimap{|*|} cur"},["Tip"],["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",23],["Nothing"],"DatabaseError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SQLError",[]]],["Type","MappingError",[]],[]],"fe_representation":"DatabaseError :: SQLError -> MappingError"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL.RelationalMapping",["Just",36],["Just",57],"RelMapCreate"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RelMapMode",[]],[]],"fe_representation":"RelMapCreate :: RelMapMode"},["Tip"],["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",36],["Just",57],"RelMapDelete"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RelMapMode",[]],[]],"fe_representation":"RelMapDelete :: RelMapMode"},["Tip"],["Tip"]]]]],["Bin",6,["Location","Platform","Database.SQL.RelationalMapping",["Just",48],["Just",51],"RelMapOverride"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","SQLValue",[]]],["Type","RelMapToken",[]],[]],"fe_representation":"RelMapOverride :: String SQLValue -> RelMapToken"},["Bin",3,["Location","Platform","Database.SQL.RelationalMapping",["Just",36],["Just",57],"RelMapRead"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RelMapMode",[]],[]],"fe_representation":"RelMapRead :: RelMapMode"},["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",36],["Just",57],"RelMapInit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RelMapMode",[]],[]],"fe_representation":"RelMapInit :: RelMapMode"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",36],["Just",57],"RelMapUpdate"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RelMapMode",[]],[]],"fe_representation":"RelMapUpdate :: RelMapMode"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL.RelationalMapping",["Just",48],["Just",51],"RelMapTerminator"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RelMapToken",[]],[]],"fe_representation":"RelMapTerminator :: RelMapToken"},["Tip"],["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",48],["Just",51],"RelMapValue"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SQLValue",[]]],["Type","RelMapToken",[]],[]],"fe_representation":"RelMapValue :: SQLValue -> RelMapToken"},["Tip"],["Tip"]]]]]],["Bin",25,["Location","Platform","Database.SQL._MySQL",["Just",10],["Nothing"],"MYSQL_TYPE_LONG"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_LONG :== 3"},["Bin",13,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"val_id"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RelMapFieldInfo",[]]],["Type","Bool",[]],[]],"fe_representation":".val_id :: RelMapFieldInfo -> Bool"},["Bin",5,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"rec_key"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RelMapFieldInfo",[]]],["Type","String",[]],[]],"fe_representation":".rec_key :: RelMapFieldInfo -> String"},["Bin",2,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"fld_select"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RelMapFieldInfo",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".fld_select :: RelMapFieldInfo -> Maybe String"},["Tip"],["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"fld_table"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RelMapFieldInfo",[]]],["Type","String",[]],[]],"fe_representation":".fld_table :: RelMapFieldInfo -> String"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"rec_table"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RelMapFieldInfo",[]]],["Type","String",[]],[]],"fe_representation":".rec_table :: RelMapFieldInfo -> String"},["Tip"],["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"val_fields"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RelMapFieldInfo",[]]],["Type","_List",[["Type","RelMapFieldInfo",[]]]],[]],"fe_representation":".val_fields :: RelMapFieldInfo -> [RelMapFieldInfo]"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Database.SQL._MySQL",["Just",6],["Nothing"],"CLIENT_FOUND_ROWS"],{"fe_kind":["Macro"],"fe_representation":"CLIENT_FOUND_ROWS :== 2"},["Bin",4,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"val_maybe"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RelMapFieldInfo",[]]],["Type","Bool",[]],[]],"fe_representation":".val_maybe :: RelMapFieldInfo -> Bool"},["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"val_list"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RelMapFieldInfo",[]]],["Type","Bool",[]],[]],"fe_representation":".val_list :: RelMapFieldInfo -> Bool"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Database.SQL._MySQL",["Just",5],["Nothing"],"ENUM_FLAG"],{"fe_kind":["Macro"],"fe_representation":"ENUM_FLAG :== 256"},["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",66],["Just",80],"relMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RelMapMode",[]],["Type","RelMapPass",[]],["Type","Maybe",[["Var","t"]]],["Type","_List",[["Type","RelMapFieldInfo",[]]]],["Type","_List",[["Type","RelMapToken",[]]]],["Uniq",["Var","cur"]]],["Type","_Tuple5",[["Type","Maybe",[["Type","MappingError",[]]]],["Type","Maybe",[["Var","t"]]],["Type","_List",[["Type","RelMapFieldInfo",[]]]],["Type","_List",[["Type","RelMapToken",[]]]],["Uniq",["Var","cur"]]]],[[["Class","SQLCursor"],["Var","cur"]]]],"fe_generic_vars":["t"],"fe_representation":"generic relMap t :: !RelMapMode !RelMapPass !(Maybe t) ![RelMapFieldInfo] ![RelMapToken] !*cur -> (!Maybe MappingError,!Maybe t,![RelMapFieldInfo],![RelMapToken],!*cur) | SQLCursor cur"},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL._MySQL",["Just",8],["Nothing"],"MYSQL_TYPE_TINY"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_TINY :== 1"},["Tip"],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",9],["Nothing"],"MYSQL_TYPE_SHORT"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_SHORT :== 2"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Database.SQL._MySQL",["Just",16],["Nothing"],"MYSQL_TYPE_DOUBLE"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_DOUBLE :== 5"},["Bin",5,["Location","Platform","Database.SQL._MySQL",["Just",13],["Nothing"],"MYSQL_TYPE_DECIMAL"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_DECIMAL :== 0"},["Bin",2,["Location","Platform","Database.SQL._MySQL",["Just",11],["Nothing"],"MYSQL_TYPE_INT24"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_INT24 :== 9"},["Tip"],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",12],["Nothing"],"MYSQL_TYPE_LONGLONG"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_LONGLONG :== 8"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL._MySQL",["Just",14],["Nothing"],"MYSQL_TYPE_NEWDECIMAL"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_NEWDECIMAL :== 246"},["Tip"],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",15],["Nothing"],"MYSQL_TYPE_FLOAT"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_FLOAT :== 4"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Database.SQL._MySQL",["Just",19],["Nothing"],"MYSQL_TYPE_TIME"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_TIME :== 11"},["Bin",2,["Location","Platform","Database.SQL._MySQL",["Just",17],["Nothing"],"MYSQL_TYPE_TIMESTAMP"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_TIMESTAMP :== 7"},["Tip"],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",18],["Nothing"],"MYSQL_TYPE_DATE"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_DATE :== 10"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL._MySQL",["Just",20],["Nothing"],"MYSQL_TYPE_DATETIME"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_DATETIME :== 12"},["Tip"],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",21],["Nothing"],"MYSQL_TYPE_STRING"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_STRING :== 254"},["Tip"],["Tip"]]]]]]]]],["Bin",161,["Location","Platform","Graphics.Scalable",["Just",74],["Just",282],"skewx"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Angle",[]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"skewx :: !Angle !(Image m) -> Image m"},["Bin",98,["Location","Platform","Graphics.Layout",["Just",9],["Nothing"],"AtLeft"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","XAlign",[]],[]],"fe_representation":"AtLeft :: XAlign"},["Bin",62,["Location","Platform","Database.SQL._MySQL",["Just",45],["Just",56],"mysql_real_escape_string"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","_#Array",[["Type","Char",[]]]],["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_representation":"mysql_real_escape_string :: !Pointer !{#Char} !{#Char} !Int -> Int"},["Bin",18,["Location","Platform","Database.SQL._MySQL",["Just",37],["Just",24],"mysql_fetch_lengths"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Pointer",[]],[]],"fe_representation":"mysql_fetch_lengths :: !Pointer -> Pointer"},["Bin",10,["Location","Platform","Database.SQL._MySQL",["Just",28],["Nothing"],"MYSQL_FIELD_FLAGS_OFFSET"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_FIELD_FLAGS_OFFSET :== 100"},["Bin",4,["Location","Platform","Database.SQL._MySQL",["Just",26],["Nothing"],"SIZEOF_MYSQL_FIELD"],{"fe_kind":["Macro"],"fe_representation":"SIZEOF_MYSQL_FIELD :== 128"},["Bin",2,["Location","Platform","Database.SQL._MySQL",["Just",23],["Nothing"],"MYSQL_TYPE_BLOB"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_BLOB :== 252"},["Tip"],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",24],["Nothing"],"MYSQL_TYPE_ENUM"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_TYPE_ENUM :== 247"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",27],["Nothing"],"MYSQL_FIELD_TYPE_OFFSET"],{"fe_kind":["Macro"],"fe_representation":"MYSQL_FIELD_TYPE_OFFSET :== 112"},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Database.SQL._MySQL",["Just",35],["Just",16],"mysql_error"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Pointer",[]],[]],"fe_representation":"mysql_error :: !Pointer -> Pointer"},["Bin",3,["Location","Platform","Database.SQL._MySQL",["Just",33],["Just",8],"mysql_close"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"mysql_close :: !Pointer -> Int"},["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",32],["Just",4],"mysql_affected_rows"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"mysql_affected_rows :: !Pointer -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",34],["Just",12],"mysql_errno"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"mysql_errno :: !Pointer -> Int"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",36],["Just",20],"mysql_fetch_fields"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Pointer",[]],[]],"fe_representation":"mysql_fetch_fields :: !Pointer -> Pointer"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Database.SQL._MySQL",["Just",41],["Just",40],"mysql_insert_id"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"mysql_insert_id :: !Pointer -> Int"},["Bin",3,["Location","Platform","Database.SQL._MySQL",["Just",39],["Just",32],"mysql_free_result"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"mysql_free_result :: !Pointer -> Int"},["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",38],["Just",28],"mysql_fetch_row"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Pointer",[]],[]],"fe_representation":"mysql_fetch_row :: !Pointer -> Pointer"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",40],["Just",36],"mysql_init"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"mysql_init :: !Int -> Pointer"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Database.SQL._MySQL",["Just",43],["Just",48],"mysql_num_rows"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"mysql_num_rows :: !Pointer -> Int"},["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",42],["Just",44],"mysql_num_fields"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"mysql_num_fields :: !Pointer -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",44],["Just",52],"mysql_real_connect"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","_#Array",[["Type","Char",[]]]],["Type","_#Array",[["Type","Char",[]]]],["Type","_#Array",[["Type","Char",[]]]],["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]],["Type","Int",[]],["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"mysql_real_connect :: !Pointer !{#Char} !{#Char} !{#Char} !{#Char} !Int !Int !Int -> Pointer"},["Tip"],["Tip"]]]]],["Bin",43,["Location","Platform","Database.SQL._SQLite",["Just",15],["Nothing"],"SQLITE_TRANSIENT"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_TRANSIENT :== -1"},["Bin",12,["Location","Platform","Database.SQL._SQLite",["Just",10],["Nothing"],"SQLITE_FLOAT"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_FLOAT :== 2"},["Bin",7,["Location","Platform","Database.SQL._SQLite",["Just",7],["Nothing"],"SQLITE_ROW"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_ROW :== 100"},["Bin",4,["Location","Platform","Database.SQL._MySQL",["Just",47],["Just",64],"mysql_store_result"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Pointer",[]],[]],"fe_representation":"mysql_store_result :: !Pointer -> Pointer"},["Bin",1,["Location","Platform","Database.SQL._MySQL",["Just",46],["Just",60],"mysql_real_query"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_representation":"mysql_real_query :: !Pointer !{#Char} !Int -> Int"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Database.SQL._SQLite",["Just",6],["Nothing"],"SQLITE_ERROR"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_ERROR :== 1"},["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",5],["Nothing"],"SQLITE_OK"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_OK :== 0"},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL._SQLite",["Just",8],["Nothing"],"SQLITE_DONE"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_DONE :== 101"},["Tip"],["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",9],["Nothing"],"SQLITE_INTEGER"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_INTEGER :== 1"},["Tip"],["Tip"]]]],["Bin",4,["Location","Platform","Database.SQL._SQLite",["Just",13],["Nothing"],"SQLITE_NULL"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_NULL :== 5"},["Bin",2,["Location","Platform","Database.SQL._SQLite",["Just",11],["Nothing"],"SQLITE_TEXT"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_TEXT :== 3"},["Tip"],["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",12],["Nothing"],"SQLITE_BLOB"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_BLOB :== 4"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",14],["Nothing"],"SQLITE_STATIC"],{"fe_kind":["Macro"],"fe_representation":"SQLITE_STATIC :== 0"},["Tip"],["Tip"]]]],["Bin",30,["Location","Platform","Database.SQL._SQLite",["Just",33],["Just",64],"sqlite3_column_text"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"sqlite3_column_text :: !Pointer !Int -> Pointer"},["Bin",15,["Location","Platform","Database.SQL._SQLite",["Just",25],["Just",32],"sqlite3_bind_blob"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Int",[]],["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]],["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_bind_blob :: !Pointer !Int !{#Char} !Int !Pointer -> Int"},["Bin",7,["Location","Platform","Database.SQL._SQLite",["Just",21],["Just",16],"sqlite3_errmsg"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Pointer",[]],[]],"fe_representation":"sqlite3_errmsg :: !Pointer -> Pointer"},["Bin",3,["Location","Platform","Database.SQL._SQLite",["Just",19],["Just",8],"sqlite3_close"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_close :: !Pointer -> Int"},["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",18],["Just",4],"sqlite3_open"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Pointer",[]]]],[]],"fe_representation":"sqlite3_open :: !{#Char} -> (!Int,!Pointer)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",20],["Just",12],"sqlite3_errcode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_errcode :: !Pointer -> Int"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Database.SQL._SQLite",["Just",23],["Just",24],"sqlite3_bind_null"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_bind_null :: !Pointer !Int -> Int"},["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",22],["Just",20],"sqlite3_prepare"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]]],["Type","_Tuple3",[["Type","Int",[]],["Type","Pointer",[]],["Type","Pointer",[]]]],[]],"fe_representation":"sqlite3_prepare :: !Pointer !{#Char} !Int -> (!Int,!Pointer,!Pointer)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",24],["Just",28],"sqlite3_bind_text"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Int",[]],["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]],["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_bind_text :: !Pointer !Int !{#Char} !Int !Pointer -> Int"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Database.SQL._SQLite",["Just",29],["Just",48],"sqlite3_finalize"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_finalize :: !Pointer -> Int"},["Bin",3,["Location","Platform","Database.SQL._SQLite",["Just",27],["Just",40],"sqlite3_bind_double"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Int",[]],["Type","Real",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_bind_double :: !Pointer !Int !Real -> Int"},["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",26],["Just",36],"sqlite3_bind_int64"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Int",[]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_bind_int64 :: !Pointer !Int !Int -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",28],["Just",44],"sqlite3_step"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_step :: !Pointer -> Int"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Database.SQL._SQLite",["Just",31],["Just",56],"sqlite3_column_type"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_column_type :: !Pointer !Int -> Int"},["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",30],["Just",52],"sqlite3_column_count"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_column_count :: !Pointer -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",32],["Just",60],"sqlite3_column_int"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_column_int :: !Pointer !Int -> Int"},["Tip"],["Tip"]]]]],["Bin",14,["Location","Platform","Graphics.Layout",["Just",3],["Nothing"],"Columns"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GridDimension",[]],[]],"fe_representation":"Columns :: Int -> GridDimension"},["Bin",6,["Location","Platform","Debug.Performance",["Just",11],["Just",9],"measureTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]]],["Func",[["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Clock",[]],["Uniq",["Var","env"]]]],[]],[]],"fe_representation":"measureTime :: !u:(*env -> *env) -> v:(*env -> (!Clock,!*env)), [v<=u]","fe_documentation":["FunctionDoc",["Just","Measures the duration of the computation on a unique environment.\nThe time is measure as the delta of clock ticks as defined in System.Time."],["computation on the unique environment"],[],["Just","function that additionally measures the duration of the given computation"]]},["Bin",2,["Location","Platform","Database.SQL._SQLite",["Just",34],["Just",68],"sqlite3_last_insert_rowid"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_last_insert_rowid :: !Pointer -> Int"},["Tip"],["Bin",1,["Location","Platform","Database.SQL._SQLite",["Just",35],["Just",72],"sqlite3_changes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"sqlite3_changes :: !Pointer -> Int"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Debug.Performance",["Just",29],["Just",31],"printTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]]],["Func",[["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],[]],"fe_representation":"printTime :: !String !u:(*env -> *env) -> v:(*env -> *env), [v<=u]","fe_documentation":["FunctionDoc",["Just","Prints the duration of the computation on a unique environment.\nBefore the computation, a given label is printed, afterwards the time is printed (in ms).\nIf this function is used in a nested way, indentations are added automatically."],["the label to print","computation on the unique environment"],[],["Just","function that additionally prints the duration of the given computation"]]},["Bin",1,["Location","Platform","Debug.Performance",["Just",19],["Just",20],"measureTimeRes"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Var","env"]]],["Type","_Tuple2",[["Var","a"],["Uniq",["Var","env"]]]],[]]],["Func",[["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","Clock",[]],["Var","a"],["Uniq",["Var","env"]]]],[]],[]],"fe_representation":"measureTimeRes :: !u:(*env -> (!.a,!*env)) -> v:(*env -> (!Clock,!.a,!*env)), [v<=u]","fe_documentation":["FunctionDoc",["Just","Measures the duration of the computation on a unique environment, returning an additional result.\nThe time is measure as the delta of clock ticks as defined in System.Time."],["computation on the unique environment"],[],["Just","function that additionally measures the duration of the given computation"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Debug.Performance",["Just",39],["Just",42],"printTimeRes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Uniq",["Var","env"]]],["Type","_Tuple2",[["Var","a"],["Uniq",["Var","env"]]]],[]]],["Func",[["Uniq",["Var","env"]]],["Type","_Tuple2",[["Var","a"],["Uniq",["Var","env"]]]],[]],[]],"fe_representation":"printTimeRes :: !String !u:(*env -> (!.a,!*env)) -> v:(*env -> (!.a,!*env)), [v<=u]","fe_documentation":["FunctionDoc",["Just","Prints the duration of the computation on a unique environment, returning an additional result.\nBefore the computation, a given label is printed, afterwards the time is printed (in ms).\nIf this function is used in a nested way, indentations are added automatically."],["the label to print","computation on the unique environment"],[],["Just","function that additionally prints the duration of the given computation"]]},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Graphics.Layout",["Just",6],["Nothing"],"LeftToRight"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridXLayout",[]],[]],"fe_representation":"LeftToRight :: GridXLayout"},["Bin",3,["Location","Platform","Graphics.Layout",["Just",5],["Nothing"],"ColumnMajor"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridMajor",[]],[]],"fe_representation":"ColumnMajor :: GridMajor"},["Bin",1,["Location","Platform","Graphics.Layout",["Just",3],["Nothing"],"Rows"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GridDimension",[]],[]],"fe_representation":"Rows :: Int -> GridDimension"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Layout",["Just",5],["Nothing"],"RowMajor"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridMajor",[]],[]],"fe_representation":"RowMajor :: GridMajor"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Layout",["Just",7],["Nothing"],"BottomToTop"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridYLayout",[]],[]],"fe_representation":"BottomToTop :: GridYLayout"},["Bin",1,["Location","Platform","Graphics.Layout",["Just",6],["Nothing"],"RightToLeft"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridXLayout",[]],[]],"fe_representation":"RightToLeft :: GridXLayout"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Layout",["Just",7],["Nothing"],"TopToBottom"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridYLayout",[]],[]],"fe_representation":"TopToBottom :: GridYLayout"},["Tip"],["Tip"]]]]]]]],["Bin",35,["Location","Platform","Graphics.Scalable",["Just",53],["Just",144],"raw"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]],["Type","String",[]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"raw :: !Span !Span !String -> Image m"},["Bin",19,["Location","Platform","Graphics.Scalable",["Just",34],["Just",40],"minSpan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Span",[]]]]],["Type","Span",[]],[]],"fe_representation":"minSpan :: ![Span] -> Span"},["Bin",11,["Location","Platform","Graphics.Layout",["Just",14],["Nothing"],"AtMiddleY"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","YAlign",[]],[]],"fe_representation":"AtMiddleY :: YAlign"},["Bin",3,["Location","Platform","Graphics.Layout",["Just",9],["Nothing"],"AtRight"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","XAlign",[]],[]],"fe_representation":"AtRight :: XAlign"},["Bin",1,["Location","Platform","Graphics.Layout",["Just",9],["Nothing"],"AtMiddleX"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","XAlign",[]],[]],"fe_representation":"AtMiddleX :: XAlign"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Layout",["Just",14],["Nothing"],"AtBottom"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","YAlign",[]],[]],"fe_representation":"AtBottom :: YAlign"},["Tip"],["Tip"]]],["Bin",7,["Location","Platform","Graphics.Scalable",["Just",29],["Just",28],"imagexspan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ImageTag",[]]],["Type","Span",[]],[]],"fe_representation":"imagexspan :: !ImageTag -> Span"},["Bin",3,["Location","Platform","Graphics.Scalable",["Just",27],["Just",22],"px"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]]],["Type","Span",[]],[]],"fe_representation":"px :: !Real -> Span"},["Bin",1,["Location","Platform","Graphics.Layout",["Just",14],["Nothing"],"AtTop"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","YAlign",[]],[]],"fe_representation":"AtTop :: YAlign"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",28],["Just",25],"textxspan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FontDef",[]],["Type","String",[]]],["Type","Span",[]],[]],"fe_representation":"textxspan :: !FontDef !String -> Span"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable",["Just",31],["Just",34],"columnspan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ImageTag",[]],["Type","Int",[]]],["Type","Span",[]],[]],"fe_representation":"columnspan :: !ImageTag !Int -> Span"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",30],["Just",31],"imageyspan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ImageTag",[]]],["Type","Span",[]],[]],"fe_representation":"imageyspan :: !ImageTag -> Span"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",32],["Just",37],"rowspan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ImageTag",[]],["Type","Int",[]]],["Type","Span",[]],[]],"fe_representation":"rowspan :: !ImageTag !Int -> Span"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Graphics.Scalable",["Just",49],["Just",110],"text"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FontDef",[]],["Type","String",[]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"text :: !FontDef !String -> Image m"},["Bin",3,["Location","Platform","Graphics.Scalable",["Just",46],["Just",498],"normalFontDef"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Real",[]]],["Type","FontDef",[]],[]],"fe_representation":"normalFontDef :: !String !Real -> FontDef"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",36],["Just",58],"maxSpan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Span",[]]]]],["Type","Span",[]],[]],"fe_representation":"maxSpan :: ![Span] -> Span"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",48],["Just",107],"empty"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"empty :: !Span !Span -> Image m"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable",["Just",51],["Just",124],"ellipse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"ellipse :: !Span !Span -> Image m"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",50],["Just",113],"circle"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Span",[]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"circle :: !Span -> Image m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",52],["Just",134],"rect"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"rect :: !Span !Span -> Image m"},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","Graphics.Scalable",["Just",64],["Just",236],"fitx"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Span",[]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"fitx :: !Span !(Image m) -> Image m"},["Bin",7,["Location","Platform","Graphics.Scalable",["Just",59],["Just",168],"line"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Markers",[["Var","m"]]]]],["Type","Slash",[]],["Type","Span",[]],["Type","Span",[]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"line :: !(Maybe (Markers m)) !Slash !Span !Span -> Image m"},["Bin",3,["Location","Platform","Graphics.Scalable",["Just",57],["Just",162],"xline"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Markers",[["Var","m"]]]]],["Type","Span",[]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"xline :: !(Maybe (Markers m)) !Span -> Image m"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",55],["Just",154],"defaultMarkers"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Markers",[["Var","m"]]],[]],"fe_representation":"defaultMarkers :: Markers m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",58],["Just",165],"yline"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Markers",[["Var","m"]]]]],["Type","Span",[]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"yline :: !(Maybe (Markers m)) !Span -> Image m"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable",["Just",61],["Just",189],"polyline"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Markers",[["Var","m"]]]]],["Type","_List",[["Type","ImageOffset",[]]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"polyline :: !(Maybe (Markers m)) ![ImageOffset] -> Image m"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",60],["Just",181],"polygon"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Markers",[["Var","m"]]]]],["Type","_List",[["Type","ImageOffset",[]]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"polygon :: !(Maybe (Markers m)) ![ImageOffset] -> Image m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",63],["Just",227],"fit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"fit :: !Span !Span !(Image m) -> Image m"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Graphics.Scalable",["Just",69],["Just",272],"scaley"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"scaley :: !Real !(Image m) -> Image m"},["Bin",3,["Location","Platform","Graphics.Scalable",["Just",67],["Just",254],"scale"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]],["Type","Real",[]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"scale :: !Real !Real !(Image m) -> Image m"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",65],["Just",245],"fity"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Span",[]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"fity :: !Span !(Image m) -> Image m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",68],["Just",263],"scalex"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"scalex :: !Real !(Image m) -> Image m"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable",["Just",72],["Just",221],"flipx"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"flipx :: !(Image m) -> Image m"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",71],["Just",208],"rotate"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Angle",[]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"rotate :: !Angle !(Image m) -> Image m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",73],["Just",224],"flipy"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"flipy :: !(Image m) -> Image m"},["Tip"],["Tip"]]]]]]],["Bin",62,["Location","Platform","Graphics.Scalable.Internal",["Just",45],["Nothing"],"markerStart"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Markers",[["Var","m"]]]],["Type","Maybe",[["Type","Image",[["Var","m"]]]]],[]],"fe_representation":".markerStart :: (Markers m) -> Maybe (Image m)"},["Bin",41,["Location","Platform","Graphics.Scalable.Internal",["Just",9],["Nothing"],"attribs"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","Set",[["Type","ImageAttr",[["Var","m"]]]]],[]],"fe_representation":".attribs :: (Image m) -> Set (ImageAttr m)"},["Bin",14,["Location","Platform","Graphics.Scalable",["Just",88],["Just",416],">@>"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","attr",[["Var","m"]]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[[["Class","tuneImage"],["Var","attr"]]]],"fe_priority":["RightAssoc",2],"fe_representation":"(>@>) infixr 2 :: !(attr m) !(Image m) -> Image m | tuneImage attr"},["Bin",7,["Location","Platform","Graphics.Scalable",["Just",79],["Just",325],"above"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","XAlign",[]]]],["Type","_List",[["Type","ImageOffset",[]]]],["Type","_List",[["Type","Image",[["Var","m"]]]]],["Type","Host",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"above :: ![XAlign] ![ImageOffset] ![Image m] !(Host m) -> Image m"},["Bin",3,["Location","Platform","Graphics.Scalable",["Just",77],["Just",309],"overlay"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","XYAlign",[]]]],["Type","_List",[["Type","ImageOffset",[]]]],["Type","_List",[["Type","Image",[["Var","m"]]]]],["Type","Host",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"overlay :: ![XYAlign] ![ImageOffset] ![Image m] !(Host m) -> Image m"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",75],["Just",296],"skewy"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Angle",[]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"skewy :: !Angle !(Image m) -> Image m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",78],["Just",320],"beside"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","YAlign",[]]]],["Type","_List",[["Type","ImageOffset",[]]]],["Type","_List",[["Type","Image",[["Var","m"]]]]],["Type","Host",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"beside :: ![YAlign] ![ImageOffset] ![Image m] !(Host m) -> Image m"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable",["Just",81],["Just",371],"collage"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","ImageOffset",[]]]],["Type","_List",[["Type","Image",[["Var","m"]]]]],["Type","Host",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"collage :: ![ImageOffset] ![Image m] !(Host m) -> Image m"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",80],["Just",330],"grid"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","GridDimension",[]],["Type","GridLayout",[]],["Type","_List",[["Type","XYAlign",[]]]],["Type","_List",[["Type","ImageOffset",[]]]],["Type","_List",[["Type","Image",[["Var","m"]]]]],["Type","Host",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"grid :: !GridDimension !GridLayout ![XYAlign] ![ImageOffset] ![Image m] !(Host m) -> Image m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",87],["Just",413],"<@<"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Image",[["Var","m"]]],["Cons","attr",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[[["Class","tuneImage"],["Var","attr"]]]],"fe_priority":["LeftAssoc",2],"fe_representation":"(<@<) infixl 2 :: !(Image m) !(attr m) -> Image m | tuneImage attr"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Graphics.Scalable",["Just",101],["Nothing"],"r"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RGB",[]]],["Type","Int",[]],[]],"fe_representation":".r :: RGB -> Int"},["Bin",3,["Location","Platform","Graphics.Scalable",["Just",101],["Nothing"],"b"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RGB",[]]],["Type","Int",[]],[]],"fe_representation":".b :: RGB -> Int"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",90],["Just",419],"tuneIf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Type","Image",[["Var","m"]]],["Cons","attr",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[[["Class","tuneImage"],["Var","attr"]]]],"fe_representation":"tuneIf :: !Bool !(Image m) !(attr m) -> Image m | tuneImage attr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable",["Just",101],["Nothing"],"g"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","RGB",[]]],["Type","Int",[]],[]],"fe_representation":".g :: RGB -> Int"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Graphics.Scalable",["Just",110],["Just",465],"tagWithSrc"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","TagSource",[]]],["Type","Image",[["Var","m"]]]],["Uniq",["Type","_Tuple2",[["Type","_Tuple2",[["Type","Image",[["Var","m"]]],["Type","ImageTag",[]]]],["Uniq",["Type","TagSource",[]]]]]],[]],"fe_representation":"tagWithSrc :: !*TagSource !(Image m) -> *(!(!Image m,!ImageTag),!*TagSource)"},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",109],["Just",462],"tag"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","ImageTag",[]]],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"tag :: !*ImageTag !(Image m) -> Image m"},["Tip"],["Tip"]],["Tip"]]]],["Bin",26,["Location","Platform","Graphics.Scalable.Internal",["Just",34],["Nothing"],"Basic"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","BasicImage",[]],["Type","ImageSpan",[]]],["Type","ImageContent",[["Var","m"]]],[]],"fe_representation":"Basic :: BasicImage ImageSpan -> ImageContent m"},["Bin",18,["Location","Platform","Graphics.Scalable.Internal",["Just",9],["Nothing"],"uniqId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","Int",[]],[]],"fe_representation":".uniqId :: (Image m) -> Int"},["Bin",6,["Location","Platform","Graphics.Scalable.Internal",["Just",9],["Nothing"],"totalSpanPreTrans"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","ImageSpan",[]],[]],"fe_representation":".totalSpanPreTrans :: (Image m) -> ImageSpan"},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",9],["Nothing"],"mask"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","Maybe",[["Type","Image",[["Var","m"]]]]],[]],"fe_representation":".mask :: (Image m) -> Maybe (Image m)"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",9],["Nothing"],"content"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","ImageContent",[["Var","m"]]],[]],"fe_representation":".content :: (Image m) -> ImageContent m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",9],["Nothing"],"tags"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","Set",[["Type","ImageTag",[]]]],[]],"fe_representation":".tags :: (Image m) -> Set ImageTag"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",9],["Nothing"],"transformCorrection"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","ImageOffset",[]],[]],"fe_representation":".transformCorrection :: (Image m) -> ImageOffset"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",9],["Nothing"],"transform"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","_List",[["Type","ImageTransform",[]]]],[]],"fe_representation":".transform :: (Image m) -> [ImageTransform]"},["Tip"],["Tip"]],["Tip"]]],["Bin",11,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"FlipYImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ImageTransform",[]],[]],"fe_representation":"FlipYImage :: ImageTransform"},["Bin",4,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"FitYImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Span",[]]],["Type","ImageTransform",[]],[]],"fe_representation":"FitYImage :: Span -> ImageTransform"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"FitXImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Span",[]]],["Type","ImageTransform",[]],[]],"fe_representation":"FitXImage :: Span -> ImageTransform"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"FitImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]]],["Type","ImageTransform",[]],[]],"fe_representation":"FitImage :: Span Span -> ImageTransform"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"FlipXImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ImageTransform",[]],[]],"fe_representation":"FlipXImage :: ImageTransform"},["Tip"],["Tip"]]],["Bin",6,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"ScaleXImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","ImageTransform",[]],[]],"fe_representation":"ScaleXImage :: Real -> ImageTransform"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"ScaleImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]],["Type","Real",[]]],["Type","ImageTransform",[]],[]],"fe_representation":"ScaleImage :: Real Real -> ImageTransform"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"RotateImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Angle",[]]],["Type","ImageTransform",[]],[]],"fe_representation":"RotateImage :: Angle -> ImageTransform"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"SkewXImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Angle",[]]],["Type","ImageTransform",[]],[]],"fe_representation":"SkewXImage :: Angle -> ImageTransform"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"ScaleYImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","ImageTransform",[]],[]],"fe_representation":"ScaleYImage :: Real -> ImageTransform"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"SkewYImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Angle",[]]],["Type","ImageTransform",[]],[]],"fe_representation":"SkewYImage :: Angle -> ImageTransform"},["Tip"],["Tip"]]]]]],["Bin",7,["Location","Platform","Graphics.Scalable.Internal",["Just",39],["Nothing"],"lineContent"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LineImage",[["Var","m"]]]],["Type","LineContent",[]],[]],"fe_representation":".lineContent :: (LineImage m) -> LineContent"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",34],["Nothing"],"Composite"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","CompositeImage",[["Var","m"]]]],["Type","ImageContent",[["Var","m"]]],[]],"fe_representation":"Composite :: (CompositeImage m) -> ImageContent m"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",34],["Nothing"],"Line"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LineImage",[["Var","m"]]]],["Type","ImageContent",[["Var","m"]]],[]],"fe_representation":"Line :: (LineImage m) -> ImageContent m"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Graphics.Scalable.Internal",["Just",45],["Nothing"],"markerEnd"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Markers",[["Var","m"]]]],["Type","Maybe",[["Type","Image",[["Var","m"]]]]],[]],"fe_representation":".markerEnd :: (Markers m) -> Maybe (Image m)"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",39],["Nothing"],"lineSpan"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LineImage",[["Var","m"]]]],["Type","ImageSpan",[]],[]],"fe_representation":".lineSpan :: (LineImage m) -> ImageSpan"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",39],["Nothing"],"markers"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LineImage",[["Var","m"]]]],["Type","Maybe",[["Type","Markers",[["Var","m"]]]]],[]],"fe_representation":".markers :: (LineImage m) -> Maybe (Markers m)"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",45],["Nothing"],"markerMid"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Markers",[["Var","m"]]]],["Type","Maybe",[["Type","Image",[["Var","m"]]]]],[]],"fe_representation":".markerMid :: (Markers m) -> Maybe (Image m)"},["Tip"],["Tip"]]]]]],["Bin",20,["Location","Platform","Graphics.Scalable.Internal",["Just",69],["Nothing"],"CircleImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","BasicImage",[]],[]],"fe_representation":"CircleImage :: BasicImage"},["Bin",12,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"MaxSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","Span",[]]]]],["Type","Span",[]],[]],"fe_representation":"MaxSpan :: [Span] -> Span"},["Bin",7,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"AddSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]]],["Type","Span",[]],[]],"fe_representation":"AddSpan :: Span Span -> Span"},["Bin",4,["Location","Platform","Graphics.Scalable.Internal",["Just",51],["Nothing"],"PolylineImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","ImageOffset",[]]]]],["Type","LineContent",[]],[]],"fe_representation":"PolylineImage :: [ImageOffset] -> LineContent"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",51],["Nothing"],"PolygonImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","ImageOffset",[]]]]],["Type","LineContent",[]],[]],"fe_representation":"PolygonImage :: [ImageOffset] -> LineContent"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"AbsSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Span",[]]],["Type","Span",[]],[]],"fe_representation":"AbsSpan :: Span -> Span"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",51],["Nothing"],"SimpleLineImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Slash",[]]],["Type","LineContent",[]],[]],"fe_representation":"SimpleLineImage :: Slash -> LineContent"},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"DivSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]]],["Type","Span",[]],[]],"fe_representation":"DivSpan :: Span Span -> Span"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"LookupSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LookupSpan",[]]],["Type","Span",[]],[]],"fe_representation":"LookupSpan :: LookupSpan -> Span"},["Tip"],["Tip"]]]],["Bin",4,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"MulSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]]],["Type","Span",[]],[]],"fe_representation":"MulSpan :: Span Span -> Span"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"MinSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","Span",[]]]]],["Type","Span",[]],[]],"fe_representation":"MinSpan :: [Span] -> Span"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"SubSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Span",[]],["Type","Span",[]]],["Type","Span",[]],[]],"fe_representation":"SubSpan :: Span Span -> Span"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"PxSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","Span",[]],[]],"fe_representation":"PxSpan :: Real -> Span"},["Tip"],["Tip"]],["Tip"]]]],["Bin",7,["Location","Platform","Graphics.Scalable.Internal",["Just",69],["Nothing"],"RawImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","BasicImage",[]],[]],"fe_representation":"RawImage :: String -> BasicImage"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",69],["Nothing"],"EllipseImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","BasicImage",[]],[]],"fe_representation":"EllipseImage :: BasicImage"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",69],["Nothing"],"EmptyImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","BasicImage",[]],[]],"fe_representation":"EmptyImage :: BasicImage"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Graphics.Scalable.Internal",["Just",77],["Nothing"],"fontfamily"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FontDef",[]]],["Type","String",[]],[]],"fe_representation":".fontfamily :: FontDef -> String"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",69],["Nothing"],"RectImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","BasicImage",[]],[]],"fe_representation":"RectImage :: BasicImage"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",69],["Nothing"],"TextImage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","FontDef",[]],["Type","String",[]]],["Type","BasicImage",[]],[]],"fe_representation":"TextImage :: FontDef String -> BasicImage"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",77],["Nothing"],"fontstretch"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FontDef",[]]],["Type","String",[]],[]],"fe_representation":".fontstretch :: FontDef -> String"},["Tip"],["Tip"]]]]]]]],["Bin",230,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"client_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","String",[]],[]],"fe_representation":".client_name :: HTTPRequest -> String"},["Bin",88,["Location","Platform","Graphics.Scalable.Internal",["Just",146],["Nothing"],"local"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnClickAttr",[["Var","m"]]]],["Type","Bool",[]],[]],"fe_representation":".local :: (OnClickAttr m) -> Bool"},["Bin",49,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageOnMouseOutAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OnMouseOutAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageOnMouseOutAttr :: (OnMouseOutAttr m) -> ImageAttr m"},["Bin",34,["Location","Platform","Graphics.Scalable.Internal",["Just",109],["Nothing"],"AtBottom"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","YAlign",[]],[]],"fe_representation":"AtBottom :: YAlign"},["Bin",21,["Location","Platform","Graphics.Scalable.Internal",["Just",101],["Nothing"],"LeftToRight"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridXLayout",[]],[]],"fe_representation":"LeftToRight :: GridXLayout"},["Bin",14,["Location","Platform","Graphics.Scalable.Internal",["Just",91],["Nothing"],"ImageYSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ImageTag",[]]],["Type","LookupSpan",[]],[]],"fe_representation":"ImageYSpan :: ImageTag -> LookupSpan"},["Bin",7,["Location","Platform","Graphics.Scalable.Internal",["Just",86],["Nothing"],"compose"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CompositeImage",[["Var","m"]]]],["Type","Compose",[["Var","m"]]],[]],"fe_representation":".compose :: (CompositeImage m) -> Compose m"},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",77],["Nothing"],"fontweight"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FontDef",[]]],["Type","String",[]],[]],"fe_representation":".fontweight :: FontDef -> String"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",77],["Nothing"],"fontvariant"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FontDef",[]]],["Type","String",[]],[]],"fe_representation":".fontvariant :: FontDef -> String"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",77],["Nothing"],"fontysize"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FontDef",[]]],["Type","Real",[]],[]],"fe_representation":".fontysize :: FontDef -> Real"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",91],["Nothing"],"ColumnXSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ImageTag",[]],["Type","Int",[]]],["Type","LookupSpan",[]],[]],"fe_representation":"ColumnXSpan :: ImageTag Int -> LookupSpan"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",86],["Nothing"],"host"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CompositeImage",[["Var","m"]]]],["Type","Host",[["Var","m"]]],[]],"fe_representation":".host :: (CompositeImage m) -> Host m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",91],["Nothing"],"ImageXSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ImageTag",[]]],["Type","LookupSpan",[]],[]],"fe_representation":"ImageXSpan :: ImageTag -> LookupSpan"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Graphics.Scalable.Internal",["Just",98],["Nothing"],"Columns"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GridDimension",[]],[]],"fe_representation":"Columns :: Int -> GridDimension"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",91],["Nothing"],"TextXSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","FontDef",[]],["Type","String",[]]],["Type","LookupSpan",[]],[]],"fe_representation":"TextXSpan :: FontDef String -> LookupSpan"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",91],["Nothing"],"RowYSpan"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ImageTag",[]],["Type","Int",[]]],["Type","LookupSpan",[]],[]],"fe_representation":"RowYSpan :: ImageTag Int -> LookupSpan"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",100],["Nothing"],"ColumnMajor"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridMajor",[]],[]],"fe_representation":"ColumnMajor :: GridMajor"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",98],["Nothing"],"Rows"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GridDimension",[]],[]],"fe_representation":"Rows :: Int -> GridDimension"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",100],["Nothing"],"RowMajor"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridMajor",[]],[]],"fe_representation":"RowMajor :: GridMajor"},["Tip"],["Tip"]]]]],["Bin",6,["Location","Platform","Graphics.Scalable.Internal",["Just",104],["Nothing"],"AtLeft"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","XAlign",[]],[]],"fe_representation":"AtLeft :: XAlign"},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",102],["Nothing"],"BottomToTop"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridYLayout",[]],[]],"fe_representation":"BottomToTop :: GridYLayout"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",101],["Nothing"],"RightToLeft"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridXLayout",[]],[]],"fe_representation":"RightToLeft :: GridXLayout"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",102],["Nothing"],"TopToBottom"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GridYLayout",[]],[]],"fe_representation":"TopToBottom :: GridYLayout"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",104],["Nothing"],"AtMiddleX"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","XAlign",[]],[]],"fe_representation":"AtMiddleX :: XAlign"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",104],["Nothing"],"AtRight"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","XAlign",[]],[]],"fe_representation":"AtRight :: XAlign"},["Tip"],["Tip"]]]]],["Bin",12,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageDraggableAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","DraggableAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageDraggableAttr :: (DraggableAttr m) -> ImageAttr m"},["Bin",6,["Location","Platform","Graphics.Scalable.Internal",["Just",117],["Nothing"],"AsCollage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","ImageOffset",[]]]],["Type","_List",[["Type","Image",[["Var","m"]]]]]],["Type","Compose",[["Var","m"]]],[]],"fe_representation":"AsCollage :: [ImageOffset] [Image m] -> Compose m"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",109],["Nothing"],"AtMiddleY"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","YAlign",[]],[]],"fe_representation":"AtMiddleY :: YAlign"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",109],["Nothing"],"AtTop"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","YAlign",[]],[]],"fe_representation":"AtTop :: YAlign"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",117],["Nothing"],"AsOverlay"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","ImageOffset",[]]]],["Type","_List",[["Type","XYAlign",[]]]],["Type","_List",[["Type","Image",[["Var","m"]]]]]],["Type","Compose",[["Var","m"]]],[]],"fe_representation":"AsOverlay :: [ImageOffset] [XYAlign] [Image m] -> Compose m"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",117],["Nothing"],"AsGrid"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],["Type","_List",[["Type","_List",[["Type","ImageOffset",[]]]]]],["Type","_List",[["Type","_List",[["Type","XYAlign",[]]]]]],["Type","_List",[["Type","_List",[["Type","Image",[["Var","m"]]]]]]]],["Type","Compose",[["Var","m"]]],[]],"fe_representation":"AsGrid :: (Int, Int) [[ImageOffset]] [[XYAlign]] [[Image m]] -> Compose m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageDashAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","DashAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageDashAttr :: (DashAttr m) -> ImageAttr m"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageOnMouseDownAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OnMouseDownAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageOnMouseDownAttr :: (OnMouseDownAttr m) -> ImageAttr m"},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageFillOpacityAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OpacityAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageFillOpacityAttr :: (OpacityAttr m) -> ImageAttr m"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageFillAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","FillAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageFillAttr :: (FillAttr m) -> ImageAttr m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageOnClickAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OnClickAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageOnClickAttr :: (OnClickAttr m) -> ImageAttr m"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageOnMouseMoveAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OnMouseMoveAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageOnMouseMoveAttr :: (OnMouseMoveAttr m) -> ImageAttr m"},["Tip"],["Tip"]]]]],["Bin",14,["Location","Platform","Graphics.Scalable.Internal",["Just",140],["Nothing"],"strokewidth"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StrokeWidthAttr",[["Var","m"]]]],["Type","Span",[]],[]],"fe_representation":".strokewidth :: (StrokeWidthAttr m) -> Span"},["Bin",8,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageStrokeOpacityAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OpacityAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageStrokeOpacityAttr :: (OpacityAttr m) -> ImageAttr m"},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageOnMouseUpAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OnMouseUpAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageOnMouseUpAttr :: (OnMouseUpAttr m) -> ImageAttr m"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageOnMouseOverAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OnMouseOverAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageOnMouseOverAttr :: (OnMouseOverAttr m) -> ImageAttr m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageStrokeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","StrokeAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageStrokeAttr :: (StrokeAttr m) -> ImageAttr m"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageYRadiusAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","YRadiusAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageYRadiusAttr :: (YRadiusAttr m) -> ImageAttr m"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageXRadiusAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","XRadiusAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageXRadiusAttr :: (XRadiusAttr m) -> ImageAttr m"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageStrokeWidthAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","StrokeWidthAttr",[["Var","m"]]]],["Type","ImageAttr",[["Var","m"]]],[]],"fe_representation":"ImageStrokeWidthAttr :: (StrokeWidthAttr m) -> ImageAttr m"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",139],["Nothing"],"stroke"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StrokeAttr",[["Var","m"]]]],["Type","SVGColor",[]],[]],"fe_representation":".stroke :: (StrokeAttr m) -> SVGColor"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Graphics.Scalable.Internal",["Just",143],["Nothing"],"opacity"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OpacityAttr",[["Var","m"]]]],["Type","Real",[]],[]],"fe_representation":".opacity :: (OpacityAttr m) -> Real"},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",141],["Nothing"],"xradius"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","XRadiusAttr",[["Var","m"]]]],["Type","Span",[]],[]],"fe_representation":".xradius :: (XRadiusAttr m) -> Span"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",142],["Nothing"],"yradius"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","YRadiusAttr",[["Var","m"]]]],["Type","Span",[]],[]],"fe_representation":".yradius :: (YRadiusAttr m) -> Span"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",144],["Nothing"],"fill"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FillAttr",[["Var","m"]]]],["Type","SVGColor",[]],[]],"fe_representation":".fill :: (FillAttr m) -> SVGColor"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",145],["Nothing"],"dash"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DashAttr",[["Var","m"]]]],["Type","_List",[["Type","Int",[]]]],[]],"fe_representation":".dash :: (DashAttr m) -> [Int]"},["Tip"],["Tip"]]]]]],["Bin",38,["Location","Platform","Graphics.Scalable.Internal",["Just",156],["Nothing"],"ImageTagSystem"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","ImageTag",[]],[]],"fe_representation":"ImageTagSystem :: Int -> ImageTag"},["Bin",14,["Location","Platform","Graphics.Scalable.Internal",["Just",150],["Nothing"],"local"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseMoveAttr",[["Var","m"]]]],["Type","Bool",[]],[]],"fe_representation":".local :: (OnMouseMoveAttr m) -> Bool"},["Bin",7,["Location","Platform","Graphics.Scalable.Internal",["Just",148],["Nothing"],"local"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseUpAttr",[["Var","m"]]]],["Type","Bool",[]],[]],"fe_representation":".local :: (OnMouseUpAttr m) -> Bool"},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",147],["Nothing"],"local"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseDownAttr",[["Var","m"]]]],["Type","Bool",[]],[]],"fe_representation":".local :: (OnMouseDownAttr m) -> Bool"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",146],["Nothing"],"onclick"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnClickAttr",[["Var","m"]]]],["Func",[["Type","Int",[]]],["Func",[["Var","m"]],["Var","m"],[]],[]],[]],"fe_representation":".onclick :: (OnClickAttr m) -> Int -> m -> m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",147],["Nothing"],"onmousedown"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseDownAttr",[["Var","m"]]]],["Func",[["Var","m"]],["Var","m"],[]],[]],"fe_representation":".onmousedown :: (OnMouseDownAttr m) -> m -> m"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",149],["Nothing"],"local"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseOverAttr",[["Var","m"]]]],["Type","Bool",[]],[]],"fe_representation":".local :: (OnMouseOverAttr m) -> Bool"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",148],["Nothing"],"onmouseup"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseUpAttr",[["Var","m"]]]],["Func",[["Var","m"]],["Var","m"],[]],[]],"fe_representation":".onmouseup :: (OnMouseUpAttr m) -> m -> m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",149],["Nothing"],"onmouseover"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseOverAttr",[["Var","m"]]]],["Func",[["Var","m"]],["Var","m"],[]],[]],"fe_representation":".onmouseover :: (OnMouseOverAttr m) -> m -> m"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Graphics.Scalable.Internal",["Just",152],["Nothing"],"draggable"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DraggableAttr",[["Var","m"]]]],["Type","Maybe",[["Func",[["Type","Maybe",[["Type","Set",[["Type","ImageTag",[]]]]]]],["Func",[["Type","Real",[]]],["Func",[["Type","Real",[]]],["Func",[["Var","m"]],["Var","m"],[]],[]],[]],[]]]],[]],"fe_representation":".draggable :: (DraggableAttr m) -> Maybe ((Maybe (Set ImageTag)) -> Real -> Real -> m -> m)"},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",151],["Nothing"],"local"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseOutAttr",[["Var","m"]]]],["Type","Bool",[]],[]],"fe_representation":".local :: (OnMouseOutAttr m) -> Bool"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",150],["Nothing"],"onmousemove"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseMoveAttr",[["Var","m"]]]],["Func",[["Var","m"]],["Var","m"],[]],[]],"fe_representation":".onmousemove :: (OnMouseMoveAttr m) -> m -> m"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",151],["Nothing"],"onmouseout"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","OnMouseOutAttr",[["Var","m"]]]],["Func",[["Var","m"]],["Var","m"],[]],[]],"fe_representation":".onmouseout :: (OnMouseOutAttr m) -> m -> m"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",153],["Nothing"],"mask"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","MaskAttr",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":".mask :: (MaskAttr m) -> Image m"},["Tip"],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",154],["Nothing"],"NoAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NoAttr",[["Var","m"]]],[]],"fe_representation":"NoAttr :: NoAttr m"},["Tip"],["Tip"]]]]],["Bin",23,["Location","Platform","Internet.HTTP",["Just",22],["Nothing"],"req_path"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequestHeader",[]]],["Type","String",[]],[]],"fe_representation":".req_path :: HTTPRequestHeader -> String"},["Bin",16,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTP_POST"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPMethod",[]],[]],"fe_representation":"HTTP_POST :: HTTPMethod"},["Bin",11,["Location","Platform","Graphics.Scalable.Internal",["Just",164],["Nothing"],"Backslash"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Slash",[]],[]],"fe_representation":"Backslash :: Slash"},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",162],["Nothing"],"Host"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Image",[["Var","m"]]]],["Type","Host",[["Var","m"]]],[]],"fe_representation":"Host :: (Image m) -> Host m"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",156],["Nothing"],"ImageTagUser"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","ImageTag",[]],[]],"fe_representation":"ImageTagUser :: Int String -> ImageTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",162],["Nothing"],"NoHost"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Host",[["Var","m"]]],[]],"fe_representation":"NoHost :: Host m"},["Tip"],["Tip"]]],["Bin",7,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTP_CUSTOM"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HTTPMethod",[]],[]],"fe_representation":"HTTP_CUSTOM :: String -> HTTPMethod"},["Bin",2,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTP_CONNECT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPMethod",[]],[]],"fe_representation":"HTTP_CONNECT :: HTTPMethod"},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",164],["Nothing"],"Slash"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Slash",[]],[]],"fe_representation":"Slash :: Slash"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTP_HEAD"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPMethod",[]],[]],"fe_representation":"HTTP_HEAD :: HTTPMethod"},["Bin",2,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTP_DELETE"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPMethod",[]],[]],"fe_representation":"HTTP_DELETE :: HTTPMethod"},["Tip"],["Bin",1,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTP_GET"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPMethod",[]],[]],"fe_representation":"HTTP_GET :: HTTPMethod"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTP_OPTIONS"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPMethod",[]],[]],"fe_representation":"HTTP_OPTIONS :: HTTPMethod"},["Tip"],["Tip"]]]]],["Bin",4,["Location","Platform","Internet.HTTP",["Just",22],["Nothing"],"req_headers"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequestHeader",[]]],["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],[]],"fe_representation":".req_headers :: HTTPRequestHeader -> [(String, String)]"},["Bin",2,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTP_TRACE"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPMethod",[]],[]],"fe_representation":"HTTP_TRACE :: HTTPMethod"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTP_PUT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPMethod",[]],[]],"fe_representation":"HTTP_PUT :: HTTPMethod"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Internet.HTTP",["Just",22],["Nothing"],"req_method"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequestHeader",[]]],["Type","String",[]],[]],"fe_representation":".req_method :: HTTPRequestHeader -> String"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"arg_cookies"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","Map",[["Type","String",[]],["Type","String",[]]]],[]],"fe_representation":".arg_cookies :: HTTPRequest -> Map String String"},["Bin",2,["Location","Platform","Internet.HTTP",["Just",22],["Nothing"],"req_query"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequestHeader",[]]],["Type","String",[]],[]],"fe_representation":".req_query :: HTTPRequestHeader -> String"},["Tip"],["Bin",1,["Location","Platform","Internet.HTTP",["Just",22],["Nothing"],"req_version"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequestHeader",[]]],["Type","String",[]],[]],"fe_representation":".req_version :: HTTPRequestHeader -> String"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"arg_post"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","Map",[["Type","String",[]],["Type","String",[]]]],[]],"fe_representation":".arg_post :: HTTPRequest -> Map String String"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"arg_get"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","Map",[["Type","String",[]],["Type","String",[]]]],[]],"fe_representation":".arg_get :: HTTPRequest -> Map String String"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"arg_uploads"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","Map",[["Type","String",[]],["Type","HTTPUpload",[]]]],[]],"fe_representation":".arg_uploads :: HTTPRequest -> Map String HTTPUpload"},["Tip"],["Tip"]]]]]]],["Bin",141,["Location","Platform","Internet.HTTP",["Just",100],["Just",221],"staticResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","HTTPResponse",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"staticResponse :: !HTTPRequest !*World -> (!HTTPResponse,!*World)"},["Bin",37,["Location","Platform","Internet.HTTP",["Just",59],["Nothing"],"rsp_headers"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPResponseHeader",[]]],["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],[]],"fe_representation":".rsp_headers :: HTTPResponseHeader -> [(String, String)]"},["Bin",17,["Location","Platform","Internet.HTTP",["Just",50],["Nothing"],"rsp_data"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPResponse",[]]],["Type","String",[]],[]],"fe_representation":".rsp_data :: HTTPResponse -> String"},["Bin",12,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"req_protocol"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","HTTPProtocol",[]],[]],"fe_representation":".req_protocol :: HTTPRequest -> HTTPProtocol"},["Bin",4,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"req_headers"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","Map",[["Type","String",[]],["Type","String",[]]]],[]],"fe_representation":".req_headers :: HTTPRequest -> Map String String"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"req_data"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","String",[]],[]],"fe_representation":".req_data :: HTTPRequest -> String"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"req_path"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","String",[]],[]],"fe_representation":".req_path :: HTTPRequest -> String"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"req_method"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","HTTPMethod",[]],[]],"fe_representation":".req_method :: HTTPRequest -> HTTPMethod"},["Tip"],["Tip"]],["Tip"]]],["Bin",7,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"server_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","String",[]],[]],"fe_representation":".server_name :: HTTPRequest -> String"},["Bin",2,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"req_query"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","String",[]],[]],"fe_representation":".req_query :: HTTPRequest -> String"},["Tip"],["Bin",1,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"req_version"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","String",[]],[]],"fe_representation":".req_version :: HTTPRequest -> String"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Internet.HTTP",["Just",48],["Nothing"],"HTTPProtoHTTPS"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPProtocol",[]],[]],"fe_representation":"HTTPProtoHTTPS :: HTTPProtocol"},["Bin",2,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"server_port"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","Int",[]],[]],"fe_representation":".server_port :: HTTPRequest -> Int"},["Tip"],["Bin",1,["Location","Platform","Internet.HTTP",["Just",48],["Nothing"],"HTTPProtoHTTP"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HTTPProtocol",[]],[]],"fe_representation":"HTTPProtoHTTP :: HTTPProtocol"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Internet.HTTP",["Just",50],["Nothing"],"rsp_code"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPResponse",[]]],["Type","Int",[]],[]],"fe_representation":".rsp_code :: HTTPResponse -> Int"},["Tip"],["Tip"]]]]],["Bin",4,["Location","Platform","Internet.HTTP",["Just",50],["Nothing"],"rsp_reason"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPResponse",[]]],["Type","String",[]],[]],"fe_representation":".rsp_reason :: HTTPResponse -> String"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",50],["Nothing"],"rsp_headers"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPResponse",[]]],["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],[]],"fe_representation":".rsp_headers :: HTTPResponse -> [(String, String)]"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Internet.HTTP",["Just",59],["Nothing"],"rsp_code"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPResponseHeader",[]]],["Type","Int",[]],[]],"fe_representation":".rsp_code :: HTTPResponseHeader -> Int"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",50],["Nothing"],"rsp_version"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPResponse",[]]],["Type","String",[]],[]],"fe_representation":".rsp_version :: HTTPResponse -> String"},["Tip"],["Tip"]],["Tip"]]]],["Bin",19,["Location","Platform","Internet.HTTP",["Just",85],["Just",132],"parseResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Maybe",[["Type","HTTPResponse",[]]]],[]],"fe_representation":"parseResponse :: !String -> Maybe HTTPResponse"},["Bin",11,["Location","Platform","Internet.HTTP",["Just",66],["Nothing"],"upl_mimetype"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPUpload",[]]],["Type","String",[]],[]],"fe_representation":".upl_mimetype :: HTTPUpload -> String"},["Bin",4,["Location","Platform","Internet.HTTP",["Just",66],["Nothing"],"upl_content"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPUpload",[]]],["Type","String",[]],[]],"fe_representation":".upl_content :: HTTPUpload -> String"},["Bin",2,["Location","Platform","Internet.HTTP",["Just",59],["Nothing"],"rsp_reason"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPResponseHeader",[]]],["Type","String",[]],[]],"fe_representation":".rsp_reason :: HTTPResponseHeader -> String"},["Tip"],["Bin",1,["Location","Platform","Internet.HTTP",["Just",59],["Nothing"],"rsp_version"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPResponseHeader",[]]],["Type","String",[]],[]],"fe_representation":".rsp_version :: HTTPResponseHeader -> String"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Internet.HTTP",["Just",66],["Nothing"],"upl_filename"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPUpload",[]]],["Type","String",[]],[]],"fe_representation":".upl_filename :: HTTPUpload -> String"},["Tip"],["Tip"]]],["Bin",6,["Location","Platform","Internet.HTTP",["Just",75],["Just",50],"newHTTPUpload"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","HTTPUpload",[]],[]],"fe_representation":"newHTTPUpload :: HTTPUpload"},["Bin",2,["Location","Platform","Internet.HTTP",["Just",66],["Nothing"],"upl_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","HTTPUpload",[]]],["Type","String",[]],[]],"fe_representation":".upl_name :: HTTPUpload -> String"},["Tip"],["Bin",1,["Location","Platform","Internet.HTTP",["Just",74],["Just",7],"newHTTPRequest"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","HTTPRequest",[]],[]],"fe_representation":"newHTTPRequest :: HTTPRequest"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Internet.HTTP",["Just",83],["Just",114],"parseRequestLine"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Maybe",[["Type","_Tuple4",[["Type","String",[]],["Type","String",[]],["Type","String",[]],["Type","String",[]]]]]],[]],"fe_representation":"parseRequestLine :: !String -> Maybe (!String,!String,!String,!String)"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",76],["Just",25],"newHTTPResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","HTTPResponse",[]],[]],"fe_representation":"newHTTPResponse :: !Int !String -> HTTPResponse"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Internet.HTTP",["Just",84],["Just",123],"parseHeader"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Maybe",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],[]],"fe_representation":"parseHeader :: !String -> Maybe (!String,!String)"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Internet.HTTP",["Just",94],["Just",32],"notfoundResponse"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","HTTPResponse",[]],[]],"fe_representation":"notfoundResponse :: HTTPResponse"},["Bin",3,["Location","Platform","Internet.HTTP",["Just",91],["Just",29],"okResponse"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","HTTPResponse",[]],[]],"fe_representation":"okResponse :: HTTPResponse"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",88],["Just",156],"parseRequest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","HTTPRequest",[]],[]],"fe_representation":"parseRequest :: !HTTPRequest -> HTTPRequest"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Internet.HTTP",["Just",92],["Just",46],"isOkResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPResponse",[]]],["Type","Bool",[]],[]],"fe_representation":"isOkResponse :: !HTTPResponse -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Internet.HTTP",["Just",97],["Just",38],"errorResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","HTTPResponse",[]],[]],"fe_representation":"errorResponse :: !String -> HTTPResponse"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",95],["Just",35],"forbiddenResponse"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","HTTPResponse",[]],[]],"fe_representation":"forbiddenResponse :: HTTPResponse"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Internet.HTTP",["Just",98],["Just",42],"badRequestResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","HTTPResponse",[]],[]],"fe_representation":"badRequestResponse :: !String -> HTTPResponse"},["Tip"],["Tip"]]]]]],["Bin",103,["Location","Platform","System.File",["Just",75],["Nothing"],"lastAccessedTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FileInfo",[]]],["Type","Tm",[]],[]],"fe_representation":".lastAccessedTime :: FileInfo -> Tm"},["Bin",61,["Location","Platform","System.Directory",["Just",9],["Just",19],"removeDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Unit",[]]]],["Uniq",["Var","w"]]]],[]],"fe_representation":"removeDirectory :: !FilePath !*w -> (!MaybeOSError (),!*w)"},["Bin",41,["Location","Platform","Network.IP",["Just",28],["Just",43],"lookupIPAddress"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Type","IPAddress",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"lookupIPAddress :: !String !*World -> (!Maybe IPAddress,!*World)","fe_documentation":["FunctionDoc",["Just","Looks up a DNS name (e.g www.example.com) and returns an IP address on success"],[],[],["Nothing"]]},["Bin",17,["Location","Platform","Math.Geometry",["Just",7],["Nothing"],"Deg"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","Angle",[]],[]],"fe_representation":"Deg :: Real -> Angle"},["Bin",6,["Location","Platform","Internet.HTTP.CGI",["Just",5],["Nothing"],"CGIOptStaticFallback"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","CGIOption",[]],[]],"fe_representation":"CGIOptStaticFallback :: Bool -> CGIOption"},["Bin",3,["Location","Platform","Internet.HTTP",["Just",103],["Just",268],"encodeResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Type","HTTPResponse",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","String",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"encodeResponse :: !Bool !HTTPResponse !*World -> (!String,!*World)"},["Bin",1,["Location","Platform","Internet.HTTP",["Just",101],["Just",258],"customResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Func",[["Type","String",[]]],["Type","Bool",[]],[]],["Func",[["Type","HTTPRequest",[]]],["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","HTTPResponse",[]],["Uniq",["Type","World",[]]]]],[]],[]]]]]],["Type","Bool",[]],["Type","HTTPRequest",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","HTTPResponse",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"customResponse :: ![(String -> Bool,HTTPRequest -> *World -> (HTTPResponse,*World))] !Bool !HTTPRequest !*World -> (!HTTPResponse,!*World)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Internet.HTTP.CGI",["Just",5],["Nothing"],"CGIOptParseArguments"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","CGIOption",[]],[]],"fe_representation":"CGIOptParseArguments :: Bool -> CGIOption"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Internet.HTTP.CGI",["Just",8],["Just",19],"startCGI"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","CGIOption",[]]]],["Type","_List",[["Type","_Tuple2",[["Func",[["Type","String",[]]],["Type","Bool",[]],[]],["Func",[["Type","HTTPRequest",[]]],["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","HTTPResponse",[]],["Uniq",["Type","World",[]]]]],[]],[]]]]]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"startCGI :: [CGIOption] [(String -> Bool,HTTPRequest -> *World -> (HTTPResponse,*World))] *World -> *World"},["Tip"],["Bin",1,["Location","Platform","Math.Geometry",["Just",5],["Nothing"],"pi"],{"fe_kind":["Macro"],"fe_representation":"pi :== 3.14159265359"},["Tip"],["Tip"]]]],["Bin",10,["Location","Platform","Math.Geometry",["Just",15],["Just",15],"toRad"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Angle",[]]],["Type","Real",[]],[]],"fe_representation":"toRad :: !Angle -> Real"},["Bin",4,["Location","Platform","Math.Geometry",["Just",12],["Just",8],"deg"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]]],["Type","Angle",[]],[]],"fe_representation":"deg :: !Real -> Angle"},["Bin",2,["Location","Platform","Math.Geometry",["Just",7],["Nothing"],"Rad"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","Angle",[]],[]],"fe_representation":"Rad :: Real -> Angle"},["Tip"],["Bin",1,["Location","Platform","Math.Geometry",["Just",11],["Just",5],"rad"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]]],["Type","Angle",[]],[]],"fe_representation":"rad :: !Real -> Angle"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Math.Geometry",["Just",14],["Just",11],"toDeg"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Angle",[]]],["Type","Real",[]],[]],"fe_representation":"toDeg :: !Angle -> Real"},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Math.Random",["Just",30],["Just",64],"genRandReal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","_List",[["Type","Real",[]]]],[]],"fe_representation":"genRandReal :: !Int -> [Real]","fe_documentation":["FunctionDoc",["Just","Generates an infinite list of in [0, 1] uniformly distributed\nreal pseudorandom numbers. There period is (2^19937)-1.\nInput any nonzero integer as seed value."],["The integer to be used as seed value"],[],["Just","an infinite list of pseudorandom real values"]]},["Bin",1,["Location","Platform","Math.Geometry",["Just",16],["Just",19],"normalize"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Angle",[]]],["Type","Angle",[]],[]],"fe_representation":"normalize :: !Angle -> Angle"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","MersenneTwister",["Just",21],["Just",5],"genRandReal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","_List",[["Type","Real",[]]]],[]],"fe_representation":"genRandReal :: Int -> [Real]"},["Bin",1,["Location","Platform","Math.Random",["Just",40],["Just",33],"genRandInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","_List",[["Type","Int",[]]]],[]],"fe_representation":"genRandInt :: !Int -> [Int]","fe_documentation":["FunctionDoc",["Just","Generates an infinite list of in [-(2^31), (2^31)-1] uniformly distributed\nsigned integer pseudorandom numbers. There period is (2^19937)-1.\nInput any nonzero integer as seed value."],["The integer to be used as seed value"],[],["Just","an infinite list of pseudorandom integer values"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","MersenneTwister",["Just",26],["Just",8],"genRandInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","_List",[["Type","Int",[]]]],[]],"fe_representation":"genRandInt :: Int -> [Int]"},["Tip"],["Tip"]]]]]],["Bin",23,["Location","Platform","StdArrayExtensions",["Just",65],["Nothing"],"findrArrElt"],{"fe_kind":["Macro"],"fe_representation":"findrArrElt pred array i :== findr array i\nwhere\n\tfindr array i\n\t| i < 0 || pred array.[i] = i\n\t| otherwise = findr array (i - 1)"},["Bin",8,["Location","Platform","StdArrayExtensions",["Just",21],["Just",23],"createUnboxedRealArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Real",[]]],["Type","_#Array",[["Type","Real",[]]]],[]],"fe_representation":"createUnboxedRealArr :: !Int !Real -> .{#Real}"},["Bin",4,["Location","Platform","StdArrayExtensions",["Just",19],["Just",15],"createString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Char",[]]],["Type","String",[]],[]],"fe_representation":"createString :: !Int !Char -> .String"},["Bin",2,["Location","Platform","StdArrayExtensions",["Just",18],["Just",11],"createLazyArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"]],["Type","_Array",[["Var","a"]]],[]],"fe_representation":"createLazyArr :: !Int !a -> .{a}"},["Bin",1,["Location","Platform","StdArrayExtensions",["Just",17],["Just",7],"createStrictArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"]],["Type","_!Array",[["Var","a"]]],[]],"fe_representation":"createStrictArr :: !Int !a -> .{!a}"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","StdArrayExtensions",["Just",20],["Just",19],"createUnboxedIntArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]]],["Type","_#Array",[["Type","Int",[]]]],[]],"fe_representation":"createUnboxedIntArr :: !Int !Int -> .{#Int}"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","StdArrayExtensions",["Just",30],["Just",88],"createStrictArrDecFoldSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Func",[["Type","Int",[]]],["Func",[["Var","st"]],["Type","_Tuple2",[["Var","a"],["Var","st"]]],[]],[]],["Var","st"]],["Type","_Tuple2",[["Type","_!Array",[["Var","a"]]],["Var","st"]]],[]],"fe_representation":"createStrictArrDecFoldSt :: !Int !(Int -> .st -> (.a,.st)) !.st -> (!.{!.a},!.st)"},["Bin",1,["Location","Platform","StdArrayExtensions",["Just",22],["Just",73],"createStrictArrIncFoldSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Func",[["Type","Int",[]]],["Func",[["Var","st"]],["Type","_Tuple2",[["Var","a"],["Var","st"]]],[]],[]],["Var","st"]],["Type","_Tuple2",[["Type","_!Array",[["Var","a"]]],["Var","st"]]],[]],"fe_representation":"createStrictArrIncFoldSt :: !Int !(Int -> .st -> (.a,.st)) !.st -> (!.{!.a},!.st)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","StdArrayExtensions",["Just",53],["Nothing"],"findlArrElt"],{"fe_kind":["Macro"],"fe_representation":"findlArrElt pred array i :== findl array i\nwhere\n\tfindl array i\n\t| i >= size array || pred array.[i] = i\n\t| otherwise = findl array (i + 1)"},["Tip"],["Tip"]]]],["Bin",14,["Location","Platform","StdLibMisc",["Just",28],["Just",14],"dayNr"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Date",[]]],["Type","Int",[]],[]],"fe_representation":".dayNr :: Date -> Int"},["Bin",4,["Location","Platform","StdLibMisc",["Just",23],["Just",9],"seconds"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Time",[]]],["Type","Int",[]],[]],"fe_representation":".seconds :: Time -> Int"},["Bin",2,["Location","Platform","StdLibMisc",["Just",23],["Just",9],"minutes"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Time",[]]],["Type","Int",[]],[]],"fe_representation":".minutes :: Time -> Int"},["Bin",1,["Location","Platform","StdLibMisc",["Just",23],["Just",9],"hours"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Time",[]]],["Type","Int",[]],[]],"fe_representation":".hours :: Time -> Int"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","StdLibMisc",["Just",28],["Just",14],"day"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Date",[]]],["Type","Int",[]],[]],"fe_representation":".day :: Date -> Int"},["Tip"],["Tip"]]],["Bin",9,["Location","Platform","StdMaybe",["Just",6],["Just",5],"mapMaybe"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","x"]],["Var","y"],[]],["Type","Maybe",[["Var","x"]]]],["Type","Maybe",[["Var","y"]]],[]],"fe_representation":"mapMaybe :: .(.x -> .y) !(Maybe .x) -> Maybe .y"},["Bin",5,["Location","Platform","StdLibMisc",["Just",28],["Just",14],"year"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Date",[]]],["Type","Int",[]],[]],"fe_representation":".year :: Date -> Int"},["Bin",1,["Location","Platform","StdLibMisc",["Just",28],["Just",14],"month"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Date",[]]],["Type","Int",[]],[]],"fe_representation":".month :: Date -> Int"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","StdLibMisc",["Just",43],["Nothing"],"roundupToMultiple"],{"fe_kind":["Macro"],"fe_representation":"roundupToMultiple s m :== (s + (m - 1)) bitand (~ m)"},["Bin",1,["Location","Platform","StdLibMisc",["Just",38],["Just",38],"isFinite"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]]],["Type","Bool",[]],[]],"fe_representation":"isFinite :: !Real -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","StdLibMisc",["Just",48],["Just",45],"sseq"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Func",[["Var","s"]],["Var","s"],[]]]],["Var","s"]],["Var","s"],[]],"fe_representation":"sseq :: ![.(.s -> .s)] !.s -> .s"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","System.CommandLine",["Just",19],["Just",43],"setReturnCode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"setReturnCode :: !Int !*World -> *World","fe_documentation":["FunctionDoc",["Just","Sets the return code of the program"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System.CommandLine",["Just",14],["Just",6],"getCommandLine"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","_List",[["Type","String",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"getCommandLine :: !*World -> (![String],!*World)","fe_documentation":["FunctionDoc",["Just","Read the command line arguments from the world."],["The world"],[],["Just","The command line arguments"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.Directory",["Just",7],["Just",11],"createDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Unit",[]]]],["Uniq",["Var","w"]]]],[]],"fe_representation":"createDirectory :: !FilePath !*w -> (!MaybeOSError (),!*w)"},["Tip"],["Tip"]]]]]]],["Bin",19,["Location","Platform","System.File",["Just",10],["Nothing"],"IOError"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","FileError",[]],[]],"fe_representation":"IOError :: FileError"},["Bin",8,["Location","Platform","System.Directory",["Just",15],["Just",61],"setCurrentDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Unit",[]]]],["Uniq",["Var","w"]]]],[]],"fe_representation":"setCurrentDirectory :: !FilePath !*w -> (!MaybeOSError (),!*w)"},["Bin",2,["Location","Platform","System.Directory",["Just",11],["Just",27],"readDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_List",[["Type","FilePath",[]]]]]],["Uniq",["Var","w"]]]],[]],"fe_representation":"readDirectory :: !FilePath !*w -> (!MaybeOSError [FilePath],!*w)"},["Tip"],["Bin",1,["Location","Platform","System.Directory",["Just",13],["Just",52],"getCurrentDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","FilePath",[]]]],["Uniq",["Var","w"]]]],[]],"fe_representation":"getCurrentDirectory :: !*w -> (!MaybeOSError FilePath,!*w)"},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","System.File",["Just",10],["Nothing"],"CannotClose"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","FileError",[]],[]],"fe_representation":"CannotClose :: FileError"},["Bin",3,["Location","Platform","System.Environment",["Just",9],["Just",19],"setEnvironmentVariable"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"setEnvironmentVariable :: !String !String !*World -> *World"},["Bin",1,["Location","Platform","System.Environment",["Just",7],["Just",8],"getEnvironmentVariable"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Type","String",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"getEnvironmentVariable :: !String !*World -> (Maybe String,*World)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.Environment",["Just",11],["Just",29],"unsetEnvironmentVariable"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"unsetEnvironmentVariable :: !String !*World -> *World"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","System.File",["Just",10],["Nothing"],"CannotOpen"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","FileError",[]],[]],"fe_representation":"CannotOpen :: FileError"},["Tip"],["Tip"]]]],["Bin",10,["Location","Platform","System.File",["Just",66],["Just",77],"fileExists"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"fileExists :: !String !*World -> (!Bool,!*World)","fe_documentation":["FunctionDoc",["Just","Checks if a file exists"],["Path to the file"],[],["Just","file exists"]]},["Bin",6,["Location","Platform","System.File",["Just",34],["Just",31],"readAllLines"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Type","_List",[["Type","String",[]]]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"readAllLines :: !*File -> (!MaybeError FileError [String],!*File)","fe_documentation":["FunctionDoc",["Just","Read all contents of a *File by lines to a [String]."],["Path to the file to read"],[],["Just","contents of the file"]]},["Bin",2,["Location","Platform","System.File",["Just",26],["Just",28],"readFileLines"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Type","_List",[["Type","String",[]]]]]],["Uniq",["Var","env"]]]],[[["Class","FileSystem"],["Var","env"]]]],"fe_representation":"readFileLines :: !String !*env -> (!MaybeError FileError [String],!*env) | FileSystem env","fe_documentation":["FunctionDoc",["Just","Given a filename, reads the contents of the file by lines to a [String]"],["Path to the file to read"],[],["Just","contents of the file"]]},["Bin",1,["Location","Platform","System.File",["Just",19],["Just",25],"readFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Type","String",[]]]],["Uniq",["Var","env"]]]],[[["Class","FileSystem"],["Var","env"]]]],"fe_representation":"readFile :: !String !*env -> (!MaybeError FileError String,!*env) | FileSystem env","fe_documentation":["FunctionDoc",["Just","Given a filename, reads the contents of the file to a String"],["Path to the file to read"],[],["Just","contents of the file"]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","System.File",["Just",49],["Just",62],"writeFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Type","_Unit",[]]]],["Uniq",["Var","env"]]]],[[["Class","FileSystem"],["Var","env"]]]],"fe_representation":"writeFile :: !String !String !*env -> (!MaybeError FileError (),!*env) | FileSystem env","fe_documentation":["FunctionDoc",["Just","Writes a string to a file"],["Path to the file to read","contents of the file"],[],["Nothing"]]},["Bin",1,["Location","Platform","System.File",["Just",42],["Just",46],"readAll"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Type","String",[]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"readAll :: !*File -> (!MaybeError FileError String,!*File)","fe_documentation":["FunctionDoc",["Just","Read all contents of a *File to a String."],["Path to the file to read"],[],["Just","contents of the file"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.File",["Just",58],["Just",66],"withFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Int",[]],["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Var","a"]]],["Uniq",["Type","File",[]]]]],[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Var","a"]]],["Uniq",["Var","env"]]]],[[["Class","FileSystem"],["Var","env"]]]],"fe_representation":"withFile :: !String Int (*File -> (!MaybeError FileError a,!*File)) !*env -> (!MaybeError FileError a,!*env) | FileSystem env","fe_documentation":["FunctionDoc",["Just","Performs a file operation on a given filename.\nThe file is opened and closed by the withFile function."],["Path to the file","file operation function"],[],["Just","file operation result"]]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","System.File",["Just",75],["Nothing"],"creationTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FileInfo",[]]],["Type","Tm",[]],[]],"fe_representation":".creationTime :: FileInfo -> Tm"},["Bin",1,["Location","Platform","System.File",["Just",73],["Just",84],"deleteFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Unit",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"deleteFile :: !String !*World -> (!MaybeOSError (),!*World)","fe_documentation":["FunctionDoc",["Just","Deletes a file from disk"],["Path to the file"],[],["Just","delete succeeded"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.File",["Just",75],["Nothing"],"directory"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FileInfo",[]]],["Type","Bool",[]],[]],"fe_representation":".directory :: FileInfo -> Bool"},["Tip"],["Tip"]]]]]],["Bin",41,["Location","Platform","System.IO",["Just",8],["Just",10],"IO"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]]],["Type","IO",[["Var","a"]]],[]],"fe_representation":"IO :: (*World -> *(a, *World)) -> IO a"},["Bin",30,["Location","Platform","System.GetOpt",["Just",42],["Nothing"],"Permute"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArgOrder",[["Var","a"]]],[]],"fe_representation":"Permute :: ArgOrder a"},["Bin",20,["Location","Platform","System.FilePath",["Just",46],["Just",35],"addExtension"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","String",[]]],["Type","FilePath",[]],[]],"fe_representation":"addExtension :: !FilePath !String -> FilePath","fe_documentation":["FunctionDoc",["Just","Add an extension to a FilePath"],[],[],["Nothing"]]},["Bin",12,["Location","Platform","System.File",["Just",96],["Just",107],"moveFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Unit",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"moveFile :: !String !String !*World -> (!MaybeOSError (),!*World)","fe_documentation":["FunctionDoc",["Just","Moves or renames a file"],["Path to the current file","Path to the new file"],[],["Nothing"]]},["Bin",4,["Location","Platform","System.File",["Just",75],["Nothing"],"sizeLow"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FileInfo",[]]],["Type","Int",[]],[]],"fe_representation":".sizeLow :: FileInfo -> Int"},["Bin",2,["Location","Platform","System.File",["Just",75],["Nothing"],"lastModifiedTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FileInfo",[]]],["Type","Tm",[]],[]],"fe_representation":".lastModifiedTime :: FileInfo -> Tm"},["Tip"],["Bin",1,["Location","Platform","System.File",["Just",75],["Nothing"],"sizeHigh"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FileInfo",[]]],["Type","Int",[]],[]],"fe_representation":".sizeHigh :: FileInfo -> Int"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","System.File",["Just",89],["Just",90],"getFileInfo"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","FileInfo",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"getFileInfo :: !String !*World -> (!MaybeOSError FileInfo,!*World)","fe_documentation":["FunctionDoc",["Just","Retrieves file information"],["Path to the file"],[],["Just","FileInfo structure"]]},["Tip"],["Tip"]]],["Bin",7,["Location","Platform","System.FilePath",["Just",26],["Just",20],"<\/>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","FilePath",[]]],["Type","FilePath",[]],[]],"fe_priority":["RightAssoc",5],"fe_representation":"(<\/>) infixr 5 :: !FilePath !FilePath -> FilePath","fe_documentation":["FunctionDoc",["Just","Concatenates two paths"],[],[],["Nothing"]]},["Bin",3,["Location","Platform","System.FilePath",["Just",16],["Just",14],"pathSeparators"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","_List",[["Type","Char",[]]]],[]],"fe_representation":"pathSeparators :: [Char]","fe_documentation":["FunctionDoc",["Just","Returns a list of all allowed platform path separators"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System.FilePath",["Just",11],["Just",11],"pathSeparator"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Char",[]],[]],"fe_representation":"pathSeparator :: Char","fe_documentation":["FunctionDoc",["Just","Returns the default platform path separator"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.FilePath",["Just",21],["Just",17],"extSeparator"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Char",[]],[]],"fe_representation":"extSeparator :: Char","fe_documentation":["FunctionDoc",["Just","Returns the default file extension separator"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System.FilePath",["Just",36],["Just",29],"takeExtension"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","String",[]],[]],"fe_representation":"takeExtension :: !FilePath -> String","fe_documentation":["FunctionDoc",["Just","Take the extension of a FilePath, excluding the separator"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System.FilePath",["Just",31],["Just",23],"splitExtension"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]],[]],"fe_representation":"splitExtension :: !FilePath -> (String,String)","fe_documentation":["FunctionDoc",["Just","Split a FilePath into filename and extension. The result does not include the extension separator (.)."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.FilePath",["Just",41],["Just",32],"dropExtension"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","String",[]],[]],"fe_representation":"dropExtension :: !FilePath -> String","fe_documentation":["FunctionDoc",["Just","Remove the extension and extension separator of a FilePath"],[],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","System.FilePath",["Just",67],["Just",50],"splitFileName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]],[]],"fe_representation":"splitFileName :: !FilePath -> (String,String)","fe_documentation":["FunctionDoc",["Just","Split a filename into directory and file."],[],[],["Nothing"]]},["Bin",3,["Location","Platform","System.FilePath",["Just",57],["Just",56],"takeDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","FilePath",[]],[]],"fe_representation":"takeDirectory :: !FilePath -> FilePath","fe_documentation":["FunctionDoc",["Just","Take the directory part of a FilePath. If the FilePath is a directory,\nthe result is the parent directory."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System.FilePath",["Just",51],["Just",40],"replaceExtension"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","String",[]]],["Type","FilePath",[]],[]],"fe_representation":"replaceExtension :: !FilePath !String -> FilePath","fe_documentation":["FunctionDoc",["Just","Replace the extension of a FilePath"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.FilePath",["Just",62],["Just",59],"dropDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","String",[]],[]],"fe_representation":"dropDirectory :: !FilePath -> String","fe_documentation":["FunctionDoc",["Just","Drop the directory part of a FilePath. Keep only the filename."],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System.FilePath",["Just",77],["Just",69],"replaceFileName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","String",[]]],["Type","FilePath",[]],[]],"fe_representation":"replaceFileName :: !FilePath !String -> FilePath","fe_documentation":["FunctionDoc",["Just","Set the filename."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System.FilePath",["Just",72],["Just",66],"takeFileName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","FilePath",[]],[]],"fe_representation":"takeFileName :: !FilePath -> FilePath","fe_documentation":["FunctionDoc",["Just","Get the file name."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.FilePath",["Just",82],["Just",72],"dropFileName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","FilePath",[]],[]],"fe_representation":"dropFileName :: !FilePath -> FilePath","fe_documentation":["FunctionDoc",["Just","Drop the filename."],[],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",9,["Location","Platform","System.GetOpt",["Just",63],["Nothing"],"NoArg"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","ArgDescr",[["Var","a"]]],[]],"fe_representation":"NoArg :: a -> ArgDescr a"},["Bin",3,["Location","Platform","System.GetOpt",["Just",42],["Nothing"],"ReturnInOrder"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Type","String",[]]],["Var","a"],[]]],["Type","ArgOrder",[["Var","a"]]],[]],"fe_representation":"ReturnInOrder :: (String -> a) -> ArgOrder a"},["Bin",1,["Location","Platform","System.GetOpt",["Just",42],["Nothing"],"RequireOrder"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArgOrder",[["Var","a"]]],[]],"fe_representation":"RequireOrder :: ArgOrder a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.GetOpt",["Just",55],["Nothing"],"Option"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","Char",[]]]],["Type","_List",[["Type","String",[]]]],["Type","ArgDescr",[["Var","a"]]],["Type","String",[]]],["Type","OptDescr",[["Var","a"]]],[]],"fe_representation":"Option :: [Char] [String] (ArgDescr a) String -> OptDescr a"},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","System.GetOpt",["Just",63],["Nothing"],"ReqArg"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Type","String",[]]],["Var","a"],[]],["Type","String",[]]],["Type","ArgDescr",[["Var","a"]]],[]],"fe_representation":"ReqArg :: (String -> a) String -> ArgDescr a"},["Bin",1,["Location","Platform","System.GetOpt",["Just",63],["Nothing"],"OptArg"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Type","Maybe",[["Type","String",[]]]]],["Var","a"],[]],["Type","String",[]]],["Type","ArgDescr",[["Var","a"]]],[]],"fe_representation":"OptArg :: ((Maybe String) -> a) String -> ArgDescr a"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","System.GetOpt",["Just",89],["Just",39],"getOpt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ArgOrder",[["Var","a"]]],["Type","_List",[["Type","OptDescr",[["Var","a"]]]]],["Type","_List",[["Type","String",[]]]]],["Type","_Tuple3",[["Type","_List",[["Var","a"]]],["Type","_List",[["Type","String",[]]]],["Type","_List",[["Type","String",[]]]]]],[]],"fe_representation":"getOpt :: (ArgOrder a) [OptDescr a] [String] -> ([a],[String],[String])"},["Bin",1,["Location","Platform","System.GetOpt",["Just",71],["Just",13],"usageInfo"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","OptDescr",[["Var","a"]]]]]],["Type","String",[]],[]],"fe_representation":"usageInfo :: String [OptDescr a] -> String"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.GetOpt",["Just",99],["Just",43],"getOpt`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ArgOrder",[["Var","a"]]],["Type","_List",[["Type","OptDescr",[["Var","a"]]]]],["Type","_List",[["Type","String",[]]]]],["Type","_Tuple4",[["Type","_List",[["Var","a"]]],["Type","_List",[["Type","String",[]]]],["Type","_List",[["Type","String",[]]]],["Type","_List",[["Type","String",[]]]]]],[]],"fe_representation":"getOpt` :: (ArgOrder a) [OptDescr a] [String] -> ([a],[String],[String],[String])"},["Tip"],["Tip"]]]]]],["Bin",10,["Location","Platform","System.IO",["Just",22],["Just",53],"getChar"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","IO",[["Type","Char",[]]]],[]],"fe_representation":"getChar :: IO Char"},["Bin",6,["Location","Platform","System.IO",["Just",14],["Just",20],"withWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]]],["Type","IO",[["Var","a"]]],[]],"fe_representation":"withWorld :: (*World -> *(.a,!*World)) -> IO .a"},["Bin",2,["Location","Platform","System.IO",["Just",12],["Just",17],"evalIO"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IO",[["Var","a"]]],["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]],"fe_representation":"evalIO :: (IO a) *World -> *(a,*World)"},["Bin",1,["Location","Platform","System.IO",["Just",10],["Just",12],"execIO"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IO",[["Var","a"]]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"execIO :: (IO a) *World -> *World"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","System.IO",["Just",18],["Just",47],"putStrLn"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","IO",[["Type","_Unit",[]]]],[]],"fe_representation":"putStrLn :: String -> IO ()"},["Bin",1,["Location","Platform","System.IO",["Just",16],["Just",38],"putStr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","IO",[["Type","_Unit",[]]]],[]],"fe_representation":"putStr :: String -> IO ()"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.IO",["Just",20],["Just",50],"print"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","IO",[["Type","_Unit",[]]]],[[["Class","toString"],["Var","a"]]]],"fe_representation":"print :: a -> IO () | toString a"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","System.IO",["Just",26],["Just",71],"readFileM"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","IO",[["Type","String",[]]]],[]],"fe_representation":"readFileM :: !String -> IO String"},["Bin",1,["Location","Platform","System.IO",["Just",24],["Just",62],"getLine"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","IO",[["Type","String",[]]]],[]],"fe_representation":"getLine :: IO String"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.IO",["Just",28],["Just",80],"writeFileM"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]]],["Type","IO",[["Type","_Unit",[]]]],[]],"fe_representation":"writeFileM :: !String !String -> IO ()"},["Tip"],["Tip"]]]]]]]]]],["Bin",3080,["Location","Platform","Text.Show",["Just",158],["Just",266],"showLitString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","ShowS",[]],[]],"fe_representation":"showLitString :: String -> ShowS"},["Bin",858,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"RYAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"RYAttr :: String -> HtmlAttr"},["Bin",374,["Location","Platform","Text.CSV",["Just",40],["Just",71],"readCSVFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","_List",[["Type","_List",[["Type","String",[]]]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"readCSVFile :: !*File -> (![[String]],!*File)","fe_documentation":["FunctionDoc",["Just","Read an entire CSV file.\nA comma ',' is used as field separator, double quotes '\"' may be used to enclose fields\nand the escape character is backslash '\\'."],["The file handle to read from"],[],["Just","The list of records which are lists of strings"]]},["Bin",168,["Location","Platform","System._Posix",["Just",17],["Nothing"],"S_IFBLK"],{"fe_kind":["Macro"],"fe_representation":"S_IFBLK :== 24576"},["Bin",112,["Location","Platform","System.Time",["Just",19],["Nothing"],"yday"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Int",[]],[]],"fe_representation":".yday :: Tm -> Int"},["Bin",53,["Location","Platform","System.OSError",["Just",14],["Just",16],"getLastOSErrorCode"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","MaybeOSErrorCode",[["Var","a"]]],["Uniq",["Var","w"]]]],[]],"fe_representation":"getLastOSErrorCode :: *w -> (MaybeOSErrorCode .a,*w)"},["Bin",14,["Location","Platform","System.OS",["Just",10],["Nothing"],"IF_WINDOWS32"],{"fe_kind":["Macro"],"fe_representation":"IF_WINDOWS32 win other :== other"},["Bin",6,["Location","Platform","System.OS",["Just",4],["Nothing"],"OS_PATH_SEPARATOR"],{"fe_kind":["Macro"],"fe_representation":"OS_PATH_SEPARATOR :== '\/'"},["Bin",2,["Location","Platform","System.IO",["Just",35],["Just",94],"unsafePerformIOTrue"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]]],["Type","Bool",[]],[]],"fe_representation":"unsafePerformIOTrue :: (*World -> *(a,*World)) -> Bool"},["Tip"],["Bin",1,["Location","Platform","System.OS",["Just",3],["Nothing"],"OS_NAME"],{"fe_kind":["Macro"],"fe_representation":"OS_NAME :== \"Linux (64-bit)\""},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System.OS",["Just",7],["Nothing"],"IF_POSIX_OR_WINDOWS"],{"fe_kind":["Macro"],"fe_representation":"IF_POSIX_OR_WINDOWS posix windows :== posix"},["Bin",1,["Location","Platform","System.OS",["Just",5],["Nothing"],"OS_NEWLINE"],{"fe_kind":["Macro"],"fe_representation":"OS_NEWLINE :== \"\\n\""},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.OS",["Just",9],["Nothing"],"IF_WINDOWS"],{"fe_kind":["Macro"],"fe_representation":"IF_WINDOWS win other :== other"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","System.OS",["Just",14],["Nothing"],"IF_LINUX32"],{"fe_kind":["Macro"],"fe_representation":"IF_LINUX32 linux other :== other"},["Bin",3,["Location","Platform","System.OS",["Just",12],["Nothing"],"IF_POSIX"],{"fe_kind":["Macro"],"fe_representation":"IF_POSIX posix other :== posix"},["Bin",1,["Location","Platform","System.OS",["Just",11],["Nothing"],"IF_WINDOWS64"],{"fe_kind":["Macro"],"fe_representation":"IF_WINDOWS64 win other :== other"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.OS",["Just",13],["Nothing"],"IF_LINUX"],{"fe_kind":["Macro"],"fe_representation":"IF_LINUX linux other :== linux"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System.OS",["Just",16],["Nothing"],"IF_MAC"],{"fe_kind":["Macro"],"fe_representation":"IF_MAC mac other :== other"},["Bin",1,["Location","Platform","System.OS",["Just",15],["Nothing"],"IF_LINUX64"],{"fe_kind":["Macro"],"fe_representation":"IF_LINUX64 linux other :== linux"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.OSError",["Just",12],["Just",6],"getLastOSError"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Var","a"]]],["Uniq",["Var","w"]]]],[]],"fe_representation":"getLastOSError :: *w -> (MaybeOSError .a,*w)"},["Tip"],["Tip"]]]]],["Bin",38,["Location","Platform","System.Process",["Just",103],["Just",295],"terminateProcess"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ProcessHandle",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Unit",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"terminateProcess :: !ProcessHandle !*World -> (!MaybeOSError (),!*World)","fe_documentation":["FunctionDoc",["Just","terminates the process if it is still running and releases the process handle resources."],["the process handle."],[],["Just","()"]]},["Bin",18,["Location","Platform","System.Process",["Just",17],["Nothing"],"stdOut"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ProcessIO",[]]],["Type","ReadPipe",[]],[]],"fe_representation":".stdOut :: ProcessIO -> ReadPipe"},["Bin",8,["Location","Platform","System.Platform",["Just",5],["Nothing"],"Windows32"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Platform",[]],[]],"fe_representation":"Windows32 :: Platform"},["Bin",3,["Location","Platform","System.Platform",["Just",5],["Nothing"],"Linux64"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Platform",[]],[]],"fe_representation":"Linux64 :: Platform"},["Bin",1,["Location","Platform","System.Platform",["Just",5],["Nothing"],"Linux32"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Platform",[]],[]],"fe_representation":"Linux32 :: Platform"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.Platform",["Just",5],["Nothing"],"Mac"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Platform",[]],[]],"fe_representation":"Mac :: Platform"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","System.Process",["Just",17],["Nothing"],"stdErr"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ProcessIO",[]]],["Type","ReadPipe",[]],[]],"fe_representation":".stdErr :: ProcessIO -> ReadPipe"},["Bin",2,["Location","Platform","System.Platform",["Just",5],["Nothing"],"Windows64"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Platform",[]],[]],"fe_representation":"Windows64 :: Platform"},["Tip"],["Bin",1,["Location","Platform","System.Process",["Just",14],["Nothing"],"pid"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ProcessHandle",[]]],["Type","Int",[]],[]],"fe_representation":".pid :: ProcessHandle -> Int"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","System.Process",["Just",17],["Nothing"],"stdIn"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ProcessIO",[]]],["Type","WritePipe",[]],[]],"fe_representation":".stdIn :: ProcessIO -> WritePipe"},["Tip"],["Tip"]]]],["Bin",9,["Location","Platform","System.Process",["Just",72],["Just",216],"readPipeNonBlocking"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ReadPipe",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","String",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"readPipeNonBlocking :: !ReadPipe !*World -> (!MaybeOSError String,!*World)","fe_documentation":["FunctionDoc",["Just","read the currently available string from the pipe\nwithout blocking if no data is available"],["the pipe to read from"],[],["Just","the data read from the pipe"]]},["Bin",5,["Location","Platform","System.Process",["Just",55],["Just",198],"waitForProcess"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ProcessHandle",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","Int",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"waitForProcess :: !ProcessHandle !*World -> (!MaybeOSError Int,!*World)","fe_documentation":["FunctionDoc",["Just","Wait for a process to terminate, closes the handle and returns the exit code"],["Process handle to the process"],[],["Just","Exit code of the process"]]},["Bin",3,["Location","Platform","System.Process",["Just",41],["Just",54],"runProcessIO"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","_List",[["Type","String",[]]]],["Type","Maybe",[["Type","String",[]]]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Tuple2",[["Type","ProcessHandle",[]],["Type","ProcessIO",[]]]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"runProcessIO :: !FilePath ![String] !(Maybe String) !*World -> (MaybeOSError (ProcessHandle,ProcessIO),*World)","fe_documentation":["FunctionDoc",["Just","runs a new process and opens pipes for IO"],["Path to the executable","a list of command-line arguments","(optional) startup directory"],[],["Just","Process handle to the process and pipes for IO"]]},["Bin",1,["Location","Platform","System.Process",["Just",32],["Just",27],"runProcess"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","_List",[["Type","String",[]]]],["Type","Maybe",[["Type","String",[]]]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","ProcessHandle",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"runProcess :: !FilePath ![String] !(Maybe String) !*World -> (MaybeOSError ProcessHandle,*World)","fe_documentation":["FunctionDoc",["Just","runs a new process"],["Path to the executable","a list of command-line arguments","(optional) startup directory"],[],["Just","Process handle to the process"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.Process",["Just",48],["Just",186],"checkProcess"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ProcessHandle",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","Maybe",[["Type","Int",[]]]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"checkProcess :: !ProcessHandle !*World -> (MaybeOSError (Maybe Int),*World)","fe_documentation":["FunctionDoc",["Just","Check if a process is still running"],["Process handle to the process"],[],["Just","Return code if the process has finished, Nothing if the process is still running"]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","System.Process",["Just",64],["Just",209],"callProcess"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","_List",[["Type","String",[]]]],["Type","Maybe",[["Type","String",[]]]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","Int",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"callProcess :: !FilePath ![String] !(Maybe String) !*World -> (MaybeOSError Int,*World)","fe_documentation":["FunctionDoc",["Just","runs a new process and wait for it to terminate"],["Path to the executable","a list of command-line arguments","(optional) startup directory"],[],["Just","Exit code of the process"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System.Process",["Just",88],["Just",258],"readPipeBlockingMulti"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","ReadPipe",[]]]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_List",[["Type","String",[]]]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"readPipeBlockingMulti :: ![ReadPipe] !*World -> (!MaybeOSError [String],!*World)","fe_documentation":["FunctionDoc",["Just","read the currently available string from a number of pipes\nand blocks until some data is available for at least one pipe"],["the pipes to read from"],[],["Just","the data read from the pipes (at least one character for at least one pipe)"]]},["Bin",1,["Location","Platform","System.Process",["Just",80],["Just",239],"readPipeBlocking"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ReadPipe",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","String",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"readPipeBlocking :: !ReadPipe !*World -> (!MaybeOSError String,!*World)","fe_documentation":["FunctionDoc",["Just","read the currently available string from the pipe\nand blocks until some data is available"],["the pipe to read from"],[],["Just","the data read from the pipe (at least one character)"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.Process",["Just",96],["Just",289],"writePipe"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","WritePipe",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Unit",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"writePipe :: !String !WritePipe !*World -> (!MaybeOSError (),!*World)","fe_documentation":["FunctionDoc",["Just","writes data to a pipe. may block if buffer is full"],["the data to write","the pipes to write to"],[],["Just","()"]]},["Tip"],["Tip"]]]]],["Bin",19,["Location","Platform","System.Time",["Just",19],["Nothing"],"isdst"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Int",[]],[]],"fe_representation":".isdst :: Tm -> Int"},["Bin",13,["Location","Platform","System.TTS",["Just",5],["Nothing"],"Female3"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Voice",[]],[]],"fe_representation":"Female3 :: Voice"},["Bin",5,["Location","Platform","System.TTS",["Just",5],["Nothing"],"ChildMale"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Voice",[]],[]],"fe_representation":"ChildMale :: Voice"},["Bin",2,["Location","Platform","System.TTS",["Just",5],["Nothing"],"ChildFemale"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Voice",[]],[]],"fe_representation":"ChildFemale :: Voice"},["Bin",1,["Location","Platform","System.Process",["Just",110],["Just",305],"closeProcessIO"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ProcessIO",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Unit",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"closeProcessIO :: !ProcessIO !*World -> (!MaybeOSError (),!*World)","fe_documentation":["FunctionDoc",["Just","closes the IO channels of the process."],["the io channels"],[],["Just","()"]]},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","Platform","System.TTS",["Just",5],["Nothing"],"Female2"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Voice",[]],[]],"fe_representation":"Female2 :: Voice"},["Bin",1,["Location","Platform","System.TTS",["Just",5],["Nothing"],"Female1"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Voice",[]],[]],"fe_representation":"Female1 :: Voice"},["Tip"],["Tip"]],["Tip"]]],["Bin",7,["Location","Platform","System.TTS",["Just",5],["Nothing"],"Male3"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Voice",[]],[]],"fe_representation":"Male3 :: Voice"},["Bin",2,["Location","Platform","System.TTS",["Just",5],["Nothing"],"Male2"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Voice",[]],[]],"fe_representation":"Male2 :: Voice"},["Bin",1,["Location","Platform","System.TTS",["Just",5],["Nothing"],"Male1"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Voice",[]],[]],"fe_representation":"Male1 :: Voice"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","Platform","System.Time",["Just",13],["Nothing"],"CLK_PER_SEC"],{"fe_kind":["Macro"],"fe_representation":"CLK_PER_SEC :== 1000000","fe_documentation":["FunctionDoc",["Just","The resolution of the system clock ticks"],[],[],["Nothing"]]},["Bin",2,["Location","Platform","System.TTS",["Just",19],["Just",10],"ttsWithVoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Voice",[]],["Type","String",[]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"ttsWithVoice :: Voice String *World -> *World"},["Bin",1,["Location","Platform","System.TTS",["Just",17],["Just",7],"tts"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"tts :: String *World -> *World"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","System.Time",["Just",19],["Nothing"],"hour"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Int",[]],[]],"fe_representation":".hour :: Tm -> Int"},["Tip"],["Tip"]]]]],["Bin",5,["Location","Platform","System.Time",["Just",19],["Nothing"],"mon"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Int",[]],[]],"fe_representation":".mon :: Tm -> Int"},["Bin",2,["Location","Platform","System.Time",["Just",19],["Nothing"],"mday"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Int",[]],[]],"fe_representation":".mday :: Tm -> Int"},["Tip"],["Bin",1,["Location","Platform","System.Time",["Just",19],["Nothing"],"min"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Int",[]],[]],"fe_representation":".min :: Tm -> Int"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","System.Time",["Just",19],["Nothing"],"wday"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Int",[]],[]],"fe_representation":".wday :: Tm -> Int"},["Bin",1,["Location","Platform","System.Time",["Just",19],["Nothing"],"sec"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Int",[]],[]],"fe_representation":".sec :: Tm -> Int"},["Tip"],["Tip"]],["Tip"]]]]]],["Bin",58,["Location","Platform","System._Pointer",["Just",102],["Just",521],"derefCharArray"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Int",[]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":"derefCharArray :: !Pointer !Int -> {#Char}","fe_documentation":["FunctionDoc",["Just","Reads the array with given length indicated by the pointer."],[],[],["Nothing"]]},["Bin",36,["Location","Platform","System.Time",["Just",77],["Just",107],"toLocalTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Timestamp",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","Tm",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"toLocalTime :: !Timestamp !*World -> (!Tm,!*World)","fe_documentation":["FunctionDoc",["Just","Convert a timestamp to a Tm record (local time)"],[],[],["Nothing"]]},["Bin",10,["Location","Platform","System.Time",["Just",61],["Just",72],"localTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","Tm",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"localTime :: !*World -> (!Tm,!*World)","fe_documentation":["FunctionDoc",["Just","Get the current time in the local timezone"],[],[],["Nothing"]]},["Bin",6,["Location","Platform","System.Time",["Just",37],["Nothing"],"Clock"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","Clock",[]],[]],"fe_representation":"Clock :: Int -> Clock"},["Bin",2,["Location","Platform","System.Time",["Just",33],["Nothing"],"Timestamp"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","Timestamp",[]],[]],"fe_representation":"Timestamp :: Int -> Timestamp"},["Bin",1,["Location","Platform","System.Time",["Just",19],["Nothing"],"year"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Int",[]],[]],"fe_representation":".year :: Tm -> Int"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","System.Time",["Just",53],["Just",51],"time"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","Timestamp",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"time :: !*World -> (!Timestamp,!*World)","fe_documentation":["FunctionDoc",["Just","Get the number of seconds since the epoch"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System.Time",["Just",49],["Just",41],"clock"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","Clock",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"clock :: !*World -> (!Clock,!*World)","fe_documentation":["FunctionDoc",["Just","Get the number of clock ticks since the process start"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.Time",["Just",57],["Just",61],"gmTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","Tm",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"gmTime :: !*World -> (!Tm,!*World)","fe_documentation":["FunctionDoc",["Just","Get the current time as GMT"],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","System.Time",["Just",69],["Just",93],"diffTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Timestamp",[]],["Type","Timestamp",[]]],["Type","Int",[]],[]],"fe_representation":"diffTime :: !Timestamp !Timestamp -> Int","fe_documentation":["FunctionDoc",["Just","Calculate the difference in seconds between two times"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System.Time",["Just",65],["Just",83],"mkTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Tm",[]]],["Type","Timestamp",[]],[]],"fe_representation":"mkTime :: !Tm -> Timestamp","fe_documentation":["FunctionDoc",["Just","Convert a Tm record (local time) to a Timestamp value"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.Time",["Just",73],["Just",96],"strfTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Tm",[]]],["Type","String",[]],[]],"fe_representation":"strfTime :: !String !Tm -> String","fe_documentation":["FunctionDoc",["Just","Format the time structure using the format defined by C's time.h"],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",25,["Location","Platform","System._Pointer",["Just",66],["Just",344],"writeInt4"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]],["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"writeInt4 :: !Pointer !Offset !Int -> Pointer","fe_documentation":["FunctionDoc",["Just","Write an integer (32 bits)"],[],[],["Nothing"]]},["Bin",17,["Location","Platform","System._Pointer",["Just",36],["Just",158],"readInt2S"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"readInt2S :: !Pointer !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Read a word (16 bits) sign extended"],[],[],["Nothing"]]},["Bin",9,["Location","Platform","System._Pointer",["Just",20],["Just",83],"readIntElemOffsetP"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Pointer",[]]]],[]],"fe_representation":"readIntElemOffsetP :: !Pointer !Offset -> (!Int,!Pointer)"},["Bin",5,["Location","Platform","System._Pointer",["Just",18],["Just",27],"readIntP"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Pointer",[]]]],[]],"fe_representation":"readIntP :: !Pointer !Offset -> (!Int,!Pointer)"},["Bin",3,["Location","Platform","System._Platform",["Just",5],["Nothing"],"CURRENT_PLATFORM"],{"fe_kind":["Macro"],"fe_representation":"CURRENT_PLATFORM :== Linux64"},["Bin",1,["Location","Platform","System.Time",["Just",81],["Just",112],"toGmTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Timestamp",[]]],["Type","Tm",[]],[]],"fe_representation":"toGmTime :: !Timestamp -> Tm","fe_documentation":["FunctionDoc",["Just","Convert a timestamp to a Tm record (GMT time)"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",17],["Just",5],"readInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"readInt :: !Pointer !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Read an integer (32 or 64 bits)"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","System._Pointer",["Just",19],["Just",61],"readIntElemOffset"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"readIntElemOffset :: !Pointer !Offset -> Int"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System._Pointer",["Just",28],["Just",126],"readInt4S"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"readInt4S :: !Pointer !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Read an integer (32 bits) sign extended"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System._Pointer",["Just",24],["Just",117],"readInt4Z"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"readInt4Z :: !Pointer !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Read an integer (32 bits) zero extended"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",32],["Just",148],"readInt2Z"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"readInt2Z :: !Pointer !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Read a word (16 bits) zero extended"],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","System._Pointer",["Just",52],["Just",226],"readReal8"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Real",[]],[]],"fe_representation":"readReal8 :: !Pointer !Offset -> Real","fe_documentation":["FunctionDoc",["Just","Read a real (8 bytes)"],[],[],["Nothing"]]},["Bin",3,["Location","Platform","System._Pointer",["Just",44],["Just",192],"readInt1S"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"readInt1S :: !Pointer !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Read a byte (8 bits) sign extended"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System._Pointer",["Just",40],["Just",182],"readInt1Z"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"readInt1Z :: !Pointer !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Read a byte (8 bits) zero extended"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",48],["Just",216],"readChar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Char",[]],[]],"fe_representation":"readChar :: !Pointer !Offset -> Char","fe_documentation":["FunctionDoc",["Just","Read a char"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System._Pointer",["Just",61],["Just",292],"writeInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]],["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"writeInt :: !Pointer !Offset !Int -> Pointer","fe_documentation":["FunctionDoc",["Just","Write an integer (32 or 64 bits)"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System._Pointer",["Just",56],["Just",259],"readReal4"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]]],["Type","Real",[]],[]],"fe_representation":"readReal4 :: !Pointer !Offset -> Real","fe_documentation":["FunctionDoc",["Just","Read a real (4 bytes)"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",62],["Just",318],"writeIntElemOffset"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]],["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"writeIntElemOffset :: !Pointer !Offset !Int -> Pointer"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","System._Pointer",["Just",82],["Just",450],"writeReal8"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]],["Type","Real",[]]],["Type","Pointer",[]],[]],"fe_representation":"writeReal8 :: !Pointer !Offset !Real -> Pointer","fe_documentation":["FunctionDoc",["Just","Write a real (8 bytes)"],[],[],["Nothing"]]},["Bin",3,["Location","Platform","System._Pointer",["Just",74],["Just",398],"writeInt1"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]],["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"writeInt1 :: !Pointer !Offset !Int -> Pointer","fe_documentation":["FunctionDoc",["Just","Write a word (8 bits)"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System._Pointer",["Just",70],["Just",370],"writeInt2"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]],["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"writeInt2 :: !Pointer !Offset !Int -> Pointer","fe_documentation":["FunctionDoc",["Just","Write a word (16 bits)"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",78],["Just",424],"writeChar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]],["Type","Char",[]]],["Type","Pointer",[]],[]],"fe_representation":"writeChar :: !Pointer !Offset !Char -> Pointer","fe_documentation":["FunctionDoc",["Just","Write a char"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System._Pointer",["Just",93],["Just",501],"derefInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"derefInt :: !Pointer -> Int","fe_documentation":["FunctionDoc",["Just","Reads the integer located at the pointer"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System._Pointer",["Just",86],["Just",473],"writeReal4"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","Offset",[]],["Type","Real",[]]],["Type","Pointer",[]],[]],"fe_representation":"writeReal4 :: !Pointer !Offset !Real -> Pointer","fe_documentation":["FunctionDoc",["Just","Write a real (4 bytes)"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",98],["Just",506],"derefString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","String",[]],[]],"fe_representation":"derefString :: !Pointer -> String","fe_documentation":["FunctionDoc",["Just","Reads the NULL-terminated C-string indicated by the pointer and\nconverts it to a normal (not NULL-terminated) Clean-string"],[],[],["Nothing"]]},["Tip"],["Tip"]]]]]],["Bin",21,["Location","Platform","System._Pointer",["Just",136],["Just",574],"unpackInt4S"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"unpackInt4S :: !{#Char} !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Unpacks a 32-bit integer from a byte array (sign extended on 64-bit)"],[],[],["Nothing"]]},["Bin",7,["Location","Platform","System._Pointer",["Just",120],["Just",552],"unpackString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]]],["Type","String",[]],[]],"fe_representation":"unpackString :: !{#Char} -> String","fe_documentation":["FunctionDoc",["Just","Unpacks a NULL-terminated C-string into a Clean-string."],[],[],["Nothing"]]},["Bin",3,["Location","Platform","System._Pointer",["Just",111],["Just",546],"packInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","_#Array",[["Type","Int",[]]]],[]],"fe_representation":"packInt :: !Int -> {#Int}","fe_documentation":["FunctionDoc",["Just","Wraps an integer in an array to enable passing a pointer instead\nof a value to a ccall."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System._Pointer",["Just",106],["Just",535],"writeCharArray"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","_#Array",[["Type","Char",[]]]]],["Type","Pointer",[]],[]],"fe_representation":"writeCharArray :: !Pointer !{#Char} -> Pointer","fe_documentation":["FunctionDoc",["Just","Writes Clean char array to given pointer."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",116],["Just",549],"packString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":"packString :: !String -> {#Char}","fe_documentation":["FunctionDoc",["Just","Wraps a Clean-string as a NULL-terminated C-string to enable passing\na pointer to a ccall using the C conventions."],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System._Pointer",["Just",128],["Just",564],"unpackInt2S"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"unpackInt2S :: !{#Char} !Offset -> Int"},["Bin",1,["Location","Platform","System._Pointer",["Just",124],["Just",559],"unpackInt2Z"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"unpackInt2Z :: !{#Char} !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Unpacks a 16-bit integer from a byte array (zero extended on 32-bit and 64-bit)"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",132],["Just",567],"unpackInt4Z"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"unpackInt4Z :: !{#Char} !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Unpacks a 32-bit integer from a byte array (zero extended on 64-bit)"],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",13,["Location","Platform","System._Posix",["Just",9],["Nothing"],"MAXPATHLEN"],{"fe_kind":["Macro"],"fe_representation":"MAXPATHLEN :== 1024"},["Bin",7,["Location","Platform","System._Pointer",["Just",147],["Just",594],"forceEvalPointer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"forceEvalPointer :: !Pointer !*env -> *env"},["Bin",3,["Location","Platform","System._Pointer",["Just",144],["Just",588],"unpackBool"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Offset",[]]],["Type","Bool",[]],[]],"fe_representation":"unpackBool :: !{#Char} !Offset -> Bool","fe_documentation":["FunctionDoc",["Just","Unpacks a boolean from a byte array"],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System._Pointer",["Just",140],["Just",577],"unpackInt8"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Offset",[]]],["Type","Int",[]],[]],"fe_representation":"unpackInt8 :: !{#Char} !Offset -> Int","fe_documentation":["FunctionDoc",["Just","Unpacks a 64-bit integer from a byte array"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",146],["Just",591],"forceEval"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"forceEval :: !a !*env -> *env"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System._Posix",["Just",7],["Nothing"],"WNOHANG"],{"fe_kind":["Macro"],"fe_representation":"WNOHANG :== 1"},["Bin",1,["Location","Platform","System._Pointer",["Just",149],["Just",597],"readP"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Pointer",[]]],["Var","a"],[]],["Type","Pointer",[]]],["Type","_Tuple2",[["Var","a"],["Type","Pointer",[]]]],[]],"fe_representation":"readP :: !(Pointer -> a) !Pointer -> (!a,!Pointer)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Posix",["Just",8],["Nothing"],"WUNTRACED"],{"fe_kind":["Macro"],"fe_representation":"WUNTRACED :== 2"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","System._Posix",["Just",14],["Nothing"],"S_IFIFO"],{"fe_kind":["Macro"],"fe_representation":"S_IFIFO :== 4096"},["Bin",2,["Location","Platform","System._Posix",["Just",11],["Nothing"],"DIRENT_D_NAME_OFFSET"],{"fe_kind":["Macro"],"fe_representation":"DIRENT_D_NAME_OFFSET :== IF_INT_64_OR_32 19 11"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",13],["Nothing"],"S_IFMT"],{"fe_kind":["Macro"],"fe_representation":"S_IFMT :== 61440"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","System._Posix",["Just",15],["Nothing"],"S_IFCHR"],{"fe_kind":["Macro"],"fe_representation":"S_IFCHR :== 8192"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",16],["Nothing"],"S_IFDIR"],{"fe_kind":["Macro"],"fe_representation":"S_IFDIR :== 16384"},["Tip"],["Tip"]]]]]]]],["Bin",55,["Location","Platform","System._Posix",["Just",48],["Just",90],"close"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"close :: !Int !*w -> (!Int,!*w)"},["Bin",26,["Location","Platform","System._Posix",["Just",36],["Just",39],"waitpid"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_#Array",[["Type","Int",[]]]],["Type","Int",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"waitpid :: !Int !{#Int} !Int !*w -> (!Int,!*w)"},["Bin",14,["Location","Platform","System._Posix",["Just",24],["Nothing"],"STDOUT_FILENO"],{"fe_kind":["Macro"],"fe_representation":"STDOUT_FILENO :== 1"},["Bin",5,["Location","Platform","System._Posix",["Just",20],["Nothing"],"S_IFSOCK"],{"fe_kind":["Macro"],"fe_representation":"S_IFSOCK :== 49152"},["Bin",2,["Location","Platform","System._Posix",["Just",18],["Nothing"],"S_IFREG"],{"fe_kind":["Macro"],"fe_representation":"S_IFREG :== 32768"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",19],["Nothing"],"S_IFLNK"],{"fe_kind":["Macro"],"fe_representation":"S_IFLNK :== 40960"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","System._Posix",["Just",21],["Nothing"],"S_IFWHT"],{"fe_kind":["Macro"],"fe_representation":"S_IFWHT :== 57344"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",23],["Nothing"],"STDIN_FILENO"],{"fe_kind":["Macro"],"fe_representation":"STDIN_FILENO :== 0"},["Tip"],["Tip"]]]],["Bin",8,["Location","Platform","System._Posix",["Just",33],["Just",27],"unlink"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"unlink :: !{#Char} !*w -> (!Int,!*w)"},["Bin",5,["Location","Platform","System._Posix",["Just",27],["Nothing"],"FIONREAD"],{"fe_kind":["Macro"],"fe_representation":"FIONREAD :== 21531"},["Bin",1,["Location","Platform","System._Posix",["Just",25],["Nothing"],"STDERR_FILENO"],{"fe_kind":["Macro"],"fe_representation":"STDERR_FILENO :== 2"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","System._Posix",["Just",31],["Just",17],"strerr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"strerr :: !Int -> Pointer"},["Bin",1,["Location","Platform","System._Posix",["Just",30],["Just",6],"errno"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"errno :: !*w -> (!Int,!*w)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Posix",["Just",32],["Just",22],"stat"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","_#Array",[["Type","Char",[]]]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"stat :: !{#Char} !{#Char} !*w -> (!Int,!*w)"},["Tip"],["Tip"]]]],["Bin",2,["Location","Platform","System._Posix",["Just",34],["Just",31],"fork"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"fork :: !*w -> (!Int,!*w)"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",35],["Just",35],"execvp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","_#Array",[["Type","Pointer",[]]]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"execvp :: !{#Char} !{#Pointer} !*w -> (!Int,!*w)"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","System._Posix",["Just",42],["Just",63],"rename"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","_#Array",[["Type","Char",[]]]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"rename :: !{#Char} !{#Char} !*w -> (!Int,!*w)"},["Bin",5,["Location","Platform","System._Posix",["Just",39],["Just",51],"chdir"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"chdir :: !{#Char} !*w -> (!Int,!*w)"},["Bin",2,["Location","Platform","System._Posix",["Just",37],["Just",43],"exit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Var","a"],["Uniq",["Var","w"]]]],[]],"fe_representation":"exit :: !Int !*w -> (!.a,!*w)"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",38],["Just",47],"getcwd"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Pointer",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"getcwd :: !{#Char} !Int !*w -> (!Pointer,!*w)"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","System._Posix",["Just",40],["Just",55],"mkdir"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"mkdir :: !{#Char} !Int !*w -> (!Int,!*w)"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",41],["Just",59],"rmdir"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"rmdir :: !{#Char} !*w -> (!Int,!*w)"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","System._Posix",["Just",45],["Just",75],"readdir"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Pointer",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"readdir :: !Pointer !*w -> (!Pointer,!*w)"},["Bin",2,["Location","Platform","System._Posix",["Just",43],["Just",67],"opendir"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Pointer",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"opendir :: !{#Char} !*w -> (!Pointer,!*w)"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",44],["Just",71],"closedir"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"closedir :: !Pointer !*w -> (!Int,!*w)"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","System._Posix",["Just",46],["Just",80],"pipe"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"pipe :: !Pointer !*w -> (!Int,!*w)"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",47],["Just",85],"dup2"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"dup2 :: !Int !Int !*w -> (!Int,!*w)"},["Tip"],["Tip"]]]]]],["Bin",28,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_ctimespec"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_ctimespec :: Stat -> Int"},["Bin",11,["Location","Platform","System._Posix",["Just",56],["Just",120],"malloc"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"malloc :: !Int -> Pointer"},["Bin",5,["Location","Platform","System._Posix",["Just",51],["Just",105],"write"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"write :: !Int !{#Char} !Int !*w -> (!Int,!*w)"},["Bin",2,["Location","Platform","System._Posix",["Just",49],["Just",95],"ioctl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Type","Pointer",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"ioctl :: !Int !Int !Pointer !*w -> (!Int,!*w)"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",50],["Just",100],"read"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Pointer",[]],["Type","Int",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"read :: !Int !Pointer !Int !*w -> (!Int,!*w)"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","System._Posix",["Just",52],["Just",110],"select_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Pointer",[]],["Type","Pointer",[]],["Type","Pointer",[]],["Type","Pointer",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"select_ :: !Int !Pointer !Pointer !Pointer !Pointer !*w -> (!Int,!*w)"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",53],["Just",115],"kill"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Uniq",["Var","w"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","w"]]]],[]],"fe_representation":"kill :: !Int !Int !*w -> (!Int,!*w)"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_atimespec"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_atimespec :: Stat -> Int"},["Bin",2,["Location","Platform","System._Posix",["Just",57],["Just",124],"free"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]]],["Type","Int",[]],[]],"fe_representation":"free :: !Pointer -> Int"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",58],["Just",128],"memcpy_string_to_pointer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Pointer",[]],["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]]],["Type","Pointer",[]],[]],"fe_representation":"memcpy_string_to_pointer :: !Pointer !{#Char} !Int -> Pointer"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_blksize"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_blksize :: Stat -> Int"},["Tip"],["Bin",1,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_blocks"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_blocks :: Stat -> Int"},["Tip"],["Tip"]]]]],["Bin",16,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_rdev"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_rdev :: Stat -> Int"},["Bin",6,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_ino"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_ino :: Stat -> Int"},["Bin",2,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_gid"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_gid :: Stat -> Int"},["Bin",1,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_dev"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_dev :: Stat -> Int"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_mtimespec"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_mtimespec :: Stat -> Int"},["Bin",1,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_mode"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_mode :: Stat -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_nlink"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_nlink :: Stat -> Int"},["Tip"],["Tip"]]]],["Bin",9,["Location","Platform","Text",["Just",152],["Just",166],"<+"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","b"]],["Type","String",[]],[[["Class","toString"],["Var","a"]],[["Class","toString"],["Var","b"]]]],"fe_priority":["RightAssoc",5],"fe_representation":"(<+) infixr 5 :: a b -> String | toString a & toString b"},["Bin",6,["Location","Platform","System._Posix",["Just",78],["Just",151],"sizeOfStat"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Int",[]],[]],"fe_representation":"sizeOfStat :: Int"},["Bin",3,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_uid"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_uid :: Stat -> Int"},["Bin",1,["Location","Platform","System._Posix",["Just",61],["Nothing"],"st_size"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Stat",[]]],["Type","Int",[]],[]],"fe_representation":".st_size :: Stat -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Posix",["Just",77],["Just",134],"unpackStat"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]]],["Type","Stat",[]],[]],"fe_representation":"unpackStat :: !{#Char} -> Stat"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","System._Unsafe",["Just",20],["Just",7],"accUnsafe"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]]]],["Var","a"],[]],"fe_representation":"accUnsafe :: !*(*World -> *(.a,!*World)) -> .a","fe_documentation":["FunctionDoc",["Just","Execute a function with side effect and use its result as a pure expression."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","System._Unsafe",["Just",15],["Just",3],"appUnsafe"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],["Var","a"]],["Var","a"],[]],"fe_representation":"appUnsafe :: !(*World -> *World) !.a -> .a","fe_documentation":["FunctionDoc",["Just","Execute a *World->*World function as side effect of evaluating a pure expression."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Text.CSV",["Just",28],["Just",12],"readCSVRecordWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Type","Char",[]],["Type","Char",[]],["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Type","_List",[["Type","String",[]]]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"readCSVRecordWith :: !Char !Char !Char !*File -> (!Maybe [String],!*File)","fe_documentation":["FunctionDoc",["Just","Read a single record from a CSV file with custom separator characters."],["The field separator character","The field enclosure character","The escape character","The file handle to read from"],[],["Just","The record as a list of strings, or Nothing if there are no more records in the file."]]},["Bin",1,["Location","Platform","Text.CSV",["Just",16],["Just",9],"readCSVRecord"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Type","_List",[["Type","String",[]]]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"readCSVRecord :: !*File -> (!Maybe [String],!*File)","fe_documentation":["FunctionDoc",["Just","Read a single record from a CSV file\nA comma ',' is used as field separator, double quotes '\"' may be used to enclose fields\nand the escape character is backslash '\\'."],["The file handle to read from"],[],["Just","The record as a list of strings, or Nothing if there are no more records in the file."]]},["Tip"],["Tip"]],["Tip"]]]]]]],["Bin",205,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"SummaryTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"SummaryTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",99,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"CiteTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"CiteTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",37,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"BTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"BTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",24,["Location","Platform","Text.Encodings.Base64",["Just",32],["Just",24],"base64URLEncodeLen"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Length",[]]],["Type","String",[]],[]],"fe_representation":"base64URLEncodeLen :: !.String !Length -> .String","fe_documentation":["FunctionDoc",["Just","Converts a String to an URL-safe Base64-encoded String given a maximum line length."],[],[],["Nothing"]]},["Bin",8,["Location","Platform","Text.CSV",["Just",100],["Just",102],"writeCSVFileWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Type","Char",[]],["Type","Char",[]],["Type","_List",[["Type","_List",[["Type","String",[]]]]]],["Uniq",["Type","File",[]]]],["Uniq",["Type","File",[]]],[]],"fe_representation":"writeCSVFileWith :: !Char !Char !Char ![[String]] !*File -> *File","fe_documentation":["FunctionDoc",["Just","Write an entire CSV file with custom separator characters."],["The field separator character","The field enclosure character","The escape character","The list of records which are lists of strings","The file handle to write to"],[],["Just","The file handle"]]},["Bin",4,["Location","Platform","Text.CSV",["Just",76],["Just",87],"writeCSVRecordWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Type","Char",[]],["Type","Char",[]],["Type","_List",[["Type","String",[]]]],["Uniq",["Type","File",[]]]],["Uniq",["Type","File",[]]],[]],"fe_representation":"writeCSVRecordWith :: !Char !Char !Char ![String] !*File -> *File","fe_documentation":["FunctionDoc",["Just","Write a single record to a CSV file with custom separator characters."],["The field separator character","The field enclosure character","The escape character","The record as a list of strings","The file handle to write to"],[],["Just","The file handle"]]},["Bin",2,["Location","Platform","Text.CSV",["Just",52],["Just",74],"readCSVFileWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Type","Char",[]],["Type","Char",[]],["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","_List",[["Type","_List",[["Type","String",[]]]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"readCSVFileWith :: !Char !Char !Char !*File -> (![[String]],!*File)","fe_documentation":["FunctionDoc",["Just","Read an entire CSV file with custom separator characters."],["The field separator character","The field enclosure character","The escape character","The file handle to read from"],[],["Just","The list of records which are lists of strings"]]},["Tip"],["Bin",1,["Location","Platform","Text.CSV",["Just",64],["Just",84],"writeCSVRecord"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]],["Uniq",["Type","File",[]]]],["Uniq",["Type","File",[]]],[]],"fe_representation":"writeCSVRecord :: ![String] !*File -> *File","fe_documentation":["FunctionDoc",["Just","Write a single record to a CSV file\nA comma ',' is used as field separator, double quotes '\"' may be used to enclose fields\nand the escape character is backslash '\\'."],["The record as a list of strings","The file handle to write to"],[],["Just","The file handle"]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.CSV",["Just",88],["Just",99],"writeCSVFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_List",[["Type","String",[]]]]]],["Uniq",["Type","File",[]]]],["Uniq",["Type","File",[]]],[]],"fe_representation":"writeCSVFile :: ![[String]] !*File -> *File","fe_documentation":["FunctionDoc",["Just","Write an entire CSV file.\nA comma ',' is used as field separator, double quotes '\"' may be used to enclose fields\nand the escape character is backslash '\\'."],["The list of records which are lists of strings","The file handle to write to"],[],["Just","The file handle"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Encodings.Base64",["Just",22],["Just",18],"base64EncodeLen"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Length",[]]],["Type","String",[]],[]],"fe_representation":"base64EncodeLen :: !.String !Length -> .String","fe_documentation":["FunctionDoc",["Just","Converts a String to a Base64-encoded String given a maximum line length."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","Text.Encodings.Base64",["Just",17],["Just",15],"base64Encode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"base64Encode :: !.String -> .String","fe_documentation":["FunctionDoc",["Just","Converts a String to a Base64-encoded String."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Encodings.Base64",["Just",27],["Just",21],"base64URLEncode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"base64URLEncode :: !.String -> .String","fe_documentation":["FunctionDoc",["Just","Converts a String to an URL-safe Base64-encoded String."],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",15,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ATag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ATag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",9,["Location","Platform","Text.Encodings.UrlEncoding",["Just",17],["Just",29],"urlDecode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"urlDecode :: !String -> String","fe_documentation":["FunctionDoc",["Just","Converts an url-encoded string to an ASCII string."],[],[],["Nothing"]]},["Bin",6,["Location","Platform","Text.Encodings.MIME",["Just",19],["Just",16],"decodeMimeMultipart"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MIMEBoundary",[]],["Type","String",[]]],["Type","_List",[["Type","MIMEPart",[]]]],[]],"fe_representation":"decodeMimeMultipart :: !MIMEBoundary !String -> [MIMEPart]","fe_documentation":["FunctionDoc",["Just","Decode a multi-part MIME message"],[],[],["Nothing"]]},["Bin",3,["Location","Platform","Text.Encodings.Base64",["Just",42],["Just",74],"base64URLDecode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"base64URLDecode :: !.String -> .String","fe_documentation":["FunctionDoc",["Just","Converts an URL-safe Base64-encoded String to String."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","Text.Encodings.Base64",["Just",37],["Just",71],"base64Decode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"base64Decode :: !.String -> .String","fe_documentation":["FunctionDoc",["Just","Converts a Base64-encoded String to a String."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Encodings.MIME",["Just",15],["Just",6],"encodeMimeMultipart"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","MIMEBoundary",[]],["Type","_List",[["Type","MIMEPart",[]]]]],["Type","String",[]],[]],"fe_representation":"encodeMimeMultipart :: !MIMEBoundary ![MIMEPart] -> String","fe_documentation":["FunctionDoc",["Just","Encode a multi-part MIME message"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.Encodings.MIME",["Just",23],["Just",41],"extensionToMimeType"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","MIMEType",[]],[]],"fe_representation":"extensionToMimeType :: !String -> MIMEType","fe_documentation":["FunctionDoc",["Just","Give the MIME type of common file extension"],[],[],["Nothing"]]},["Tip"],["Bin",1,["Location","Platform","Text.Encodings.UrlEncoding",["Just",13],["Just",6],"urlEncode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"urlEncode :: !String -> String","fe_documentation":["FunctionDoc",["Just","Converts an ASCII string to a url-encoded string."],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",2,["Location","Platform","Text.Encodings.UrlEncoding",["Just",21],["Just",47],"urlEncodePairs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]],["Type","String",[]],[]],"fe_representation":"urlEncodePairs :: ![(String,String)] -> String","fe_documentation":["FunctionDoc",["Just","Converts a list of name\/value pairs to url encoded string of the form foo=bar&baz=42."],[],[],["Nothing"]]},["Tip"],["Bin",1,["Location","Platform","Text.Encodings.UrlEncoding",["Just",25],["Just",50],"urlDecodePairs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],[]],"fe_representation":"urlDecodePairs :: !String -> [(String,String)]","fe_documentation":["FunctionDoc",["Just","Converts a url encoded list of name\/value pairs to list of name\/value tuples."],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"AddressTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"AddressTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"AbbrTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"AbbrTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"AcronymTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"AcronymTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"AppletTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"AppletTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"AreaTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"AreaTag :: [HtmlAttr] -> HtmlTag"},["Tip"],["Tip"]]]]]],["Bin",12,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"BodyTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"BodyTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",5,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"BdoTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"BdoTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"BaseTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"BaseTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"BasefontTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"BasefontTag :: [HtmlAttr] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"BigTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"BigTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"BlockquoteTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"BlockquoteTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"CanvasTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"CanvasTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"BrTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"BrTag :: [HtmlAttr] -> HtmlTag"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ButtonTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ButtonTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"CenterTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"CenterTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"CaptionTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"CaptionTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"CircleTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"CircleTag :: [HtmlAttr] -> HtmlTag"},["Tip"],["Tip"]]]]]],["Bin",61,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"InputTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"InputTag :: [HtmlAttr] -> HtmlTag"},["Bin",29,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"EmTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"EmTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",12,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"DetailsTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"DetailsTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",5,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ColgroupTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ColgroupTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"CodeTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"CodeTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ColTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ColTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"DdTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"DdTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"DelTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"DelTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"DivTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"DivTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"DirTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"DirTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"DfnTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"DfnTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"DtTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"DtTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"DlTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"DlTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"EllipseTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"EllipseTag :: [HtmlAttr] -> HtmlTag"},["Tip"],["Tip"]]]]],["Bin",16,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"H5Tag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"H5Tag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",7,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"H1Tag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"H1Tag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"FontTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"FontTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"FieldsetTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"FieldsetTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"FormTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"FormTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"H3Tag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"H3Tag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"H2Tag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"H2Tag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"H4Tag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"H4Tag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]]],["Bin",8,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"HtmlTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"HtmlTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",4,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"HeadTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"HeadTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"H6Tag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"H6Tag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"HrTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"HrTag :: [HtmlAttr] -> HtmlTag"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"Html"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlTag",[]],[]],"fe_representation":"Html :: String -> HtmlTag"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"IframeTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"IframeTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ITag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ITag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ImgTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ImgTag :: [HtmlAttr] -> HtmlTag"},["Tip"],["Tip"]]]]]],["Bin",31,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"OptionTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"OptionTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",15,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"MapTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"MapTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",7,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"LabelTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"LabelTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"IsindexTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"IsindexTag :: [HtmlAttr] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"InsTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"InsTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"KdbTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"KdbTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"LiTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"LiTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"LegendTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"LegendTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"LinkTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"LinkTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"NoscriptTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"NoscriptTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"MetaTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"MetaTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"MenuTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"MenuTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"NoframesTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"NoframesTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"OlTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"OlTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ObjectTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ObjectTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"OptgroupTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"OptgroupTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ScriptTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ScriptTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",7,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"QTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"QTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ParamTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ParamTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"PTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"PTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"PreTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"PreTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"STag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"STag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"RectTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"RectTag :: [HtmlAttr] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"SampTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"SampTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"StrikeTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"StrikeTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"SmallTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"SmallTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"SelectTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"SelectTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"SpanTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"SpanTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"StyleTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"StyleTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"StrongTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"StrongTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"SubTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"SubTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]]]]]]],["Bin",105,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"DYAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"DYAttr :: String -> HtmlAttr"},["Bin",49,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"BackgroundAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"BackgroundAttr :: String -> HtmlAttr"},["Bin",28,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"UTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"UTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",15,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TextareaTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TextareaTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",7,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TableTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TableTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"SvgTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"SvgTag :: [HtmlAttr] [SVGAttr] [SVGElt] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"SupTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"SupTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TdTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TdTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TbodyTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TbodyTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TextTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TextTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"Text"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlTag",[]],[]],"fe_representation":"Text :: String -> HtmlTag"},["Tip"],["Tip"]],["Tip"]]]],["Bin",7,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TitleTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TitleTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"ThTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"ThTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TfootTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TfootTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TheadTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TheadTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TspanTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TspanTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TrTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TrTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"TtTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"TtTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]]]]],["Bin",12,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ActionAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ActionAttr :: String -> HtmlAttr"},["Bin",6,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"AcceptAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"AcceptAttr :: String -> HtmlAttr"},["Bin",3,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"VarTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"VarTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"UlTag"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],["Type","HtmlTag",[]],[]],"fe_representation":"UlTag :: [HtmlAttr] [HtmlTag] -> HtmlTag"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"AbbrAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"AbbrAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"AcceptcharsetAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"AcceptcharsetAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"AccesskeyAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"AccesskeyAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"AltAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"AltAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"AlignAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"AlignAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"AlinkAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"AlinkAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ArchiveAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ArchiveAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"AxisAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"AxisAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]]]],["Bin",20,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CodetypeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"CodetypeAttr :: String -> HtmlAttr"},["Bin",12,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CharsetAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"CharsetAttr :: String -> HtmlAttr"},["Bin",6,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CellpaddingAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"CellpaddingAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"BgcolorAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"BgcolorAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"BorderAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"BorderAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CharAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"CharAttr :: String -> HtmlAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CellspacingAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"CellspacingAttr :: String -> HtmlAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CharoffAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"CharoffAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ClassAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ClassAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CheckedAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"CheckedAttr :: HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CiteAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"CiteAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ClassidAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ClassidAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CodebaseAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"CodebaseAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CompactAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"CompactAttr :: HtmlAttr"},["Bin",3,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ColsAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ColsAttr :: String -> HtmlAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ColorAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ColorAttr :: String -> HtmlAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ColspanAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ColspanAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"CoordsAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"CoordsAttr :: String -> HtmlAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ContentAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ContentAttr :: String -> HtmlAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"DXAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"DXAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]]]],["Bin",55,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"MethodAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"MethodAttr :: String -> HtmlAttr"},["Bin",28,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"HspaceAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"HspaceAttr :: String -> HtmlAttr"},["Bin",15,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"FrameAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"FrameAttr :: String -> HtmlAttr"},["Bin",9,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"EnctypeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"EnctypeAttr :: String -> HtmlAttr"},["Bin",6,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"DeclareAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"DeclareAttr :: HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"DatetimeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"DatetimeAttr :: String -> HtmlAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"DataAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"DataAttr :: String -> HtmlAttr"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"DirAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"DirAttr :: String -> HtmlAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"DeferAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"DeferAttr :: String -> HtmlAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"DisabledAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"DisabledAttr :: HtmlAttr"},["Tip"],["Tip"]]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"FaceAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"FaceAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ForAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ForAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"HeightAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"HeightAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"FrameborderAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"FrameborderAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"HeadersAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"HeadersAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"HrefAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"HrefAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"HreflangAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"HreflangAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]]],["Bin",12,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"LinkAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"LinkAttr :: String -> HtmlAttr"},["Bin",6,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"LabelAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"LabelAttr :: String -> HtmlAttr"},["Bin",3,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"IdAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"IdAttr :: String -> HtmlAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"HttpequivAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"HttpequivAttr :: String -> HtmlAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"IsmapAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"IsmapAttr :: HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"LangAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"LangAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"LanguageAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"LanguageAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"MarginwidthAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"MarginwidthAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"LongdescAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"LongdescAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"MarginheightAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"MarginheightAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"MaxlengthAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"MaxlengthAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"MediaAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"MediaAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]]]],["Bin",26,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnkeypressAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnkeypressAttr :: String -> HtmlAttr"},["Bin",11,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnblurAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnblurAttr :: String -> HtmlAttr"},["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"NohrefAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"NohrefAttr :: HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"MultipleAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"MultipleAttr :: HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"NameAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"NameAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"NoshadeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"NoshadeAttr :: HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"NowrapAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"NowrapAttr :: HtmlAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OndblclickAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OndblclickAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnchangeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnchangeAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnclickAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnclickAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnfocusAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnfocusAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnkeydownAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnkeydownAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]]],["Bin",14,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnselectAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnselectAttr :: String -> HtmlAttr"},["Bin",8,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnmouseoutAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnmouseoutAttr :: String -> HtmlAttr"},["Bin",4,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnmousedownAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnmousedownAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnkeyupAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnkeyupAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnloadAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnloadAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnmousemoveAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnmousemoveAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnmouseupAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnmouseupAttr :: String -> HtmlAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnmouseoverAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnmouseoverAttr :: String -> HtmlAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnresetAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnresetAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ProfileAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ProfileAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnsubmitAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnsubmitAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"OnunloadAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"OnunloadAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"PromptAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"PromptAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"RXAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"RXAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]]]]]]]],["Bin",483,["Location","Platform","Text.PPrint",["Just",119],["Just",272],"fill"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_representation":"fill :: Int Doc -> Doc"},["Bin",270,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"TextLengthAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"TextLengthAttr :: SVGLength -> SVGAttr"},["Bin",97,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"RawElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGElt",[]],[]],"fe_representation":"RawElt :: String -> SVGElt"},["Bin",48,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"UsemapAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"UsemapAttr :: String -> HtmlAttr"},["Bin",23,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"SizeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"SizeAttr :: String -> HtmlAttr"},["Bin",11,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"RowspanAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"RowspanAttr :: String -> HtmlAttr"},["Bin",4,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"RevAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"RevAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"RelAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"RelAttr :: String -> HtmlAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ReadonlyAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"ReadonlyAttr :: HtmlAttr"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"RowsAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"RowsAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",6,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ScrollingAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ScrollingAttr :: String -> HtmlAttr"},["Bin",3,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"SchemeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"SchemeAttr :: String -> HtmlAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"RulesAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"RulesAttr :: String -> HtmlAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ScopeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ScopeAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"SelectedAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","HtmlAttr",[]],[]],"fe_representation":"SelectedAttr :: HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ShapeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ShapeAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"SummaryAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"SummaryAttr :: String -> HtmlAttr"},["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"StandbyAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"StandbyAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"SpanAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"SpanAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"SrcAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"SrcAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"StartAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"StartAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"StyleAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"StyleAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"TextAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"TextAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"TabindexAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"TabindexAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"TargetAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"TargetAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"TitleAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"TitleAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"TypeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"TypeAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]]]],["Bin",24,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"DefsElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"DefsElt :: [HtmlAttr] [SVGAttr] [SVGElt] -> SVGElt"},["Bin",12,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"WidthAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"WidthAttr :: String -> HtmlAttr"},["Bin",5,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ValuetypeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ValuetypeAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ValignAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ValignAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"ValueAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"ValueAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"VlinkAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"VlinkAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"VspaceAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"VspaceAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"XmlnsXlinkAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"XmlnsXlinkAttr :: String -> HtmlAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"XmllangAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"XmllangAttr :: String -> HtmlAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"XmlnsAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"XmlnsAttr :: String -> HtmlAttr"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"CircleElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"CircleElt :: [HtmlAttr] [SVGAttr] -> SVGElt"},["Bin",1,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"XmlspaceAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlAttr",[]],[]],"fe_representation":"XmlspaceAttr :: String -> HtmlAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"ClipPathElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"ClipPathElt :: [HtmlAttr] [SVGAttr] [SVGElt] -> SVGElt"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"MarkerElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"MarkerElt :: [HtmlAttr] [SVGAttr] [SVGElt] -> SVGElt"},["Bin",5,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"ImageElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"ImageElt :: [HtmlAttr] [SVGAttr] [SVGElt] -> SVGElt"},["Bin",2,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"EllipseElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"EllipseElt :: [HtmlAttr] [SVGAttr] -> SVGElt"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"GElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"GElt :: [HtmlAttr] [SVGAttr] [SVGElt] -> SVGElt"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"LineElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"LineElt :: [HtmlAttr] [SVGAttr] -> SVGElt"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"LinearGradientElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"LinearGradientElt :: [HtmlAttr] [SVGAttr] [SVGElt] -> SVGElt"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"PolygonElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"PolygonElt :: [HtmlAttr] [SVGAttr] -> SVGElt"},["Bin",2,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"MaskElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"MaskElt :: [HtmlAttr] [SVGAttr] [SVGElt] -> SVGElt"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"PathElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"PathElt :: [HtmlAttr] [SVGAttr] -> SVGElt"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"PolylineElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"PolylineElt :: [HtmlAttr] [SVGAttr] -> SVGElt"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"RadialGradientElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"RadialGradientElt :: [HtmlAttr] [SVGAttr] [SVGElt] -> SVGElt"},["Tip"],["Tip"]]]]]]],["Bin",48,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"MarkerHeightAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"MarkerHeightAttr :: SVGLength -> SVGAttr"},["Bin",23,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"ExternalResourcesRequiredAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"ExternalResourcesRequiredAttr :: Bool -> SVGAttr"},["Bin",11,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"BaseProfileAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"BaseProfileAttr :: String -> SVGAttr"},["Bin",5,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"TextElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","String",[]]],["Type","SVGElt",[]],[]],"fe_representation":"TextElt :: [HtmlAttr] [SVGAttr] String -> SVGElt"},["Bin",3,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"SVGElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"SVGElt :: [HtmlAttr] [SVGAttr] [SVGElt] -> SVGElt"},["Bin",1,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"RectElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"RectElt :: [HtmlAttr] [SVGAttr] -> SVGElt"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"StopElt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],["Type","SVGElt",[]],[]],"fe_representation":"StopElt :: [HtmlAttr] [SVGAttr] -> SVGElt"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"AlignmentBaselineAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"AlignmentBaselineAttr :: String -> SVGAttr"},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"CxAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGCoordinate",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"CxAttr :: SVGCoordinate -> SVGAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"ClipPathAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"ClipPathAttr :: String -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"ContentScriptTypeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"ContentScriptTypeAttr :: String -> SVGAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"CyAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGCoordinate",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"CyAttr :: SVGCoordinate -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"DominantBaselineAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"DominantBaselineAttr :: String -> SVGAttr"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"FontStretchAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"FontStretchAttr :: String -> SVGAttr"},["Bin",5,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"FillRuleAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGFillRule",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"FillRuleAttr :: SVGFillRule -> SVGAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"FillAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGPaint",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"FillAttr :: SVGPaint -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"FillOpacityAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGFillOpacity",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"FillOpacityAttr :: SVGFillOpacity -> SVGAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"FontFamilyAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"FontFamilyAttr :: String -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"FontSizeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"FontSizeAttr :: String -> SVGAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"FontWeightAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"FontWeightAttr :: String -> SVGAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"FontStyleAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"FontStyleAttr :: String -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"FontVariantAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"FontVariantAttr :: String -> SVGAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"LengthAdjustAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLengthAdjust",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"LengthAdjustAttr :: SVGLengthAdjust -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"MarkerEndAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"MarkerEndAttr :: String -> SVGAttr"},["Tip"],["Tip"]]]]]],["Bin",24,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"RyAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"RyAttr :: SVGLength -> SVGAttr"},["Bin",12,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"PointsAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]],["Type","SVGAttr",[]],[]],"fe_representation":"PointsAttr :: [(String, String)] -> SVGAttr"},["Bin",6,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"MaskAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"MaskAttr :: String -> SVGAttr"},["Bin",3,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"MarkerStartAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"MarkerStartAttr :: String -> SVGAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"MarkerMidAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"MarkerMidAttr :: String -> SVGAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"MarkerWidthAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"MarkerWidthAttr :: SVGLength -> SVGAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"OffsetAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"OffsetAttr :: String -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"OrientAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"OrientAttr :: String -> SVGAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"RefXAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"RefXAttr :: SVGLength -> SVGAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"PreserveAspectRatioAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Maybe",[["Type","SVGDefer",[]]]],["Type","Maybe",[["Type","SVGAlign",[]]]],["Type","Maybe",[["Type","SVGMeetOrSlice",[]]]]],["Type","SVGAttr",[]],[]],"fe_representation":"PreserveAspectRatioAttr :: (Maybe SVGDefer) (Maybe SVGAlign) (Maybe SVGMeetOrSlice) -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"RAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"RAttr :: SVGLength -> SVGAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"RefYAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"RefYAttr :: SVGLength -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"RxAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"RxAttr :: SVGLength -> SVGAttr"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StrokeLineCapAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLineCap",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StrokeLineCapAttr :: SVGLineCap -> SVGAttr"},["Bin",5,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StrokeAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGPaint",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StrokeAttr :: SVGPaint -> SVGAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StopColorAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StopColorAttr :: String -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StopOpacityAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StopOpacityAttr :: String -> SVGAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StrokeDashArrayAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGStrokeDashArray",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StrokeDashArrayAttr :: SVGStrokeDashArray -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StrokeDashOffsetAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGStrokeDashOffset",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StrokeDashOffsetAttr :: SVGStrokeDashOffset -> SVGAttr"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StrokeOpacityAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StrokeOpacityAttr :: String -> SVGAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StrokeLineJoinAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLineJoin",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StrokeLineJoinAttr :: SVGLineJoin -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StrokeMiterLimitAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGStrokeMiterLimit",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StrokeMiterLimitAttr :: SVGStrokeMiterLimit -> SVGAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"StrokeWidthAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGStrokeWidth",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"StrokeWidthAttr :: SVGStrokeWidth -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"TextAnchorAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"TextAnchorAttr :: String -> SVGAttr"},["Tip"],["Tip"]]]]]]]],["Bin",172,["Location","Platform","Text.HTML",["Just",355],["Nothing"],"JoinInherit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLineJoin",[]],[]],"fe_representation":"JoinInherit :: SVGLineJoin"},["Bin",46,["Location","Platform","Text.HTML",["Just",348],["Nothing"],"FillEvenodd"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGFillRule",[]],[]],"fe_representation":"FillEvenodd :: SVGFillRule"},["Bin",26,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"XMaxYMax"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGAlign",[]],[]],"fe_representation":"XMaxYMax :: SVGAlign"},["Bin",12,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"X2Attr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"X2Attr :: SVGLength -> SVGAttr"},["Bin",5,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"VersionAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"VersionAttr :: String -> SVGAttr"},["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"TextRenderingAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"TextRenderingAttr :: String -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"TransformAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","SVGTransform",[]]]]],["Type","SVGAttr",[]],[]],"fe_representation":"TransformAttr :: [SVGTransform] -> SVGAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"ViewBoxAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"ViewBoxAttr :: SVGNumber SVGNumber SVGNumber SVGNumber -> SVGAttr"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"X1Attr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"X1Attr :: SVGLength -> SVGAttr"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"Y2Attr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"Y2Attr :: SVGLength -> SVGAttr"},["Bin",3,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"XLinkHRefAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"XLinkHRefAttr :: String -> SVGAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"XAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGCoordinate",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"XAttr :: SVGCoordinate -> SVGAttr"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"Y1Attr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"Y1Attr :: SVGLength -> SVGAttr"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"ZoomAndPanAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGZoomAndPan",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"ZoomAndPanAttr :: SVGZoomAndPan -> SVGAttr"},["Bin",1,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"YAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGCoordinate",[]]],["Type","SVGAttr",[]],[]],"fe_representation":"YAttr :: SVGCoordinate -> SVGAttr"},["Tip"],["Tip"]],["Tip"]]]],["Bin",13,["Location","Platform","Text.HTML",["Just",342],["Nothing"],"SVGColorText"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGColor",[]],[]],"fe_representation":"SVGColorText :: String -> SVGColor"},["Bin",8,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"XMidYMax"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGAlign",[]],[]],"fe_representation":"XMidYMax :: SVGAlign"},["Bin",2,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"XMaxYMid"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGAlign",[]],[]],"fe_representation":"XMaxYMid :: SVGAlign"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"XMaxYMin"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGAlign",[]],[]],"fe_representation":"XMaxYMin :: SVGAlign"},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"XMinYMax"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGAlign",[]],[]],"fe_representation":"XMinYMax :: SVGAlign"},["Bin",2,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"XMidYMid"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGAlign",[]],[]],"fe_representation":"XMidYMid :: SVGAlign"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"XMidYMin"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGAlign",[]],[]],"fe_representation":"XMidYMin :: SVGAlign"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"XMinYMid"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGAlign",[]],[]],"fe_representation":"XMinYMid :: SVGAlign"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"XMinYMin"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGAlign",[]],[]],"fe_representation":"XMinYMin :: SVGAlign"},["Tip"],["Tip"]]]]],["Bin",4,["Location","Platform","Text.HTML",["Just",345],["Nothing"],"SVGDefer"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGDefer",[]],[]],"fe_representation":"SVGDefer :: SVGDefer"},["Bin",1,["Location","Platform","Text.HTML",["Just",342],["Nothing"],"SVGRGB"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Type","Int",[]]],["Type","SVGColor",[]],[]],"fe_representation":"SVGRGB :: Int Int Int -> SVGColor"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Text.HTML",["Just",346],["Nothing"],"FillOpacity"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGNumber",[]]],["Type","SVGFillOpacity",[]],[]],"fe_representation":"FillOpacity :: SVGNumber -> SVGFillOpacity"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",346],["Nothing"],"FillOpacityInherit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGFillOpacity",[]],[]],"fe_representation":"FillOpacityInherit :: SVGFillOpacity"},["Tip"],["Tip"]]]]]],["Bin",19,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"PERCENT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthUnit",[]],[]],"fe_representation":"PERCENT :: SVGLengthUnit"},["Bin",11,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"CM"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthUnit",[]],[]],"fe_representation":"CM :: SVGLengthUnit"},["Bin",5,["Location","Platform","Text.HTML",["Just",349],["Nothing"],"IRI"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SVGFuncIRI",[]],[]],"fe_representation":"IRI :: String -> SVGFuncIRI"},["Bin",2,["Location","Platform","Text.HTML",["Just",348],["Nothing"],"FillInherit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGFillRule",[]],[]],"fe_representation":"FillInherit :: SVGFillRule"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",348],["Nothing"],"FillNonzero"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGFillRule",[]],[]],"fe_representation":"FillNonzero :: SVGFillRule"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",352],["Nothing"],"Spacing"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthAdjust",[]],[]],"fe_representation":"Spacing :: SVGLengthAdjust"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",352],["Nothing"],"SpacingAndGlyphs"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthAdjust",[]],[]],"fe_representation":"SpacingAndGlyphs :: SVGLengthAdjust"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"MM"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthUnit",[]],[]],"fe_representation":"MM :: SVGLengthUnit"},["Bin",3,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"EX"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthUnit",[]],[]],"fe_representation":"EX :: SVGLengthUnit"},["Bin",1,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"EM"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthUnit",[]],[]],"fe_representation":"EM :: SVGLengthUnit"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"IN"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthUnit",[]],[]],"fe_representation":"IN :: SVGLengthUnit"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"PC"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthUnit",[]],[]],"fe_representation":"PC :: SVGLengthUnit"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Text.HTML",["Just",354],["Nothing"],"CapInherit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLineCap",[]],[]],"fe_representation":"CapInherit :: SVGLineCap"},["Bin",3,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"PX"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthUnit",[]],[]],"fe_representation":"PX :: SVGLengthUnit"},["Bin",1,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"PT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLengthUnit",[]],[]],"fe_representation":"PT :: SVGLengthUnit"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",354],["Nothing"],"CapButt"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLineCap",[]],[]],"fe_representation":"CapButt :: SVGLineCap"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",354],["Nothing"],"CapSquare"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLineCap",[]],[]],"fe_representation":"CapSquare :: SVGLineCap"},["Bin",1,["Location","Platform","Text.HTML",["Just",354],["Nothing"],"CapRound"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLineCap",[]],[]],"fe_representation":"CapRound :: SVGLineCap"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",355],["Nothing"],"JoinBevel"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLineJoin",[]],[]],"fe_representation":"JoinBevel :: SVGLineJoin"},["Tip"],["Tip"]]]]]],["Bin",125,["Location","Platform","Text.HTML",["Just",426],["Nothing"],"RawText"],{"fe_kind":["Macro"],"fe_representation":"RawText :== Html"},["Bin",31,["Location","Platform","Text.HTML",["Just",368],["Nothing"],"DashOffsetInherit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGStrokeDashOffset",[]],[]],"fe_representation":"DashOffsetInherit :: SVGStrokeDashOffset"},["Bin",12,["Location","Platform","Text.HTML",["Just",360],["Nothing"],"PaintFuncIRI"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGFuncIRI",[]],["Type","Maybe",[["Type","SVGPaint",[]]]]],["Type","SVGPaint",[]],[]],"fe_representation":"PaintFuncIRI :: SVGFuncIRI (Maybe SVGPaint) -> SVGPaint"},["Bin",6,["Location","Platform","Text.HTML",["Just",356],["Nothing"],"SVGSlice"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGMeetOrSlice",[]],[]],"fe_representation":"SVGSlice :: SVGMeetOrSlice"},["Bin",3,["Location","Platform","Text.HTML",["Just",355],["Nothing"],"JoinRound"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLineJoin",[]],[]],"fe_representation":"JoinRound :: SVGLineJoin"},["Bin",1,["Location","Platform","Text.HTML",["Just",355],["Nothing"],"JoinMiter"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGLineJoin",[]],[]],"fe_representation":"JoinMiter :: SVGLineJoin"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",356],["Nothing"],"SVGMeet"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGMeetOrSlice",[]],[]],"fe_representation":"SVGMeet :: SVGMeetOrSlice"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",360],["Nothing"],"PaintColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGColor",[]],["Type","Maybe",[["Type","SVGICCColor",[]]]]],["Type","SVGPaint",[]],[]],"fe_representation":"PaintColor :: SVGColor (Maybe SVGICCColor) -> SVGPaint"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",360],["Nothing"],"PaintCurrentColor"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGPaint",[]],[]],"fe_representation":"PaintCurrentColor :: SVGPaint"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.HTML",["Just",365],["Nothing"],"DashArray"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]]],["Type","SVGStrokeDashArray",[]],[]],"fe_representation":"DashArray :: [String] -> SVGStrokeDashArray"},["Bin",2,["Location","Platform","Text.HTML",["Just",360],["Nothing"],"PaintInherit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGPaint",[]],[]],"fe_representation":"PaintInherit :: SVGPaint"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",360],["Nothing"],"PaintNone"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGPaint",[]],[]],"fe_representation":"PaintNone :: SVGPaint"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",365],["Nothing"],"InheritDash"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGStrokeDashArray",[]],[]],"fe_representation":"InheritDash :: SVGStrokeDashArray"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",365],["Nothing"],"NoDash"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGStrokeDashArray",[]],[]],"fe_representation":"NoDash :: SVGStrokeDashArray"},["Tip"],["Tip"]]]]],["Bin",18,["Location","Platform","Text.HTML",["Just",374],["Nothing"],"RotateTransform"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGNumber",[]],["Type","Maybe",[["Type","_Tuple2",[["Type","SVGNumber",[]],["Type","SVGNumber",[]]]]]]],["Type","SVGTransform",[]],[]],"fe_representation":"RotateTransform :: SVGNumber (Maybe (SVGNumber, SVGNumber)) -> SVGTransform"},["Bin",6,["Location","Platform","Text.HTML",["Just",372],["Nothing"],"StrokeWidthInherit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGStrokeWidth",[]],[]],"fe_representation":"StrokeWidthInherit :: SVGStrokeWidth"},["Bin",3,["Location","Platform","Text.HTML",["Just",370],["Nothing"],"MiterLimit"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGNumber",[]]],["Type","SVGStrokeMiterLimit",[]],[]],"fe_representation":"MiterLimit :: SVGNumber -> SVGStrokeMiterLimit"},["Bin",1,["Location","Platform","Text.HTML",["Just",368],["Nothing"],"DashOffsetLength"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGStrokeDashOffset",[]],[]],"fe_representation":"DashOffsetLength :: SVGLength -> SVGStrokeDashOffset"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",370],["Nothing"],"MiterLimitInherit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGStrokeMiterLimit",[]],[]],"fe_representation":"MiterLimitInherit :: SVGStrokeMiterLimit"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.HTML",["Just",372],["Nothing"],"StrokeWidthLength"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGLength",[]]],["Type","SVGStrokeWidth",[]],[]],"fe_representation":"StrokeWidthLength :: SVGLength -> SVGStrokeWidth"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",374],["Nothing"],"MatrixTransform"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]]],["Type","SVGTransform",[]],[]],"fe_representation":"MatrixTransform :: SVGNumber SVGNumber SVGNumber SVGNumber SVGNumber SVGNumber -> SVGTransform"},["Tip"],["Tip"]]]],["Bin",11,["Location","Platform","Text.HTML",["Just",380],["Nothing"],"Disable"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGZoomAndPan",[]],[]],"fe_representation":"Disable :: SVGZoomAndPan"},["Bin",4,["Location","Platform","Text.HTML",["Just",374],["Nothing"],"SkewYTransform"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGNumber",[]]],["Type","SVGTransform",[]],[]],"fe_representation":"SkewYTransform :: SVGNumber -> SVGTransform"},["Bin",2,["Location","Platform","Text.HTML",["Just",374],["Nothing"],"ScaleTransform"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGNumber",[]],["Type","SVGNumber",[]]],["Type","SVGTransform",[]],[]],"fe_representation":"ScaleTransform :: SVGNumber SVGNumber -> SVGTransform"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",374],["Nothing"],"SkewXTransform"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGNumber",[]]],["Type","SVGTransform",[]],[]],"fe_representation":"SkewXTransform :: SVGNumber -> SVGTransform"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.HTML",["Just",374],["Nothing"],"TranslateTransform"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SVGNumber",[]],["Type","SVGNumber",[]]],["Type","SVGTransform",[]],[]],"fe_representation":"TranslateTransform :: SVGNumber SVGNumber -> SVGTransform"},["Tip"],["Tip"]]],["Bin",6,["Location","Platform","Text.HTML",["Just",384],["Just",642],"svgAttrSize"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SVGAttr",[]]],["Type","Int",[]],[]],"fe_representation":"svgAttrSize :: !SVGAttr -> Int"},["Bin",2,["Location","Platform","Text.HTML",["Just",380],["Nothing"],"Magnify"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SVGZoomAndPan",[]],[]],"fe_representation":"Magnify :: SVGZoomAndPan"},["Tip"],["Bin",1,["Location","Platform","Text.HTML",["Just",383],["Just",617],"svgEltSize"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SVGElt",[]]],["Type","Int",[]],[]],"fe_representation":"svgEltSize :: !SVGElt -> Int"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",388],["Just",375],"serializeAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HtmlAttr",[]],["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","Int",[]]],["Type","_Tuple2",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","Int",[]]]],[]],"fe_representation":"serializeAttr :: !HtmlAttr !*{#Char} !Int -> (!*{#Char},!Int)"},["Bin",1,["Location","Platform","Text.HTML",["Just",386],["Just",1010],"writeSVGTag"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]],["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","Int",[]]],["Type","_Tuple2",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","Int",[]]]],[]],"fe_representation":"writeSVGTag :: !{#Char} ![HtmlAttr] ![SVGAttr] ![SVGElt] !*{#Char} !Int -> (!*{#Char},!Int)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",389],["Just",942],"serializeSVGAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SVGAttr",[]],["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","Int",[]]],["Type","_Tuple2",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","Int",[]]]],[]],"fe_representation":"serializeSVGAttr :: !SVGAttr !*{#Char} !Int -> (!*{#Char},!Int)"},["Tip"],["Tip"]]]]]]],["Bin",93,["Location","Platform","Text.PPrint",["Just",86],["Just",142],"brackets"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","Doc",[]]],["Type","Doc",[]],[]],[]],"fe_representation":"brackets :: Doc -> Doc"},["Bin",69,["Location","Platform","Text.PPrint",["Just",61],["Just",52],"encloseSep"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","Doc",[]],["Type","Doc",[]],["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],"fe_representation":"encloseSep :: Doc Doc Doc [Doc] -> Doc"},["Bin",45,["Location","Platform","Text.JSON",["Just",87],["Just",456],"JSONEncode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Var","t"]],["Type","_List",[["Type","JSONNode",[]]]],[]],"fe_generic_vars":["t"],"fe_representation":"generic JSONEncode t :: !Bool !t -> [JSONNode]"},["Bin",17,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONRaw"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","JSONNode",[]],[]],"fe_representation":"JSONRaw :: String -> JSONNode"},["Bin",8,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONError"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","JSONNode",[]],[]],"fe_representation":"JSONError :: JSONNode"},["Bin",4,["Location","Platform","Text.HTML",["Just",430],["Just",1306],"escapeStr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"escapeStr :: !String -> String"},["Bin",1,["Location","Platform","Text.HTML",["Just",428],["Just",1089],"browserFriendlySVGEltToString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SVGElt",[]]],["Type","String",[]],[]],"fe_representation":"browserFriendlySVGEltToString :: !SVGElt -> String"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONArray"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","JSONNode",[]]]]],["Type","JSONNode",[]],[]],"fe_representation":"JSONArray :: [JSONNode] -> JSONNode"},["Tip"],["Bin",1,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONBool"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","JSONNode",[]],[]],"fe_representation":"JSONBool :: Bool -> JSONNode"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONNull"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","JSONNode",[]],[]],"fe_representation":"JSONNull :: JSONNode"},["Bin",1,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONInt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","JSONNode",[]],[]],"fe_representation":"JSONInt :: Int -> JSONNode"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONObject"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","JSONNode",[]]]]]]],["Type","JSONNode",[]],[]],"fe_representation":"JSONObject :: [(String, JSONNode)] -> JSONNode"},["Tip"],["Tip"]]]],["Bin",8,["Location","Platform","Text.JSON",["Just",61],["Just",152],"jsonEscape"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"jsonEscape :: !String -> String","fe_documentation":["FunctionDoc",["Just","Escapes a string for manual JSON construction"],["The unescaped string"],[],["Just","A properly escaped string"]]},["Bin",5,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONString"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","JSONNode",[]],[]],"fe_representation":"JSONString :: String -> JSONNode"},["Bin",1,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONReal"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","JSONNode",[]],[]],"fe_representation":"JSONReal :: Real -> JSONNode"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","Text.JSON",["Just",44],["Just",445],"toJSONInField"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","JSONNode",[]],[[["Generic","JSONEncode",["KindConst"]],["Var","a"]]]],"fe_representation":"toJSONInField :: !a -> JSONNode | JSONEncode{|*|} a"},["Bin",1,["Location","Platform","Text.JSON",["Just",42],["Just",442],"toJSON"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","JSONNode",[]],[[["Generic","JSONEncode",["KindConst"]],["Var","a"]]]],"fe_representation":"toJSON :: !a -> JSONNode | JSONEncode{|*|} a","fe_documentation":["FunctionDoc",["Just","Encodes any value to JSON format."],["The value to encode"],[],["Just","The JSON encoded value"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.JSON",["Just",53],["Just",496],"fromJSON"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSONNode",[]]],["Type","Maybe",[["Var","a"]]],[[["Generic","JSONDecode",["KindConst"]],["Var","a"]]]],"fe_representation":"fromJSON :: !JSONNode -> Maybe a | JSONDecode{|*|} a","fe_documentation":["FunctionDoc",["Just","Tries to parse a JSON encoded string.\nWhen parsing fails, the result is Nothing."],["The JSON encoded input"],[],["Just","Just the result, when parsing succeeds"]]},["Tip"],["Tip"]]]],["Bin",2,["Location","Platform","Text.JSON",["Just",69],["Just",436],"jsonUnescape"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"jsonUnescape :: !String -> String","fe_documentation":["FunctionDoc",["Just","Unescapes a string that is escaped for use in a serialized JSON string"],["The escaped string"],[],["Just","An unescaped string"]]},["Tip"],["Bin",1,["Location","Platform","Text.JSON",["Just",80],["Just",725],"jsonQuery"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","JSONNode",[]]],["Type","Maybe",[["Var","a"]]],[[["Generic","JSONDecode",["KindConst"]],["Var","a"]]]],"fe_representation":"jsonQuery :: !String !JSONNode -> Maybe a | JSONDecode{|*|} a","fe_documentation":["FunctionDoc",["Just","Simple query-by-path function that enables searching of JSON structures"],["The query path separated by '\/'. Objects are indexed by fieldname\nand arrays by their array index.\nExample paths: 'node1\/node3' 'node1\/node2\/23'"],[],["Just","The value if a value of the right type is at that path."]]},["Tip"],["Tip"]]]]],["Bin",27,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Environment"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","LaTeX",[]]]]],["Type","LaTeX",[]],[]],"fe_representation":"Environment :: String [LaTeX] -> LaTeX"},["Bin",9,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Cite"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"Cite :: String -> LaTeX"},["Bin",3,["Location","Platform","Text.JSON",["Just",167],["Just",767],"jsonPrettyPrint"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSONNode",[]]],["Type","String",[]],[]],"fe_representation":"jsonPrettyPrint :: !JSONNode -> String","fe_documentation":["FunctionDoc",["Just","Pretty printed string encoding of JSON nodes.\nThis function uses indenting and newlines to make the serialized JSON representation\nmore readable than the standard toString instance, which uses minimal whitespace."],[],[],["Nothing"]]},["Bin",1,["Location","Platform","Text.JSON",["Just",111],["Just",502],"JSONDecode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Type","_List",[["Type","JSONNode",[]]]]],["Type","_Tuple2",[["Type","Maybe",[["Var","t"]]],["Type","_List",[["Type","JSONNode",[]]]]]],[]],"fe_generic_vars":["t"],"fe_representation":"generic JSONDecode t :: !Bool ![JSONNode] -> (!Maybe t,![JSONNode])"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Chapter"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"Chapter :: String -> LaTeX"},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"EmDash"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","LaTeX",[]],[]],"fe_representation":"EmDash :: LaTeX"},["Bin",2,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"CleanInline"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"CleanInline :: String -> LaTeX"},["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"CleanCode"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]]],["Type","LaTeX",[]],[]],"fe_representation":"CleanCode :: [String] -> LaTeX"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"EnDash"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","LaTeX",[]],[]],"fe_representation":"EnDash :: LaTeX"},["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Emph"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","LaTeX",[]]]]],["Type","LaTeX",[]],[]],"fe_representation":"Emph :: [LaTeX] -> LaTeX"},["Tip"],["Tip"]],["Tip"]]]],["Bin",17,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Subsubsection"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"Subsubsection :: String -> LaTeX"},["Bin",9,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Label"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"Label :: String -> LaTeX"},["Bin",3,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Item"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","LaTeX",[]]]]],["Type","LaTeX",[]],[]],"fe_representation":"Item :: [LaTeX] -> LaTeX"},["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Index"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"Index :: String -> LaTeX"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Itemize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","LaTeX",[]]]]],["Type","LaTeX",[]],[]],"fe_representation":"Itemize :: [LaTeX] -> LaTeX"},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Paragraph"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"Paragraph :: String -> LaTeX"},["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"NewParagraph"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","LaTeX",[]],[]],"fe_representation":"NewParagraph :: LaTeX"},["Tip"],["Tip"]],["Bin",3,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Section"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"Section :: String -> LaTeX"},["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"RawText"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"RawText :: String -> LaTeX"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Subsection"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"Subsection :: String -> LaTeX"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Text.PPrint",["Just",58],["Just",43],"list"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"list :: [Doc] -> Doc"},["Bin",4,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"TextBf"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","LaTeX",[]]]]],["Type","LaTeX",[]],[]],"fe_representation":"TextBf :: [LaTeX] -> LaTeX"},["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"Text"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LaTeX",[]],[]],"fe_representation":"Text :: String -> LaTeX"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"TextIt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","LaTeX",[]]]]],["Type","LaTeX",[]],[]],"fe_representation":"TextIt :: [LaTeX] -> LaTeX"},["Tip"],["Bin",1,["Location","Platform","Text.LaTeX",["Just",39],["Just",10],"printLaTeX"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","LaTeX",[]]]]],["Type","String",[]],[]],"fe_representation":"printLaTeX :: ![LaTeX] -> String"},["Tip"],["Tip"]]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",59],["Just",46],"tupled"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"tupled :: [Doc] -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",60],["Just",49],"semiBraces"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"semiBraces :: [Doc] -> Doc"},["Tip"],["Tip"]]]]]]],["Bin",23,["Location","Platform","Text.PPrint",["Just",74],["Just",106],"<+>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<+>) infixr 6 :: Doc Doc -> Doc"},["Bin",11,["Location","Platform","Text.PPrint",["Just",68],["Just",87],"cat"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"cat :: [Doc] -> Doc"},["Bin",5,["Location","Platform","Text.PPrint",["Just",65],["Just",78],"fillSep"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"fillSep :: [Doc] -> Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",62],["Just",65],"punctuate"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","_List",[["Type","Doc",[]]]]],["Type","_List",[["Type","Doc",[]]]],[]],"fe_representation":"punctuate :: Doc [Doc] -> [Doc]"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",64],["Just",75],"sep"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"sep :: [Doc] -> Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",66],["Just",81],"hsep"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"hsep :: [Doc] -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",67],["Just",84],"vsep"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"vsep :: [Doc] -> Doc"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.PPrint",["Just",71],["Just",96],"vcat"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"vcat :: [Doc] -> Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",69],["Just",90],"fillCat"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"fillCat :: [Doc] -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",70],["Just",93],"hcat"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],[]],"fe_representation":"hcat :: [Doc] -> Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",72],["Just",99],"fold"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Doc",[]]],["Func",[["Type","Doc",[]]],["Type","Doc",[]],[]],[]],["Type","_List",[["Type","Doc",[]]]]],["Type","Doc",[]],[]],"fe_representation":"fold :: (Doc -> Doc -> Doc) [Doc] -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",73],["Just",103],"<->"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<->) infixr 6 :: Doc Doc -> Doc"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Text.PPrint",["Just",80],["Just",124],"softbreak"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"softbreak :: Doc"},["Bin",5,["Location","Platform","Text.PPrint",["Just",77],["Just",115],"<$>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_priority":["RightAssoc",5],"fe_representation":"(<$>) infixr 5 :: Doc Doc -> Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",75],["Just",109],"<\/>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_priority":["RightAssoc",5],"fe_representation":"(<\/>) infixr 5 :: Doc Doc -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",76],["Just",112],"<\/\/>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_priority":["RightAssoc",5],"fe_representation":"(<\/\/>) infixr 5 :: Doc Doc -> Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",78],["Just",118],"<$$>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_priority":["RightAssoc",5],"fe_representation":"(<$$>) infixr 5 :: Doc Doc -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",79],["Just",121],"softline"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"softline :: Doc"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.PPrint",["Just",83],["Just",133],"braces"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","Doc",[]]],["Type","Doc",[]],[]],[]],"fe_representation":"braces :: Doc -> Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",81],["Just",127],"squotes"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","Doc",[]]],["Type","Doc",[]],[]],[]],"fe_representation":"squotes :: Doc -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",82],["Just",130],"dquotes"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","Doc",[]]],["Type","Doc",[]],[]],[]],"fe_representation":"dquotes :: Doc -> Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",84],["Just",136],"parens"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","Doc",[]]],["Type","Doc",[]],[]],[]],"fe_representation":"parens :: Doc -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",85],["Just",139],"angles"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","Doc",[]]],["Type","Doc",[]],[]],[]],"fe_representation":"angles :: Doc -> Doc"},["Tip"],["Tip"]]]]]]],["Bin",23,["Location","Platform","Text.PPrint",["Just",98],["Just",178],"semi"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"semi :: Doc"},["Bin",11,["Location","Platform","Text.PPrint",["Just",92],["Just",160],"lbrace"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"lbrace :: Doc"},["Bin",5,["Location","Platform","Text.PPrint",["Just",89],["Just",151],"rparen"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"rparen :: Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",87],["Just",145],"enclose"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","Doc",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_representation":"enclose :: Doc Doc Doc -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",88],["Just",148],"lparen"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"lparen :: Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",90],["Just",154],"langle"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"langle :: Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",91],["Just",157],"rangle"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"rangle :: Doc"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.PPrint",["Just",95],["Just",169],"rbracket"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"rbracket :: Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",93],["Just",163],"rbrace"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"rbrace :: Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",94],["Just",166],"lbracket"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"lbracket :: Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",96],["Just",172],"squote"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"squote :: Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",97],["Just",175],"dquote"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"dquote :: Doc"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Text.PPrint",["Just",104],["Just",196],"equals"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"equals :: Doc"},["Bin",5,["Location","Platform","Text.PPrint",["Just",101],["Just",187],"space"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"space :: Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",99],["Just",181],"colon"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"colon :: Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",100],["Just",184],"comma"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"comma :: Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",102],["Just",190],"dot"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"dot :: Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",103],["Just",193],"backslash"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"backslash :: Doc"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.PPrint",["Just",112],["Just",215],"int"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","Doc",[]],[]],"fe_representation":"int :: Int -> Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",110],["Just",204],"string"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Doc",[]],[]],"fe_representation":"string :: String -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",111],["Just",212],"bool"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]]],["Type","Doc",[]],[]],"fe_representation":"bool :: Bool -> Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",113],["Just",218],"real"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]]],["Type","Doc",[]],[]],"fe_representation":"real :: Real -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",118],["Just",267],"fillBreak"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_representation":"fillBreak :: Int Doc -> Doc"},["Tip"],["Tip"]]]]]]]]]],["Bin",212,["Location","Platform","Text.Parsers.Simple.Core",["Just",44],["Just",124],"pChainl1"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","a"]]],["Type","Parser",[["Var","t"],["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]]]]],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_representation":"pChainl1 :: (Parser t a) (Parser t (a -> a -> a)) -> Parser t a"},["Bin",105,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",52],["Just",153],"nat"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","CParser",[["Type","Char",[]],["Type","Int",[]],["Var","t"]]],[]],"fe_representation":"nat :: CParser Char Int t"},["Bin",45,["Location","Platform","Text.PPrint",["Just",142],["Just",335],"column"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Int",[]]],["Type","Doc",[]],[]]],["Type","Doc",[]],[]],"fe_representation":"column :: (Int -> Doc) -> Doc"},["Bin",11,["Location","Platform","Text.PPrint",["Just",136],["Just",315],"char"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Doc",[]],[]],"fe_representation":"char :: Char -> Doc"},["Bin",5,["Location","Platform","Text.PPrint",["Just",126],["Just",286],"hang"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_representation":"hang :: Int Doc -> Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",120],["Just",277],"width"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Func",[["Type","Int",[]]],["Type","Doc",[]],[]]],["Type","Doc",[]],[]],"fe_representation":"width :: Doc (Int -> Doc) -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",125],["Just",283],"indent"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_representation":"indent :: Int Doc -> Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",127],["Just",289],"align"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_representation":"align :: Doc -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",135],["Just",311],"empty"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"empty :: Doc"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.PPrint",["Just",139],["Just",326],"linebreak"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"linebreak :: Doc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",137],["Just",319],"text"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Doc",[]],[]],"fe_representation":"text :: String -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",138],["Just",323],"line"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Doc",[]],[]],"fe_representation":"line :: Doc"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.PPrint",["Just",140],["Just",329],"beside"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_representation":"beside :: Doc Doc -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",141],["Just",332],"nest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Doc",[]]],["Type","Doc",[]],[]],"fe_representation":"nest :: Int Doc -> Doc"},["Tip"],["Tip"]]]]],["Bin",33,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",32],["Just",115],"<+>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","r"]]],["Var","t"]]],[]],"fe_representation":"<+> :: (CParser s r t) -> CParser s [r] t"},["Bin",17,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",13],["Just",14],"CParser"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Type","SucCont",[["Var","s"],["Var","r"],["Var","t"]]]],["Func",[["Type","XorCont",[["Var","s"],["Var","t"]]]],["Func",[["Type","AltCont",[["Var","s"],["Var","t"]]]],["Type","Parser",[["Var","s"],["Var","t"]]],[]],[]],[]]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],[]],"fe_representation":"CParser :: ((SucCont s r t) -> (XorCont s t) -> (AltCont s t) -> Parser s t) -> CParser s r t"},["Bin",4,["Location","Platform","Text.PPrint",["Just",150],["Just",416],"renderCompact"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Doc",[]]],["Type","SimpleDoc",[]],[]],"fe_representation":"renderCompact :: Doc -> SimpleDoc"},["Bin",2,["Location","Platform","Text.PPrint",["Just",143],["Just",338],"nesting"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Int",[]]],["Type","Doc",[]],[]]],["Type","Doc",[]],[]],"fe_representation":"nesting :: (Int -> Doc) -> Doc"},["Tip"],["Bin",1,["Location","Platform","Text.PPrint",["Just",149],["Just",365],"renderPretty"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]],["Type","Int",[]],["Type","Doc",[]]],["Type","SimpleDoc",[]],[]],"fe_representation":"renderPretty :: Real Int Doc -> SimpleDoc"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.PPrint",["Just",151],["Just",436],"display"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SimpleDoc",[]]],["Type","String",[]],[]],"fe_representation":"display :: SimpleDoc -> String"},["Tip"],["Tip"]]],["Bin",12,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",28],["Just",64],"<|>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],[]],"fe_priority":["RightAssoc",4],"fe_representation":"(<|>) infixr 4 :: (CParser s r t) (CParser s r t) -> CParser s r t"},["Bin",8,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",23],["Just",32],"symbol"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Type","CParser",[["Var","s"],["Var","s"],["Var","t"]]],[[["Class","=="],["Var","s"]]]],"fe_representation":"symbol :: s -> CParser s s t | == s"},["Bin",4,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",21],["Just",23],"fail"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],[]],"fe_representation":"fail :: CParser s r t"},["Bin",2,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",19],["Just",61],"begin1"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","t"],["Var","t"]]]],["Type","Parser",[["Var","s"],["Var","t"]]],[]],"fe_representation":"begin1 :: !(CParser s t t) -> Parser s t"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",18],["Just",58],"begin"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","t"],["Var","t"]]]],["Type","Parser",[["Var","s"],["Var","t"]]],[]],"fe_representation":"begin :: !(CParser s t t) -> Parser s t"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",22],["Just",26],"yield"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","r"]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],[]],"fe_representation":"yield :: r -> CParser s r t"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",25],["Just",45],"satisfy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Type","Bool",[]],[]]],["Type","CParser",[["Var","s"],["Var","s"],["Var","t"]]],[]],"fe_representation":"satisfy :: (s -> Bool) -> CParser s s t"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",24],["Just",38],"token"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","s"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","s"]]],["Var","t"]]],[[["Class","=="],["Var","s"]]]],"fe_representation":"token :: [s] -> CParser s [s] t | == s"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",26],["Just",51],"eof"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","CParser",[["Var","s"],["Type","Int",[]],["Var","t"]]],[]],"fe_representation":"eof :: CParser s Int t"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",30],["Just",89],"<@"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],["Func",[["Var","r"]],["Var","u"],[]]],["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],[]],"fe_priority":["LeftAssoc",5],"fe_representation":"(<@) infixl 5 :: (CParser s r t) (r -> u) -> CParser s u t"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",29],["Just",70],"<&>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],["Func",[["Var","u"]],["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]],[]]],["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<&>) infixr 6 :: (CParser s u t) (u -> CParser s v t) -> CParser s v t"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",31],["Just",96],"<*>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","r"]]],["Var","t"]]],[]],"fe_representation":"<*> :: (CParser s r t) -> CParser s [r] t"},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",42],["Just",92],"<*?>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","r"]]],["Var","t"]]],[]],"fe_representation":"<*?> :: (CParser s r t) -> CParser s [r] t"},["Bin",7,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",37],["Just",82],"<++>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Type","_List",[["Var","u"]]],["Var","t"]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","u"]]],["Var","t"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","u"]]],["Var","t"]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<++>) infixr 6 :: (CParser s [u] t) (CParser s [u] t) -> CParser s [u] t"},["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",35],["Just",76],"&>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(&>) infixr 6 :: (CParser s u t) (CParser s v t) -> CParser s v t"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",34],["Just",73],"<&"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<&) infixr 6 :: (CParser s u t) (CParser s v t) -> CParser s u t"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",36],["Just",79],"<:&>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","u"]]],["Var","t"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","u"]]],["Var","t"]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<:&>) infixr 6 :: (CParser s u t) (CParser s [u] t) -> CParser s [u] t"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",40],["Just",85],"<!&>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],["Func",[["Var","u"]],["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]],[]]],["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<!&>) infixr 6 :: (CParser s u t) (u -> CParser s v t) -> CParser s v t"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",39],["Just",67],"<!>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],[]],"fe_priority":["RightAssoc",4],"fe_representation":"(<!>) infixr 4 :: (CParser s r t) (CParser s r t) -> CParser s r t"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",41],["Just",120],"<+?>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","r"]]],["Var","t"]]],[]],"fe_representation":"<+?> :: (CParser s r t) -> CParser s [r] t"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",47],["Just",129],"<??>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","r"]]],["Var","t"]]],[]],"fe_representation":"<??> :: (CParser s r t) -> CParser s [r] t"},["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",45],["Just",123],"<?>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","r"]]],["Var","t"]]],[]],"fe_representation":"<?> :: (CParser s r t) -> CParser s [r] t"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",43],["Just",29],"cut"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],[]],"fe_representation":"cut :: (CParser s r t) -> CParser s r t"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",46],["Just",126],"<?@>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],["Func",[["Var","r"]],["Var","u"],[]],["Var","u"]],["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],[]],"fe_representation":"<?@> :: (CParser s r t) (r -> u) u -> CParser s u t"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",49],["Just",135],">?<"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],["Func",[["Var","r"]],["Type","Bool",[]],[]]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],[]],"fe_priority":["NoAssoc",9],"fe_representation":"(>?<) infix 9 :: (CParser s r t) (r -> Bool) -> CParser s r t"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",48],["Just",132],"<??@>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],["Func",[["Var","r"]],["Var","u"],[]],["Var","u"]],["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],[]],"fe_representation":"<??@> :: (CParser s r t) (r -> u) u -> CParser s u t"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",51],["Just",150],"digit"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","CParser",[["Type","Char",[]],["Type","Int",[]],["Var","t"]]],[]],"fe_representation":"digit :: CParser Char Int t"},["Tip"],["Tip"]]]]]]],["Bin",59,["Location","Platform","Text.Parsers.Simple.Chars",["Just",25],["Just",68],"pLt"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pLt :: Parser Char Char"},["Bin",35,["Location","Platform","Text.Parsers.Simple.Chars",["Just",8],["Just",20],"pAlphanum"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pAlphanum :: Parser Char Char"},["Bin",19,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",66],["Just",186],"parseChainRight"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","a"],["Var","b"],["Var","c"]]],["Type","CParser",[["Var","a"],["Func",[["Var","b"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Var","c"]]]],["Type","CParser",[["Var","a"],["Var","b"],["Var","c"]]],[]],"fe_representation":"parseChainRight :: (CParser a b c) (CParser a (b -> b -> b) c) -> CParser a b c"},["Bin",7,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",60],["Just",169],"spsymbol"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Type","CParser",[["Var","s"],["Var","s"],["Var","t"]]],[[["Class","=="],["Var","s"]],[["Class","isWhite"],["Var","s"]]]],"fe_representation":"spsymbol :: s -> CParser s s t | == s & isWhite s"},["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",54],["Just",160],"identifier"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","CParser",[["Type","Char",[]],["Type","String",[]],["Var","t"]]],[]],"fe_representation":"identifier :: CParser Char String t"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",53],["Just",156],"int"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","CParser",[["Type","Char",[]],["Type","Int",[]],["Var","t"]]],[]],"fe_representation":"int :: CParser Char Int t"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",59],["Just",166],"sp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]],[[["Class","isWhite"],["Var","s"]]]],"fe_representation":"sp :: (CParser s r t) -> CParser s r t | isWhite s"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",64],["Just",175],"parseSequence"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","a"],["Var","b"],["Var","c"]]],["Type","CParser",[["Var","a"],["Var","d"],["Var","c"]]]],["Type","CParser",[["Var","a"],["Type","_List",[["Var","b"]]],["Var","c"]]],[]],"fe_representation":"parseSequence :: (CParser a b c) (CParser a d c) -> CParser a [b] c"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",61],["Just",172],"sptoken"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","s"]]]],["Type","CParser",[["Var","s"],["Type","_List",[["Var","s"]]],["Var","t"]]],[[["Class","=="],["Var","s"]],[["Class","isWhite"],["Var","s"]]]],"fe_representation":"sptoken :: [s] -> CParser s [s] t | == s & isWhite s"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",65],["Just",179],"parseChainLeft"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","a"],["Var","b"],["Var","c"]]],["Type","CParser",[["Var","a"],["Func",[["Var","b"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Var","c"]]]],["Type","CParser",[["Var","a"],["Var","b"],["Var","c"]]],[]],"fe_representation":"parseChainLeft :: (CParser a b c) (CParser a (b -> b -> b) c) -> CParser a b c"},["Tip"],["Tip"]]]],["Bin",11,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",105],["Just",144],"-&+"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]],["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],[]],"fe_priority":["LeftAssoc",8],"fe_representation":"(-&+) infixl 8 :: (CParser s v t) (CParser s u t) -> CParser s u t"},["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",103],["Just",138],"@>"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Var","u"],[]],["Type","CParser",[["Var","s"],["Var","r"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]],[]],"fe_priority":["NoAssoc",7],"fe_representation":"(@>) infix 7 :: (r -> u) (CParser s r t) -> CParser s u t"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",68],["Just",193],"choice"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","CParser",[["Var","a"],["Var","b"],["Var","c"]]]]]],["Type","CParser",[["Var","a"],["Var","b"],["Var","c"]]],[]],"fe_representation":"choice :: ![CParser a b c] -> CParser a b c"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",104],["Just",141],"+&+"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Func",[["Var","u"]],["Var","v"],[]],["Var","t"]]],["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"(+&+) infixl 6 :: (CParser s (u -> v) t) (CParser s u t) -> CParser s v t"},["Tip"],["Tip"]]],["Bin",7,["Location","Platform","Text.Parsers.MetarDemo.MetarParser",["Just",14],["Just",15],"testMetar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_List",[["Type","Char",[]]]]]]],["Type","Result",[["Type","MetarData",[]]]],[]],"fe_representation":"testMetar :: [[Char]] -> Result MetarData"},["Bin",3,["Location","Platform","Text.Parsers.MetarDemo.MetarParser",["Just",4],["Just",5],"wordify"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"wordify :: ![a] -> [[a]]"},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",106],["Just",147],"+&-"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]],["Type","CParser",[["Var","s"],["Var","u"],["Var","t"]]]],["Type","CParser",[["Var","s"],["Var","v"],["Var","t"]]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"(+&-) infixl 6 :: (CParser s v t) (CParser s u t) -> CParser s v t"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.MetarDemo.MetarParser",["Just",6],["Just",302],"metar"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","_List",[["Type","Char",[]]]],["Type","MetarData",[]],["Var","t"]]],[]],"fe_representation":"metar :: Parser [Char] MetarData t"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.Simple.Chars",["Just",6],["Just",14],"pLower"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pLower :: Parser Char Char"},["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",5],["Just",11],"pUpper"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pUpper :: Parser Char Char"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",7],["Just",17],"pAlpha"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pAlpha :: Parser Char Char"},["Tip"],["Tip"]]]]]],["Bin",15,["Location","Platform","Text.Parsers.Simple.Chars",["Just",17],["Just",44],"pPOpen"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pPOpen :: Parser Char Char"},["Bin",7,["Location","Platform","Text.Parsers.Simple.Chars",["Just",12],["Just",32],"pSpace"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pSpace :: Parser Char Char"},["Bin",3,["Location","Platform","Text.Parsers.Simple.Chars",["Just",10],["Just",26],"pOctDigit"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pOctDigit :: Parser Char Char"},["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",9],["Just",23],"pDigit"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pDigit :: Parser Char Char"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",11],["Just",29],"pHexDigit"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pHexDigit :: Parser Char Char"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.Simple.Chars",["Just",14],["Just",38],"pPrint"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pPrint :: Parser Char Char"},["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",13],["Just",35],"pControl"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pControl :: Parser Char Char"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",15],["Just",41],"pAscii"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pAscii :: Parser Char Char"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Text.Parsers.Simple.Chars",["Just",21],["Just",56],"pCOpen"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pCOpen :: Parser Char Char"},["Bin",3,["Location","Platform","Text.Parsers.Simple.Chars",["Just",19],["Just",50],"pBOpen"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pBOpen :: Parser Char Char"},["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",18],["Just",47],"pPClose"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pPClose :: Parser Char Char"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",20],["Just",53],"pBClose"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pBClose :: Parser Char Char"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.Simple.Chars",["Just",23],["Just",62],"pComma"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pComma :: Parser Char Char"},["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",22],["Just",59],"pCClose"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pCClose :: Parser Char Char"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",24],["Just",65],"pSemiCol"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pSemiCol :: Parser Char Char"},["Tip"],["Tip"]]]]]],["Bin",23,["Location","Platform","Text.Parsers.Simple.Core",["Just",27],["Just",46],"pError"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Error",[]]],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_representation":"pError :: Error -> Parser t a"},["Bin",11,["Location","Platform","Text.Parsers.Simple.Chars",["Just",29],["Just",80],"pPipe"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pPipe :: Parser Char Char"},["Bin",3,["Location","Platform","Text.Parsers.Simple.Chars",["Just",27],["Just",74],"pEq"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pEq :: Parser Char Char"},["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",26],["Just",71],"pGt"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pGt :: Parser Char Char"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",28],["Just",77],"pAmp"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pAmp :: Parser Char Char"},["Tip"],["Tip"]]],["Bin",7,["Location","Platform","Text.Parsers.Simple.Core",["Just",24],["Just",43],"pFail"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_representation":"pFail :: Parser t a"},["Bin",4,["Location","Platform","Text.Parsers.Simple.Chars",["Just",31],["Just",86],"pUnderscore"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pUnderscore :: Parser Char Char"},["Bin",1,["Location","Platform","Text.Parsers.Simple.Chars",["Just",30],["Just",83],"pDash"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Type","Char",[]]]],[]],"fe_representation":"pDash :: Parser Char Char"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Text.Parsers.Simple.Core",["Just",21],["Just",40],"runParser"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","a"]]],["Type","_List",[["Var","t"]]]],["Type","_Tuple2",[["Type","_List",[["Type","_Tuple2",[["Var","a"],["Type","_List",[["Var","t"]]]]]]],["Type","_List",[["Type","Error",[]]]]]],[]],"fe_representation":"runParser :: (Parser t a) [t] -> ([(a,[t])],[Error])"},["Bin",1,["Location","Platform","Text.Parsers.Simple.Core",["Just",20],["Just",32],"parse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","a"]]],["Type","_List",[["Var","t"]]]],["Type","Either",[["Type","_List",[["Type","Error",[]]]],["Var","a"]]],[]],"fe_representation":"parse :: (Parser t a) [t] -> Either [Error] a"},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Text.Parsers.Simple.Core",["Just",25],["Just",52],"pYield"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_representation":"pYield :: a -> Parser t a"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.Simple.Core",["Just",26],["Just",55],"pSatisfy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","t"]],["Type","Bool",[]],[]]],["Type","Parser",[["Var","t"],["Var","t"]]],[]],"fe_representation":"pSatisfy :: (t -> Bool) -> Parser t t"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Platform","Text.Parsers.Simple.Core",["Just",37],["Just",106],"<:>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","r"]]],["Type","Parser",[["Var","s"],["Type","_List",[["Var","r"]]]]]],["Type","Parser",[["Var","s"],["Type","_List",[["Var","r"]]]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<:>) infixr 6 :: (Parser s r) (Parser s [r]) -> Parser s [r]"},["Bin",5,["Location","Platform","Text.Parsers.Simple.Core",["Just",32],["Just",93],"$>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","b"]]],["Var","a"]],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"($>) infixl 6 :: (Parser t b) a -> Parser t a"},["Bin",2,["Location","Platform","Text.Parsers.Simple.Core",["Just",30],["Just",49],"@!"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","a"]]],["Type","Error",[]]],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_priority":["RightAssoc",4],"fe_representation":"(@!) infixr 4 :: (Parser t a) Error -> Parser t a"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.Simple.Core",["Just",31],["Just",90],"<$"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Parser",[["Var","t"],["Var","b"]]]],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"(<$) infixl 6 :: a (Parser t b) -> Parser t a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.Parsers.Simple.Core",["Just",34],["Just",96],"<<|>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","a"]]],["Type","Parser",[["Var","t"],["Var","a"]]]],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_priority":["RightAssoc",4],"fe_representation":"(<<|>) infixr 4 :: (Parser t a) (Parser t a) -> Parser t a"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.Simple.Core",["Just",35],["Just",103],"<|>>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","a"]]],["Type","Parser",[["Var","t"],["Var","a"]]]],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_priority":["RightAssoc",4],"fe_representation":"(<|>>) infixr 4 :: (Parser t a) (Parser t a) -> Parser t a"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.Parsers.Simple.Core",["Just",41],["Just",115],"pOptional"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","r"]]],["Func",[["Var","r"]],["Type","Parser",[["Var","s"],["Var","r"]]],[]]],["Type","Parser",[["Var","s"],["Var","r"]]],[]],"fe_representation":"pOptional :: (Parser s r) (r -> Parser s r) -> Parser s r"},["Bin",2,["Location","Platform","Text.Parsers.Simple.Core",["Just",39],["Just",109],"pMany"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Type","_List",[["Var","r"]]]]],[]],"fe_representation":"pMany :: (Parser s r) -> Parser s [r]"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.Simple.Core",["Just",40],["Just",112],"pSome"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Type","_List",[["Var","r"]]]]],[]],"fe_representation":"pSome :: (Parser s r) -> Parser s [r]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.Parsers.Simple.Core",["Just",42],["Just",118],"pOneOf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","t"]]]],["Type","Parser",[["Var","t"],["Var","t"]]],[[["Class","=="],["Var","t"]]]],"fe_representation":"pOneOf :: [t] -> Parser t t | == t"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.Simple.Core",["Just",43],["Just",121],"pChainl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","a"]]],["Type","Parser",[["Var","t"],["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]]]],["Var","a"]],["Type","Parser",[["Var","t"],["Var","a"]]],[]],"fe_representation":"pChainl :: (Parser t a) (Parser t (a -> a -> a)) a -> Parser t a"},["Tip"],["Tip"]]]]]]]],["Bin",106,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",66],["Nothing"],"@>"],{"fe_kind":["Macro"],"fe_priority":["NoAssoc",7],"fe_representation":"(@>) infix 7\n(@>) f p :== yield f <++> p"},["Bin",44,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",12],["Nothing"],"&>"],{"fe_kind":["Macro"],"fe_priority":["RightAssoc",6],"fe_representation":"(&>) infixr 6\n(&>) p1 p2 :== p1 <&> const p2"},["Bin",29,["Location","Platform","Text.Parsers.ZParsers.ParserLanguage",["Just",7],["Just",13],"andWithinThat"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","String",[]],[]],"fe_representation":"andWithinThat :: String"},["Bin",7,["Location","Platform","Text.Parsers.Simple.Core",["Just",47],["Just",136],"pSepBy1"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","a"]]],["Type","Parser",[["Var","t"],["Var","s"]]]],["Type","Parser",[["Var","t"],["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"pSepBy1 :: (Parser t a) (Parser t s) -> Parser t [a]"},["Bin",2,["Location","Platform","Text.Parsers.Simple.Core",["Just",45],["Just",130],"pToken"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","t"]],["Type","Parser",[["Var","t"],["Var","t"]]],[[["Class","=="],["Var","t"]]]],"fe_representation":"pToken :: t -> Parser t t | == t"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.Simple.Core",["Just",46],["Just",133],"pSepBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","t"],["Var","a"]]],["Type","Parser",[["Var","t"],["Var","s"]]]],["Type","Parser",[["Var","t"],["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"pSepBy :: (Parser t a) (Parser t s) -> Parser t [a]"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Text.Parsers.ZParsers.ParserLanguage",["Just",5],["Just",7],"noOptions"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","String",[]],[]],"fe_representation":"noOptions :: String"},["Bin",2,["Location","Platform","Text.Parsers.Simple.Core",["Just",48],["Just",139],"pList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Parser",[["Var","t"],["Var","a"]]]]]],["Type","Parser",[["Var","t"],["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"pList :: [Parser t a] -> Parser t [a]"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParserLanguage",["Just",4],["Just",4],"cantAnalyseAsOf"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","String",[]],[]],"fe_representation":"cantAnalyseAsOf :: String"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParserLanguage",["Just",6],["Just",10],"optionsToSolve"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","String",[]],[]],"fe_representation":"optionsToSolve :: String"},["Tip"],["Tip"]]]],["Bin",21,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",39],["Just",77],"errorToString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SymbolTypes",[]],["Type","Rose",[["Type","_Tuple2",[["Type","String",[]],["Type","_List",[["Type","SugPosition",[]]]]]]]],["Type","_List",[["Type","SugPosition",[]]]]],["Type","String",[]],[]],"fe_representation":"errorToString :: SymbolTypes (Rose (String,[SugPosition])) [SugPosition] -> String"},["Bin",15,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",16],["Just",27],"choice"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"choice :: [Parser s t r] -> Parser s t r"},["Bin",9,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",11],["Just",18],"letter"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Var","a"],["Type","Char",[]]]],[]],"fe_representation":"letter :: Parser Char a Char"},["Bin",6,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",7],["Just",9],"number`"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Var","a"],["Type","Int",[]]]],[]],"fe_representation":"number` :: Parser Char a Int"},["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParserLanguage",["Just",9],["Just",19],"endOf"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","String",[]],[]],"fe_representation":"endOf :: String"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParserLanguage",["Just",8],["Just",16],"sliceOf"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","String",[]],[]],"fe_representation":"sliceOf :: String"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",6],["Just",6],"number"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Var","a"],["Type","Int",[]]]],[]],"fe_representation":"number :: Parser Char a Int"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",9],["Just",12],"digit"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Var","a"],["Type","Char",[]]]],[]],"fe_representation":"digit :: Parser Char a Char"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",10],["Just",15],"hexDigit"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Var","a"],["Type","Char",[]]]],[]],"fe_representation":"hexDigit :: Parser Char a Char"},["Tip"],["Tip"]]]],["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",12],["Just",21],"alphaNum"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Var","a"],["Type","Char",[]]]],[]],"fe_representation":"alphaNum :: Parser Char a Char"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",14],["Just",24],"oneOf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Char",[]]]]],["Type","Parser",[["Type","Char",[]],["Var","a"],["Type","Char",[]]]],[]],"fe_representation":"oneOf :: [Char] -> Parser Char a Char"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",29],["Just",42],"tokenH"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Type","_List",[["Var","s"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","s"]]]]],[]],[[["Class","=="],["Var","s"]],[["Class","toChar"],["Var","s"]]]],"fe_representation":"tokenH :: [s] -> Parser s t [s] | == s & toChar s"},["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",19],["Just",30],"ds"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[[["Class","space"],["Var","s"]]]],"fe_representation":"ds :: (Parser s t r) -> Parser s t r | space s"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",26],["Just",39],"symbolH"],{"fe_kind":["Function"],"fe_type":["Func",[],["Func",[["Var","s"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","s"]]],[]],[[["Class","=="],["Var","s"]],[["Class","toString"],["Var","s"]]]],"fe_representation":"symbolH :: s -> Parser s t s | == s & toString s"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",31],["Just",45],"identifier"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Type","Char",[]],["Var","t"],["Type","String",[]]]],[]],"fe_representation":"identifier :: Parser Char t String"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",35],["Just",53],"lineAndColumn"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Char",[]]]],["Type","Int",[]],["Type","Int",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],[]],"fe_representation":"lineAndColumn :: [Char] Int Int -> (Int,Int)"},["Tip"],["Tip"]]]]],["Bin",5,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",46],["Just",87],"errorToStrings"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SymbolTypes",[]],["Type","Rose",[["Type","_Tuple2",[["Type","String",[]],["Type","_List",[["Type","SugPosition",[]]]]]]]],["Type","_List",[["Type","SugPosition",[]]]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":"errorToStrings :: SymbolTypes (Rose (String,[SugPosition])) [SugPosition] -> [String]"},["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",41],["Just",81],"simpleErrorToString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SymbolTypes",[]],["Type","Rose",[["Type","_Tuple2",[["Type","String",[]],["Type","_List",[["Type","SugPosition",[]]]]]]]],["Type","_List",[["Type","SugPosition",[]]]]],["Type","String",[]],[]],"fe_representation":"simpleErrorToString :: SymbolTypes (Rose (String,[SugPosition])) [SugPosition] -> String"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",44],["Just",72],"flattenSep"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Var","x"]]]],["Type","String",[]],[[["Class","toString"],["Var","x"]]]],"fe_representation":"flattenSep :: String ![x] -> String | toString x"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",48],["Just",92],"errorToFormat"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SymbolTypes",[]],["Type","Rose",[["Type","_Tuple2",[["Type","String",[]],["Type","_List",[["Type","SugPosition",[]]]]]]]],["Type","_List",[["Type","SugPosition",[]]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","String",[]]]]]],[]],"fe_representation":"errorToFormat :: SymbolTypes (Rose (String,[SugPosition])) [SugPosition] -> [(Int,String)]"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",8],["Just",11],"<&"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r`"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<&) infixr 6 :: (Parser s t r) (Parser s t r`) -> Parser s t r"},["Tip"],["Tip"]]]]]],["Bin",14,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",42],["Just",41],"<+:>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Func",[["Type","_List",[["Var","r"]]]],["Type","_List",[["Var","r"]]],[]]]],[]],"fe_representation":"<+:> :: (Parser s t r) -> Parser s t ([r] -> [r])"},["Bin",7,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",26],["Just",26],"count"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","r"]]]]],[]],"fe_representation":"count :: !Int (Parser s t r) -> Parser s t [r]"},["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",18],["Just",20],"<:&>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","r"]]]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","r"]]]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<:&>) infixr 6 :: (Parser s t r) (Parser s t [r]) -> Parser s t [r]"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",15],["Just",17],"<&&>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_Tuple2",[["Var","r"],["Var","u"]]]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<&&>) infixr 6 :: (Parser s t r) (Parser s t u) -> Parser s t (r,u)"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",22],["Just",23],"<:&:>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Type","Parser",[["Var","s"],["Var","t"],["Func",[["Type","_List",[["Var","r"]]]],["Type","_List",[["Var","r"]]],[]]]]],["Type","Parser",[["Var","s"],["Var","t"],["Func",[["Type","_List",[["Var","r"]]]],["Type","_List",[["Var","r"]]],[]]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<:&:>) infixr 6 :: (Parser s t r) (Parser s t ([r] -> [r])) -> Parser s t ([r] -> [r])"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",35],["Just",35],"<*:>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Func",[["Type","_List",[["Var","r"]]]],["Type","_List",[["Var","r"]]],[]]]],[]],"fe_representation":"<*:> :: (Parser s t r) -> Parser s t ([r] -> [r])"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",31],["Just",32],"<.*>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","r"]]]]],[]],"fe_representation":"<.*> :: (Parser s t r) -> Parser s t [r]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",38],["Just",38],"<+>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","r"]]]]],[]],"fe_representation":"<+> :: (Parser s t r) -> Parser s t [r]"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",56],["Just",53],"<!+:>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Func",[["Type","_List",[["Var","r"]]]],["Type","_List",[["Var","r"]]],[]]]],[]],"fe_representation":"<!+:> :: (Parser s t r) -> Parser s t ([r] -> [r])"},["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",49],["Just",47],"<!*:>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Func",[["Type","_List",[["Var","r"]]]],["Type","_List",[["Var","r"]]],[]]]],[]],"fe_representation":"<!*:> :: (Parser s t r) -> Parser s t ([r] -> [r])"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",45],["Just",44],"<!*>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","r"]]]]],[]],"fe_representation":"<!*> :: (Parser s t r) -> Parser s t [r]"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",52],["Just",50],"<!+>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","r"]]]]],[]],"fe_representation":"<!+> :: (Parser s t r) -> Parser s t [r]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",59],["Just",56],"<?>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Func",[["Var","r"]],["Var","u"],[]],["Var","u"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]],[]],"fe_representation":"<?> :: (Parser s t r) (r -> u) u -> Parser s t u"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",62],["Just",59],"<!?>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Func",[["Var","r"]],["Var","u"],[]],["Var","u"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]],[]],"fe_representation":"<!?> :: (Parser s t r) (r -> u) u -> Parser s t u"},["Tip"],["Tip"]]]]]],["Bin",61,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",136],["Just",283],"<++->"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Func",[["Var","r"]],["Var","u"],[]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","ArrowSeq",[["Var","s"],["Var","u"],["Var","r"],["Var","t"]]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"<++-> infixl 6 :: (Parser s t (r -> u)) (Parser s t r) -> ArrowSeq s u r t"},["Bin",37,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",19],["Just",75],"At"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","SugPosition",[]],[]],"fe_representation":"At :: Int -> SugPosition"},["Bin",10,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",85],["Just",95],"skipOver"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]],[]],"fe_representation":"skipOver :: (Parser s t r) -> Parser s t u"},["Bin",5,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",79],["Just",87],"grazeOnce"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","s"]]]]],[]],"fe_representation":"grazeOnce :: (Parser s t r) -> Parser s t [s]"},["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",72],["Just",76],"grazeTo"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","s"]]]]],[]],"fe_representation":"grazeTo :: (Parser s t r) -> Parser s t [s]"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",69],["Just",65],"<@"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Func",[["Var","r"]],["Var","r`"],[]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r`"]]],[]],"fe_priority":["LeftAssoc",5],"fe_representation":"(<@) infixl 5 :: (Parser s t r) (r -> r`) -> Parser s t r`"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",76],["Just",80],"grazeOver"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","s"]]]]],[]],"fe_representation":"grazeOver :: (Parser s t r) -> Parser s t [s]"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",82],["Just",90],"skipTo"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]],[]],"fe_representation":"skipTo :: (Parser s t r) -> Parser s t u"},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",92],["Just",103],"scrape"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Func",[["Var","r"]],["Type","Int",[]],[]],["Func",[["Var","r"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","v"]]],[]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","v"]]],[]],"fe_representation":"scrape :: (Parser s t r) (r -> Int) (r -> Parser s t v) -> Parser s t v"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersDerived",["Just",88],["Just",100],"skipOnce"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]],[]],"fe_representation":"skipOnce :: (Parser s t r) -> Parser s t u"},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",15],["Just",40],"Slice"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","Int",[]]],["Type","SymbolType",[]],[]],"fe_representation":"Slice :: String Int -> SymbolType"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",15],["Just",40],"Whole"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SymbolType",[]],[]],"fe_representation":"Whole :: String -> SymbolType"},["Tip"],["Tip"]]]]],["Bin",26,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",92],["Just",246],"getParsable"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Var","s"],["Var","t"],["Type","Parsable",[["Var","s"]]]]],[]],"fe_representation":"getParsable :: Parser s t (Parsable s)"},["Bin",18,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",65],["Just",205],"gmList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Gram",[["Var","f"],["Var","a"]]]],["Type","Gram",[["Var","f"],["Type","_List",[["Var","a"]]]]],[[["Class","Functor"],["Var","f"]]]],"fe_representation":"gmList :: (Gram f a) -> Gram f [a] | Functor f"},["Bin",10,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",51],["Just",155],"<||>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Gram",[["Var","f"],["Func",[["Var","b"]],["Var","a"],[]]]],["Type","Gram",[["Var","f"],["Var","b"]]]],["Type","Gram",[["Var","f"],["Var","a"]]],[[["Class","Functor"],["Var","f"]]]],"fe_priority":["LeftAssoc",4],"fe_representation":"(<||>) infixl 4 :: (Gram f (b -> a)) (Gram f b) -> Gram f a | Functor f"},["Bin",6,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",39],["Just",112],"Bind"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Cons","f",[["Var","b"]]],["Func",[["Var","b"]],["Type","Gram",[["Var","f"],["Var","a"]]],[]]],["Type","PAlt",[["Var","f"],["Var","a"]]],[]],"fe_representation":"Bind :: (f b) (b -> Gram f a) -> PAlt f a"},["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",19],["Just",75],"EndAt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","SugPosition",[]],[]],"fe_representation":"EndAt :: Int -> SugPosition"},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",37],["Just",110],"Gram"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","PAlt",[["Var","f"],["Var","a"]]]]],["Type","Maybe",[["Var","a"]]]],["Type","Gram",[["Var","f"],["Var","a"]]],[]],"fe_representation":"Gram :: [PAlt f a] (Maybe a) -> Gram f a"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",43],["Just",133],"mkG"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]]],["Type","Gram",[["Var","f"],["Var","a"]]],[[["Class","Splittable"],["Var","f"]],[["Class","Functor"],["Var","f"]]]],"fe_representation":"mkG :: (f a) -> Gram f a | Splittable f & Functor f"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",39],["Just",112],"Seq"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Cons","f",[["Func",[["Var","b"]],["Var","a"],[]]]],["Type","Gram",[["Var","f"],["Var","b"]]]],["Type","PAlt",[["Var","f"],["Var","a"]]],[]],"fe_representation":"Seq :: (f (b -> a)) (Gram f b) -> PAlt f a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",49],["Just",144],"<<||>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Gram",[["Var","f"],["Func",[["Var","b"]],["Var","a"],[]]]],["Type","Gram",[["Var","f"],["Var","b"]]]],["Type","Gram",[["Var","f"],["Var","a"]]],[[["Class","Functor"],["Var","f"]]]],"fe_priority":["LeftAssoc",4],"fe_representation":"(<<||>) infixl 4 :: (Gram f (b -> a)) (Gram f b) -> Gram f a | Functor f"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",61],["Just",191],"sepBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Gram",[["Var","f"],["Var","a"]]],["Cons","f",[["Var","b"]]]],["Cons","f",[["Var","a"]]],[[["Class","Monad"],["Var","f"]],[["Class","Applicative"],["Var","f"]],[["Class","Alternative"],["Var","f"]]]],"fe_representation":"sepBy :: (Gram f a) (f b) -> f a | Monad f & Applicative f & Alternative f"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",59],["Just",185],"mkP"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Gram",[["Var","f"],["Var","a"]]]],["Cons","f",[["Var","a"]]],[[["Class","Monad"],["Var","f"]],[["Class","Applicative"],["Var","f"]],[["Class","Alternative"],["Var","f"]]]],"fe_representation":"mkP :: (Gram f a) -> f a | Monad f & Applicative f & Alternative f"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",63],["Just",194],"insertSep"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","b"]]],["Type","Gram",[["Var","f"],["Var","a"]]]],["Type","Gram",[["Var","f"],["Var","a"]]],[[["Class","Monad"],["Var","f"]],[["Class","Applicative"],["Var","f"]],[["Class","Alternative"],["Var","f"]]]],"fe_representation":"insertSep :: (f b) (Gram f a) -> Gram f a | Monad f & Applicative f & Alternative f"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",79],["Just",222],"symbol"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","s"]]],[[["Class","=="],["Var","s"]]]],"fe_representation":"symbol :: s -> Parser s t s | == s"},["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",73],["Just",211],"yield"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","r"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"yield :: r -> Parser s t r"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",70],["Just",208],"fail"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"fail :: Parser s t r"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",76],["Just",217],"anySymbol"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Var","s"],["Var","t"],["Var","s"]]],[]],"fe_representation":"anySymbol :: Parser s t s"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",85],["Just",233],"getPosition"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Type","Int",[]]]]]],[]],"fe_representation":"getPosition :: Parser s t [Int]"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",82],["Just",228],"satisfy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Type","Bool",[]],[]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","s"]]],[]],"fe_representation":"satisfy :: (s -> Bool) -> Parser s t s"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",88],["Just",236],"advancePosition"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"advancePosition :: !Int -> Parser s t r"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",109],["Just",288],"<!>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_priority":["RightAssoc",4],"fe_representation":"(<!>) infixr 4 :: (Parser s t r) (Parser s t r) -> Parser s t r"},["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",98],["Just",253],"token"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","s"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Type","_List",[["Var","s"]]]]],[[["Class","=="],["Var","s"]]]],"fe_representation":"token :: [s] -> Parser s t [s] | == s"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",95],["Just",249],"setParsable"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parsable",[["Var","s"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"setParsable :: (Parsable s) -> Parser s t r"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",101],["Just",261],"epsilon"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"epsilon :: Parser s t r"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",115],["Just",279],"<++>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Func",[["Var","r"]],["Var","u"],[]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"(<++>) infixl 6 :: (Parser s t (r -> u)) (Parser s t r) -> Parser s t u"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",112],["Just",276],"<&>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]],["Func",[["Var","u"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","v"]]],[]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","v"]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"(<&>) infixr 6 :: (Parser s t u) (u -> Parser s t v) -> Parser s t v"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",133],["Just",282],"<&->"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]],["Func",[["Var","u"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]]],["Type","MonadicSeq",[["Var","s"],["Var","r"],["Var","u"],["Var","t"]]],[]],"fe_priority":["RightAssoc",6],"fe_representation":"<&-> infixr 6 :: (Parser s t u) (u -> Parser s t r) -> MonadicSeq s r u t"},["Tip"],["Tip"]]]]]],["Bin",23,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",190],["Just",441],":>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_priority":["LeftAssoc",8],"fe_representation":"(:>) infixl 8 :: String (Parser s t r) -> Parser s t r"},["Bin",9,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",171],["Just",380],"drill"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","r"],["Var","r"]]],["Type","String",[]]],["Type","Parser",[["Type","_List",[["Var","s"]]],["Var","t"],["Var","r"]]],[]],"fe_representation":"drill :: (Parser s r r) String -> Parser [s] t r"},["Bin",5,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",155],["Just",352],"dropCheck"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","s"]],["Type","Bool",[]],[]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"dropCheck :: (s -> Bool) (Parser s t r) -> Parser s t r"},["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",145],["Just",324],"checkIf"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],["Func",[["Var","r"]],["Type","Bool",[]],[]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_priority":["NoAssoc",7],"fe_representation":"(checkIf) infix 7 :: (Parser s t r) (r -> Bool) -> Parser s t r"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",142],["Just",309],"first"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"first :: (Parser s t r) -> Parser s t r"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",152],["Just",349],"rewind"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"rewind :: (Parser s t r) -> Parser s t r"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",158],["Just",364],"atMost"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"atMost :: !Int (Parser s t r) -> Parser s t r"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",178],["Just",415],"minResultBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Func",[["Var","r"]],["Type","Bool",[]],[]],[]],["Type","Parser",[["Var","s"],["Var","r"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"minResultBy :: (r -> r -> Bool) (Parser s r r) -> Parser s t r"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",175],["Just",400],"sortResultBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Func",[["Var","r"]],["Type","Bool",[]],[]],[]],["Type","Parser",[["Var","s"],["Var","r"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"sortResultBy :: (r -> r -> Bool) (Parser s r r) -> Parser s t r"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",181],["Just",424],"longest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","r"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_representation":"longest :: (Parser s r r) -> Parser s t r"},["Tip"],["Tip"]]]],["Bin",13,["Location","Platform","Text.Show",["Just",131],["Just",222],"shows"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","ShowS",[]],[[["Class","Show"],["Var","a"]]]],"fe_representation":"shows :: a -> ShowS | Show a"},["Bin",7,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",201],["Just",453],"RoseLeaf"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","RoseNode",[["Var","a"]]],[]],"fe_representation":"RoseLeaf :: RoseNode a"},["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",197],["Just",451],"Err"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SymbolTypes",[]],["Type","Rose",[["Type","_Tuple2",[["Type","String",[]],["Type","_List",[["Type","SugPosition",[]]]]]]]],["Type","_List",[["Type","SugPosition",[]]]]],["Type","Result",[["Var","r"]]],[]],"fe_representation":"Err :: SymbolTypes (Rose (String, [SugPosition])) [SugPosition] -> Result r"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",193],["Just",446],":=>"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Type","String",[]],[]],["Func",[["Var","r"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]]],["Func",[["Var","r"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],[]],"fe_priority":["LeftAssoc",8],"fe_representation":"(:=>) infixl 8 :: (r -> String) (r -> Parser s t r) -> r -> Parser s t r"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",197],["Just",451],"Succ"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Var","r"]]]],["Type","Result",[["Var","r"]]],[]],"fe_representation":"Succ :: [r] -> Result r"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",210],["Just",479],"parse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Parser",[["Var","s"],["Var","r"],["Var","r"]]],["Type","_List",[["Var","s"]]],["Type","String",[]],["Type","String",[]]],["Type","Result",[["Var","r"]]],[]],"fe_representation":"parse :: !(Parser s r r) [s] String String -> Result r"},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",201],["Just",453],"RoseTwig"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"],["Type","Rose",[["Var","a"]]]],["Type","RoseNode",[["Var","a"]]],[]],"fe_representation":"RoseTwig :: a (Rose a) -> RoseNode a"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Show",["Just",124],["Just",212],"show_tuple"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","ShowS",[]]]]],["Type","ShowS",[]],[]],"fe_representation":"show_tuple :: [ShowS] -> ShowS"},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Text.Show",["Just",143],["Just",237],"showParen"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Type","ShowS",[]]],["Type","ShowS",[]],[]],"fe_representation":"showParen :: Bool ShowS -> ShowS"},["Bin",2,["Location","Platform","Text.Show",["Just",135],["Just",227],"showChar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","ShowS",[]],[]],"fe_representation":"showChar :: Char -> ShowS"},["Tip"],["Bin",1,["Location","Platform","Text.Show",["Just",139],["Just",232],"showString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","ShowS",[]],[]],"fe_representation":"showString :: String -> ShowS"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.Show",["Just",145],["Just",240],"showSpace"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ShowS",[]],[]],"fe_representation":"showSpace :: ShowS"},["Tip"],["Bin",1,["Location","Platform","Text.Show",["Just",154],["Just",250],"showLitChar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","ShowS",[]],[]],"fe_representation":"showLitChar :: Char -> ShowS"},["Tip"],["Tip"]]]]]]]]]]],["Bin",2221,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"lastEvent"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParallelTaskState",[]]],["Type","TaskTime",[]],[]],"fe_representation":".lastEvent :: ParallelTaskState -> TaskTime"},["Bin",1182,["Location","iTasks","iTasks.Extensions.Document",["Just",8],["Nothing"],"size"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Document",[]]],["Type","Int",[]],[]],"fe_representation":".size :: Document -> Int","fe_documentation":["FunctionDoc",["Just","The filesize in bytes"],[],[],["Nothing"]]},["Bin",744,["Location","TCPIP","ostcp",["Just",17],["Just",44],"os_connectrequestavailable"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Var","env"]]]],[]],"fe_representation":"os_connectrequestavailable :: !EndpointRef !*env -> (!Bool,!*env)"},["Bin",553,["Location","StdEnv","StdFile",["Just",145],["Just",356],"sfreadr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","File",[]]],["Type","_Tuple3",[["Type","Bool",[]],["Type","Real",[]],["Type","File",[]]]],[]],"fe_representation":"sfreadr :: !File -> (!Bool,!Real,!File)"},["Bin",253,["Location","Sapl","Sapl.SaplStruct",["Just",34],["Nothing"],"TypedVar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplVar",[]],["Type","SaplType",[]]],["Type","SaplTypedVar",[]],[]],"fe_representation":"TypedVar :: SaplVar SaplType -> SaplTypedVar"},["Bin",120,["Location","Platform","Text.XML",["Just",19],["Nothing"],"XMLQName"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Maybe",[["Type","XMLNamespacePrefix",[]]]],["Type","XMLName",[]]],["Type","XMLQName",[]],[]],"fe_representation":"XMLQName :: (Maybe XMLNamespacePrefix) XMLName -> XMLQName"},["Bin",59,["Location","Platform","Text.URI",["Just",61],["Just",103],"isRelative"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","URI",[]]],["Type","Bool",[]],[]],"fe_representation":"isRelative :: URI -> Bool"},["Bin",30,["Location","Platform","Text.URI",["Just",17],["Nothing"],"uriScheme"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","URI",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".uriScheme :: URI -> Maybe String"},["Bin",14,["Location","Platform","Text.StringAppender",["Just",25],["Just",13],"append"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StringAppender",[]],["Var","a"]],["Type","StringAppender",[]],[[["Class","toString"],["Var","a"]]]],"fe_representation":"append :: StringAppender a -> StringAppender | toString a","fe_documentation":["FunctionDoc",["Just","Put an arbitrary value (for which toString has an instance) to the end of the stream."],["Output stream (StringAppender instance)","The value to be printed"],[],["Just","A StringAppender instance"]]},["Bin",6,["Location","Platform","Text.Show",["Just",180],["Just",298],"protectEsc"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],["Type","ShowS",[]]],["Type","ShowS",[]],[]],"fe_representation":"protectEsc :: (Char -> Bool) ShowS -> ShowS"},["Bin",2,["Location","Platform","Text.Show",["Just",170],["Just",282],"showMultiLineString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":"showMultiLineString :: String -> [String]"},["Tip"],["Bin",1,["Location","Platform","Text.Show",["Just",178],["Just",295],"isDec"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isDec :: Char -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Show",["Just",184],["Just",312],"showSignedInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]]],["Type","ShowS",[]],[]],"fe_representation":"showSignedInt :: Int Int -> ShowS"},["Bin",1,["Location","Platform","Text.Show",["Just",182],["Just",304],"asciiTab"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","_Array",[["Type","String",[]]]],[]],"fe_representation":"asciiTab :: {String}"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.StringAppender",["Just",17],["Just",10],"newAppender"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","StringAppender",[]],[]],"fe_representation":"newAppender :: StringAppender","fe_documentation":["FunctionDoc",["Just","Initializes a new appender."],[],[],["Just","A StringAppender instance"]]},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Text.URI",["Just",17],["Nothing"],"uriPath"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","URI",[]]],["Type","String",[]],[]],"fe_representation":".uriPath :: URI -> String"},["Bin",3,["Location","Platform","Text.StringAppender",["Just",42],["Just",34],"intoFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StringAppender",[]],["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Type","_Unit",[]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"intoFile :: !StringAppender !*File -> (!MaybeError FileError (),!*File)","fe_documentation":["FunctionDoc",["Just","Write StringAppender into a file"],["A StringAppender instance","The File"],[],["Just","(Error if any, the File)"]]},["Bin",1,["Location","Platform","Text.StringAppender",["Just",34],["Just",29],"joinList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Var","a"]]],["Type","StringAppender",[]]],["Type","StringAppender",[]],[[["Class","toString"],["Var","a"]]]],"fe_representation":"joinList :: !String [a] StringAppender -> StringAppender | toString a","fe_documentation":["FunctionDoc",["Just","Append a list of values to the output stream using a separator string between the elements"],["Separator string","The list of values","Output stream (StringAppender instance)"],[],["Just","A StringAppender instance"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.URI",["Just",17],["Nothing"],"uriFragment"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","URI",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".uriFragment :: URI -> Maybe String"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.URI",["Just",17],["Nothing"],"uriQuery"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","URI",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".uriQuery :: URI -> Maybe String"},["Bin",1,["Location","Platform","Text.URI",["Just",17],["Nothing"],"uriPort"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","URI",[]]],["Type","Maybe",[["Type","Int",[]]]],[]],"fe_representation":".uriPort :: URI -> Maybe Int"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.URI",["Just",17],["Nothing"],"uriRegName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","URI",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".uriRegName :: URI -> Maybe String"},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","Text.URI",["Just",46],["Just",56],"parseURI"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Maybe",[["Type","URI",[]]]],[]],"fe_representation":"parseURI :: String -> Maybe URI"},["Bin",8,["Location","Platform","Text.URI",["Just",37],["Just",44],"okInQueryItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"okInQueryItem :: Char -> Bool"},["Bin",4,["Location","Platform","Text.URI",["Just",33],["Just",38],"okInUserinfo"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"okInUserinfo :: Char -> Bool"},["Bin",2,["Location","Platform","Text.URI",["Just",17],["Nothing"],"uriUserInfo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","URI",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".uriUserInfo :: URI -> Maybe String"},["Tip"],["Bin",1,["Location","Platform","Text.URI",["Just",28],["Just",14],"nullURI"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","URI",[]],[]],"fe_representation":"nullURI :: URI"},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.URI",["Just",35],["Just",41],"okInQuery"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"okInQuery :: Char -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.URI",["Just",41],["Just",50],"okInPath"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"okInPath :: Char -> Bool"},["Bin",1,["Location","Platform","Text.URI",["Just",39],["Just",47],"okInFragment"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"okInFragment :: Char -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.URI",["Just",43],["Just",53],"okInPathSegment"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"okInPathSegment :: Char -> Bool"},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Text.URI",["Just",55],["Just",90],"uriPathSegments"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","URI",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":"uriPathSegments :: URI -> [String]"},["Bin",3,["Location","Platform","Text.URI",["Just",51],["Just",82],"uriQueryItems"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","URI",[]]],["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],[]],"fe_representation":"uriQueryItems :: URI -> [(String,String)]"},["Bin",1,["Location","Platform","Text.URI",["Just",49],["Just",78],"escapeString"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"escapeString :: (Char -> Bool) String -> String"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.URI",["Just",53],["Just",86],"pathToSegments"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":"pathToSegments :: String -> [String]"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.URI",["Just",59],["Just",99],"isReference"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","URI",[]]],["Type","Bool",[]],[]],"fe_representation":"isReference :: URI -> Bool"},["Bin",1,["Location","Platform","Text.URI",["Just",57],["Just",94],"segmentsToPath"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]]],["Type","String",[]],[]],"fe_representation":"segmentsToPath :: [String] -> String"},["Tip"],["Tip"]],["Tip"]]]]],["Bin",28,["Location","Platform","Text.Unicode.UChar",["Just",75],["Just",273],"isHexDigit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isHexDigit :: UChar -> Bool"},["Bin",20,["Location","Platform","Text.Unicode.UChar",["Just",53],["Just",224],"isAsciiUpper"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isAsciiUpper :: UChar -> Bool"},["Bin",12,["Location","Platform","Text.Unicode.UChar",["Just",41],["Just",204],"isAlphaNum"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isAlphaNum :: UChar -> Bool"},["Bin",8,["Location","Platform","Text.Unicode.UChar",["Just",29],["Just",164],"isPunctuation"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isPunctuation :: UChar -> Bool"},["Bin",4,["Location","Platform","Text.Unicode.UChar",["Just",23],["Just",146],"isMark"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isMark :: UChar -> Bool"},["Bin",2,["Location","Platform","Text.Unicode.UChar",["Just",20],["Just",135],"isLetter"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isLetter :: UChar -> Bool"},["Bin",1,["Location","Platform","Text.Unicode.Encodings.JS",["Just",15],["Just",12],"toJSLiteral"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UString",[]]],["Type","String",[]],[]],"fe_representation":"toJSLiteral :: !UString -> String"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",26],["Just",155],"isNumber"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isNumber :: UChar -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Unicode.UChar",["Just",34],["Just",186],"isSeparator"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isSeparator :: UChar -> Bool"},["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",32],["Just",177],"isSymbol"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isSymbol :: UChar -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",39],["Just",196],"isAlpha"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isAlpha :: UChar -> Bool"},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Text.Unicode.UChar",["Just",47],["Just",214],"isLatin1"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isLatin1 :: UChar -> Bool"},["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",44],["Just",209],"isAscii"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isAscii :: UChar -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",50],["Just",219],"isAsciiLower"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isAsciiLower :: UChar -> Bool"},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Text.Unicode.UChar",["Just",66],["Just",256],"isUpper"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isUpper :: UChar -> Bool"},["Bin",3,["Location","Platform","Text.Unicode.UChar",["Just",59],["Just",245],"isControl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isControl :: UChar -> Bool"},["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",56],["Just",232],"isSpace"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isSpace :: UChar -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",62],["Just",250],"isPrint"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isPrint :: UChar -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Unicode.UChar",["Just",70],["Just",264],"isDigit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isDigit :: UChar -> Bool"},["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",68],["Just",260],"isLower"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isLower :: UChar -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",72],["Just",268],"isOctDigit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","Bool",[]],[]],"fe_representation":"isOctDigit :: UChar -> Bool"},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Text.XML",["Just",12],["Nothing"],"XMLDoc"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Maybe",[["Type","XMLURI",[]]]],["Type","_List",[["Type","_Tuple2",[["Type","XMLNamespacePrefix",[]],["Type","XMLURI",[]]]]]],["Type","XMLNode",[]]],["Type","XMLDoc",[]],[]],"fe_representation":"XMLDoc :: (Maybe XMLURI) [(XMLNamespacePrefix, XMLURI)] XMLNode -> XMLDoc"},["Bin",3,["Location","Platform","Text.Unicode.UChar",["Just",81],["Just",285],"toUpper"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","UChar",[]],[]],"fe_representation":"toUpper :: UChar -> UChar"},["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",78],["Just",280],"toLower"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","UChar",[]],[]],"fe_representation":"toLower :: UChar -> UChar"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Unicode.UChar",["Just",86],["Just",292],"toTitle"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UChar",[]]],["Type","UChar",[]],[]],"fe_representation":"toTitle :: UChar -> UChar"},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.XML",["Just",14],["Nothing"],"XMLText"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","XMLNode",[]],[]],"fe_representation":"XMLText :: String -> XMLNode"},["Bin",1,["Location","Platform","Text.XML",["Just",14],["Nothing"],"XMLElem"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","XMLQName",[]],["Type","_List",[["Type","XMLAttr",[]]]],["Type","_List",[["Type","XMLNode",[]]]]],["Type","XMLNode",[]],[]],"fe_representation":"XMLElem :: XMLQName [XMLAttr] [XMLNode] -> XMLNode"},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.XML",["Just",17],["Nothing"],"XMLAttr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","XMLQName",[]],["Type","String",[]]],["Type","XMLAttr",[]],[]],"fe_representation":"XMLAttr :: XMLQName String -> XMLAttr"},["Tip"],["Tip"]]]]]],["Bin",60,["Location","Sapl","Sapl.SaplParser",["Just",15],["Nothing"],"nr_args"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConstructorDef",[]]],["Type","Int",[]],[]],"fe_representation":".nr_args :: ConstructorDef -> Int"},["Bin",38,["Location","Sapl","Sapl.FastString",["Just",56],["Just",49],"matchAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","Int",[]]],["Type","Bool",[]],[]],"fe_representation":"matchAt :: !String !String !Int -> Bool","fe_documentation":["FunctionDoc",["Just","Predicate which tests if a substring matches another string\nat a given position"],["The substring that is being matched.","The string that is being searched.","The start position."],[],["Nothing"]]},["Bin",15,["Location","Platform","Text.XML",["Just",52],["Nothing"],"XMLCharAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","XMLQName",[]],["Type","Char",[]],["Var","a"]],["Type","XMLCharAttribute",[["Var","a"]]],[]],"fe_representation":"XMLCharAttribute :: XMLQName Char a -> XMLCharAttribute a"},["Bin",6,["Location","Platform","Text.XML",["Just",45],["Just",332],"toXMLString"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[[["Generic","XMLEncode",["KindConst"]],["Var","a"]]]],"fe_representation":"toXMLString :: !a -> String | XMLEncode{|*|} a"},["Bin",3,["Location","Platform","Text.XML",["Just",37],["Just",10],"qname"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","XMLNamespacePrefix",[]],["Type","String",[]]],["Type","XMLQName",[]],[]],"fe_representation":"qname :: !XMLNamespacePrefix !String -> XMLQName","fe_documentation":["FunctionDoc",["Just","Create an XMLQName containing a qualified name from a String"],["Qualified name"],[],["Just","XMLQName containing the qualified name"]]},["Bin",1,["Location","Platform","Text.XML",["Just",30],["Just",7],"uname"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","XMLQName",[]],[]],"fe_representation":"uname :: !String -> XMLQName","fe_documentation":["FunctionDoc",["Just","Create an XMLQName containing an unqualified name from a String"],["Unqualified name"],[],["Just","XMLQName containing the unqualified name"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.XML",["Just",44],["Just",329],"toXML"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","XMLDoc",[]],[[["Generic","XMLEncode",["KindConst"]],["Var","a"]]]],"fe_representation":"toXML :: !a -> XMLDoc | XMLEncode{|*|} a"},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.XML",["Just",48],["Just",337],"XMLEncode"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","XMLEncodeResult",[]],[]],"fe_generic_vars":["a"],"fe_representation":"generic XMLEncode a :: !a -> XMLEncodeResult"},["Tip"],["Bin",1,["Location","Platform","Text.XML",["Just",51],["Nothing"],"XMLIntAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","XMLQName",[]],["Type","Int",[]],["Var","a"]],["Type","XMLIntAttribute",[["Var","a"]]],[]],"fe_representation":"XMLIntAttribute :: XMLQName Int a -> XMLIntAttribute a"},["Tip"],["Tip"]]]],["Bin",8,["Location","Platform","Text.XML",["Just",55],["Nothing"],"XMLBoolAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","XMLQName",[]],["Type","Bool",[]],["Var","a"]],["Type","XMLBoolAttribute",[["Var","a"]]],[]],"fe_representation":"XMLBoolAttribute :: XMLQName Bool a -> XMLBoolAttribute a"},["Bin",2,["Location","Platform","Text.XML",["Just",54],["Nothing"],"XMLStringAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","XMLQName",[]],["Type","String",[]],["Var","a"]],["Type","XMLStringAttribute",[["Var","a"]]],[]],"fe_representation":"XMLStringAttribute :: XMLQName String a -> XMLStringAttribute a"},["Bin",1,["Location","Platform","Text.XML",["Just",53],["Nothing"],"XMLRealAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","XMLQName",[]],["Type","Real",[]],["Var","a"]],["Type","XMLRealAttribute",[["Var","a"]]],[]],"fe_representation":"XMLRealAttribute :: XMLQName Real a -> XMLRealAttribute a"},["Tip"],["Tip"]],["Tip"]],["Bin",5,["Location","Sapl","Sapl.FastString",["Just",36],["Just",30],"charIndex"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Int",[]],["Type","Char",[]]],["Type","_Tuple2",[["Type","Bool",[]],["Type","Int",[]]]],[]],"fe_representation":"charIndex :: !String !Int !Char -> (!Bool,!Int)","fe_documentation":["FunctionDoc",["Just","Find the first occurence of a character in another string\nstarting from a given character position"],["The string that is being searched.","The start position.","The character."],[],["Nothing"]]},["Bin",3,["Location","Sapl","Sapl.FastString",["Just",18],["Just",14],"startsWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]]],["Type","Bool",[]],[]],"fe_representation":"startsWith :: !String !String -> Bool","fe_documentation":["FunctionDoc",["Just","Predicate which tests if a string starts with another substring"],["The substring.","The string that is being searched."],[],["Nothing"]]},["Bin",1,["Location","Sapl","Sapl.FastString",["Just",10],["Just",5],"skipChars"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Int",[]],["Func",[["Type","Char",[]]],["Type","Bool",[]],[]]],["Type","Int",[]],[]],"fe_representation":"skipChars :: !String !Int (Char -> Bool) -> Int","fe_documentation":["FunctionDoc",["Just","Skip characters indicated by the predicate"],["The string that is being searched.","Start position.","Predicate function."],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.FastString",["Just",26],["Just",22],"endsWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]]],["Type","Bool",[]],[]],"fe_representation":"endsWith :: !String !String -> Bool","fe_documentation":["FunctionDoc",["Just","Predicate which tests if a string ends with another substring"],["The substring.","The string that is being searched."],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",1,["Location","Sapl","Sapl.FastString",["Just",46],["Just",40],"charIndexBackwards"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Int",[]],["Type","Char",[]]],["Type","_Tuple2",[["Type","Bool",[]],["Type","Int",[]]]],[]],"fe_representation":"charIndexBackwards :: !String !Int !Char -> (!Bool,!Int)","fe_documentation":["FunctionDoc",["Just","Find the first occurence of a character in another string\nstarting from a given character position BACKWARDS."],["The string that is being searched.","The start position.","The character."],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",22,["Location","Sapl","Sapl.Optimization.StrictnessPropagation",["Just",8],["Just",10],"isStrictArgFlavour"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Flavour",[]],["Type","ParserState",[]],["Type","String",[]],["Type","Int",[]],["Type","Int",[]]],["Type","Bool",[]],[]],"fe_representation":"isStrictArgFlavour :: !Flavour !ParserState !String !Int !Int -> Bool"},["Bin",13,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",14],["Nothing"],"LT_MACRO"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","DependencyType",[]]],["Type","LineType",[]],[]],"fe_representation":"LT_MACRO :: String DependencyType -> LineType"},["Bin",5,["Location","Sapl","Sapl.Linker.LazyLinker",["Just",46],["Just",102],"linkByExpr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LoaderStateExt",[]],["Type","StringAppender",[]],["Type","String",[]],["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple4",[["Type","LoaderStateExt",[]],["Type","StringAppender",[]],["Type","String",[]],["Uniq",["Type","World",[]]]]]],[]],"fe_representation":"linkByExpr :: !LoaderStateExt !StringAppender !String !*World -> *(!LoaderStateExt,!StringAppender,!String,!*World)","fe_documentation":["FunctionDoc",["Just","Link an expression using a LoaderState"],["LoaderState","StringAppender as the output stream","the expression to link for","*IWorld for accessing referenced modules"],[],["Just","new LoaderState"]]},["Bin",2,["Location","Sapl","Sapl.FastString",["Just",65],["Just",59],"countCharBackwards"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Type","String",[]]],["Type","Int",[]],[]],"fe_representation":"countCharBackwards :: !Char !String -> Int","fe_documentation":["FunctionDoc",["Just","Count the number of characters in a sequence from the end of the string\nE.g.: counCharBackwards '.' \".a.a...\" gives 3"],["The char that is being searched.","The string that is being searched."],[],["Nothing"]]},["Tip"],["Bin",1,["Location","Sapl","Sapl.Linker.LazyLinker",["Just",32],["Just",61],"generateLoaderState"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]],["Type","_List",[["Type","String",[]]]],["Type","_List",[["Type","String",[]]]],["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Type","LoaderStateExt",[]],["Uniq",["Type","World",[]]]]]],[]],"fe_representation":"generateLoaderState :: ![String] ![String] ![String] !*World -> *(LoaderStateExt,!*World)","fe_documentation":["FunctionDoc",["Just","Generate loader state:\nIt looks for modules in the given directories hierarchically.\nModules given in \"_override_\" directories are handled with priority compared to the same\nmodule in the parent directory."],["Directory list to look up modules","Individual modules given in a list (must be top level)","Module names to be excluded"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",2,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",14],["Nothing"],"LT_FUNC"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","DependencyType",[]]],["Type","LineType",[]],[]],"fe_representation":"LT_FUNC :: String DependencyType -> LineType"},["Bin",1,["Location","Sapl","Sapl.Linker.LazyLinker",["Just",54],["Just",99],"getWarnings"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","LoaderStateExt",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":"getWarnings :: !LoaderStateExt -> [String]","fe_documentation":["FunctionDoc",["Just","Extract warnings from loader state"],["LoaderState"],[],["Just","List of Warning messages if any"]]},["Tip"],["Tip"]],["Tip"]]],["Bin",7,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",18],["Nothing"],"DT_NO_DEPENDENCY"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","DependencyType",[]],[]],"fe_representation":"DT_NO_DEPENDENCY :: DependencyType"},["Bin",2,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",18],["Nothing"],"DT_NEED_PROCESS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","Token",[]]]]],["Type","DependencyType",[]],[]],"fe_representation":"DT_NEED_PROCESS :: [Token] -> DependencyType"},["Bin",1,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",14],["Nothing"],"LT_REDIRECT"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","LineType",[]],[]],"fe_representation":"LT_REDIRECT :: String -> LineType"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",82],["Just",134],"generate_source"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FuncTypeMap",[]],["Type","SkipSet",[]],["Type","Loader",[["Var","lst"]]],["Type","String",[]],["Type","StringAppender",[]],["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple5",[["Type","FuncTypeMap",[]],["Type","SkipSet",[]],["Type","Loader",[["Var","lst"]]],["Type","StringAppender",[]],["Uniq",["Type","World",[]]]]]],[]],"fe_representation":"generate_source :: !FuncTypeMap !SkipSet !(Loader lst) !String !StringAppender !*World -> *(!FuncTypeMap,!SkipSet,!Loader lst,!StringAppender,!*World)","fe_documentation":["FunctionDoc",["Just","Generates SAPL source of a given function (by name) including its dependencies.\nThis is a general function, the concrete loader logic is done by the function given in its second argument."],["initial FuncTypeMap","loader function (and its current state)","the function name","*World","output stream"],[],["Just","new FuncTypeMap (loader my changed it)"]]},["Bin",2,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",66],["Just",46],"read_module"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","FuncTypeMap",[]],["Type","Warnings",[]],["Type","IdGenerator",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple4",[["Type","FuncTypeMap",[]],["Type","IdGenerator",[]],["Type","Warnings",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"read_module :: !String FuncTypeMap Warnings IdGenerator !*World -> (FuncTypeMap,IdGenerator,Warnings,*World)","fe_documentation":["FunctionDoc",["Just","Reads a modules, given by its name, and generates mappings and\npossibly some warning messages (e.g. one of the modules is not found)."],["module name","initial FuncTypeMap (can be empty)","initial message list","a numeric id which is unique between the calls of this function","*World to access files"],[],["Just","extended FuncTypeMap"]]},["Bin",1,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",50],["Just",27],"generate_dependencies"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Token",[]]]],["Type","_List",[["Type","String",[]]]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":"generate_dependencies :: [Token] [String] -> [String]","fe_documentation":["FunctionDoc",["Just","Appends the names of function dependencies to the list of second argument\nby the token stream of the first argument."],["token stream","the list the dependencies to be appended"],[],["Just","extended dependency list"]]},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",98],["Just",185],"substitute_macros"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FuncTypeMap",[]],["Type","_List",[["Type","String",[]]]],["Type","Loader",[["Var","st"]]],["Type","String",[]],["Type","StringAppender",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple4",[["Type","FuncTypeMap",[]],["Type","Loader",[["Var","st"]]],["Type","StringAppender",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"substitute_macros :: !FuncTypeMap ![String] !(Loader st) !String !StringAppender !*World -> (!FuncTypeMap,!Loader st,!StringAppender,!*World)","fe_documentation":["FunctionDoc",["Just","Substitute macros in a given expression."],["initial FuncTypeMap","dependencies of the expression","loader function (and its current state)","the expression","*World","output stream"],[],["Just","new FuncTypeMap (loader my changed it)"]]},["Tip"],["Tip"]]]]],["Bin",8,["Location","Sapl","Sapl.SaplParser",["Just",8],["Nothing"],"ps_functions"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParserState",[]]],["Type","Map",[["Type","String",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]]],[]],"fe_representation":".ps_functions :: ParserState -> Map String [SaplTypedVar]"},["Bin",3,["Location","Sapl","Sapl.SaplParser",["Just",8],["Nothing"],"ps_CAFs"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParserState",[]]],["Type","Map",[["Type","String",[]],["Type","Void",[]]]],[]],"fe_representation":".ps_CAFs :: ParserState -> Map String Void"},["Bin",1,["Location","Sapl","Sapl.Optimization.StrictnessPropagation",["Just",10],["Just",26],"doStrictnessPropagation"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ParserState",[]],["Type","IsStrictArgFun",[]],["Type","_List",[["Type","FuncType",[]]]]],["Type","_Tuple2",[["Type","_List",[["Type","FuncType",[]]]],["Type","ParserState",[]]]],[]],"fe_representation":"doStrictnessPropagation :: !ParserState !IsStrictArgFun ![FuncType] -> (![FuncType],!ParserState)"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplParser",["Just",8],["Nothing"],"ps_constructors"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParserState",[]]],["Type","Map",[["Type","String",[]],["Type","ConstructorDef",[]]]],[]],"fe_representation":".ps_constructors :: ParserState -> Map String ConstructorDef"},["Tip"],["Tip"]]],["Bin",4,["Location","Sapl","Sapl.SaplParser",["Just",15],["Nothing"],"args"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConstructorDef",[]]],["Type","_List",[["Type","SaplTypedVar",[]]]],[]],"fe_representation":".args :: ConstructorDef -> [SaplTypedVar]"},["Bin",2,["Location","Sapl","Sapl.SaplParser",["Just",8],["Nothing"],"ps_genFuns"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParserState",[]]],["Type","_List",[["Type","FuncType",[]]]],[]],"fe_representation":".ps_genFuns :: ParserState -> [FuncType]"},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplParser",["Just",8],["Nothing"],"ps_level"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParserState",[]]],["Type","Int",[]],[]],"fe_representation":".ps_level :: ParserState -> Int"},["Tip"],["Tip"]]],["Bin",1,["Location","Sapl","Sapl.SaplParser",["Just",15],["Nothing"],"index"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConstructorDef",[]]],["Type","Int",[]],[]],"fe_representation":".index :: ConstructorDef -> Int"},["Tip"],["Tip"]]]]]],["Bin",21,["Location","Sapl","Sapl.SaplStruct",["Just",18],["Nothing"],"SAbortBody"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SaplTerm",[]],[]],"fe_representation":"SAbortBody :: SaplTerm"},["Bin",10,["Location","Sapl","Sapl.SaplStruct",["Just",10],["Nothing"],"FTFunc"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]],["Type","FuncType",[]],[]],"fe_representation":"FTFunc :: SaplTypedVar SaplTerm [SaplTypedVar] -> FuncType"},["Bin",6,["Location","Sapl","Sapl.SaplParser",["Just",41],["Just",327],"parseExpr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","PosToken",[]]]]],["Type","MaybeError",[["Type","ErrorMsg",[]],["Type","_Tuple2",[["Type","SaplTerm",[]],["Type","ParserState",[]]]]]],[]],"fe_representation":"parseExpr :: [PosToken] -> MaybeError ErrorMsg (SaplTerm,ParserState)","fe_documentation":["FunctionDoc",["Just","Convert a list of position wrapped tokens into an AST.\nOn error an error message is provided. It is assumed that the tokens encode\na simple expression."],["a token stream"],[],["Just","an AST, ParserState pair or an error message"]]},["Bin",2,["Location","Sapl","Sapl.SaplParser",["Just",15],["Nothing"],"nr_cons"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConstructorDef",[]]],["Type","Int",[]],[]],"fe_representation":".nr_cons :: ConstructorDef -> Int"},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplParser",["Just",31],["Just",315],"parse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","PosToken",[]]]]],["Type","MaybeError",[["Type","ErrorMsg",[]],["Type","_Tuple2",[["Type","_List",[["Type","FuncType",[]]]],["Type","ParserState",[]]]]]],[]],"fe_representation":"parse :: [PosToken] -> MaybeError ErrorMsg ([FuncType],ParserState)","fe_documentation":["FunctionDoc",["Just","Convert a list of position wrapped tokens into a list of AST per function.\nOn error an error message is provided. It is assumed that the tokens encode\nfunction definitions."],["a token stream"],[],["Just","an [AST] or an error message"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Sapl","Sapl.SaplStruct",["Just",10],["Nothing"],"FTADT"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplVar",[]],["Type","_List",[["Type","SaplConstructor",[]]]]],["Type","FuncType",[]],[]],"fe_representation":"FTADT :: SaplVar [SaplConstructor] -> FuncType"},["Bin",1,["Location","Sapl","Sapl.SaplParser",["Just",51],["Just",339],"mergeParserStates"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ParserState",[]],["Type","Maybe",[["Type","ParserState",[]]]]],["Type","ParserState",[]],[]],"fe_representation":"mergeParserStates :: ParserState (Maybe ParserState) -> ParserState","fe_documentation":["FunctionDoc",["Just","Merge a ParserState record into another, by adding the elements of the Map fields\nto the Map fields of the other structure."],["first parser state","second parser state (supposed to be bigger)"],[],["Just","merged parser state"]]},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",10],["Nothing"],"FTCAF"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]]],["Type","FuncType",[]],[]],"fe_representation":"FTCAF :: SaplTypedVar SaplTerm -> FuncType"},["Tip"],["Tip"]]]],["Bin",3,["Location","Sapl","Sapl.SaplStruct",["Just",10],["Nothing"],"FTRecord"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplVar",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]],["Type","FuncType",[]],[]],"fe_representation":"FTRecord :: SaplVar [SaplTypedVar] -> FuncType"},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",10],["Nothing"],"FTMacro"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]],["Type","FuncType",[]],[]],"fe_representation":"FTMacro :: SaplTypedVar SaplTerm [SaplTypedVar] -> FuncType"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",16],["Nothing"],"SaplConstructor"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplVar",[]],["Type","Int",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]],["Type","SaplConstructor",[]],[]],"fe_representation":"SaplConstructor :: SaplVar Int [SaplTypedVar] -> SaplConstructor"},["Tip"],["Tip"]]]],["Bin",10,["Location","Sapl","Sapl.SaplStruct",["Just",18],["Nothing"],"SSelect"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplTerm",[]],["Type","SaplType",[]],["Type","Int",[]]],["Type","SaplTerm",[]],[]],"fe_representation":"SSelect :: SaplTerm SaplType Int -> SaplTerm"},["Bin",4,["Location","Sapl","Sapl.SaplStruct",["Just",18],["Nothing"],"SCase"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplTerm",[]],["Type","_List",[["Type","_Tuple2",[["Type","SaplPattern",[]],["Type","SaplTerm",[]]]]]]],["Type","SaplTerm",[]],[]],"fe_representation":"SCase :: SaplTerm [(SaplPattern, SaplTerm)] -> SaplTerm"},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",18],["Nothing"],"SApplication"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplTerm",[]],["Type","_List",[["Type","SaplTerm",[]]]]],["Type","SaplTerm",[]],[]],"fe_representation":"SApplication :: SaplTerm [SaplTerm] -> SaplTerm"},["Tip"],["Tip"]],["Bin",2,["Location","Sapl","Sapl.SaplStruct",["Just",18],["Nothing"],"SLet"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplTerm",[]],["Type","_List",[["Type","SaplLetDef",[]]]]],["Type","SaplTerm",[]],[]],"fe_representation":"SLet :: SaplTerm [SaplLetDef] -> SaplTerm"},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",18],["Nothing"],"SLit"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Literal",[]]],["Type","SaplTerm",[]],[]],"fe_representation":"SLit :: Literal -> SaplTerm"},["Tip"],["Tip"]]]],["Bin",5,["Location","Sapl","Sapl.SaplStruct",["Just",27],["Nothing"],"SaplLetDef"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]]],["Type","SaplLetDef",[]],[]],"fe_representation":"SaplLetDef :: SaplTypedVar SaplTerm -> SaplLetDef"},["Bin",2,["Location","Sapl","Sapl.SaplStruct",["Just",18],["Nothing"],"SUpdate"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplTerm",[]],["Type","SaplType",[]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","SaplTerm",[]]]]]]],["Type","SaplTerm",[]],[]],"fe_representation":"SUpdate :: SaplTerm SaplType [(Int, SaplTerm)] -> SaplTerm"},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",18],["Nothing"],"SVar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplVar",[]]],["Type","SaplTerm",[]],[]],"fe_representation":"SVar :: SaplVar -> SaplTerm"},["Tip"],["Tip"]]],["Bin",2,["Location","Sapl","Sapl.SaplStruct",["Just",31],["Nothing"],"NormalVar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplName",[]],["Type","Int",[]]],["Type","SaplVar",[]],[]],"fe_representation":"NormalVar :: SaplName Int -> SaplVar"},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",31],["Nothing"],"StrictVar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SaplName",[]],["Type","Int",[]]],["Type","SaplVar",[]],[]],"fe_representation":"StrictVar :: SaplName Int -> SaplVar"},["Tip"],["Tip"]]]]]]]],["Bin",132,["Location","Sapl","Sapl.Target.Flavour",["Just",48],["Nothing"],"fun_prefix"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FlavourRep",[]]],["Type","String",[]],[]],"fe_representation":".fun_prefix :: FlavourRep -> String"},["Bin",59,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TLetKeyword"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TLetKeyword :: Token"},["Bin",31,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TCaseKeyword"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TCaseKeyword :: Token"},["Bin",19,["Location","Sapl","Sapl.SaplStruct",["Just",71],["Just",93],"unpackConsName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplPattern",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":"unpackConsName :: !SaplPattern -> Maybe String"},["Bin",12,["Location","Sapl","Sapl.SaplStruct",["Just",40],["Nothing"],"NoType"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SaplType",[]],[]],"fe_representation":"NoType :: SaplType"},["Bin",3,["Location","Sapl","Sapl.SaplStruct",["Just",36],["Nothing"],"PDefault"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SaplPattern",[]],[]],"fe_representation":"PDefault :: SaplPattern"},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",36],["Nothing"],"PCons"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","SaplVar",[]]]]],["Type","SaplPattern",[]],[]],"fe_representation":"PCons :: String [SaplVar] -> SaplPattern"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",36],["Nothing"],"PLit"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Literal",[]]],["Type","SaplPattern",[]],[]],"fe_representation":"PLit :: Literal -> SaplPattern"},["Tip"],["Tip"]]],["Bin",8,["Location","Sapl","Sapl.SaplStruct",["Just",48],["Just",16],"ltVarByNameLevel"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplVar",[]],["Type","SaplVar",[]]],["Type","Bool",[]],[]],"fe_representation":"ltVarByNameLevel :: !SaplVar !SaplVar -> Bool"},["Bin",4,["Location","Sapl","Sapl.SaplStruct",["Just",46],["Just",7],"ltVarByName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplVar",[]],["Type","SaplVar",[]]],["Type","Bool",[]],[]],"fe_representation":"ltVarByName :: !SaplVar !SaplVar -> Bool"},["Bin",2,["Location","Sapl","Sapl.SaplStruct",["Just",40],["Nothing"],"Type"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SaplType",[]],[]],"fe_representation":"Type :: String -> SaplType"},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",45],["Just",10],"eqVarByName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplVar",[]],["Type","SaplVar",[]]],["Type","Bool",[]],[]],"fe_representation":"eqVarByName :: !SaplVar !SaplVar -> Bool"},["Tip"],["Tip"]]],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",47],["Just",13],"eqVarByNameLevel"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplVar",[]],["Type","SaplVar",[]]],["Type","Bool",[]],[]],"fe_representation":"eqVarByNameLevel :: !SaplVar !SaplVar -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","Sapl","Sapl.SaplStruct",["Just",69],["Just",87],"unpackBindVar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplLetDef",[]]],["Type","SaplTypedVar",[]],[]],"fe_representation":"unpackBindVar :: !SaplLetDef -> SaplTypedVar"},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",50],["Just",29],"removeTypeInfo"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplTypedVar",[]]],["Type","SaplVar",[]],[]],"fe_representation":"removeTypeInfo :: !SaplTypedVar -> SaplVar"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",70],["Just",90],"unpackBindExpr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplLetDef",[]]],["Type","SaplTerm",[]],[]],"fe_representation":"unpackBindExpr :: !SaplLetDef -> SaplTerm"},["Tip"],["Tip"]]]]],["Bin",6,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TAssignmentOp"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TAssignmentOp :: Token"},["Bin",3,["Location","Sapl","Sapl.SaplStruct",["Just",74],["Just",100],"isConsPattern"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplPattern",[]]],["Type","Bool",[]],[]],"fe_representation":"isConsPattern :: !SaplPattern -> Bool"},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",72],["Just",97],"toStrictBind"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplLetDef",[]]],["Type","SaplLetDef",[]],[]],"fe_representation":"toStrictBind :: !SaplLetDef -> SaplLetDef"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",75],["Just",104],"isDefaultPattern"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplPattern",[]]],["Type","Bool",[]],[]],"fe_representation":"isDefaultPattern :: !SaplPattern -> Bool"},["Tip"],["Tip"]]],["Bin",2,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TCAFAssignmentOp"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TCAFAssignmentOp :: Token"},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TCaseAssignmentOp"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TCaseAssignmentOp :: Token"},["Tip"],["Tip"]]]]],["Bin",11,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TEndOfLine"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TEndOfLine :: Token"},["Bin",6,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TCloseSquareBracket"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TCloseSquareBracket :: Token"},["Bin",2,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TCloseBracket"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TCloseBracket :: Token"},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TCloseParenthesis"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TCloseParenthesis :: Token"},["Tip"],["Tip"]]],["Bin",3,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TComma"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TComma :: Token"},["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TColon"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TColon :: Token"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TComment"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Token",[]],[]],"fe_representation":"TComment :: String -> Token"},["Tip"],["Tip"]]]],["Bin",4,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TInlineAnnotation"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TInlineAnnotation :: Token"},["Bin",2,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TInKeyword"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TInKeyword :: Token"},["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TIdentifier"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Token",[]],[]],"fe_representation":"TIdentifier :: String -> Token"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TLambda"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TLambda :: Token"},["Tip"],["Tip"]]]]],["Bin",27,["Location","Sapl","Sapl.SaplTokenizer",["Just",46],["Nothing"],"LBool"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","Literal",[]],[]],"fe_representation":"LBool :: Bool -> Literal"},["Bin",11,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TSelectKeyword"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TSelectKeyword :: Token"},["Bin",5,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TOpenBracket"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TOpenBracket :: Token"},["Bin",2,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TLit"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Literal",[]]],["Type","Token",[]],[]],"fe_representation":"TLit :: Literal -> Token"},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TMacroAssignmentOp"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TMacroAssignmentOp :: Token"},["Tip"],["Tip"]]],["Bin",2,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TOpenSquareBracket"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TOpenSquareBracket :: Token"},["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TOpenParenthesis"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TOpenParenthesis :: Token"},["Tip"],["Tip"]],["Tip"]]],["Bin",5,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TUpdateKeyword"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TUpdateKeyword :: Token"},["Bin",2,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TTypeDef"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TTypeDef :: Token"},["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TStrictIdentifier"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Token",[]],[]],"fe_representation":"TStrictIdentifier :: String -> Token"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","Sapl","Sapl.SaplTokenizer",["Just",41],["Nothing"],"PosToken"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Type","Token",[]]],["Type","PosToken",[]],[]],"fe_representation":"PosToken :: Int Int Token -> PosToken"},["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"TVerticalBar"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Token",[]],[]],"fe_representation":"TVerticalBar :: Token"},["Tip"],["Tip"]],["Tip"]]]],["Bin",15,["Location","Sapl","Sapl.SaplTokenizer",["Just",67],["Just",181],"tokensWithPositions"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_List",[["Type","PosToken",[]]]],[]],"fe_representation":"tokensWithPositions :: !String -> [PosToken]"},["Bin",6,["Location","Sapl","Sapl.SaplTokenizer",["Just",46],["Nothing"],"LString"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UString",[]]],["Type","Literal",[]],[]],"fe_representation":"LString :: UString -> Literal"},["Bin",3,["Location","Sapl","Sapl.SaplTokenizer",["Just",46],["Nothing"],"LInt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","Literal",[]],[]],"fe_representation":"LInt :: Int -> Literal"},["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",46],["Nothing"],"LChar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UString",[]]],["Type","Literal",[]],[]],"fe_representation":"LChar :: UString -> Literal"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",46],["Nothing"],"LReal"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","Literal",[]],[]],"fe_representation":"LReal :: Real -> Literal"},["Tip"],["Tip"]]],["Bin",2,["Location","Sapl","Sapl.SaplTokenizer",["Just",66],["Just",195],"tokens"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_List",[["Type","Token",[]]]],[]],"fe_representation":"tokens :: !String -> [Token]","fe_documentation":["FunctionDoc",["Just","Convert a given SAPL string to a list of tokens."],[],[],["Nothing"]]},["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",61],["Just",77],"read_token"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","String",[]]],["Type","_Tuple3",[["Type","Int",[]],["Type","Int",[]],["Type","Token",[]]]],[]],"fe_representation":"read_token :: !Int !String -> (!Int,!Int,!Token)","fe_documentation":["FunctionDoc",["Just","Low level function to read a token from a given position of the input string."],["start position (from zero)","input string"],[],["Just","start position of the token (can differ from the argument)"]]},["Tip"],["Tip"]],["Tip"]]],["Bin",8,["Location","Sapl","Sapl.Target.Flavour",["Just",22],["Nothing"],"strictness"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InlineFunDef",[]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":".strictness :: InlineFunDef -> {#Char}"},["Bin",4,["Location","Sapl","Sapl.Target.Flavour",["Just",22],["Nothing"],"data_cons"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InlineFunDef",[]]],["Type","Bool",[]],[]],"fe_representation":".data_cons :: InlineFunDef -> Bool"},["Bin",2,["Location","Sapl","Sapl.Target.Flavour",["Just",22],["Nothing"],"arity"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InlineFunDef",[]]],["Type","Arity",[]],[]],"fe_representation":".arity :: InlineFunDef -> Arity"},["Bin",1,["Location","Sapl","Sapl.Target.CleanFlavour",["Just",9],["Just",4],"cleanFlavour"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Flavour",[]],[]],"fe_representation":"cleanFlavour :: Flavour"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",22],["Nothing"],"fun"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InlineFunDef",[]]],["Type","InlineCoderFun",[]],[]],"fe_representation":".fun :: InlineFunDef -> InlineCoderFun"},["Tip"],["Tip"]]],["Bin",3,["Location","Sapl","Sapl.Target.Flavour",["Just",29],["Nothing"],"options"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Flavour",[]]],["Type","Set",[["Type","String",[]]]],[]],"fe_representation":".options :: Flavour -> Set String"},["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",29],["Nothing"],"fun_prefix"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Flavour",[]]],["Type","String",[]],[]],"fe_representation":".fun_prefix :: Flavour -> String"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",48],["Nothing"],"bifs"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FlavourRep",[]]],["Type","_List",[["Type","BIFRep",[]]]],[]],"fe_representation":".bifs :: FlavourRep -> [BIFRep]"},["Tip"],["Tip"]]]]]]],["Bin",72,["Location","StdEnv","StdChar",["Just",41],["Just",139],"isControl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isControl :: !Char -> Bool"},["Bin",31,["Location","Sapl","Sapl.Transform.Let",["Just",7],["Just",31],"sortBindings"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","SaplLetDef",[]]]]],["Type","Maybe",[["Type","_List",[["Type","SaplLetDef",[]]]]]],[]],"fe_representation":"sortBindings :: ![SaplLetDef] -> Maybe [SaplLetDef]"},["Bin",15,["Location","Sapl","Sapl.Target.Flavour",["Just",67],["Just",35],"fromFlavourRep"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FlavourRep",[]]],["Type","Flavour",[]],[]],"fe_representation":"fromFlavourRep :: !FlavourRep -> Flavour"},["Bin",7,["Location","Sapl","Sapl.Target.Flavour",["Just",53],["Nothing"],"ext_fun"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BIFRep",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".ext_fun :: BIFRep -> Maybe String"},["Bin",3,["Location","Sapl","Sapl.Target.Flavour",["Just",53],["Nothing"],"arity"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BIFRep",[]]],["Type","Int",[]],[]],"fe_representation":".arity :: BIFRep -> Int"},["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",48],["Nothing"],"options"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FlavourRep",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":".options :: FlavourRep -> [String]"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",53],["Nothing"],"data_cons"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BIFRep",[]]],["Type","Maybe",[["Type","Bool",[]]]],[]],"fe_representation":".data_cons :: BIFRep -> Maybe Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","Sapl","Sapl.Target.Flavour",["Just",53],["Nothing"],"sapl_fun"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BIFRep",[]]],["Type","String",[]],[]],"fe_representation":".sapl_fun :: BIFRep -> String"},["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",53],["Nothing"],"inline_exp"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BIFRep",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".inline_exp :: BIFRep -> Maybe String"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",65],["Just",32],"toFlavour"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Maybe",[["Type","Flavour",[]]]],[]],"fe_representation":"toFlavour :: !String -> Maybe Flavour"},["Tip"],["Tip"]]]],["Bin",7,["Location","Sapl","Sapl.Target.JS.CodeGeneratorJS",["Just",53],["Just",814],"exprGenerateJS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Flavour",[]],["Type","Bool",[]],["Type","String",[]],["Type","Maybe",[["Type","ParserState",[]]]],["Type","StringAppender",[]]],["Type","MaybeErrorString",[["Type","_Tuple3",[["Type","String",[]],["Type","StringAppender",[]],["Type","ParserState",[]]]]]],[]],"fe_representation":"exprGenerateJS :: !Flavour !Bool !String !(Maybe ParserState) !StringAppender -> MaybeErrorString (String,StringAppender,ParserState)","fe_documentation":["FunctionDoc",["Just","Generates JS from Sapl source of sapl expression only. It may generate functions as well, what\nis written to the output stream given as the last argument."],["Flavour","Trampoline on\/off","souce of Sapl expression","A global ParserState if any","output stream for the (possibly) generated fucntions"],[],["Just","(JS source \/ error message, error)"]]},["Bin",3,["Location","Sapl","Sapl.Target.JS.CodeGeneratorJS",["Just",29],["Just",68],"escapeName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","StringAppender",[]]],["Type","StringAppender",[]],[]],"fe_representation":"escapeName :: !String !String !StringAppender -> StringAppender","fe_documentation":["FunctionDoc",["Just","Convert SAPL function name to JS name"],["function name prefix","Sapl fn name","String appender"],[],["Just","String appender"]]},["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",70],["Just",74],"isSet"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Flavour",[]],["Type","String",[]]],["Type","Bool",[]],[]],"fe_representation":"isSet :: !Flavour !String -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.Target.JS.CodeGeneratorJS",["Just",40],["Just",791],"generateJS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Flavour",[]],["Type","Bool",[]],["Type","String",[]],["Type","Maybe",[["Type","ParserState",[]]]]],["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","StringAppender",[]],["Type","ParserState",[]]]]]],[]],"fe_representation":"generateJS :: !Flavour !Bool !String !(Maybe ParserState) -> MaybeErrorString (StringAppender,ParserState)","fe_documentation":["FunctionDoc",["Just","Generates JS from Sapl source."],["Flavour","Trampoline on\/off","Sapl source","A global ParserState if any"],[],["Just","(JS source \/ error message, error)"]]},["Tip"],["Tip"]]],["Bin",3,["Location","Sapl","Sapl.Target.JS.Lifting",["Just",11],["Just",15],"prepareFun"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","String",[]]],["Func",[["Type","Int",[]]],["Func",[["Type","Int",[]]],["Type","Bool",[]],[]],[]],[]],["Type","FuncType",[]],["Type","Map",[["Type","String",[]],["Type","FuncType",[]]]]],["Type","_Tuple2",[["Type","FuncType",[]],["Type","Map",[["Type","String",[]],["Type","FuncType",[]]]]]],[]],"fe_representation":"prepareFun :: (String -> Int -> Int -> Bool) !FuncType (Map String FuncType) -> (FuncType,Map String FuncType)"},["Bin",1,["Location","Sapl","Sapl.Target.JS.Lifting",["Just",7],["Just",7],"inline"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SaplTerm",[]]],["Type","Bool",[]],[]],"fe_representation":"inline :: !SaplTerm -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.Target.JS.Lifting",["Just",12],["Just",40],"prepareExpr"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","String",[]]],["Func",[["Type","Int",[]]],["Func",[["Type","Int",[]]],["Type","Bool",[]],[]],[]],[]],["Type","SaplTerm",[]],["Type","Map",[["Type","String",[]],["Type","FuncType",[]]]]],["Type","_Tuple2",[["Type","SaplTerm",[]],["Type","Map",[["Type","String",[]],["Type","FuncType",[]]]]]],[]],"fe_representation":"prepareExpr :: (String -> Int -> Int -> Bool) !SaplTerm (Map String FuncType) -> (SaplTerm,Map String FuncType)"},["Tip"],["Tip"]]]]],["Bin",15,["Location","StdEnv","StdChar",["Just",33],["Just",148],"isUpper"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isUpper :: !Char -> Bool"},["Bin",7,["Location","StdEnv","StdBool",["Just",21],["Just",63],"&&"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Type","Bool",[]]],["Type","Bool",[]],[]],"fe_priority":["RightAssoc",3],"fe_representation":"(&&) infixr 3 :: !Bool Bool -> Bool"},["Bin",3,["Location","StdEnv","StdBool",["Just",19],["Just",57],"not"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]]],["Type","Bool",[]],[]],"fe_representation":"not :: !Bool -> Bool"},["Bin",1,["Location","Sapl","Sapl.Transform.TailRecursion",["Just",7],["Just",31],"sortSetters"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]]]]]]],["Type","Maybe",[["Type","_List",[["Type","_Tuple2",[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]]]]]]]],[]],"fe_representation":"sortSetters :: ![(SaplTypedVar,SaplTerm)] -> Maybe [(SaplTypedVar,SaplTerm)]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdBool",["Just",20],["Just",80],"||"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Type","Bool",[]]],["Type","Bool",[]],[]],"fe_priority":["RightAssoc",2],"fe_representation":"(||) infixr 2 :: !Bool Bool -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdChar",["Just",28],["Just",104],"toUpper"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Char",[]],[]],"fe_representation":"toUpper :: !Char -> Char"},["Bin",1,["Location","StdEnv","StdChar",["Just",27],["Just",114],"digitToInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Int",[]],[]],"fe_representation":"digitToInt :: !Char -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdChar",["Just",29],["Just",109],"toLower"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Char",[]],[]],"fe_representation":"toLower :: !Char -> Char"},["Tip"],["Tip"]]]],["Bin",7,["Location","StdEnv","StdChar",["Just",37],["Just",157],"isDigit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isDigit :: !Char -> Bool"},["Bin",3,["Location","StdEnv","StdChar",["Just",35],["Just",154],"isAlpha"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isAlpha :: !Char -> Bool"},["Bin",1,["Location","StdEnv","StdChar",["Just",34],["Just",151],"isLower"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isLower :: !Char -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdChar",["Just",36],["Just",168],"isAlphanum"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isAlphanum :: !Char -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdChar",["Just",39],["Just",163],"isHexDigit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isHexDigit :: !Char -> Bool"},["Bin",1,["Location","StdEnv","StdChar",["Just",38],["Just",160],"isOctDigit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isOctDigit :: !Char -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdChar",["Just",40],["Just",145],"isSpace"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isSpace :: !Char -> Bool"},["Tip"],["Tip"]]]]]],["Bin",40,["Location","StdEnv","StdFile",["Just",68],["Just",187],"freadr"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple3",[["Type","Bool",[]],["Type","Real",[]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"freadr :: !*File -> (!Bool,!Real,!*File)"},["Bin",24,["Location","StdEnv","StdFile",["Just",14],["Nothing"],"FWriteData"],{"fe_kind":["Macro"],"fe_representation":"FWriteData :== 4"},["Bin",16,["Location","StdEnv","StdCharList",["Just",13],["Just",27],"mklines"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Char",[]]]]],["Type","_List",[["Type","_List",[["Type","Char",[]]]]]],[]],"fe_representation":"mklines :: ![Char] -> [[Char]]"},["Bin",6,["Location","StdEnv","StdCharList",["Just",9],["Just",17],"ljustify"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Type","Char",[]]]]],["Type","_List",[["Type","Char",[]]]],[]],"fe_representation":"ljustify :: !.Int ![.Char] -> .[Char]"},["Bin",3,["Location","StdEnv","StdChar",["Just",43],["Just",136],"isAscii"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isAscii :: !Char -> Bool"},["Bin",1,["Location","StdEnv","StdChar",["Just",42],["Just",142],"isPrint"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Type","Bool",[]],[]],"fe_representation":"isPrint :: !Char -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdCharList",["Just",8],["Just",10],"cjustify"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Type","Char",[]]]]],["Type","_List",[["Type","Char",[]]]],[]],"fe_representation":"cjustify :: !.Int ![.Char] -> .[Char]"},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdCharList",["Just",10],["Just",20],"rjustify"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Type","Char",[]]]]],["Type","_List",[["Type","Char",[]]]],[]],"fe_representation":"rjustify :: !.Int ![.Char] -> [Char]"},["Tip"],["Bin",1,["Location","StdEnv","StdCharList",["Just",12],["Just",23],"flatlines"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_List",[["Type","Char",[]]]]]]],["Type","_List",[["Type","Char",[]]]],[]],"fe_representation":"flatlines :: ![[u:Char]] -> [u:Char]"},["Tip"],["Tip"]]]],["Bin",9,["Location","StdEnv","StdFile",["Just",11],["Nothing"],"FWriteText"],{"fe_kind":["Macro"],"fe_representation":"FWriteText :== 1"},["Bin",6,["Location","StdEnv","StdDebug",["Just",18],["Just",33],"trace_n"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","msg"],["Var","a"]],["Var","a"],[[["Class","toString"],["Var","msg"]]]],"fe_representation":"trace_n :: !msg .a -> .a | toString msg"},["Bin",2,["Location","StdEnv","StdCharList",["Just",15],["Just",36],"spaces"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","_List",[["Type","Char",[]]]],[]],"fe_representation":"spaces :: !.Int -> .[Char]"},["Tip"],["Bin",1,["Location","StdEnv","StdDebug",["Just",15],["Just",27],"trace"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","msg"],["Var","a"]],["Var","a"],[[["Class","toString"],["Var","msg"]]]],"fe_representation":"trace :: !msg .a -> .a | toString msg"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdDebug",["Just",25],["Just",43],"trace_tn"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","msg"]],["Type","Bool",[]],[[["Class","toString"],["Var","msg"]]]],"fe_representation":"trace_tn :: !msg -> Bool | toString msg"},["Bin",1,["Location","StdEnv","StdDebug",["Just",22],["Just",39],"trace_t"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","msg"]],["Type","Bool",[]],[[["Class","toString"],["Var","msg"]]]],"fe_representation":"trace_t :: !msg -> Bool | toString msg"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdFile",["Just",10],["Nothing"],"FReadText"],{"fe_kind":["Macro"],"fe_representation":"FReadText :== 0"},["Tip"],["Tip"]]]],["Bin",2,["Location","StdEnv","StdFile",["Just",12],["Nothing"],"FAppendText"],{"fe_kind":["Macro"],"fe_representation":"FAppendText :== 2"},["Tip"],["Bin",1,["Location","StdEnv","StdFile",["Just",13],["Nothing"],"FReadData"],{"fe_kind":["Macro"],"fe_representation":"FReadData :== 3"},["Tip"],["Tip"]]]]],["Bin",7,["Location","StdEnv","StdFile",["Just",20],["Nothing"],"FSeekCur"],{"fe_kind":["Macro"],"fe_representation":"FSeekCur :== 1"},["Bin",2,["Location","StdEnv","StdFile",["Just",15],["Nothing"],"FAppendData"],{"fe_kind":["Macro"],"fe_representation":"FAppendData :== 5"},["Tip"],["Bin",1,["Location","StdEnv","StdFile",["Just",19],["Nothing"],"FSeekSet"],{"fe_kind":["Macro"],"fe_representation":"FSeekSet :== 0"},["Tip"],["Tip"]]],["Bin",4,["Location","StdEnv","StdFile",["Just",59],["Just",167],"freadc"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple3",[["Type","Bool",[]],["Type","Char",[]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"freadc :: !*File -> (!Bool,!Char,!*File)"},["Bin",2,["Location","StdEnv","StdFile",["Just",21],["Nothing"],"FSeekEnd"],{"fe_kind":["Macro"],"fe_representation":"FSeekEnd :== 2"},["Tip"],["Bin",1,["Location","StdEnv","StdFile",["Just",53],["Just",155],"freopen"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]],["Type","Int",[]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"freopen :: !*File !Int -> (!Bool,!*File)"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","StdFile",["Just",63],["Just",176],"freadi"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple3",[["Type","Bool",[]],["Type","Int",[]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"freadi :: !*File -> (!Bool,!Int,!*File)"},["Tip"],["Tip"]]]]],["Bin",15,["Location","StdEnv","StdFile",["Just",108],["Just",277],"fwritesubstring"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Type","_#Array",[["Type","Char",[]]]],["Uniq",["Type","File",[]]]],["Uniq",["Type","File",[]]],[]],"fe_representation":"fwritesubstring :: !Int !Int !{#Char} !*File -> *File"},["Bin",7,["Location","StdEnv","StdFile",["Just",93],["Just",238],"fwritec"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Uniq",["Type","File",[]]]],["Uniq",["Type","File",[]]],[]],"fe_representation":"fwritec :: !Char !*File -> *File"},["Bin",3,["Location","StdEnv","StdFile",["Just",78],["Just",209],"freadsubstring"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Uniq",["Type","File",[]]]],["Type","_Tuple3",[["Type","Int",[]],["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"freadsubstring :: !Int !Int !*{#Char} !*File -> (!Int,!*{#Char},!*File)"},["Bin",1,["Location","StdEnv","StdFile",["Just",73],["Just",198],"freads"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]],["Type","Int",[]]],["Type","_Tuple2",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"freads :: !*File !Int -> (!*{#Char},!*File)"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdFile",["Just",87],["Just",226],"freadline"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"freadline :: !*File -> (!*{#Char},!*File)"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdFile",["Just",101],["Just",258],"fwriter"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]],["Uniq",["Type","File",[]]]],["Uniq",["Type","File",[]]],[]],"fe_representation":"fwriter :: !Real !*File -> *File"},["Bin",1,["Location","StdEnv","StdFile",["Just",97],["Just",248],"fwritei"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Type","File",[]]]],["Uniq",["Type","File",[]]],[]],"fe_representation":"fwritei :: !Int !*File -> *File"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdFile",["Just",105],["Just",268],"fwrites"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Uniq",["Type","File",[]]]],["Uniq",["Type","File",[]]],[]],"fe_representation":"fwrites :: !{#Char} !*File -> *File"},["Tip"],["Tip"]]]],["Bin",7,["Location","StdEnv","StdFile",["Just",132],["Just",318],"fseek"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]],["Type","Int",[]],["Type","Int",[]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"fseek :: !*File !Int !Int -> (!Bool,!*File)"},["Bin",3,["Location","StdEnv","StdFile",["Just",125],["Just",299],"ferror"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"ferror :: !*File -> (!Bool,!*File)"},["Bin",1,["Location","StdEnv","StdFile",["Just",122],["Just",290],"fend"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"fend :: !*File -> (!Bool,!*File)"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdFile",["Just",128],["Just",308],"fposition"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Type","File",[]]]]],[]],"fe_representation":"fposition :: !*File -> (!Int,!*File)"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdFile",["Just",143],["Just",340],"sfreadc"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","File",[]]],["Type","_Tuple3",[["Type","Bool",[]],["Type","Char",[]],["Type","File",[]]]],[]],"fe_representation":"sfreadc :: !File -> (!Bool,!Char,!File)"},["Bin",1,["Location","StdEnv","StdFile",["Just",138],["Just",331],"stderr"],{"fe_kind":["Function"],"fe_type":["Func",[],["Uniq",["Type","File",[]]],[]],"fe_representation":"stderr :: *File"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdFile",["Just",144],["Just",348],"sfreadi"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","File",[]]],["Type","_Tuple3",[["Type","Bool",[]],["Type","Int",[]],["Type","File",[]]]],[]],"fe_representation":"sfreadi :: !File -> (!Bool,!Int,!File)"},["Tip"],["Tip"]]]]]]]]],["Bin",299,["Location","StdEnv","StdOverloadedList",["Just",494],["Nothing"],"RemoveMemberM"],{"fe_kind":["Macro"],"fe_representation":"RemoveMemberM e l :== removeMember_ e l\nwhere\n\tremoveMember_ e [|a:as]\n\t| a == e = as\n\t| otherwise = [|a:removeMember_ e as]\n\tremoveMember_ e [|] = [|]"},["Bin",192,["Location","StdEnv","StdList",["Just",113],["Just",334],"removeDup"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[[["Class","Eq"],["Var","a"]]]],"fe_representation":"removeDup :: !.[a] -> .[a] | Eq a"},["Bin",110,["Location","StdEnv","StdGeneric",["Just",36],["Nothing"],"grd_fields"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericRecordDescriptor",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":".grd_fields :: GenericRecordDescriptor -> [String]"},["Bin",45,["Location","StdEnv","StdFunc",["Just",35],["Nothing"],"return"],{"fe_kind":["Macro"],"fe_representation":"return r :== \\s -> (r,s)"},["Bin",17,["Location","StdEnv","StdFunc",["Just",15],["Nothing"],"o"],{"fe_kind":["Macro"],"fe_priority":["RightAssoc",9],"fe_representation":"(o) infixr 9\n(o) f g :== \\x -> (f (g x))"},["Bin",9,["Location","StdEnv","StdFile",["Just",150],["Just",400],"sfend"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","File",[]]],["Type","Bool",[]],[]],"fe_representation":"sfend :: !File -> Bool"},["Bin",3,["Location","StdEnv","StdFile",["Just",147],["Just",372],"sfreadline"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","File",[]]],["Type","_Tuple2",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","File",[]]]],[]],"fe_representation":"sfreadline :: !File -> (!*{#Char},!File)"},["Bin",1,["Location","StdEnv","StdFile",["Just",146],["Just",364],"sfreads"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","File",[]],["Type","Int",[]]],["Type","_Tuple2",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","File",[]]]],[]],"fe_representation":"sfreads :: !File !Int -> (!*{#Char},!File)"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdFile",["Just",148],["Just",380],"sfseek"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","File",[]],["Type","Int",[]],["Type","Int",[]]],["Type","_Tuple2",[["Type","Bool",[]],["Type","File",[]]]],[]],"fe_representation":"sfseek :: !File !Int !Int -> (!Bool,!File)"},["Tip"],["Tip"]]],["Bin",5,["Location","StdEnv","StdFile",["Just",158],["Just",389],"fshare"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]]],["Type","File",[]],[]],"fe_representation":"fshare :: !*File -> File"},["Bin",1,["Location","StdEnv","StdFile",["Just",151],["Just",408],"sfposition"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","File",[]]],["Type","Int",[]],[]],"fe_representation":"sfposition :: !File -> Int"},["Tip"],["Tip"]],["Bin",3,["Location","StdEnv","StdFunc",["Just",9],["Just",13],"const"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","b"]],["Var","a"],[]],"fe_representation":"const :: !.a .b -> .a"},["Bin",1,["Location","StdEnv","StdFunc",["Just",8],["Just",10],"id"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"id :: !.a -> .a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdFunc",["Just",12],["Nothing"],"flip"],{"fe_kind":["Macro"],"fe_representation":"flip f a b :== f b a"},["Tip"],["Tip"]]]]],["Bin",7,["Location","StdEnv","StdFunc",["Just",24],["Just",41],"seq"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Func",[["Var","s"]],["Var","s"],[]]]],["Var","s"]],["Var","s"],[]],"fe_representation":"seq :: ![.(.s -> .s)] .s -> .s"},["Bin",4,["Location","StdEnv","StdFunc",["Just",19],["Just",30],"until"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Func",[["Var","a"]],["Var","a"],[]],["Var","a"]],["Var","a"],[]],"fe_representation":"until :: !(a -> .Bool) (a -> a) a -> a"},["Bin",2,["Location","StdEnv","StdFunc",["Just",18],["Just",25],"while"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Func",[["Var","a"]],["Var","a"],[]],["Var","a"]],["Var","a"],[]],"fe_representation":"while :: !(a -> .Bool) (a -> a) a -> a"},["Bin",1,["Location","StdEnv","StdFunc",["Just",17],["Just",22],"twice"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","a"],[]],["Var","a"]],["Var","a"],[]],"fe_representation":"twice :: !(.a -> .a) .a -> .a"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","StdEnv","StdFunc",["Just",20],["Just",35],"iter"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Func",[["Var","a"]],["Var","a"],[]],["Var","a"]],["Var","a"],[]],"fe_representation":"iter :: !Int (.a -> .a) .a -> .a"},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdFunc",["Just",32],["Nothing"],"`bind`"],{"fe_kind":["Macro"],"fe_priority":["NoAssoc",0],"fe_representation":"(`bind`) infix 0\n(`bind`) f g :== \\st0 -> (let (r,st1) = f st0 in (g r st1))"},["Bin",1,["Location","StdEnv","StdFunc",["Just",25],["Just",45],"seqList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","St",[["Var","s"],["Var","a"]]]]],["Var","s"]],["Type","_Tuple2",[["Type","_List",[["Var","a"]]],["Var","s"]]],[]],"fe_representation":"seqList :: ![St .s .a] .s -> ([.a],.s)"},["Tip"],["Tip"]],["Tip"]]]],["Bin",27,["Location","StdEnv","StdGeneric",["Just",25],["Nothing"],"gcd_index"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericConsDescriptor",[]]],["Type","Int",[]],[]],"fe_representation":".gcd_index :: GenericConsDescriptor -> Int"},["Bin",16,["Location","StdEnv","StdGeneric",["Just",10],["Nothing"],"PAIR"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"],["Var","b"]],["Type","PAIR",[["Var","a"],["Var","b"]]],[]],"fe_representation":"PAIR :: a b -> PAIR a b"},["Bin",6,["Location","StdEnv","StdGeneric",["Just",8],["Nothing"],"UNIT"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UNIT",[]],[]],"fe_representation":"UNIT :: UNIT"},["Bin",3,["Location","StdEnv","StdGeneric",["Just",4],["Nothing"],"map_to"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Bimap",[["Var","a"],["Var","b"]]]],["Func",[["Var","a"]],["Var","b"],[]],[]],"fe_representation":".map_to :: (Bimap a b) -> a -> b"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",4],["Nothing"],"map_from"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Bimap",[["Var","a"],["Var","b"]]]],["Func",[["Var","b"]],["Var","a"],[]],[]],"fe_representation":".map_from :: (Bimap a b) -> b -> a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",5],["Just",7],"bimapId"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Bimap",[["Var","a"],["Var","a"]]],[]],"fe_representation":"bimapId :: Bimap .a .a"},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdGeneric",["Just",9],["Nothing"],"LEFT"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","EITHER",[["Var","a"],["Var","b"]]],[]],"fe_representation":"LEFT :: a -> EITHER a b"},["Tip"],["Bin",1,["Location","StdEnv","StdGeneric",["Just",9],["Nothing"],"RIGHT"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","b"]],["Type","EITHER",[["Var","a"],["Var","b"]]],[]],"fe_representation":"RIGHT :: b -> EITHER a b"},["Tip"],["Tip"]]]],["Bin",9,["Location","StdEnv","StdGeneric",["Just",18],["Nothing"],"gtd_conses"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericTypeDefDescriptor",[]]],["Type","_List",[["Type","GenericConsDescriptor",[]]]],[]],"fe_representation":".gtd_conses :: GenericTypeDefDescriptor -> [GenericConsDescriptor]"},["Bin",5,["Location","StdEnv","StdGeneric",["Just",15],["Nothing"],"RECORD"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","RECORD",[["Var","a"]]],[]],"fe_representation":"RECORD :: a -> RECORD a"},["Bin",2,["Location","StdEnv","StdGeneric",["Just",13],["Nothing"],"OBJECT"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","OBJECT",[["Var","a"]]],[]],"fe_representation":"OBJECT :: a -> OBJECT a"},["Tip"],["Bin",1,["Location","StdEnv","StdGeneric",["Just",14],["Nothing"],"CONS"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","CONS",[["Var","a"]]],[]],"fe_representation":"CONS :: a -> CONS a"},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdGeneric",["Just",16],["Nothing"],"FIELD"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","FIELD",[["Var","a"]]],[]],"fe_representation":"FIELD :: a -> FIELD a"},["Tip"],["Bin",1,["Location","StdEnv","StdGeneric",["Just",18],["Nothing"],"gtd_arity"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericTypeDefDescriptor",[]]],["Type","Int",[]],[]],"fe_representation":".gtd_arity :: GenericTypeDefDescriptor -> Int"},["Tip"],["Tip"]]]],["Bin",3,["Location","StdEnv","StdGeneric",["Just",18],["Nothing"],"gtd_num_conses"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericTypeDefDescriptor",[]]],["Type","Int",[]],[]],"fe_representation":".gtd_num_conses :: GenericTypeDefDescriptor -> Int"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",18],["Nothing"],"gtd_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericTypeDefDescriptor",[]]],["Type","String",[]],[]],"fe_representation":".gtd_name :: GenericTypeDefDescriptor -> String"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",25],["Nothing"],"gcd_arity"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericConsDescriptor",[]]],["Type","Int",[]],[]],"fe_representation":".gcd_arity :: GenericConsDescriptor -> Int"},["Tip"],["Tip"]]]]],["Bin",10,["Location","StdEnv","StdGeneric",["Just",34],["Nothing"],"GenConsAssocLeft"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GenConsAssoc",[]],[]],"fe_representation":"GenConsAssocLeft :: GenConsAssoc"},["Bin",6,["Location","StdEnv","StdGeneric",["Just",25],["Nothing"],"gcd_type"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericConsDescriptor",[]]],["Type","GenType",[]],[]],"fe_representation":".gcd_type :: GenericConsDescriptor -> GenType"},["Bin",2,["Location","StdEnv","StdGeneric",["Just",25],["Nothing"],"gcd_prio"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericConsDescriptor",[]]],["Type","GenConsPrio",[]],[]],"fe_representation":".gcd_prio :: GenericConsDescriptor -> GenConsPrio"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",25],["Nothing"],"gcd_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericConsDescriptor",[]]],["Type","String",[]],[]],"fe_representation":".gcd_name :: GenericConsDescriptor -> String"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","StdEnv","StdGeneric",["Just",33],["Nothing"],"GenConsNoPrio"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GenConsPrio",[]],[]],"fe_representation":"GenConsNoPrio :: GenConsPrio"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",25],["Nothing"],"gcd_type_def"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericConsDescriptor",[]]],["Type","GenericTypeDefDescriptor",[]],[]],"fe_representation":".gcd_type_def :: GenericConsDescriptor -> GenericTypeDefDescriptor"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",33],["Nothing"],"GenConsPrio"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","GenConsAssoc",[]],["Type","Int",[]]],["Type","GenConsPrio",[]],[]],"fe_representation":"GenConsPrio :: GenConsAssoc Int -> GenConsPrio"},["Tip"],["Tip"]]]],["Bin",3,["Location","StdEnv","StdGeneric",["Just",34],["Nothing"],"GenConsAssocRight"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GenConsAssoc",[]],[]],"fe_representation":"GenConsAssocRight :: GenConsAssoc"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",34],["Nothing"],"GenConsAssocNone"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GenConsAssoc",[]],[]],"fe_representation":"GenConsAssocNone :: GenConsAssoc"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",36],["Nothing"],"grd_arity"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericRecordDescriptor",[]]],["Type","Int",[]],[]],"fe_representation":".grd_arity :: GenericRecordDescriptor -> Int"},["Tip"],["Tip"]]]]]],["Bin",64,["Location","StdEnv","StdList",["Just",62],["Just",239],"repeatn"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"repeatn :: !.Int a -> .[a]"},["Bin",46,["Location","StdEnv","StdGeneric",["Just",75],["Nothing"],"generic_dict"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericDict",[["Var","a"]]]],["Var","a"],[]],"fe_representation":".generic_dict :: (GenericDict a) -> a"},["Bin",14,["Location","StdEnv","StdGeneric",["Just",50],["Nothing"],"GenTypeArrow"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","GenType",[]],["Type","GenType",[]]],["Type","GenType",[]],[]],"fe_representation":"GenTypeArrow :: GenType GenType -> GenType"},["Bin",7,["Location","StdEnv","StdGeneric",["Just",44],["Nothing"],"gfd_cons"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericFieldDescriptor",[]]],["Type","GenericRecordDescriptor",[]],[]],"fe_representation":".gfd_cons :: GenericFieldDescriptor -> GenericRecordDescriptor"},["Bin",3,["Location","StdEnv","StdGeneric",["Just",36],["Nothing"],"grd_type"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericRecordDescriptor",[]]],["Type","GenType",[]],[]],"fe_representation":".grd_type :: GenericRecordDescriptor -> GenType"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",36],["Nothing"],"grd_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericRecordDescriptor",[]]],["Type","String",[]],[]],"fe_representation":".grd_name :: GenericRecordDescriptor -> String"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",36],["Nothing"],"grd_type_arity"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericRecordDescriptor",[]]],["Type","Int",[]],[]],"fe_representation":".grd_type_arity :: GenericRecordDescriptor -> Int"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdGeneric",["Just",44],["Nothing"],"gfd_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericFieldDescriptor",[]]],["Type","String",[]],[]],"fe_representation":".gfd_name :: GenericFieldDescriptor -> String"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",44],["Nothing"],"gfd_index"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericFieldDescriptor",[]]],["Type","Int",[]],[]],"fe_representation":".gfd_index :: GenericFieldDescriptor -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",50],["Nothing"],"GenTypeApp"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","GenType",[]],["Type","GenType",[]]],["Type","GenType",[]],[]],"fe_representation":"GenTypeApp :: GenType GenType -> GenType"},["Tip"],["Tip"]]]],["Bin",6,["Location","StdEnv","StdGeneric",["Just",56],["Nothing"],"ConsLeft"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ConsPos",[]],[]],"fe_representation":"ConsLeft :: ConsPos"},["Bin",2,["Location","StdEnv","StdGeneric",["Just",50],["Nothing"],"GenTypeVar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","GenType",[]],[]],"fe_representation":"GenTypeVar :: Int -> GenType"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",50],["Nothing"],"GenTypeCons"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GenType",[]],[]],"fe_representation":"GenTypeCons :: String -> GenType"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","StdEnv","StdGeneric",["Just",57],["Just",83],"getConsPath"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","GenericConsDescriptor",[]]],["Type","_List",[["Type","ConsPos",[]]]],[]],"fe_representation":"getConsPath :: !GenericConsDescriptor -> [ConsPos]"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",56],["Nothing"],"ConsRight"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ConsPos",[]],[]],"fe_representation":"ConsRight :: ConsPos"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",60],["Just",5],"bimap"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Bimap",[["Var","a"],["Var","b"]]],[]],"fe_generic_vars":["a","b"],"fe_representation":"generic bimap a b :: Bimap .a .b"},["Tip"],["Tip"]]]]],["Bin",31,["Location","StdEnv","StdList",["Just",43],["Just",129],"init"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"init :: ![.a] -> [.a]"},["Bin",15,["Location","StdEnv","StdInt",["Just",58],["Nothing"],"IF_INT_64_OR_32"],{"fe_kind":["Macro"],"fe_representation":"IF_INT_64_OR_32 int64 int32 :== int64"},["Bin",7,["Location","StdEnv","StdInt",["Just",53],["Just",245],"bitxor"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"(bitxor) infixl 6 :: !Int !Int -> Int"},["Bin",3,["Location","StdEnv","StdInt",["Just",51],["Nothing"],"bitor"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"(bitor) infixl 6 :: !Int !Int -> Int"},["Bin",1,["Location","StdEnv","StdGeneric",["Just",76],["Nothing"],"generic_dict0"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenericDict0",[["Var","a"]]]],["Var","a"],[]],"fe_representation":".generic_dict0 :: (GenericDict0 a) -> a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdInt",["Just",52],["Just",239],"bitand"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"(bitand) infixl 6 :: !Int !Int -> Int"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdInt",["Just",55],["Just",257],">>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_priority":["NoAssoc",7],"fe_representation":"(>>) infix 7 :: !Int !Int -> Int"},["Bin",1,["Location","StdEnv","StdInt",["Just",54],["Just",251],"<<"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]]],["Type","Int",[]],[]],"fe_priority":["NoAssoc",7],"fe_representation":"(<<) infix 7 :: !Int !Int -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdInt",["Just",56],["Just",295],"bitnot"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","Int",[]],[]],"fe_representation":"bitnot :: !Int -> Int"},["Tip"],["Tip"]]]],["Bin",7,["Location","StdEnv","StdList",["Just",36],["Just",108],"isEmpty"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"isEmpty :: ![.a] -> Bool"},["Bin",3,["Location","StdEnv","StdList",["Just",34],["Just",100],"++"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_priority":["RightAssoc",5],"fe_representation":"(++) infixr 5 :: ![.a] u:[.a] -> u:[.a]"},["Bin",1,["Location","StdEnv","StdList",["Just",33],["Just",84],"!!"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","Int",[]]],["Var","a"],[]],"fe_priority":["LeftAssoc",9],"fe_representation":"(!!) infixl 9 :: ![.a] !Int -> .a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",35],["Just",104],"flatten"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_List",[["Var","a"]]]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"flatten :: ![[.a]] -> [.a]"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdList",["Just",41],["Just",120],"tl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"tl :: !u:[.a] -> u:[.a]"},["Bin",1,["Location","StdEnv","StdList",["Just",40],["Just",116],"hd"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"hd :: ![.a] -> .a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",42],["Just",124],"last"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"last :: ![.a] -> .a"},["Tip"],["Tip"]]]]],["Bin",15,["Location","StdEnv","StdList",["Just",51],["Just",183],"insert"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Var","a"],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"insert :: (a -> a -> .Bool) a !u:[a] -> u:[a]"},["Bin",7,["Location","StdEnv","StdList",["Just",47],["Just",157],"dropWhile"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"dropWhile :: (a -> .Bool) !u:[a] -> u:[a]"},["Bin",3,["Location","StdEnv","StdList",["Just",45],["Just",147],"takeWhile"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"takeWhile :: (a -> .Bool) !.[a] -> .[a]"},["Bin",1,["Location","StdEnv","StdList",["Just",44],["Just",134],"take"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"take :: !Int [.a] -> [.a]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",46],["Just",152],"drop"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"drop :: !Int !u:[.a] -> u:[.a]"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdList",["Just",49],["Just",171],"filter"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"filter :: (a -> .Bool) !.[a] -> .[a]"},["Bin",1,["Location","StdEnv","StdList",["Just",48],["Just",162],"span"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","_Tuple2",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"span :: (a -> .Bool) !u:[a] -> (.[a],u:[a])"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",50],["Just",176],"reverse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"reverse :: ![.a] -> [.a]"},["Tip"],["Tip"]]]],["Bin",7,["Location","StdEnv","StdList",["Just",55],["Just",205],"splitAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Var","a"]]]],["Type","_Tuple2",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"splitAt :: !Int u:[.a] -> ([.a],u:[.a])"},["Bin",3,["Location","StdEnv","StdList",["Just",53],["Just",194],"removeAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"removeAt :: !Int !u:[.a] -> u:[.a]"},["Bin",1,["Location","StdEnv","StdList",["Just",52],["Just",189],"insertAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"insertAt :: !Int .a u:[.a] -> u:[.a]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",54],["Just",199],"updateAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"updateAt :: !Int .a !u:[.a] -> u:[.a]"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdList",["Just",60],["Just",232],"iterate"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","a"],[]],["Var","a"]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"iterate :: (a -> a) a -> .[a]"},["Bin",1,["Location","StdEnv","StdList",["Just",59],["Just",235],"map"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","b"]]],[]],"fe_representation":"map :: (.a -> .b) ![.a] -> [.b]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",61],["Just",225],"indexList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","Int",[]]]],[]],"fe_representation":"indexList :: !.[a] -> [Int]"},["Tip"],["Tip"]]]]]]],["Bin",17,["Location","StdEnv","StdList",["Just",81],["Nothing"],"foldr"],{"fe_kind":["Macro"],"fe_representation":"foldr op r l :== foldr l\nwhere\n\tfoldr [] = r\n\tfoldr [a:x] = op a (foldr x)"},["Bin",7,["Location","StdEnv","StdList",["Just",66],["Just",261],"zip"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]]]],["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[]],"fe_representation":"zip :: !(![.a],[.b]) -> [(.a,.b)]"},["Bin",3,["Location","StdEnv","StdList",["Just",64],["Just",251],"unzip"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]],["Type","_Tuple2",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]]],[]],"fe_representation":"unzip :: ![(.a,.b)] -> ([.a],[.b])"},["Bin",1,["Location","StdEnv","StdList",["Just",63],["Just",242],"repeat"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"repeat :: a -> [a]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",65],["Just",257],"zip2"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[]],"fe_representation":"zip2 :: ![.a] [.b] -> [(.a,.b)]"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdList",["Just",68],["Just",264],"diag3"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]],["Type","_List",[["Var","c"]]]],["Type","_List",[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]]]],[]],"fe_representation":"diag3 :: !.[a] .[b] .[c] -> [.(a,b,c)]"},["Bin",1,["Location","StdEnv","StdList",["Just",67],["Just",274],"diag2"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","b"]]]],["Type","_List",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[]],"fe_representation":"diag2 :: !.[a] .[b] -> [.(a,b)]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",75],["Nothing"],"foldl"],{"fe_kind":["Macro"],"fe_representation":"foldl op r l :== foldl r l\nwhere\n\tfoldl r [] = r\n\tfoldl r [a:x] = foldl (op r a) x"},["Tip"],["Tip"]]]],["Bin",9,["Location","StdEnv","StdList",["Just",97],["Just",326],"isMember"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[[["Class","Eq"],["Var","a"]]]],"fe_representation":"isMember :: a !.[a] -> Bool | Eq a"},["Bin",5,["Location","StdEnv","StdList",["Just",92],["Just",314],"any"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"any :: (.a -> .Bool) ![.a] -> Bool"},["Bin",3,["Location","StdEnv","StdList",["Just",90],["Just",302],"and"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Bool",[]]]]],["Type","Bool",[]],[]],"fe_representation":"and :: ![.Bool] -> Bool"},["Bin",1,["Location","StdEnv","StdList",["Just",86],["Just",247],"scan"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","a"],[]],[]],["Var","a"],["Type","_List",[["Var","b"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"scan :: (a -> .(.b -> a)) a ![.b] -> .[a]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",91],["Just",308],"or"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Bool",[]]]]],["Type","Bool",[]],[]],"fe_representation":"or :: ![.Bool] -> Bool"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","StdList",["Just",93],["Just",320],"all"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"all :: (.a -> .Bool) ![.a] -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdList",["Just",105],["Just",338],"removeMember"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[[["Class","Eq"],["Var","a"]]]],"fe_representation":"removeMember :: a !u:[a] -> u:[a] | Eq a"},["Bin",1,["Location","StdEnv","StdList",["Just",101],["Just",330],"isAnyMember"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Bool",[]],[[["Class","Eq"],["Var","a"]]]],"fe_representation":"isAnyMember :: !.[a] !.[a] -> Bool | Eq a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",109],["Just",344],"removeMembers"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[[["Class","Eq"],["Var","a"]]]],"fe_representation":"removeMembers :: !u:[a] !.[a] -> u:[a] | Eq a"},["Tip"],["Tip"]]]]]]],["Bin",81,["Location","StdEnv","StdOverloadedList",["Just",255],["Nothing"],"ReverseM"],{"fe_kind":["Macro"],"fe_representation":"ReverseM list :== reverse_ list [|]\nwhere\n\treverse_ [|hd:tl] list = reverse_ tl [|hd:list]\n\treverse_ [|] list = list"},["Bin",43,["Location","StdEnv","StdOverloadedList",["Just",122],["Nothing"],"IsEmptyM"],{"fe_kind":["Macro"],"fe_representation":"IsEmptyM l :== isEmpty l\nwhere\n\tisEmpty [|] = True\n\tisEmpty _ = False"},["Bin",24,["Location","StdEnv","StdOverloadedList",["Just",36],["Nothing"],"LengthM"],{"fe_kind":["Macro"],"fe_representation":"LengthM xs :== length_ 0 xs\nwhere\n\tlength_ n [|x:xs] = length_ (inc n) xs\n\tlength_ n [|] = n"},["Bin",16,["Location","StdEnv","StdMisc",["Just",9],["Just",16],"undef"],{"fe_kind":["Function"],"fe_type":["Func",[],["Var","a"],[]],"fe_representation":"undef :: .a"},["Bin",6,["Location","StdEnv","StdList",["Just",135],["Just",381],"prod"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[[["Class","*"],["Var","a"]],[["Class","one"],["Var","a"]]]],"fe_representation":"prod :: !.[a] -> a | * a & one a"},["Bin",3,["Location","StdEnv","StdList",["Just",121],["Just",360],"limit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[[["Class","Eq"],["Var","a"]]]],"fe_representation":"limit :: !.[a] -> a | Eq a"},["Bin",1,["Location","StdEnv","StdList",["Just",117],["Just",348],"removeIndex"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","_List",[["Var","a"]]]],["Type","_Tuple2",[["Type","Int",[]],["Type","_List",[["Var","a"]]]]],[[["Class","Eq"],["Var","a"]]]],"fe_representation":"removeIndex :: !a !u:[a] -> (Int,u:[a]) | Eq a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdList",["Just",129],["Just",371],"sum"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[[["Class","+"],["Var","a"]],[["Class","zero"],["Var","a"]]]],"fe_representation":"sum :: !.[a] -> a | + a & zero a"},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdMisc",["Just",8],["Just",8],"abort"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]]],["Var","a"],[]],"fe_representation":"abort :: !{#Char} -> .a"},["Bin",1,["Location","StdEnv","StdList",["Just",138],["Just",387],"avg"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[[["Class","\/"],["Var","a"]],[["Class","IncDec"],["Var","a"]]]],"fe_representation":"avg :: !.[a] -> a | \/ a & IncDec a"},["Tip"],["Tip"]],["Tip"]]],["Bin",9,["Location","StdEnv","StdOrdList",["Just",29],["Just",71],"maxListBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","_List",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"maxListBy :: (a -> a -> Bool) !.[a] -> a"},["Bin",5,["Location","StdEnv","StdOrdList",["Just",22],["Just",51],"mergeBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"mergeBy :: (a -> a -> Bool) !u:[a] !v:[a] -> w:[a], [u<=w, v<=w]"},["Bin",3,["Location","StdEnv","StdOrdList",["Just",15],["Just",28],"sortBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"sortBy :: (a -> a -> Bool) !u:[a] -> u:[a]"},["Bin",1,["Location","StdEnv","StdOrdList",["Just",10],["Just",13],"sort"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"sort :: !u:[a] -> u:[a] | Ord a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOrdList",["Just",16],["Just",43],"merge"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","_List",[["Var","a"]]],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"merge :: !u:[a] !v:[a] -> w:[a] | Ord a, [u<=w, v<=w]"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","StdOrdList",["Just",24],["Just",59],"maxList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"maxList :: !.[a] -> a | Ord a"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdOrdList",["Just",35],["Just",96],"minListBy"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","_List",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"minListBy :: (a -> a -> Bool) !.[a] -> a"},["Bin",1,["Location","StdEnv","StdOrdList",["Just",30],["Just",83],"minList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Var","a"],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"minList :: !.[a] -> a | Ord a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",29],["Just",156],"Length"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Type","Int",[]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"Length :: !u:(l v:e) -> Int | List l e, [u<=v]"},["Tip"],["Tip"]]]]],["Bin",7,["Location","StdEnv","StdOverloadedList",["Just",100],["Nothing"],"++$"],{"fe_kind":["Macro"],"fe_priority":["RightAssoc",5],"fe_representation":"(++$) infixr 5\n(++$) l1 l2 :== (++||) l1 l2\nwhere\n\t(++||) [|hd:tl] list = [|hd:tl ++|| list]\n\t(++||) nil list = list"},["Bin",3,["Location","StdEnv","StdOverloadedList",["Just",73],["Nothing"],"!!$"],{"fe_kind":["Macro"],"fe_priority":["LeftAssoc",9],"fe_representation":"(!!$) infixl 9\n(!!$) l n :== (!!|) l n\nwhere\n\t(!!|) [|] _ = subscript_error\n\t(!!|) list i = index list i\n\twhere\n\t\tindex :: !u:(l v:e) !Int -> v:e | List l e, [u<=v]\n\t\tindex [|hd:tl] 0 = hd\n\t\tindex [|hd:tl] n = index tl (n - 1)\n\t\tindex [|] _ = subscript_error\n\tsubscript_error = abort \"Subscript error in !!||,index too large\""},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",65],["Just",280],"!!|"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]],["Type","Int",[]]],["Var","e"],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_priority":["LeftAssoc",9],"fe_representation":"(!!|) infixl 9 :: !u:(l v:e) !Int -> v:e | List l e, [u<=v]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",91],["Just",315],"++|"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]],["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_priority":["RightAssoc",5],"fe_representation":"(++|) infixr 5 :: !u:(l v:e) u:(l v:e) -> u:(l v:e) | List l e, [u<=v]"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdOverloadedList",["Just",110],["Nothing"],"FlattenM"],{"fe_kind":["Macro"],"fe_representation":"FlattenM l :== flatten l\nwhere\n\tflatten [|h:t] = h ++$ flatten t\n\tflatten [|] = [|]"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",105],["Nothing"],"Flatten"],{"fe_kind":["Macro"],"fe_representation":"Flatten l :== flatten l\nwhere\n\tflatten [|h:t] = h ++| flatten t\n\tflatten [|] = [|]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",115],["Just",336],"IsEmpty"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Type","Bool",[]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"IsEmpty :: !u:(l v:e) -> .Bool | List l e, [u<=v]"},["Tip"],["Tip"]]]]],["Bin",18,["Location","StdEnv","StdOverloadedList",["Just",195],["Nothing"],"TakeWhile"],{"fe_kind":["Macro"],"fe_representation":"TakeWhile f l :== takeWhile l\nwhere\n\ttakeWhile [|a:x]\n\t| f a = [|a:takeWhile x]\n\t| otherwise = [|]\n\ttakeWhile [|] = [|]"},["Bin",10,["Location","StdEnv","StdOverloadedList",["Just",158],["Nothing"],"LastM"],{"fe_kind":["Macro"],"fe_representation":"LastM l :== last_ l\nwhere\n\tlast_ [|a:[|]] = a\n\tlast_ [|a:tl] = last_ tl\n\tlast_ [|] = abort \"LastM of [|]\""},["Bin",5,["Location","StdEnv","StdOverloadedList",["Just",146],["Nothing"],"TlM"],{"fe_kind":["Macro"],"fe_representation":"TlM l :== tl_ l\nwhere\n\ttl_ [|a:x] = x\n\ttl_ [|] = abort \"TlM of [|]\""},["Bin",3,["Location","StdEnv","StdOverloadedList",["Just",134],["Nothing"],"HdM"],{"fe_kind":["Macro"],"fe_representation":"HdM l :== hd_ l\nwhere\n\thd_ [|a:x] = a\n\thd_ [|] = abort \"HdM of [|]\""},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",127],["Just",345],"Hd"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Var","e"],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"Hd :: !u:(l v:e) -> v:e | List l e, [u<=v]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",139],["Just",354],"Tl"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"Tl :: !u:(l v:e) -> u:(l v:e) | List l e, [u<=v]"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",151],["Just",363],"Last"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Var","e"],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"Last :: !u:(l v:e) -> v:e | List l e, [u<=v]"},["Tip"],["Tip"]]],["Bin",4,["Location","StdEnv","StdOverloadedList",["Just",177],["Just",385],"Take"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"Take :: !Int u:(l v:e) -> u:(l v:e) | List l e, [u<=v]"},["Bin",2,["Location","StdEnv","StdOverloadedList",["Just",171],["Nothing"],"InitM"],{"fe_kind":["Macro"],"fe_representation":"InitM l :== init_ l\nwhere\n\tinit_ [|] = [|]\n\tinit_ [|x:[|]] = [|]\n\tinit_ [|x:xs] = [|x:init_ xs]"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",164],["Just",374],"Init"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"Init :: !u:(l v:e) -> .(l v:e) | List l e, [u<=v]"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",184],["Nothing"],"TakeM"],{"fe_kind":["Macro"],"fe_representation":"TakeM n l :== if (n <= 0) [|] (take n l)\nwhere\n\ttake n [|x:xs]\n\t| n <= 1 = [|x:[|]]\n\t| otherwise = [|x:take (n - 1) xs]\n\ttake n [|]\n\t| n <= 0 = [|]\n\t| otherwise = [|]"},["Tip"],["Tip"]]]],["Bin",7,["Location","StdEnv","StdOverloadedList",["Just",220],["Nothing"],"Span"],{"fe_kind":["Macro"],"fe_representation":"Span p l :== span l\nwhere\n\tspan list=:[|x:xs]\n\t| p x\n\t\t# (ys,zs) = span xs\n\t\t= ([|x:ys],zs)\n\t| otherwise = ([|],list)\n\tspan [|] = ([|],[|])"},["Bin",3,["Location","StdEnv","StdOverloadedList",["Just",208],["Nothing"],"DropM"],{"fe_kind":["Macro"],"fe_representation":"DropM n l :== drop n l\nwhere\n\tdrop n xs\n\t| n <= 0 = xs\n\tdrop n [|x:xs] = drop (n - 1) xs\n\tdrop n [|] = [|]"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",201],["Just",415],"Drop"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"Drop :: !Int !u:(l v:e) -> u:(l v:e) | List l e, [u<=v]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",214],["Nothing"],"DropWhile"],{"fe_kind":["Macro"],"fe_representation":"DropWhile f l :== dropWhile l\nwhere\n\tdropWhile cons=:[|a:x]\n\t| f a = dropWhile x\n\t| otherwise = cons\n\tdropWhile [] = [|]"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdOverloadedList",["Just",239],["Nothing"],"FilterM"],{"fe_kind":["Macro"],"fe_representation":"FilterM f l :== filter l\nwhere\n\tfilter [|a:x]\n\t| f a = [|a:filter x]\n\t| otherwise = filter x\n\tfilter [|] = [|]"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",231],["Nothing"],"Filter"],{"fe_kind":["Macro"],"fe_representation":"Filter f l :== filter l\nwhere\n\tfilter [|a:x]\n\t| f a = [|a:filter x]\n\t| otherwise = filter x\n\tfilter nil = nil"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",247],["Just",459],"Reverse"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"Reverse :: !u:(l v:e) -> u:(l v:e) | List l e, [u<=v]"},["Tip"],["Tip"]]]]]],["Bin",37,["Location","StdEnv","StdOverloadedList",["Just",368],["Nothing"],"UnzipM"],{"fe_kind":["Macro"],"fe_representation":"UnzipM l :== unzip_ l\nwhere\n\tunzip_ [|] = ([|],[|])\n\tunzip_ [|(x,y):xys] = ([|x:xs],[|y:ys])\n\twhere\n\t\t(xs,ys) = unzip_ xys"},["Bin",18,["Location","StdEnv","StdOverloadedList",["Just",322],["Nothing"],"Map"],{"fe_kind":["Macro"],"fe_representation":"Map f l :== map_ l\nwhere\n\tmap_ [|a:x] = [|f a:map_ x]\n\tmap_ [|] = [|]"},["Bin",9,["Location","StdEnv","StdOverloadedList",["Just",287],["Nothing"],"RemoveAtM"],{"fe_kind":["Macro"],"fe_representation":"RemoveAtM n l :== removeAt_ n l\nwhere\n\tremoveAt_ 0 [|y:ys] = ys\n\tremoveAt_ n [|y:ys] = [|y:removeAt_ (n - 1) ys]\n\tremoveAt_ n [|] = [|]"},["Bin",4,["Location","StdEnv","StdOverloadedList",["Just",274],["Nothing"],"InsertAtM"],{"fe_kind":["Macro"],"fe_representation":"InsertAtM n l1 l2 :== insertAt_ n l1 l2\nwhere\n\tinsertAt_ 0 x ys = [|x:ys]\n\tinsertAt_ _ x [|] = [|x:[|]]\n\tinsertAt_ n x [|y:ys] = [|y:insertAt_ (n - 1) x ys]"},["Bin",2,["Location","StdEnv","StdOverloadedList",["Just",260],["Nothing"],"Insert"],{"fe_kind":["Macro"],"fe_representation":"Insert r x l :== insert_ x l\nwhere\n\tinsert_ x ls=:[|y:ys]\n\t| r x y = [|x:ls]\n\t| otherwise = [|y:insert_ x ys]\n\tinsert_ x [] = [|x:[|]]"},["Tip"],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",267],["Just",478],"InsertAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","e"],["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"InsertAt :: !Int v:e u:(l v:e) -> u:(l v:e) | List l e, [u<=v]"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",280],["Just",489],"RemoveAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"RemoveAt :: !Int !u:(l v:e) -> u:(l v:e) | List l e, [u<=v]"},["Tip"],["Tip"]]],["Bin",4,["Location","StdEnv","StdOverloadedList",["Just",307],["Just",513],"SplitAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Cons","l",[["Var","e"]]]],["Type","_Tuple2",[["Cons","l",[["Var","e"]]],["Cons","l",[["Var","e"]]]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"SplitAt :: !Int u:(l v:e) -> (.(l v:e),u:(l v:e)) | List l e, [u<=v]"},["Bin",2,["Location","StdEnv","StdOverloadedList",["Just",300],["Nothing"],"UpdateAtM"],{"fe_kind":["Macro"],"fe_representation":"UpdateAtM n x l :== updateAt_ n x l\nwhere\n\tupdateAt_ 0 x [|] = [|]\n\tupdateAt_ 0 x [|y:ys] = [|x:ys]\n\tupdateAt_ _ x [|] = [|]\n\tupdateAt_ n x [|y:ys] = [|y:updateAt_ (n - 1) x ys]"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",293],["Just",500],"UpdateAt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","e"],["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"UpdateAt :: !Int v:e !u:(l v:e) -> u:(l v:e) | List l e, [u<=v]"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",314],["Nothing"],"SplitAtM"],{"fe_kind":["Macro"],"fe_representation":"SplitAtM n l :== splitAt_ n l\nwhere\n\tsplitAt_ 0 xs = ([|],xs)\n\tsplitAt_ _ [|] = ([|],[|])\n\tsplitAt_ n [|x:xs] = ([|x:xs`],xs``)\n\twhere\n\t\t(xs`,xs``) = splitAt_ (n - 1) xs"},["Tip"],["Tip"]]]],["Bin",8,["Location","StdEnv","StdOverloadedList",["Just",343],["Nothing"],"IndexListM"],{"fe_kind":["Macro"],"fe_representation":"IndexListM x :== indexList_ 0 x\nwhere\n\tindexList_ n [|a:x] = [|n:indexList_ (n + 1) x]\n\tindexList_ n [|] = [|]"},["Bin",3,["Location","StdEnv","StdOverloadedList",["Just",332],["Nothing"],"Iterate"],{"fe_kind":["Macro"],"fe_representation":"Iterate f x :== iterate_ x\nwhere\n\titerate_ x = [|x:iterate_ (f x)]"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",327],["Nothing"],"MapM"],{"fe_kind":["Macro"],"fe_representation":"MapM f l :== map_ l\nwhere\n\tmap_ [|a:x] = [|f a:map_ x]\n\tmap_ [|] = [|]"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",336],["Just",542],"IndexList"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Cons","l",[["Type","Int",[]]]],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","List"],["Cons","l",[["Type","Int",[]]]]]]],"fe_representation":"IndexList :: !(l e) -> l Int | List l e & List l Int"},["Tip"],["Tip"]]],["Bin",4,["Location","StdEnv","StdOverloadedList",["Just",360],["Nothing"],"Repeat"],{"fe_kind":["Macro"],"fe_representation":"Repeat x :== cons\nwhere\n\tcons = [|x:cons]"},["Bin",2,["Location","StdEnv","StdOverloadedList",["Just",355],["Nothing"],"RepeatnM"],{"fe_kind":["Macro"],"fe_representation":"RepeatnM n a :== repeatn_ n a\nwhere\n\trepeatn_ 0 _ = [|]\n\trepeatn_ n a = [|a:repeatn_ (dec n) a]"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",348],["Just",554],"Repeatn"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","e"]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"Repeatn :: !Int e -> .(l e) | List l e"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",364],["Just",567],"Unzip"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]],["Type","_Tuple2",[["Cons","l",[["Var","a"]]],["Cons","l",[["Var","b"]]]]],[[["Class","List"],["Cons","l",[["Var","a"]]]],[["Class","List"],["Cons","l",[["Var","b"]]]],[["Class","List"],["Cons","l",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]]]],"fe_representation":"Unzip :: !u:(l v:(.a,.b)) -> .(u:(l .a),u:(l .b)) | List l a & List l b & List l (a,b), [u<=v]"},["Tip"],["Tip"]]]]],["Bin",18,["Location","StdEnv","StdOverloadedList",["Just",424],["Nothing"],"Foldr"],{"fe_kind":["Macro"],"fe_representation":"Foldr op r l :== foldr l\nwhere\n\tfoldr [|] = r\n\tfoldr [|a:x] = op a (foldr x)"},["Bin",7,["Location","StdEnv","StdOverloadedList",["Just",392],["Nothing"],"Diag3"],{"fe_kind":["Macro"],"fe_representation":"Diag3 xs ys zs :== [(x,y,z) \\\\ ((x,y),z) <- Diag2 (Diag2 xs ys) zs]"},["Bin",4,["Location","StdEnv","StdOverloadedList",["Just",384],["Just",589],"Zip"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Cons","l",[["Var","a"]]],["Cons","l",[["Var","b"]]]]]],["Cons","l",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[[["Class","List"],["Cons","l",[["Var","a"]]]],[["Class","List"],["Cons","l",[["Var","b"]]]],[["Class","List"],["Cons","l",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]]]],"fe_representation":"Zip :: !.(!u:(l .a),u:(l .b)) -> u:(l v:(.a,.b)) | List l a & List l b & List l (a,b), [u<=v]"},["Bin",2,["Location","StdEnv","StdOverloadedList",["Just",379],["Nothing"],"Zip2M"],{"fe_kind":["Macro"],"fe_representation":"Zip2M l1 l2 :== zip2_ l1 l2\nwhere\n\tzip2_ [|a:as] [|b:bs] = [|(a,b):zip2_ as bs]\n\tzip2_ as bs = [|]"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",375],["Just",580],"Zip2"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","a"]]],["Cons","l",[["Var","b"]]]],["Cons","l",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[[["Class","List"],["Cons","l",[["Var","a"]]]],[["Class","List"],["Cons","l",[["Var","b"]]]],[["Class","List"],["Cons","l",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]]]],"fe_representation":"Zip2 :: !u:(l .a) u:(l .b) -> u:(l v:(.a,.b)) | List l a & List l b & List l (a,b), [u<=v]"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",388],["Nothing"],"ZipM"],{"fe_kind":["Macro"],"fe_representation":"ZipM t :== zip_ t\nwhere\n\tzip_ (x,y) = Zip2M x y"},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdOverloadedList",["Just",394],["Nothing"],"Diag2"],{"fe_kind":["Macro"],"fe_representation":"Diag2 l1 l2 :== diag2_ l1 l2\nwhere\n\tdiag2_ [|] ys = [|]\n\tdiag2_ xs [|] = [|]\n\tdiag2_ xs ys = [(ae,be) \\\\ (a,b) <- takeall xs [|] ys [|], ae <|- a & be <|- b]\n\twhere\n\t\ttakeall xin xout yin yout\n\t\t| morex && morey = [|(nxout,nyout):takeall nxin nxout nyin nyout]\n\t\t| morey = [|(xout,Tl nyout):takeall xin xout nyin (Tl nyout)]\n\t\t| morex = [|(nxout,yout):takeall nxin nxout yin yout]\n\t\t| otherwise = shift xout yout\n\t\twhere\n\t\t\t(morex,nxin,nxout) = takexnext xin xout\n\t\t\t(morey,nyin,nyout) = takeynext yin yout\n\t\t\ttakexnext [|x:xs] accu = (True,xs,[|x:accu])\n\t\t\ttakexnext [|] accu = (False,[|],accu)\n\t\t\ttakeynext [|y:ys] accu = (True,ys,accu ++| [|y:[|]])\n\t\t\ttakeynext [|] accu = (False,[|],accu)\n\t\t\tshift xout [|_:ys] = [|(xout,ys):shift xout ys]\n\t\t\tshift _ [|] = [|]"},["Tip"],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",418],["Nothing"],"Foldl"],{"fe_kind":["Macro"],"fe_representation":"Foldl op r l :== foldl r l\nwhere\n\tfoldl r [|] = r\n\tfoldl r [|a:x] = foldl (op r a) x"},["Tip"],["Tip"]]]],["Bin",10,["Location","StdEnv","StdOverloadedList",["Just",450],["Nothing"],"All"],{"fe_kind":["Macro"],"fe_representation":"All p l :== all_ l\nwhere\n\tall_ [|] = True\n\tall_ [|b:tl] = p b && all_ tl"},["Bin",4,["Location","StdEnv","StdOverloadedList",["Just",439],["Just",645],"Or"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Type","Bool",[]]]]],["Type","Bool",[]],[[["Class","List"],["Cons","l",[["Type","Bool",[]]]]]]],"fe_representation":"Or :: !u:(l v:Bool) -> Bool | List l Bool, [u<=v]"},["Bin",2,["Location","StdEnv","StdOverloadedList",["Just",430],["Nothing"],"Scan"],{"fe_kind":["Macro"],"fe_representation":"Scan op r l :== scan_ r l\nwhere\n\tscan_ r [|a:x] = [|r:scan_ (op r a) x]\n\tscan_ r [|] = [|r:[|]]"},["Tip"],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",435],["Just",639],"And"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Type","Bool",[]]]]],["Type","Bool",[]],[[["Class","List"],["Cons","l",[["Type","Bool",[]]]]]]],"fe_representation":"And :: !u:(l v:Bool) -> Bool | List l Bool, [u<=v]"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",443],["Nothing"],"Any"],{"fe_kind":["Macro"],"fe_representation":"Any p l :== any_ l\nwhere\n\tany_ [|] = False\n\tany_ [|b:tl] = p b || any_ tl"},["Tip"],["Tip"]]],["Bin",5,["Location","StdEnv","StdOverloadedList",["Just",480],["Nothing"],"IsAnyMemberM"],{"fe_kind":["Macro"],"fe_representation":"IsAnyMemberM l1 l2 :== isAnyMember_ l1 l2\nwhere\n\tisAnyMember_ [|x:xs] list = IsMemberM x list || isAnyMember_ xs list\n\tisAnyMember_ [|] list = False"},["Bin",3,["Location","StdEnv","StdOverloadedList",["Just",466],["Nothing"],"IsMemberM"],{"fe_kind":["Macro"],"fe_representation":"IsMemberM x l :== isMember_ x l\nwhere\n\tisMember_ x [|hd:tl] = hd == x || isMember_ x tl\n\tisMember_ x [|] = False"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",457],["Just",665],"IsMember"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"],["Cons","l",[["Var","e"]]]],["Type","Bool",[]],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","Eq"],["Var","e"]]]],"fe_representation":"IsMember :: e !.(l e) -> Bool | List l e & Eq e"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",471],["Just",674],"IsAnyMember"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]],["Cons","l",[["Var","e"]]]],["Type","Bool",[]],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","Eq"],["Var","e"]]]],"fe_representation":"IsAnyMember :: !(l e) !(l e) -> Bool | List l e & Eq e"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",485],["Just",683],"RemoveMember"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"],["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","Eq"],["Var","e"]]]],"fe_representation":"RemoveMember :: e !u:(l e) -> u:(l e) | List l e & Eq e"},["Tip"],["Tip"]]]]]]]],["Bin",106,["Location","TCPIP","TCPChannelClass",["Just",117],["Just",71],"TR_NoSuccess"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TimeoutReport",[]],[]],"fe_representation":"TR_NoSuccess :: TimeoutReport"},["Bin",60,["Location","StdEnv","_SystemEnumStrict",["Just",27],["Just",53],"_from_to_uts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_#List!",[["Var","a"]]],[[["Class","Enum"],["Var","a"]],[["Class","UTSList"],["Var","a"]]]],"fe_representation":"_from_to_uts :: !a !a -> .[#a!] | Enum a & UTSList a"},["Bin",40,["Location","StdEnv","StdOverloadedList",["Just",587],["Nothing"],"ProdM"],{"fe_kind":["Macro"],"fe_representation":"ProdM xs :== accprod one xs\nwhere\n\taccprod n [|x:xs] = accprod (n * x) xs\n\taccprod n [|] = n"},["Bin",11,["Location","StdEnv","StdOverloadedList",["Just",538],["Nothing"],"RemoveIndexM"],{"fe_kind":["Macro"],"fe_representation":"RemoveIndexM e xs :== removei e xs 0\nwhere\n\tremovei e [|x:xs] i\n\t| x == e = (i,xs)\n\t| otherwise = (j,[|x:res])\n\t\twith\n\t\t\t(j,res) = removei e xs (inc i)\n\tremovei e [|] i = abort \"Error in RemoveIndexM: element not found\""},["Bin",5,["Location","StdEnv","StdOverloadedList",["Just",524],["Nothing"],"RemoveDupM"],{"fe_kind":["Macro"],"fe_representation":"RemoveDupM l :== removeDup_ l\nwhere\n\tremoveDup_ [|x:xs] = [|x:removeDup_ (Filter ((<>) x) xs)]\n\tremoveDup_ _ = [|]"},["Bin",3,["Location","StdEnv","StdOverloadedList",["Just",510],["Nothing"],"RemoveMembersM"],{"fe_kind":["Macro"],"fe_representation":"RemoveMembersM x l :== removeMembers_ x l\nwhere\n\tremoveMembers_ x [|] = x\n\tremoveMembers_ x [|b:y] = removeMembers_ (RemoveMemberM b x) y"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",501],["Just",696],"RemoveMembers"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]],["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","Eq"],["Var","e"]]]],"fe_representation":"RemoveMembers :: u:(l e) .(l e) -> u:(l e) | List l e & Eq e"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",515],["Just",705],"RemoveDup"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","Eq"],["Var","e"]]]],"fe_representation":"RemoveDup :: !.(l e) -> .(l e) | List l e & Eq e"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",529],["Just",714],"RemoveIndex"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"],["Cons","l",[["Var","e"]]]],["Type","_Tuple2",[["Type","Int",[]],["Cons","l",[["Var","e"]]]]],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","Eq"],["Var","e"]]]],"fe_representation":"RemoveIndex :: e !u:(l e) -> (Int,u:(l e)) | List l e & Eq e"},["Tip"],["Tip"]]],["Bin",5,["Location","StdEnv","StdOverloadedList",["Just",573],["Nothing"],"SumM"],{"fe_kind":["Macro"],"fe_representation":"SumM xs :== accsum zero xs\nwhere\n\taccsum n [|x:xs] = accsum (n + x) xs\n\taccsum n [|] = n"},["Bin",3,["Location","StdEnv","StdOverloadedList",["Just",557],["Nothing"],"LimitM"],{"fe_kind":["Macro"],"fe_representation":"LimitM l :== limit_\nwhere\n\tlimit_ [|a:cons=:[|b:x]]\n\t| a == b = a\n\t| otherwise = limit_ cons\n\tlimit_ _ = abort \"incorrect use of LimitM\""},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",548],["Just",736],"Limit"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Var","e"],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","=="],["Var","e"]]]],"fe_representation":"Limit :: !.(l e) -> e | List l e & == e"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",564],["Just",749],"Sum"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Var","e"],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","+"],["Var","e"]],[["Class","zero"],["Var","e"]]]],"fe_representation":"Sum :: !.(l e) -> e | List l e & + e & zero e"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",578],["Just",760],"Prod"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Var","e"],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","*"],["Var","e"]],[["Class","one"],["Var","e"]]]],"fe_representation":"Prod :: !.(l e) -> e | List l e & * e & one e"},["Tip"],["Tip"]]]],["Bin",28,["Location","StdEnv","_SystemEnumStrict",["Just",10],["Just",16],"_from_sts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_!List!",[["Var","a"]]],[[["Class","IncDec"],["Var","a"]]]],"fe_representation":"_from_sts :: !a -> .[!a!] | IncDec a"},["Bin",20,["Location","StdEnv","StdTuple",["Just",18],["Nothing"],"snd3"],{"fe_kind":["Macro"],"fe_representation":"snd3 tuple :== t2\nwhere\n\t(_,t2,_) = tuple"},["Bin",8,["Location","StdEnv","StdString",["Just",31],["Just",111],":="],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Char",[]]]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_priority":["LeftAssoc",9],"fe_representation":"(:=) infixl 9 :: !{#Char} !(!Int,!Char) -> {#Char}"},["Bin",4,["Location","StdEnv","StdOverloadedList",["Just",601],["Nothing"],"AvgM"],{"fe_kind":["Macro"],"fe_representation":"AvgM l :== avg_ l\nwhere\n\tavg_ [|] = abort \"avg called with empty list\"\n\tavg_ x = accavg zero zero x\n\twhere\n\t\taccavg n nelem [|x:xs] = accavg (n + x) (inc nelem) xs\n\t\taccavg n nelem [|] = n \/ nelem"},["Bin",1,["Location","StdEnv","StdOverloadedList",["Just",592],["Just",773],"Avg"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Var","e"],[[["Class","List"],["Cons","l",[["Var","e"]]]],[["Class","\/"],["Var","e"]],[["Class","IncDec"],["Var","e"]]]],"fe_representation":"Avg :: !.(l e) -> e | List l e & \/ e & IncDec e"},["Tip"],["Tip"]],["Bin",2,["Location","StdEnv","StdString",["Just",29],["Just",103],"+++."],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","_#Array",[["Type","Char",[]]]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_priority":["RightAssoc",5],"fe_representation":"(+++.) infixr 5 :: !{#Char} !{#Char} -> .{#Char}"},["Bin",1,["Location","StdEnv","StdReal",["Just",59],["Nothing"],"entier"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]]],["Type","Int",[]],[]],"fe_representation":"entier :: !Real -> Int"},["Tip"],["Tip"]],["Tip"]]],["Bin",3,["Location","StdEnv","StdTuple",["Just",13],["Nothing"],"snd"],{"fe_kind":["Macro"],"fe_representation":"snd tuple :== t2\nwhere\n\t(_,t2) = tuple"},["Bin",1,["Location","StdEnv","StdTuple",["Just",11],["Nothing"],"fst"],{"fe_kind":["Macro"],"fe_representation":"fst tuple :== t1\nwhere\n\t(t1,_) = tuple"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdTuple",["Just",16],["Nothing"],"fst3"],{"fe_kind":["Macro"],"fe_representation":"fst3 tuple :== t1\nwhere\n\t(t1,_,_) = tuple"},["Tip"],["Tip"]]]],["Bin",11,["Location","StdEnv","_SystemEnum",["Just",23],["Just",21],"_from_then"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_List",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_then :: a a -> .[a] | Enum a"},["Bin",7,["Location","StdEnv","StdTuple",["Just",32],["Just",56],"curry"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]],["Var","c"],[]],["Var","a"],["Var","b"]],["Var","c"],[]],"fe_representation":"curry :: !.((.a,.b) -> .c) .a .b -> .c"},["Bin",3,["Location","StdEnv","StdTuple",["Just",28],["Just",62],"app2"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Func",[["Var","a"]],["Var","b"],[]],["Func",[["Var","c"]],["Var","d"],[]]]],["Type","_Tuple2",[["Var","a"],["Var","c"]]]],["Type","_Tuple2",[["Var","b"],["Var","d"]]],[]],"fe_representation":"app2 :: !(.(.a -> .b),.(.c -> .d)) !(.a,.c) -> (.b,.d)"},["Bin",1,["Location","StdEnv","StdTuple",["Just",20],["Nothing"],"thd3"],{"fe_kind":["Macro"],"fe_representation":"thd3 tuple :== t3\nwhere\n\t(_,_,t3) = tuple"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdTuple",["Just",29],["Just",65],"app3"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple3",[["Func",[["Var","a"]],["Var","b"],[]],["Func",[["Var","c"]],["Var","d"],[]],["Func",[["Var","e"]],["Var","f"],[]]]],["Type","_Tuple3",[["Var","a"],["Var","c"],["Var","e"]]]],["Type","_Tuple3",[["Var","b"],["Var","d"],["Var","f"]]],[]],"fe_representation":"app3 :: !(.(.a -> .b),.(.c -> .d),.(.e -> .f)) !(.a,.c,.e) -> (.b,.d,.f)"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","_SystemEnum",["Just",21],["Just",11],"_from"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_List",[["Var","a"]]],[[["Class","IncDec"],["Var","a"]],[["Class","Ord"],["Var","a"]]]],"fe_representation":"_from :: a -> .[a] | IncDec a & Ord a"},["Bin",1,["Location","StdEnv","StdTuple",["Just",33],["Just",59],"uncurry"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","c"],[]],[]],["Type","_Tuple2",[["Var","a"],["Var","b"]]]],["Var","c"],[]],"fe_representation":"uncurry :: !.(.a -> .(.b -> .c)) !(.a,.b) -> .c"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","_SystemEnum",["Just",22],["Just",15],"_from_to"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_List",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_to :: !a !a -> .[a] | Enum a"},["Tip"],["Tip"]]]],["Bin",3,["Location","StdEnv","_SystemEnumStrict",["Just",8],["Just",10],"_from_s"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_!List",[["Var","a"]]],[[["Class","IncDec"],["Var","a"]]]],"fe_representation":"_from_s :: !a -> .[!a] | IncDec a"},["Bin",1,["Location","StdEnv","_SystemEnum",["Just",24],["Just",29],"_from_then_to"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"],["Var","a"]],["Type","_List",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_then_to :: !a !a !a -> .[a] | Enum a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",9],["Just",13],"_from_ts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_List!",[["Var","a"]]],[[["Class","IncDec"],["Var","a"]]]],"fe_representation":"_from_ts :: !a -> .[a!] | IncDec a"},["Tip"],["Tip"]]]]],["Bin",7,["Location","StdEnv","_SystemEnumStrict",["Just",23],["Just",29],"_from_to_s"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_!List",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_to_s :: !a !a -> .[!a] | Enum a"},["Bin",3,["Location","StdEnv","_SystemEnumStrict",["Just",12],["Just",22],"_from_uts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_#List!",[["Var","a"]]],[[["Class","IncDec"],["Var","a"]],[["Class","UTSList"],["Var","a"]]]],"fe_representation":"_from_uts :: !a -> .[#a!] | IncDec a & UTSList a"},["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",11],["Just",19],"_from_u"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_#List",[["Var","a"]]],[[["Class","IncDec"],["Var","a"]],[["Class","UList"],["Var","a"]]]],"fe_representation":"_from_u :: !a -> .[#a] | IncDec a & UList a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",13],["Just",25],"_from_o"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Cons","l",[["Var","a"]]],[[["Class","IncDec"],["Var","a"]],[["Class","List"],["Cons","l",[["Var","a"]]]]]],"fe_representation":"_from_o :: a -> .(l a) | IncDec a & List l a"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","_SystemEnumStrict",["Just",25],["Just",41],"_from_to_sts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_!List!",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_to_sts :: !a !a -> .[!a!] | Enum a"},["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",24],["Just",35],"_from_to_ts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_List!",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_to_ts :: !a !a -> .[a!] | Enum a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",26],["Just",47],"_from_to_u"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_#List",[["Var","a"]]],[[["Class","Enum"],["Var","a"]],[["Class","UList"],["Var","a"]]]],"fe_representation":"_from_to_u :: !a !a -> .[#a] | Enum a & UList a"},["Tip"],["Tip"]]]]]],["Bin",19,["Location","StdEnv","_SystemEnumStrict",["Just",53],["Just",99],"_from_then_to_s"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"],["Var","a"]],["Type","_!List",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_then_to_s :: !a !a !a -> .[!a] | Enum a"},["Bin",7,["Location","StdEnv","_SystemEnumStrict",["Just",40],["Just",74],"_from_then_sts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_!List!",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_then_sts :: a a -> .[!a!] | Enum a"},["Bin",3,["Location","StdEnv","_SystemEnumStrict",["Just",38],["Just",68],"_from_then_s"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_!List",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_then_s :: a a -> .[!a] | Enum a"},["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",28],["Just",59],"_from_to_o"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Cons","l",[["Var","a"]]],[[["Class","Enum"],["Var","a"]],[["Class","List"],["Cons","l",[["Var","a"]]]]]],"fe_representation":"_from_to_o :: !a !a -> .(l a) | Enum a & List l a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",39],["Just",71],"_from_then_ts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_List!",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_then_ts :: a a -> .[a!] | Enum a"},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","_SystemEnumStrict",["Just",42],["Just",80],"_from_then_uts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_#List!",[["Var","a"]]],[[["Class","Enum"],["Var","a"]],[["Class","UTSList"],["Var","a"]]]],"fe_representation":"_from_then_uts :: a a -> .[#a!] | Enum a & UTSList a"},["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",41],["Just",77],"_from_then_u"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","_#List",[["Var","a"]]],[[["Class","Enum"],["Var","a"]],[["Class","UList"],["Var","a"]]]],"fe_representation":"_from_then_u :: a a -> .[#a] | Enum a & UList a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",43],["Just",83],"_from_then_o"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Cons","l",[["Var","a"]]],[[["Class","Enum"],["Var","a"]],[["Class","List"],["Cons","l",[["Var","a"]]]]]],"fe_representation":"_from_then_o :: a a -> .(l a) | Enum a & List l a"},["Tip"],["Tip"]]]],["Bin",11,["Location","StdEnv","_SystemEnumStrict",["Just",57],["Just",123],"_from_then_to_uts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"],["Var","a"]],["Type","_#List!",[["Var","a"]]],[[["Class","Enum"],["Var","a"]],[["Class","UTSList"],["Var","a"]]]],"fe_representation":"_from_then_to_uts :: !a !a !a -> .[#a!] | Enum a & UTSList a"},["Bin",3,["Location","StdEnv","_SystemEnumStrict",["Just",55],["Just",111],"_from_then_to_sts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"],["Var","a"]],["Type","_!List!",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_then_to_sts :: !a !a !a -> .[!a!] | Enum a"},["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",54],["Just",105],"_from_then_to_ts"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"],["Var","a"]],["Type","_List!",[["Var","a"]]],[[["Class","Enum"],["Var","a"]]]],"fe_representation":"_from_then_to_ts :: !a !a !a -> .[a!] | Enum a"},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","_SystemEnumStrict",["Just",56],["Just",117],"_from_then_to_u"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"],["Var","a"]],["Type","_#List",[["Var","a"]]],[[["Class","Enum"],["Var","a"]],[["Class","UList"],["Var","a"]]]],"fe_representation":"_from_then_to_u :: !a !a !a -> .[#a] | Enum a & UList a"},["Tip"],["Tip"]]],["Bin",7,["Location","TCPIP","TCPChannelClass",["Just",112],["Just",66],"rChannel"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DuplexChannel",[["Var","sChannel"],["Var","rChannel"],["Var","a"]]]],["Cons","rChannel",[["Var","a"]]],[]],"fe_representation":".rChannel :: (DuplexChannel sChannel rChannel a) -> rChannel a"},["Bin",4,["Location","StdEnv","_SystemStrictLists",["Just",19],["Just",24],"_nil_u"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","_#List",[["Var","e"]]],[[["Class","UList"],["Var","e"]]]],"fe_representation":"_nil_u :: .[#.e] | UList e"},["Bin",2,["Location","StdEnv","_SystemEnumStrict",["Just",58],["Just",129],"_from_then_to_o"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"],["Var","a"]],["Cons","l",[["Var","a"]]],[[["Class","Enum"],["Var","a"]],[["Class","List"],["Cons","l",[["Var","a"]]]]]],"fe_representation":"_from_then_to_o :: !a !a !a -> .(l a) | Enum a & List l a"},["Tip"],["Bin",1,["Location","StdEnv","_SystemStrictLists",["Just",18],["Just",18],"_nil"],{"fe_kind":["Function"],"fe_type":["Func",[],["Cons","l",[["Var","e"]]],[[["Class","List"],["Cons","l",[["Var","e"]]]]]],"fe_representation":"[|] :: u:(l .e) | List l e, [u<=e]"},["Tip"],["Tip"]]],["Bin",1,["Location","StdEnv","_SystemStrictLists",["Just",20],["Just",30],"_nil_uts"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","_#List!",[["Var","e"]]],[[["Class","UTSList"],["Var","e"]]]],"fe_representation":"_nil_uts :: .[#.e!] | UTSList e"},["Tip"],["Tip"]]],["Bin",2,["Location","TCPIP","TCPChannelClass",["Just",112],["Just",66],"sChannel"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DuplexChannel",[["Var","sChannel"],["Var","rChannel"],["Var","a"]]]],["Cons","sChannel",[["Var","a"]]],[]],"fe_representation":".sChannel :: (DuplexChannel sChannel rChannel a) -> sChannel a"},["Tip"],["Bin",1,["Location","TCPIP","TCPChannelClass",["Just",117],["Just",71],"TR_Expired"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TimeoutReport",[]],[]],"fe_representation":"TR_Expired :: TimeoutReport"},["Tip"],["Tip"]]]]]]],["Bin",45,["Location","TCPIP","TCPDef",["Just",45],["Just",46],"TCP_LISTENER"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TCP_Listener",[]]],["Uniq",["Type","PrimitiveRChannel",[]]],[]],"fe_representation":"TCP_LISTENER :: TCP_Listener -> *PrimitiveRChannel"},["Bin",25,["Location","TCPIP","TCPChannelClass",["Just",161],["Just",162],"closeChannel"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[[["Class","ChannelEnv"],["Var","env"]],[["Class","Send"],["Var","ch"]]]],"fe_representation":"closeChannel :: !*(ch .a) !*env -> *env | ChannelEnv env & Send ch"},["Bin",6,["Location","TCPIP","TCPChannelClass",["Just",146],["Just",134],"receive"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Var","a"],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]],[["Class","Receive"],["Var","ch"]]]],"fe_representation":"receive :: !*(ch .a) !*env -> (!.a,!*(ch .a),!*env) | ChannelEnv env & Receive ch"},["Bin",2,["Location","TCPIP","TCPChannelClass",["Just",117],["Just",71],"TR_Success"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TimeoutReport",[]],[]],"fe_representation":"TR_Success :: TimeoutReport"},["Tip"],["Bin",1,["Location","TCPIP","TCPChannelClass",["Just",132],["Just",95],"nreceive_MT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Timeout",[]]]],["Type","Int",[]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple4",[["Type","TimeoutReport",[]],["Type","_List",[["Var","a"]]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","Receive"],["Var","ch"]],[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"nreceive_MT :: !(Maybe Timeout) !Int !*(ch .a) !*env -> (!TimeoutReport,![.a],!*(ch .a),!*env) | Receive ch & ChannelEnv env"},["Tip"],["Tip"]]],["Bin",3,["Location","TCPIP","TCPChannelClass",["Just",155],["Just",156],"send"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]],[["Class","Send"],["Var","ch"]]]],"fe_representation":"send :: !.a !*(ch .a) !*env -> (!*(ch .a),!*env) | ChannelEnv env & Send ch"},["Bin",1,["Location","TCPIP","TCPChannelClass",["Just",149],["Just",145],"nreceive"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","_List",[["Var","a"]]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]],[["Class","Receive"],["Var","ch"]]]],"fe_representation":"nreceive :: !Int !*(ch .a) !*env -> (![.a],!*(ch .a),!*env) | ChannelEnv env & Receive ch"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPChannelClass",["Just",158],["Just",167],"nsend"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]],[["Class","Send"],["Var","ch"]]]],"fe_representation":"nsend :: ![.a] !*(ch .a) !*env -> (!*(ch .a),!*env) | ChannelEnv env & Send ch"},["Tip"],["Tip"]]]],["Bin",18,["Location","TCPIP","TCPChannels",["Just",75],["Just",230],"openTCP_Listener"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Port",[]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","Bool",[]],["Type","Maybe",[["Type","TCP_Listener",[]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"openTCP_Listener :: !Port !*env -> (!Bool,!Maybe TCP_Listener,!*env) | ChannelEnv env"},["Bin",10,["Location","TCPIP","TCPChannels",["Just",47],["Just",568],"TCP_RCharStreams"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Uniq",["Type","_List",[["Type","TCP_RCharStream",[]]]]]],["Uniq",["Type","TCP_RCharStreams",[]]],[]],"fe_representation":"TCP_RCharStreams :: *[TCP_RCharStream] -> *TCP_RCharStreams"},["Bin",4,["Location","TCPIP","TCPChannelClass",["Just",171],["Just",179],"flushBuffer_NB"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]],[["Class","Send"],["Var","ch"]]]],"fe_representation":"flushBuffer_NB :: !*(ch .a) !*env -> (!*(ch .a),!*env) | ChannelEnv env & Send ch"},["Bin",1,["Location","TCPIP","TCPChannelClass",["Just",168],["Just",173],"send_NB"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]],[["Class","Send"],["Var","ch"]]]],"fe_representation":"send_NB :: !.a !*(ch .a) !*env -> (!*(ch .a),!*env) | ChannelEnv env & Send ch"},["Tip"],["Tip"]],["Bin",2,["Location","TCPIP","TCPChannels",["Just",16],["Just",8],"TCP_Pair"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"],["Var","b"]],["Type","TCP_Pair",[["Var","a"],["Var","b"]]],[]],"fe_representation":"TCP_Pair :: a b -> TCP_Pair a b"},["Bin",1,["Location","TCPIP","TCPChannels",["Just",15],["Just",7],"TCP_Void"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TCP_Void",[]],[]],"fe_representation":"TCP_Void :: TCP_Void"},["Tip"],["Tip"]],["Tip"]]],["Bin",5,["Location","TCPIP","TCPChannels",["Just",69],["Just",205],"lookupIPAddress"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","IPAddress",[]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"lookupIPAddress :: !String !*env -> (!Maybe IPAddress,!*env) | ChannelEnv env"},["Bin",3,["Location","TCPIP","TCPChannels",["Just",59],["Just",627],"TCP_SCharStreams"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Uniq",["Type","_List",[["Type","TCP_SCharStream",[]]]]]],["Uniq",["Type","TCP_SCharStreams",[]]],[]],"fe_representation":"TCP_SCharStreams :: *[TCP_SCharStream] -> *TCP_SCharStreams"},["Bin",1,["Location","TCPIP","TCPChannels",["Just",49],["Just",570],"toRCharStream"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TCP_RChannel",[]]],["Type","TCP_RCharStream",[]],[]],"fe_representation":"toRCharStream :: !TCP_RChannel -> TCP_RCharStream"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPChannels",["Just",61],["Just",629],"toSCharStream"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TCP_SChannel",[]]],["Type","TCP_SCharStream",[]],[]],"fe_representation":"toSCharStream :: !TCP_SChannel -> TCP_SCharStream"},["Tip"],["Tip"]]],["Bin",1,["Location","TCPIP","TCPChannels",["Just",72],["Just",214],"connectTCP_MT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Timeout",[]]]],["Type","_Tuple2",[["Type","IPAddress",[]],["Type","Port",[]]]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","TimeoutReport",[]],["Type","Maybe",[["Type","TCP_DuplexChannel",[]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"connectTCP_MT :: !(Maybe Timeout) !(!IPAddress,!Port) !*env -> (!TimeoutReport,!Maybe TCP_DuplexChannel,!*env) | ChannelEnv env"},["Tip"],["Tip"]]]],["Bin",7,["Location","TCPIP","TCPDef",["Just",31],["Just",31],"byteSeqSize"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ByteSeq",[]]],["Type","Int",[]],[]],"fe_representation":"byteSeqSize :: !ByteSeq -> Int"},["Bin",3,["Location","TCPIP","TCPChannels",["Just",96],["Just",501],"selectChannel_MT"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Timeout",[]]]],["Uniq",["Var","r_channels"]],["Uniq",["Var","s_channels"]],["Uniq",["Var","env"]]],["Type","_Tuple4",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","SelectResult",[]]]]]],["Uniq",["Var","r_channels"]],["Uniq",["Var","s_channels"]],["Uniq",["Var","env"]]]],[[["Class","SelectReceive"],["Var","r_channels"]],[["Class","SelectSend"],["Var","s_channels"]],[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"selectChannel_MT :: !(Maybe Timeout) !*r_channels !*s_channels !*env -> (![(!Int,!SelectResult)],!*r_channels,!*s_channels,!*env) | SelectReceive r_channels & SelectSend s_channels & ChannelEnv env"},["Bin",1,["Location","TCPIP","TCPChannels",["Just",78],["Just",660],"tcpPossible"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"tcpPossible :: !*env -> (!Bool,!*env) | ChannelEnv env"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPDef",["Just",30],["Just",27],"toByteSeq"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","x"]],["Type","ByteSeq",[]],[[["Class","toString"],["Var","x"]]]],"fe_representation":"toByteSeq :: !x -> ByteSeq | toString x"},["Tip"],["Tip"]]],["Bin",3,["Location","TCPIP","TCPDef",["Just",42],["Just",43],"TCP_SChannels"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Uniq",["Type","_List",[["Type","TCP_SChannel",[]]]]]],["Uniq",["Type","TCP_SChannels",[]]],[]],"fe_representation":"TCP_SChannels :: *[TCP_SChannel] -> *TCP_SChannels"},["Bin",1,["Location","TCPIP","TCPDef",["Just",41],["Just",42],"TCP_RChannels"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Uniq",["Type","_List",[["Type","TCP_RChannel",[]]]]]],["Uniq",["Type","TCP_RChannels",[]]],[]],"fe_representation":"TCP_RChannels :: *[TCP_RChannel] -> *TCP_RChannels"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPDef",["Just",43],["Just",44],"TCP_Listeners"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Uniq",["Type","_List",[["Type","TCP_Listener",[]]]]]],["Uniq",["Type","TCP_Listeners",[]]],[]],"fe_representation":"TCP_Listeners :: *[TCP_Listener] -> *TCP_Listeners"},["Tip"],["Tip"]]]]]],["Bin",19,["Location","TCPIP","TCPStringChannels",["Just",28],["Just",10],"StringRChannels"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Uniq",["Type","_List",[["Type","StringRChannel",[]]]]]],["Uniq",["Type","StringRChannels",[]]],[]],"fe_representation":"StringRChannels :: *[StringRChannel] -> *StringRChannels"},["Bin",5,["Location","TCPIP","TCPDef",["Just",49],["Just",50],"SR_Disconnected"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SelectResult",[]],[]],"fe_representation":"SR_Disconnected :: SelectResult"},["Bin",2,["Location","TCPIP","TCPDef",["Just",49],["Just",50],"SR_Available"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SelectResult",[]],[]],"fe_representation":"SR_Available :: SelectResult"},["Bin",1,["Location","TCPIP","TCPDef",["Just",45],["Just",46],"TCP_RCHANNEL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TCP_RChannel",[]]],["Uniq",["Type","PrimitiveRChannel",[]]],[]],"fe_representation":"TCP_RCHANNEL :: TCP_RChannel -> *PrimitiveRChannel"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","TCPIP","TCPDef",["Just",49],["Just",50],"SR_Sendable"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SelectResult",[]],[]],"fe_representation":"SR_Sendable :: SelectResult"},["Bin",1,["Location","TCPIP","TCPDef",["Just",49],["Just",50],"SR_EOM"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SelectResult",[]],[]],"fe_representation":"SR_EOM :: SelectResult"},["Tip"],["Tip"]],["Tip"]]],["Bin",13,["Location","TCPIP","TCPStringChannelsInternal",["Just",16],["Nothing"],"receivedStrings"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","StringRChannel_",[["Var","a"]]]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":".receivedStrings :: *(StringRChannel_ a) -> [String]"},["Bin",8,["Location","TCPIP","TCPStringChannels",["Just",45],["Just",102],"toStringSChannel"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TCP_SChannel",[]]],["Type","StringSChannel",[]],[]],"fe_representation":"toStringSChannel :: TCP_SChannel -> StringSChannel"},["Bin",2,["Location","TCPIP","TCPStringChannels",["Just",43],["Just",100],"StringSChannels"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Uniq",["Type","_List",[["Type","StringSChannel",[]]]]]],["Uniq",["Type","StringSChannels",[]]],[]],"fe_representation":"StringSChannels :: *[StringSChannel] -> *StringSChannels"},["Bin",1,["Location","TCPIP","TCPStringChannels",["Just",30],["Just",12],"toStringRChannel"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TCP_RChannel",[]]],["Type","StringRChannel",[]],[]],"fe_representation":"toStringRChannel :: TCP_RChannel -> StringRChannel"},["Tip"],["Tip"]],["Tip"]],["Bin",5,["Location","TCPIP","TCPStringChannelsInternal",["Just",16],["Nothing"],"maxSize"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","StringRChannel_",[["Var","a"]]]]],["Type","Int",[]],[]],"fe_representation":".maxSize :: *(StringRChannel_ a) -> Int"},["Bin",3,["Location","TCPIP","TCPStringChannelsInternal",["Just",6],["Nothing"],"ReadingLength"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Uniq",["Type","ReadPhase",[]]],[]],"fe_representation":"ReadingLength :: Int -> *ReadPhase"},["Bin",1,["Location","TCPIP","TCPStringChannelsInternal",["Just",6],["Nothing"],"EndOfMessages"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Uniq",["Type","ReadPhase",[]]],[]],"fe_representation":"EndOfMessages :: *ReadPhase"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPStringChannelsInternal",["Just",6],["Nothing"],"ReadingString"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","Int",[]],["Type","Int",[]]],["Uniq",["Type","ReadPhase",[]]],[]],"fe_representation":"ReadingString :: *{#Char} Int Int -> *ReadPhase"},["Tip"],["Tip"]]],["Bin",1,["Location","TCPIP","TCPStringChannelsInternal",["Just",16],["Nothing"],"readPhase"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","StringRChannel_",[["Var","a"]]]]],["Type","ReadPhase",[]],[]],"fe_representation":".readPhase :: *(StringRChannel_ a) -> ReadPhase"},["Tip"],["Tip"]]]],["Bin",4,["Location","TCPIP","ostcp",["Just",15],["Just",10],"os_eom"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Var","env"]]]],[]],"fe_representation":"os_eom :: !EndpointRef !*env -> (!Bool,!*env)"},["Bin",2,["Location","TCPIP","TCPStringChannelsInternal",["Just",16],["Nothing"],"tcp_rchan"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","StringRChannel_",[["Var","a"]]]]],["Type","TCP_RChannel",[]],[]],"fe_representation":".tcp_rchan :: *(StringRChannel_ a) -> TCP_RChannel"},["Tip"],["Bin",1,["Location","TCPIP","TCPStringChannelsInternal",["Just",23],["Just",8],"addString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Type","String",[]],["Type","Int",[]]]],["Type","ReadPhase",[]],["Type","Int",[]]],["Type","_Tuple2",[["Type","_List",[["Type","String",[]]]],["Type","ReadPhase",[]]]],[]],"fe_representation":"addString :: !(!String,!Int) !ReadPhase !Int -> (![String],!ReadPhase)"},["Tip"],["Tip"]]],["Bin",1,["Location","TCPIP","ostcp",["Just",16],["Just",27],"os_disconnected"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Var","env"]]]],[]],"fe_representation":"os_disconnected :: !EndpointRef !*env -> (!Bool,!*env)"},["Tip"],["Tip"]]]]]]]]],["Bin",190,["Location","iTasks","iTasks.Extensions.Currency",["Just",5],["Nothing"],"EUR"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","EUR",[]],[]],"fe_representation":"EUR :: Int -> EUR"},["Bin",120,["Location","TCPIP","tcp",["Just",90],["Just",147],"data_availableC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Var","env"]]]],[]],"fe_representation":"data_availableC :: !EndpointRef !*env -> (!Bool,!*env)"},["Bin",41,["Location","TCPIP","tcp",["Just",57],["Just",48],"bPackets"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Buffer",[]]],["Type","_List",[["Type","_#Array",[["Type","Char",[]]]]]],[]],"fe_representation":".bPackets :: Buffer -> [{#Char}]"},["Bin",22,["Location","TCPIP","tcp",["Just",37],["Nothing"],"IE_ASYNCCONNECTFAILED"],{"fe_kind":["Macro"],"fe_representation":"IE_ASYNCCONNECTFAILED :== 3"},["Bin",14,["Location","TCPIP","tcp",["Just",29],["Nothing"],"IE_CONNECTREQUEST"],{"fe_kind":["Macro"],"fe_representation":"IE_CONNECTREQUEST :== 1"},["Bin",6,["Location","TCPIP","ostcp",["Just",31],["Just",101],"tcp_getcurrenttick"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"tcp_getcurrenttick :: !*World -> (!Int,!*World)"},["Bin",2,["Location","TCPIP","ostcp",["Just",30],["Just",94],"getMbStopTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Timeout",[]]]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","_Tuple2",[["Type","Bool",[]],["Type","Int",[]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"getMbStopTime :: !(Maybe Timeout) !*env -> (!(!Bool,!Int),!*env) | ChannelEnv env"},["Bin",1,["Location","TCPIP","ostcp",["Just",18],["Just",78],"os_connectTCP_sync"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","_Tuple2",[["Type","Bool",[]],["Type","Int",[]]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","_Tuple3",[["Type","InetErrCode",[]],["Type","Bool",[]],["Type","EndpointRef",[]]]],["Uniq",["Var","env"]]]],[]],"fe_representation":"os_connectTCP_sync :: !Int !(!Bool,!Int) !(!Int,!Int) !*env -> (!(!InetErrCode,!Bool,!EndpointRef),!*env)"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","TCPIP","tcp",["Just",26],["Nothing"],"IOST"],{"fe_kind":["Macro"],"fe_representation":"IOST :== 1"},["Bin",1,["Location","TCPIP","tcp",["Just",25],["Nothing"],"WORLD"],{"fe_kind":["Macro"],"fe_representation":"WORLD :== 0"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",27],["Nothing"],"PST"],{"fe_kind":["Macro"],"fe_representation":"PST :== 2"},["Tip"],["Tip"]]]],["Bin",7,["Location","TCPIP","tcp",["Just",33],["Nothing"],"IE_DISCONNECTED"],{"fe_kind":["Macro"],"fe_representation":"IE_DISCONNECTED :== 17"},["Bin",3,["Location","TCPIP","tcp",["Just",31],["Nothing"],"IE_EOM"],{"fe_kind":["Macro"],"fe_representation":"IE_EOM :== 16"},["Bin",1,["Location","TCPIP","tcp",["Just",30],["Nothing"],"IE_RECEIVED"],{"fe_kind":["Macro"],"fe_representation":"IE_RECEIVED :== 4"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",32],["Nothing"],"IE_SENDABLE"],{"fe_kind":["Macro"],"fe_representation":"IE_SENDABLE :== 256"},["Tip"],["Tip"]]],["Bin",3,["Location","TCPIP","tcp",["Just",35],["Nothing"],"IE_IPADDRESSNOTFOUND"],{"fe_kind":["Macro"],"fe_representation":"IE_IPADDRESSNOTFOUND :== 536870928"},["Bin",1,["Location","TCPIP","tcp",["Just",34],["Nothing"],"IE_IPADDRESSFOUND"],{"fe_kind":["Macro"],"fe_representation":"IE_IPADDRESSFOUND :== 536870927"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",36],["Nothing"],"IE_ASYNCCONNECTCOMPLETE"],{"fe_kind":["Macro"],"fe_representation":"IE_ASYNCCONNECTCOMPLETE :== 2"},["Tip"],["Tip"]]]]],["Bin",7,["Location","TCPIP","tcp",["Just",51],["Just",41],"bId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Buffered_SChan",[]]],["Type","Int",[]],[]],"fe_representation":".bId :: Buffered_SChan -> Int"},["Bin",3,["Location","TCPIP","tcp",["Just",40],["Nothing"],"LISTENER"],{"fe_kind":["Macro"],"fe_representation":"LISTENER :== 1"},["Bin",1,["Location","TCPIP","tcp",["Just",39],["Nothing"],"RCHANNEL"],{"fe_kind":["Macro"],"fe_representation":"RCHANNEL :== 0"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",51],["Just",41],"bEndpointRef"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Buffered_SChan",[]]],["Type","EndpointRef",[]],[]],"fe_representation":".bEndpointRef :: Buffered_SChan -> EndpointRef"},["Tip"],["Tip"]]],["Bin",3,["Location","TCPIP","tcp",["Just",51],["Just",41],"bUnsent"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Buffered_SChan",[]]],["Type","Int",[]],[]],"fe_representation":".bUnsent :: Buffered_SChan -> Int"},["Bin",1,["Location","TCPIP","tcp",["Just",51],["Just",41],"bNormal"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Buffered_SChan",[]]],["Type","Buffer",[]],[]],"fe_representation":".bNormal :: Buffered_SChan -> Buffer"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",57],["Just",48],"bBegin"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Buffer",[]]],["Type","Int",[]],[]],"fe_representation":".bBegin :: Buffer -> Int"},["Tip"],["Tip"]]]]],["Bin",18,["Location","TCPIP","tcp",["Just",78],["Just",83],"unpack_tcpschan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TCP_SChannel_",[["Var","a"]]]],["Type","Buffered_SChan",[]],[]],"fe_representation":"unpack_tcpschan :: !.(TCP_SChannel_ .a) -> Buffered_SChan"},["Bin",10,["Location","TCPIP","tcp",["Just",70],["Nothing"],"ConnectReceiver"],{"fe_kind":["Macro"],"fe_representation":"ConnectReceiver :== 4"},["Bin",4,["Location","TCPIP","tcp",["Just",68],["Nothing"],"SChanReceiver"],{"fe_kind":["Macro"],"fe_representation":"SChanReceiver :== 2"},["Bin",2,["Location","TCPIP","tcp",["Just",67],["Nothing"],"RChanReceiver"],{"fe_kind":["Macro"],"fe_representation":"RChanReceiver :== 1"},["Bin",1,["Location","TCPIP","tcp",["Just",66],["Nothing"],"ListenerReceiver"],{"fe_kind":["Macro"],"fe_representation":"ListenerReceiver :== 0"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",69],["Nothing"],"DNSReceiver"],{"fe_kind":["Macro"],"fe_representation":"DNSReceiver :== 3"},["Tip"],["Tip"]]],["Bin",5,["Location","TCPIP","tcp",["Just",75],["Just",76],"pack_ipaddr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","IPAddress",[]],[]],"fe_representation":"pack_ipaddr :: !Int -> IPAddress"},["Bin",3,["Location","TCPIP","tcp",["Just",73],["Just",68],"pack_tcpschan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Buffered_SChan",[]]],["Type","TCP_SChannel_",[["Var","a"]]],[]],"fe_representation":"pack_tcpschan :: !Buffered_SChan -> TCP_SChannel_ .a"},["Bin",1,["Location","TCPIP","tcp",["Just",72],["Just",64],"pack_tcplistener"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]]],["Type","TCP_Listener_",[["Var","a"]]],[]],"fe_representation":"pack_tcplistener :: !EndpointRef -> TCP_Listener_ .a"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",74],["Just",72],"pack_tcprchan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Type","EndpointRef",[]],["Type","Int",[]]]]],["Type","TCP_RChannel_",[["Var","a"]]],[]],"fe_representation":"pack_tcprchan :: !(!EndpointRef,!Int) -> TCP_RChannel_ .a"},["Tip"],["Tip"]]],["Bin",1,["Location","TCPIP","tcp",["Just",77],["Just",79],"unpack_tcplistener"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TCP_Listener_",[["Var","a"]]]],["Type","EndpointRef",[]],[]],"fe_representation":"unpack_tcplistener :: !.(TCP_Listener_ .a) -> EndpointRef"},["Tip"],["Tip"]]]],["Bin",7,["Location","TCPIP","tcp",["Just",84],["Just",121],"lookupHost_syncC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","_Tuple2",[["Type","InetErrCode",[]],["Type","Int",[]]]],["Uniq",["Var","env"]]]],[]],"fe_representation":"lookupHost_syncC :: !String !*env -> (!(!InetErrCode,!Int),!*env)"},["Bin",3,["Location","TCPIP","tcp",["Just",80],["Just",91],"unpack_ipaddr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","IPAddress",[]]],["Type","Int",[]],[]],"fe_representation":"unpack_ipaddr :: !IPAddress -> Int"},["Bin",1,["Location","TCPIP","tcp",["Just",79],["Just",87],"unpack_tcprchan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TCP_RChannel_",[["Var","a"]]]],["Type","_Tuple2",[["Type","EndpointRef",[]],["Type","Int",[]]]],[]],"fe_representation":"unpack_tcprchan :: !.(TCP_RChannel_ .a) -> (!EndpointRef,!Int)"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",82],["Just",112],"toDottedDecimal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","String",[]],[]],"fe_representation":"toDottedDecimal :: !Int -> String"},["Tip"],["Tip"]]],["Bin",3,["Location","TCPIP","tcp",["Just",87],["Just",100],"close_tcprchan"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"close_tcprchan :: !EndpointRef !*env -> *env"},["Bin",1,["Location","TCPIP","tcp",["Just",86],["Just",94],"close_listener"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"close_listener :: !EndpointRef !*env -> *env"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",89],["Just",129],"openTCP_ListenerC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","_Tuple2",[["Type","InetErrCode",[]],["Type","EndpointRef",[]]]],["Uniq",["Var","env"]]]],[]],"fe_representation":"openTCP_ListenerC :: !Int !*env -> (!(!InetErrCode,!EndpointRef),!*env)"},["Tip"],["Tip"]]]]]],["Bin",78,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",69],["Nothing"],"Workflow"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskAttributes",[]],["Type","Task",[["Var","a"]]]],["Type","WorkflowContainer",[["Var","a"]]],[]],"fe_representation":"Workflow :: TaskAttributes (Task a) -> WorkflowContainer a"},["Bin",52,["Location","iTasks","iTasks.Extensions.Admin.ServerAdmin",["Just",8],["Just",4],"manageServer"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"manageServer :: Task ()"},["Bin",14,["Location","TCPIP","tcp",["Just",99],["Just",299],"getEndpointDataC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","_Tuple4",[["Type","Int",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]]]],["Uniq",["Var","env"]]]],[]],"fe_representation":"getEndpointDataC :: !EndpointRef !*env -> (!(!Int,!Bool,!Bool,!Bool),!*env)"},["Bin",7,["Location","TCPIP","tcp",["Just",94],["Just",224],"disconnectGracefulC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"disconnectGracefulC :: !EndpointRef !*env -> *env"},["Bin",3,["Location","TCPIP","tcp",["Just",92],["Just",187],"receiveC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Type","Int",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","String",[]],["Uniq",["Var","env"]]]],[]],"fe_representation":"receiveC :: !EndpointRef !Int !*env -> (!String,!*env)"},["Bin",1,["Location","TCPIP","tcp",["Just",91],["Just",165],"sendC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Type","String",[]],["Type","Int",[]],["Type","Int",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","_Tuple2",[["Type","InetErrCode",[]],["Type","Int",[]]]],["Uniq",["Var","env"]]]],[]],"fe_representation":"sendC :: !EndpointRef !String !Int !Int !*env -> (!(!InetErrCode,!Int),!*env)"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",93],["Just",204],"acceptC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","_Tuple3",[["Type","InetErrCode",[]],["Type","Int",[]],["Type","EndpointRef",[]]]],["Uniq",["Var","env"]]]],[]],"fe_representation":"acceptC :: !EndpointRef !*env -> (!(!InetErrCode,!Int,!EndpointRef),!*env)"},["Tip"],["Tip"]]],["Bin",3,["Location","TCPIP","tcp",["Just",96],["Just",258],"garbageCollectEndpointC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"garbageCollectEndpointC :: !EndpointRef !*env -> *env"},["Bin",1,["Location","TCPIP","tcp",["Just",95],["Just",241],"disconnectBrutalC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"disconnectBrutalC :: !EndpointRef !*env -> *env"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",98],["Just",277],"setEndpointData_no_new_notifiersC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EndpointRef",[]],["Type","Int",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"setEndpointData_no_new_notifiersC :: !EndpointRef !Int !Bool !Bool !Bool !*env -> *env"},["Tip"],["Tip"]]]],["Bin",6,["Location","TCPIP","tcp_bytestreams",["Just",12],["Just",5],"rbs_index"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","TCP_RCharStream_",[["Var","char"]]]]],["Type","Int",[]],[]],"fe_representation":".rbs_index :: *(TCP_RCharStream_ char) -> Int"},["Bin",3,["Location","TCPIP","tcp",["Just",101],["Just",344],"tcpPossibleC"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Var","env"]]]],[]],"fe_representation":"tcpPossibleC :: !*env -> (!Bool,!*env)"},["Bin",1,["Location","TCPIP","tcp",["Just",100],["Just",318],"selectChC"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Bool",[]],["Type","_Tuple2",[["Type","Bool",[]],["Type","Int",[]]]],["Type","_#Array",[["Type","EndpointRef",[]]]],["Type","_#Array",[["Type","Int",[]]]],["Type","_#Array",[["Type","EndpointRef",[]]]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","InetErrCode",[]],["Uniq",["Var","env"]]]],[]],"fe_representation":"selectChC :: !Int !Bool !(!Bool,!Int) !{#EndpointRef} !{#Int} !{#EndpointRef} !*env -> (!InetErrCode,!*env)"},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp_bytestreams",["Just",12],["Just",5],"rbs_buffer"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","TCP_RCharStream_",[["Var","char"]]]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":".rbs_buffer :: *(TCP_RCharStream_ char) -> {#Char}"},["Tip"],["Tip"]]],["Bin",2,["Location","TCPIP","tcp_bytestreams",["Just",18],["Just",13],"sbs_schan"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","TCP_SCharStream_",[["Var","char"]]]]],["Type","TCP_SChannel",[]],[]],"fe_representation":".sbs_schan :: *(TCP_SCharStream_ char) -> TCP_SChannel"},["Bin",1,["Location","TCPIP","tcp_bytestreams",["Just",12],["Just",5],"rbs_rchan"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","TCP_RCharStream_",[["Var","char"]]]]],["Type","TCP_RChannel",[]],[]],"fe_representation":".rbs_rchan :: *(TCP_RCharStream_ char) -> TCP_RChannel"},["Tip"],["Tip"]],["Tip"]]]],["Bin",37,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",8],["Nothing"],"task"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Workflow",[]]],["Type","WorkflowTaskContainer",[]],[]],"fe_representation":".task :: Workflow -> WorkflowTaskContainer","fe_documentation":["FunctionDoc",["Just","the thread of the main task of the workflow"],[],[],["Nothing"]]},["Bin",26,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",48],["Just",59],"doAuthenticatedWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Credentials",[]]],["Type","Task",[["Type","Maybe",[["Type","User",[]]]]]],[]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"doAuthenticatedWith :: !(Credentials -> Task (Maybe User)) (Task a) -> Task a | iTask a"},["Bin",17,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",8],["Nothing"],"title"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UserAccount",[]]],["Type","Maybe",[["Type","UserTitle",[]]]],[]],"fe_representation":".title :: UserAccount -> Maybe UserTitle"},["Bin",11,["Location","iTasks","iTasks.Extensions.Admin.TonicAdmin",["Just",20],["Just",42],"tonicDynamicWorkflow"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TaskAppRenderer",[]]]]],["Type","Workflow",[]],[]],"fe_representation":"tonicDynamicWorkflow :: [TaskAppRenderer] -> Workflow"},["Bin",7,["Location","iTasks","iTasks.Extensions.Admin.TonicAdmin",["Just",12],["Just",48],"tonicStaticBrowser"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TaskAppRenderer",[]]]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"tonicStaticBrowser :: [TaskAppRenderer] -> Task ()"},["Bin",3,["Location","iTasks","iTasks.Extensions.Admin.TonicAdmin",["Just",8],["Just",35],"tonicDashboard"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TaskAppRenderer",[]]]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"tonicDashboard :: [TaskAppRenderer] -> Task ()"},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.StoreAdmin",["Just",8],["Just",6],"manageStore"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"manageStore :: Task ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.TonicAdmin",["Just",10],["Just",32],"tonic"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"tonic :: Task ()"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Admin.TonicAdmin",["Just",16],["Just",39],"tonicStaticWorkflow"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TaskAppRenderer",[]]]]],["Type","Workflow",[]],[]],"fe_representation":"tonicStaticWorkflow :: [TaskAppRenderer] -> Workflow"},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.TonicAdmin",["Just",14],["Just",63],"tonicBrowseWithModule"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","AllBlueprints",[]],["Type","_List",[["Type","TaskAppRenderer",[]]]],["Type","Shared",[["Type","NavStack",[]]]],["Type","TonicModule",[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"tonicBrowseWithModule :: AllBlueprints [TaskAppRenderer] (Shared NavStack) TonicModule -> Task ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.TonicAdmin",["Just",18],["Just",189],"tonicDynamicBrowser"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TaskAppRenderer",[]]]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"tonicDynamicBrowser :: [TaskAppRenderer] -> Task ()"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",8],["Nothing"],"credentials"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UserAccount",[]]],["Type","Credentials",[]],[]],"fe_representation":".credentials :: UserAccount -> Credentials"},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.TonicAdmin",["Just",22],["Just",85],"viewStaticTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","AllBlueprints",[]],["Type","_List",[["Type","TaskAppRenderer",[]]]],["Type","Shared",[["Type","NavStack",[]]]],["Type","BlueprintIdent",[]],["Type","TonicModule",[]],["Type","TonicFunc",[]],["Type","Int",[]],["Type","Bool",[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"viewStaticTask :: !AllBlueprints ![TaskAppRenderer] !(Shared NavStack) !BlueprintIdent !TonicModule !TonicFunc !Int !Bool -> Task ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",8],["Nothing"],"roles"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UserAccount",[]]],["Type","_List",[["Type","Role",[]]]],[]],"fe_representation":".roles :: UserAccount -> [Role]"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",36],["Just",49],"authenticateUser"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Username",[]],["Type","Password",[]]],["Type","Task",[["Type","Maybe",[["Type","User",[]]]]]],[]],"fe_representation":"authenticateUser :: !Username !Password -> Task (Maybe User)","fe_documentation":["FunctionDoc",["Just","Authenticates a user by username and password"],["Username: The username","Password: The password"],[],["Just","A single user who matches the given credentials, or nothing of none or more than one exists."]]},["Bin",3,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",22],["Just",16],"users"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ReadOnlyShared",[["Type","_List",[["Type","User",[]]]]]],[]],"fe_representation":"users :: ReadOnlyShared [User]"},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",19],["Just",13],"userAccounts"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Shared",[["Type","_List",[["Type","UserAccount",[]]]]]],[]],"fe_representation":"userAccounts :: Shared [UserAccount]"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",24],["Just",21],"usersWithRole"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Role",[]]],["Type","ReadOnlyShared",[["Type","_List",[["Type","User",[]]]]]],[]],"fe_representation":"usersWithRole :: !Role -> ReadOnlyShared [User]"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",45],["Just",54],"doAuthenticated"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"doAuthenticated :: (Task a) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Wraps a task with an authentication task"],["the task to wrap"],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",8,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",77],["Just",145],"importDemoUsersFlow"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_List",[["Type","UserAccount",[]]]]]],[]],"fe_representation":"importDemoUsersFlow :: Task [UserAccount]","fe_documentation":["FunctionDoc",["Just","Create set of user names handy for giving demo's: alice, bob, carol, ..."],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",69],["Just",76],"deleteUser"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UserId",[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"deleteUser :: !UserId -> Task ()","fe_documentation":["FunctionDoc",["Just","Delete an existing user"],["User: The user who needs to be deleted"],[],["Just","The deleted user"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",59],["Just",67],"createUser"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UserAccount",[]]],["Type","Task",[["Type","UserAccount",[]]]],[]],"fe_representation":"createUser :: !UserAccount -> Task UserAccount","fe_documentation":["FunctionDoc",["Just","Add a new user"],["User details: The user-information which needs to be stored"],[],["Just","The stored user"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",73],["Just",80],"manageUsers"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"manageUsers :: Task ()","fe_documentation":["FunctionDoc",["Just","Browse and manage the existing users"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",8],["Nothing"],"managerProperties"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Workflow",[]]],["Type","TaskAttributes",[]],[]],"fe_representation":".managerProperties :: Workflow -> TaskAttributes","fe_documentation":["FunctionDoc",["Just","the initial manager properties of the main task"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",8],["Nothing"],"description"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Workflow",[]]],["Type","String",[]],[]],"fe_representation":".description :: Workflow -> String","fe_documentation":["FunctionDoc",["Just","a description of the workflow"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",8],["Nothing"],"roles"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Workflow",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":".roles :: Workflow -> [String]","fe_documentation":["FunctionDoc",["Just","the roles that are allowed to initate this workflow"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",8],["Nothing"],"path"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Workflow",[]]],["Type","String",[]],[]],"fe_representation":".path :: Workflow -> String","fe_documentation":["FunctionDoc",["Just","a unique name of this workflow"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]]]]],["Bin",10,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",43],["Just",343],"workflow"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Var","w"]],["Type","Workflow",[]],[[["Class","toWorkflow"],["Var","w"]]]],"fe_representation":"workflow :: String String w -> Workflow | toWorkflow w","fe_documentation":["FunctionDoc",["Just","Wraps any task as a workflow with no access restrictions"],["A label for the workflow. This may contain slashes to group workflows","A description of the workflow","The task(container) (with or without parameter)"],[],["Nothing"]]},["Bin",6,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",16],["Nothing"],"WorkflowTask"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Task",[["Var","a"]]]],["Type","WorkflowTaskContainer",[]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"WorkflowTask :: (Task a) -> WorkflowTaskContainer | iTask a"},["Bin",2,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",16],["Nothing"],"ParamWorkflowTask"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]]],["Type","WorkflowTaskContainer",[]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_representation":"ParamWorkflowTask :: (a -> Task b) -> WorkflowTaskContainer | iTask a & iTask b"},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",8],["Nothing"],"transient"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Workflow",[]]],["Type","Bool",[]],[]],"fe_representation":".transient :: Workflow -> Bool","fe_documentation":["FunctionDoc",["Just","this workflow is intended only as part of a session, it is not persistent"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",33],["Just",85],"allowedWorkflows"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ReadOnlyShared",[["Type","_List",[["Type","Workflow",[]]]]]],[]],"fe_representation":"allowedWorkflows :: ReadOnlyShared [Workflow]"},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",32],["Just",72],"workflows"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Shared",[["Type","_List",[["Type","Workflow",[]]]]]],[]],"fe_representation":"workflows :: Shared [Workflow]"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",34],["Just",75],"workflowByPath"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Shared",[["Type","Workflow",[]]]],[]],"fe_representation":"workflowByPath :: !String -> Shared Workflow"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",59],["Just",349],"restrictedWorkflow"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","_List",[["Type","Role",[]]]],["Var","w"]],["Type","Workflow",[]],[[["Class","toWorkflow"],["Var","w"]]]],"fe_representation":"restrictedWorkflow :: String String [Role] w -> Workflow | toWorkflow w","fe_documentation":["FunctionDoc",["Just","Wraps any task as a workflow that is only available to specified roles"],["A label for the workflow. This may contain slashes to group workflows","A description of the workflow","A list of roles. The workflow will be available to users with any of the specified roles","The task(container) (with or without parameter)"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",49],["Just",346],"transientWorkflow"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Var","w"]],["Type","Workflow",[]],[[["Class","toWorkflow"],["Var","w"]]]],"fe_representation":"transientWorkflow :: String String w -> Workflow | toWorkflow w"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",60],["Just",352],"restrictedTransientWorkflow"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","_List",[["Type","Role",[]]]],["Var","w"]],["Type","Workflow",[]],[[["Class","toWorkflow"],["Var","w"]]]],"fe_representation":"restrictedTransientWorkflow :: String String [Role] w -> Workflow | toWorkflow w"},["Tip"],["Tip"]]]]]],["Bin",25,["Location","iTasks","iTasks.Extensions.CSVFile",["Just",33],["Just",18],"importCSVFileWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Type","Char",[]],["Type","Char",[]],["Type","FilePath",[]]],["Type","Task",[["Type","_List",[["Type","_List",[["Type","String",[]]]]]]]],[]],"fe_representation":"importCSVFileWith :: !Char !Char !Char !FilePath -> Task [[String]]","fe_documentation":["FunctionDoc",["Just","Import a comma separated vector (CSV) file on the server's filesystem using\ncustom separator characters."],["Separator: The field separator","Quote character: The string quote character","Escape character : The escape character","File path: The path of the file to import"],[],["Just","The imported content"]]},["Bin",9,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",94],["Just",388],"isAllowedWorkflow"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","User",[]],["Type","Workflow",[]]],["Type","Bool",[]],[]],"fe_representation":"isAllowedWorkflow :: !User !Workflow -> Bool"},["Bin",5,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",81],["Just",118],"loginAndManageWorkList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","Workflow",[]]]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"loginAndManageWorkList :: !String ![Workflow] -> Task ()"},["Bin",3,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",77],["Just",98],"manageWorkflows"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Workflow",[]]]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"manageWorkflows :: ![Workflow] -> Task ()","fe_documentation":["FunctionDoc",["Just","Default workflow management task.\nThis task allows users to manage a catalogue of task definitions\nand let's them create instances of these tasks and work on instances."],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",70],["Nothing"],"ParamWorkflow"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskAttributes",[]],["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]]],["Type","ParamWorkflowContainer",[["Var","a"],["Var","b"]]],[]],"fe_representation":"ParamWorkflow :: TaskAttributes (a -> Task b) -> ParamWorkflowContainer a b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",79],["Just",105],"manageWorklist"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Workflow",[]]]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"manageWorklist :: ![Workflow] -> Task ()"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",92],["Just",338],"addWorkflows"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Workflow",[]]]]],["Type","Task",[["Type","_List",[["Type","Workflow",[]]]]]],[]],"fe_representation":"addWorkflows :: ![Workflow] -> Task [Workflow]","fe_documentation":["FunctionDoc",["Just","Dynamically adds a workflow to the system."],["Workflow: The workflow to add"],[],["Just","The description of the added workflow"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.CSVFile",["Just",17],["Just",6],"importCSVFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","Task",[["Type","_List",[["Type","_List",[["Type","String",[]]]]]]]],[]],"fe_representation":"importCSVFile :: !FilePath -> Task [[String]]","fe_documentation":["FunctionDoc",["Just","Import a comma separated vector (CSV) file on the server's filesystem."],["File path: The path of the file to import"],[],["Just","The imported content"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",96],["Just",319],"appendOnce"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]],["Type","Task",[["Var","a"]]],["Type","SharedTaskList",[["Var","a"]]]],["Type","Task",[["Type","_Unit",[]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"appendOnce :: TaskId (Task a) (SharedTaskList a) -> Task () | iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.CSVFile",["Just",18],["Just",11],"importCSVDocument"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Document",[]]],["Type","Task",[["Type","_List",[["Type","_List",[["Type","String",[]]]]]]]],[]],"fe_representation":"importCSVDocument :: !Document -> Task [[String]]"},["Tip"],["Tip"]]]],["Bin",15,["Location","iTasks","iTasks.Extensions.Clock",["Just",7],["Nothing"],"AnalogClock"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Time",[]]],["Type","AnalogClock",[]],[]],"fe_representation":"AnalogClock :: Time -> AnalogClock"},["Bin",4,["Location","iTasks","iTasks.Extensions.CSVFile",["Just",58],["Just",41],"exportCSVFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","_List",[["Type","_List",[["Type","String",[]]]]]]],["Type","Task",[["Type","_List",[["Type","_List",[["Type","String",[]]]]]]]],[]],"fe_representation":"exportCSVFile :: !FilePath ![[String]] -> Task [[String]]","fe_documentation":["FunctionDoc",["Just","Export a list of rows of fields to a comma separated vector (CSV) file on the server's filesystem."],["File path: The path of the exported file","Cells: The content to export as a list of rows of lists of fields"],[],["Just","The exported content"]]},["Bin",2,["Location","iTasks","iTasks.Extensions.CSVFile",["Just",34],["Just",23],"importCSVDocumentWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Type","Char",[]],["Type","Char",[]],["Type","Document",[]]],["Type","Task",[["Type","_List",[["Type","_List",[["Type","String",[]]]]]]]],[]],"fe_representation":"importCSVDocumentWith :: !Char !Char !Char !Document -> Task [[String]]"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.CSVFile",["Just",46],["Just",31],"createCSVFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","_List",[["Type","String",[]]]]]]],["Type","Task",[["Type","Document",[]]]],[]],"fe_representation":"createCSVFile :: !String ![[String]] -> Task Document","fe_documentation":["FunctionDoc",["Just","Export a list of rows of fields to a comma separated vector (CSV) document."],["File name: A name of the created CSV file","Cells: The content to export as a list of rows of lists of fields"],[],["Just","The exported content as a document"]]},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Extensions.CSVFile",["Just",74],["Just",46],"exportCSVFileWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Type","Char",[]],["Type","Char",[]],["Type","FilePath",[]],["Type","_List",[["Type","_List",[["Type","String",[]]]]]]],["Type","Task",[["Type","_List",[["Type","_List",[["Type","String",[]]]]]]]],[]],"fe_representation":"exportCSVFileWith :: !Char !Char !Char !FilePath ![[String]] -> Task [[String]]","fe_documentation":["FunctionDoc",["Just","Export a list of rows of fields to a comma separated vector (CSV) file on the server's filesystem\nusing custom separator characters."],["Separator: The field separator","Quote character: The string quote character","Escape character: The escape character","File path: The path of the exported file","Cells: The content to export as a list of rows of lists of fields"],[],["Just","The exported content"]]},["Tip"],["Tip"]]],["Bin",10,["Location","iTasks","iTasks.Extensions.Collection",["Just",62],["Just",57],"addItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","Shared",[["Type","_List",[["Var","c"]]]]],["Func",[["Var","c"]],["Var","i"],[]]],["Type","Task",[["Type","Maybe",[["Var","i"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","i"]],[["Class","iTask"],["Var","c"]]]],"fe_representation":"addItem :: !d (Shared [c]) (c -> i) -> Task (Maybe i) | toPrompt d & iTask i & iTask c","fe_documentation":["FunctionDoc",["Just","Add an item to the collection"],[],[],["Nothing"]]},["Bin",5,["Location","iTasks","iTasks.Extensions.Collection",["Just",54],["Just",49],"selectItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","Shared",[["Type","_List",[["Var","c"]]]]],["Func",[["Var","c"]],["Var","i"],[]]],["Type","Task",[["Var","i"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","c"]],[["Class","iTask"],["Var","i"]]]],"fe_representation":"selectItem :: !d (Shared [c]) (c -> i) -> Task i | toPrompt d & iTask c & iTask i","fe_documentation":["FunctionDoc",["Just","Select an item from a shared collection and project the selection on another shared state"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.Extensions.Collection",["Just",33],["Just",20],"manageCollectionWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Shared",[["Type","_List",[["Var","c"]]]]]],["Func",[["Func",[["Var","c"]],["Var","i"],[]]],["Type","Task",[["Var","i"]]],[]],[]],["Func",[["Type","Shared",[["Type","_List",[["Var","c"]]]]]],["Func",[["Func",[["Type","Shared",[["Type","_List",[["Var","c"]]]]]],["Func",[["Var","i"]],["Type","Shared",[["Type","Maybe",[["Var","c"]]]]],[]],[]]],["Func",[["Type","Maybe",[["Var","i"]]]],["Type","Task",[["Var","a"]]],[]],[]],[]],["Type","_List",[["Type","TaskCont",[["Var","i"],["Type","Task",[["Type","Maybe",[["Var","i"]]]]]]]]],["Func",[["Var","c"]],["Var","i"],[]],["Func",[["Type","Shared",[["Type","_List",[["Var","c"]]]]]],["Func",[["Var","i"]],["Type","Shared",[["Type","Maybe",[["Var","c"]]]]],[]],[]],["Type","Shared",[["Type","_List",[["Var","c"]]]]]],["Type","Task",[["Type","Maybe",[["Var","i"]]]]],[[["Class","iTask"],["Var","c"]],[["Class","iTask"],["Var","i"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"manageCollectionWith :: ((Shared [c]) -> (c -> i) -> Task i) ((Shared [c]) -> ((Shared [c]) -> i -> Shared (Maybe c)) -> (Maybe i) -> Task a) [TaskCont i (Task (Maybe i))] (c -> i) ((Shared [c]) -> i -> Shared (Maybe c)) (Shared [c]) -> Task (Maybe i) | iTask c & iTask i & iTask a","fe_documentation":["FunctionDoc",["Just","Configurable collection management task."],["Description of the task","Selection task, task that makes a selection from the collection","Use selection task, used in parallel with selection and restarted when selection changes","Selection actions. These are added to the selection task","Identification function. Required to identify items in the collection when updating","Shared item function. Derives a shared single item from a shared collection","Shared collection"],[],["Just","The last selection"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Collection",["Just",18],["Just",7],"manageCollection"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Var","c"]],["Var","i"],[]],["Type","Shared",[["Type","_List",[["Var","c"]]]]]],["Type","Task",[["Type","Maybe",[["Var","i"]]]]],[[["Class","iTask"],["Var","c"]],[["Class","iTask"],["Var","i"]]]],"fe_representation":"manageCollection :: !String (c -> i) (Shared [c]) -> Task (Maybe i) | iTask c & iTask i","fe_documentation":["FunctionDoc",["Just","Generic CRUD task for managing a collection of items"],["Description of the task","Item name, this is used to make task descriptions for the subtasks (E.g. \"person\" -> \"Select person\",\"Add person\" etc.)","Identification function. Required to identify items in the collection when updating","Shared collection"],[],["Just","The last selection"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Collection",["Just",49],["Just",39],"itemShare"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","c"]],["Var","i"],[]],["Type","Shared",[["Type","_List",[["Var","c"]]]]],["Var","i"]],["Type","Shared",[["Type","Maybe",[["Var","c"]]]]],[[["Generic","gEq",["KindConst"]],["Var","i"]],[["Generic","gEq",["KindConst"]],["Var","c"]]]],"fe_representation":"itemShare :: (c -> i) (Shared [c]) i -> Shared (Maybe c) | gEq{|*|} i & gEq{|*|} c","fe_documentation":["FunctionDoc",["Just","Create an item share by looking up an item identified by an identitication function"],["Identification function. Required to identify items in the collection when updating","Shared collection","Item identification"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Extensions.Collection",["Just",58],["Just",53],"viewItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","Shared",[["Type","_List",[["Var","c"]]]]],["Func",[["Type","Shared",[["Type","_List",[["Var","c"]]]]]],["Func",[["Var","i"]],["Type","Shared",[["Type","Maybe",[["Var","c"]]]]],[]],[]],["Type","Maybe",[["Var","i"]]]],["Type","Task",[["Type","Maybe",[["Var","i"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","c"]],[["Class","iTask"],["Var","i"]]]],"fe_representation":"viewItem :: !d (Shared [c]) ((Shared [c]) -> i -> Shared (Maybe c)) (Maybe i) -> Task (Maybe i) | toPrompt d & iTask c & iTask i","fe_documentation":["FunctionDoc",["Just","View an item in the collection (without actions)"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Extensions.Collection",["Just",70],["Just",77],"deleteItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","Shared",[["Type","_List",[["Var","c"]]]]],["Func",[["Type","Shared",[["Type","_List",[["Var","c"]]]]]],["Func",[["Var","i"]],["Type","Shared",[["Type","Maybe",[["Var","c"]]]]],[]],[]],["Func",[["Var","c"]],["Var","i"],[]],["Var","i"]],["Type","Task",[["Type","Maybe",[["Var","i"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","c"]],[["Class","iTask"],["Var","i"]]]],"fe_representation":"deleteItem :: !d (Shared [c]) ((Shared [c]) -> i -> Shared (Maybe c)) (c -> i) i -> Task (Maybe i) | toPrompt d & iTask c & iTask i","fe_documentation":["FunctionDoc",["Just","Delete an item from the collection"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Collection",["Just",66],["Just",64],"editItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","Shared",[["Type","_List",[["Var","c"]]]]],["Func",[["Type","Shared",[["Type","_List",[["Var","c"]]]]]],["Func",[["Var","i"]],["Type","Shared",[["Type","Maybe",[["Var","c"]]]]],[]],[]],["Func",[["Var","c"]],["Var","i"],[]],["Var","i"]],["Type","Task",[["Type","Maybe",[["Var","i"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","c"]],[["Class","iTask"],["Var","i"]]]],"fe_representation":"editItem :: !d (Shared [c]) ((Shared [c]) -> i -> Shared (Maybe c)) (c -> i) i -> Task (Maybe i) | toPrompt d & iTask c & iTask i","fe_documentation":["FunctionDoc",["Just","Edit an item in the collection"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Extensions.Contact",["Just",11],["Nothing"],"PhoneNumber"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","PhoneNumber",[]],[]],"fe_representation":"PhoneNumber :: String -> PhoneNumber"},["Bin",1,["Location","iTasks","iTasks.Extensions.Contact",["Just",6],["Nothing"],"EmailAddress"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EmailAddress",[]],[]],"fe_representation":"EmailAddress :: String -> EmailAddress"},["Tip"],["Tip"]],["Tip"]]]]]]]],["Bin",69,["Location","iTasks","iTasks.Extensions.DateTime",["Just",24],["Nothing"],"hour"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Int",[]],[]],"fe_representation":".hour :: DateTime -> Int"},["Bin",25,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",16],["Nothing"],"min"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Gauge",[]]],["Type","Int",[]],[]],"fe_representation":".min :: Gauge -> Int"},["Bin",7,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",9],["Nothing"],"LightOnOrange"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ControlLight",[]],[]],"fe_representation":"LightOnOrange :: ControlLight"},["Bin",3,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",9],["Nothing"],"LightOff"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ControlLight",[]],[]],"fe_representation":"LightOff :: ControlLight"},["Bin",1,["Location","iTasks","iTasks.Extensions.Currency",["Just",6],["Nothing"],"USD"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","USD",[]],[]],"fe_representation":"USD :: Int -> USD"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",9],["Nothing"],"LightOnGreen"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ControlLight",[]],[]],"fe_representation":"LightOnGreen :: ControlLight"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",16],["Nothing"],"label"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Gauge",[]]],["Type","String",[]],[]],"fe_representation":".label :: Gauge -> String"},["Bin",1,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",9],["Nothing"],"LightOnRed"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ControlLight",[]],[]],"fe_representation":"LightOnRed :: ControlLight"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",16],["Nothing"],"max"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Gauge",[]]],["Type","Int",[]],[]],"fe_representation":".max :: Gauge -> Int"},["Tip"],["Tip"]]]],["Bin",17,["Location","iTasks","iTasks.Extensions.DateTime",["Just",12],["Nothing"],"mon"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Date",[]]],["Type","Int",[]],[]],"fe_representation":".mon :: Date -> Int"},["Bin",11,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",75],["Nothing"],"dbReadItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DBRef",[["Var","a"]]]],["Type","Task",[["Type","Maybe",[["Var","a"]]]]],[[["Class","iTask"],["Var","a"]],[["Class","DB"],["Var","a"]]]],"fe_representation":"dbReadItem :: !(DBRef a) -> Task (Maybe a) | iTask a & DB a"},["Bin",7,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",25],["Nothing"],"DBRef"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","DBRef",[["Var","a"]]],[]],"fe_representation":"DBRef :: Int -> DBRef a"},["Bin",2,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",16],["Nothing"],"val"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Gauge",[]]],["Type","Int",[]],[]],"fe_representation":".val :: Gauge -> Int"},["Bin",1,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",16],["Nothing"],"unit"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Gauge",[]]],["Type","String",[]],[]],"fe_representation":".unit :: Gauge -> String"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",54],["Nothing"],"dbWriteAll"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","iTask"],["Var","a"]],[["Class","DB"],["Var","a"]]]],"fe_representation":"dbWriteAll :: ![a] -> Task [a] | iTask a & DB a"},["Bin",2,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",46],["Nothing"],"dbReadAll"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","iTask"],["Var","a"]],[["Class","DB"],["Var","a"]]]],"fe_representation":"dbReadAll :: Task [a] | iTask a & DB a"},["Bin",1,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",39],["Nothing"],"eqItemId"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[[["Class","DB"],["Var","a"]]]],"fe_representation":"eqItemId :: a a -> Bool | DB a"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",66],["Nothing"],"dbCreateItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","DB"],["Var","a"]]]],"fe_representation":"dbCreateItem :: a -> Task a | iTask a & DB a"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",93],["Nothing"],"dbDeleteItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DBRef",[["Var","a"]]]],["Type","Task",[["Type","Maybe",[["Var","a"]]]]],[[["Class","iTask"],["Var","a"]],[["Class","DB"],["Var","a"]]]],"fe_representation":"dbDeleteItem :: !(DBRef a) -> Task (Maybe a) | iTask a & DB a"},["Bin",1,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",84],["Nothing"],"dbUpdateItem"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","DB"],["Var","a"]]]],"fe_representation":"dbUpdateItem :: a -> Task a | iTask a & DB a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",12],["Nothing"],"day"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Date",[]]],["Type","Int",[]],[]],"fe_representation":".day :: Date -> Int"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.Extensions.DateTime",["Just",18],["Nothing"],"min"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Time",[]]],["Type","Int",[]],[]],"fe_representation":".min :: Time -> Int"},["Bin",2,["Location","iTasks","iTasks.Extensions.DateTime",["Just",18],["Nothing"],"hour"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Time",[]]],["Type","Int",[]],[]],"fe_representation":".hour :: Time -> Int"},["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",12],["Nothing"],"year"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Date",[]]],["Type","Int",[]],[]],"fe_representation":".year :: Date -> Int"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Extensions.DateTime",["Just",18],["Nothing"],"sec"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Time",[]]],["Type","Int",[]],[]],"fe_representation":".sec :: Time -> Int"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",24],["Nothing"],"day"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Int",[]],[]],"fe_representation":".day :: DateTime -> Int"},["Tip"],["Tip"]]]]]],["Bin",43,["Location","iTasks","iTasks.Extensions.DateTime",["Just",74],["Just",202],"waitForTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Time",[]]],["Type","Task",[["Type","Time",[]]]],[]],"fe_representation":"waitForTime :: !Time -> Task Time","fe_documentation":["FunctionDoc",["Just","Creates a task which blocks a workflow until a specified time."],["Time: The specified time at which the task should complete"],[],["Just","The time to wait for"]]},["Bin",13,["Location","iTasks","iTasks.Extensions.DateTime",["Just",24],["Nothing"],"year"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Int",[]],[]],"fe_representation":".year :: DateTime -> Int"},["Bin",3,["Location","iTasks","iTasks.Extensions.DateTime",["Just",24],["Nothing"],"mon"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Int",[]],[]],"fe_representation":".mon :: DateTime -> Int"},["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",24],["Nothing"],"min"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Int",[]],[]],"fe_representation":".min :: DateTime -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",24],["Nothing"],"sec"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Int",[]],[]],"fe_representation":".sec :: DateTime -> Int"},["Tip"],["Tip"]]],["Bin",9,["Location","iTasks","iTasks.Extensions.DateTime",["Just",43],["Just",121],"parseDateTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","MaybeErrorString",[["Type","DateTime",[]]]],[]],"fe_representation":"parseDateTime :: String -> MaybeErrorString DateTime"},["Bin",5,["Location","iTasks","iTasks.Extensions.DateTime",["Just",41],["Just",39],"parseDate"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","MaybeErrorString",[["Type","Date",[]]]],[]],"fe_representation":"parseDate :: String -> MaybeErrorString Date"},["Bin",3,["Location","iTasks","iTasks.Extensions.DateTime",["Just",35],["Just",29],"toDate"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Date",[]],[]],"fe_representation":"toDate :: DateTime -> Date"},["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",34],["Just",26],"toTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Time",[]],[]],"fe_representation":"toTime :: DateTime -> Time"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",36],["Just",32],"toDateTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Date",[]],["Type","Time",[]]],["Type","DateTime",[]],[]],"fe_representation":"toDateTime :: Date Time -> DateTime"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",42],["Just",80],"parseTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","MaybeErrorString",[["Type","Time",[]]]],[]],"fe_representation":"parseTime :: String -> MaybeErrorString Time"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.DateTime",["Just",61],["Just",193],"dateToTimestamp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Date",[]]],["Type","Timestamp",[]],[]],"fe_representation":"dateToTimestamp :: !Date -> Timestamp"},["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",60],["Just",185],"timestampToGmDateTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Timestamp",[]]],["Type","DateTime",[]],[]],"fe_representation":"timestampToGmDateTime :: !Timestamp -> DateTime"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",62],["Just",197],"datetimeToTimestamp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Timestamp",[]],[]],"fe_representation":"datetimeToTimestamp :: !DateTime -> Timestamp"},["Tip"],["Tip"]]]]],["Bin",29,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",24],["Nothing"],"Icl"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Extension",[]],[]],"fe_representation":"Icl :: Extension"},["Bin",14,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",8],["Nothing"],"rootPath"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SourceTree",[]]],["Type","FilePath",[]],[]],"fe_representation":".rootPath :: SourceTree -> FilePath"},["Bin",6,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",8],["Nothing"],"modules"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SourceTree",[]]],["Type","_List",[["Type","_Tuple3",[["Type","ModuleName",[]],["Type","ModuleType",[]],["Type","FilePath",[]]]]]],[]],"fe_representation":".modules :: SourceTree -> [(ModuleName, ModuleType, FilePath)]"},["Bin",3,["Location","iTasks","iTasks.Extensions.DateTime",["Just",90],["Just",210],"waitForDateTime"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DateTime",[]]],["Type","Task",[["Type","DateTime",[]]]],[]],"fe_representation":"waitForDateTime :: !DateTime -> Task DateTime","fe_documentation":["FunctionDoc",["Just","Creates a task which blocks a workflow until a specified date and time."],["DateTime: The specified date and time at which the task should complete"],[],["Just","The date and time to wait for"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",82],["Just",206],"waitForDate"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Date",[]]],["Type","Task",[["Type","Date",[]]]],[]],"fe_representation":"waitForDate :: !Date -> Task Date","fe_documentation":["FunctionDoc",["Just","Creates a task which blocks a workflow until a specified date."],["Date: The specified date at which the task should complete"],[],["Just","The date to wait for"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",100],["Just",218],"waitForTimer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","Task",[["Type","DateTime",[]]]],[]],"fe_representation":"waitForTimer :: !Int -> Task DateTime","fe_documentation":["FunctionDoc",["Just","Task completes after specified amount of time has passed\nsince the creation of the task."],["The time to wait (in seconds before the task should complete"],[],["Just","The time the timer went off"]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",8],["Nothing"],"readOnly"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SourceTree",[]]],["Type","Bool",[]],[]],"fe_representation":".readOnly :: SourceTree -> Bool"},["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",8],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SourceTree",[]]],["Type","String",[]],[]],"fe_representation":".name :: SourceTree -> String"},["Tip"],["Tip"]],["Tip"]]],["Bin",7,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",23],["Nothing"],"AuxModule"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ModuleType",[]],[]],"fe_representation":"AuxModule :: ModuleType"},["Bin",4,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",15],["Nothing"],"SelAuxModule"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FilePath",[]]],["Type","SourceTreeSelection",[]],[]],"fe_representation":"SelAuxModule :: ModuleName FilePath -> SourceTreeSelection"},["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",8],["Nothing"],"subPaths"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SourceTree",[]]],["Type","_List",[["Type","FilePath",[]]]],[]],"fe_representation":".subPaths :: SourceTree -> [FilePath]"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",15],["Nothing"],"SelMainModule"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FilePath",[]]],["Type","SourceTreeSelection",[]],[]],"fe_representation":"SelMainModule :: ModuleName FilePath -> SourceTreeSelection"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",15],["Nothing"],"SelSourceTree"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SourceTreeName",[]],["Type","FilePath",[]]],["Type","SourceTreeSelection",[]],[]],"fe_representation":"SelSourceTree :: SourceTreeName FilePath -> SourceTreeSelection"},["Tip"],["Tip"]]]],["Bin",2,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",24],["Nothing"],"Dcl"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Extension",[]],[]],"fe_representation":"Dcl :: Extension"},["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",23],["Nothing"],"MainModule"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ModuleType",[]],[]],"fe_representation":"MainModule :: ModuleType"},["Tip"],["Tip"]],["Tip"]]]],["Bin",14,["Location","iTasks","iTasks.Extensions.Development.Testing",["Just",8],["Just",13],"compileTestModule"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","Task",[["Type","TestResult",[]]]],[]],"fe_representation":"compileTestModule :: FilePath -> Task TestResult"},["Bin",7,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",48],["Just",95],"listFilesInCodeBase"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CodeBase",[]]],["Type","_List",[["Type","CleanFile",[]]]],[]],"fe_representation":"listFilesInCodeBase :: CodeBase -> [CleanFile]"},["Bin",3,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",42],["Just",19],"navigateCodebase"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CodeBase",[]]],["Type","Task",[["Type","SourceTreeSelection",[]]]],[]],"fe_representation":"navigateCodebase :: CodeBase -> Task SourceTreeSelection"},["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",39],["Just",13],"rescanCodeBase"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CodeBase",[]]],["Type","Task",[["Type","CodeBase",[]]]],[]],"fe_representation":"rescanCodeBase :: CodeBase -> Task CodeBase"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",45],["Just",90],"lookupModule"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","CodeBase",[]]],["Type","Maybe",[["Type","_Tuple3",[["Type","ModuleName",[]],["Type","ModuleType",[]],["Type","FilePath",[]]]]]],[]],"fe_representation":"lookupModule :: ModuleName CodeBase -> Maybe (ModuleName,ModuleType,FilePath)"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",54],["Just",106],"getModuleType"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","CodeBase",[]]],["Type","Maybe",[["Type","ModuleType",[]]]],[]],"fe_representation":"getModuleType :: ModuleName CodeBase -> Maybe ModuleType"},["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",51],["Just",103],"cleanFilePath"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CleanFile",[]]],["Type","FilePath",[]],[]],"fe_representation":"cleanFilePath :: CleanFile -> FilePath"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",57],["Just",115],"codeBaseToCleanModuleNames"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","CodeBase",[]]],["Type","_List",[["Type","CleanModuleName",[]]]],[]],"fe_representation":"codeBaseToCleanModuleNames :: CodeBase -> [CleanModuleName]"},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.Extensions.Document",["Just",8],["Nothing"],"contentUrl"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Document",[]]],["Type","String",[]],[]],"fe_representation":".contentUrl :: Document -> String","fe_documentation":["FunctionDoc",["Just","A url to where the document can be downloaded"],[],[],["Nothing"]]},["Bin",2,["Location","iTasks","iTasks.Extensions.Development.Testing",["Just",9],["Just",31],"runTestModule"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","Task",[["Type","SuiteResult",[]]]],[]],"fe_representation":"runTestModule :: FilePath -> Task SuiteResult"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Tools",["Just",8],["Just",8],"cpmExecutable"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ROShared",[["Type","_Unit",[]],["Type","FilePath",[]]]],[]],"fe_representation":"cpmExecutable :: ROShared () FilePath"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Document",["Just",8],["Nothing"],"mime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Document",[]]],["Type","String",[]],[]],"fe_representation":".mime :: Document -> String","fe_documentation":["FunctionDoc",["Just","The mime type of the document"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Document",["Just",8],["Nothing"],"documentId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Document",[]]],["Type","DocumentId",[]],[]],"fe_representation":".documentId :: Document -> DocumentId","fe_documentation":["FunctionDoc",["Just","A unique identifier of the document"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Document",["Just",8],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Document",[]]],["Type","String",[]],[]],"fe_representation":".name :: Document -> String","fe_documentation":["FunctionDoc",["Just","The filename of a document"],[],[],["Nothing"]]},["Tip"],["Tip"]]]]]]]]]],["Bin",437,["Location","iTasks","iTasks.Extensions.Web",["Just",26],["Just",166],"serveFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","FilePath",[]]]],["Type","HTTPRequest",[]]],["Type","Task",[["Type","HTTPResponse",[]]]],[]],"fe_representation":"serveFile :: [FilePath] HTTPRequest -> Task HTTPResponse"},["Bin",154,["Location","iTasks","iTasks.Extensions.Image",["Just",8],["Nothing"],"width"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebImage",[]]],["Type","Int",[]],[]],"fe_representation":".width :: WebImage -> Int"},["Bin",95,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",15],["Nothing"],"draggable"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapSettings",[]]],["Type","Bool",[]],[]],"fe_representation":".draggable :: GoogleMapSettings -> Bool"},["Bin",29,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",23],["Nothing"],"theme"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","AceOptions",[]]],["Type","String",[]],[]],"fe_representation":".theme :: AceOptions -> String"},["Bin",11,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",13],["Nothing"],"selection"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","AceState",[]]],["Type","Maybe",[["Type","AceRange",[]]]],[]],"fe_representation":".selection :: AceState -> Maybe AceRange"},["Bin",7,["Location","iTasks","iTasks.Extensions.Document",["Just",56],["Just",74],"exportDocument"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","Document",[]]],["Type","Task",[["Type","Document",[]]]],[]],"fe_representation":"exportDocument :: !FilePath !Document -> Task Document","fe_documentation":["FunctionDoc",["Just","Export a document to the server's filesystem."],["File path: The path of the exported file","Document: The document to export"],[],["Just","The exported document"]]},["Bin",2,["Location","iTasks","iTasks.Extensions.Document",["Just",43],["Just",47],"importDocument"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","Task",[["Type","Document",[]]]],[]],"fe_representation":"importDocument :: !FilePath -> Task Document","fe_documentation":["FunctionDoc",["Just","Import a file on the server's filesystem as a Document"],["File path: The path of the file to import"],[],["Just","The imported document"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Document",["Just",17],["Nothing"],"FileException"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","FilePath",[]],["Type","FileError",[]]],["Type","FileException",[]],[]],"fe_representation":"FileException :: FilePath FileError -> FileException"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",13],["Nothing"],"disabled"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","AceState",[]]],["Type","Bool",[]],[]],"fe_representation":".disabled :: AceState -> Bool"},["Bin",2,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",13],["Nothing"],"cursor"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","AceState",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],[]],"fe_representation":".cursor :: AceState -> (Int, Int)"},["Bin",1,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",10],["Just",23],"aceTextArea"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Editor",[["Type","String",[]]]],[]],"fe_representation":"aceTextArea :: Editor String"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",13],["Nothing"],"lines"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","AceState",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":".lines :: AceState -> [String]"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",19],["Nothing"],"start"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","AceRange",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],[]],"fe_representation":".start :: AceRange -> (Int, Int)"},["Bin",1,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",19],["Nothing"],"end"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","AceRange",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],[]],"fe_representation":".end :: AceRange -> (Int, Int)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",23],["Nothing"],"mode"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","AceOptions",[]]],["Type","String",[]],[]],"fe_representation":".mode :: AceOptions -> String"},["Tip"],["Tip"]]]],["Bin",17,["Location","iTasks","iTasks.Extensions.Email",["Just",19],["Nothing"],"EmailOptSMTPServerPort"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","EmailOpt",[]],[]],"fe_representation":"EmailOptSMTPServerPort :: Int -> EmailOpt"},["Bin",4,["Location","iTasks","iTasks.Extensions.Email",["Just",19],["Nothing"],"EmailOptExtraHeaders"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]],["Type","EmailOpt",[]],[]],"fe_representation":"EmailOptExtraHeaders :: [(String, String)] -> EmailOpt"},["Bin",2,["Location","iTasks","iTasks.Extensions.Email",["Just",16],["Just",5],"sendEmail"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","EmailOpt",[]]]],["Type","String",[]],["Type","String",[]],["Type","String",[]],["Type","String",[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"sendEmail :: ![EmailOpt] !String !String !String !String -> Task ()","fe_documentation":["FunctionDoc",["Just","Send an e-mail message."],["Options: Mail server options, when left blank port 25 on localhost is used SMTP server","Sender: The sender address","Recipient: The recipient address","Subject: The subject line of the e-mail message","Body: The body of the e-mail message"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",38],["Just",30],"aceEditor"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Editor",[["Type","_Tuple2",[["Type","AceOptions",[]],["Type","AceState",[]]]]]],[]],"fe_representation":"aceEditor :: Editor (!AceOptions,!AceState)"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Email",["Just",19],["Nothing"],"EmailOptSMTPServer"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","EmailOpt",[]],[]],"fe_representation":"EmailOptSMTPServer :: String -> EmailOpt"},["Tip"],["Tip"]]],["Bin",12,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",9],["Nothing"],"center"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapPerspective",[]]],["Type","GoogleMapPosition",[]],[]],"fe_representation":".center :: GoogleMapPerspective -> GoogleMapPosition"},["Bin",5,["Location","iTasks","iTasks.Extensions.Form.Pikaday",["Just",8],["Just",87],"pikadayDateField"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Editor",[["Type","Date",[]]]],[]],"fe_representation":"pikadayDateField :: Editor Date"},["Bin",1,["Location","iTasks","iTasks.Extensions.Form.Pikaday",["Just",6],["Just",12],"pikadayField"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Editor",[["Type","String",[]]]],[]],"fe_representation":"pikadayField :: Editor String","fe_documentation":["FunctionDoc",["Just","Integration of the Pikaday datefield library"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",4],["Nothing"],"perspective"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMap",[]]],["Type","GoogleMapPerspective",[]],[]],"fe_representation":".perspective :: GoogleMap -> GoogleMapPerspective"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",4],["Nothing"],"markers"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMap",[]]],["Type","_List",[["Type","GoogleMapMarker",[]]]],[]],"fe_representation":".markers :: GoogleMap -> [GoogleMapMarker]"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",4],["Nothing"],"settings"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMap",[]]],["Type","GoogleMapSettings",[]],[]],"fe_representation":".settings :: GoogleMap -> GoogleMapSettings"},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",14],["Nothing"],"HYBRID"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GoogleMapType",[]],[]],"fe_representation":"HYBRID :: GoogleMapType"},["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",9],["Nothing"],"zoom"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapPerspective",[]]],["Type","Int",[]],[]],"fe_representation":".zoom :: GoogleMapPerspective -> Int"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",9],["Nothing"],"type"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapPerspective",[]]],["Type","GoogleMapType",[]],[]],"fe_representation":".type :: GoogleMapPerspective -> GoogleMapType"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",14],["Nothing"],"SATELLITE"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GoogleMapType",[]],[]],"fe_representation":"SATELLITE :: GoogleMapType"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",14],["Nothing"],"ROADMAP"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GoogleMapType",[]],[]],"fe_representation":"ROADMAP :: GoogleMapType"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",14],["Nothing"],"TERRAIN"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","GoogleMapType",[]],[]],"fe_representation":"TERRAIN :: GoogleMapType"},["Tip"],["Tip"]]]]]]],["Bin",65,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",42],["Nothing"],"anchor"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapComplexIcon",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],[]],"fe_representation":".anchor :: GoogleMapComplexIcon -> (Int, Int)"},["Bin",17,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",28],["Nothing"],"draggable"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapMarker",[]]],["Type","Bool",[]],[]],"fe_representation":".draggable :: GoogleMapMarker -> Bool"},["Bin",8,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",15],["Nothing"],"streetViewControl"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapSettings",[]]],["Type","Bool",[]],[]],"fe_representation":".streetViewControl :: GoogleMapSettings -> Bool"},["Bin",4,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",15],["Nothing"],"scaleControl"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapSettings",[]]],["Type","Bool",[]],[]],"fe_representation":".scaleControl :: GoogleMapSettings -> Bool"},["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",15],["Nothing"],"panControl"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapSettings",[]]],["Type","Bool",[]],[]],"fe_representation":".panControl :: GoogleMapSettings -> Bool"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",15],["Nothing"],"mapTypeControl"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapSettings",[]]],["Type","Bool",[]],[]],"fe_representation":".mapTypeControl :: GoogleMapSettings -> Bool"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",15],["Nothing"],"scrollwheel"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapSettings",[]]],["Type","Bool",[]],[]],"fe_representation":".scrollwheel :: GoogleMapSettings -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",24],["Nothing"],"lat"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapPosition",[]]],["Type","Real",[]],[]],"fe_representation":".lat :: GoogleMapPosition -> Real"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",15],["Nothing"],"zoomControl"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapSettings",[]]],["Type","Bool",[]],[]],"fe_representation":".zoomControl :: GoogleMapSettings -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",24],["Nothing"],"lng"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapPosition",[]]],["Type","Real",[]],[]],"fe_representation":".lng :: GoogleMapPosition -> Real"},["Tip"],["Tip"]]]],["Bin",8,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",28],["Nothing"],"position"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapMarker",[]]],["Type","GoogleMapPosition",[]],[]],"fe_representation":".position :: GoogleMapMarker -> GoogleMapPosition"},["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",28],["Nothing"],"infoWindow"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapMarker",[]]],["Type","Maybe",[["Type","HtmlTag",[]]]],[]],"fe_representation":".infoWindow :: GoogleMapMarker -> Maybe HtmlTag"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",28],["Nothing"],"icon"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapMarker",[]]],["Type","Maybe",[["Type","GoogleMapIcon",[]]]],[]],"fe_representation":".icon :: GoogleMapMarker -> Maybe GoogleMapIcon"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",28],["Nothing"],"markerId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapMarker",[]]],["Type","String",[]],[]],"fe_representation":".markerId :: GoogleMapMarker -> String"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",28],["Nothing"],"title"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapMarker",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".title :: GoogleMapMarker -> Maybe String"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",28],["Nothing"],"selected"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapMarker",[]]],["Type","Bool",[]],[]],"fe_representation":".selected :: GoogleMapMarker -> Bool"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",38],["Nothing"],"GoogleMapComplexIcon"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","GoogleMapComplexIcon",[]]],["Type","GoogleMapIcon",[]],[]],"fe_representation":"GoogleMapComplexIcon :: GoogleMapComplexIcon -> GoogleMapIcon"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",38],["Nothing"],"GoogleMapSimpleIcon"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","GoogleMapIcon",[]],[]],"fe_representation":"GoogleMapSimpleIcon :: String -> GoogleMapIcon"},["Tip"],["Tip"]]]]]],["Bin",47,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",58],["Nothing"],"fillColor"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPolygon",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".fillColor :: LeafletPolygon -> Maybe String"},["Bin",31,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",20],["Nothing"],"iconSize"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletIcon",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],[]],"fe_representation":".iconSize :: LeafletIcon -> (Int, Int)"},["Bin",12,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",12],["Nothing"],"bounds"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPerspective",[]]],["Type","Maybe",[["Type","LeafletBounds",[]]]],[]],"fe_representation":".bounds :: LeafletPerspective -> Maybe LeafletBounds"},["Bin",7,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",42],["Nothing"],"size"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapComplexIcon",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],[]],"fe_representation":".size :: GoogleMapComplexIcon -> (Int, Int)"},["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",42],["Nothing"],"origin"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapComplexIcon",[]]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],[]],"fe_representation":".origin :: GoogleMapComplexIcon -> (Int, Int)"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",42],["Nothing"],"image"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GoogleMapComplexIcon",[]]],["Type","String",[]],[]],"fe_representation":".image :: GoogleMapComplexIcon -> String"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",5],["Nothing"],"objects"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMap",[]]],["Type","_List",[["Type","LeafletObject",[]]]],[]],"fe_representation":".objects :: LeafletMap -> [LeafletObject]"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",5],["Nothing"],"icons"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMap",[]]],["Type","_List",[["Type","LeafletIcon",[]]]],[]],"fe_representation":".icons :: LeafletMap -> [LeafletIcon]"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",5],["Nothing"],"tilesUrl"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMap",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".tilesUrl :: LeafletMap -> Maybe String"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",5],["Nothing"],"perspective"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMap",[]]],["Type","LeafletPerspective",[]],[]],"fe_representation":".perspective :: LeafletMap -> LeafletPerspective"},["Tip"],["Tip"]],["Tip"]]]],["Bin",4,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",12],["Nothing"],"cursor"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPerspective",[]]],["Type","Maybe",[["Type","LeafletLatLng",[]]]],[]],"fe_representation":".cursor :: LeafletPerspective -> Maybe LeafletLatLng"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",12],["Nothing"],"center"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPerspective",[]]],["Type","LeafletLatLng",[]],[]],"fe_representation":".center :: LeafletPerspective -> LeafletLatLng"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",20],["Nothing"],"iconId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletIcon",[]]],["Type","LeafletIconID",[]],[]],"fe_representation":".iconId :: LeafletIcon -> LeafletIconID"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",12],["Nothing"],"zoom"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPerspective",[]]],["Type","Int",[]],[]],"fe_representation":".zoom :: LeafletPerspective -> Int"},["Tip"],["Tip"]],["Tip"]]]],["Bin",18,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",42],["Nothing"],"popup"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMarker",[]]],["Type","Maybe",[["Type","HtmlTag",[]]]],[]],"fe_representation":".popup :: LeafletMarker -> Maybe HtmlTag"},["Bin",10,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",31],["Nothing"],"northEast"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletBounds",[]]],["Type","LeafletLatLng",[]],[]],"fe_representation":".northEast :: LeafletBounds -> LeafletLatLng"},["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",26],["Nothing"],"lat"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletLatLng",[]]],["Type","Real",[]],[]],"fe_representation":".lat :: LeafletLatLng -> Real"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",20],["Nothing"],"iconUrl"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletIcon",[]]],["Type","String",[]],[]],"fe_representation":".iconUrl :: LeafletIcon -> String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",26],["Nothing"],"lng"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletLatLng",[]]],["Type","Real",[]],[]],"fe_representation":".lng :: LeafletLatLng -> Real"},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",36],["Nothing"],"Polygon"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LeafletPolygon",[]]],["Type","LeafletObject",[]],[]],"fe_representation":"Polygon :: LeafletPolygon -> LeafletObject"},["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",31],["Nothing"],"southWest"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletBounds",[]]],["Type","LeafletLatLng",[]],[]],"fe_representation":".southWest :: LeafletBounds -> LeafletLatLng"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",36],["Nothing"],"Marker"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LeafletMarker",[]]],["Type","LeafletObject",[]],[]],"fe_representation":"Marker :: LeafletMarker -> LeafletObject"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",42],["Nothing"],"icon"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMarker",[]]],["Type","Maybe",[["Type","LeafletIconID",[]]]],[]],"fe_representation":".icon :: LeafletMarker -> Maybe LeafletIconID"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",36],["Nothing"],"Polyline"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LeafletPolyline",[]]],["Type","LeafletObject",[]],[]],"fe_representation":"Polyline :: LeafletPolyline -> LeafletObject"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",42],["Nothing"],"markerId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMarker",[]]],["Type","LeafletObjectID",[]],[]],"fe_representation":".markerId :: LeafletMarker -> LeafletObjectID"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",51],["Nothing"],"points"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPolyline",[]]],["Type","_List",[["Type","LeafletLatLng",[]]]],[]],"fe_representation":".points :: LeafletPolyline -> [LeafletLatLng]"},["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",42],["Nothing"],"selected"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMarker",[]]],["Type","Bool",[]],[]],"fe_representation":".selected :: LeafletMarker -> Bool"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",42],["Nothing"],"position"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMarker",[]]],["Type","LeafletLatLng",[]],[]],"fe_representation":".position :: LeafletMarker -> LeafletLatLng"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",42],["Nothing"],"title"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletMarker",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".title :: LeafletMarker -> Maybe String"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",51],["Nothing"],"strokeColor"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPolyline",[]]],["Type","String",[]],[]],"fe_representation":".strokeColor :: LeafletPolyline -> String"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",51],["Nothing"],"polylineId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPolyline",[]]],["Type","LeafletObjectID",[]],[]],"fe_representation":".polylineId :: LeafletPolyline -> LeafletObjectID"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",51],["Nothing"],"strokeWidth"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPolyline",[]]],["Type","Int",[]],[]],"fe_representation":".strokeWidth :: LeafletPolyline -> Int"},["Tip"],["Tip"]]]]]],["Bin",15,["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",13],["Nothing"],"GreenShip"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ShipIconColor",[]],[]],"fe_representation":"GreenShip :: ShipIconColor"},["Bin",8,["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",10],["Just",21],"shipIcons"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","_List",[["Type","LeafletIcon",[]]]],[]],"fe_representation":"shipIcons :: [LeafletIcon]"},["Bin",5,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",58],["Nothing"],"strokeColor"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPolygon",[]]],["Type","String",[]],[]],"fe_representation":".strokeColor :: LeafletPolygon -> String"},["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",58],["Nothing"],"points"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPolygon",[]]],["Type","_List",[["Type","LeafletLatLng",[]]]],[]],"fe_representation":".points :: LeafletPolygon -> [LeafletLatLng]"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",58],["Nothing"],"polygonId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPolygon",[]]],["Type","LeafletObjectID",[]],[]],"fe_representation":".polygonId :: LeafletPolygon -> LeafletObjectID"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",58],["Nothing"],"strokeWidth"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","LeafletPolygon",[]]],["Type","Int",[]],[]],"fe_representation":".strokeWidth :: LeafletPolygon -> Int"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",67],["Just",45],"openStreetMapTiles"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","String",[]],[]],"fe_representation":"openStreetMapTiles :: String"},["Tip"],["Tip"]]]],["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",13],["Nothing"],"BlueShip"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ShipIconColor",[]],[]],"fe_representation":"BlueShip :: ShipIconColor"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",13],["Nothing"],"GrayShip"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ShipIconColor",[]],[]],"fe_representation":"GrayShip :: ShipIconColor"},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.Extensions.Image",["Just",8],["Nothing"],"alt"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebImage",[]]],["Type","String",[]],[]],"fe_representation":".alt :: WebImage -> String"},["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",13],["Nothing"],"RedShip"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ShipIconColor",[]],[]],"fe_representation":"RedShip :: ShipIconColor"},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",13],["Nothing"],"OrangeShip"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ShipIconColor",[]],[]],"fe_representation":"OrangeShip :: ShipIconColor"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",19],["Just",31],"shipIconId"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","ShipIconHeading",[]]]],["Type","ShipIconColor",[]],["Type","Bool",[]]],["Type","LeafletIconID",[]],[]],"fe_representation":"shipIconId :: (Maybe ShipIconHeading) ShipIconColor Bool -> LeafletIconID","fe_documentation":["FunctionDoc",["Just","Determine the icon based on a heading, ship color and whether the icon is selected"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Extensions.Image",["Just",8],["Nothing"],"height"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebImage",[]]],["Type","Int",[]],[]],"fe_representation":".height :: WebImage -> Int"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.Image",["Just",8],["Nothing"],"src"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebImage",[]]],["Type","String",[]],[]],"fe_representation":".src :: WebImage -> String"},["Tip"],["Tip"]]]]]]]],["Bin",58,["Location","iTasks","iTasks.Extensions.User",["Just",42],["Nothing"],"password"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Credentials",[]]],["Type","Password",[]],[]],"fe_representation":".password :: Credentials -> Password"},["Bin",38,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",48],["Just",115],"sqlExecuteSelect"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLDatabaseDef",[]],["Type","SQLStatement",[]],["Type","_List",[["Type","SQLValue",[]]]]],["Type","Task",[["Type","_List",[["Type","SQLRow",[]]]]]],[]],"fe_representation":"sqlExecuteSelect :: SQLDatabaseDef SQLStatement ![SQLValue] -> Task [SQLRow]","fe_documentation":["FunctionDoc",["Just","Run a single query and fetch all results"],[],[],["Nothing"]]},["Bin",19,["Location","iTasks","iTasks.Extensions.Process",["Just",11],["Just",21],"CompletedProcess"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","ProcessStatus",[]],[]],"fe_representation":"CompletedProcess :: Int -> ProcessStatus"},["Bin",7,["Location","iTasks","iTasks.Extensions.JSONFile",["Just",34],["Just",30],"importJSONFileWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","JSONNode",[]]],["Type","Maybe",[["Var","a"]]],[]],["Type","FilePath",[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"importJSONFileWith :: !(JSONNode -> Maybe a) !FilePath -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Import and parse a JSON datafile on the server's filesystem using\na custom parse function."],["Decoder function: The JSON decoder function","File path: The path of the file to import"],[],["Just","The imported content"]]},["Bin",3,["Location","iTasks","iTasks.Extensions.JSONFile",["Just",20],["Just",13],"importJSONFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"importJSONFile :: !FilePath -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Import and parse a JSON datafile on the server's filesystem."],["File path: The path of the file to import"],[],["Just","The imported content"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.JSONFile",["Just",7],["Just",6],"CannotParse"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","JSONParseException",[]],[]],"fe_representation":"CannotParse :: String -> JSONParseException"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.JSONFile",["Just",21],["Just",18],"importJSONDocument"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Document",[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"importJSONDocument :: !Document -> Task a | iTask a"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.JSONFile",["Just",54],["Just",44],"exportJSONFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"exportJSONFile :: !FilePath a -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Encode and export a JSON datafile to the server's filesystem."],["File path: The path of the exported file","Value: The content to encode as JSON using the generic JSON encoder"],[],["Just","The exported content"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.JSONFile",["Just",43],["Just",35],"createJSONFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Var","a"]],["Type","Task",[["Type","Document",[]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"createJSONFile :: !String a -> Task Document | iTask a","fe_documentation":["FunctionDoc",["Just","Encode a value as JSON and create a document."],["File name: A name of the created JSONfile","Value: The content to encode as JSON using the generic JSON encoder"],[],["Just","The exported content as a document"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.JSONFile",["Just",67],["Just",47],"exportJSONFileWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","JSONNode",[]],[]],["Type","FilePath",[]],["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"exportJSONFileWith :: !(a -> JSONNode) !FilePath a -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Encode and export a JSON datafile to the server's filesystem using a custom encode function."],["Encoder function: The JSON encoder function","File path: The path of the exported file","Value: The content to encode as JSON"],[],["Just","The exported content"]]},["Tip"],["Tip"]]]],["Bin",11,["Location","iTasks","iTasks.Extensions.Process",["Just",43],["Just",97],"callInstantProcess"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","_List",[["Type","String",[]]]],["Type","Maybe",[["Type","FilePath",[]]]]],["Type","Task",[["Type","Int",[]]]],[]],"fe_representation":"callInstantProcess :: !FilePath ![String] !(Maybe FilePath) -> Task Int"},["Bin",3,["Location","iTasks","iTasks.Extensions.Process",["Just",15],["Nothing"],"CallFailed"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OSError",[]]],["Type","CallException",[]],[]],"fe_representation":"CallFailed :: OSError -> CallException"},["Bin",1,["Location","iTasks","iTasks.Extensions.Process",["Just",11],["Just",21],"RunningProcess"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","ProcessStatus",[]],[]],"fe_representation":"RunningProcess :: String -> ProcessStatus"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Process",["Just",33],["Just",33],"callProcess"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ViewOption",[["Type","ProcessStatus",[]]]]]],["Type","FilePath",[]],["Type","_List",[["Type","String",[]]]],["Type","Maybe",[["Type","FilePath",[]]]]],["Type","Task",[["Type","ProcessStatus",[]]]],[[["Class","toPrompt"],["Var","d"]]]],"fe_representation":"callProcess :: !d ![ViewOption ProcessStatus] !FilePath ![String] !(Maybe FilePath) -> Task ProcessStatus | toPrompt d"},["Tip"],["Tip"]]],["Bin",7,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",41],["Just",93],"execSelect"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLStatement",[]],["Type","_List",[["Type","SQLValue",[]]]],["Uniq",["Var","cur"]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_List",[["Type","SQLRow",[]]]]]],["Uniq",["Var","cur"]]]]],[[["Class","SQLCursor"],["Var","cur"]]]],"fe_representation":"execSelect :: SQLStatement [SQLValue] *cur -> *(MaybeErrorString [SQLRow],*cur) | SQLCursor cur"},["Bin",4,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",11],["Nothing"],"SQLiteDatabase"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","SQLDatabaseDef",[]],[]],"fe_representation":"SQLiteDatabase :: FilePath -> SQLDatabaseDef"},["Bin",1,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",11],["Nothing"],"MySQLDatabase"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SQLDatabase",[]]],["Type","SQLDatabaseDef",[]],[]],"fe_representation":"MySQLDatabase :: SQLDatabase -> SQLDatabaseDef"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",38],["Just",65],"sqlExecute"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLDatabaseDef",[]],["Type","_List",[["Type","String",[]]]],["Forall",[["Uniq",["Var","cur"]]],["Func",[["Uniq",["Var","cur"]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Var","a"]]],["Uniq",["Var","cur"]]]]],[]],[[["Class","SQLCursor"],["Var","cur"]]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"sqlExecute :: SQLDatabaseDef [String] (A.*cur: (*cur -> *(MaybeErrorString a,*cur)) | SQLCursor cur) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Perform one or multiple queries on an SQL database"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",30],["Just",13],"sqlShare"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Forall",[["Uniq",["Var","cur"]]],["Func",[["Var","p"]],["Func",[["Uniq",["Var","cur"]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Var","r"]]],["Uniq",["Var","cur"]]]]],[]],[]],[[["Class","SQLCursor"],["Var","cur"]]]],["Forall",[["Uniq",["Var","cur"]]],["Func",[["Var","p"]],["Func",[["Var","w"]],["Func",[["Uniq",["Var","cur"]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Unit",[]]]],["Uniq",["Var","cur"]]]]],[]],[]],[]],[[["Class","SQLCursor"],["Var","cur"]]]]],["Type","RWShared",[["Type","_Tuple2",[["Type","SQLDatabaseDef",[]],["Var","p"]]],["Var","r"],["Var","w"]]],[]],"fe_representation":"sqlShare :: String (A.*cur: (p -> *cur -> *(MaybeErrorString r,*cur)) | SQLCursor cur) (A.*cur: (p -> w -> *cur -> *(MaybeErrorString (),*cur)) | SQLCursor cur) -> RWShared (SQLDatabaseDef,p) r w","fe_documentation":["FunctionDoc",["Just","Generic SQL Database share\nYou need to supply the read\/write operations as functions using an SQL cursor"],["The database connection details","A unique identifier for the share","The read access function","The write access function"],[],["Just","The shared data source"]]},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",42],["Just",101],"execInsert"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLStatement",[]],["Type","_List",[["Type","SQLValue",[]]]],["Uniq",["Var","cur"]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","Int",[]]]],["Uniq",["Var","cur"]]]]],[[["Class","SQLCursor"],["Var","cur"]]]],"fe_representation":"execInsert :: SQLStatement [SQLValue] *cur -> *(MaybeErrorString Int,*cur) | SQLCursor cur"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",43],["Just",109],"execDelete"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLStatement",[]],["Type","_List",[["Type","SQLValue",[]]]],["Uniq",["Var","cur"]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Unit",[]]]],["Uniq",["Var","cur"]]]]],[[["Class","SQLCursor"],["Var","cur"]]]],"fe_representation":"execDelete :: SQLStatement [SQLValue] *cur -> *(MaybeErrorString (),*cur) | SQLCursor cur"},["Tip"],["Tip"]]]]]],["Bin",18,["Location","iTasks","iTasks.Extensions.TextFile",["Just",16],["Just",8],"importTextFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]]],["Type","Task",[["Type","String",[]]]],[]],"fe_representation":"importTextFile :: !FilePath -> Task String","fe_documentation":["FunctionDoc",["Just","Import the content of  a text file on the server's filesystem."],["File path: The path of the file to import"],[],["Just","The imported content"]]},["Bin",10,["Location","iTasks","iTasks.Extensions.SVG.SVGEditor",["Just",11],["Nothing"],"renderImage"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SVGEditor",[["Var","m"],["Var","v"]]]],["Func",[["Var","m"]],["Func",[["Var","v"]],["Func",[["Uniq",["Type","TagSource",[]]]],["Type","Image",[["Var","v"]]],[]],[]],[]],[]],"fe_representation":".renderImage :: (SVGEditor m v) -> m -> v -> *TagSource -> Image v"},["Bin",6,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",65],["Just",152],"sqlTableDefinition"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ROShared",[["Type","_Tuple2",[["Type","SQLDatabaseDef",[]],["Type","SQLTableName",[]]]],["Type","SQLTable",[]]]],[]],"fe_representation":"sqlTableDefinition :: ROShared (SQLDatabaseDef,SQLTableName) SQLTable","fe_documentation":["FunctionDoc",["Just","The structure of database table"],[],[],["Nothing"]]},["Bin",2,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",56],["Just",118],"sqlSelectShare"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","SQLStatement",[]],["Type","_List",[["Type","SQLValue",[]]]]],["Type","ROShared",[["Type","SQLDatabaseDef",[]],["Type","_List",[["Type","SQLRow",[]]]]]],[]],"fe_representation":"sqlSelectShare :: String SQLStatement ![SQLValue] -> ROShared SQLDatabaseDef [SQLRow]","fe_documentation":["FunctionDoc",["Just","Read only query that is run each time the share is read.\nNote: Although it is possible to do other queries than just selects,\nthis is a bad idea. You never know how many times the query will be executed"],[],[],["Nothing"]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",61],["Just",129],"sqlTables"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ROShared",[["Type","SQLDatabaseDef",[]],["Type","_List",[["Type","SQLTableName",[]]]]]],[]],"fe_representation":"sqlTables :: ROShared SQLDatabaseDef [SQLTableName]"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",68],["Just",203],"sqlExecuteDropTable"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLDatabaseDef",[]],["Type","SQLTableName",[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"sqlExecuteDropTable :: SQLDatabaseDef SQLTableName -> Task ()"},["Bin",1,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",67],["Just",176],"sqlExecuteCreateTable"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLDatabaseDef",[]],["Type","SQLTable",[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"sqlExecuteCreateTable :: SQLDatabaseDef SQLTable -> Task ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.SVG.SVGEditor",["Just",11],["Nothing"],"initView"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SVGEditor",[["Var","m"],["Var","v"]]]],["Func",[["Var","m"]],["Var","v"],[]],[]],"fe_representation":".initView :: (SVGEditor m v) -> m -> v"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Extensions.SVG.SVGEditor",["Just",11],["Nothing"],"updView"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SVGEditor",[["Var","m"],["Var","v"]]]],["Func",[["Var","m"]],["Func",[["Var","v"]],["Var","v"],[]],[]],[]],"fe_representation":".updView :: (SVGEditor m v) -> m -> v -> v"},["Bin",1,["Location","iTasks","iTasks.Extensions.SVG.SVGEditor",["Just",11],["Nothing"],"updModel"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SVGEditor",[["Var","m"],["Var","v"]]]],["Func",[["Var","m"]],["Func",[["Var","v"]],["Var","m"],[]],[]],[]],"fe_representation":".updModel :: (SVGEditor m v) -> m -> v -> m"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.SVG.SVGEditor",["Just",18],["Just",80],"fromSVGEditor"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SVGEditor",[["Var","s"],["Var","v"]]]],["Type","Editor",[["Var","s"]]],[[["Class","iTask"],["Var","s"]],[["Generic","JSEncode",["KindConst"]],["Var","s"]]]],"fe_representation":"fromSVGEditor :: (SVGEditor s v) -> Editor s | iTask s & JSEncode{|*|} s"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Extensions.User",["Just",9],["Nothing"],"AuthenticatedUser"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UserId",[]],["Type","_List",[["Type","Role",[]]]],["Type","Maybe",[["Type","UserTitle",[]]]]],["Type","User",[]],[]],"fe_representation":"AuthenticatedUser :: UserId [Role] (Maybe UserTitle) -> User"},["Bin",2,["Location","iTasks","iTasks.Extensions.TextFile",["Just",29],["Just",13],"exportTextFile"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","String",[]]],["Type","Task",[["Type","String",[]]]],[]],"fe_representation":"exportTextFile :: !FilePath !String -> Task String","fe_documentation":["FunctionDoc",["Just","Export a string as text file to the server's filesystem."],["File path: The path of the exported file","Text: The content to export"],[],["Just","The exported content"]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",9],["Nothing"],"AnonymousUser"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","User",[]],[]],"fe_representation":"AnonymousUser :: String -> User"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Extensions.User",["Just",19],["Nothing"],"UserWithId"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UserId",[]]],["Type","UserConstraint",[]],[]],"fe_representation":"UserWithId :: UserId -> UserConstraint"},["Bin",2,["Location","iTasks","iTasks.Extensions.User",["Just",19],["Nothing"],"AnyUser"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UserConstraint",[]],[]],"fe_representation":"AnyUser :: UserConstraint"},["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",9],["Nothing"],"SystemUser"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","User",[]],[]],"fe_representation":"SystemUser :: User"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",19],["Nothing"],"UserWithRole"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Role",[]]],["Type","UserConstraint",[]],[]],"fe_representation":"UserWithRole :: Role -> UserConstraint"},["Tip"],["Tip"]]]]]],["Bin",19,["Location","iTasks","iTasks.Extensions.User",["Just",104],["Just",218],"assign"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskAttributes",[]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"assign :: !TaskAttributes !(Task a) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Assign a task to a(nother) user."],["Manager properties: The initial manager properties indicating the user to which the task is delegated, a priority and possibly a deadline","Action menu: A function generating a menu for the process delegated to the user","Task: The task that is to be delegated"],[],["Just","The combined task"]]},["Bin",11,["Location","iTasks","iTasks.Extensions.User",["Just",74],["Just",169],"taskInstancesForUser"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ROShared",[["Type","User",[]],["Type","_List",[["Type","TaskInstance",[]]]]]],[]],"fe_representation":"taskInstancesForUser :: ROShared User [TaskInstance]"},["Bin",7,["Location","iTasks","iTasks.Extensions.User",["Just",49],["Nothing"],"Password"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Password",[]],[]],"fe_representation":"Password :: String -> Password"},["Bin",2,["Location","iTasks","iTasks.Extensions.User",["Just",47],["Nothing"],"Username"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UserId",[]]],["Type","Username",[]],[]],"fe_representation":"Username :: UserId -> Username"},["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",42],["Nothing"],"username"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Credentials",[]]],["Type","Username",[]],[]],"fe_representation":".username :: Credentials -> Username"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","iTasks","iTasks.Extensions.User",["Just",71],["Just",151],"processesForUser"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","User",[]]],["Type","ReadOnlyShared",[["Type","_List",[["Type","TaskListItem",[["Type","_Unit",[]]]]]]]],[]],"fe_representation":"processesForUser :: User -> ReadOnlyShared [TaskListItem ()]"},["Bin",2,["Location","iTasks","iTasks.Extensions.User",["Just",68],["Just",125],"taskInstanceUser"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceNo",[]],["Type","User",[]],["Type","User",[]]]],[]],"fe_representation":"taskInstanceUser :: RWShared InstanceNo User User"},["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",66],["Just",120],"currentUser"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","User",[]],["Type","User",[]]]],[]],"fe_representation":"currentUser :: RWShared () User User"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",72],["Just",154],"processesForCurrentUser"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ReadOnlyShared",[["Type","_List",[["Type","TaskListItem",[["Type","_Unit",[]]]]]]]],[]],"fe_representation":"processesForCurrentUser :: ReadOnlyShared [TaskListItem ()]"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Extensions.User",["Just",81],["Just",191],"workOn"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","t"]],["Type","Task",[["Type","AttachmentStatus",[]]]],[[["Class","toInstanceNo"],["Var","t"]]]],"fe_representation":"workOn :: !t -> Task AttachmentStatus | toInstanceNo t"},["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",75],["Just",187],"taskInstancesForCurrentUser"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ROShared",[["Type","_Unit",[]],["Type","_List",[["Type","TaskInstance",[]]]]]],[]],"fe_representation":"taskInstancesForCurrentUser :: ROShared () [TaskInstance]"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",91],["Just",205],"workAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","User",[]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"workAs :: !User !(Task a) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Execute a task with the identity of the given user"],["The user with which identity the task is to be executed","The task to do"],[],["Just","The modified task"]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Extensions.User",["Just",123],["Just",279],"appendTopLevelTaskPrioFor"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","worker"],["Type","String",[]],["Type","String",[]],["Type","Bool",[]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Type","TaskId",[]]]],[[["Class","iTask"],["Var","a"]],[["Class","toUserConstraint"],["Var","worker"]]]],"fe_representation":"appendTopLevelTaskPrioFor :: !worker !String !String !Bool !(Task a) -> Task TaskId | iTask a & toUserConstraint worker"},["Bin",3,["Location","iTasks","iTasks.Extensions.User",["Just",120],["Just",261],"workerAttributes"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","worker"],["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]],["Type","TaskAttributes",[]],[[["Class","toUserConstraint"],["Var","worker"]]]],"fe_representation":"workerAttributes :: worker [(String,String)] -> TaskAttributes | toUserConstraint worker"},["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",118],["Just",267],"@:"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","worker"],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","toUserConstraint"],["Var","worker"]]]],"fe_priority":["NoAssoc",3],"fe_representation":"(@:) infix 3 :: !worker !(Task a) -> Task a | iTask a & toUserConstraint worker","fe_documentation":["FunctionDoc",["Just","Assign a task to a user. (no deadline, normal priority)"],["User: The initial UserId of the user to which the task is delegated","Task: The task that is to be delegated."],[],["Just","The combined task"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",122],["Just",290],"appendTopLevelTaskFor"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","worker"],["Type","Bool",[]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Type","TaskId",[]]]],[[["Class","iTask"],["Var","a"]],[["Class","toUserConstraint"],["Var","worker"]]]],"fe_representation":"appendTopLevelTaskFor :: !worker !Bool !(Task a) -> Task TaskId | iTask a & toUserConstraint worker"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Web",["Just",11],["Nothing"],"URL"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","URL",[]],[]],"fe_representation":"URL :: String -> URL"},["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",125],["Just",130],"userFromAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","TaskAttributes",[]]],["Type","MaybeError",[["Type","TaskException",[]],["Type","User",[]]]],[]],"fe_representation":"userFromAttr :: a TaskAttributes -> MaybeError TaskException User"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Web",["Just",23],["Just",54],"serveWebService"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Func",[["Type","HTTPRequest",[]]],["Type","Task",[["Type","HTTPResponse",[]]]],[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"serveWebService :: Int (HTTPRequest -> Task HTTPResponse) -> Task ()"},["Tip"],["Tip"]]]]]]],["Bin",282,["Location","iTasks","iTasks.Internal.Store",["Just",118],["Just",224],"blobStoreRead"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","StoreName",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","StoreReadError",[]],["Type","_#Array",[["Type","Char",[]]]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"blobStoreRead :: !StoreNamespace !StoreName !*IWorld -> (!MaybeError StoreReadError {#Char},!*IWorld)","fe_documentation":["FunctionDoc",["Just","Load a binary blob"],[],[],["Nothing"]]},["Bin",193,["Location","iTasks","iTasks.Internal.IWorld",["Just",113],["Nothing"],"removeOnClose"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ListenerInstanceOpts",[]]],["Type","Bool",[]],[]],"fe_representation":".removeOnClose :: ListenerInstanceOpts -> Bool"},["Bin",121,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"ioTasks"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IOTasks",[]]],[]],"fe_representation":".ioTasks :: *IWorld -> *IOTasks"},["Bin",75,["Location","iTasks","iTasks.Internal.Engine",["Just",68],["Just",251],"publishWithoutLayout"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Type","HTTPRequest",[]]],["Type","Task",[["Var","a"]]],[]]],["Type","PublishedTask",[]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"publishWithoutLayout :: String (HTTPRequest -> Task a) -> PublishedTask | iTask a","fe_documentation":["FunctionDoc",["Just","This function publishes a task with autolayouting turned off\nto enable testing and debugging without layout processing"],[],[],["Nothing"]]},["Bin",33,["Location","iTasks","iTasks.Internal.Engine",["Just",27],["Nothing"],"saplDirPath"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerOptions",[]]],["Type","Maybe",[["Type","FilePath",[]]]],[]],"fe_representation":".saplDirPath :: ServerOptions -> Maybe FilePath"},["Bin",24,["Location","iTasks","iTasks.Internal.DynamicUtil",["Just",8],["Just",13],"unpackType"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Dynamic",[]]],["Type","TypeCode",[]],[]],"fe_representation":"unpackType :: !Dynamic -> TypeCode"},["Bin",13,["Location","iTasks","iTasks.Internal.Client.JSStore",["Just",10],["Just",16],"jsDeleteValues"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"jsDeleteValues :: !String !String !*IWorld -> *IWorld"},["Bin",5,["Location","iTasks","iTasks.Extensions.Web",["Just",42],["Just",213],"callRPCHTTP"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPMethod",[]],["Type","URI",[]],["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],["Func",[["Type","HTTPResponse",[]]],["Var","a"],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"callRPCHTTP :: !HTTPMethod !URI ![(String,String)] !(HTTPResponse -> a) -> Task a | iTask a"},["Bin",1,["Location","iTasks","iTasks.Extensions.Web",["Just",41],["Just",184],"callHTTP"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPMethod",[]],["Type","URI",[]],["Type","String",[]],["Func",[["Type","HTTPResponse",[]]],["Type","MaybeErrorString",[["Var","a"]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"callHTTP :: !HTTPMethod !URI !String !(HTTPResponse -> MaybeErrorString a) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Calls an external HTTP webservice."],["HTTP Method: the HTTP method (GET or POST) to use","URL: The URL of the webservice","Parameters: A list of name\/value pairs","Response handler: A parse function that parses the response"],[],["Just","The parsedd value"]]},["Tip"],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.Client.JSStore",["Just",8],["Just",10],"jsLoadValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Var","a"]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"jsLoadValue :: !String !String !*IWorld -> (!Maybe a,!*IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.Client.JSStore",["Just",7],["Just",7],"jsStoreValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Var","a"],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"jsStoreValue :: !String !String !a !*IWorld -> *IWorld"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Client.JSStore",["Just",9],["Just",13],"jsDeleteValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"jsDeleteValue :: !String !String !*IWorld -> *IWorld"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.Client.Override",["Just",12],["Just",13],"unwrapTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Dynamic",[]]],["Type","Task",[["Var","a"]]],[[["Class","TC"],["Var","a"]]]],"fe_representation":"unwrapTask :: Dynamic -> Task a | TC a"},["Bin",3,["Location","iTasks","iTasks.Internal.Client.Override",["Just",9],["Just",5],"cast"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","b"],[[["Class","TC"],["Var","a"]],[["Class","TC"],["Var","b"]]]],"fe_representation":"cast :: a -> b | TC a & TC b"},["Bin",1,["Location","iTasks","iTasks.Internal.Client.LinkerSupport",["Just",18],["Just",21],"editorLinker"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","f"],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"editorLinker :: !f !*IWorld -> *(!MaybeErrorString (!String,!String),!*IWorld)","fe_documentation":["FunctionDoc",["Just","Links all necessary Sapl functions for an editlet and compiles them to Javascript"],["initUI function","IWorld state"],[],["Just","JS code of the support code for all the expressions"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Client.Override",["Just",10],["Just",8],"cast_to_TaskValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","TaskValue",[["Var","b"]]],[[["Class","TC"],["Var","a"]],[["Class","TC"],["Var","b"]]]],"fe_representation":"cast_to_TaskValue :: a -> TaskValue b | TC a & TC b"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Client.RunOnClient",["Just",6],["Just",120],"createClientIWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","InstanceNo",[]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"createClientIWorld :: !String !InstanceNo -> *IWorld"},["Bin",1,["Location","iTasks","iTasks.Internal.Client.RunOnClient",["Just",5],["Just",28],"runOnClient"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","m"]]]],["Type","Task",[["Var","m"]]],[[["Class","iTask"],["Var","m"]]]],"fe_representation":"runOnClient :: !(Task m) -> Task m | iTask m"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Client.RunOnClient",["Just",7],["Just",103],"getUIUpdates"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Type","_List",[["Type","_Tuple2",[["Type","InstanceNo",[]],["Type","_List",[["Type","String",[]]]]]]]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"getUIUpdates :: !*IWorld -> (!Maybe [(InstanceNo,[String])],*IWorld)"},["Tip"],["Tip"]]]]],["Bin",10,["Location","iTasks","iTasks.Internal.Engine",["Just",20],["Nothing"],"MAX_EVENTS"],{"fe_kind":["Macro"],"fe_representation":"MAX_EVENTS :== 5"},["Bin",4,["Location","iTasks","iTasks.Internal.Engine",["Just",17],["Nothing"],"DEFAULT_PORT"],{"fe_kind":["Macro"],"fe_representation":"DEFAULT_PORT :== IF_POSIX_OR_WINDOWS 8080 80"},["Bin",1,["Location","iTasks","iTasks.Internal.DynamicUtil",["Just",12],["Just",87],"toDyn"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Dynamic",[]],[[["Class","TC"],["Var","a"]]]],"fe_representation":"toDyn :: a -> Dynamic | TC a"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Internal.Engine",["Just",18],["Nothing"],"DEFAULT_KEEPALIVE_TIME"],{"fe_kind":["Macro"],"fe_representation":"DEFAULT_KEEPALIVE_TIME :== 300"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",19],["Nothing"],"SESSION_TIMEOUT"],{"fe_kind":["Macro"],"fe_representation":"SESSION_TIMEOUT :== 600"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.Internal.Engine",["Just",27],["Nothing"],"appName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerOptions",[]]],["Type","String",[]],[]],"fe_representation":".appName :: ServerOptions -> String"},["Bin",2,["Location","iTasks","iTasks.Internal.Engine",["Just",22],["Nothing"],"task"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","PublishedTask",[]]],["Type","WebTaskWrapper",[]],[]],"fe_representation":".task :: PublishedTask -> WebTaskWrapper"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",22],["Nothing"],"url"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","PublishedTask",[]]],["Type","String",[]],[]],"fe_representation":".url :: PublishedTask -> String"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Engine",["Just",27],["Nothing"],"appPath"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerOptions",[]]],["Type","FilePath",[]],[]],"fe_representation":".appPath :: ServerOptions -> FilePath"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",27],["Nothing"],"keepalive"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerOptions",[]]],["Type","Int",[]],[]],"fe_representation":".keepalive :: ServerOptions -> Int"},["Tip"],["Tip"]]]]]],["Bin",8,["Location","iTasks","iTasks.Internal.Engine",["Just",37],["Nothing"],"WebTaskWrapper"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Type","HTTPRequest",[]]],["Type","Task",[["Var","a"]]],[]]],["Type","WebTaskWrapper",[]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"WebTaskWrapper :: (HTTPRequest -> Task a) -> WebTaskWrapper | iTask a"},["Bin",3,["Location","iTasks","iTasks.Internal.Engine",["Just",27],["Nothing"],"storeDirPath"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerOptions",[]]],["Type","Maybe",[["Type","FilePath",[]]]],[]],"fe_representation":".storeDirPath :: ServerOptions -> Maybe FilePath"},["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",27],["Nothing"],"serverPort"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerOptions",[]]],["Type","Int",[]],[]],"fe_representation":".serverPort :: ServerOptions -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",27],["Nothing"],"webDirPath"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerOptions",[]]],["Type","Maybe",[["Type","FilePath",[]]]],[]],"fe_representation":".webDirPath :: ServerOptions -> Maybe FilePath"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Internal.Engine",["Just",57],["Just",101],"startEngineWithOptions"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","ServerOptions",[]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[[["Class","Publishable"],["Var","a"]]]],"fe_representation":"startEngineWithOptions :: a ServerOptions !*World -> *World | Publishable a","fe_documentation":["FunctionDoc",["Just","Starts the task engine with options and a list of published task definitions."],["Tasks to start","Options to use like port and server paths.","The world"],[],["Just","The world"]]},["Bin",2,["Location","iTasks","iTasks.Internal.Engine",["Just",38],["Nothing"],"TaskWrapper"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Task",[["Var","a"]]]],["Type","TaskWrapper",[]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"TaskWrapper :: (Task a) -> TaskWrapper | iTask a"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",47],["Just",95],"startEngine"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[[["Class","Publishable"],["Var","a"]]]],"fe_representation":"startEngine :: a !*World -> *World | Publishable a","fe_documentation":["FunctionDoc",["Just","Starts the task engine with a list of published task definitions."],["Tasks to start","The world"],[],["Just","The world"]]},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",62],["Just",245],"publish"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Type","HTTPRequest",[]]],["Type","Task",[["Var","a"]]],[]]],["Type","PublishedTask",[]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"publish :: String (HTTPRequest -> Task a) -> PublishedTask | iTask a","fe_documentation":["FunctionDoc",["Just","Wraps a task together with a url to make it publishable by the engine"],[],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",41,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",16],["Just",100],"http_parseGetArguments"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","Map",[["Type","String",[]],["Type","String",[]]]],[]],"fe_representation":"http_parseGetArguments :: !HTTPRequest -> Map String String"},["Bin",24,["Location","iTasks","iTasks.Internal.HtmlUtil",["Just",20],["Just",51],"hasParam"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","HTTPRequest",[]]],["Type","Bool",[]],[]],"fe_representation":"hasParam :: !String !HTTPRequest -> Bool","fe_documentation":["FunctionDoc",["Just","Check if a parameter is set"],[],[],["Nothing"]]},["Bin",16,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",13],["Nothing"],"AsHeader"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TextFormat",[]],[]],"fe_representation":"AsHeader :: TextFormat"},["Bin",5,["Location","iTasks","iTasks.Internal.Engine",["Just",93],["Just",233],"background"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"background :: !*IWorld -> *IWorld"},["Bin",2,["Location","iTasks","iTasks.Internal.Engine",["Just",90],["Just",122],"runTasks"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[[["Class","Runnable"],["Var","a"]]]],"fe_representation":"runTasks :: a !*World -> *World | Runnable a"},["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",78],["Just",280],"determineAppName"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","String",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"determineAppName :: !*World -> (!String,!*World)"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",25],["Just",40],"defaultValue"],{"fe_kind":["Function"],"fe_type":["Func",[],["Var","a"],[[["Generic","gDefault",["KindConst"]],["Var","a"]]]],"fe_representation":"defaultValue :: a | gDefault{|*|} a"},["Bin",1,["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",10],["Just",6],"gDefault"],{"fe_kind":["Function"],"fe_type":["Func",[],["Var","a"],[]],"fe_generic_vars":["a"],"fe_representation":"generic gDefault a :: a"},["Tip"],["Tip"]],["Tip"]]],["Bin",10,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",32],["Just",119],"+++>"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","String",[]]],["Type","String",[]],[[["Generic","gText",["KindConst"]],["Var","a"]]]],"fe_priority":["RightAssoc",5],"fe_representation":"(+++>) infixr 5 :: !a !String -> String | gText{|*|} a"},["Bin",6,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",13],["Nothing"],"AsSingleLine"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TextFormat",[]],[]],"fe_representation":"AsSingleLine :: TextFormat"},["Bin",2,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",13],["Nothing"],"AsRow"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TextFormat",[]],[]],"fe_representation":"AsRow :: TextFormat"},["Bin",1,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",13],["Nothing"],"AsMultiLine"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TextFormat",[]],[]],"fe_representation":"AsMultiLine :: TextFormat"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",29],["Just",13],"toSingleLineText"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[[["Generic","gText",["KindConst"]],["Var","a"]]]],"fe_representation":"toSingleLineText :: !a -> String | gText{|*|} a"},["Bin",1,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",21],["Just",20],"gText"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TextFormat",[]],["Type","Maybe",[["Var","a"]]]],["Type","_List",[["Type","String",[]]]],[]],"fe_generic_vars":["a"],"fe_representation":"generic gText a :: !TextFormat (Maybe a) -> [String]"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",30],["Just",16],"toMultiLineText"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[[["Generic","gText",["KindConst"]],["Var","a"]]]],"fe_representation":"toMultiLineText :: !a -> String | gText{|*|} a"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Internal.HtmlUtil",["Just",12],["Just",39],"notFoundResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","HTTPResponse",[]],[]],"fe_representation":"notFoundResponse :: !HTTPRequest -> HTTPResponse"},["Bin",1,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",33],["Just",122],"<+++"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Var","a"]],["Type","String",[]],[[["Generic","gText",["KindConst"]],["Var","a"]]]],"fe_priority":["LeftAssoc",5],"fe_representation":"(<+++) infixl 5 :: !String !a -> String | gText{|*|} a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.HtmlUtil",["Just",16],["Just",43],"paramValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","HTTPRequest",[]]],["Type","String",[]],[]],"fe_representation":"paramValue :: !String !HTTPRequest -> String","fe_documentation":["FunctionDoc",["Just","Gets the value of a parameter in the GET or POST values."],[],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",9],["Just",28],"http_addRequestData"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","String",[]]],["Type","_Tuple5",[["Type","HTTPRequest",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]]]],[]],"fe_representation":"http_addRequestData :: !HTTPRequest !Bool !Bool !Bool !String -> (HTTPRequest,Bool,Bool,Bool,Bool)"},["Bin",3,["Location","iTasks","iTasks.Internal.HtmlUtil",["Just",28],["Just",57],"html2text"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","String",[]],[]],"fe_representation":"html2text :: !String -> String","fe_documentation":["FunctionDoc",["Just","Convert a html string to pure text."],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.HtmlUtil",["Just",24],["Just",54],"nl2br"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","HtmlTag",[]],[]],"fe_representation":"nl2br :: !String -> HtmlTag","fe_documentation":["FunctionDoc",["Just","Convert newlines to br tags."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",6],["Just",8],"http_splitMultiPart"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]]],["Type","_List",[["Type","_Tuple2",[["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],["Type","String",[]]]]]],[]],"fe_representation":"http_splitMultiPart :: !String !String -> [([(String,String)],String)]"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",13],["Just",80],"http_parseHeader"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_Tuple2",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]],["Type","Bool",[]]]],[]],"fe_representation":"http_parseHeader :: !String -> (!(String,String),!Bool)"},["Bin",1,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",12],["Just",71],"http_parseRequestLine"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_Tuple5",[["Type","String",[]],["Type","String",[]],["Type","String",[]],["Type","String",[]],["Type","Bool",[]]]],[]],"fe_representation":"http_parseRequestLine :: !String -> (!String,!String,!String,!String,!Bool)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",15],["Just",88],"http_parseArguments"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","HTTPRequest",[]],[]],"fe_representation":"http_parseArguments :: !HTTPRequest -> HTTPRequest"},["Tip"],["Tip"]]]]],["Bin",16,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",28],["Just",216],"http_staticFileMimeType"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Var","st"]]],["Type","_Tuple2",[["Type","String",[]],["Uniq",["Var","st"]]]],[]],"fe_representation":"http_staticFileMimeType :: !String !*st -> (!String,!*st)"},["Bin",7,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",22],["Just",149],"http_makeResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]],["Type","_List",[["Type","_Tuple2",[["Func",[["Type","String",[]]],["Type","Bool",[]],[]],["Func",[["Type","HTTPRequest",[]]],["Func",[["Uniq",["Var","st"]]],["Type","_Tuple2",[["Type","HTTPResponse",[]],["Uniq",["Var","st"]]]],[]],[]]]]]],["Type","Bool",[]],["Uniq",["Var","st"]]],["Type","_Tuple2",[["Type","HTTPResponse",[]],["Uniq",["Var","st"]]]],[[["Class","FileSystem"],["Var","st"]]]],"fe_representation":"http_makeResponse :: !HTTPRequest ![(String -> Bool,HTTPRequest -> *st -> (HTTPResponse,*st))] !Bool !*st -> (!HTTPResponse,!*st) | FileSystem st"},["Bin",3,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",18],["Just",108],"http_parseUrlEncodedArguments"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],[]],"fe_representation":"http_parseUrlEncodedArguments :: !String -> [(String,String)]"},["Bin",1,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",17],["Just",105],"http_parsePostArguments"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","Map",[["Type","String",[]],["Type","String",[]]]],[]],"fe_representation":"http_parsePostArguments :: !HTTPRequest -> Map String String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",19],["Just",111],"http_parseMultiPartPostArguments"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]]],["Type","_Tuple2",[["Type","Map",[["Type","String",[]],["Type","String",[]]]],["Type","Map",[["Type","String",[]],["Type","HTTPUpload",[]]]]]],[]],"fe_representation":"http_parseMultiPartPostArguments :: !HTTPRequest -> (Map String String,Map String HTTPUpload)"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",26],["Just",192],"http_staticResponse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPRequest",[]],["Uniq",["Var","st"]]],["Type","_Tuple2",[["Type","HTTPResponse",[]],["Uniq",["Var","st"]]]],[[["Class","FileSystem"],["Var","st"]]]],"fe_representation":"http_staticResponse :: !HTTPRequest !*st -> (!HTTPResponse,!*st) | FileSystem st"},["Bin",1,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",23],["Just",158],"http_addDateHeaders"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPResponse",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","HTTPResponse",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"http_addDateHeaders :: !HTTPResponse !*World -> (!HTTPResponse,!*World)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",27],["Just",203],"http_staticFileContent"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Var","st"]]],["Type","_Tuple3",[["Type","Bool",[]],["Type","String",[]],["Uniq",["Var","st"]]]],[[["Class","FileSystem"],["Var","st"]]]],"fe_representation":"http_staticFileContent :: !String !*st -> (!Bool,!String,!*st) | FileSystem st"},["Tip"],["Tip"]]]],["Bin",8,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"clocks"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","SystemClocks",[]],[]],"fe_representation":".clocks :: *IWorld -> SystemClocks"},["Bin",3,["Location","iTasks","iTasks.Internal.IWorld",["Just",29],["Nothing"],"CLEAN_HOME_VAR"],{"fe_kind":["Macro"],"fe_representation":"CLEAN_HOME_VAR :== \"CLEAN_HOME\""},["Bin",1,["Location","iTasks","iTasks.Internal.HttpUtil",["Just",31],["Just",230],"http_serverControl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPResponse",[]]],["Type","String",[]],[]],"fe_representation":"http_serverControl :: !HTTPResponse -> String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"cachedShares"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","ShareCache",[]],[]],"fe_representation":".cachedShares :: *IWorld -> ShareCache"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"current"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","TaskEvalState",[]],[]],"fe_representation":".current :: *IWorld -> TaskEvalState"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"config"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","Config",[]],[]],"fe_representation":".config :: *IWorld -> Config"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"exposedShares"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","Map",[["Type","String",[]],["Type","_Tuple2",[["Type","Dynamic",[]],["Type","JSONShared",[]]]]]],[]],"fe_representation":".exposedShares :: *IWorld -> Map String (Dynamic, JSONShared)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"ioStates"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","IOStates",[]],[]],"fe_representation":".ioStates :: *IWorld -> IOStates"},["Tip"],["Tip"]]]]]]]],["Bin",45,["Location","iTasks","iTasks.Internal.IWorld",["Just",74],["Nothing"],"localTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SystemClocks",[]]],["Type","Time",[]],[]],"fe_representation":".localTime :: SystemClocks -> Time"},["Bin",20,["Location","iTasks","iTasks.Internal.IWorld",["Just",60],["Nothing"],"paths"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerInfo",[]]],["Type","SystemPaths",[]],[]],"fe_representation":".paths :: ServerInfo -> SystemPaths"},["Bin",12,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"shutdown"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","Maybe",[["Type","Int",[]]]],[]],"fe_representation":".shutdown :: *IWorld -> Maybe Int"},["Bin",7,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"onClient"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","Bool",[]],[]],"fe_representation":".onClient :: *IWorld -> Bool"},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"jsCompilerState"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","Maybe",[["Type","JSCompilerState",[]]]],[]],"fe_representation":".jsCompilerState :: *IWorld -> Maybe JSCompilerState"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"memoryShares"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","Map",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]],["Type","Dynamic",[]]]],[]],"fe_representation":".memoryShares :: *IWorld -> Map (String, String) Dynamic"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"resources"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","Maybe",[["Uniq",["Type","Resource",[]]]]]],[]],"fe_representation":".resources :: *IWorld -> *(Maybe *Resource)"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"random"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_List",[["Type","Int",[]]]],[]],"fe_representation":".random :: *IWorld -> [Int]"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"sdsNotifyRequests"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_List",[["Type","SDSNotifyRequest",[]]]],[]],"fe_representation":".sdsNotifyRequests :: *IWorld -> [SDSNotifyRequest]"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"server"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","ServerInfo",[]],[]],"fe_representation":".server :: *IWorld -> ServerInfo"},["Tip"],["Tip"]]]]],["Bin",4,["Location","iTasks","iTasks.Internal.IWorld",["Just",55],["Nothing"],"smtpServer"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Config",[]]],["Type","String",[]],[]],"fe_representation":".smtpServer :: Config -> String","fe_documentation":["FunctionDoc",["Just","The smtp server to use for sending e-mails"],[],[],["Nothing"]]},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",55],["Nothing"],"sessionTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Config",[]]],["Type","Int",[]],[]],"fe_representation":".sessionTime :: Config -> Int","fe_documentation":["FunctionDoc",["Just","Time (in seconds) before inactive sessions are garbage collected. Default is 3600 (one hour)."],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"world"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":".world :: *IWorld -> *World"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",60],["Nothing"],"buildID"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerInfo",[]]],["Type","String",[]],[]],"fe_representation":".buildID :: ServerInfo -> String"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.IWorld",["Just",67],["Nothing"],"dataDirectory"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SystemPaths",[]]],["Type","FilePath",[]],[]],"fe_representation":".dataDirectory :: SystemPaths -> FilePath"},["Bin",3,["Location","iTasks","iTasks.Internal.IWorld",["Just",60],["Nothing"],"serverURL"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerInfo",[]]],["Type","String",[]],[]],"fe_representation":".serverURL :: ServerInfo -> String"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",60],["Nothing"],"serverName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ServerInfo",[]]],["Type","String",[]],[]],"fe_representation":".serverName :: ServerInfo -> String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",67],["Nothing"],"appDirectory"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SystemPaths",[]]],["Type","FilePath",[]],[]],"fe_representation":".appDirectory :: SystemPaths -> FilePath"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.IWorld",["Just",67],["Nothing"],"webDirectory"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SystemPaths",[]]],["Type","FilePath",[]],[]],"fe_representation":".webDirectory :: SystemPaths -> FilePath"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",67],["Nothing"],"saplDirectory"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SystemPaths",[]]],["Type","FilePath",[]],[]],"fe_representation":".saplDirectory :: SystemPaths -> FilePath"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",74],["Nothing"],"localDate"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SystemClocks",[]]],["Type","Date",[]],[]],"fe_representation":".localDate :: SystemClocks -> Date"},["Tip"],["Tip"]]]]],["Bin",24,["Location","iTasks","iTasks.Internal.IWorld",["Just",94],["Nothing"],"nextTaskNo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalState",[]]],["Type","TaskNo",[]],[]],"fe_representation":".nextTaskNo :: TaskEvalState -> TaskNo"},["Bin",11,["Location","iTasks","iTasks.Internal.IWorld",["Just",86],["Nothing"],"functionMap"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","JSCompilerState",[]]],["Type","FuncTypeMap",[]],[]],"fe_representation":".functionMap :: JSCompilerState -> FuncTypeMap"},["Bin",6,["Location","iTasks","iTasks.Internal.IWorld",["Just",84],["Nothing"],"CachedDynamicValue"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","CachedValue",[]],[]],"fe_representation":"CachedDynamicValue :: CachedValue"},["Bin",3,["Location","iTasks","iTasks.Internal.IWorld",["Just",74],["Nothing"],"utcDate"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SystemClocks",[]]],["Type","Date",[]],[]],"fe_representation":".utcDate :: SystemClocks -> Date"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",74],["Nothing"],"timestamp"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SystemClocks",[]]],["Type","Timestamp",[]],[]],"fe_representation":".timestamp :: SystemClocks -> Timestamp"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",74],["Nothing"],"utcTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SystemClocks",[]]],["Type","Time",[]],[]],"fe_representation":".utcTime :: SystemClocks -> Time"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",86],["Nothing"],"flavour"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","JSCompilerState",[]]],["Type","Flavour",[]],[]],"fe_representation":".flavour :: JSCompilerState -> Flavour"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",84],["Nothing"],"CachedJSONValue"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","DeferredJSON",[]]],["Type","CachedValue",[]],[]],"fe_representation":"CachedJSONValue :: DeferredJSON -> CachedValue"},["Tip"],["Tip"]],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Internal.IWorld",["Just",86],["Nothing"],"parserState"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","JSCompilerState",[]]],["Type","Maybe",[["Type","ParserState",[]]]],[]],"fe_representation":".parserState :: JSCompilerState -> Maybe ParserState"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",86],["Nothing"],"loaderState"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","JSCompilerState",[]]],["Type","LoaderState",[]],[]],"fe_representation":".loaderState :: JSCompilerState -> LoaderState"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",86],["Nothing"],"skipMap"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","JSCompilerState",[]]],["Type","Map",[["Type","InstanceNo",[]],["Type","Set",[["Type","String",[]]]]]],[]],"fe_representation":".skipMap :: JSCompilerState -> Map InstanceNo (Set String)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",94],["Nothing"],"attachmentChain"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalState",[]]],["Type","_List",[["Type","TaskId",[]]]],[]],"fe_representation":".attachmentChain :: TaskEvalState -> [TaskId]"},["Tip"],["Tip"]]]]],["Bin",12,["Location","iTasks","iTasks.Internal.IWorld",["Just",102],["Nothing"],"todo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IOTasks",[]]]],["Uniq",["Type","_List",[["Type","IOTaskInstance",[]]]]],[]],"fe_representation":".todo :: *IOTasks -> *[IOTaskInstance]"},["Bin",4,["Location","iTasks","iTasks.Internal.IWorld",["Just",94],["Nothing"],"taskInstance"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalState",[]]],["Type","InstanceNo",[]],[]],"fe_representation":".taskInstance :: TaskEvalState -> InstanceNo"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",94],["Nothing"],"sessionInstance"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalState",[]]],["Type","Maybe",[["Type","InstanceNo",[]]]],[]],"fe_representation":".sessionInstance :: TaskEvalState -> Maybe InstanceNo"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",102],["Nothing"],"done"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","IOTasks",[]]]],["Uniq",["Type","_List",[["Type","IOTaskInstance",[]]]]],[]],"fe_representation":".done :: *IOTasks -> *[IOTaskInstance]"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",94],["Nothing"],"taskTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalState",[]]],["Type","TaskTime",[]],[]],"fe_representation":".taskTime :: TaskEvalState -> TaskTime"},["Tip"],["Tip"]],["Tip"]]],["Bin",7,["Location","iTasks","iTasks.Internal.IWorld",["Just",107],["Nothing"],"ExternalProcessInstance"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ExternalProcessInstanceOpts",[]],["Type","ProcessHandle",[]],["Type","ProcessIO",[]]],["Uniq",["Type","IOTaskInstance",[]]],[]],"fe_representation":"ExternalProcessInstance :: ExternalProcessInstanceOpts ProcessHandle ProcessIO -> *IOTaskInstance"},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",107],["Nothing"],"BackgroundInstance"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","BackgroundInstanceOpts",[]],["Type","BackgroundTask",[]]],["Uniq",["Type","IOTaskInstance",[]]],[]],"fe_representation":"BackgroundInstance :: BackgroundInstanceOpts BackgroundTask -> *IOTaskInstance"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",107],["Nothing"],"ConnectionInstance"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ConnectionInstanceOpts",[]],["Uniq",["Type","TCP_DuplexChannel",[]]]],["Uniq",["Type","IOTaskInstance",[]]],[]],"fe_representation":"ConnectionInstance :: ConnectionInstanceOpts *TCP_DuplexChannel -> *IOTaskInstance"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Internal.IWorld",["Just",113],["Nothing"],"nextConnectionId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ListenerInstanceOpts",[]]],["Type","ConnectionId",[]],[]],"fe_representation":".nextConnectionId :: ListenerInstanceOpts -> ConnectionId"},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",113],["Nothing"],"connectionTask"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ListenerInstanceOpts",[]]],["Type","ConnectionTask",[]],[]],"fe_representation":".connectionTask :: ListenerInstanceOpts -> ConnectionTask"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",107],["Nothing"],"ListenerInstance"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ListenerInstanceOpts",[]],["Uniq",["Type","TCP_Listener",[]]]],["Uniq",["Type","IOTaskInstance",[]]],[]],"fe_representation":"ListenerInstance :: ListenerInstanceOpts *TCP_Listener -> *IOTaskInstance"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",113],["Nothing"],"port"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ListenerInstanceOpts",[]]],["Type","Int",[]],[]],"fe_representation":".port :: ListenerInstanceOpts -> Int"},["Tip"],["Tip"]]]]]]]],["Bin",71,["Location","iTasks","iTasks.Internal.IWorld",["Just",185],["Just",178],"iworldLocalTime"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Shared",[["Type","Time",[]]]],[]],"fe_representation":"iworldLocalTime :: Shared Time"},["Bin",21,["Location","iTasks","iTasks.Internal.IWorld",["Just",137],["Nothing"],"bgInstId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BackgroundInstanceOpts",[]]],["Type","BackgroundTaskId",[]],[]],"fe_representation":".bgInstId :: BackgroundInstanceOpts -> BackgroundTaskId"},["Bin",9,["Location","iTasks","iTasks.Internal.IWorld",["Just",121],["Nothing"],"removeOnClose"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionInstanceOpts",[]]],["Type","Bool",[]],[]],"fe_representation":".removeOnClose :: ConnectionInstanceOpts -> Bool"},["Bin",4,["Location","iTasks","iTasks.Internal.IWorld",["Just",121],["Nothing"],"connectionTask"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionInstanceOpts",[]]],["Type","ConnectionTask",[]],[]],"fe_representation":".connectionTask :: ConnectionInstanceOpts -> ConnectionTask"},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",121],["Nothing"],"connectionId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionInstanceOpts",[]]],["Type","ConnectionId",[]],[]],"fe_representation":".connectionId :: ConnectionInstanceOpts -> ConnectionId"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",113],["Nothing"],"taskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ListenerInstanceOpts",[]]],["Type","TaskId",[]],[]],"fe_representation":".taskId :: ListenerInstanceOpts -> TaskId"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",121],["Nothing"],"remoteHost"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionInstanceOpts",[]]],["Type","IPAddress",[]],[]],"fe_representation":".remoteHost :: ConnectionInstanceOpts -> IPAddress"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Internal.IWorld",["Just",131],["Nothing"],"externalProcessTask"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ExternalProcessInstanceOpts",[]]],["Type","ExternalProcessTask",[]],[]],"fe_representation":".externalProcessTask :: ExternalProcessInstanceOpts -> ExternalProcessTask"},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",131],["Nothing"],"connectionId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ExternalProcessInstanceOpts",[]]],["Type","ConnectionId",[]],[]],"fe_representation":".connectionId :: ExternalProcessInstanceOpts -> ConnectionId"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",121],["Nothing"],"taskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionInstanceOpts",[]]],["Type","TaskId",[]],[]],"fe_representation":".taskId :: ConnectionInstanceOpts -> TaskId"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",131],["Nothing"],"taskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ExternalProcessInstanceOpts",[]]],["Type","TaskId",[]],[]],"fe_representation":".taskId :: ExternalProcessInstanceOpts -> TaskId"},["Tip"],["Tip"]]]],["Bin",11,["Location","iTasks","iTasks.Internal.IWorld",["Just",149],["Nothing"],"connectionTaskState"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","IOConnectionState",[]]],["Type","Dynamic",[]],[]],"fe_representation":".connectionTaskState :: IOConnectionState -> Dynamic"},["Bin",4,["Location","iTasks","iTasks.Internal.IWorld",["Just",145],["Nothing"],"IOException"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","IOState",[]],[]],"fe_representation":"IOException :: String -> IOState"},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",145],["Nothing"],"IODestroyed"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Map",[["Type","ConnectionId",[]],["Type","_Tuple2",[["Type","Dynamic",[]],["Type","Bool",[]]]]]]],["Type","IOState",[]],[]],"fe_representation":"IODestroyed :: (Map ConnectionId (Dynamic, Bool)) -> IOState"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",145],["Nothing"],"IOActive"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Map",[["Type","ConnectionId",[]],["Type","_Tuple2",[["Type","Dynamic",[]],["Type","Bool",[]]]]]]],["Type","IOState",[]],[]],"fe_representation":"IOActive :: (Map ConnectionId (Dynamic, Bool)) -> IOState"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",149],["Nothing"],"closed"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","IOConnectionState",[]]],["Type","Bool",[]],[]],"fe_representation":".closed :: IOConnectionState -> Bool"},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.Internal.IWorld",["Just",175],["Just",143],"initJSCompilerState"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"initJSCompilerState :: *IWorld -> *(!MaybeErrorString (),!*IWorld)","fe_documentation":["FunctionDoc",["Just","Initialize the SAPL->JS compiler state"],[],[],["Nothing"]]},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",154],["Nothing"],"Resource"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Uniq",["Type","Resource",[]]],[]],"fe_representation":"Resource :: *Resource"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",169],["Just",58],"createIWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","FilePath",[]],["Type","Maybe",[["Type","FilePath",[]]]],["Type","Maybe",[["Type","FilePath",[]]]],["Type","Maybe",[["Type","FilePath",[]]]],["Uniq",["Type","World",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"createIWorld :: !String FilePath !(Maybe FilePath) !(Maybe FilePath) !(Maybe FilePath) !*World -> *IWorld","fe_documentation":["FunctionDoc",["Just","Creates and initializes the IWorld state"],["The application's name","The application's path (e.g. to executable).","The path where static web assets can be found (optional)","The path where the iTasks data store is located (optional)","Path to where the applications's SAPL files are stored (optional)","The world"],[],["Just","An initialized iworld"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.IWorld",["Just",183],["Just",196],"iworldTimestamp"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Shared",[["Type","Timestamp",[]]]],[]],"fe_representation":"iworldTimestamp :: Shared Timestamp"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",180],["Just",169],"destroyIWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"destroyIWorld :: !*IWorld -> *World","fe_documentation":["FunctionDoc",["Just","Destroys the iworld state"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",184],["Just",172],"iworldLocalDate"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Shared",[["Type","Date",[]]]],[]],"fe_representation":"iworldLocalDate :: Shared Date"},["Tip"],["Tip"]]]]]],["Bin",49,["Location","iTasks","iTasks.Internal.SDS",["Just",58],["Just",306],"notify"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"notify :: !(RWShared () r w) !*IWorld -> (!MaybeError TaskException (),!*IWorld)"},["Bin",15,["Location","iTasks","iTasks.Internal.SDS",["Just",14],["Nothing"],"reqSDSId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSNotifyRequest",[]]],["Type","SDSIdentity",[]],[]],"fe_representation":".reqSDSId :: SDSNotifyRequest -> SDSIdentity"},["Bin",6,["Location","iTasks","iTasks.Internal.RemoteAccess",["Just",7],["Just",85],"httpRequest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","HTTPMethod",[]],["Type","URI",[]],["Type","Maybe",[["Type","String",[]]]],["Type","IWorld",[]]],["Type","_Tuple2",[["Type","HTTPResponse",[]],["Type","IWorld",[]]]],[]],"fe_representation":"httpRequest :: !HTTPMethod !URI !(Maybe String) !IWorld -> (!HTTPResponse,!IWorld)"},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",187],["Just",190],"iworldUTCTime"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Shared",[["Type","Time",[]]]],[]],"fe_representation":"iworldUTCTime :: Shared Time"},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",186],["Just",184],"iworldUTCDate"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Shared",[["Type","Date",[]]]],[]],"fe_representation":"iworldUTCDate :: Shared Date"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.SDS",["Just",14],["Nothing"],"cmpParamText"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSNotifyRequest",[]]],["Type","String",[]],[]],"fe_representation":".cmpParamText :: SDSNotifyRequest -> String"},["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",14],["Nothing"],"cmpParam"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSNotifyRequest",[]]],["Type","Dynamic",[]],[]],"fe_representation":".cmpParam :: SDSNotifyRequest -> Dynamic"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",14],["Nothing"],"cmpSDSId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSNotifyRequest",[]]],["Type","SDSIdentity",[]],[]],"fe_representation":".cmpSDSId :: SDSNotifyRequest -> SDSIdentity"},["Tip"],["Tip"]]]],["Bin",8,["Location","iTasks","iTasks.Internal.SDS",["Just",49],["Just",64],"read"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Var","r"]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"read :: !(RWShared () r w) !*IWorld -> (!MaybeError TaskException r,!*IWorld)"},["Bin",4,["Location","iTasks","iTasks.Internal.SDS",["Just",36],["Just",24],"createReadOnlySDS"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","p"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Var","r"],["Uniq",["Type","IWorld",[]]]]]],[]],[]]],["Type","ROShared",[["Var","p"],["Var","r"]]],[]],"fe_representation":"createReadOnlySDS :: !(p -> *IWorld -> *(!r,!*IWorld)) -> ROShared p r"},["Bin",2,["Location","iTasks","iTasks.Internal.SDS",["Just",14],["Nothing"],"reqTaskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSNotifyRequest",[]]],["Type","TaskId",[]],[]],"fe_representation":".reqTaskId :: SDSNotifyRequest -> TaskId"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",28],["Just",14],"createReadWriteSDS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Func",[["Var","p"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Var","r"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],["Func",[["Var","p"]],["Func",[["Var","w"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","SDSNotifyPred",[["Var","p"]]]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]],[]],"fe_representation":"createReadWriteSDS :: !String !String !(p -> *IWorld -> *(!MaybeError TaskException r,!*IWorld)) !(p -> w -> *IWorld -> *(!MaybeError TaskException (SDSNotifyPred p),!*IWorld)) -> RWShared p r w"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",41],["Just",31],"createReadOnlySDSError"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","p"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Var","r"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]]],["Type","ROShared",[["Var","p"],["Var","r"]]],[]],"fe_representation":"createReadOnlySDSError :: !(p -> *IWorld -> *(!MaybeError TaskException r,!*IWorld)) -> ROShared p r"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.SDS",["Just",53],["Just",126],"write"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","w"],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"write :: !w !(RWShared () r w) !*IWorld -> (!MaybeError TaskException (),!*IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",51],["Just",67],"readRegister"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Var","r"]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"readRegister :: !TaskId !(RWShared () r w) !*IWorld -> (!MaybeError TaskException r,!*IWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",55],["Just",299],"modify"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Type","_Tuple2",[["Var","a"],["Var","w"]]],[]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Var","a"]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"modify :: !(r -> (!a,!w)) !(RWShared () r w) !*IWorld -> (!MaybeError TaskException a,!*IWorld)"},["Tip"],["Tip"]]]]],["Bin",33,["Location","iTasks","iTasks.Internal.Store",["Just",37],["Nothing"],"StoreReadBuildVersionError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","StoreName",[]]],["Type","StoreReadError",[]],[]],"fe_representation":"StoreReadBuildVersionError :: StoreName -> StoreReadError"},["Bin",22,["Location","iTasks","iTasks.Internal.SDSService",["Just",26],["Just",26],"sdsService"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","WebService",[["Type","Map",[["Type","InstanceNo",[]],["Type","Queue",[["Type","UIChange",[]]]]]],["Type","Map",[["Type","InstanceNo",[]],["Type","Queue",[["Type","UIChange",[]]]]]]]],[]],"fe_representation":"sdsService :: WebService (Map InstanceNo (Queue UIChange)) (Map InstanceNo (Queue UIChange))"},["Bin",7,["Location","iTasks","iTasks.Internal.SDS",["Just",72],["Just",326],"toJSONShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","JSONShared",[]],[[["Class","iTask"],["Var","p"]],[["Generic","JSONDecode",["KindConst"]],["Var","p"]],[["Generic","JSONEncode",["KindConst"]],["Var","r"]],[["Generic","JSONDecode",["KindConst"]],["Var","w"]]]],"fe_representation":"toJSONShared :: (RWShared p r w) -> JSONShared | JSONDecode{|*|} p & JSONEncode{|*|} r & JSONDecode{|*|} w & iTask p"},["Bin",3,["Location","iTasks","iTasks.Internal.SDS",["Just",66],["Just",315],"listAllSDSRegistrations"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","_List",[["Type","_Tuple2",[["Type","InstanceNo",[]],["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","SDSIdentity",[]]]]]]]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"listAllSDSRegistrations :: *IWorld -> (![(InstanceNo,[(TaskId,SDSIdentity)])],!*IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",63],["Just",309],"clearInstanceSDSRegistrations"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","InstanceNo",[]]]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"clearInstanceSDSRegistrations :: ![InstanceNo] !*IWorld -> *IWorld"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",67],["Just",321],"formatSDSRegistrationsList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","InstanceNo",[]],["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","SDSIdentity",[]]]]]]]]]]],["Type","String",[]],[]],"fe_representation":"formatSDSRegistrationsList :: [(InstanceNo,[(TaskId,SDSIdentity)])] -> String"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.SDS",["Just",74],["Just",350],"newURL"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","String",[]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"newURL :: !*IWorld -> (!String,!*IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",73],["Just",336],"fromJSONShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSONShared",[]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]],[[["Generic","JSONEncode",["KindConst"]],["Var","p"]],[["Generic","JSONDecode",["KindConst"]],["Var","r"]],[["Generic","JSONEncode",["KindConst"]],["Var","w"]]]],"fe_representation":"fromJSONShared :: JSONShared -> RWShared p r w | JSONEncode{|*|} p & JSONDecode{|*|} r & JSONEncode{|*|} w"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",75],["Just",356],"getURLbyId"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","String",[]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"getURLbyId :: !String !*IWorld -> (!String,!*IWorld)"},["Tip"],["Tip"]]]],["Bin",14,["Location","iTasks","iTasks.Internal.Serialization",["Just",10],["Just",20],"deserializeDynamic"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","String",[]]]],["Type","Dynamic",[]],[]],"fe_representation":"deserializeDynamic :: !*String -> Dynamic"},["Bin",6,["Location","iTasks","iTasks.Internal.SDSService",["Just",31],["Just",144],"openRemoteSDS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Type","Maybe",[["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]]]],["Type","Task",[["Var","a"]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","TC"],["Var","p"]],[["Class","TC"],["Var","r"]],[["Class","TC"],["Var","w"]],[["Generic","JSONEncode",["KindConst"]],["Var","p"]],[["Generic","JSONDecode",["KindConst"]],["Var","r"]],[["Generic","JSONEncode",["KindConst"]],["Var","w"]]]],"fe_representation":"openRemoteSDS :: !String !((Maybe (RWShared p r w)) -> Task a) -> Task a | iTask a & JSONEncode{|*|} p & JSONDecode{|*|} r & JSONEncode{|*|} w & TC p & TC r & TC w"},["Bin",2,["Location","iTasks","iTasks.Internal.SDSService",["Just",29],["Just",114],"writeRemoteSDS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSONNode",[]],["Type","JSONNode",[]],["Type","String",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"writeRemoteSDS :: !JSONNode !JSONNode !String !*IWorld -> *(!MaybeErrorString (),!*IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.SDSService",["Just",28],["Just",88],"readRemoteSDS"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSONNode",[]],["Type","String",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","JSONNode",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"readRemoteSDS :: !JSONNode !String !*IWorld -> *(!MaybeErrorString JSONNode,!*IWorld)"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.Serialization",["Just",8],["Just",14],"deserialize"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","String",[]]]],["Type","MaybeErrorString",[["Var","a"]]],[]],"fe_representation":"deserialize :: !*String -> MaybeErrorString a"},["Bin",1,["Location","iTasks","iTasks.Internal.Serialization",["Just",7],["Just",11],"serialize"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Uniq",["Type","String",[]]],[]],"fe_representation":"serialize :: !a -> *String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Serialization",["Just",9],["Just",17],"serializeDynamic"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Dynamic",[]]],["Uniq",["Type","String",[]]],[]],"fe_representation":"serializeDynamic :: !Dynamic -> *String"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.Store",["Just",32],["Nothing"],"NS_TASK_INSTANCES"],{"fe_kind":["Macro"],"fe_representation":"NS_TASK_INSTANCES :== \"task-instances\""},["Bin",3,["Location","iTasks","iTasks.Internal.Serialization",["Just",18],["Just",41],"dynamicJSONEncode"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","JSONNode",[]],[]],"fe_representation":"dynamicJSONEncode :: !a -> JSONNode"},["Bin",1,["Location","iTasks","iTasks.Internal.Serialization",["Just",16],["Just",33],"functionFree"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSONNode",[]]],["Type","Bool",[]],[]],"fe_representation":"functionFree :: !JSONNode -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Serialization",["Just",19],["Just",44],"dynamicJSONDecode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSONNode",[]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"dynamicJSONDecode :: !JSONNode -> Maybe a"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Store",["Just",34],["Nothing"],"NS_APPLICATION_SHARES"],{"fe_kind":["Macro"],"fe_representation":"NS_APPLICATION_SHARES :== \"application-data\""},["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",33],["Nothing"],"NS_DOCUMENT_CONTENT"],{"fe_kind":["Macro"],"fe_representation":"NS_DOCUMENT_CONTENT :== \"document-data\""},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",35],["Nothing"],"NS_JAVASCRIPT_CACHE"],{"fe_kind":["Macro"],"fe_representation":"NS_JAVASCRIPT_CACHE :== \"js-cache\""},["Tip"],["Tip"]]]]]],["Bin",10,["Location","iTasks","iTasks.Internal.Store",["Just",87],["Just",123],"cachedJSONFileStore"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Maybe",[["Var","a"]]]],["Type","RWShared",[["Type","StoreName",[]],["Var","a"],["Var","a"]]],[[["Class","TC"],["Var","a"]],[["Generic","JSONEncode",["KindConst"]],["Var","a"]],[["Generic","JSONDecode",["KindConst"]],["Var","a"]]]],"fe_representation":"cachedJSONFileStore :: !StoreNamespace !Bool !Bool !Bool !(Maybe a) -> RWShared StoreName a a | JSONEncode{|*|} a & JSONDecode{|*|} a & TC a","fe_documentation":["FunctionDoc",["Just","Optimized caching version of the jsonFileStore.\nDuring the evaluation of a task instance, the shares that are read from disk are kept in memory,\nwrites are applied to the in-memory version, and json encoding and writing to disk is deferred."],["The namespace in the store","Check the build versions to protect against deserializing outdated functions stored by older versions","Automatically reset the the store if an error occurs","Keep the value in the cache between evaluations","Optionally a default content to be used on first read. If nothing is given an error will occur when reading before writing."],[],["Nothing"]]},["Bin",6,["Location","iTasks","iTasks.Internal.Store",["Just",37],["Nothing"],"StoreReadTypeError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","StoreName",[]]],["Type","StoreReadError",[]],[]],"fe_representation":"StoreReadTypeError :: StoreName -> StoreReadError"},["Bin",2,["Location","iTasks","iTasks.Internal.Store",["Just",37],["Nothing"],"StoreReadMissingError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","StoreName",[]]],["Type","StoreReadError",[]],[]],"fe_representation":"StoreReadMissingError :: StoreName -> StoreReadError"},["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",37],["Nothing"],"StoreReadDataError"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","StoreName",[]]],["Type","StoreReadError",[]],[]],"fe_representation":"StoreReadDataError :: StoreName -> StoreReadError"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.Store",["Just",62],["Just",57],"fullFileStore"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","Bool",[]],["Type","Maybe",[["Type","_#Array",[["Type","Char",[]]]]]]],["Type","RWShared",[["Type","StoreName",[]],["Type","_Tuple2",[["Type","BuildID",[]],["Type","_#Array",[["Type","Char",[]]]]]],["Type","_#Array",[["Type","Char",[]]]]]],[]],"fe_representation":"fullFileStore :: !StoreNamespace !Bool !(Maybe {#Char}) -> RWShared StoreName (!BuildID,!{#Char}) {#Char}","fe_documentation":["FunctionDoc",["Just","Creates a 'raw' store which keeps values in multiple files indexed by a store name\nThe application's build ID is automatically stored with the content, and returned when reading"],["The namespace in the store","Automatically reset the the store if an error occurs","Optionally a default content to be used on first read. If nothing is given an error will occur when reading before writing."],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",52],["Just",41],"memoryStore"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","Maybe",[["Var","a"]]]],["Type","RWShared",[["Type","StoreName",[]],["Var","a"],["Var","a"]]],[[["Class","TC"],["Var","a"]]]],"fe_representation":"memoryStore :: !StoreNamespace !(Maybe a) -> RWShared StoreName a a | TC a","fe_documentation":["FunctionDoc",["Just","Creates a store in memory. Values in this store are lost when the server shuts down."],["The namespace in the store","Optionally a default content to be used on first read. If nothing is given an error will occur when reading before writing."],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",74],["Just",103],"jsonFileStore"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Maybe",[["Var","a"]]]],["Type","RWShared",[["Type","StoreName",[]],["Var","a"],["Var","a"]]],[[["Class","TC"],["Var","a"]],[["Generic","JSONEncode",["KindConst"]],["Var","a"]],[["Generic","JSONDecode",["KindConst"]],["Var","a"]]]],"fe_representation":"jsonFileStore :: !StoreNamespace !Bool !Bool !(Maybe a) -> RWShared StoreName a a | JSONEncode{|*|} a & JSONDecode{|*|} a & TC a","fe_documentation":["FunctionDoc",["Just","Extends a fullFileStore with JSON encoding\/decoding such that arbitrary values can be stored.\nIt also adds optional buildID checking to make sure that JSONEncoded functions and dynamics are\nnot decoded if the versions don't match."],["The namespace in the store","Check the build versions to protect against deserializing outdated functions stored by older versions","Automatically reset the the store if an error occurs","Optionally a default content to be used on first read. If nothing is given an error will occur when reading before writing."],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Internal.Store",["Just",108],["Just",198],"flushShareCache"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"flushShareCache :: *IWorld -> *IWorld","fe_documentation":["FunctionDoc",["Just","This function is called at the very end of the evaluation of a task instance.\nIt writes all pending writes to disk and clears values that are no longer needed from memory."],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",102],["Just",131],"cachedDynamicStringFileStore"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Maybe",[["Var","a"]]]],["Type","RWShared",[["Type","StoreName",[]],["Var","a"],["Var","a"]]],[[["Class","TC"],["Var","a"]]]],"fe_representation":"cachedDynamicStringFileStore :: !StoreNamespace !Bool !Bool !Bool !(Maybe a) -> RWShared StoreName a a | TC a","fe_documentation":["FunctionDoc",["Just","Extends a fullFileStore with dynamic string encoding such that arbitrary values can be stored.\nThis encoding can be significantly more efficient for storing large functions.\nAdditionally, caching is applied as for cachedJSONFileStore.\nDuring the evaluation of a task instance, the shares that are read from disk are kept in memory,\nwrites are applied to the in-memory version, and encoding and writing to disk is deferred."],["The namespace in the store","Check the build versions to protect against deserializing outdated functions stored by older versions","Automatically reset the the store if an error occurs","Keep the value in the cache between evaluations","Optionally a default content to be used on first read. If nothing is given an error will occur when reading before writing."],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",113],["Just",217],"blobStoreWrite"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","StoreName",[]],["Type","_#Array",[["Type","Char",[]]]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"blobStoreWrite :: !StoreNamespace !StoreName !{#Char} !*IWorld -> *IWorld","fe_documentation":["FunctionDoc",["Just","Store a binary blob"],[],[],["Nothing"]]},["Tip"],["Tip"]]]]]]]],["Bin",88,["Location","iTasks","iTasks.Internal.TaskState",["Just",38],["Nothing"],"nextTaskTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIReduct",[]]],["Type","TaskTime",[]],[]],"fe_representation":".nextTaskTime :: TIReduct -> TaskTime"},["Bin",57,["Location","iTasks","iTasks.Internal.TaskServer",["Just",17],["Just",32],"serve"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TaskWrapper",[]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","ConnectionTask",[]]]]]],["Type","_List",[["Type","BackgroundTask",[]]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Type","Timeout",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"serve :: ![TaskWrapper] ![(!Int,!ConnectionTask)] ![BackgroundTask] (*IWorld -> (!Maybe Timeout,!*IWorld)) *IWorld -> *IWorld"},["Bin",42,["Location","iTasks","iTasks.Internal.TaskEval",["Just",25],["Nothing"],"callTrace"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicOpts",[]]],["Type","CircularStack",[["Type","TaskId",[]]]],[]],"fe_representation":".callTrace :: TonicOpts -> CircularStack TaskId"},["Bin",21,["Location","iTasks","iTasks.Internal.Task",["Just",39],["Nothing"],"onDisconnect"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionHandlersIWorld",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple3",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],"fe_representation":".onDisconnect :: (ConnectionHandlersIWorld l r w) -> l -> r -> *IWorld -> *(MaybeErrorString l, Maybe w, *IWorld)"},["Bin",10,["Location","iTasks","iTasks.Internal.Store",["Just",137],["Just",361],"listStoreNames"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_List",[["Type","StoreName",[]]]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"listStoreNames :: !StoreNamespace !*IWorld -> (!MaybeErrorString [StoreName],!*IWorld)","fe_documentation":["FunctionDoc",["Just","List the keys for a given namespace"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.Internal.Store",["Just",128],["Just",308],"deleteValues"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","StorePrefix",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"deleteValues :: !StoreNamespace !StorePrefix !*IWorld -> *(MaybeErrorString (),*IWorld)","fe_documentation":["FunctionDoc",["Just","Deletes all values that start with the prefix from the store"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",123],["Just",300],"deleteValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","StoreName",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"deleteValue :: !StoreNamespace !StoreName !*IWorld -> *(MaybeErrorString (),*IWorld)","fe_documentation":["FunctionDoc",["Just","Deletes the value with given key from the store"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",133],["Just",354],"listStoreNamespaces"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","_List",[["Type","StoreNamespace",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"listStoreNamespaces :: !*IWorld -> (![StoreNamespace],!*IWorld)","fe_documentation":["FunctionDoc",["Just","List the namespaces in the store"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.Internal.Store",["Just",147],["Just",265],"readFromDisk"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","StoreName",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","StoreReadError",[]],["Type","_Tuple2",[["Type","BuildID",[]],["Type","String",[]]]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"readFromDisk :: !StoreNamespace !StoreName !*IWorld -> (MaybeError StoreReadError (!BuildID,!String),!*IWorld)"},["Bin",2,["Location","iTasks","iTasks.Internal.Store",["Just",145],["Just",233],"writeToDisk"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","StoreNamespace",[]],["Type","StoreName",[]],["Type","String",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"writeToDisk :: !StoreNamespace !StoreName !String !*IWorld -> (MaybeErrorString (),*IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",142],["Just",373],"emptyStore"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"emptyStore :: !*IWorld -> *IWorld","fe_documentation":["FunctionDoc",["Just","Delete all values in the store"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.Task",["Just",39],["Nothing"],"onConnect"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionHandlersIWorld",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Type","String",[]]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],"fe_representation":".onConnect :: (ConnectionHandlersIWorld l r w) -> String -> r -> *IWorld -> *(MaybeErrorString l, Maybe w, [String], Bool, *IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.Task",["Just",27],["Nothing"],"ConnectionTask"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ConnectionHandlersIWorld",[["Type","Dynamic",[]],["Type","Dynamic",[]],["Type","Dynamic",[]]]],["Type","RWShared",[["Type","_Unit",[]],["Type","Dynamic",[]],["Type","Dynamic",[]]]]],["Type","ConnectionTask",[]],[]],"fe_representation":"ConnectionTask :: (ConnectionHandlersIWorld Dynamic Dynamic Dynamic) (RWShared () Dynamic Dynamic) -> ConnectionTask"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Task",["Just",39],["Nothing"],"onData"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionHandlersIWorld",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Type","String",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],[]],"fe_representation":".onData :: (ConnectionHandlersIWorld l r w) -> String -> l -> r -> *IWorld -> *(MaybeErrorString l, Maybe w, [String], Bool, *IWorld)"},["Tip"],["Tip"]]]]],["Bin",10,["Location","iTasks","iTasks.Internal.Task",["Just",62],["Nothing"],"BackgroundTask"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]]],["Type","BackgroundTask",[]],[]],"fe_representation":"BackgroundTask :: (*IWorld -> *(MaybeError TaskException (), *IWorld)) -> BackgroundTask"},["Bin",3,["Location","iTasks","iTasks.Internal.Task",["Just",39],["Nothing"],"onTick"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionHandlersIWorld",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],"fe_representation":".onTick :: (ConnectionHandlersIWorld l r w) -> l -> r -> *IWorld -> *(MaybeErrorString l, Maybe w, [String], Bool, *IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.Task",["Just",39],["Nothing"],"onShareChange"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionHandlersIWorld",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],"fe_representation":".onShareChange :: (ConnectionHandlersIWorld l r w) -> l -> r -> *IWorld -> *(MaybeErrorString l, Maybe w, [String], Bool, *IWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Task",["Just",48],["Nothing"],"ExternalProcessTask"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ExternalProcessHandlers",[["Type","Dynamic",[]],["Type","Dynamic",[]],["Type","Dynamic",[]]]],["Type","RWShared",[["Type","_Unit",[]],["Type","Dynamic",[]],["Type","Dynamic",[]]]]],["Type","ExternalProcessTask",[]],[]],"fe_representation":"ExternalProcessTask :: (ExternalProcessHandlers Dynamic Dynamic Dynamic) (RWShared () Dynamic Dynamic) -> ExternalProcessTask"},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.Internal.Task",["Just",73],["Just",98],"wrapExternalProcTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ExternalProcessHandlers",[["Var","l"],["Var","r"],["Var","w"]]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]]],["Type","ExternalProcessTask",[]],[[["Class","TC"],["Var","l"]],[["Class","TC"],["Var","r"]],[["Class","TC"],["Var","w"]],[["Class","iTask"],["Var","l"]]]],"fe_representation":"wrapExternalProcTask :: !(ExternalProcessHandlers l r w) !(RWShared () r w) -> ExternalProcessTask | TC l & TC r & TC w & iTask l","fe_documentation":["FunctionDoc",["Just","Wraps a set of handlers and a shared source as an external process task"],[],[],["Nothing"]]},["Bin",2,["Location","iTasks","iTasks.Internal.Task",["Just",68],["Just",74],"wrapIWorldConnectionTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ConnectionHandlersIWorld",[["Var","l"],["Var","r"],["Var","w"]]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]]],["Type","ConnectionTask",[]],[[["Class","TC"],["Var","l"]],[["Class","TC"],["Var","r"]],[["Class","TC"],["Var","w"]]]],"fe_representation":"wrapIWorldConnectionTask :: (ConnectionHandlersIWorld l r w) (RWShared () r w) -> ConnectionTask | TC l & TC r & TC w"},["Bin",1,["Location","iTasks","iTasks.Internal.Task",["Just",67],["Just",50],"wrapConnectionTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ConnectionHandlers",[["Var","l"],["Var","r"],["Var","w"]]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]]],["Type","ConnectionTask",[]],[[["Class","TC"],["Var","l"]],[["Class","TC"],["Var","r"]],[["Class","TC"],["Var","w"]]]],"fe_representation":"wrapConnectionTask :: (ConnectionHandlers l r w) (RWShared () r w) -> ConnectionTask | TC l & TC r & TC w","fe_documentation":["FunctionDoc",["Just","Wraps a set of connection handlers and a shared source as a connection task"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskEval",["Just",20],["Nothing"],"noUI"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalOpts",[]]],["Type","Bool",[]],[]],"fe_representation":".noUI :: TaskEvalOpts -> Bool"},["Bin",1,["Location","iTasks","iTasks.Internal.Task",["Just",78],["Just",123],"mkInstantTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","TaskId",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","_Tuple2",[["Type","Dynamic",[]],["Type","String",[]]]],["Var","a"]]],["Uniq",["Type","IWorld",[]]]]],[]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"mkInstantTask :: (TaskId -> *IWorld -> (!MaybeError (Dynamic,String) a,!*IWorld)) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Create a task that finishes instantly"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",20],["Nothing"],"tonicOpts"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalOpts",[]]],["Type","TonicOpts",[]],[]],"fe_representation":".tonicOpts :: TaskEvalOpts -> TonicOpts"},["Tip"],["Tip"]]]]]],["Bin",20,["Location","iTasks","iTasks.Internal.TaskEval",["Just",40],["Nothing"],"removedTasks"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalInfo",[]]],["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","TaskId",[]]]]]],[]],"fe_representation":".removedTasks :: TaskEvalInfo -> [(TaskId, TaskId)]"},["Bin",11,["Location","iTasks","iTasks.Internal.TaskEval",["Just",25],["Nothing"],"currBlueprintTaskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicOpts",[]]],["Type","TaskId",[]],[]],"fe_representation":".currBlueprintTaskId :: TonicOpts -> TaskId"},["Bin",4,["Location","iTasks","iTasks.Internal.TaskEval",["Just",25],["Nothing"],"currBlueprintFuncName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicOpts",[]]],["Type","String",[]],[]],"fe_representation":".currBlueprintFuncName :: TonicOpts -> String"},["Bin",2,["Location","iTasks","iTasks.Internal.TaskEval",["Just",25],["Nothing"],"currBlueprintExprId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicOpts",[]]],["Type","ExprId",[]],[]],"fe_representation":".currBlueprintExprId :: TonicOpts -> ExprId"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",25],["Nothing"],"captureParallel"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicOpts",[]]],["Type","Bool",[]],[]],"fe_representation":".captureParallel :: TonicOpts -> Bool"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",25],["Nothing"],"currBlueprintModuleName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicOpts",[]]],["Type","String",[]],[]],"fe_representation":".currBlueprintModuleName :: TonicOpts -> String"},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.Internal.TaskEval",["Just",37],["Just",33],"defaultTonicOpts"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TonicOpts",[]],[]],"fe_representation":"defaultTonicOpts :: TonicOpts"},["Bin",3,["Location","iTasks","iTasks.Internal.TaskEval",["Just",25],["Nothing"],"inParallel"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicOpts",[]]],["Type","Maybe",[["Type","TaskId",[]]]],[]],"fe_representation":".inParallel :: TonicOpts -> Maybe TaskId"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",25],["Nothing"],"inAssignNode"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicOpts",[]]],["Type","Maybe",[["Type","ExprId",[]]]],[]],"fe_representation":".inAssignNode :: TonicOpts -> Maybe ExprId"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",36],["Just",26],"mkEvalOpts"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","TaskEvalOpts",[]],[]],"fe_representation":"mkEvalOpts :: TaskEvalOpts"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.TaskEval",["Just",40],["Nothing"],"lastEvent"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalInfo",[]]],["Type","TaskTime",[]],[]],"fe_representation":".lastEvent :: TaskEvalInfo -> TaskTime"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",40],["Nothing"],"refreshSensitive"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskEvalInfo",[]]],["Type","Bool",[]],[]],"fe_representation":".refreshSensitive :: TaskEvalInfo -> Bool"},["Tip"],["Tip"]]]]],["Bin",8,["Location","iTasks","iTasks.Internal.TaskEval",["Just",77],["Just",187],"updateInstanceConnect"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","InstanceNo",[]]]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"updateInstanceConnect :: !String ![InstanceNo] !*IWorld -> *(!MaybeError TaskException (),!*IWorld)"},["Bin",5,["Location","iTasks","iTasks.Internal.TaskEval",["Just",73],["Just",72],"evalTaskInstance"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","InstanceNo",[]],["Type","Event",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","TaskValue",[["Type","JSONNode",[]]]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"evalTaskInstance :: !InstanceNo !Event !*IWorld -> (!MaybeErrorString (TaskValue JSONNode),!*IWorld)","fe_documentation":["FunctionDoc",["Just","Evaluate a task instance"],["The instance id","The event to process","The IWorld state"],[],["Just","The result of the targeted main task or an error"]]},["Bin",3,["Location","iTasks","iTasks.Internal.TaskEval",["Just",56],["Just",53],"getNextTaskId"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","TaskId",[]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"getNextTaskId :: *IWorld -> (!TaskId,!*IWorld)","fe_documentation":["FunctionDoc",["Just","Get the next TaskId"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",51],["Just",45],"extendCallTrace"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskEvalOpts",[]]],["Type","TaskEvalOpts",[]],[]],"fe_representation":"extendCallTrace :: !TaskId !TaskEvalOpts -> TaskEvalOpts","fe_documentation":["FunctionDoc",["Just","Extend the call trace with the current task number"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",61],["Just",57],"processEvents"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"processEvents :: !Int *IWorld -> *(!MaybeError TaskException (),!*IWorld)","fe_documentation":["FunctionDoc",["Just","Dequeues events from the event queue and evaluates the tasks instances"],["Maximum amount of events to process at once"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",76],["Just",180],"updateInstanceLastIO"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","InstanceNo",[]]]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"updateInstanceLastIO :: ![InstanceNo] !*IWorld -> *(!MaybeError TaskException (),!*IWorld)"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.TaskEval",["Just",78],["Just",194],"updateInstanceDisconnect"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","InstanceNo",[]]]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"updateInstanceDisconnect :: ![InstanceNo] !*IWorld -> *(!MaybeError TaskException (),!*IWorld)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",81],["Just",201],"currentInstanceShare"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ReadOnlyShared",[["Type","InstanceNo",[]]]],[]],"fe_representation":"currentInstanceShare :: ReadOnlyShared InstanceNo"},["Tip"],["Tip"]]]]]],["Bin",14,["Location","iTasks","iTasks.Internal.TaskState",["Just",24],["Nothing"],"attributes"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIMeta",[]]],["Type","TaskAttributes",[]],[]],"fe_representation":".attributes :: TIMeta -> TaskAttributes"},["Bin",5,["Location","iTasks","iTasks.Internal.TaskServer",["Just",26],["Just",550],"addExternalProc"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]],["Type","FilePath",[]],["Type","_List",[["Type","String",[]]]],["Type","Maybe",[["Type","FilePath",[]]]],["Type","ExternalProcessTask",[]],["Type","IWorld",[]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"addExternalProc :: !TaskId !FilePath ![String] !(Maybe FilePath) !ExternalProcessTask !IWorld -> (!MaybeError TaskException (),!*IWorld)"},["Bin",2,["Location","iTasks","iTasks.Internal.TaskServer",["Just",20],["Just",516],"addListener"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]],["Type","Int",[]],["Type","Bool",[]],["Type","ConnectionTask",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"addListener :: !TaskId !Int !Bool !ConnectionTask !*IWorld -> (!MaybeError TaskException (),!*IWorld)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.TaskServer",["Just",23],["Just",527],"addConnection"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]],["Type","String",[]],["Type","Int",[]],["Type","ConnectionTask",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"addConnection :: !TaskId !String !Int !ConnectionTask !*IWorld -> (!MaybeError TaskException (),!*IWorld)"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.TaskServer",["Just",29],["Just",603],"addBackgroundTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","BackgroundTask",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","BackgroundTaskId",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"addBackgroundTask :: !BackgroundTask !*IWorld -> (!MaybeError TaskException BackgroundTaskId,!*IWorld)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.TaskServer",["Just",32],["Just",613],"removeBackgroundTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","BackgroundTaskId",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"removeBackgroundTask :: !BackgroundTaskId !*IWorld -> (!MaybeError TaskException (),!*IWorld)"},["Tip"],["Tip"]]]],["Bin",8,["Location","iTasks","iTasks.Internal.TaskState",["Just",24],["Nothing"],"issuedAt"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIMeta",[]]],["Type","Timestamp",[]],[]],"fe_representation":".issuedAt :: TIMeta -> Timestamp"},["Bin",3,["Location","iTasks","iTasks.Internal.TaskState",["Just",24],["Nothing"],"instanceKey"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIMeta",[]]],["Type","InstanceKey",[]],[]],"fe_representation":".instanceKey :: TIMeta -> InstanceKey"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",24],["Nothing"],"build"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIMeta",[]]],["Type","String",[]],[]],"fe_representation":".build :: TIMeta -> String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",24],["Nothing"],"instanceNo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIMeta",[]]],["Type","InstanceNo",[]],[]],"fe_representation":".instanceNo :: TIMeta -> InstanceNo"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Internal.TaskState",["Just",24],["Nothing"],"progress"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIMeta",[]]],["Type","InstanceProgress",[]],[]],"fe_representation":".progress :: TIMeta -> InstanceProgress"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",24],["Nothing"],"listId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIMeta",[]]],["Type","TaskId",[]],[]],"fe_representation":".listId :: TIMeta -> TaskId"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Internal.TaskState",["Just",38],["Nothing"],"nextTaskNo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIReduct",[]]],["Type","TaskNo",[]],[]],"fe_representation":".nextTaskNo :: TIReduct -> TaskNo"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",24],["Nothing"],"session"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIMeta",[]]],["Type","Bool",[]],[]],"fe_representation":".session :: TIMeta -> Bool"},["Tip"],["Tip"]],["Tip"]]]]]],["Bin",30,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCShared"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","TaskTree",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCShared :: TaskId TaskTime TaskTree -> TaskTree"},["Bin",19,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCDestroy"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskTree",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCDestroy :: TaskTree -> TaskTree"},["Bin",11,["Location","iTasks","iTasks.Internal.TaskState",["Just",53],["Nothing"],"UIEnabled"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","UIChange",[]]],["Type","TIUIState",[]],[]],"fe_representation":"UIEnabled :: Int UIChange -> TIUIState"},["Bin",7,["Location","iTasks","iTasks.Internal.TaskState",["Just",38],["Nothing"],"tonicRedOpts"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIReduct",[]]],["Type","TonicOpts",[]],[]],"fe_representation":".tonicRedOpts :: TIReduct -> TonicOpts"},["Bin",2,["Location","iTasks","iTasks.Internal.TaskState",["Just",38],["Nothing"],"tasks"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIReduct",[]]],["Type","Map",[["Type","TaskId",[]],["Type","Dynamic",[]]]],[]],"fe_representation":".tasks :: TIReduct -> Map TaskId Dynamic"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",38],["Nothing"],"task"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIReduct",[]]],["Type","Task",[["Type","JSONNode",[]]]],[]],"fe_representation":".task :: TIReduct -> Task JSONNode"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","iTasks","iTasks.Internal.TaskState",["Just",48],["Nothing"],"TIException"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Dynamic",[]],["Type","String",[]]],["Type","TIValue",[]],[]],"fe_representation":"TIException :: Dynamic String -> TIValue"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",38],["Nothing"],"tree"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TIReduct",[]]],["Type","TaskTree",[]],[]],"fe_representation":".tree :: TIReduct -> TaskTree"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Internal.TaskState",["Just",53],["Nothing"],"UIDisabled"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TIUIState",[]],[]],"fe_representation":"UIDisabled :: TIUIState"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",48],["Nothing"],"TIValue"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskValue",[["Type","JSONNode",[]]]]],["Type","TIValue",[]],[]],"fe_representation":"TIValue :: (TaskValue JSONNode) -> TIValue"},["Tip"],["Tip"]],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCAttach"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","AttachmentStatus",[]],["Type","String",[]],["Type","String",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCAttach :: TaskId TaskTime AttachmentStatus String String -> TaskTree"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",53],["Nothing"],"UIException"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","TIUIState",[]],[]],"fe_representation":"UIException :: String -> TIUIState"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCBasic"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","JSONNode",[]],["Type","Bool",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCBasic :: TaskId TaskTime JSONNode Bool -> TaskTree"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCNop"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TaskTree",[]],[]],"fe_representation":"TCNop :: TaskTree"},["Bin",4,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCInteract"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","JSONNode",[]],["Type","JSONNode",[]],["Type","EditMask",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCInteract :: TaskId TaskTime JSONNode JSONNode EditMask -> TaskTree"},["Bin",2,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCExposedShared"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","String",[]],["Type","TaskTree",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCExposedShared :: TaskId TaskTime String TaskTree -> TaskTree"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCInit"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskTime",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCInit :: TaskId TaskTime -> TaskTree"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCLayout"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","JSONNode",[]],["Type","TaskTree",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCLayout :: JSONNode TaskTree -> TaskTree"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCParallel"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","TaskTree",[]]]]]],["Type","_List",[["Type","String",[]]]]],["Type","TaskTree",[]],[]],"fe_representation":"TCParallel :: TaskId TaskTime [(TaskId, TaskTree)] [String] -> TaskTree"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCProject"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","JSONNode",[]],["Type","TaskTree",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCProject :: TaskId JSONNode TaskTree -> TaskTree"},["Tip"],["Tip"]]]]],["Bin",10,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"change"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParallelTaskState",[]]],["Type","Maybe",[["Type","ParallelTaskChange",[]]]],[]],"fe_representation":".change :: ParallelTaskState -> Maybe ParallelTaskChange"},["Bin",6,["Location","iTasks","iTasks.Internal.TaskState",["Just",75],["Nothing"],"DeferredJSON"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","DeferredJSON",[]],[[["Class","TC"],["Var","a"]],[["Generic","JSONEncode",["KindConst"]],["Var","a"]]]],"fe_representation":"DeferredJSON :: a -> DeferredJSON | TC, JSONEncode{|*|} a"},["Bin",3,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCStep"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","Either",[["Type","_Tuple2",[["Type","TaskTree",[]],["Type","_List",[["Type","String",[]]]]]],["Type","_Tuple3",[["Type","DeferredJSON",[]],["Type","Int",[]],["Type","TaskTree",[]]]]]]],["Type","TaskTree",[]],[]],"fe_representation":"TCStep :: TaskId TaskTime (Either (TaskTree, [String]) (DeferredJSON, Int, TaskTree)) -> TaskTree"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TCStable"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","DeferredJSON",[]]],["Type","TaskTree",[]],[]],"fe_representation":"TCStable :: TaskId TaskTime DeferredJSON -> TaskTree"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",73],["Just",30],"taskIdFromTaskTree"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskTree",[]]],["Type","MaybeError",[["Type","TaskException",[]],["Type","TaskId",[]]]],[]],"fe_representation":"taskIdFromTaskTree :: TaskTree -> MaybeError TaskException TaskId"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.TaskState",["Just",75],["Nothing"],"DeferredJSONNode"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","JSONNode",[]]],["Type","DeferredJSON",[]],[]],"fe_representation":"DeferredJSONNode :: JSONNode -> DeferredJSON"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"attributes"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParallelTaskState",[]]],["Type","TaskAttributes",[]],[]],"fe_representation":".attributes :: ParallelTaskState -> TaskAttributes"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"detached"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParallelTaskState",[]]],["Type","Bool",[]],[]],"fe_representation":".detached :: ParallelTaskState -> Bool"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"createdAt"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParallelTaskState",[]]],["Type","TaskTime",[]],[]],"fe_representation":".createdAt :: ParallelTaskState -> TaskTime"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"index"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParallelTaskState",[]]],["Type","Int",[]],[]],"fe_representation":".index :: ParallelTaskState -> Int"},["Tip"],["Tip"]]]]]]]]],["Bin",1038,["Location","iTasks","iTasks.UI.Editor",["Just",40],["Nothing"],"state"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FieldMask",[]]],["Type","JSONNode",[]],[]],"fe_representation":".state :: FieldMask -> JSONNode"},["Bin",551,["Location","iTasks","iTasks.Internal.Util",["Just",19],["Just",29],"currentUTCDateTimeWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","DateTime",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"currentUTCDateTimeWorld :: !*World -> (!DateTime,!*World)"},["Bin",245,["Location","iTasks","iTasks.Internal.Test.Stubs",["Just",11],["Just",27],"toStubVSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","VSt",[]]],[]],"fe_representation":"toStubVSt :: *IWorld -> *VSt"},["Bin",94,["Location","iTasks","iTasks.Internal.TaskStore",["Just",95],["Just",76],"taskInstanceUIChanges"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceNo",[]],["Type","Queue",[["Type","UIChange",[]]]],["Type","Queue",[["Type","UIChange",[]]]]]],[]],"fe_representation":"taskInstanceUIChanges :: RWShared InstanceNo (Queue UIChange) (Queue UIChange)"},["Bin",35,["Location","iTasks","iTasks.Internal.TaskStore",["Just",53],["Just",264],"taskInstanceConstants"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","ROShared",[["Type","InstanceNo",[]],["Type","InstanceConstants",[]]]],[]],"fe_representation":"taskInstanceConstants :: ROShared InstanceNo InstanceConstants"},["Bin",19,["Location","iTasks","iTasks.Internal.TaskStore",["Just",18],["Nothing"],"includeProgress"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceFilter",[]]],["Type","Bool",[]],[]],"fe_representation":".includeProgress :: InstanceFilter -> Bool"},["Bin",7,["Location","iTasks","iTasks.Internal.TaskState",["Just",94],["Nothing"],"ReplaceParallelTask"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Dynamic",[]]],["Type","ParallelTaskChange",[]],[]],"fe_representation":"ReplaceParallelTask :: Dynamic -> ParallelTaskChange"},["Bin",4,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"value"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParallelTaskState",[]]],["Type","TaskValue",[["Type","JSONNode",[]]]],[]],"fe_representation":".value :: ParallelTaskState -> TaskValue JSONNode"},["Bin",2,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"lastFocus"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParallelTaskState",[]]],["Type","Maybe",[["Type","TaskTime",[]]]],[]],"fe_representation":".lastFocus :: ParallelTaskState -> Maybe TaskTime"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"taskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ParallelTaskState",[]]],["Type","TaskId",[]],[]],"fe_representation":".taskId :: ParallelTaskState -> TaskId"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",94],["Nothing"],"RemoveParallelTask"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ParallelTaskChange",[]],[]],"fe_representation":"RemoveParallelTask :: ParallelTaskChange"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.TaskStore",["Just",18],["Nothing"],"includeConstants"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceFilter",[]]],["Type","Bool",[]],[]],"fe_representation":".includeConstants :: InstanceFilter -> Bool"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",18],["Nothing"],"includeAttributes"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceFilter",[]]],["Type","Bool",[]],[]],"fe_representation":".includeAttributes :: InstanceFilter -> Bool"},["Tip"],["Tip"]],["Tip"]]],["Bin",11,["Location","iTasks","iTasks.Internal.TaskStore",["Just",18],["Nothing"],"onlySession"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceFilter",[]]],["Type","Maybe",[["Type","Bool",[]]]],[]],"fe_representation":".onlySession :: InstanceFilter -> Maybe Bool"},["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",18],["Nothing"],"notInstanceNo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceFilter",[]]],["Type","Maybe",[["Type","_List",[["Type","InstanceNo",[]]]]]],[]],"fe_representation":".notInstanceNo :: InstanceFilter -> Maybe [InstanceNo]"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",18],["Nothing"],"matchAttribute"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceFilter",[]]],["Type","Maybe",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]],[]],"fe_representation":".matchAttribute :: InstanceFilter -> Maybe (String, String)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",18],["Nothing"],"onlyInstanceNo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceFilter",[]]],["Type","Maybe",[["Type","_List",[["Type","InstanceNo",[]]]]]],[]],"fe_representation":".onlyInstanceNo :: InstanceFilter -> Maybe [InstanceNo]"},["Tip"],["Tip"]]],["Bin",7,["Location","iTasks","iTasks.Internal.TaskStore",["Just",43],["Just",42],"nextInstanceNo"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","Int",[]],["Type","Int",[]]]],[]],"fe_representation":"nextInstanceNo :: RWShared () Int Int"},["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",35],["Just",102],"newInstanceKey"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","InstanceKey",[]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"newInstanceKey :: !*IWorld -> (!InstanceKey,!*IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",34],["Just",90],"newInstanceNo"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","InstanceNo",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"newInstanceNo :: !*IWorld -> (!MaybeError TaskException InstanceNo,!*IWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",36],["Just",106],"newDocumentId"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","DocumentId",[]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"newDocumentId :: !*IWorld -> (!DocumentId,!*IWorld)"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",49],["Just",194],"filteredInstanceIndex"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceFilter",[]],["Type","_List",[["Type","InstanceData",[]]]],["Type","_List",[["Type","InstanceData",[]]]]]],[]],"fe_representation":"filteredInstanceIndex :: RWShared InstanceFilter [InstanceData] [InstanceData]"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",46],["Just",38],"taskInstanceIndex"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","_List",[["Type","TIMeta",[]]]],["Type","_List",[["Type","TIMeta",[]]]]]],[]],"fe_representation":"taskInstanceIndex :: RWShared () [TIMeta] [TIMeta]"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",52],["Just",254],"taskInstance"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceNo",[]],["Type","InstanceData",[]],["Type","InstanceData",[]]]],[]],"fe_representation":"taskInstance :: RWShared InstanceNo InstanceData InstanceData"},["Tip"],["Tip"]]]]]],["Bin",15,["Location","iTasks","iTasks.Internal.TaskStore",["Just",69],["Just",66],"taskInstanceValue"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceNo",[]],["Type","TIValue",[]],["Type","TIValue",[]]]],[]],"fe_representation":"taskInstanceValue :: RWShared InstanceNo TIValue TIValue"},["Bin",7,["Location","iTasks","iTasks.Internal.TaskStore",["Just",59],["Just",45],"taskInstanceIO"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceNo",[]],["Type","Maybe",[["Type","_Tuple2",[["Type","String",[]],["Type","Timestamp",[]]]]]],["Type","Maybe",[["Type","_Tuple2",[["Type","String",[]],["Type","Timestamp",[]]]]]]]],[]],"fe_representation":"taskInstanceIO :: RWShared InstanceNo (Maybe (!String,!Timestamp)) (Maybe (!String,!Timestamp))"},["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",55],["Just",285],"taskInstanceAttributes"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceNo",[]],["Type","TaskAttributes",[]],["Type","TaskAttributes",[]]]],[]],"fe_representation":"taskInstanceAttributes :: RWShared InstanceNo TaskAttributes TaskAttributes"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",54],["Just",274],"taskInstanceProgress"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceNo",[]],["Type","InstanceProgress",[]],["Type","InstanceProgress",[]]]],[]],"fe_representation":"taskInstanceProgress :: RWShared InstanceNo InstanceProgress InstanceProgress"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",57],["Just",297],"topLevelTaskList"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","TaskListFilter",[]],["Type","_Tuple2",[["Type","TaskId",[]],["Type","_List",[["Type","TaskListItem",[["Var","a"]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","TaskAttributes",[]]]]]]]],[]],"fe_representation":"topLevelTaskList :: RWShared TaskListFilter (!TaskId,![TaskListItem a]) [(!TaskId,!TaskAttributes)]"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",65],["Just",57],"taskEvents"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","Queue",[["Type","_Tuple2",[["Type","InstanceNo",[]],["Type","Event",[]]]]]],["Type","Queue",[["Type","_Tuple2",[["Type","InstanceNo",[]],["Type","Event",[]]]]]]]],[]],"fe_representation":"taskEvents :: RWShared () (Queue (InstanceNo,Event)) (Queue (InstanceNo,Event))"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",60],["Just",53],"allInstanceIO"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","Map",[["Type","InstanceNo",[]],["Type","_Tuple2",[["Type","String",[]],["Type","Timestamp",[]]]]]],["Type","Map",[["Type","InstanceNo",[]],["Type","_Tuple2",[["Type","String",[]],["Type","Timestamp",[]]]]]]]],[]],"fe_representation":"allInstanceIO :: RWShared () (Map InstanceNo (!String,!Timestamp)) (Map InstanceNo (!String,Timestamp))"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",68],["Just",61],"taskInstanceReduct"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceNo",[]],["Type","TIReduct",[]],["Type","TIReduct",[]]]],[]],"fe_representation":"taskInstanceReduct :: RWShared InstanceNo TIReduct TIReduct"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.TaskStore",["Just",82],["Just",383],"taskInstanceParallelTaskListItem"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Tuple3",[["Type","TaskId",[]],["Type","TaskId",[]],["Type","Bool",[]]]],["Type","ParallelTaskState",[]],["Type","ParallelTaskState",[]]]],[]],"fe_representation":"taskInstanceParallelTaskListItem :: RWShared (TaskId,TaskId,Bool) ParallelTaskState ParallelTaskState"},["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",76],["Just",322],"localShare"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","TaskId",[]],["Var","a"],["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"localShare :: RWShared TaskId a a | iTask a"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",70],["Just",70],"taskInstanceShares"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","InstanceNo",[]],["Type","Map",[["Type","TaskId",[]],["Type","JSONNode",[]]]],["Type","Map",[["Type","TaskId",[]],["Type","JSONNode",[]]]]]],[]],"fe_representation":"taskInstanceShares :: RWShared InstanceNo (Map TaskId JSONNode) (Map TaskId JSONNode)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",79],["Just",337],"taskInstanceParallelTaskList"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","TaskListFilter",[]]]],["Type","_List",[["Type","ParallelTaskState",[]]]],["Type","_List",[["Type","ParallelTaskState",[]]]]]],[]],"fe_representation":"taskInstanceParallelTaskList :: RWShared (TaskId,TaskListFilter) [ParallelTaskState] [ParallelTaskState]"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",87],["Just",405],"parallelTaskList"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Tuple3",[["Type","TaskId",[]],["Type","TaskId",[]],["Type","TaskListFilter",[]]]],["Type","_Tuple2",[["Type","TaskId",[]],["Type","_List",[["Type","TaskListItem",[["Var","a"]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","TaskAttributes",[]]]]]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"parallelTaskList :: RWShared (!TaskId,!TaskId,!TaskListFilter) (!TaskId,![TaskListItem a]) [(!TaskId,!TaskAttributes)] | iTask a"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",84],["Just",395],"taskInstanceEmbeddedTask"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","TaskId",[]],["Type","Task",[["Var","a"]]],["Type","Task",[["Var","a"]]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"taskInstanceEmbeddedTask :: RWShared TaskId (Task a) (Task a) | iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",94],["Just",73],"allUIChanges"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","Map",[["Type","InstanceNo",[]],["Type","Queue",[["Type","UIChange",[]]]]]],["Type","Map",[["Type","InstanceNo",[]],["Type","Queue",[["Type","UIChange",[]]]]]]]],[]],"fe_representation":"allUIChanges :: RWShared () (Map InstanceNo (Queue UIChange)) (Map InstanceNo (Queue UIChange))"},["Tip"],["Tip"]]]]]],["Bin",58,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",20],["Nothing"],"description"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TestSuite",[]]],["Type","String",[]],[]],"fe_representation":".description :: TestSuite -> String"},["Bin",25,["Location","iTasks","iTasks.Internal.TaskStore",["Just",178],["Just",525],"documentLocation"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DocumentId",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","FilePath",[]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"documentLocation :: !DocumentId !*IWorld -> (!FilePath,!*IWorld)"},["Bin",15,["Location","iTasks","iTasks.Internal.TaskStore",["Just",151],["Just",468],"dequeueEvent"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Type","_Tuple2",[["Type","InstanceNo",[]],["Type","Event",[]]]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"dequeueEvent :: !*IWorld -> (!Maybe (InstanceNo,Event),!*IWorld)","fe_documentation":["FunctionDoc",["Just","Dequeue a task event"],[],[],["Nothing"]]},["Bin",7,["Location","iTasks","iTasks.Internal.TaskStore",["Just",130],["Just",166],"replaceTaskInstance"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","InstanceNo",[]],["Type","Task",[["Var","a"]]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"replaceTaskInstance :: !InstanceNo !(Task a) *IWorld -> (!MaybeError TaskException (),!*IWorld) | iTask a","fe_documentation":["FunctionDoc",["Just","Replace a stored task instance in the task store.\nThe execution state is reset, but the meta-data is kept."],["The instance id","The new task to store","The IWorld state"],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",104],["Just",120],"createTaskInstance"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Tuple2",[["Type","InstanceNo",[]],["Type","InstanceKey",[]]]]]],["Uniq",["Type","IWorld",[]]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"createTaskInstance :: !(Task a) !*IWorld -> (!MaybeError TaskException (!InstanceNo,InstanceKey),!*IWorld) | iTask a"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",101],["Just",110],"createClientTaskInstance"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","String",[]],["Type","InstanceNo",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","TaskId",[]]]],["Uniq",["Type","IWorld",[]]]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"createClientTaskInstance :: !(Task a) !String !InstanceNo !*IWorld -> *(!MaybeError TaskException TaskId,!*IWorld) | iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",120],["Just",136],"createDetachedTaskInstance"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","Bool",[]],["Type","TaskEvalOpts",[]],["Type","InstanceNo",[]],["Type","TaskAttributes",[]],["Type","TaskId",[]],["Type","Bool",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","TaskId",[]]]],["Uniq",["Type","IWorld",[]]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"createDetachedTaskInstance :: !(Task a) !Bool !TaskEvalOpts !InstanceNo !TaskAttributes !TaskId !Bool !*IWorld -> (!MaybeError TaskException TaskId,!*IWorld) | iTask a","fe_documentation":["FunctionDoc",["Just","Create a stored task instance in the task store (lazily without evaluating it)"],["The task to store","Whether it is a top-level task","The task evaluation options","The instance number for the task","Management meta data","The parallel task list to which the task belongs","If the instance needs to be evaluated immediately, the attachment is temporarily set to the issuer","The IWorld state"],[],["Just","The task id of the stored instance"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",141],["Just",447],"queueEvent"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","InstanceNo",[]],["Type","Event",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"queueEvent :: !InstanceNo !Event !*IWorld -> *IWorld","fe_documentation":["FunctionDoc",["Just","Queue an event for a task instance\nevents are applied in FIFO order when the task instance is evaluated\nBy splitting up event queuing and instance evaluation, events can come in asynchronously without\nthe need to directly processing them."],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",132],["Just",176],"deleteTaskInstance"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","InstanceNo",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"deleteTaskInstance :: !InstanceNo !*IWorld -> *(!MaybeError TaskException (),!*IWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",146],["Just",461],"queueRefresh"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","InstanceNo",[]],["Type","String",[]]]]]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"queueRefresh :: ![(InstanceNo,String)] !*IWorld -> *IWorld"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.TaskStore",["Just",171],["Just",500],"detachViewport"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","InstanceNo",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"detachViewport :: !InstanceNo !*IWorld -> *IWorld","fe_documentation":["FunctionDoc",["Just","When a new viewport is detached from an instance, all events and output are removed"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",160],["Just",486],"queueUIChanges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","InstanceNo",[]],["Type","_List",[["Type","UIChange",[]]]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"queueUIChanges :: !InstanceNo ![UIChange] !*IWorld -> *IWorld","fe_documentation":["FunctionDoc",["Just","Convenience function that queues multiple changes at once"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",156],["Just",481],"queueUIChange"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","InstanceNo",[]],["Type","UIChange",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"queueUIChange :: !InstanceNo !UIChange !*IWorld -> *IWorld","fe_documentation":["FunctionDoc",["Just","Queue task output"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",166],["Just",494],"attachViewport"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","InstanceNo",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"attachViewport :: !InstanceNo !*IWorld -> *IWorld","fe_documentation":["FunctionDoc",["Just","When a new viewport is attached to an instance, all events and output are removed\nand a single Reset event is queued"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",176],["Just",513],"loadDocumentContent"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DocumentId",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Type","String",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"loadDocumentContent :: !DocumentId !*IWorld -> (!Maybe String,!*IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",175],["Just",505],"createDocument"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","String",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Type","FileError",[]],["Type","Document",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"createDocument :: !String !String !String !*IWorld -> (!MaybeError FileError Document,!*IWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",177],["Just",519],"loadDocumentMeta"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DocumentId",[]],["Uniq",["Type","IWorld",[]]]],["Type","_Tuple2",[["Type","Maybe",[["Type","Document",[]]]],["Uniq",["Type","IWorld",[]]]]],[]],"fe_representation":"loadDocumentMeta :: !DocumentId !*IWorld -> (!Maybe Document,!*IWorld)"},["Tip"],["Tip"]]]]],["Bin",9,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",5],["Nothing"],"taskUnderTest"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InteractiveTest",[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":".taskUnderTest :: InteractiveTest -> Task ()"},["Bin",4,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",5],["Nothing"],"expectation"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InteractiveTest",[]]],["Type","String",[]],[]],"fe_representation":".expectation :: InteractiveTest -> String"},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",182],["Just",530],"exposedShare"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","w"]],[["Class","TC"],["Var","r"]],[["Class","TC"],["Var","w"]],[["Class","TC"],["Var","p"]],[["Generic","JSONEncode",["KindConst"]],["Var","p"]]]],"fe_representation":"exposedShare :: !String -> RWShared p r w | iTask r & iTask w & TC r & TC w & TC p & JSONEncode{|*|} p"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",5],["Nothing"],"instructions"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InteractiveTest",[]]],["Type","String",[]],[]],"fe_representation":".instructions :: InteractiveTest -> String"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",5],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InteractiveTest",[]]],["Type","String",[]],[]],"fe_representation":".name :: InteractiveTest -> String"},["Tip"],["Tip"]]]],["Bin",4,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",15],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UnitTest",[]]],["Type","String",[]],[]],"fe_representation":".name :: UnitTest -> String"},["Bin",2,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",12],["Nothing"],"InteractiveTest"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","InteractiveTest",[]]],["Type","Test",[]],[]],"fe_representation":"InteractiveTest :: InteractiveTest -> Test"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",12],["Nothing"],"UnitTest"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UnitTest",[]]],["Type","Test",[]],[]],"fe_representation":"UnitTest :: UnitTest -> Test"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",15],["Nothing"],"test"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UnitTest",[]]],["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Type","TestResult",[]],["Uniq",["Type","World",[]]]]]],[]],[]],"fe_representation":".test :: UnitTest -> *World -> *(TestResult, *World)"},["Tip"],["Tip"]]]]],["Bin",32,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",78],["Just",79],"fail"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Test",[]],[]],"fe_representation":"fail :: String -> Test"},["Bin",16,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",31],["Nothing"],"suiteName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SuiteResult",[]]],["Type","String",[]],[]],"fe_representation":".suiteName :: SuiteResult -> String"},["Bin",5,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",20],["Nothing"],"tests"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TestSuite",[]]],["Type","_List",[["Type","Test",[]]]],[]],"fe_representation":".tests :: TestSuite -> [Test]"},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",20],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TestSuite",[]]],["Type","String",[]],[]],"fe_representation":".name :: TestSuite -> String"},["Tip"],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",26],["Nothing"],"Passed"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TestResult",[]],[]],"fe_representation":"Passed :: TestResult"},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",26],["Nothing"],"Failed"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Maybe",[["Type","String",[]]]]],["Type","TestResult",[]],[]],"fe_representation":"Failed :: (Maybe String) -> TestResult"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",26],["Nothing"],"Skipped"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TestResult",[]],[]],"fe_representation":"Skipped :: TestResult"},["Tip"],["Tip"]]]],["Bin",10,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",71],["Just",63],"assertEqualWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Var","a"],["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]]],["Type","Test",[]],[[["Generic","gEq",["KindConst"]],["Var","a"]],[["Generic","gPrettyTrace",["KindConst"]],["Var","a"]]]],"fe_representation":"assertEqualWorld :: String a (*World -> *(a,*World)) -> Test | gEq{|*|} a & gPrettyTrace{|*|} a"},["Bin",6,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",63],["Just",43],"utest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Type","TestResult",[]],["Uniq",["Type","World",[]]]]]],[]]],["Type","Test",[]],[]],"fe_representation":"utest :: String (*World -> *(TestResult,*World)) -> Test","fe_documentation":["FunctionDoc",["Just","Convenient wrapper for defining unit tests"],["The name of the test","The task to test"],[],["Nothing"]]},["Bin",2,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",31],["Nothing"],"testResults"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SuiteResult",[]]],["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","TestResult",[]]]]]],[]],"fe_representation":".testResults :: SuiteResult -> [(String, TestResult)]"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",55],["Just",39],"itest"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","String",[]],["Type","Task",[["Var","a"]]]],["Type","Test",[]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"itest :: String String String (Task a) -> Test | iTask a","fe_documentation":["FunctionDoc",["Just","Convenient wrapper for defining interactive tests"],["The name of the test","Instructions on how to execute the test","A description of the expected results","The task to test"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",67],["Just",51],"assertEqual"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Var","a"],["Var","a"]],["Type","Test",[]],[[["Generic","gEq",["KindConst"]],["Var","a"]],[["Generic","gPrettyTrace",["KindConst"]],["Var","a"]]]],"fe_representation":"assertEqual :: String a a -> Test | gEq{|*|} a & gPrettyTrace{|*|} a"},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",65],["Just",46],"assert"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Var","a"]],["Type","Bool",[]],[]],["Var","a"]],["Type","Test",[]],[[["Generic","gPrettyTrace",["KindConst"]],["Var","a"]]]],"fe_representation":"assert :: String (a -> Bool) a -> Test | gPrettyTrace{|*|} a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",69],["Just",56],"assertWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Var","a"]],["Type","Bool",[]],[]],["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]]],["Type","Test",[]],[[["Generic","gPrettyTrace",["KindConst"]],["Var","a"]]]],"fe_representation":"assertWorld :: String (a -> Bool) (*World -> *(a,*World)) -> Test | gPrettyTrace{|*|} a"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",74],["Just",73],"checkEqualWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Var","a"],["Var","a"]],["Type","TestResult",[]],[[["Generic","gPrettyTrace",["KindConst"]],["Var","a"]]]],"fe_representation":"checkEqualWith :: (a -> a -> Bool) a a -> TestResult | gPrettyTrace{|*|} a"},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",73],["Just",70],"checkEqual"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","TestResult",[]],[[["Generic","gEq",["KindConst"]],["Var","a"]],[["Generic","gPrettyTrace",["KindConst"]],["Var","a"]]]],"fe_representation":"checkEqual :: a a -> TestResult | gEq{|*|} a & gPrettyTrace{|*|} a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",76],["Just",76],"pass"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Test",[]],[]],"fe_representation":"pass :: String -> Test"},["Tip"],["Tip"]]]]],["Bin",15,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",117],["Just",129],"testTaskOutput"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Task",[["Var","a"]]],["Type","_List",[["Type","Either",[["Type","Event",[]],["Type","Int",[]]]]]],["Type","_List",[["Type","UIChange",[]]]],["Func",[["Type","_List",[["Type","UIChange",[]]]]],["Func",[["Type","_List",[["Type","UIChange",[]]]]],["Type","TestResult",[]],[]],[]]],["Type","Test",[]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"testTaskOutput :: String (Task a) [Either Event Int] [UIChange] ([UIChange] -> [UIChange] -> TestResult) -> Test | iTask a"},["Bin",7,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",96],["Just",95],"filterTestsByName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","Test",[]]]]],["Type","_List",[["Type","Test",[]]]],[]],"fe_representation":"filterTestsByName :: String [Test] -> [Test]"},["Bin",3,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",89],["Just",88],"testsuite"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","_List",[["Type","Test",[]]]]],["Type","TestSuite",[]],[]],"fe_representation":"testsuite :: String String [Test] -> TestSuite","fe_documentation":["FunctionDoc",["Just","Convenient wrapper for defining test suites"],["The name of the test suite","A short description of the test suite","The list of tests that make up the suite"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",80],["Just",82],"skip"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Test",[]]],["Type","Test",[]],[]],"fe_representation":"skip :: Test -> Test"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",95],["Just",92],"filterSuitesByTestName"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","TestSuite",[]]]]],["Type","_List",[["Type","TestSuite",[]]]],[]],"fe_representation":"filterSuitesByTestName :: String [TestSuite] -> [TestSuite]","fe_documentation":["FunctionDoc",["Just","Filter test suites based on the name of a test"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",107],["Just",108],"testEditorWithShare"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Editor",[["Var","a"]]],["Var","a"],["Type","EditMode",[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"testEditorWithShare :: (Editor a) a EditMode -> Task a | iTask a"},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",105],["Just",102],"testEditor"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Editor",[["Var","a"]]],["Var","a"],["Type","EditMode",[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"testEditor :: (Editor a) a EditMode -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Test a specific editor"],["The editor to test","The model value that the editor edits","Edit mode to test (View,Enter,Update)"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",114],["Just",118],"testCommonInteractions"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"testCommonInteractions :: String -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","A generic test rig for testing the different editor variants for a type"],["The name of the type to test (e.g. \"Int\" or \"MyADT\""],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",136],["Just",235],"runUnitTestsJSON"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TestSuite",[]]]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"runUnitTestsJSON :: [TestSuite] *World -> *World","fe_documentation":["FunctionDoc",["Just","Run all unit tests from the test suites and dump"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",126],["Just",193],"noneFailed"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TestReport",[]]],["Type","Bool",[]],[]],"fe_representation":"noneFailed :: TestReport -> Bool","fe_documentation":["FunctionDoc",["Just","Check if no tests have failed (skipped and passed)"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",122],["Just",190],"allPassed"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TestReport",[]]],["Type","Bool",[]],[]],"fe_representation":"allPassed :: TestReport -> Bool","fe_documentation":["FunctionDoc",["Just","Test if all tests have passed"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",132],["Just",199],"runUnitTestsCLI"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TestSuite",[]]]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"runUnitTestsCLI :: [TestSuite] *World -> *World","fe_documentation":["FunctionDoc",["Just","Runs the unit tests from the test suites and shows test\nresults on stdout"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Test.Stubs",["Just",7],["Just",11],"toStubIWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"toStubIWorld :: *World -> *IWorld"},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",142],["Just",255],"execTestSuite"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TestSuite",[]],["Uniq",["Type","World",[]]]],["Type","World",[]],[]],"fe_representation":"execTestSuite :: TestSuite *World -> World","fe_documentation":["FunctionDoc",["Just","Execute a set of tests as a separate program\nIt writes the result of the test in an easily parsable format to the console"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Stubs",["Just",9],["Just",24],"fromStubIWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"fromStubIWorld :: *IWorld -> *World"},["Tip"],["Tip"]]]]]]]],["Bin",150,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",29],["Nothing"],"endTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicView",[]]],["Type","String",[]],[]],"fe_representation":".endTime :: DynamicView -> String"},["Bin",86,["Location","iTasks","iTasks.Internal.Tonic.Blueprints",["Just",22],["Just",80],"getTonicDir"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","String",[]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"getTonicDir :: !*IWorld -> *(!String,!*IWorld)"},["Bin",48,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",36],["Nothing"],"tf_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicFunc",[]]],["Type","FuncName",[]],[]],"fe_representation":".tf_name :: TonicFunc -> FuncName"},["Bin",17,["Location","iTasks","iTasks.Internal.Tonic",["Just",60],["Just",751],"tonicExtWrapAppLam1"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ExprId",[]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Func",[["Var","a"]],["Type","Int",[]],[]]]]]],["Func",[["Var","b"]],["Cons","m",[["Var","a"]]],[]]],["Func",[["Var","b"]],["Cons","m",[["Var","a"]]],[]],[[["Class","TonicBlueprintPart"],["Var","m"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicExtWrapAppLam1 :: !ModuleName !FuncName !ExprId [(ExprId,a -> Int)] !(b -> m a) -> b -> m a | TonicBlueprintPart m & iTask a"},["Bin",7,["Location","iTasks","iTasks.Internal.Tonic",["Just",52],["Just",251],"tonicExtWrapBodyLam1"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","_List",[["Type","_Tuple3",[["Type","VarName",[]],["Type","Int",[]],["Cons","m",[["Type","_Unit",[]]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Type","Int",[]]]]]],["Func",[["Var","b"]],["Cons","m",[["Var","a"]]],[]]],["Func",[["Var","b"]],["Cons","m",[["Var","a"]]],[]],[[["Class","TonicTopLevelBlueprint"],["Var","m"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicExtWrapBodyLam1 :: !ModuleName !FuncName [(VarName,Int,m ())] [(ExprId,Int)] (b -> m a) -> b -> m a | TonicTopLevelBlueprint m & iTask a"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic",["Just",48],["Just",245],"tonicExtWrapArg"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","VarName",[]],["Type","Int",[]],["Var","a"]],["Cons","m",[["Type","_Unit",[]]]],[[["Class","iTask"],["Var","a"]],[["Class","TonicTopLevelBlueprint"],["Var","m"]]]],"fe_representation":"tonicExtWrapArg :: !VarName !Int !a -> m () | iTask a & TonicTopLevelBlueprint m"},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Stubs",["Just",13],["Just",30],"fromStubVSt"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","VSt",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":"fromStubVSt :: *VSt -> *IWorld"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic",["Just",50],["Just",248],"tonicExtWrapBody"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","_List",[["Type","_Tuple3",[["Type","VarName",[]],["Type","Int",[]],["Cons","m",[["Type","_Unit",[]]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Type","Int",[]]]]]],["Cons","m",[["Var","a"]]]],["Cons","m",[["Var","a"]]],[[["Class","TonicTopLevelBlueprint"],["Var","m"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicExtWrapBody :: !ModuleName !FuncName [(VarName,Int,m ())] [(ExprId,Int)] (m a) -> m a | TonicTopLevelBlueprint m & iTask a"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic",["Just",56],["Just",257],"tonicExtWrapBodyLam3"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","_List",[["Type","_Tuple3",[["Type","VarName",[]],["Type","Int",[]],["Cons","m",[["Type","_Unit",[]]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Type","Int",[]]]]]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Func",[["Var","d"]],["Cons","m",[["Var","a"]]],[]],[]],[]]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Func",[["Var","d"]],["Cons","m",[["Var","a"]]],[]],[]],[]],[[["Class","TonicTopLevelBlueprint"],["Var","m"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicExtWrapBodyLam3 :: !ModuleName !FuncName [(VarName,Int,m ())] [(ExprId,Int)] (b -> c -> d -> m a) -> b -> c -> d -> m a | TonicTopLevelBlueprint m & iTask a"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic",["Just",54],["Just",254],"tonicExtWrapBodyLam2"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","_List",[["Type","_Tuple3",[["Type","VarName",[]],["Type","Int",[]],["Cons","m",[["Type","_Unit",[]]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Type","Int",[]]]]]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Cons","m",[["Var","a"]]],[]],[]]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Cons","m",[["Var","a"]]],[]],[]],[[["Class","TonicTopLevelBlueprint"],["Var","m"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicExtWrapBodyLam2 :: !ModuleName !FuncName [(VarName,Int,m ())] [(ExprId,Int)] (b -> c -> m a) -> b -> c -> m a | TonicTopLevelBlueprint m & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic",["Just",58],["Just",384],"tonicExtWrapApp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ExprId",[]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Func",[["Var","a"]],["Type","Int",[]],[]]]]]],["Cons","m",[["Var","a"]]]],["Cons","m",[["Var","a"]]],[[["Class","TonicBlueprintPart"],["Var","m"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicExtWrapApp :: !ModuleName !FuncName !ExprId [(ExprId,a -> Int)] (m a) -> m a | TonicBlueprintPart m & iTask a"},["Tip"],["Tip"]]]],["Bin",9,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",36],["Nothing"],"tf_body"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicFunc",[]]],["Type","TExpr",[]],[]],"fe_representation":".tf_body :: TonicFunc -> TExpr"},["Bin",5,["Location","iTasks","iTasks.Internal.Tonic",["Just",64],["Just",757],"tonicExtWrapAppLam3"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ExprId",[]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Func",[["Var","a"]],["Type","Int",[]],[]]]]]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Func",[["Var","d"]],["Cons","m",[["Var","a"]]],[]],[]],[]]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Func",[["Var","d"]],["Cons","m",[["Var","a"]]],[]],[]],[]],[[["Class","TonicBlueprintPart"],["Var","m"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicExtWrapAppLam3 :: !ModuleName !FuncName !ExprId [(ExprId,a -> Int)] !(b -> c -> d -> m a) -> b -> c -> d -> m a | TonicBlueprintPart m & iTask a"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic",["Just",62],["Just",754],"tonicExtWrapAppLam2"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ExprId",[]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Func",[["Var","a"]],["Type","Int",[]],[]]]]]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Cons","m",[["Var","a"]]],[]],[]]],["Func",[["Var","b"]],["Func",[["Var","c"]],["Cons","m",[["Var","a"]]],[]],[]],[[["Class","TonicBlueprintPart"],["Var","m"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicExtWrapAppLam2 :: !ModuleName !FuncName !ExprId [(ExprId,a -> Int)] !(b -> c -> m a) -> b -> c -> m a | TonicBlueprintPart m & iTask a"},["Tip"],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",31],["Nothing"],"tm_name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicModule",[]]],["Type","ModuleName",[]],[]],"fe_representation":".tm_name :: TonicModule -> ModuleName"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",31],["Nothing"],"tm_funcs"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicModule",[]]],["Type","Map",[["Type","FuncName",[]],["Type","TonicFunc",[]]]],[]],"fe_representation":".tm_funcs :: TonicModule -> Map FuncName TonicFunc"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",36],["Nothing"],"tf_args"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicFunc",[]]],["Type","_List",[["Type","_Tuple2",[["Type","TExpr",[]],["Type","TExpr",[]]]]]],[]],"fe_representation":".tf_args :: TonicFunc -> [(TExpr, TExpr)]"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",36],["Nothing"],"tf_iclLineNo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicFunc",[]]],["Type","Int",[]],[]],"fe_representation":".tf_iclLineNo :: TonicFunc -> Int"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",36],["Nothing"],"tf_comments"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicFunc",[]]],["Type","String",[]],[]],"fe_representation":".tf_comments :: TonicFunc -> String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",36],["Nothing"],"tf_module"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicFunc",[]]],["Type","ModuleName",[]],[]],"fe_representation":".tf_module :: TonicFunc -> ModuleName"},["Tip"],["Tip"]]]]],["Bin",30,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",63],["Nothing"],"TInt"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","TLit",[]],[]],"fe_representation":"TInt :: Int -> TLit"},["Bin",16,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TLet"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Pattern",[]],["Type","TExpr",[]]]]]],["Type","TExpr",[]]],["Type","TExpr",[]],[]],"fe_representation":"TLet :: [(Pattern, TExpr)] TExpr -> TExpr"},["Bin",7,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TExpand"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","TExpr",[]]]],["Type","TonicFunc",[]]],["Type","TExpr",[]],[]],"fe_representation":"TExpand :: [TExpr] TonicFunc -> TExpr"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TAugment"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TExpr",[]],["Type","TExpr",[]]],["Type","TExpr",[]],[]],"fe_representation":"TAugment :: TExpr TExpr -> TExpr"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",36],["Nothing"],"tf_resty"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicFunc",[]]],["Type","TExpr",[]],[]],"fe_representation":".tf_resty :: TonicFunc -> TExpr"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TCase"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ExprId",[]],["Type","TExpr",[]],["Type","_List",[["Type","_Tuple2",[["Type","Pattern",[]],["Type","TExpr",[]]]]]]],["Type","TExpr",[]],[]],"fe_representation":"TCase :: ExprId TExpr [(Pattern, TExpr)] -> TExpr"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TIf"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ExprId",[]],["Type","TExpr",[]],["Type","TExpr",[]],["Type","TExpr",[]]],["Type","TExpr",[]],[]],"fe_representation":"TIf :: ExprId TExpr TExpr TExpr -> TExpr"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TFApp"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ExprId",[]],["Type","FuncName",[]],["Type","_List",[["Type","TExpr",[]]]],["Type","TPriority",[]]],["Type","TExpr",[]],[]],"fe_representation":"TFApp :: ExprId FuncName [TExpr] TPriority -> TExpr"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TLam"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","TExpr",[]]]],["Type","TExpr",[]]],["Type","TExpr",[]],[]],"fe_representation":"TLam :: [TExpr] TExpr -> TExpr"},["Tip"],["Tip"]]]],["Bin",8,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TRecUpd"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","VarName",[]],["Type","TExpr",[]],["Type","_List",[["Type","TExpr",[]]]]],["Type","TExpr",[]],[]],"fe_representation":"TRecUpd :: VarName TExpr [TExpr] -> TExpr"},["Bin",4,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TNoBind"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TExpr",[]],[]],"fe_representation":"TNoBind :: TExpr"},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TMApp"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ExprId",[]],["Type","Maybe",[["Type","TypeName",[]]]],["Type","ModuleName",[]],["Type","FuncName",[]],["Type","_List",[["Type","TExpr",[]]]],["Type","TPriority",[]],["Type","Maybe",[["Type","VarPtr",[]]]]],["Type","TExpr",[]],[]],"fe_representation":"TMApp :: ExprId (Maybe TypeName) ModuleName FuncName [TExpr] TPriority (Maybe VarPtr) -> TExpr"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TLit"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TLit",[]]],["Type","TExpr",[]],[]],"fe_representation":"TLit :: TLit -> TExpr"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TPPExpr"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","PPExpr",[]]],["Type","TExpr",[]],[]],"fe_representation":"TPPExpr :: PPExpr -> TExpr"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TVar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","ExprId",[]],["Type","PPExpr",[]],["Type","VarPtr",[]]],["Type","TExpr",[]],[]],"fe_representation":"TVar :: ExprId PPExpr VarPtr -> TExpr"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TSel"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TExpr",[]],["Type","_List",[["Type","TExpr",[]]]]],["Type","TExpr",[]],[]],"fe_representation":"TSel :: TExpr [TExpr] -> TExpr"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",63],["Nothing"],"TBool"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Bool",[]]],["Type","TLit",[]],[]],"fe_representation":"TBool :: Bool -> TLit"},["Tip"],["Tip"]]]]],["Bin",13,["Location","iTasks","iTasks.Internal.Tonic.Blueprints",["Just",10],["Just",27],"getTonicFunc"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TonicModule",[]],["Type","String",[]]],["Type","Maybe",[["Type","TonicFunc",[]]]],[]],"fe_representation":"getTonicFunc :: !TonicModule !String -> Maybe TonicFunc"},["Bin",7,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",69],["Nothing"],"TNoAssoc"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TAssoc",[]],[]],"fe_representation":"TNoAssoc :: TAssoc"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",63],["Nothing"],"TString"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","TLit",[]],[]],"fe_representation":"TString :: String -> TLit"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",63],["Nothing"],"TReal"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Real",[]]],["Type","TLit",[]],[]],"fe_representation":"TReal :: Real -> TLit"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",69],["Nothing"],"TLeftAssoc"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TAssoc",[]],[]],"fe_representation":"TLeftAssoc :: TAssoc"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",74],["Nothing"],"TNoPrio"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TPriority",[]],[]],"fe_representation":"TNoPrio :: TPriority"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",69],["Nothing"],"TRightAssoc"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TAssoc",[]],[]],"fe_representation":"TRightAssoc :: TAssoc"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",74],["Nothing"],"TPrio"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TAssoc",[]],["Type","Int",[]]],["Type","TPriority",[]],[]],"fe_representation":"TPrio :: TAssoc Int -> TPriority"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.Internal.Tonic.Blueprints",["Just",16],["Just",63],"allBlueprints"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","AllBlueprints",[]]]],[]],"fe_representation":"allBlueprints :: Task AllBlueprints"},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Blueprints",["Just",12],["Just",30],"getTonicModules`"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","_Tuple2",[["Type","Dynamic",[]],["Type","String",[]]]],["Type","_List",[["Type","String",[]]]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"getTonicModules` :: !*IWorld -> *(!MaybeError (Dynamic,String) [String],!*IWorld)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Blueprints",["Just",14],["Just",48],"getModule`"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","_Tuple2",[["Type","Dynamic",[]],["Type","String",[]]]],["Type","TonicModule",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]],"fe_representation":"getModule` :: !String !*IWorld -> *(!MaybeError (Dynamic,String) TonicModule,!*IWorld)"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Blueprints",["Just",18],["Just",74],"getModule"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","Task",[["Type","TonicModule",[]]]],[]],"fe_representation":"getModule :: !String -> Task TonicModule"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Blueprints",["Just",20],["Just",77],"getTonicModules"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_List",[["Type","String",[]]]]]],[]],"fe_representation":"getTonicModules :: Task [String]"},["Tip"],["Tip"]]]]]]],["Bin",37,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",25],["Just",88],"tonicActionsForTaskID"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","TaskId",[]],["Type","Map",[["Type","ExprId",[]],["Type","_List",[["Type","UI",[]]]]]],["Type","Map",[["Type","ExprId",[]],["Type","_List",[["Type","UI",[]]]]]]]],[]],"fe_representation":"tonicActionsForTaskID :: RWShared TaskId (Map ExprId [UI]) (Map ExprId [UI])"},["Bin",21,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",9],["Just",19],"selectedBlueprint"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","Maybe",[["Type","ClickMeta",[]]]],["Type","Maybe",[["Type","ClickMeta",[]]]]]],[]],"fe_representation":"selectedBlueprint :: RWShared () (Maybe ClickMeta) (Maybe ClickMeta)"},["Bin",13,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",42],["Just",188],"mkGenInstanceImage"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TaskAppRenderer",[]]]],["Type","GenBlueprintInstance",[]],["Type","Maybe",[["Type","Either",[["Type","ClickMeta",[]],["Type","_Tuple4",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ComputationId",[]],["Type","Int",[]]]]]]]],["Type","Bool",[]],["Type","ModelTy",[]],["Uniq",["Type","TagSource",[]]]],["Type","Image",[["Type","ModelTy",[]]]],[]],"fe_representation":"mkGenInstanceImage :: ![TaskAppRenderer] !GenBlueprintInstance !(Maybe (Either ClickMeta (!ModuleName,!FuncName,!ComputationId,!Int))) !Bool !ModelTy *TagSource -> Image ModelTy"},["Bin",6,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",24],["Nothing"],"state"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ActionState",[["Var","a"],["Var","s"]]]],["Var","s"],[]],"fe_representation":".state :: (ActionState a s) -> s"},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",24],["Nothing"],"action"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ActionState",[["Var","a"],["Var","s"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":".action :: (ActionState a s) -> Maybe a"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Blueprints",["Just",24],["Just",85],"getTasks"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TonicModule",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":"getTasks :: !TonicModule -> [String]"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",33],["Just",119],"mkStaticImage"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TaskAppRenderer",[]]]],["Type","BlueprintIdent",[]],["Type","Bool",[]],["Type","ModelTy",[]],["Uniq",["Type","TagSource",[]]]],["Type","Image",[["Type","ModelTy",[]]]],[]],"fe_representation":"mkStaticImage :: ![TaskAppRenderer] !BlueprintIdent !Bool !ModelTy *TagSource -> Image ModelTy"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",25],["Just",101],"doAction"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Type","ActionState",[["Var","a"],["Var","s"]]]],["Var","b"],[]],[]],["Type","TaskValue",[["Type","ActionState",[["Var","a"],["Var","s"]]]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"doAction :: !(a -> (ActionState a s) -> b) !(TaskValue (ActionState a s)) -> Maybe b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",36],["Just",154],"mkTaskInstanceImage"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","TaskAppRenderer",[]]]],["Type","BlueprintInstance",[]],["Type","Map",[["Type","ExprId",[]],["Type","TStability",[]]]],["Type","Map",[["Type","ExprId",[]],["Type","_List",[["Type","UI",[]]]]]],["Type","Maybe",[["Type","Either",[["Type","ClickMeta",[]],["Type","_Tuple4",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ComputationId",[]],["Type","Int",[]]]]]]]],["Type","Bool",[]],["Type","ModelTy",[]],["Uniq",["Type","TagSource",[]]]],["Type","Image",[["Type","ModelTy",[]]]],[]],"fe_representation":"mkTaskInstanceImage :: ![TaskAppRenderer] !BlueprintInstance !(Map ExprId TStability) !(Map ExprId [UI]) !(Maybe (Either ClickMeta (!ModuleName,!FuncName,!ComputationId,!Int))) !Bool !ModelTy *TagSource -> Image ModelTy"},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.Internal.Tonic.Pretty",["Just",7],["Just",80],"ppIntersperse"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","String",[]],[]],["Type","String",[]],["Type","_List",[["Var","a"]]]],["Type","String",[]],[]],"fe_representation":"ppIntersperse :: !(a -> String) !String ![a] -> String"},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",47],["Just",816],"tDefaultMApp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","Bool",[]],["Type","ExprId",[]],["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ModuleName",[]],["Type","FuncName",[]],["Type","_List",[["Type","TExpr",[]]]],["Type","_List",[["Type","Image",[["Type","ModelTy",[]]]]]],["Type","_List",[["Type","Image",[["Type","ModelTy",[]]]]]],["Uniq",["Type","TagSource",[]]]],["Uniq",["Type","_Tuple2",[["Type","Image",[["Type","ModelTy",[]]]],["Uniq",["Type","TagSource",[]]]]]],[]],"fe_representation":"tDefaultMApp :: !Bool !Bool !Bool !Bool !Bool !Bool !Bool !ExprId !ModuleName !FuncName !ModuleName !FuncName ![TExpr] ![Image ModelTy] ![Image ModelTy] !*TagSource -> *(!Image ModelTy,!*TagSource)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Pretty",["Just",5],["Just",11],"ppTExpr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TExpr",[]]],["Type","String",[]],[]],"fe_representation":"ppTExpr :: !TExpr -> String"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Server",["Just",8],["Just",125],"archivedStandAloneViewer"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"archivedStandAloneViewer :: Task ()"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Server",["Just",7],["Just",165],"liveStandAloneViewer"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"liveStandAloneViewer :: Task ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Server",["Just",10],["Just",297],"acceptAndViewTonicTraces"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"acceptAndViewTonicTraces :: Task ()"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",17],["Just",47],"tonicSharedRT"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","TonicRTMap",[]],["Type","TonicRTMap",[]]]],[]],"fe_representation":"tonicSharedRT :: RWShared () TonicRTMap TonicRTMap"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",13],["Just",25],"storedOutputEditors"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","Map",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","ExprId",[]]]],["Type","_Tuple4",[["Type","TaskId",[]],["Type","Int",[]],["Type","Task",[["Type","_Unit",[]]]],["Type","TStability",[]]]]]],["Type","Map",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","ExprId",[]]]],["Type","_Tuple4",[["Type","TaskId",[]],["Type","Int",[]],["Type","Task",[["Type","_Unit",[]]]],["Type","TStability",[]]]]]]]],[]],"fe_representation":"storedOutputEditors :: RWShared () (Map (TaskId,ExprId) (TaskId,Int,Task (),TStability)) (Map (TaskId,ExprId) (TaskId,Int,Task (),TStability))"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",11],["Just",22],"selectedDetail"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","Maybe",[["Type","Either",[["Type","ClickMeta",[]],["Type","_Tuple4",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ComputationId",[]],["Type","Int",[]]]]]]]],["Type","Maybe",[["Type","Either",[["Type","ClickMeta",[]],["Type","_Tuple4",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ComputationId",[]],["Type","Int",[]]]]]]]]]],[]],"fe_representation":"selectedDetail :: RWShared () (Maybe (Either ClickMeta (ModuleName,FuncName,ComputationId,Int))) (Maybe (Either ClickMeta (ModuleName,FuncName,ComputationId,Int)))"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",15],["Just",29],"outputForTaskId"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","ExprId",[]]]],["Type","_Tuple4",[["Type","TaskId",[]],["Type","Int",[]],["Type","Task",[["Type","_Unit",[]]]],["Type","TStability",[]]]],["Type","_Tuple4",[["Type","TaskId",[]],["Type","Int",[]],["Type","Task",[["Type","_Unit",[]]]],["Type","TStability",[]]]]]],[]],"fe_representation":"outputForTaskId :: RWShared (TaskId,ExprId) (TaskId,Int,Task (),TStability) (TaskId,Int,Task (),TStability)"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",21],["Just",63],"tonicInstances"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Tuple3",[["Type","TaskId",[]],["Type","ModuleName",[]],["Type","FuncName",[]]]],["Type","Maybe",[["Type","BlueprintInstance",[]]]],["Type","BlueprintInstance",[]]]],[]],"fe_representation":"tonicInstances :: RWShared (TaskId,ModuleName,FuncName) (Maybe BlueprintInstance) BlueprintInstance"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",19],["Just",51],"allTonicInstances"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","TaskId",[]],["Type","_List",[["Type","_Tuple2",[["Type","_Tuple2",[["Type","ModuleName",[]],["Type","FuncName",[]]]],["Type","BlueprintInstance",[]]]]]],["Type","_Unit",[]]]],[]],"fe_representation":"allTonicInstances :: RWShared TaskId [((ModuleName,FuncName),BlueprintInstance)] ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",23],["Just",84],"tonicEnabledSteps"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","Map",[["Type","TaskId",[]],["Type","Map",[["Type","ExprId",[]],["Type","_List",[["Type","UI",[]]]]]]]],["Type","Map",[["Type","TaskId",[]],["Type","Map",[["Type","ExprId",[]],["Type","_List",[["Type","UI",[]]]]]]]]]],[]],"fe_representation":"tonicEnabledSteps :: RWShared () (Map TaskId (Map ExprId [UI])) (Map TaskId (Map ExprId [UI]))"},["Tip"],["Tip"]]]]],["Bin",15,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",12],["Nothing"],"show_comments"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StaticDisplaySettings",[]]],["Type","Bool",[]],[]],"fe_representation":".show_comments :: StaticDisplaySettings -> Bool"},["Bin",7,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",33],["Just",141],"dynamicDisplaySettings"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","DynamicDisplaySettings",[]],["Type","DynamicDisplaySettings",[]]]],[]],"fe_representation":"dynamicDisplaySettings :: RWShared () DynamicDisplaySettings DynamicDisplaySettings"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",29],["Just",130],"staticDisplaySettings"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","StaticDisplaySettings",[]],["Type","StaticDisplaySettings",[]]]],[]],"fe_representation":"staticDisplaySettings :: RWShared () StaticDisplaySettings StaticDisplaySettings"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",27],["Just",106],"tonicActionsForTaskIDAndExpr"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","ExprId",[]]]],["Type","_List",[["Type","UI",[]]]],["Type","_List",[["Type","UI",[]]]]]],[]],"fe_representation":"tonicActionsForTaskIDAndExpr :: RWShared (TaskId,ExprId) [UI] [UI]"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",31],["Just",138],"queryShare"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Unit",[]],["Type","Maybe",[["Type","BlueprintQuery",[]]]],["Type","Maybe",[["Type","BlueprintQuery",[]]]]]],[]],"fe_representation":"queryShare :: RWShared () (Maybe BlueprintQuery) (Maybe BlueprintQuery)"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",37],["Just",157],"storeTaskOutputViewer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskResult",[["Var","a"]]],["Type","ExprId",[]],["Type","TaskId",[]],["Type","TaskId",[]],["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","IWorld",[]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"storeTaskOutputViewer :: !(TaskResult a) !ExprId !TaskId !TaskId !*IWorld -> *IWorld | iTask a"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Shares",["Just",35],["Just",153],"paramsForTaskInstance"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","RWShared",[["Type","_Tuple3",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","TaskId",[]]]],["Type","_List",[["Type","_Tuple3",[["Type","VarName",[]],["Type","Int",[]],["Type","Task",[["Type","_Unit",[]]]]]]]],["Type","_List",[["Type","_Tuple3",[["Type","VarName",[]],["Type","Int",[]],["Type","Task",[["Type","_Unit",[]]]]]]]]]],[]],"fe_representation":"paramsForTaskInstance :: RWShared (ModuleName,FuncName,TaskId) [(VarName,Int,Task ())] [(VarName,Int,Task ())]"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",12],["Nothing"],"display_compact"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StaticDisplaySettings",[]]],["Type","Bool",[]],[]],"fe_representation":".display_compact :: StaticDisplaySettings -> Bool"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",18],["Nothing"],"show_comments"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicDisplaySettings",[]]],["Type","Bool",[]],[]],"fe_representation":".show_comments :: DynamicDisplaySettings -> Bool"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",18],["Nothing"],"display_compact"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicDisplaySettings",[]]],["Type","Bool",[]],[]],"fe_representation":".display_compact :: DynamicDisplaySettings -> Bool"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",12],["Nothing"],"unfold_depth"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","StaticDisplaySettings",[]]],["Type","Int",[]],[]],"fe_representation":".unfold_depth :: StaticDisplaySettings -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",18],["Nothing"],"show_all_child_tasks"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicDisplaySettings",[]]],["Type","Bool",[]],[]],"fe_representation":".show_all_child_tasks :: DynamicDisplaySettings -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",18],["Nothing"],"show_task_value"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicDisplaySettings",[]]],["Type","Bool",[]],[]],"fe_representation":".show_task_value :: DynamicDisplaySettings -> Bool"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",18],["Nothing"],"show_finished_blueprints"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicDisplaySettings",[]]],["Type","Bool",[]],[]],"fe_representation":".show_finished_blueprints :: DynamicDisplaySettings -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",18],["Nothing"],"unfold_depth"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicDisplaySettings",[]]],["Type","Int",[]],[]],"fe_representation":".unfold_depth :: DynamicDisplaySettings -> Int"},["Tip"],["Tip"]]]]]]],["Bin",63,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",89],["Nothing"],"tma_appModuleName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TMApply",[]]],["Type","ModuleName",[]],[]],"fe_representation":".tma_appModuleName :: TMApply -> ModuleName"},["Bin",33,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_index"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","Int",[]],[]],"fe_representation":".bpi_index :: BlueprintInstance -> Int"},["Bin",18,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",47],["Nothing"],"bpr_moduleName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintIdent",[]]],["Type","ModuleName",[]],[]],"fe_representation":".bpr_moduleName :: BlueprintIdent -> ModuleName"},["Bin",10,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",29],["Nothing"],"user"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicView",[]]],["Type","String",[]],[]],"fe_representation":".user :: DynamicView -> String"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",29],["Nothing"],"startTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicView",[]]],["Type","String",[]],[]],"fe_representation":".startTime :: DynamicView -> String"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",29],["Nothing"],"lastUpdate"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicView",[]]],["Type","String",[]],[]],"fe_representation":".lastUpdate :: DynamicView -> String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",29],["Nothing"],"taskName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","DynamicView",[]]],["Type","String",[]],[]],"fe_representation":".taskName :: DynamicView -> String"},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",37],["Nothing"],"HasInstanceNo"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","BlueprintQuery",[]],[]],"fe_representation":"HasInstanceNo :: Int -> BlueprintQuery"},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",37],["Nothing"],"AndQuery"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","BlueprintQuery",[]],["Type","BlueprintQuery",[]]],["Type","BlueprintQuery",[]],[]],"fe_representation":"AndQuery :: BlueprintQuery BlueprintQuery -> BlueprintQuery"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",37],["Nothing"],"FuncName"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","BlueprintQuery",[]],[]],"fe_representation":"FuncName :: String -> BlueprintQuery"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",37],["Nothing"],"OrQuery"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","BlueprintQuery",[]],["Type","BlueprintQuery",[]]],["Type","BlueprintQuery",[]],[]],"fe_representation":"OrQuery :: BlueprintQuery BlueprintQuery -> BlueprintQuery"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",37],["Nothing"],"IsActiveTask"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","BlueprintQuery",[]],[]],"fe_representation":"IsActiveTask :: BlueprintQuery"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",37],["Nothing"],"UserInvolved"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","BlueprintQuery",[]],[]],"fe_representation":"UserInvolved :: String -> BlueprintQuery"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_bpref"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","BlueprintIdent",[]],[]],"fe_representation":".bpi_bpref :: BlueprintInstance -> BlueprintIdent"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_activeNodes"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","Map",[["Type","ListId",[]],["Type","IntMap",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","ExprId",[]]]]]]]],[]],"fe_representation":".bpi_activeNodes :: BlueprintInstance -> Map ListId (IntMap (TaskId, ExprId))"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",47],["Nothing"],"bpr_taskName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintIdent",[]]],["Type","FuncName",[]],[]],"fe_representation":".bpr_taskName :: BlueprintIdent -> FuncName"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_blueprint"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","TonicFunc",[]],[]],"fe_representation":".bpi_blueprint :: BlueprintInstance -> TonicFunc"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_currentUser"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","Maybe",[["Type","User",[]]]],[]],"fe_representation":".bpi_currentUser :: BlueprintInstance -> Maybe User"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_case_branches"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","Map",[["Type","ExprId",[]],["Type","Int",[]]]],[]],"fe_representation":".bpi_case_branches :: BlueprintInstance -> Map ExprId Int"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_endTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","Maybe",[["Type","DateTime",[]]]],[]],"fe_representation":".bpi_endTime :: BlueprintInstance -> Maybe DateTime"},["Tip"],["Tip"]]]]],["Bin",14,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",71],["Nothing"],"TStable"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TStability",[]],[]],"fe_representation":"TStable :: TStability"},["Bin",6,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_startTime"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","DateTime",[]],[]],"fe_representation":".bpi_startTime :: BlueprintInstance -> DateTime"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_parentTaskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","TaskId",[]],[]],"fe_representation":".bpi_parentTaskId :: BlueprintInstance -> TaskId"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_lastUpdated"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","DateTime",[]],[]],"fe_representation":".bpi_lastUpdated :: BlueprintInstance -> DateTime"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_previouslyActive"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","Map",[["Type","ExprId",[]],["Type","TaskId",[]]]],[]],"fe_representation":".bpi_previouslyActive :: BlueprintInstance -> Map ExprId TaskId"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"bpi_taskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintInstance",[]]],["Type","TaskId",[]],[]],"fe_representation":".bpi_taskId :: BlueprintInstance -> TaskId"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",71],["Nothing"],"TNoVal"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TStability",[]],[]],"fe_representation":"TNoVal :: TStability"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",83],["Nothing"],"tmn_bpFunctionName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TMNewTopLevel",[]]],["Type","FunctionName",[]],[]],"fe_representation":".tmn_bpFunctionName :: TMNewTopLevel -> FunctionName"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",79],["Nothing"],"TMApply"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TMApply",[]]],["Type","TonicMessage",[]],[]],"fe_representation":"TMApply :: TMApply -> TonicMessage"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",71],["Nothing"],"TUnstable"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TStability",[]],[]],"fe_representation":"TUnstable :: TStability"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",79],["Nothing"],"TMNewTopLevel"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TMNewTopLevel",[]]],["Type","TonicMessage",[]],[]],"fe_representation":"TMNewTopLevel :: TMNewTopLevel -> TonicMessage"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",83],["Nothing"],"tmn_computationId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TMNewTopLevel",[]]],["Type","ComputationId",[]],[]],"fe_representation":".tmn_computationId :: TMNewTopLevel -> ComputationId"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",83],["Nothing"],"tmn_bpModuleName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TMNewTopLevel",[]]],["Type","ModuleName",[]],[]],"fe_representation":".tmn_bpModuleName :: TMNewTopLevel -> ModuleName"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",89],["Nothing"],"tma_appFunName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TMApply",[]]],["Type","FunctionName",[]],[]],"fe_representation":".tma_appFunName :: TMApply -> FunctionName"},["Tip"],["Tip"]]]]]],["Bin",29,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",126],["Nothing"],"tis_compact"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicImageState",[]]],["Type","Bool",[]],[]],"fe_representation":".tis_compact :: TonicImageState -> Bool"},["Bin",16,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",98],["Nothing"],"gbpi_bpref"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenBlueprintInstance",[]]],["Type","BlueprintIdent",[]],[]],"fe_representation":".gbpi_bpref :: GenBlueprintInstance -> BlueprintIdent"},["Bin",6,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",89],["Nothing"],"tma_nodeId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TMApply",[]]],["Type","NodeId",[]],[]],"fe_representation":".tma_nodeId :: TMApply -> NodeId"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",89],["Nothing"],"tma_bpModuleName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TMApply",[]]],["Type","ModuleName",[]],[]],"fe_representation":".tma_bpModuleName :: TMApply -> ModuleName"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",89],["Nothing"],"tma_bpFunctionName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TMApply",[]]],["Type","FunctionName",[]],[]],"fe_representation":".tma_bpFunctionName :: TMApply -> FunctionName"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",89],["Nothing"],"tma_computationId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TMApply",[]]],["Type","ComputationId",[]],[]],"fe_representation":".tma_computationId :: TMApply -> ComputationId"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",98],["Nothing"],"gbpi_activeNode"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenBlueprintInstance",[]]],["Type","_Tuple2",[["Type","ComputationId",[]],["Type","ExprId",[]]]],[]],"fe_representation":".gbpi_activeNode :: GenBlueprintInstance -> (ComputationId, ExprId)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",98],["Nothing"],"gbpi_blueprint"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenBlueprintInstance",[]]],["Type","TonicFunc",[]],[]],"fe_representation":".gbpi_blueprint :: GenBlueprintInstance -> TonicFunc"},["Tip"],["Tip"]]]],["Bin",9,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",98],["Nothing"],"gbpi_parentId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenBlueprintInstance",[]]],["Type","ComputationId",[]],[]],"fe_representation":".gbpi_parentId :: GenBlueprintInstance -> ComputationId"},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",98],["Nothing"],"gbpi_case_branches"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenBlueprintInstance",[]]],["Type","Map",[["Type","ExprId",[]],["Type","Int",[]]]],[]],"fe_representation":".gbpi_case_branches :: GenBlueprintInstance -> Map ExprId Int"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",98],["Nothing"],"gbpi_computationId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenBlueprintInstance",[]]],["Type","ComputationId",[]],[]],"fe_representation":".gbpi_computationId :: GenBlueprintInstance -> ComputationId"},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",124],["Nothing"],"TDetailAction"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TClickAction",[]],[]],"fe_representation":"TDetailAction :: TClickAction"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",119],["Just",31],"toComp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]]],["Type","ComputationId",[]],[]],"fe_representation":"toComp :: !TaskId -> ComputationId"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",98],["Nothing"],"gbpi_previouslyActive"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","GenBlueprintInstance",[]]],["Type","Map",[["Type","ExprId",[]],["Type","ComputationId",[]]]],[]],"fe_representation":".gbpi_previouslyActive :: GenBlueprintInstance -> Map ExprId ComputationId"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",120],["Just",34],"comp2TaskId"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ComputationId",[]]],["Type","TaskId",[]],[]],"fe_representation":"comp2TaskId :: !ComputationId -> TaskId"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",124],["Nothing"],"TSelectArg"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","TClickAction",[]],[]],"fe_representation":"TSelectArg :: Int -> TClickAction"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",124],["Nothing"],"TNavAction"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TClickAction",[]],[]],"fe_representation":"TNavAction :: TClickAction"},["Tip"],["Tip"]],["Tip"]]]]],["Bin",12,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",138],["Nothing"],"bpident_compId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintRef",[]]],["Type","Maybe",[["Type","ComputationId",[]]]],[]],"fe_representation":".bpident_compId :: BlueprintRef -> Maybe ComputationId"},["Bin",5,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",132],["Nothing"],"click_origin_mbbpident"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ClickMeta",[]]],["Type","Maybe",[["Type","BlueprintRef",[]]]],[]],"fe_representation":".click_origin_mbbpident :: ClickMeta -> Maybe BlueprintRef"},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",126],["Nothing"],"tis_depth"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicImageState",[]]],["Type","Int",[]],[]],"fe_representation":".tis_depth :: TonicImageState -> Int"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",126],["Nothing"],"tis_task"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TonicImageState",[]]],["Type","TonicFunc",[]],[]],"fe_representation":".tis_task :: TonicImageState -> TonicFunc"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",132],["Nothing"],"click_origin_mbnodeId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ClickMeta",[]]],["Type","Maybe",[["Type","ExprId",[]]]],[]],"fe_representation":".click_origin_mbnodeId :: ClickMeta -> Maybe ExprId"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",132],["Nothing"],"click_target_bpident"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ClickMeta",[]]],["Type","BlueprintRef",[]],[]],"fe_representation":".click_target_bpident :: ClickMeta -> BlueprintRef"},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.Internal.Util",["Just",13],["Just",17],"mb2list"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","_List",[["Var","a"]]]]]],["Type","_List",[["Var","a"]]],[]],"fe_representation":"mb2list :: !(Maybe [a]) -> [a]"},["Bin",3,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",138],["Nothing"],"bpident_moduleName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintRef",[]]],["Type","ModuleName",[]],[]],"fe_representation":".bpident_moduleName :: BlueprintRef -> ModuleName"},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",138],["Nothing"],"bpident_compName"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","BlueprintRef",[]]],["Type","FuncName",[]],[]],"fe_representation":".bpident_compName :: BlueprintRef -> FuncName"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Util",["Just",11],["Just",10],"show"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]],["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]],"fe_representation":"show :: ![String] !*World -> *World"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Util",["Just",14],["Just",21],"list2mb"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","Maybe",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"list2mb :: ![a] -> Maybe [a]"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Util",["Just",18],["Just",26],"currentLocalDateTimeWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","DateTime",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"currentLocalDateTimeWorld :: !*World -> (!DateTime,!*World)"},["Tip"],["Tip"]]]]]]]]],["Bin",305,["Location","iTasks","iTasks.UI.Definition",["Just",116],["Nothing"],"FlexSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UISize",[]],[]],"fe_representation":"FlexSize :: UISize"},["Bin",194,["Location","iTasks","iTasks.SDS.Definition",["Just",51],["Nothing"],"notify"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSLens",[["Var","p"],["Var","r"],["Var","w"],["Var","ps"],["Var","rs"],["Var","ws"]]]],["Type","SDSLensNotify",[["Var","p"],["Var","w"],["Var","rs"]]],[]],"fe_representation":".notify :: (SDSLens p r w ps rs ws) -> SDSLensNotify p w rs"},["Bin",75,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",25],["Nothing"],"SDSNoWrite"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","SDSWriteProjection",[["Var","rs"],["Var","ws"],["Var","wt"]]],[]],"fe_representation":"SDSNoWrite :: SDSWriteProjection rs ws wt"},["Bin",27,["Location","iTasks","iTasks.Internal.WebService",["Just",32],["Nothing"],"onDisconnect"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebService",[["Var","r"],["Var","w"]]]],["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Type","ConnectionState",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],[]],"fe_representation":".onDisconnect :: (WebService r w) -> HTTPRequest -> r -> ConnectionState -> *IWorld -> *(Maybe w, *IWorld)"},["Bin",14,["Location","iTasks","iTasks.Internal.WebService",["Just",20],["Nothing"],"message_data"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebSockState",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":".message_data :: WebSockState -> [String]"},["Bin",6,["Location","iTasks","iTasks.Internal.Util",["Just",28],["Just",76],"kvGet"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Type","_List",[["Type","_Tuple2",[["Var","k"],["Var","v"]]]]]],["Type","Maybe",[["Var","v"]]],[[["Class","Eq"],["Var","k"]]]],"fe_representation":"kvGet :: k ![(k,v)] -> Maybe v | Eq k"},["Bin",2,["Location","iTasks","iTasks.Internal.Util",["Just",22],["Just",53],"toCanonicalPath"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","FilePath",[]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"toCanonicalPath :: !FilePath !*World -> (!FilePath,!*World)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Util",["Just",25],["Just",73],"mergeMaps"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Map",[["Var","k"],["Var","v"]]],["Type","Map",[["Var","k"],["Var","v"]]]],["Type","Map",[["Var","k"],["Var","v"]]],[[["Class","<"],["Var","k"]]]],"fe_representation":"mergeMaps :: (Map k v) (Map k v) -> Map k v | < k"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Util",["Just",30],["Just",84],"kvSetOnce"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Var","v"],["Type","_List",[["Type","_Tuple2",[["Var","k"],["Var","v"]]]]]],["Type","_List",[["Type","_Tuple2",[["Var","k"],["Var","v"]]]]],[[["Class","Eq"],["Var","k"]]]],"fe_representation":"kvSetOnce :: k v ![(k,v)] -> [(k,v)] | Eq k"},["Bin",1,["Location","iTasks","iTasks.Internal.Util",["Just",29],["Just",80],"kvSet"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Var","v"],["Type","_List",[["Type","_Tuple2",[["Var","k"],["Var","v"]]]]]],["Type","_List",[["Type","_Tuple2",[["Var","k"],["Var","v"]]]]],[[["Class","Eq"],["Var","k"]]]],"fe_representation":"kvSet :: k v ![(k,v)] -> [(k,v)] | Eq k"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",20],["Nothing"],"cur_frame"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebSockState",[]]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":".cur_frame :: WebSockState -> {#Char}"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.WebService",["Just",26],["Nothing"],"WSClose"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","WebSockEvent",[]],[]],"fe_representation":"WSClose :: String -> WebSockEvent"},["Bin",2,["Location","iTasks","iTasks.Internal.WebService",["Just",20],["Nothing"],"message_text"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebSockState",[]]],["Type","Bool",[]],[]],"fe_representation":".message_text :: WebSockState -> Bool"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",26],["Nothing"],"WSBinMessage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","WebSockEvent",[]],[]],"fe_representation":"WSBinMessage :: String -> WebSockEvent"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.Internal.WebService",["Just",32],["Nothing"],"completeRequest"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebService",[["Var","r"],["Var","w"]]]],["Type","Bool",[]],[]],"fe_representation":".completeRequest :: (WebService r w) -> Bool"},["Bin",2,["Location","iTasks","iTasks.Internal.WebService",["Just",26],["Nothing"],"WSPing"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","WebSockEvent",[]],[]],"fe_representation":"WSPing :: String -> WebSockEvent"},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",26],["Nothing"],"WSTextMessage"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","WebSockEvent",[]],[]],"fe_representation":"WSTextMessage :: String -> WebSockEvent"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",32],["Nothing"],"onData"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebService",[["Var","r"],["Var","w"]]]],["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Type","String",[]]],["Func",[["Type","ConnectionState",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","_List",[["Type","_#Array",[["Type","Char",[]]]]]],["Type","Bool",[]],["Type","ConnectionState",[]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],[]],[]],"fe_representation":".onData :: (WebService r w) -> HTTPRequest -> r -> String -> ConnectionState -> *IWorld -> *([{#Char}], Bool, ConnectionState, Maybe w, *IWorld)"},["Tip"],["Tip"]]]]],["Bin",12,["Location","iTasks","iTasks.Internal.WebService",["Just",47],["Just",396],"documentService"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","WebService",[["Var","r"],["Var","w"]]],[]],"fe_representation":"documentService :: WebService r w"},["Bin",6,["Location","iTasks","iTasks.Internal.WebService",["Just",32],["Nothing"],"urlMatchPred"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebService",[["Var","r"],["Var","w"]]]],["Func",[["Type","String",[]]],["Type","Bool",[]],[]],[]],"fe_representation":".urlMatchPred :: (WebService r w) -> String -> Bool"},["Bin",3,["Location","iTasks","iTasks.Internal.WebService",["Just",32],["Nothing"],"onShareChange"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebService",[["Var","r"],["Var","w"]]]],["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Type","ConnectionState",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","_List",[["Type","_#Array",[["Type","Char",[]]]]]],["Type","Bool",[]],["Type","ConnectionState",[]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],[]],"fe_representation":".onShareChange :: (WebService r w) -> HTTPRequest -> r -> ConnectionState -> *IWorld -> *([{#Char}], Bool, ConnectionState, Maybe w, *IWorld)"},["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",32],["Nothing"],"onNewReq"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebService",[["Var","r"],["Var","w"]]]],["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple4",[["Type","HTTPResponse",[]],["Type","Maybe",[["Type","ConnectionState",[]]]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],"fe_representation":".onNewReq :: (WebService r w) -> HTTPRequest -> r -> *IWorld -> *(HTTPResponse, Maybe ConnectionState, Maybe w, *IWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",32],["Nothing"],"onTick"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","WebService",[["Var","r"],["Var","w"]]]],["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Type","ConnectionState",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","_List",[["Type","_#Array",[["Type","Char",[]]]]]],["Type","Bool",[]],["Type","ConnectionState",[]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],[]],"fe_representation":".onTick :: (WebService r w) -> HTTPRequest -> r -> ConnectionState -> *IWorld -> *([{#Char}], Bool, ConnectionState, Maybe w, *IWorld)"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.WebService",["Just",46],["Just",256],"taskUIService"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","PublishedTask",[]]]]],["Type","WebService",[["Type","ChangeQueues",[]],["Type","ChangeQueues",[]]]],[]],"fe_representation":"taskUIService :: ![PublishedTask] -> WebService ChangeQueues ChangeQueues"},["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",42],["Just",131],"httpServer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Type","_List",[["Type","WebService",[["Var","r"],["Var","w"]]]]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]]],["Type","ConnectionTask",[]],[[["Class","TC"],["Var","r"]],[["Class","TC"],["Var","w"]]]],"fe_representation":"httpServer :: !Int !Int ![WebService r w] (RWShared () r w) -> ConnectionTask | TC r & TC w"},["Tip"],["Tip"]],["Tip"]]],["Bin",5,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",25],["Nothing"],"SDSBlindWrite"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","wt"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","ws"]]]]],[]]],["Type","SDSWriteProjection",[["Var","rs"],["Var","ws"],["Var","wt"]]],[]],"fe_representation":"SDSBlindWrite :: (wt -> MaybeError TaskException (Maybe ws)) -> SDSWriteProjection rs ws wt"},["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",21],["Nothing"],"SDSConstRead"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","rt"]],["Type","SDSReadProjection",[["Var","rs"],["Var","rt"]]],[]],"fe_representation":"SDSConstRead :: rt -> SDSReadProjection rs rt"},["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",48],["Just",450],"staticResourceService"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]]],["Type","WebService",[["Var","r"],["Var","w"]]],[]],"fe_representation":"staticResourceService :: [String] -> WebService r w"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",21],["Nothing"],"SDSLensRead"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","rs"]],["Type","MaybeError",[["Type","TaskException",[]],["Var","rt"]]],[]]],["Type","SDSReadProjection",[["Var","rs"],["Var","rt"]]],[]],"fe_representation":"SDSLensRead :: (rs -> MaybeError TaskException rt) -> SDSReadProjection rs rt"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",25],["Nothing"],"SDSLensWrite"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","rs"]],["Func",[["Var","wt"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","ws"]]]]],[]],[]]],["Type","SDSWriteProjection",[["Var","rs"],["Var","ws"],["Var","wt"]]],[]],"fe_representation":"SDSLensWrite :: (rs -> wt -> MaybeError TaskException (Maybe ws)) -> SDSWriteProjection rs ws wt"},["Tip"],["Tip"]]]]],["Bin",47,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",136],["Just",185],"mapLens"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","RWShared",[["Type","_Unit",[]],["Type","Map",[["Var","a"],["Var","b"]]],["Type","Map",[["Var","a"],["Var","b"]]]]],["Type","Maybe",[["Var","b"]]]],["Type","RWShared",[["Var","a"],["Var","b"],["Var","b"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"mapLens :: !String !(RWShared () (Map a b) (Map a b)) !(Maybe b) -> RWShared a b b | < a & == a","fe_documentation":["FunctionDoc",["Just","Convenience lens for lookups in Maps. Can use a default value on a missing key, gives an error if no default is supplied."],[],[],["Nothing"]]},["Bin",31,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",72],["Just",86],"|+<"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","rx"],["Var","wx"]]],["Type","RWShared",[["Var","p"],["Var","ry"],["Var","wy"]]]],["Type","RWShared",[["Var","p"],["Type","_Tuple2",[["Var","rx"],["Var","ry"]]],["Var","wy"]]],[[["Class","iTask"],["Var","p"]]]],"fe_priority":["LeftAssoc",6],"fe_representation":"(|+<) infixl 6 :: !(RWShared p rx wx) !(RWShared p ry wy) -> RWShared p (rx,ry) wy | iTask p"},["Bin",15,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",55],["Just",52],"mapReadError"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Type","MaybeError",[["Type","TaskException",[]],["Var","r`"]]],[]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","RWShared",[["Var","p"],["Var","r`"],["Var","w"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"mapReadError :: !(r -> MaybeError TaskException r`) !(RWShared p r w) -> RWShared p r` w | iTask p"},["Bin",7,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",40],["Just",35],"sdsSplit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Var","p"]],["Type","_Tuple2",[["Var","ps"],["Var","pn"]]],[]],["Func",[["Var","pn"]],["Func",[["Var","rs"]],["Var","r"],[]],[]],["Func",[["Var","pn"]],["Func",[["Var","rs"]],["Func",[["Var","w"]],["Type","_Tuple2",[["Var","ws"],["Type","SDSNotifyPred",[["Var","pn"]]]]],[]],[]],[]],["Type","RWShared",[["Var","ps"],["Var","rs"],["Var","ws"]]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","ps"]],[["Class","iTask"],["Var","pn"]]]],"fe_representation":"sdsSplit :: !String !(p -> (ps,pn)) !(pn -> rs -> r) !(pn -> rs -> w -> (ws,SDSNotifyPred pn)) !(RWShared ps rs ws) -> RWShared p r w | iTask ps & iTask pn"},["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",34],["Just",18],"sdsProject"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SDSReadProjection",[["Var","rs"],["Var","r"]]],["Type","SDSWriteProjection",[["Var","rs"],["Var","ws"],["Var","w"]]],["Type","RWShared",[["Var","p"],["Var","rs"],["Var","ws"]]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"sdsProject :: !(SDSReadProjection rs r) !(SDSWriteProjection rs ws w) !(RWShared p rs ws) -> RWShared p r w | iTask p"},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",31],["Just",15],"sdsFocus"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","p"],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","RWShared",[["Var","p`"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"sdsFocus :: !p !(RWShared p r w) -> RWShared p` r w | iTask p"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",37],["Just",32],"sdsTranslate"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Var","p"]],["Var","ps"],[]],["Type","RWShared",[["Var","ps"],["Var","r"],["Var","w"]]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","ps"]]]],"fe_representation":"sdsTranslate :: !String !(p -> ps) !(RWShared ps r w) -> RWShared p r w | iTask ps"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",52],["Just",46],"mapWrite"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","w`"]],["Func",[["Var","r"]],["Type","Maybe",[["Var","w"]]],[]],[]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w`"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"mapWrite :: !(w` -> r -> Maybe w) !(RWShared p r w) -> RWShared p r w` | iTask p"},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",51],["Just",43],"mapRead"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Var","r`"],[]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","RWShared",[["Var","p"],["Var","r`"],["Var","w"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"mapRead :: !(r -> r`) !(RWShared p r w) -> RWShared p r` w | iTask p","fe_documentation":["FunctionDoc",["Just","Maps the read type, the write type or both of a shared reference to another one using a functional mapping.\nThe function for mapping the write type also gets the current read-value as input\nmaking it possible to change only parts of the datastructure."],["A functional mapping","A reference to shared data"],[],["Just","A reference to shared data of another type"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",53],["Just",49],"mapReadWrite"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Func",[["Var","r"]],["Var","r`"],[]],["Func",[["Var","w`"]],["Func",[["Var","r"]],["Type","Maybe",[["Var","w"]]],[]],[]]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","RWShared",[["Var","p"],["Var","r`"],["Var","w`"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"mapReadWrite :: !(!r -> r`,!w` -> r -> Maybe w) !(RWShared p r w) -> RWShared p r` w` | iTask p"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",61],["Just",73],"toDynamic"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","RWShared",[["Var","p"],["Type","Dynamic",[]],["Type","Dynamic",[]]]],[[["Class","iTask"],["Var","p"]],[["Class","TC"],["Var","r"]],[["Class","TC"],["Var","w"]]]],"fe_representation":"toDynamic :: !(RWShared p r w) -> RWShared p Dynamic Dynamic | iTask p & TC r & TC w"},["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",57],["Just",58],"mapReadWriteError"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Func",[["Var","r"]],["Type","MaybeError",[["Type","TaskException",[]],["Var","r`"]]],[]],["Func",[["Var","w`"]],["Func",[["Var","r"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","w"]]]]],[]],[]]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","RWShared",[["Var","p"],["Var","r`"],["Var","w`"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"mapReadWriteError :: !(!r -> MaybeError TaskException r`,!w` -> r -> MaybeError TaskException (Maybe w)) !(RWShared p r w) -> RWShared p r` w` | iTask p"},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",56],["Just",55],"mapWriteError"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","w`"]],["Func",[["Var","r"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","w"]]]]],[]],[]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w`"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"mapWriteError :: !(w` -> r -> MaybeError TaskException (Maybe w)) !(RWShared p r w) -> RWShared p r w` | iTask p"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",59],["Just",70],"toReadOnly"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","ROShared",[["Var","p"],["Var","r"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"toReadOnly :: !(RWShared p r w) -> ROShared p r | iTask p"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",70],["Just",77],">+<"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","rx"],["Var","wx"]]],["Type","RWShared",[["Var","p"],["Var","ry"],["Var","wy"]]]],["Type","RWShared",[["Var","p"],["Type","_Tuple2",[["Var","rx"],["Var","ry"]]],["Type","_Tuple2",[["Var","wx"],["Var","wy"]]]]],[[["Class","iTask"],["Var","p"]]]],"fe_priority":["LeftAssoc",6],"fe_representation":"(>+<) infixl 6 :: !(RWShared p rx wx) !(RWShared p ry wy) -> RWShared p (rx,ry) (wx,wy) | iTask p"},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",64],["Just",61],"mapSingle"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Type","_List",[["Var","r"]]],["Type","_List",[["Var","w"]]]]]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"mapSingle :: !(RWShared p [r] [w]) -> RWShared p r w | iTask p"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",71],["Just",83],">+|"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","rx"],["Var","wx"]]],["Type","RWShared",[["Var","p"],["Var","ry"],["Var","wy"]]]],["Type","RWShared",[["Var","p"],["Type","_Tuple2",[["Var","rx"],["Var","ry"]]],["Var","wx"]]],[[["Class","iTask"],["Var","p"]]]],"fe_priority":["LeftAssoc",6],"fe_representation":"(>+|) infixl 6 :: !(RWShared p rx wx) !(RWShared p ry wy) -> RWShared p (rx,ry) wx | iTask p"},["Tip"],["Tip"]]]]],["Bin",15,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",100],["Just",118],"taskListMeta"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SharedTaskList",[["Var","a"]]]],["Type","ReadWriteShared",[["Type","_List",[["Type","TaskListItem",[["Var","a"]]]]],["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","TaskAttributes",[]]]]]]]],[]],"fe_representation":"taskListMeta :: !(SharedTaskList a) -> ReadWriteShared [TaskListItem a] [(TaskId,TaskAttributes)]","fe_documentation":["FunctionDoc",["Just","Get the meta data sds of a task list"],[],[],["Nothing"]]},["Bin",7,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",77],["Just",99],"|*<"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","rx"],["Var","wx"]]],["Type","RWShared",[["Var","p"],["Var","ry"],["Var","wy"]]]],["Type","RWShared",[["Var","p"],["Type","_Tuple2",[["Var","rx"],["Var","ry"]]],["Var","wy"]]],[[["Class","iTask"],["Var","p"]]]],"fe_priority":["LeftAssoc",6],"fe_representation":"(|*<) infixl 6 :: !(RWShared p rx wx) !(RWShared p ry wy) -> RWShared p (rx,ry) wy | iTask p"},["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",75],["Just",93],">*<"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","rx"],["Var","wx"]]],["Type","RWShared",[["Var","p"],["Var","ry"],["Var","wy"]]]],["Type","RWShared",[["Var","p"],["Type","_Tuple2",[["Var","rx"],["Var","ry"]]],["Type","_Tuple2",[["Var","wx"],["Var","wy"]]]]],[[["Class","iTask"],["Var","p"]]]],"fe_priority":["LeftAssoc",6],"fe_representation":"(>*<) infixl 6 :: !(RWShared p rx wx) !(RWShared p ry wy) -> RWShared p (rx,ry) (wx,wy) | iTask p"},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",73],["Just",89],"|+|"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","rx"],["Var","wx"]]],["Type","RWShared",[["Var","p"],["Var","ry"],["Var","wy"]]]],["Type","RWShared",[["Var","p"],["Type","_Tuple2",[["Var","rx"],["Var","ry"]]],["Type","_Unit",[]]]],[[["Class","iTask"],["Var","p"]]]],"fe_priority":["LeftAssoc",6],"fe_representation":"(|+|) infixl 6 :: !(RWShared p rx wx) !(RWShared p ry wy) -> RWShared p (rx,ry) () | iTask p"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",76],["Just",96],">*|"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","rx"],["Var","wx"]]],["Type","RWShared",[["Var","p"],["Var","ry"],["Var","wy"]]]],["Type","RWShared",[["Var","p"],["Type","_Tuple2",[["Var","rx"],["Var","ry"]]],["Var","wx"]]],[[["Class","iTask"],["Var","p"]]]],"fe_priority":["LeftAssoc",6],"fe_representation":"(>*|) infixl 6 :: !(RWShared p rx wx) !(RWShared p ry wy) -> RWShared p (rx,ry) wx | iTask p"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",90],["Just",105],"symmetricLens"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Func",[["Var","b"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Type","RWShared",[["Var","p"],["Var","a"],["Var","a"]]],["Type","RWShared",[["Var","p"],["Var","b"],["Var","b"]]]],["Type","_Tuple2",[["Type","RWShared",[["Var","p"],["Var","a"],["Var","a"]]],["Type","RWShared",[["Var","p"],["Var","b"],["Var","b"]]]]],[[["Class","iTask"],["Var","p"]]]],"fe_representation":"symmetricLens :: !(a -> b -> b) !(b -> a -> a) !(RWShared p a a) !(RWShared p b b) -> (!RWShared p a a,!RWShared p b b) | iTask p","fe_documentation":["FunctionDoc",["Just","Puts a symmetric lens between two symmetric shared data sources.\nChanges of one also affects the other one."],["putr: used to map changes of shared a to shared b","putl: used to map changes of shared b to shared a","SymmetricShared a","SymmetricShared b","RWShared references of the same type with symmetric lens between them"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",78],["Just",102],"|*|"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","rx"],["Var","wx"]]],["Type","RWShared",[["Var","p"],["Var","ry"],["Var","wy"]]]],["Type","RWShared",[["Var","p"],["Type","_Tuple2",[["Var","rx"],["Var","ry"]]],["Type","_Unit",[]]]],[[["Class","iTask"],["Var","p"]]]],"fe_priority":["LeftAssoc",6],"fe_representation":"(|*|) infixl 6 :: !(RWShared p rx wx) !(RWShared p ry wy) -> RWShared p (rx,ry) () | iTask p"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",96],["Just",113],"taskListState"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SharedTaskList",[["Var","a"]]]],["Type","ReadOnlyShared",[["Type","_List",[["Type","TaskValue",[["Var","a"]]]]]]],[]],"fe_representation":"taskListState :: !(SharedTaskList a) -> ReadOnlyShared [TaskValue a]","fe_documentation":["FunctionDoc",["Just","Get the shared state of a task list"],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",116],["Just",141],"taskListSelfManagement"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SharedTaskList",[["Var","a"]]]],["Type","Shared",[["Type","TaskAttributes",[]]]],[]],"fe_representation":"taskListSelfManagement :: !(SharedTaskList a) -> Shared TaskAttributes","fe_documentation":["FunctionDoc",["Just","Get the current tasks management meta data share"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",108],["Just",129],"taskListEntryMeta"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SharedTaskList",[["Var","a"]]]],["Type","RWShared",[["Type","TaskId",[]],["Type","TaskListItem",[["Var","a"]]],["Type","TaskAttributes",[]]]],[]],"fe_representation":"taskListEntryMeta :: !(SharedTaskList a) -> RWShared TaskId (TaskListItem a) TaskAttributes","fe_documentation":["FunctionDoc",["Just","Get the meta data sds for a specific entry in a task list"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",104],["Just",123],"taskListIds"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SharedTaskList",[["Var","a"]]]],["Type","ROShared",[["Type","_Unit",[]],["Type","_List",[["Type","TaskId",[]]]]]],[]],"fe_representation":"taskListIds :: !(SharedTaskList a) -> ROShared () [TaskId]","fe_documentation":["FunctionDoc",["Just","Get the list of task id's in a task list"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",112],["Just",136],"taskListSelfId"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SharedTaskList",[["Var","a"]]]],["Type","ReadOnlyShared",[["Type","TaskId",[]]]],[]],"fe_representation":"taskListSelfId :: !(SharedTaskList a) -> ReadOnlyShared TaskId"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",126],["Just",163],"taskListItemProgress"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SharedTaskList",[["Var","a"]]]],["Type","ROShared",[["Type","Either",[["Type","Int",[]],["Type","TaskId",[]]]],["Type","InstanceProgress",[]]]],[]],"fe_representation":"taskListItemProgress :: !(SharedTaskList a) -> ROShared (Either Int TaskId) InstanceProgress","fe_documentation":["FunctionDoc",["Just","Get the progress of a specific task in the list\nThe paramater is either the index in the list or a specific task id"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",121],["Just",153],"taskListItemValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","SharedTaskList",[["Var","a"]]]],["Type","ROShared",[["Type","Either",[["Type","Int",[]],["Type","TaskId",[]]]],["Type","TaskValue",[["Var","a"]]]]],[]],"fe_representation":"taskListItemValue :: !(SharedTaskList a) -> ROShared (Either Int TaskId) (TaskValue a)","fe_documentation":["FunctionDoc",["Just","Get the value of a specific task in the list\nThe paramater is either the index in the list or a specific task id"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",131],["Just",173],"mapMaybeLens"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","RWShared",[["Type","_Unit",[]],["Type","Map",[["Var","a"],["Var","b"]]],["Type","Map",[["Var","a"],["Var","b"]]]]]],["Type","RWShared",[["Var","a"],["Type","Maybe",[["Var","b"]]],["Var","b"]]],[[["Class","<"],["Var","a"]],[["Class","=="],["Var","a"]]]],"fe_representation":"mapMaybeLens :: !String !(RWShared () (Map a b) (Map a b)) -> RWShared a (Maybe b) b | < a & == a","fe_documentation":["FunctionDoc",["Just","Convenience lens for lookups in Maps. Returns Nothing on a missing key."],[],[],["Nothing"]]},["Tip"],["Tip"]]]]]],["Bin",15,["Location","iTasks","iTasks.SDS.Definition",["Just",19],["Nothing"],"SDSParallel"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","RWShared",[["Var","p1"],["Var","r1"],["Var","w1"]]],["Type","RWShared",[["Var","p2"],["Var","r2"],["Var","w2"]]],["Type","SDSParallel",[["Var","p1"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","p"],["Var","r"],["Var","w"]]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","p1"]],[["Class","iTask"],["Var","p2"]]]],"fe_representation":"SDSParallel :: (RWShared p1 r1 w1) (RWShared p2 r2 w2) (SDSParallel p1 r1 w1 p2 r2 w2 p r w) -> SDS p r w | iTask p1 & iTask p2"},["Bin",7,["Location","iTasks","iTasks.SDS.Combinators.Core",["Just",25],["Just",17],"sdsParallel"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Var","p"]],["Type","_Tuple2",[["Var","p1"],["Var","p2"]]],[]],["Func",[["Type","_Tuple2",[["Var","r1"],["Var","r2"]]]],["Var","r"],[]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r1"],["Var","w1"]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r2"],["Var","w2"]]],["Type","SDS",[["Var","p1"],["Var","r1"],["Var","w1"]]],["Type","SDS",[["Var","p2"],["Var","r2"],["Var","w2"]]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","p1"]],[["Class","iTask"],["Var","p2"]]]],"fe_representation":"sdsParallel :: !String !(p -> (p1,p2)) !((r1,r2) -> r) !(SDSLensWrite p w r1 w1) !(SDSLensWrite p w r2 w2) !(SDS p1 r1 w1) !(SDS p2 r2 w2) -> SDS p r w | iTask p1 & iTask p2"},["Bin",3,["Location","iTasks","iTasks.SDS.Combinators.Core",["Just",17],["Just",11],"sdsLens"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Var","p"]],["Var","ps"],[]],["Type","SDSLensRead",[["Var","p"],["Var","r"],["Var","rs"]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","rs"],["Var","ws"]]],["Type","SDSLensNotify",[["Var","p"],["Var","w"],["Var","rs"]]],["Type","SDS",[["Var","ps"],["Var","rs"],["Var","ws"]]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","ps"]]]],"fe_representation":"sdsLens :: !String (p -> ps) (SDSLensRead p r rs) (SDSLensWrite p w rs ws) (SDSLensNotify p w rs) !(SDS ps rs ws) -> SDS p r w | iTask ps"},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",141],["Just",202],"intMapLens"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","RWShared",[["Type","_Unit",[]],["Type","IntMap",[["Var","a"]]],["Type","IntMap",[["Var","a"]]]]],["Type","Maybe",[["Var","a"]]]],["Type","RWShared",[["Type","Int",[]],["Var","a"],["Var","a"]]],[]],"fe_representation":"intMapLens :: !String !(RWShared () (IntMap a) (IntMap a)) !(Maybe a) -> RWShared Int a a","fe_documentation":["FunctionDoc",["Just","Convenience lens for lookups in IntMaps. Can use a default value on a missing key, gives an error if no default is supplied."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Core",["Just",22],["Just",14],"sdsSelect"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Var","p"]],["Type","Either",[["Var","p1"],["Var","p2"]]],[]],["Func",[["Var","p1"]],["Func",[["Var","r"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p2"]]],[]],[]],[]],["Func",[["Var","p2"]],["Func",[["Var","r"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p1"]]],[]],[]],[]],["Type","SDS",[["Var","p1"],["Var","r"],["Var","w"]]],["Type","SDS",[["Var","p2"],["Var","r"],["Var","w"]]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","p1"]],[["Class","iTask"],["Var","p2"]]]],"fe_representation":"sdsSelect :: !String !(p -> Either p1 p2) !(p1 -> r -> w -> SDSNotifyPred p2) !(p2 -> r -> w -> SDSNotifyPred p1) !(SDS p1 r w) !(SDS p2 r w) -> SDS p r w | iTask p1 & iTask p2"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",19],["Nothing"],"SDSDynamic"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","p"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[]],"fe_representation":"SDSDynamic :: (p -> *IWorld -> *(MaybeError TaskException (RWShared p r w), *IWorld)) -> SDS p r w"},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Core",["Just",28],["Just",20],"sdsSequence"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Func",[["Var","p"]],["Func",[["Var","r1"]],["Var","p2"],[]],[]],["Func",[["Type","_Tuple2",[["Var","r1"],["Var","r2"]]]],["Var","r"],[]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r1"],["Var","w1"]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r2"],["Var","w2"]]],["Type","SDS",[["Var","p"],["Var","r1"],["Var","w1"]]],["Type","SDS",[["Var","p2"],["Var","r2"],["Var","w2"]]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","p2"]]]],"fe_representation":"sdsSequence :: !String !(p -> r1 -> p2) !((r1,r2) -> r) !(SDSLensWrite p w r1 w1) !(SDSLensWrite p w r2 w2) !(SDS p r1 w1) !(SDS p2 r2 w2) -> SDS p r w | iTask p2"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",19],["Nothing"],"SDSLens"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","RWShared",[["Var","ps"],["Var","rs"],["Var","ws"]]],["Type","SDSLens",[["Var","p"],["Var","r"],["Var","w"],["Var","ps"],["Var","rs"],["Var","ws"]]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","ps"]]]],"fe_representation":"SDSLens :: (RWShared ps rs ws) (SDSLens p r w ps rs ws) -> SDS p r w | iTask ps"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.SDS.Definition",["Just",44],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSource",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","String",[]],[]],"fe_representation":".name :: (SDSSource p r w) -> String"},["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",19],["Nothing"],"SDSSequence"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","r1"],["Var","w1"]]],["Type","RWShared",[["Var","p2"],["Var","r2"],["Var","w2"]]],["Type","SDSSequence",[["Var","p"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","r"],["Var","w"]]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","p2"]]]],"fe_representation":"SDSSequence :: (RWShared p r1 w1) (RWShared p2 r2 w2) (SDSSequence p r1 w1 p2 r2 w2 r w) -> SDS p r w | iTask p2"},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",19],["Nothing"],"SDSSelect"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","RWShared",[["Var","p1"],["Var","r"],["Var","w"]]],["Type","RWShared",[["Var","p2"],["Var","r"],["Var","w"]]],["Type","SDSSelect",[["Var","p"],["Var","p1"],["Var","p2"],["Var","r"],["Var","w"]]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[[["Class","iTask"],["Var","p1"]],[["Class","iTask"],["Var","p2"]]]],"fe_representation":"SDSSelect :: (RWShared p1 r w) (RWShared p2 r w) (SDSSelect p p1 p2 r w) -> SDS p r w | iTask p1 & iTask p2"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",19],["Nothing"],"SDSSource"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","SDSSource",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]],[]],"fe_representation":"SDSSource :: (SDSSource p r w) -> SDS p r w"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",44],["Nothing"],"write"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSource",[["Var","p"],["Var","r"],["Var","w"]]]],["Func",[["Var","p"]],["Func",[["Var","w"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","SDSNotifyPred",[["Var","p"]]]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],"fe_representation":".write :: (SDSSource p r w) -> p -> w -> *IWorld -> *(MaybeError TaskException (SDSNotifyPred p), *IWorld)"},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",44],["Nothing"],"read"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSource",[["Var","p"],["Var","r"],["Var","w"]]]],["Func",[["Var","p"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Var","r"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],"fe_representation":".read :: (SDSSource p r w) -> p -> *IWorld -> *(MaybeError TaskException r, *IWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",51],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSLens",[["Var","p"],["Var","r"],["Var","w"],["Var","ps"],["Var","rs"],["Var","ws"]]]],["Type","String",[]],[]],"fe_representation":".name :: (SDSLens p r w ps rs ws) -> String"},["Tip"],["Tip"]]]]]]],["Bin",118,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIDebug"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIDebug :: UINodeType"},["Bin",84,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"lastEvent"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","Maybe",[["Type","Timestamp",[]]]],[]],"fe_representation":".lastEvent :: TaskInstance -> Maybe Timestamp","fe_documentation":["FunctionDoc",["Just","When was the last event on this task"],[],[],["Nothing"]]},["Bin",38,["Location","iTasks","iTasks.SDS.Definition",["Just",80],["Nothing"],"read"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSParallel",[["Var","p1"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","p"],["Var","r"],["Var","w"]]]],["Func",[["Type","_Tuple2",[["Var","r1"],["Var","r2"]]]],["Var","r"],[]],[]],"fe_representation":".read :: (SDSParallel p1 r1 w1 p2 r2 w2 p r w) -> (r1, r2) -> r"},["Bin",15,["Location","iTasks","iTasks.SDS.Definition",["Just",67],["Nothing"],"SDSNotify"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","p"]],["Func",[["Var","rs"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p"]]],[]],[]],[]]],["Type","SDSLensNotify",[["Var","p"],["Var","w"],["Var","rs"]]],[]],"fe_representation":"SDSNotify :: (p -> rs -> w -> SDSNotifyPred p) -> SDSLensNotify p w rs"},["Bin",7,["Location","iTasks","iTasks.SDS.Definition",["Just",51],["Nothing"],"write"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSLens",[["Var","p"],["Var","r"],["Var","w"],["Var","ps"],["Var","rs"],["Var","ws"]]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","rs"],["Var","ws"]]],[]],"fe_representation":".write :: (SDSLens p r w ps rs ws) -> SDSLensWrite p w rs ws"},["Bin",2,["Location","iTasks","iTasks.SDS.Definition",["Just",51],["Nothing"],"read"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSLens",[["Var","p"],["Var","r"],["Var","w"],["Var","ps"],["Var","rs"],["Var","ws"]]]],["Type","SDSLensRead",[["Var","p"],["Var","r"],["Var","rs"]]],[]],"fe_representation":".read :: (SDSLens p r w ps rs ws) -> SDSLensRead p r rs"},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",51],["Nothing"],"param"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSLens",[["Var","p"],["Var","r"],["Var","w"],["Var","ps"],["Var","rs"],["Var","ws"]]]],["Func",[["Var","p"]],["Var","ps"],[]],[]],"fe_representation":".param :: (SDSLens p r w ps rs ws) -> p -> ps"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","iTasks","iTasks.SDS.Definition",["Just",63],["Nothing"],"SDSWrite"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","p"]],["Func",[["Var","rs"]],["Func",[["Var","w"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","ws"]]]]],[]],[]],[]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","rs"],["Var","ws"]]],[]],"fe_representation":"SDSWrite :: (p -> rs -> w -> MaybeError TaskException (Maybe ws)) -> SDSLensWrite p w rs ws"},["Bin",2,["Location","iTasks","iTasks.SDS.Definition",["Just",59],["Nothing"],"SDSReadConst"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","p"]],["Var","r"],[]]],["Type","SDSLensRead",[["Var","p"],["Var","r"],["Var","rs"]]],[]],"fe_representation":"SDSReadConst :: (p -> r) -> SDSLensRead p r rs"},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",59],["Nothing"],"SDSRead"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","p"]],["Func",[["Var","rs"]],["Type","MaybeError",[["Type","TaskException",[]],["Var","r"]]],[]],[]]],["Type","SDSLensRead",[["Var","p"],["Var","r"],["Var","rs"]]],[]],"fe_representation":"SDSRead :: (p -> rs -> MaybeError TaskException r) -> SDSLensRead p r rs"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",63],["Nothing"],"SDSWriteConst"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","p"]],["Func",[["Var","w"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","ws"]]]]],[]],[]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","rs"],["Var","ws"]]],[]],"fe_representation":"SDSWriteConst :: (p -> w -> MaybeError TaskException (Maybe ws)) -> SDSLensWrite p w rs ws"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.SDS.Definition",["Just",72],["Nothing"],"notifyr"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSelect",[["Var","p"],["Var","p1"],["Var","p2"],["Var","r"],["Var","w"]]]],["Func",[["Var","p2"]],["Func",[["Var","r"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p1"]]],[]],[]],[]],[]],"fe_representation":".notifyr :: (SDSSelect p p1 p2 r w) -> p2 -> r -> w -> SDSNotifyPred p1"},["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",72],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSelect",[["Var","p"],["Var","p1"],["Var","p2"],["Var","r"],["Var","w"]]]],["Type","String",[]],[]],"fe_representation":".name :: (SDSSelect p p1 p2 r w) -> String"},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",67],["Nothing"],"SDSNotifyConst"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","p"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p"]]],[]],[]]],["Type","SDSLensNotify",[["Var","p"],["Var","w"],["Var","rs"]]],[]],"fe_representation":"SDSNotifyConst :: (p -> w -> SDSNotifyPred p) -> SDSLensNotify p w rs"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",72],["Nothing"],"notifyl"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSelect",[["Var","p"],["Var","p1"],["Var","p2"],["Var","r"],["Var","w"]]]],["Func",[["Var","p1"]],["Func",[["Var","r"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p2"]]],[]],[]],[]],[]],"fe_representation":".notifyl :: (SDSSelect p p1 p2 r w) -> p1 -> r -> w -> SDSNotifyPred p2"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",80],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSParallel",[["Var","p1"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","p"],["Var","r"],["Var","w"]]]],["Type","String",[]],[]],"fe_representation":".name :: (SDSParallel p1 r1 w1 p2 r2 w2 p r w) -> String"},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",72],["Nothing"],"select"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSelect",[["Var","p"],["Var","p1"],["Var","p2"],["Var","r"],["Var","w"]]]],["Func",[["Var","p"]],["Type","Either",[["Var","p1"],["Var","p2"]]],[]],[]],"fe_representation":".select :: (SDSSelect p p1 p2 r w) -> p -> Either p1 p2"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",80],["Nothing"],"param"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSParallel",[["Var","p1"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","p"],["Var","r"],["Var","w"]]]],["Func",[["Var","p"]],["Type","_Tuple2",[["Var","p1"],["Var","p2"]]],[]],[]],"fe_representation":".param :: (SDSParallel p1 r1 w1 p2 r2 w2 p r w) -> p -> (p1, p2)"},["Tip"],["Tip"]]]]],["Bin",22,["Location","iTasks","iTasks.SDS.Sources.Store",["Just",19],["Just",25],"storeNamespaces"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","_List",[["Type","String",[]]]],["Type","_Unit",[]]]],[]],"fe_representation":"storeNamespaces :: SDS () [String] ()"},["Bin",14,["Location","iTasks","iTasks.SDS.Definition",["Just",90],["Nothing"],"writer"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSequence",[["Var","p"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","r"],["Var","w"]]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r2"],["Var","w2"]]],[]],"fe_representation":".writer :: (SDSSequence p r1 w1 p2 r2 w2 r w) -> SDSLensWrite p w r2 w2"},["Bin",6,["Location","iTasks","iTasks.SDS.Definition",["Just",90],["Nothing"],"param"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSequence",[["Var","p"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","r"],["Var","w"]]]],["Func",[["Var","p"]],["Func",[["Var","r1"]],["Var","p2"],[]],[]],[]],"fe_representation":".param :: (SDSSequence p r1 w1 p2 r2 w2 r w) -> p -> r1 -> p2"},["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",80],["Nothing"],"writer"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSParallel",[["Var","p1"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","p"],["Var","r"],["Var","w"]]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r2"],["Var","w2"]]],[]],"fe_representation":".writer :: (SDSParallel p1 r1 w1 p2 r2 w2 p r w) -> SDSLensWrite p w r2 w2"},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",80],["Nothing"],"writel"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSParallel",[["Var","p1"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","p"],["Var","r"],["Var","w"]]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r1"],["Var","w1"]]],[]],"fe_representation":".writel :: (SDSParallel p1 r1 w1 p2 r2 w2 p r w) -> SDSLensWrite p w r1 w1"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",90],["Nothing"],"name"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSequence",[["Var","p"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","r"],["Var","w"]]]],["Type","String",[]],[]],"fe_representation":".name :: (SDSSequence p r1 w1 p2 r2 w2 r w) -> String"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.SDS.Definition",["Just",90],["Nothing"],"writel"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSequence",[["Var","p"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","r"],["Var","w"]]]],["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r1"],["Var","w1"]]],[]],"fe_representation":".writel :: (SDSSequence p r1 w1 p2 r2 w2 r w) -> SDSLensWrite p w r1 w1"},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",90],["Nothing"],"read"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","SDSSequence",[["Var","p"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","r"],["Var","w"]]]],["Func",[["Type","_Tuple2",[["Var","r1"],["Var","r2"]]]],["Var","r"],[]],[]],"fe_representation":".read :: (SDSSequence p r1 w1 p2 r2 w2 r w) -> (r1, r2) -> r"},["Tip"],["Tip"]],["Tip"]]],["Bin",7,["Location","iTasks","iTasks.SDS.Sources.Core",["Just",18],["Just",25],"externalFile"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","FilePath",[]],["Type","String",[]],["Type","String",[]]]],[]],"fe_representation":"externalFile :: SDS FilePath String String"},["Bin",3,["Location","iTasks","iTasks.SDS.Sources.Core",["Just",12],["Just",15],"nullShare"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Var","p"],["Type","_Unit",[]],["Var","a"]]],[]],"fe_representation":"nullShare :: SDS p () a"},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.Core",["Just",9],["Just",12],"constShare"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","SDS",[["Var","p"],["Var","a"],["Type","_Unit",[]]]],[]],"fe_representation":"constShare :: !a -> SDS p a ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Sources.Core",["Just",15],["Just",19],"randomInt"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","Int",[]],["Type","_Unit",[]]]],[]],"fe_representation":"randomInt :: SDS () Int ()"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Sources.Store",["Just",15],["Just",21],"sharedStore"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Var","a"]],["Type","SDS",[["Type","_Unit",[]],["Var","a"],["Var","a"]]],[[["Class","TC"],["Var","a"]],[["Generic","JSONEncode",["KindConst"]],["Var","a"]],[["Generic","JSONDecode",["KindConst"]],["Var","a"]]]],"fe_representation":"sharedStore :: !String !a -> SDS () a a | JSONEncode{|*|} a & JSONDecode{|*|} a & TC a"},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.Core",["Just",21],["Just",46],"externalDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","FilePath",[]],["Type","_List",[["Type","FilePath",[]]]],["Type","_Unit",[]]]],[]],"fe_representation":"externalDirectory :: SDS FilePath [FilePath] ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Sources.Store",["Just",16],["Just",12],"sharedDynamicStore"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Var","a"]],["Type","SDS",[["Type","_Unit",[]],["Var","a"],["Var","a"]]],[[["Class","TC"],["Var","a"]]]],"fe_representation":"sharedDynamicStore :: !String !a -> SDS () a a | TC a"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"firstEvent"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","Maybe",[["Type","Timestamp",[]]]],[]],"fe_representation":".firstEvent :: TaskInstance -> Maybe Timestamp","fe_documentation":["FunctionDoc",["Just","When was the first work done on this task"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"attributes"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","TaskAttributes",[]],[]],"fe_representation":".attributes :: TaskInstance -> TaskAttributes","fe_documentation":["FunctionDoc",["Just","Arbitrary meta-data"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.Store",["Just",20],["Just",30],"storeNames"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","String",[]],["Type","_List",[["Type","String",[]]]],["Type","_Unit",[]]]],[]],"fe_representation":"storeNames :: SDS String [String] ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"build"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","String",[]],[]],"fe_representation":".build :: TaskInstance -> String","fe_documentation":["FunctionDoc",["Just","Application build version when the instance was created"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"instanceNo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","InstanceNo",[]],[]],"fe_representation":".instanceNo :: TaskInstance -> InstanceNo","fe_documentation":["FunctionDoc",["Just","Unique global identification"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"instanceKey"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","InstanceKey",[]],[]],"fe_representation":".instanceKey :: TaskInstance -> InstanceKey","fe_documentation":["FunctionDoc",["Just","Random string that a client needs to provide to access the task instance"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"issuedAt"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","Timestamp",[]],[]],"fe_representation":".issuedAt :: TaskInstance -> Timestamp","fe_documentation":["FunctionDoc",["Just","When was the task created"],[],[],["Nothing"]]},["Tip"],["Tip"]]]]]],["Bin",45,["Location","iTasks","iTasks.UI.Definition",["Just",34],["Nothing"],"ChangeUI"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","UIAttributeChange",[]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","UIChildChange",[]]]]]]],["Type","UIChange",[]],[]],"fe_representation":"ChangeUI :: [UIAttributeChange] [(Int, UIChildChange)] -> UIChange"},["Bin",25,["Location","iTasks","iTasks.SDS.Sources.System",["Just",57],["Just",86],"detachedTaskInstances"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","_List",[["Type","TaskInstance",[]]]],["Type","_Unit",[]]]],[]],"fe_representation":"detachedTaskInstances :: SDS () [TaskInstance] ()"},["Bin",17,["Location","iTasks","iTasks.SDS.Sources.System",["Just",42],["Just",37],"currentTimestamp"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","Timestamp",[]],["Type","_Unit",[]]]],[]],"fe_representation":"currentTimestamp :: SDS () Timestamp ()"},["Bin",9,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"value"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","ValueStatus",[]],[]],"fe_representation":".value :: TaskInstance -> ValueStatus","fe_documentation":["FunctionDoc",["Just","Status of the task value"],[],[],["Nothing"]]},["Bin",2,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"session"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","Bool",[]],[]],"fe_representation":".session :: TaskInstance -> Bool","fe_documentation":["FunctionDoc",["Just","Is this a session"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"listId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskInstance",[]]],["Type","TaskId",[]],[]],"fe_representation":".listId :: TaskInstance -> TaskId","fe_documentation":["FunctionDoc",["Just","Reference to parent tasklist"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]],["Bin",6,["Location","iTasks","iTasks.SDS.Sources.System",["Just",34],["Just",25],"currentDate"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","Date",[]],["Type","_Unit",[]]]],[]],"fe_representation":"currentDate :: SDS () Date ()"},["Bin",2,["Location","iTasks","iTasks.SDS.Sources.System",["Just",33],["Just",22],"currentTime"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","Time",[]],["Type","_Unit",[]]]],[]],"fe_representation":"currentTime :: SDS () Time ()"},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",32],["Just",19],"currentDateTime"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","DateTime",[]],["Type","_Unit",[]]]],[]],"fe_representation":"currentDateTime :: SDS () DateTime ()"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.SDS.Sources.System",["Just",38],["Just",31],"currentUTCTime"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","Time",[]],["Type","_Unit",[]]]],[]],"fe_representation":"currentUTCTime :: SDS () Time ()"},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",37],["Just",28],"currentUTCDateTime"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","DateTime",[]],["Type","_Unit",[]]]],[]],"fe_representation":"currentUTCDateTime :: SDS () DateTime ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",39],["Just",34],"currentUTCDate"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","Date",[]],["Type","_Unit",[]]]],[]],"fe_representation":"currentUTCDate :: SDS () Date ()"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.SDS.Sources.System",["Just",51],["Just",128],"currentTopTask"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","TaskId",[]],["Type","_Unit",[]]]],[]],"fe_representation":"currentTopTask :: SDS () TaskId ()"},["Bin",3,["Location","iTasks","iTasks.SDS.Sources.System",["Just",47],["Just",45],"currentSessions"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","_List",[["Type","TaskListItem",[["Type","_Unit",[]]]]]],["Type","_Unit",[]]]],[]],"fe_representation":"currentSessions :: SDS () [TaskListItem ()] ()"},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",45],["Just",42],"topLevelTasks"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SharedTaskList",[["Type","_Unit",[]]]],[]],"fe_representation":"topLevelTasks :: SharedTaskList ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",48],["Just",52],"currentProcesses"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","_List",[["Type","TaskListItem",[["Type","_Unit",[]]]]]],["Type","_Unit",[]]]],[]],"fe_representation":"currentProcesses :: SDS () [TaskListItem ()] ()"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Sources.System",["Just",55],["Just",71],"currentTaskInstanceAttributes"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","TaskAttributes",[]],["Type","TaskAttributes",[]]]],[]],"fe_representation":"currentTaskInstanceAttributes :: SDS () TaskAttributes TaskAttributes"},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",54],["Just",68],"currentTaskInstanceNo"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","InstanceNo",[]],["Type","_Unit",[]]]],[]],"fe_representation":"currentTaskInstanceNo :: SDS () InstanceNo ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",56],["Just",78],"allTaskInstances"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","_List",[["Type","TaskInstance",[]]]],["Type","_Unit",[]]]],[]],"fe_representation":"allTaskInstances :: SDS () [TaskInstance] ()"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.SDS.Sources.System",["Just",63],["Just",131],"applicationName"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","String",[]],["Type","_Unit",[]]]],[]],"fe_representation":"applicationName :: SDS () String ()"},["Bin",3,["Location","iTasks","iTasks.SDS.Sources.System",["Just",59],["Just",107],"taskInstanceAttributesByNo"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","InstanceNo",[]],["Type","TaskAttributes",[]],["Type","TaskAttributes",[]]]],[]],"fe_representation":"taskInstanceAttributesByNo :: SDS InstanceNo TaskAttributes TaskAttributes"},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",58],["Just",94],"taskInstanceByNo"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","InstanceNo",[]],["Type","TaskInstance",[]],["Type","TaskAttributes",[]]]],[]],"fe_representation":"taskInstanceByNo :: SDS InstanceNo TaskInstance TaskAttributes"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",60],["Just",120],"taskInstancesByAttribute"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]],["Type","_List",[["Type","TaskInstance",[]]]],["Type","_Unit",[]]]],[]],"fe_representation":"taskInstancesByAttribute :: SDS (!String,!String) [TaskInstance] ()"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Sources.System",["Just",65],["Just",141],"applicationDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","FilePath",[]],["Type","_Unit",[]]]],[]],"fe_representation":"applicationDirectory :: SDS () FilePath ()"},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",64],["Just",136],"applicationBuild"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","String",[]],["Type","_Unit",[]]]],[]],"fe_representation":"applicationBuild :: SDS () String ()"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",66],["Just",146],"applicationConfig"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","SDS",[["Type","_Unit",[]],["Type","Config",[]],["Type","_Unit",[]]]],[]],"fe_representation":"applicationConfig :: SDS () Config ()"},["Tip"],["Tip"]]]]],["Bin",19,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIButtonBar"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIButtonBar :: UINodeType"},["Bin",11,["Location","iTasks","iTasks.UI.Definition",["Just",41],["Nothing"],"InsertChild"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UI",[]]],["Type","UIChildChange",[]],[]],"fe_representation":"InsertChild :: UI -> UIChildChange"},["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",39],["Nothing"],"DelAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributeChange",[]],[]],"fe_representation":"DelAttribute :: String -> UIAttributeChange"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",34],["Nothing"],"NoChange"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIChange",[]],[]],"fe_representation":"NoChange :: UIChange"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",34],["Nothing"],"ReplaceUI"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UI",[]]],["Type","UIChange",[]],[]],"fe_representation":"ReplaceUI :: UI -> UIChange"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",39],["Nothing"],"SetAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","JSONNode",[]]],["Type","UIAttributeChange",[]],[]],"fe_representation":"SetAttribute :: String JSONNode -> UIAttributeChange"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",41],["Nothing"],"ChangeChild"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UIChange",[]]],["Type","UIChildChange",[]],[]],"fe_representation":"ChangeChild :: UIChange -> UIChildChange"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",55],["Nothing"],"UI"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UINodeType",[]],["Type","UIAttributes",[]],["Type","_List",[["Type","UI",[]]]]],["Type","UI",[]],[]],"fe_representation":"UI :: UINodeType UIAttributes [UI] -> UI"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",41],["Nothing"],"MoveChild"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIChildChange",[]],[]],"fe_representation":"MoveChild :: Int -> UIChildChange"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",41],["Nothing"],"RemoveChild"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIChildChange",[]],[]],"fe_representation":"RemoveChild :: UIChildChange"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIAction"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIAction :: UINodeType"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIButton"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIButton :: UINodeType"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIChoiceList"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIChoiceList :: UINodeType"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UICheckbox"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UICheckbox :: UINodeType"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UICheckGroup"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UICheckGroup :: UINodeType"},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIContainer"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIContainer :: UINodeType"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIComponent"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIComponent :: UINodeType"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UICons"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UICons :: UINodeType"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIData"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIData :: UINodeType"},["Tip"],["Tip"]]]]]]],["Bin",33,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIMenu"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIMenu :: UINodeType"},["Bin",12,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIHtmlView"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIHtmlView :: UINodeType"},["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIDropdown"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIDropdown :: UINodeType"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIDocumentField"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIDocumentField :: UINodeType"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIDecimalField"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIDecimalField :: UINodeType"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIGrid"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIGrid :: UINodeType"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIEmpty"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIEmpty :: UINodeType"},["Tip"],["Tip"]],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UILabel"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UILabel :: UINodeType"},["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIIntegerField"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIIntegerField :: UINodeType"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIIcon"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIIcon :: UINodeType"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIInteract"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIInteract :: UINodeType"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIList"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIList :: UINodeType"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIListItem"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIListItem :: UINodeType"},["Tip"],["Tip"]]]]],["Bin",20,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIToolBar"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIToolBar :: UINodeType"},["Bin",12,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIProgressBar"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIProgressBar :: UINodeType"},["Bin",4,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIParallel"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIParallel :: UINodeType"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIPanel"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIPanel :: UINodeType"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIPair"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIPair :: UINodeType"},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIPasswordField"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIPasswordField :: UINodeType"},["Tip"],["Tip"]]],["Bin",7,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UITabSet"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UITabSet :: UINodeType"},["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UISlider"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UISlider :: UINodeType"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIRecord"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIRecord :: UINodeType"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIStep"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIStep :: UINodeType"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UITextField"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UITextField :: UINodeType"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UITextArea"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UITextArea :: UINodeType"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UITextView"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UITextView :: UINodeType"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.UI.Definition",["Just",111],["Nothing"],"FloatingWindow"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIWindowType",[]],[]],"fe_representation":"FloatingWindow :: UIWindowType"},["Bin",4,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIViewport"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIViewport :: UINodeType"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UITree"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UITree :: UINodeType"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIVarCons"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIVarCons :: UINodeType"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UIWindow"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UINodeType",[]],[]],"fe_representation":"UIWindow :: UINodeType"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",111],["Nothing"],"NotificationBubble"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIWindowType",[]],[]],"fe_representation":"NotificationBubble :: UIWindowType"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",116],["Nothing"],"ExactSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","UISize",[]],[]],"fe_representation":"ExactSize :: Int -> UISize"},["Tip"],["Tip"]]]]]]]],["Bin",110,["Location","iTasks","iTasks.UI.Definition",["Just",203],["Just",114],"frameAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"frameAttr :: !Bool -> UIAttributes"},["Bin",61,["Location","iTasks","iTasks.UI.Definition",["Just",152],["Nothing"],"expanded"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UITreeNode",[]]],["Type","Bool",[]],[]],"fe_representation":".expanded :: UITreeNode -> Bool"},["Bin",20,["Location","iTasks","iTasks.UI.Definition",["Just",139],["Nothing"],"LeftSide"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UISide",[]],[]],"fe_representation":"LeftSide :: UISide"},["Bin",12,["Location","iTasks","iTasks.UI.Definition",["Just",130],["Nothing"],"AlignBottom"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIVAlign",[]],[]],"fe_representation":"AlignBottom :: UIVAlign"},["Bin",6,["Location","iTasks","iTasks.UI.Definition",["Just",125],["Nothing"],"AlignCenter"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIHAlign",[]],[]],"fe_representation":"AlignCenter :: UIHAlign"},["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",121],["Nothing"],"ExactBound"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIBound",[]],[]],"fe_representation":"ExactBound :: Int -> UIBound"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",116],["Nothing"],"WrapSize"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UISize",[]],[]],"fe_representation":"WrapSize :: UISize"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",121],["Nothing"],"WrapBound"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIBound",[]],[]],"fe_representation":"WrapBound :: UIBound"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",125],["Nothing"],"AlignLeft"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIHAlign",[]],[]],"fe_representation":"AlignLeft :: UIHAlign"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",125],["Nothing"],"AlignRight"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIHAlign",[]],[]],"fe_representation":"AlignRight :: UIHAlign"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",135],["Nothing"],"Horizontal"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIDirection",[]],[]],"fe_representation":"Horizontal :: UIDirection"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",130],["Nothing"],"AlignMiddle"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIVAlign",[]],[]],"fe_representation":"AlignMiddle :: UIVAlign"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",130],["Nothing"],"AlignTop"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIVAlign",[]],[]],"fe_representation":"AlignTop :: UIVAlign"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",135],["Nothing"],"Vertical"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIDirection",[]],[]],"fe_representation":"Vertical :: UIDirection"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",139],["Nothing"],"BottomSide"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UISide",[]],[]],"fe_representation":"BottomSide :: UISide"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.UI.Definition",["Just",145],["Nothing"],"left"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UISideSizes",[]]],["Type","Int",[]],[]],"fe_representation":".left :: UISideSizes -> Int"},["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",139],["Nothing"],"TopSide"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UISide",[]],[]],"fe_representation":"TopSide :: UISide"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",139],["Nothing"],"RightSide"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UISide",[]],[]],"fe_representation":"RightSide :: UISide"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",145],["Nothing"],"bottom"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UISideSizes",[]]],["Type","Int",[]],[]],"fe_representation":".bottom :: UISideSizes -> Int"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",145],["Nothing"],"top"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UISideSizes",[]]],["Type","Int",[]],[]],"fe_representation":".top :: UISideSizes -> Int"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",145],["Nothing"],"right"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UISideSizes",[]]],["Type","Int",[]],[]],"fe_representation":".right :: UISideSizes -> Int"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",152],["Nothing"],"children"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UITreeNode",[]]],["Type","Maybe",[["Type","_List",[["Type","UITreeNode",[]]]]]],[]],"fe_representation":".children :: UITreeNode -> Maybe [UITreeNode]"},["Tip"],["Tip"]]]]],["Bin",40,["Location","iTasks","iTasks.UI.Definition",["Just",191],["Just",78],"maxHeightAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIBound",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"maxHeightAttr :: !UIBound -> UIAttributes"},["Bin",28,["Location","iTasks","iTasks.UI.Definition",["Just",166],["Nothing"],"HINT_TYPE_VALID"],{"fe_kind":["Macro"],"fe_representation":"HINT_TYPE_VALID :== \"valid\""},["Bin",8,["Location","iTasks","iTasks.UI.Definition",["Just",152],["Nothing"],"value"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UITreeNode",[]]],["Type","Int",[]],[]],"fe_representation":".value :: UITreeNode -> Int"},["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",152],["Nothing"],"leaf"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UITreeNode",[]]],["Type","Bool",[]],[]],"fe_representation":".leaf :: UITreeNode -> Bool"},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",152],["Nothing"],"iconCls"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UITreeNode",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".iconCls :: UITreeNode -> Maybe String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",152],["Nothing"],"text"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","UITreeNode",[]]],["Type","String",[]],[]],"fe_representation":".text :: UITreeNode -> String"},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.UI.Definition",["Just",164],["Nothing"],"HINT_TYPE_ATTRIBUTE"],{"fe_kind":["Macro"],"fe_representation":"HINT_TYPE_ATTRIBUTE :== \"hint-type\""},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",163],["Nothing"],"HINT_ATTRIBUTE"],{"fe_kind":["Macro"],"fe_representation":"HINT_ATTRIBUTE :== \"hint\""},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",162],["Nothing"],"TITLE_ATTRIBUTE"],{"fe_kind":["Macro"],"fe_representation":"TITLE_ATTRIBUTE :== \"title\""},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",165],["Nothing"],"HINT_TYPE_INFO"],{"fe_kind":["Macro"],"fe_representation":"HINT_TYPE_INFO :== \"info\""},["Tip"],["Tip"]]]],["Bin",19,["Location","iTasks","iTasks.UI.Definition",["Just",185],["Just",60],"heightAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UISize",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"heightAttr :: !UISize -> UIAttributes"},["Bin",13,["Location","iTasks","iTasks.UI.Definition",["Just",170],["Nothing"],"PREFIX_ATTRIBUTE"],{"fe_kind":["Macro"],"fe_representation":"PREFIX_ATTRIBUTE :== \"prefix\""},["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",168],["Nothing"],"HINT_TYPE_INVALID"],{"fe_kind":["Macro"],"fe_representation":"HINT_TYPE_INVALID :== \"invalid\""},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",167],["Nothing"],"HINT_TYPE_WARNING"],{"fe_kind":["Macro"],"fe_representation":"HINT_TYPE_WARNING :== \"warning\""},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",169],["Nothing"],"LABEL_ATTRIBUTE"],{"fe_kind":["Macro"],"fe_representation":"LABEL_ATTRIBUTE :== \"label\""},["Tip"],["Tip"]]],["Bin",9,["Location","iTasks","iTasks.UI.Definition",["Just",182],["Just",51],"optionalAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"optionalAttr :: !Bool -> UIAttributes"},["Bin",6,["Location","iTasks","iTasks.UI.Definition",["Just",177],["Just",42],"uic"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UINodeType",[]],["Type","_List",[["Type","UI",[]]]]],["Type","UI",[]],[]],"fe_representation":"uic :: UINodeType [UI] -> UI"},["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",172],["Nothing"],"ICON_ATTRIBUTE"],{"fe_kind":["Macro"],"fe_representation":"ICON_ATTRIBUTE :== \"icon\""},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",171],["Nothing"],"POSTFIX_ATTRIBUTE"],{"fe_kind":["Macro"],"fe_representation":"POSTFIX_ATTRIBUTE :== \"postfix\""},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",176],["Just",39],"ui"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UINodeType",[]]],["Type","UI",[]],[]],"fe_representation":"ui :: UINodeType -> UI"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",178],["Just",45],"uia"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UINodeType",[]],["Type","UIAttributes",[]]],["Type","UI",[]],[]],"fe_representation":"uia :: UINodeType UIAttributes -> UI"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",179],["Just",48],"uiac"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UINodeType",[]],["Type","UIAttributes",[]],["Type","_List",[["Type","UI",[]]]]],["Type","UI",[]],[]],"fe_representation":"uiac :: UINodeType UIAttributes [UI] -> UI"},["Tip"],["Tip"]]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",183],["Just",54],"sizeAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UISize",[]],["Type","UISize",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"sizeAttr :: !UISize !UISize -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",184],["Just",57],"widthAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UISize",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"widthAttr :: !UISize -> UIAttributes"},["Tip"],["Tip"]]]]],["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",188],["Just",69],"minHeightAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIBound",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"minHeightAttr :: !UIBound -> UIAttributes"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",186],["Just",63],"minSizeAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIBound",[]],["Type","UIBound",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"minSizeAttr :: !UIBound !UIBound -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",187],["Just",66],"minWidthAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIBound",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"minWidthAttr :: !UIBound -> UIAttributes"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",189],["Just",72],"maxSizeAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIBound",[]],["Type","UIBound",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"maxSizeAttr :: !UIBound !UIBound -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",190],["Just",75],"maxWidthAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIBound",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"maxWidthAttr :: !UIBound -> UIAttributes"},["Tip"],["Tip"]]]]]],["Bin",11,["Location","iTasks","iTasks.UI.Definition",["Just",197],["Just",96],"paddingAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Type","Int",[]],["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"paddingAttr :: !Int !Int !Int !Int -> UIAttributes"},["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",194],["Just",87],"rightMarginAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"rightMarginAttr :: !Int -> UIAttributes"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",192],["Just",81],"marginsAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Type","Int",[]],["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"marginsAttr :: !Int !Int !Int !Int -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",193],["Just",84],"topMarginAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"topMarginAttr :: !Int -> UIAttributes"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",195],["Just",90],"bottomMarginAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"bottomMarginAttr :: !Int -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",196],["Just",93],"leftMarginAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"leftMarginAttr :: !Int -> UIAttributes"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",200],["Just",105],"bottomPaddingAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"bottomPaddingAttr :: !Int -> UIAttributes"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",198],["Just",99],"topPaddingAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"topPaddingAttr :: !Int -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",199],["Just",102],"rightPaddingAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"rightPaddingAttr :: !Int -> UIAttributes"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",201],["Just",108],"leftPaddingAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"leftPaddingAttr :: !Int -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",202],["Just",111],"titleAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"titleAttr :: !String -> UIAttributes"},["Tip"],["Tip"]]]]]]],["Bin",48,["Location","iTasks","iTasks.UI.Definition",["Just",227],["Just",183],"taskIdAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"taskIdAttr :: !String -> UIAttributes"},["Bin",23,["Location","iTasks","iTasks.UI.Definition",["Just",215],["Just",150],"valueAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSONNode",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"valueAttr :: !JSONNode -> UIAttributes"},["Bin",11,["Location","iTasks","iTasks.UI.Definition",["Just",209],["Just",132],"hposAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIHAlign",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"hposAttr :: !UIHAlign -> UIAttributes"},["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",206],["Just",123],"directionAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIDirection",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"directionAttr :: !UIDirection -> UIAttributes"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",204],["Just",117],"iconClsAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"iconClsAttr :: !String -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",205],["Just",120],"tooltipAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"tooltipAttr :: !String -> UIAttributes"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",207],["Just",126],"halignAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIHAlign",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"halignAttr :: !UIHAlign -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",208],["Just",129],"valignAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIVAlign",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"valignAttr :: !UIVAlign -> UIAttributes"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",212],["Just",141],"focusTaskIdAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"focusTaskIdAttr :: !String -> UIAttributes"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",210],["Just",135],"vposAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIVAlign",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"vposAttr :: !UIVAlign -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",211],["Just",138],"windowTypeAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIWindowType",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"windowTypeAttr :: !UIWindowType -> UIAttributes"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",213],["Just",144],"closeTaskIdAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"closeTaskIdAttr :: !String -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",214],["Just",147],"activeTabAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"activeTabAttr :: !Int -> UIAttributes"},["Tip"],["Tip"]]]]],["Bin",11,["Location","iTasks","iTasks.UI.Definition",["Just",221],["Just",168],"instanceNoAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"instanceNoAttr :: !Int -> UIAttributes"},["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",218],["Just",159],"textAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"textAttr :: !String -> UIAttributes"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",216],["Just",153],"minAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"minAttr :: !Int -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",217],["Just",156],"maxAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"maxAttr :: !Int -> UIAttributes"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",219],["Just",162],"enabledAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"enabledAttr :: !Bool -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",220],["Just",165],"multipleAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"multipleAttr :: !Bool -> UIAttributes"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",224],["Just",177],"doubleClickAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"doubleClickAttr :: !String !String -> UIAttributes"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",222],["Just",171],"instanceKeyAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"instanceKeyAttr :: !String -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",223],["Just",174],"columnsAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]]],["Type","UIAttributes",[]],[]],"fe_representation":"columnsAttr :: ![String] -> UIAttributes"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",225],["Just",180],"actionIdAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"actionIdAttr :: !String -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",226],["Just",186],"editorIdAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"editorIdAttr :: !String -> UIAttributes"},["Tip"],["Tip"]]]]]],["Bin",24,["Location","iTasks","iTasks.UI.Definition",["Just",270],["Just",384],"completeChildChanges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","UIChildChange",[]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","UIChildChange",[]]]]]],[]],"fe_representation":"completeChildChanges :: [(Int,UIChildChange)] -> [(Int,UIChildChange)]"},["Bin",11,["Location","iTasks","iTasks.UI.Definition",["Just",236],["Just",206],"isOptional"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UI",[]]],["Type","Bool",[]],[]],"fe_representation":"isOptional :: !UI -> Bool"},["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",230],["Just",195],"classAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"classAttr :: !String -> UIAttributes"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",228],["Just",189],"labelAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"labelAttr :: !String -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",229],["Just",192],"styleAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"styleAttr :: !String -> UIAttributes"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",232],["Just",198],"editAttrs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","Maybe",[["Type","JSONNode",[]]]]],["Type","UIAttributes",[]],[]],"fe_representation":"editAttrs :: !String !String !(Maybe JSONNode) -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",233],["Just",202],"choiceAttrs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","_List",[["Type","Int",[]]]],["Type","_List",[["Type","JSONNode",[]]]]],["Type","UIAttributes",[]],[]],"fe_representation":"choiceAttrs :: !String !String ![Int] ![JSONNode] -> UIAttributes"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",263],["Just",342],"applyUIChange"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIChange",[]],["Type","UI",[]]],["Type","UI",[]],[]],"fe_representation":"applyUIChange :: !UIChange !UI -> UI"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",237],["Just",209],"stringDisplay"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","UI",[]],[]],"fe_representation":"stringDisplay :: !String -> UI"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",260],["Just",335],"mergeUIChanges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIChange",[]],["Type","UIChange",[]]],["Type","UIChange",[]],[]],"fe_representation":"mergeUIChanges :: UIChange UIChange -> UIChange"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",264],["Just",366],"applyUIAttributeChange"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributeChange",[]],["Type","UIAttributes",[]]],["Type","UIAttributes",[]],[]],"fe_representation":"applyUIAttributeChange :: !UIAttributeChange !UIAttributes -> UIAttributes"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",267],["Just",371],"compactUIChange"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIChange",[]]],["Type","UIChange",[]],[]],"fe_representation":"compactUIChange :: UIChange -> UIChange"},["Tip"],["Tip"]]]]],["Bin",12,["Location","iTasks","iTasks.UI.Editor",["Just",22],["Nothing"],"onEdit"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Editor",[["Var","a"]]]],["Func",[["Type","DataPath",[]]],["Func",[["Type","_Tuple2",[["Type","DataPath",[]],["Type","JSONNode",[]]]]],["Func",[["Var","a"]],["Func",[["Type","EditMask",[]]],["Func",[["Uniq",["Type","VSt",[]]]],["Uniq",["Type","_Tuple3",[["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","UIChange",[]],["Type","EditMask",[]]]]]],["Var","a"],["Uniq",["Type","VSt",[]]]]]],[]],[]],[]],[]],[]],[]],"fe_representation":".onEdit :: (Editor a) -> DataPath -> (DataPath, JSONNode) -> a -> EditMask -> *VSt -> *(MaybeErrorString (UIChange, EditMask), a, *VSt)"},["Bin",5,["Location","iTasks","iTasks.UI.Definition",["Just",278],["Just",405],"encodeUIChange"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIChange",[]]],["Type","JSONNode",[]],[]],"fe_representation":"encodeUIChange :: !UIChange -> JSONNode"},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",273],["Just",393],"reindexChildChanges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","UIChildChange",[]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","UIChildChange",[]]]]]],[]],"fe_representation":"reindexChildChanges :: [(Int,UIChildChange)] -> [(Int,UIChildChange)]"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",275],["Just",396],"compactChildChanges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","UIChildChange",[]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","UIChildChange",[]]]]]],[]],"fe_representation":"compactChildChanges :: [(Int,UIChildChange)] -> [(Int,UIChildChange)]"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",279],["Just",402],"encodeUIChanges"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","UIChange",[]]]]],["Type","JSONNode",[]],[]],"fe_representation":"encodeUIChanges :: ![UIChange] -> JSONNode"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",22],["Nothing"],"genUI"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Editor",[["Var","a"]]]],["Func",[["Type","DataPath",[]]],["Func",[["Var","a"]],["Func",[["Uniq",["Type","VSt",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","UI",[]],["Type","EditMask",[]]]]]],["Uniq",["Type","VSt",[]]]]]],[]],[]],[]],[]],"fe_representation":".genUI :: (Editor a) -> DataPath -> a -> *VSt -> *(MaybeErrorString (UI, EditMask), *VSt)"},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.UI.Editor",["Just",31],["Nothing"],"Update"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","EditMode",[]],[]],"fe_representation":"Update :: EditMode"},["Bin",2,["Location","iTasks","iTasks.UI.Editor",["Just",22],["Nothing"],"onRefresh"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Editor",[["Var","a"]]]],["Func",[["Type","DataPath",[]]],["Func",[["Var","a"]],["Func",[["Var","a"]],["Func",[["Type","EditMask",[]]],["Func",[["Uniq",["Type","VSt",[]]]],["Uniq",["Type","_Tuple3",[["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","UIChange",[]],["Type","EditMask",[]]]]]],["Var","a"],["Uniq",["Type","VSt",[]]]]]],[]],[]],[]],[]],[]],[]],"fe_representation":".onRefresh :: (Editor a) -> DataPath -> a -> a -> EditMask -> *VSt -> *(MaybeErrorString (UIChange, EditMask), a, *VSt)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",31],["Nothing"],"Enter"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","EditMode",[]],[]],"fe_representation":"Enter :: EditMode"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Editor",["Just",36],["Nothing"],"CompoundMask"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","CompoundMask",[]]],["Type","EditMask",[]],[]],"fe_representation":"CompoundMask :: CompoundMask -> EditMask"},["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",31],["Nothing"],"View"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","EditMode",[]],[]],"fe_representation":"View :: EditMode"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",36],["Nothing"],"FieldMask"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","FieldMask",[]]],["Type","EditMask",[]],[]],"fe_representation":"FieldMask :: FieldMask -> EditMask"},["Tip"],["Tip"]]]]]]]]]],["Bin",486,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectByNumChildren"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectByNumChildren :: Int -> UISelection"},["Bin",162,["Location","iTasks","iTasks.UI.JS.Interface",["Just",137],["Just",354],"jsArgToString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSArg",[]]],["Type","String",[]],[]],"fe_representation":"jsArgToString :: !JSArg -> String"},["Bin",112,["Location","iTasks","iTasks.UI.JS.Interface",["Just",78],["Just",135],".$!"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","o"],["Var","a"]],["Uniq",["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]]],[[["Class",".$"],["Var","o"]],[["Class","ToArgs"],["Var","a"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(.$!) infixl 1 :: !o !a -> *(*JSWorld -> *JSWorld) | .$ o & ToArgs a"},["Bin",80,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",44],["Nothing"],"text"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceText",[]]],["Type","String",[]],[]],"fe_representation":".text :: ChoiceText -> String"},["Bin",37,["Location","iTasks","iTasks.UI.Editor",["Just",75],["Just",39],"isTouched"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EditMask",[]]],["Type","Bool",[]],[]],"fe_representation":"isTouched :: !EditMask -> Bool"},["Bin",14,["Location","iTasks","iTasks.UI.Editor",["Just",53],["Nothing"],"optional"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","VSt",[]]]],["Type","Bool",[]],[]],"fe_representation":".optional :: *VSt -> Bool"},["Bin",6,["Location","iTasks","iTasks.UI.Editor",["Just",46],["Nothing"],"state"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CompoundMask",[]]],["Type","JSONNode",[]],[]],"fe_representation":".state :: CompoundMask -> JSONNode"},["Bin",3,["Location","iTasks","iTasks.UI.Editor",["Just",40],["Nothing"],"valid"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FieldMask",[]]],["Type","Bool",[]],[]],"fe_representation":".valid :: FieldMask -> Bool"},["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",40],["Nothing"],"touched"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","FieldMask",[]]],["Type","Bool",[]],[]],"fe_representation":".touched :: FieldMask -> Bool"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",46],["Nothing"],"fields"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","CompoundMask",[]]],["Type","_List",[["Type","EditMask",[]]]],[]],"fe_representation":".fields :: CompoundMask -> [EditMask]"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Editor",["Just",53],["Nothing"],"iworld"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","VSt",[]]]],["Uniq",["Type","IWorld",[]]],[]],"fe_representation":".iworld :: *VSt -> *IWorld"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",53],["Nothing"],"mode"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","VSt",[]]]],["Type","EditMode",[]],[]],"fe_representation":".mode :: *VSt -> EditMode"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.UI.Editor",["Just",71],["Just",27],"editorId"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","DataPath",[]]],["Type","String",[]],[]],"fe_representation":"editorId :: !DataPath -> String"},["Bin",4,["Location","iTasks","iTasks.UI.Editor",["Just",53],["Nothing"],"taskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","VSt",[]]]],["Type","String",[]],[]],"fe_representation":".taskId :: *VSt -> String"},["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",53],["Nothing"],"selectedConsIndex"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Uniq",["Type","VSt",[]]]],["Type","Int",[]],[]],"fe_representation":".selectedConsIndex :: *VSt -> Int"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.UI.Editor",["Just",68],["Just",24],"newCompoundMask"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","EditMask",[]],[]],"fe_representation":"newCompoundMask :: EditMask"},["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",67],["Just",21],"newFieldMask"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","EditMask",[]],[]],"fe_representation":"newFieldMask :: EditMask"},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Editor",["Just",72],["Just",30],"s2dp"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","DataPath",[]],[]],"fe_representation":"s2dp :: !String -> DataPath"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",74],["Just",35],"subMasks"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","EditMask",[]]],["Type","_List",[["Type","EditMask",[]]]],[]],"fe_representation":"subMasks :: !Int EditMask -> [EditMask]"},["Tip"],["Tip"]]]]],["Bin",22,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",25],["Just",32],"button"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","Bool",[]]]],[]],"fe_representation":"button :: UIAttributes -> Editor Bool"},["Bin",10,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",19],["Just",14],"passwordField"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","String",[]]]],[]],"fe_representation":"passwordField :: UIAttributes -> Editor String"},["Bin",4,["Location","iTasks","iTasks.UI.Editor",["Just",80],["Just",56],"withClientSideInit"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","JSObj",[["Type","_Unit",[]]]]],["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]],[]],["Func",[["Type","DataPath",[]]],["Func",[["Var","a"]],["Func",[["Uniq",["Type","VSt",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","UI",[]],["Type","EditMask",[]]]]]],["Uniq",["Type","VSt",[]]]]]],[]],[]],[]],["Type","DataPath",[]],["Var","a"],["Uniq",["Type","VSt",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","UI",[]],["Type","EditMask",[]]]]]],["Uniq",["Type","VSt",[]]]]]],[]],"fe_representation":"withClientSideInit :: ((JSObj ()) -> *JSWorld -> *JSWorld) (DataPath -> a -> *VSt -> *(!MaybeErrorString (!UI,!EditMask),!*VSt)) DataPath a *VSt -> *(!MaybeErrorString (!UI,!EditMask),!*VSt)"},["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",77],["Just",43],"containsInvalidFields"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","EditMask",[]]],["Type","Bool",[]],[]],"fe_representation":"containsInvalidFields :: !EditMask -> Bool"},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",18],["Just",11],"textArea"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","String",[]]]],[]],"fe_representation":"textArea :: UIAttributes -> Editor String"},["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",17],["Just",8],"textField"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","String",[]]]],[]],"fe_representation":"textField :: UIAttributes -> Editor String"},["Tip"],["Tip"]],["Tip"]]],["Bin",5,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",22],["Just",23],"documentField"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","_Tuple5",[["Type","String",[]],["Type","String",[]],["Type","String",[]],["Type","String",[]],["Type","Int",[]]]]]],[]],"fe_representation":"documentField :: UIAttributes -> Editor (!String,!String,!String,!String,!Int)"},["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",20],["Just",17],"integerField"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","Int",[]]]],[]],"fe_representation":"integerField :: UIAttributes -> Editor Int"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",21],["Just",20],"decimalField"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","Real",[]]]],[]],"fe_representation":"decimalField :: UIAttributes -> Editor Real"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",23],["Just",26],"checkBox"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","Bool",[]]]],[]],"fe_representation":"checkBox :: UIAttributes -> Editor Bool"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",24],["Just",29],"slider"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","Int",[]]]],[]],"fe_representation":"slider :: UIAttributes -> Editor Int"},["Tip"],["Tip"]]]]],["Bin",11,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",37],["Just",52],"dropdown"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","_Tuple2",[["Type","_List",[["Type","ChoiceText",[]]]],["Type","_List",[["Type","Int",[]]]]]]]],[]],"fe_representation":"dropdown :: UIAttributes -> Editor ([ChoiceText],[Int])"},["Bin",5,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",31],["Just",41],"textView"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","String",[]]]],[]],"fe_representation":"textView :: UIAttributes -> Editor String"},["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",26],["Just",35],"label"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","String",[]]]],[]],"fe_representation":"label :: UIAttributes -> Editor String"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",27],["Just",38],"icon"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","_Tuple2",[["Type","String",[]],["Type","Maybe",[["Type","String",[]]]]]]]],[]],"fe_representation":"icon :: UIAttributes -> Editor (!String,!Maybe String)"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",32],["Just",44],"htmlView"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","HtmlTag",[]]]],[]],"fe_representation":"htmlView :: UIAttributes -> Editor HtmlTag"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",33],["Just",47],"progressBar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","_Tuple2",[["Type","Maybe",[["Type","Int",[]]]],["Type","Maybe",[["Type","String",[]]]]]]]],[]],"fe_representation":"progressBar :: UIAttributes -> Editor (Maybe Int,Maybe String)"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",40],["Just",64],"grid"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","_Tuple2",[["Type","ChoiceGrid",[]],["Type","_List",[["Type","Int",[]]]]]]]],[]],"fe_representation":"grid :: UIAttributes -> Editor (ChoiceGrid,[Int])"},["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",38],["Just",55],"checkGroup"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","_Tuple2",[["Type","_List",[["Type","ChoiceText",[]]]],["Type","_List",[["Type","Int",[]]]]]]]],[]],"fe_representation":"checkGroup :: UIAttributes -> Editor ([ChoiceText],[Int])"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",39],["Just",58],"choiceList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","_Tuple2",[["Type","_List",[["Type","ChoiceText",[]]]],["Type","_List",[["Type","Int",[]]]]]]]],[]],"fe_representation":"choiceList :: UIAttributes -> Editor ([ChoiceText],[Int])"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",41],["Just",70],"tree"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Editor",[["Type","_Tuple2",[["Type","_List",[["Type","ChoiceNode",[]]]],["Type","_List",[["Type","Int",[]]]]]]]],[]],"fe_representation":"tree :: UIAttributes -> Editor ([ChoiceNode],[Int])"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",44],["Nothing"],"id"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceText",[]]],["Type","Int",[]],[]],"fe_representation":".id :: ChoiceText -> Int"},["Tip"],["Tip"]]]]]]],["Bin",42,["Location","iTasks","iTasks.UI.JS.Encoding",["Just",12],["Just",25],"encodeOnServer"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","JSONNode",[]],[[["Generic","JSEncode",["KindConst"]],["Var","a"]]]],"fe_representation":"encodeOnServer :: !a -> JSONNode | JSEncode{|*|} a"},["Bin",22,["Location","iTasks","iTasks.UI.Editor.Combinators",["Just",36],["Just",92],"liftEditor"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Var","a"],[]],["Func",[["Var","a"]],["Var","b"],[]],["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Var","b"]]],[]],"fe_representation":"liftEditor :: (b -> a) (a -> b) (Editor a) -> Editor b","fe_documentation":["FunctionDoc",["Just","Lift an editor to another (isomorphic) domain"],[],[],["Nothing"]]},["Bin",14,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",57],["Nothing"],"expanded"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceNode",[]]],["Type","Bool",[]],[]],"fe_representation":".expanded :: ChoiceNode -> Bool"},["Bin",5,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",52],["Nothing"],"cells"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceRow",[]]],["Type","_List",[["Type","HtmlTag",[]]]],[]],"fe_representation":".cells :: ChoiceRow -> [HtmlTag]"},["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",48],["Nothing"],"header"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceGrid",[]]],["Type","_List",[["Type","String",[]]]],[]],"fe_representation":".header :: ChoiceGrid -> [String]"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",48],["Nothing"],"rows"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceGrid",[]]],["Type","_List",[["Type","ChoiceRow",[]]]],[]],"fe_representation":".rows :: ChoiceGrid -> [ChoiceRow]"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",52],["Nothing"],"id"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceRow",[]]],["Type","Int",[]],[]],"fe_representation":".id :: ChoiceRow -> Int"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",57],["Nothing"],"children"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceNode",[]]],["Type","_List",[["Type","ChoiceNode",[]]]],[]],"fe_representation":".children :: ChoiceNode -> [ChoiceNode]"},["Tip"],["Tip"]]]],["Bin",8,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",57],["Nothing"],"label"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceNode",[]]],["Type","String",[]],[]],"fe_representation":".label :: ChoiceNode -> String"},["Bin",2,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",57],["Nothing"],"id"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceNode",[]]],["Type","Int",[]],[]],"fe_representation":".id :: ChoiceNode -> Int"},["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",57],["Nothing"],"icon"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ChoiceNode",[]]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":".icon :: ChoiceNode -> Maybe String"},["Tip"],["Tip"]],["Tip"]],["Bin",5,["Location","iTasks","iTasks.UI.Editor.Combinators",["Just",26],["Just",75],"withLabel"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Var","a"]]],[]],"fe_representation":"withLabel :: String (Editor a) -> Editor a","fe_documentation":["FunctionDoc",["Just","Adds a label property"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.UI.Editor.Combinators",["Just",16],["Just",17],"withEditMode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Var","a"]]],[]],"fe_representation":"withEditMode :: (Editor a) -> Editor a","fe_documentation":["FunctionDoc",["Just","Adds an attribute that marks edit type: view, enter, update a"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.UI.Editor.Combinators",["Just",11],["Just",9],"withAttributes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]],["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Var","a"]]],[]],"fe_representation":"withAttributes :: UIAttributes (Editor a) -> Editor a","fe_documentation":["FunctionDoc",["Just","Adds UI attributes to an editor"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Combinators",["Just",21],["Just",25],"withHintAttributes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Var","a"]]],[]],"fe_representation":"withHintAttributes :: String (Editor a) -> Editor a","fe_documentation":["FunctionDoc",["Just","Adds hint attributes to an editor by checking the edit mask"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Combinators",["Just",31],["Just",78],"whenDisabled"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Editor",[["Var","a"]]],["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Var","a"]]],[]],"fe_representation":"whenDisabled :: (Editor a) (Editor a) -> Editor a","fe_documentation":["FunctionDoc",["Just","Using an alternative editor when editing is disabled"],[],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.UI.Editor.Common",["Just",13],["Just",10],"emptyEditor"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Editor",[["Var","a"]]],[]],"fe_representation":"emptyEditor :: Editor a","fe_documentation":["FunctionDoc",["Just","Editor that does nothing"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.UI.Editor.Combinators",["Just",48],["Just",127],"constEditor"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Var","a"]]],[]],"fe_representation":"constEditor :: a (Editor a) -> Editor a","fe_documentation":["FunctionDoc",["Just","An editor with a constant model value"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.UI.Editor.Combinators",["Just",42],["Just",103],"liftEditorAsymmetric"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Var","a"],[]],["Func",[["Var","a"]],["Type","MaybeErrorString",[["Var","b"]]],[]],["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Var","b"]]],[]],"fe_representation":"liftEditorAsymmetric :: (b -> a) (a -> MaybeErrorString b) (Editor a) -> Editor b","fe_documentation":["FunctionDoc",["Just","Lift an editor to another domain which is 'bigger' than the original domain\nso conversion back to the original is not always possible"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Combinators",["Just",53],["Just",134],"composeEditors"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UINodeType",[]],["Type","Editor",[["Var","a"]]],["Type","Editor",[["Var","b"]]]],["Type","Editor",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[]],"fe_representation":"composeEditors :: UINodeType (Editor a) (Editor b) -> Editor (a,b)","fe_documentation":["FunctionDoc",["Just","Create a composition of two editors"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Editor.Common",["Just",37],["Just",20],"listEditor_"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","Bool",[]]],["Func",[["Var","a"]],["Type","_List",[["Type","JSONNode",[]]]],[]],[]],["Var","a"],["Type","Maybe",[["Func",[["Type","_List",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]]]],["Type","Bool",[]],["Type","Bool",[]],["Type","Maybe",[["Func",[["Type","_List",[["Var","a"]]]],["Type","String",[]],[]]]],["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"listEditor_ :: (Bool -> a -> [JSONNode]) a (Maybe ([a] -> Maybe a)) Bool Bool (Maybe ([a] -> String)) (Editor a) -> Editor [a]"},["Bin",1,["Location","iTasks","iTasks.UI.Editor.Common",["Just",33],["Just",17],"listEditor"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Func",[["Type","_List",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]]]],["Type","Bool",[]],["Type","Bool",[]],["Type","Maybe",[["Func",[["Type","_List",[["Var","a"]]]],["Type","String",[]],[]]]],["Type","Editor",[["Var","a"]]]],["Type","Editor",[["Type","_List",[["Var","a"]]]]],[[["Generic","JSONEncode",["KindConst"]],["Var","a"]],[["Generic","gDefault",["KindConst"]],["Var","a"]]]],"fe_representation":"listEditor :: (Maybe ([a] -> Maybe a)) Bool Bool (Maybe ([a] -> String)) (Editor a) -> Editor [a] | JSONEncode{|*|} a & gDefault{|*|} a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Generic",["Just",16],["Just",15],"gEditor"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Editor",[["Var","a"]]],[]],"fe_generic_vars":["a"],"fe_representation":"generic gEditor a :: Editor a"},["Tip"],["Tip"]]]]],["Bin",19,["Location","iTasks","iTasks.UI.JS.Interface",["Just",50],["Just",57],"jsGetObjectAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","JSObj",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","b"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsGetObjectAttr :: !String !(JSObj o) !*JSWorld -> *(!JSVal b,!*JSWorld)"},["Bin",11,["Location","iTasks","iTasks.UI.JS.Interface",["Just",19],["Nothing"],"JSIO"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","JSWorld",[]]]]]],[]]],["Type","JSIO",[["Var","a"]]],[]],"fe_representation":"JSIO :: (*JSWorld -> *(a, *JSWorld)) -> JSIO a"},["Bin",5,["Location","iTasks","iTasks.UI.JS.Encoding",["Just",17],["Just",61],"decodeOnServer"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSONNode",[]]],["Type","Maybe",[["Var","a"]]],[[["Generic","JSDecode",["KindConst"]],["Var","a"]]]],"fe_representation":"decodeOnServer :: !JSONNode -> Maybe a | JSDecode{|*|} a"},["Bin",2,["Location","iTasks","iTasks.UI.JS.Encoding",["Just",13],["Just",30],"decodeOnClient"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"decodeOnClient :: !(JSVal a) !*JSWorld -> *(!a,!*JSWorld)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.JS.Encoding",["Just",16],["Just",58],"encodeOnClient"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Uniq",["Type","JSWorld",[]]]],["Type","_Tuple2",[["Type","JSVal",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]],[]],"fe_representation":"encodeOnClient :: !a *JSWorld -> (!JSVal a,!*JSWorld)"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.JS.Encoding",["Just",19],["Just",33],"JSEncode"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","t"]],["Type","_List",[["Type","JSONNode",[]]]],[]],"fe_generic_vars":["t"],"fe_representation":"generic JSEncode t :: !t -> [JSONNode]"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.JS.Encoding",["Just",35],["Just",66],"JSDecode"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","JSONNode",[]]]]],["Type","_Tuple2",[["Type","Maybe",[["Var","t"]]],["Type","_List",[["Type","JSONNode",[]]]]]],[]],"fe_generic_vars":["t"],"fe_representation":"generic JSDecode t :: ![JSONNode] -> (!Maybe t,![JSONNode])"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.UI.JS.Interface",["Just",48],["Just",51],"jsEmptyObject"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSObj",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsEmptyObject :: !*JSWorld -> *(!JSObj a,!*JSWorld)"},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",44],["Just",45],"jsWindow"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","JSObj",[["Type","JSWindow",[]]]],[]],"fe_representation":"jsWindow :: JSObj JSWindow"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",43],["Just",42],"jsNull"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","JSVal",[["Var","a"]]],[]],"fe_representation":"jsNull :: JSVal a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",45],["Just",48],"jsDocument"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","JSObj",[["Type","JSDocument",[]]]],[]],"fe_representation":"jsDocument :: JSObj JSDocument"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",49],["Just",54],"jsNewObject"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","JSArg",[]]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSObj",[["Var","b"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsNewObject :: !String ![JSArg] !*JSWorld -> *(!JSObj b,!*JSWorld)"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.UI.JS.Interface",["Just",54],["Just",69],"jsDeleteObjectAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","JSObj",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]],"fe_representation":"jsDeleteObjectAttr :: !String !(JSObj o) !*JSWorld -> *JSWorld"},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",52],["Just",63],"jsSetObjectAttr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","JSVal",[["Var","v"]]],["Type","JSObj",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]],"fe_representation":"jsSetObjectAttr :: !String !(JSVal v) !(JSObj o) !*JSWorld -> *JSWorld"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",51],["Just",60],"jsGetObjectEl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","JSObj",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","b"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsGetObjectEl :: !Int !(JSObj o) !*JSWorld -> *(!JSVal b,!*JSWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",53],["Just",66],"jsSetObjectEl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","JSVal",[["Var","v"]]],["Type","JSObj",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]],"fe_representation":"jsSetObjectEl :: !Int !(JSVal v) !(JSObj o) !*JSWorld -> *JSWorld"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",71],["Just",121],".?"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSObjSelector",[]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","r"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":".? :: !JSObjSelector !*JSWorld -> *(!JSVal r,!*JSWorld)"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",69],["Just",118],"getElementById"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]]],["Type","JSObjSelector",[]],[]],"fe_representation":"getElementById :: !String -> JSObjSelector"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",72],["Just",124],".="],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSObjSelector",[]],["Var","v"]],["Uniq",["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]]],[]],"fe_priority":["LeftAssoc",2],"fe_representation":"(.=) infixl 2 :: !JSObjSelector !v -> *(*JSWorld -> *JSWorld)"},["Tip"],["Tip"]]]]]]],["Bin",31,["Location","iTasks","iTasks.UI.JS.Interface",["Just",105],["Just",183],"jsGetCleanVal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","JSVal",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsGetCleanVal :: !String !(JSVal o) !*JSWorld -> *(!a,!*JSWorld)"},["Bin",15,["Location","iTasks","iTasks.UI.JS.Interface",["Just",94],["Just",162],"toJSArg"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","JSArg",[]],[]],"fe_representation":"toJSArg :: !a -> JSArg"},["Bin",7,["Location","iTasks","iTasks.UI.JS.Interface",["Just",89],["Just",147],"jsThis"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSObj",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsThis :: !*JSWorld -> *(!JSObj a,!*JSWorld)"},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",83],["Just",141],"jsApply"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSFun",[["Var","f"]]],["Type","JSObj",[["Var","scope"]]],["Type","_List",[["Type","JSArg",[]]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsApply :: !(JSFun f) !(JSObj scope) ![JSArg] !*JSWorld -> *(!JSVal a,!*JSWorld)"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",80],["Just",138],"new"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Var","a"]],["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSObj",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],[[["Class","ToArgs"],["Var","a"]]]],"fe_representation":"new :: !String !a -> *JSWorld -> *(!JSObj o,!*JSWorld) | ToArgs a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",86],["Just",144],"jsWrapFun"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","_List",[["Type","JSArg",[]]]]],["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],[]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSFun",[["Var","f"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsWrapFun :: !([JSArg] -> *JSWorld -> *(!JSVal a,!*JSWorld)) !*JSWorld -> *(!JSFun f,!*JSWorld)"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",91],["Just",153],"jsAbort"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","b"],[]],"fe_representation":"jsAbort :: a -> b"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",90],["Just",150],"jsTypeof"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","String",[]],[]],"fe_representation":"jsTypeof :: !(JSVal a) -> String"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",93],["Just",159],"toJSVal"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","JSVal",[["Var","b"]]],[]],"fe_representation":"toJSVal :: !a -> JSVal b"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.UI.JS.Interface",["Just",98],["Just",174],"fromJSValUnsafe"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","Dynamic",[]],[]],"fe_representation":"fromJSValUnsafe :: !(JSVal a) -> Dynamic"},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",96],["Just",168],"fromJSArgUnsafe"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSArg",[]]],["Type","Dynamic",[]],[]],"fe_representation":"fromJSArgUnsafe :: !JSArg -> Dynamic"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",95],["Just",165],"toJSArgs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","_List",[["Type","JSArg",[]]]],[]],"fe_representation":"toJSArgs :: ![a] -> [JSArg]"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",97],["Just",171],"fromJSArg"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSArg",[]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","Dynamic",[]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"fromJSArg :: !JSArg !*JSWorld -> *(!Dynamic,!*JSWorld)"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",101],["Just",156],"newJSArray"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSArr",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"newJSArray :: !*JSWorld -> *(!JSArr a,!*JSWorld)"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",99],["Just",177],"fromJSVal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","Dynamic",[]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"fromJSVal :: !(JSVal a) !*JSWorld -> *(!Dynamic,!*JSWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",104],["Just",180],"jsPutCleanVal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Var","a"],["Type","JSVal",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]],"fe_representation":"jsPutCleanVal :: !String !a !(JSVal o) !*JSWorld -> *JSWorld"},["Tip"],["Tip"]]]]],["Bin",15,["Location","iTasks","iTasks.UI.JS.Interface",["Just",122],["Just",222],"findObject"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"findObject :: !String !*JSWorld -> *(!JSVal a,!*JSWorld)"},["Bin",7,["Location","iTasks","iTasks.UI.JS.Interface",["Just",112],["Just",197],"toJSArray"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSArr",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"toJSArray :: ![a] !*JSWorld -> *(!JSArr a,!*JSWorld)"},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",110],["Just",191],"jsArrayPop"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSArr",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsArrayPop :: !(JSArr a) !*JSWorld -> *(!JSVal a,!*JSWorld)"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",109],["Just",188],"jsArrayPush"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]],["Type","JSArr",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSArr",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsArrayPush :: !(JSVal a) !(JSArr a) !*JSWorld -> *(!JSArr a,!*JSWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",111],["Just",194],"jsArrayReverse"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSArr",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSArr",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsArrayReverse :: !(JSArr a) !*JSWorld -> *(!JSArr a,!*JSWorld)"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",115],["Just",219],"jsIsUndefined"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"jsIsUndefined :: !(JSVal a) -> Bool"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",113],["Just",206],"fromJSArray"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSArr",[["Var","a"]]],["Func",[["Type","JSVal",[["Var","b"]]]],["Var","c"],[]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","_List",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"fromJSArray :: !(JSArr a) !((JSVal b) -> c) !*JSWorld -> *(![c],!*JSWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",118],["Just",283],"callObjectMethod"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","JSArg",[]]]],["Type","JSObj",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"callObjectMethod :: !String ![JSArg] !(JSObj o) !*JSWorld -> *(!JSVal c,!*JSWorld)"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.UI.JS.Interface",["Just",132],["Just",327],"jsValToString"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","String",[]],[]],"fe_representation":"jsValToString :: !(JSVal a) -> String"},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",128],["Just",308],"addCSSFromUrl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]],"fe_representation":"addCSSFromUrl :: !String !*JSWorld -> *JSWorld"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",126],["Just",292],"addJSFromUrl"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Maybe",[["Type","JSFun",[["Var","f"]]]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]],"fe_representation":"addJSFromUrl :: !String !(Maybe (JSFun f)) !*JSWorld -> *JSWorld"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",130],["Just",321],"jsTrace"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]],"fe_representation":"jsTrace :: !a !*JSWorld -> *JSWorld"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",134],["Just",342],"jsValToInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":"jsValToInt :: !(JSVal a) -> Int"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",133],["Just",335],"jsValToReal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","Real",[]],[]],"fe_representation":"jsValToReal :: !(JSVal a) -> Real"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",135],["Just",349],"jsValToBool"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"jsValToBool :: !(JSVal a) -> Bool"},["Tip"],["Tip"]]]]]]],["Bin",49,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSReference"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UI",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSReference :: UI -> LayoutState"},["Bin",28,["Location","iTasks","iTasks.UI.JS.Map",["Just",9],["Just",9],"jsPut"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Type","JSVal",[["Var","v"]]],["Type","JSMap",[["Var","k"],["Type","JSVal",[["Var","v"]]]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[[["Class","toString"],["Var","k"]]]],"fe_representation":"jsPut :: !k !(JSVal v) !(JSMap k (JSVal v)) !*JSWorld -> *JSWorld | toString k"},["Bin",15,["Location","iTasks","iTasks.UI.JS.Interface",["Just",183],["Just",392],"jsUnsafeArrCoerce"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","JSArr",[["Var","b"]]],[]],"fe_representation":"jsUnsafeArrCoerce :: !(JSVal a) -> JSArr b"},["Bin",7,["Location","iTasks","iTasks.UI.JS.Interface",["Just",142],["Just",378],"withDef"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","JSVal",[["Var","a"]]]],["Var","b"],[]],["Var","b"],["Type","JSVal",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"withDef :: !((JSVal a) -> b) !b !(JSVal a) -> b"},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",139],["Just",366],"jsArgToInt"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSArg",[]]],["Type","Int",[]],[]],"fe_representation":"jsArgToInt :: !JSArg -> Int"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",138],["Just",360],"jsArgToReal"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSArg",[]]],["Type","Real",[]],[]],"fe_representation":"jsArgToReal :: !JSArg -> Real"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",140],["Just",373],"jsArgToBool"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSArg",[]]],["Type","Bool",[]],[]],"fe_representation":"jsArgToBool :: !JSArg -> Bool"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",179],["Just",386],"jsUnsafeCoerce"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","JSVal",[["Var","b"]]],[]],"fe_representation":"jsUnsafeCoerce :: !(JSVal a) -> JSVal b"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",177],["Just",383],"callFunction"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","JSArg",[]]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"callFunction :: !String ![JSArg] !*JSWorld -> *(!JSVal a,!*JSWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",181],["Just",389],"jsUnsafeObjCoerce"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","JSObj",[["Var","b"]]],[]],"fe_representation":"jsUnsafeObjCoerce :: !(JSVal a) -> JSObj b"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.UI.JS.Interface",["Just",191],["Just",410],"ifFun"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]],["Func",[["Type","JSFun",[["Var","b"]]]],["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],[]],["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"ifFun :: !(JSVal a) !((JSFun b) -> *JSWorld -> *(JSVal c,*JSWorld)) !(JSVal c) !*JSWorld -> *(!JSVal c,!*JSWorld)"},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",187],["Just",398],"ifObj"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]],["Func",[["Type","JSObj",[["Var","b"]]]],["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],[]],["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"ifObj :: !(JSVal a) !((JSObj b) -> *JSWorld -> *(JSVal c,*JSWorld)) !(JSVal c) !*JSWorld -> *(!JSVal c,!*JSWorld)"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",185],["Just",395],"jsUnsafeFunCoerce"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","JSFun",[["Var","b"]]],[]],"fe_representation":"jsUnsafeFunCoerce :: !(JSVal a) -> JSFun b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",189],["Just",404],"ifArr"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]],["Func",[["Type","JSArr",[["Var","b"]]]],["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],[]],["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","c"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"ifArr :: !(JSVal a) !((JSArr b) -> *JSWorld -> *(JSVal c,*JSWorld)) !(JSVal c) !*JSWorld -> *(!JSVal c,!*JSWorld)"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",195],["Just",421],"jsIsNull"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":"jsIsNull :: !(JSVal a) -> Bool"},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",193],["Just",415],"jsIsArray"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSVal",[["Var","a"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsIsArray :: !(JSVal a) !*JSWorld -> *(!Bool,!*JSWorld)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Map",["Just",8],["Just",6],"jsNewMap"],{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSMap",[["Var","k"],["Type","JSVal",[["Var","v"]]]]],["Uniq",["Type","JSWorld",[]]]]]],[[["Class","toString"],["Var","k"]]]],"fe_representation":"jsNewMap :: !*JSWorld -> *(!JSMap k (JSVal v),!*JSWorld) | toString k"},["Tip"],["Tip"]]]]],["Bin",12,["Location","iTasks","iTasks.UI.Layout",["Just",19],["Nothing"],"restore"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Layout",[]]],["Func",[["Type","LayoutState",[]]],["Type","UIChange",[]],[]],[]],"fe_representation":".restore :: Layout -> LayoutState -> UIChange"},["Bin",5,["Location","iTasks","iTasks.UI.JS.Map",["Just",13],["Just",24],"jsToList"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","JSMap",[["Var","k"],["Type","JSVal",[["Var","v"]]]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","JSVal",[["Var","v"]]]]]]],["Uniq",["Type","JSWorld",[]]]]]],[[["Class","toString"],["Var","k"]]]],"fe_representation":"jsToList :: !(JSMap k (JSVal v)) !*JSWorld -> *(![(!String,!JSVal v)],!*JSWorld) | toString k"},["Bin",2,["Location","iTasks","iTasks.UI.JS.Map",["Just",10],["Just",13],"jsDel"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Type","JSMap",[["Var","k"],["Type","JSVal",[["Var","v"]]]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[[["Class","toString"],["Var","k"]]]],"fe_representation":"jsDel :: !k !(JSMap k (JSVal v)) !*JSWorld -> *JSWorld | toString k"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.JS.Map",["Just",11],["Just",17],"jsGet"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","k"],["Type","JSMap",[["Var","k"],["Type","JSVal",[["Var","v"]]]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","Maybe",[["Type","JSVal",[["Var","v"]]]]],["Uniq",["Type","JSWorld",[]]]]]],[[["Class","toString"],["Var","k"]]]],"fe_representation":"jsGet :: !k !(JSMap k (JSVal v)) !*JSWorld -> *(!Maybe (JSVal v),!*JSWorld) | toString k"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Layout",["Just",19],["Nothing"],"adjust"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Layout",[]]],["Func",[["Type","_Tuple2",[["Type","UIChange",[]],["Type","LayoutState",[]]]]],["Type","_Tuple2",[["Type","UIChange",[]],["Type","LayoutState",[]]]],[]],[]],"fe_representation":".adjust :: Layout -> (UIChange, LayoutState) -> (UIChange, LayoutState)"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",19],["Nothing"],"apply"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","Layout",[]]],["Func",[["Type","UI",[]]],["Type","_Tuple2",[["Type","UIChange",[]],["Type","LayoutState",[]]]],[]],[]],"fe_representation":".apply :: Layout -> UI -> (UIChange, LayoutState)"},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSInsert"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSInsert :: Int -> LayoutState"},["Bin",2,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSCopyAttributes"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UI",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSCopyAttributes :: UI -> LayoutState"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSAttributes"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSAttributes :: UIAttributes -> LayoutState"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSModifyAttributes"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UIAttributes",[]],["Type","UIAttributes",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSModifyAttributes :: UIAttributes UIAttributes -> LayoutState"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSLayoutSubUIs"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UI",[]],["Type","LayoutTree",[["Type","LayoutState",[]],["Type","_Unit",[]]]]],["Type","LayoutState",[]],[]],"fe_representation":"LSLayoutSubUIs :: UI (LayoutTree LayoutState ()) -> LayoutState"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSNone"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","LayoutState",[]],[]],"fe_representation":"LSNone :: LayoutState"},["Tip"],["Tip"]]]]]],["Bin",20,["Location","iTasks","iTasks.UI.Layout",["Just",44],["Nothing"],"deleted"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","MvUI",[]]],["Type","Bool",[]],[]],"fe_representation":".deleted :: MvUI -> Bool"},["Bin",9,["Location","iTasks","iTasks.UI.Layout",["Just",39],["Nothing"],"SubUIsModified"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","b"],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","LayoutTree",[["Var","a"],["Var","b"]]]]]]]],["Type","LayoutTree",[["Var","a"],["Var","b"]]],[]],"fe_representation":"SubUIsModified :: b [(Int, LayoutTree a b)] -> LayoutTree a b"},["Bin",5,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSSequence"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LayoutState",[]],["Type","LayoutState",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSSequence :: LayoutState LayoutState -> LayoutState"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSRemoveSubUIs"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","MvUI",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSRemoveSubUIs :: MvUI -> LayoutState"},["Tip"],["Tip"]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSUnwrap"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UI",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSUnwrap :: UI -> LayoutState"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSType"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UI",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSType :: UI -> LayoutState"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LSWrap"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UI",[]]],["Type","LayoutState",[]],[]],"fe_representation":"LSWrap :: UI -> LayoutState"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",44],["Nothing"],"attr"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","MvUI",[]]],["Type","UIAttributes",[]],[]],"fe_representation":".attr :: MvUI -> UIAttributes"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",39],["Nothing"],"UIModified"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","LayoutTree",[["Var","a"],["Var","b"]]],[]],"fe_representation":"UIModified :: a -> LayoutTree a b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",44],["Nothing"],"children"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","MvUI",[]]],["Type","_List",[["Type","MvUIChild",[]]]],[]],"fe_representation":".children :: MvUI -> [MvUIChild]"},["Tip"],["Tip"]]]],["Bin",10,["Location","iTasks","iTasks.UI.Layout",["Just",44],["Nothing"],"type"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","MvUI",[]]],["Type","UINodeType",[]],[]],"fe_representation":".type :: MvUI -> UINodeType"},["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",44],["Nothing"],"matched"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","MvUI",[]]],["Type","Bool",[]],[]],"fe_representation":".matched :: MvUI -> Bool"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",44],["Nothing"],"dstChange"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","MvUI",[]]],["Type","UIChange",[]],[]],"fe_representation":".dstChange :: MvUI -> UIChange"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",44],["Nothing"],"moved"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","MvUI",[]]],["Type","Bool",[]],[]],"fe_representation":".moved :: MvUI -> Bool"},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectAND"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UISelection",[]],["Type","UISelection",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectAND :: UISelection UISelection -> UISelection"},["Bin",2,["Location","iTasks","iTasks.UI.Layout",["Just",54],["Nothing"],"MvUIMoveDestination"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","MvUIChild",[]],[]],"fe_representation":"MvUIMoveDestination :: Int -> MvUIChild"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",54],["Nothing"],"MvUIItem"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","MvUI",[]]],["Type","MvUIChild",[]],[]],"fe_representation":"MvUIItem :: MvUI -> MvUIChild"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectByContains"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UISelection",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectByContains :: UISelection -> UISelection"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectByAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","JSONNode",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectByAttribute :: String JSONNode -> UISelection"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectByHasAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectByHasAttribute :: String -> UISelection"},["Tip"],["Tip"]]]]]]]],["Bin",323,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",34],["Just",29],"Detached"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskAttributes",[]],["Type","Bool",[]]],["Type","ParallelTaskType",[]],[]],"fe_representation":"Detached :: TaskAttributes Bool -> ParallelTaskType"},["Bin",156,["Location","iTasks","iTasks.UI.Layout.Common",["Just",89],["Nothing"],"InContainer"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","InContainer",[]],[]],"fe_representation":"InContainer :: InContainer"},["Bin",62,["Location","iTasks","iTasks.UI.Layout",["Just",161],["Just",488],"removeSubUIsRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UISelection",[]]],["Type","Layout",[]],[]],"fe_representation":"removeSubUIsRef_ :: UISelection -> Layout"},["Bin",33,["Location","iTasks","iTasks.UI.Layout",["Just",115],["Just",325],"unwrapUI"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"unwrapUI :: Layout"},["Bin",17,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectOR"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UISelection",[]],["Type","UISelection",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectOR :: UISelection UISelection -> UISelection"},["Bin",6,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectChildren"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UISelection",[]],[]],"fe_representation":"SelectChildren :: UISelection"},["Bin",2,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectByType"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UINodeType",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectByType :: UINodeType -> UISelection"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectByPath"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UIPath",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectByPath :: UIPath -> UISelection"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectNOT"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UISelection",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectNOT :: UISelection -> UISelection"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectDescendents"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UISelection",[]],[]],"fe_representation":"SelectDescendents :: UISelection"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectNone"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UISelection",[]],[]],"fe_representation":"SelectNone :: UISelection"},["Tip"],["Tip"]]]],["Bin",10,["Location","iTasks","iTasks.UI.Layout",["Just",104],["Just",103],"delUIAttributes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributeSelection",[]]],["Type","Layout",[]],[]],"fe_representation":"delUIAttributes :: UIAttributeSelection -> Layout"},["Bin",6,["Location","iTasks","iTasks.UI.Layout",["Just",90],["Nothing"],"SelectKeys"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","_List",[["Type","String",[]]]]],["Type","UIAttributeSelection",[]],[]],"fe_representation":"SelectKeys :: [String] -> UIAttributeSelection"},["Bin",2,["Location","iTasks","iTasks.UI.Layout",["Just",90],["Nothing"],"SelectAll"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","UIAttributeSelection",[]],[]],"fe_representation":"SelectAll :: UIAttributeSelection"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"SelectRelative"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UIPath",[]],["Type","UISelection",[]]],["Type","UISelection",[]],[]],"fe_representation":"SelectRelative :: UIPath UISelection -> UISelection"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",100],["Just",57],"setUIType"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UINodeType",[]]],["Type","Layout",[]],[]],"fe_representation":"setUIType :: UINodeType -> Layout"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",97],["Just",54],"idLayout"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"idLayout :: Layout"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",103],["Just",74],"setUIAttributes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Layout",[]],[]],"fe_representation":"setUIAttributes :: UIAttributes -> Layout"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",107],["Just",171],"copySubUIAttributes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributeSelection",[]],["Type","UIPath",[]],["Type","UIPath",[]]],["Type","Layout",[]],[]],"fe_representation":"copySubUIAttributes :: UIAttributeSelection UIPath UIPath -> Layout"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",105],["Just",130],"modifyUIAttributes"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributeSelection",[]],["Func",[["Type","UIAttributes",[]]],["Type","UIAttributes",[]],[]]],["Type","Layout",[]],[]],"fe_representation":"modifyUIAttributes :: UIAttributeSelection (UIAttributes -> UIAttributes) -> Layout"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",112],["Just",305],"wrapUI"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UINodeType",[]]],["Type","Layout",[]],[]],"fe_representation":"wrapUI :: UINodeType -> Layout"},["Tip"],["Tip"]]]]],["Bin",15,["Location","iTasks","iTasks.UI.Layout",["Just",153],["Just",69],"setUITypeRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UINodeType",[]]],["Type","Layout",[]],[]],"fe_representation":"setUITypeRef_ :: UINodeType -> Layout"},["Bin",7,["Location","iTasks","iTasks.UI.Layout",["Just",138],["Just",951],"layoutSubUIs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UISelection",[]],["Type","Layout",[]]],["Type","Layout",[]],[]],"fe_representation":"layoutSubUIs :: UISelection Layout -> Layout","fe_documentation":["FunctionDoc",["Just","Apply a layout locally to parts of a UI"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",126],["Just",484],"removeSubUIs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UISelection",[]]],["Type","Layout",[]],[]],"fe_representation":"removeSubUIs :: UISelection -> Layout","fe_documentation":["FunctionDoc",["Just","Remove all elements that match the predicate, but keep the removed elements in the state.\nFurther changes to these elements are processed in the background. When the predicate no longer holds, the elements are inserted back into the UI.\nWhen new elements are added dynamically they are also tested against the predicate"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",120],["Just",377],"insertChildUI"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","UI",[]]],["Type","Layout",[]],[]],"fe_representation":"insertChildUI :: Int UI -> Layout"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",132],["Just",499],"moveSubUIs"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UISelection",[]],["Type","UIPath",[]],["Type","Int",[]]],["Type","Layout",[]],[]],"fe_representation":"moveSubUIs :: UISelection UIPath Int -> Layout","fe_documentation":["FunctionDoc",["Just","Move all elements that match the predicate to a particular location in the tree.\nFurther changes to these elements are rewritten to target the new location.\nWhen new elements are added dynamically they are also tested against the predicate"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",148],["Just",1119],"referenceLayout"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","UI",[]]],["Type","UI",[]],[]]],["Type","Layout",[]],[]],"fe_representation":"referenceLayout :: (UI -> UI) -> Layout","fe_documentation":["FunctionDoc",["Just","This layout can apply any transformation on UI's, but it replaces everything on each change.\nUse this only as a debugging tool, because it will effectively remove the minimal data exchange of editors with UIChanges"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",142],["Just",1093],"sequenceLayouts"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Layout",[]],["Type","Layout",[]]],["Type","Layout",[]],[]],"fe_representation":"sequenceLayouts :: Layout Layout -> Layout","fe_documentation":["FunctionDoc",["Just","Apply multiple layouts sequentially. The UI changes that have been transformed by one layout are further transformed by the next layout"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",150],["Just",1133],"applyLayout"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Layout",[]],["Type","UI",[]]],["Type","UI",[]],[]],"fe_representation":"applyLayout :: Layout UI -> UI"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.UI.Layout",["Just",157],["Just",289],"copySubUIAttributesRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributeSelection",[]],["Type","UIPath",[]],["Type","UIPath",[]]],["Type","Layout",[]],[]],"fe_representation":"copySubUIAttributesRef_ :: UIAttributeSelection UIPath UIPath -> Layout"},["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",155],["Just",125],"delUIAttributesRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributeSelection",[]]],["Type","Layout",[]],[]],"fe_representation":"delUIAttributesRef_ :: UIAttributeSelection -> Layout"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",154],["Just",98],"setUIAttributesRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributes",[]]],["Type","Layout",[]],[]],"fe_representation":"setUIAttributesRef_ :: UIAttributes -> Layout"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",156],["Just",158],"modifyUIAttributesRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIAttributeSelection",[]],["Func",[["Type","UIAttributes",[]]],["Type","UIAttributes",[]],[]]],["Type","Layout",[]],[]],"fe_representation":"modifyUIAttributesRef_ :: UIAttributeSelection (UIAttributes -> UIAttributes) -> Layout"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",159],["Just",369],"unwrapUIRef_"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"unwrapUIRef_ :: Layout"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",158],["Just",320],"wrapUIRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UINodeType",[]]],["Type","Layout",[]],[]],"fe_representation":"wrapUIRef_ :: UINodeType -> Layout"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",160],["Just",477],"insertChildUIRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","UI",[]]],["Type","Layout",[]],[]],"fe_representation":"insertChildUIRef_ :: Int UI -> Layout"},["Tip"],["Tip"]]]]]],["Bin",28,["Location","iTasks","iTasks.UI.Layout.Common",["Just",67],["Nothing"],"ArrangeVertical"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrangeVertical",[]],[]],"fe_representation":"ArrangeVertical :: ArrangeVertical"},["Bin",17,["Location","iTasks","iTasks.UI.Layout",["Just",172],["Nothing"],"NoTaskHost"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TaskHost",[["Var","a"]]],[]],"fe_representation":"NoTaskHost :: TaskHost a"},["Bin",6,["Location","iTasks","iTasks.UI.Layout",["Just",168],["Nothing"],"BranchLayout"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","LayoutState",[]]],["Type","NodeLayoutState",[]],[]],"fe_representation":"BranchLayout :: LayoutState -> NodeLayoutState"},["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",163],["Just",1085],"layoutSubUIsRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UISelection",[]],["Type","Layout",[]]],["Type","Layout",[]],[]],"fe_representation":"layoutSubUIsRef_ :: UISelection Layout -> Layout"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",162],["Just",503],"moveSubUIsRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UISelection",[]],["Type","UIPath",[]],["Type","Int",[]]],["Type","Layout",[]],[]],"fe_representation":"moveSubUIsRef_ :: UISelection UIPath Int -> Layout"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",164],["Just",1114],"sequenceLayoutsRef_"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Layout",[]],["Type","Layout",[]]],["Type","Layout",[]],[]],"fe_representation":"sequenceLayoutsRef_ :: Layout Layout -> Layout"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Layout",["Just",172],["Nothing"],"InTaskHost"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TaskHost",[["Var","a"]]],[]],"fe_representation":"InTaskHost :: TaskHost a"},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",168],["Nothing"],"ChildBranchLayout"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","NodeLayoutStates",[]]],["Type","NodeLayoutState",[]],[]],"fe_representation":"ChildBranchLayout :: NodeLayoutStates -> NodeLayoutState"},["Tip"],["Tip"]],["Tip"]]],["Bin",10,["Location","iTasks","iTasks.UI.Layout.Common",["Just",55],["Just",54],"beforeStep"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Layout",[]]],["Type","Layout",[]],[]],"fe_representation":"beforeStep :: Layout -> Layout","fe_documentation":["FunctionDoc",["Just","Apply a layout only before a step has been made"],[],[],["Nothing"]]},["Bin",6,["Location","iTasks","iTasks.UI.Layout.Common",["Just",33],["Just",33],"arrangeSplit"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIDirection",[]],["Type","Bool",[]]],["Type","Layout",[]],[]],"fe_representation":"arrangeSplit :: !UIDirection !Bool -> Layout","fe_documentation":["FunctionDoc",["Just","Divide the available screen space"],["Direction to split the available space in","Enable resize?"],[],["Nothing"]]},["Bin",2,["Location","iTasks","iTasks.UI.Layout.Common",["Just",25],["Just",16],"arrangeWithSideBar"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","UISide",[]],["Type","Int",[]],["Type","Bool",[]]],["Type","Layout",[]],[]],"fe_representation":"arrangeWithSideBar :: !Int !UISide !Int !Bool -> Layout","fe_documentation":["FunctionDoc",["Just","Extract one child item and put it in a separate panel at the side of the screen"],["Index of the task in the set that should be put in the sidebar","Location of the sidebar","Initial size of the sidebar","Enable resize?"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",15],["Just",13],"arrangeWithTabs"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"arrangeWithTabs :: Layout","fe_documentation":["FunctionDoc",["Just","Create a tabset with all child items as separate tabs"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.UI.Layout.Common",["Just",43],["Just",43],"arrangeHorizontal"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"arrangeHorizontal :: Layout","fe_documentation":["FunctionDoc",["Just","Turn current UI into a panel and set direction to vertical."],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",38],["Just",40],"arrangeVertical"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"arrangeVertical :: Layout","fe_documentation":["FunctionDoc",["Just","Turn current UI into a panel and set direction to vertical."],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",50],["Just",46],"frameCompact"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"frameCompact :: Layout","fe_documentation":["FunctionDoc",["Just","Turn the UI into a wrapping framed container inside a general container\nUse this is if you don't want to use the entire viewport"],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.UI.Layout.Common",["Just",61],["Nothing"],"ArrangeWithSideBar"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]],["Type","UISide",[]],["Type","Int",[]],["Type","Bool",[]]],["Type","ArrangeWithSideBar",[]],[]],"fe_representation":"ArrangeWithSideBar :: Int UISide Int Bool -> ArrangeWithSideBar"},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",58],["Nothing"],"ArrangeWithTabs"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrangeWithTabs",[]],[]],"fe_representation":"ArrangeWithTabs :: ArrangeWithTabs"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",64],["Nothing"],"ArrangeSplit"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UIDirection",[]],["Type","Bool",[]]],["Type","ArrangeSplit",[]],[]],"fe_representation":"ArrangeSplit :: UIDirection Bool -> ArrangeSplit"},["Tip"],["Tip"]]]]],["Bin",10,["Location","iTasks","iTasks.UI.Layout.Common",["Just",77],["Just",57],"toWindow"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","UIWindowType",[]],["Type","UIVAlign",[]],["Type","UIHAlign",[]]],["Type","Layout",[]],[]],"fe_representation":"toWindow :: UIWindowType UIVAlign UIHAlign -> Layout"},["Bin",3,["Location","iTasks","iTasks.UI.Layout.Common",["Just",75],["Just",75],"toContainer"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"toContainer :: Layout"},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",70],["Nothing"],"ArrangeHorizontal"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ArrangeHorizontal",[]],[]],"fe_representation":"ArrangeHorizontal :: ArrangeHorizontal"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",76],["Just",78],"toPanel"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"toPanel :: Layout"},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.UI.Layout.Common",["Just",82],["Nothing"],"InFloatingWindow"],{"fe_kind":["Macro"],"fe_representation":"InFloatingWindow :== ToWindow FloatingWindow AlignMiddle AlignCenter"},["Bin",3,["Location","iTasks","iTasks.UI.Layout.Common",["Just",80],["Nothing"],"ToWindow"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","UIWindowType",[]],["Type","UIVAlign",[]],["Type","UIHAlign",[]]],["Type","ToWindow",[]],[]],"fe_representation":"ToWindow :: UIWindowType UIVAlign UIHAlign -> ToWindow"},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",78],["Just",72],"toEmpty"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"toEmpty :: Layout"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",81],["Nothing"],"InWindow"],{"fe_kind":["Macro"],"fe_representation":"InWindow :== InFloatingWindow"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Layout.Common",["Just",83],["Nothing"],"InNotificationBubble"],{"fe_kind":["Macro"],"fe_representation":"InNotificationBubble :== ToWindow NotificationBubble AlignTop AlignRight"},["Tip"],["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",86],["Nothing"],"InPanel"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","InPanel",[]],[]],"fe_representation":"InPanel :: InPanel"},["Tip"],["Tip"]]]]]]],["Bin",93,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",341],["Just",258],"ifValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Bool",[]],[]],["Func",[["Var","a"]],["Var","b"],[]],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"ifValue :: (a -> Bool) (a -> b) (TaskValue a) -> Maybe b"},["Bin",61,["Location","iTasks","iTasks.Util.Trace",["Just",15],["Just",46],"sideBySideTrace"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_Tuple2",[["Type","String",[]],["Var","a"]]],["Type","_Tuple2",[["Type","String",[]],["Var","a"]]]],["Type","String",[]],[[["Generic","gPrettyTrace",["KindConst"]],["Var","a"]]]],"fe_representation":"sideBySideTrace :: (String,a) (String,a) -> String | gPrettyTrace{|*|} a"},["Bin",17,["Location","iTasks","iTasks.UI.Prompt",["Just",16],["Nothing"],"Title"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Title",[]],[]],"fe_representation":"Title :: String -> Title"},["Bin",9,["Location","iTasks","iTasks.UI.Layout.Default",["Just",11],["Just",36],"finalizeInteract"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"finalizeInteract :: Layout"},["Bin",5,["Location","iTasks","iTasks.UI.Layout.Default",["Just",8],["Just",20],"defaultSessionLayout"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"defaultSessionLayout :: Layout"},["Bin",3,["Location","iTasks","iTasks.UI.Layout.Common",["Just",95],["Just",81],"actionToButton"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"actionToButton :: Layout"},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",92],["Nothing"],"NoUserInterface"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","NoUserInterface",[]],[]],"fe_representation":"NoUserInterface :: NoUserInterface"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",97],["Just",111],"setActionIcon"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Map",[["Type","String",[]],["Type","String",[]]]]],["Type","Layout",[]],[]],"fe_representation":"setActionIcon :: (Map String String) -> Layout"},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.UI.Layout.Default",["Just",10],["Just",29],"finalizeUI"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"finalizeUI :: Layout"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Layout.Default",["Just",13],["Just",123],"finalizeParallel"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"finalizeParallel :: Layout"},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Default",["Just",12],["Just",99],"finalizeStep"],{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Layout",[]],[]],"fe_representation":"finalizeStep :: Layout"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Prompt",["Just",14],["Nothing"],"Att"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"]],["Type","Att",[]],[[["Class","toPrompt"],["Var","a"]]]],"fe_representation":"Att :: a -> Att | toPrompt a"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.UI.Prompt",["Just",19],["Nothing"],"IconEdit"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Icon",[]],[]],"fe_representation":"IconEdit :: Icon"},["Bin",3,["Location","iTasks","iTasks.UI.Prompt",["Just",18],["Nothing"],"Hint"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Hint",[]],[]],"fe_representation":"Hint :: String -> Hint"},["Bin",1,["Location","iTasks","iTasks.UI.Prompt",["Just",17],["Nothing"],"Label"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Label",[]],[]],"fe_representation":"Label :: String -> Label"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Prompt",["Just",19],["Nothing"],"Icon"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Icon",[]],[]],"fe_representation":"Icon :: String -> Icon"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Util.Trace",["Just",6],["Just",9],"gPrettyTrace"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"]],["Type","_List",[["Type","String",[]]]],[]],"fe_generic_vars":["a"],"fe_representation":"generic gPrettyTrace a :: Int a -> [String]"},["Bin",1,["Location","iTasks","iTasks.UI.Prompt",["Just",19],["Nothing"],"IconView"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Icon",[]],[]],"fe_representation":"IconView :: Icon"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Util.Trace",["Just",13],["Just",43],"prettyTrace"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[[["Generic","gPrettyTrace",["KindConst"]],["Var","a"]]]],"fe_representation":"prettyTrace :: a -> String | gPrettyTrace{|*|} a"},["Tip"],["Tip"]]]]],["Bin",43,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",246],["Just",172],"feedSideways"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Type","ReadOnlyShared",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_representation":"feedSideways :: (Task a) ((ReadOnlyShared (Maybe a)) -> Task b) -> Task a | iTask a & iTask b"},["Bin",27,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",174],["Just",106],"<!"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Var","a"]],["Type","Bool",[]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_priority":["LeftAssoc",6],"fe_representation":"(<!) infixl 6 :: !(Task a) !(a -> .Bool) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Repeats a task until a given predicate holds. The predicate is tested as soon as the\ngiven task is finished. When it does not hold, the task is restarted."],["Task: The task to be looped","Predicate: The predicate over the result of the task to determine if the combination is finished"],[],["Just","The combined task"]]},["Bin",19,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",109],["Just",57],"<@@"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Cons","b",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","tunev"],["Cons","b",[["Var","a"]]]],[["Class","iTask"],["Var","a"]]]],"fe_priority":["LeftAssoc",2],"fe_representation":"(<@@) infixl 2 :: !(Task a) !(b a) -> Task a | tunev b a & iTask a"},["Bin",11,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",94],["Just",45],"@"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Var","a"]],["Var","b"],[]]],["Type","Task",[["Var","b"]]],[]],"fe_priority":["LeftAssoc",1],"fe_representation":"(@) infixl 1 :: !(Task a) !(a -> b) -> Task b","fe_documentation":["FunctionDoc",["Just","Infix shorthand for transform combinator which only deals which transforms valid results"],["Task: The task on which the transform should be applied","The transformation function to apply"],[],["Just","The transformed task"]]},["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",55],["Just",33],">>-"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>>-) infixl 1 :: !(Task a) !(a -> Task b) -> Task b | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Combines two tasks sequentially but continues only when the first task has a stable value."],["First: The first task to be executed","Second: The second task, which receives the result of the first task"],[],["Just","The combined task"]]},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",36],["Just",27],"tbind"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_representation":"tbind :: !(Task a) !(a -> Task b) -> Task b | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Combines two tasks sequentially. The first task is executed first. When it has a value\nthe user may continue to the second task, which is executed with the result of the first task as parameter.\nIf the first task becomes stable, the second task is started automatically."],["First: The first task to be executed","Second: The second task, which receives the result of the first task"],[],["Just","The combined task"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",21],["Just",24],">>*"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","_List",[["Type","TaskCont",[["Var","a"],["Type","Task",[["Var","b"]]]]]]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>>*) infixl 1 :: !(Task a) ![TaskCont a (Task b)] -> Task b | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Infix shorthand for step combinator"],["Task: The task for which continuations are defined","The possible continuations"],[],["Just","The continuation's result"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",47],["Just",30],">>!"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>>!) infixl 1 :: !(Task a) !(a -> Task b) -> Task b | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Combines two tasks sequentially but explicitly waits for user input to confirm the completion of\nthe first task."],["First: The first task to be executed","Second: The second task, which receives the result of the first task"],[],["Just","The combined task"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",74],["Just",39],">>^"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","Task",[["Var","b"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>>^) infixl 1 :: !(Task a) (Task b) -> Task a | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Combines two tasks sequentially just as >>=, but the result of the second task is disregarded."],["First: The first task to be executed","Second: The second task to be executed"],[],["Just","The combined task"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",63],["Just",36],">>~"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>>~) infixl 1 :: !(Task a) !(a -> Task b) -> Task b | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Combines two tasks sequentially but continues only when the first task has a value."],["First: The first task to be executed","Second: The second task, which receives the result of the first task"],[],["Just","The combined task"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",84],["Just",42],"@?"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Type","TaskValue",[["Var","a"]]]],["Type","TaskValue",[["Var","b"]]],[]]],["Type","Task",[["Var","b"]]],[]],"fe_priority":["LeftAssoc",1],"fe_representation":"(@?) infixl 1 :: !(Task a) !((TaskValue a) -> TaskValue b) -> Task b","fe_documentation":["FunctionDoc",["Just","Infix shorthand for transform combinator"],["Task: The task on which the transform should be applied","The transformation function to apply"],[],["Just","The transformed task"]]},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",107],["Just",51],"<<@"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Var","b"]],["Type","Task",[["Var","a"]]],[[["Class","tune"],["Var","b"]]]],"fe_priority":["LeftAssoc",2],"fe_representation":"(<<@) infixl 2 :: !(Task a) !b -> Task a | tune b","fe_documentation":["FunctionDoc",["Just","Infix shorthands for the (overloaded) tune combinator."],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",103],["Just",48],"@!"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Var","b"]],["Type","Task",[["Var","b"]]],[]],"fe_priority":["LeftAssoc",1],"fe_representation":"(@!) infixl 1 :: !(Task a) !b -> Task b","fe_documentation":["FunctionDoc",["Just","Infix shorthand for transform combinator which maps results to a constant value\nStability of the task is propagated from the original value"],["Task: The task on which the transform should be applied","The constant task value"],[],["Just","The transformed task"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",108],["Just",54],"@>>"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","b"],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","tune"],["Var","b"]]]],"fe_priority":["RightAssoc",2],"fe_representation":"(@>>) infixr 2 :: !b !(Task a) -> Task a | tune b"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",130],["Just",63],"try"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Var","e"]],["Type","Task",[["Var","a"]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","e"]],[["Class","toString"],["Var","e"]]]],"fe_representation":"try :: !(Task a) (e -> Task a) -> Task a | iTask a & iTask e & toString e","fe_documentation":["FunctionDoc",["Just","Exception combinator."],["Task: The normal task which will possibly raise an exception of type e","Handler: The exception handling task which gets the exception as parameter"],[],["Just","The combined task"]]},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",117],["Just",69],">^*"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","_List",[["Type","TaskCont",[["Var","a"],["Type","Task",[["Var","b"]]]]]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>^*) infixl 1 :: !(Task a) ![TaskCont a (Task b)] -> Task a | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","'Sidestep' combinator. This combinator has a similar signature as the core 'step'\ncombinator, but instead of moving forward to a next step, the selected step is executed\nin parallel with the first task. When the chosen task step becomes stable, it is removed\nand the actions are enabled again."],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",110],["Just",60],"@@>"],{"fe_kind":["Function"],"fe_type":["Func",[["Cons","b",[["Var","a"]]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","tunev"],["Cons","b",[["Var","a"]]]],[["Class","iTask"],["Var","a"]]]],"fe_priority":["RightAssoc",2],"fe_representation":"(@@>) infixr 2 :: !(b a) !(Task a) -> Task a | tunev b a & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",118],["Just",72],"sideStep"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","_List",[["Type","TaskCont",[["Var","a"],["Type","Task",[["Var","b"]]]]]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_representation":"sideStep :: !(Task a) ![TaskCont a (Task b)] -> Task a | iTask a & iTask b"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",151],["Just",93],"justdo"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"justdo :: !(Task (Maybe a)) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Execute a Maybe task that you expect to always return Just.\nThrow an exception if it returns nothing"],["The task that could in theory return Nothing"],[],["Just","The result of the task"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",140],["Just",66],"catchAll"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Type","String",[]]],["Type","Task",[["Var","a"]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"catchAll :: !(Task a) (String -> Task a) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Catches all exceptions."],["Task: The normal task which will possibly raise an exception of any type","Handler: The exception handling task"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",162],["Just",99],"sequence"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","_List",[["Type","Task",[["Var","a"]]]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"sequence :: !String ![Task a] -> Task [a] | iTask a","fe_documentation":["FunctionDoc",["Just","Execute the list of tasks one after another."],["Label: A label for tracing","Tasks: The list of tasks to be executed sequentially"],[],["Just","The combined task"]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",221],["Just",141],"-||"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","Task",[["Var","b"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",3],"fe_representation":"(-||) infixl 3 :: !(Task a) !(Task b) -> Task a | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Group two tasks in parallel, return the result of the left task"],["Left: The left task","Right: The right task"],[],["Just","The result of the task that is completed first"]]},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",197],["Just",130],"-||-"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_priority":["RightAssoc",3],"fe_representation":"(-||-) infixr 3 :: !(Task a) !(Task a) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Group two tasks in parallel, return the result of the first completed task."],["Left: The left task","Right: The right task"],[],["Just","The result of the task that is completed first"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",185],["Just",127],"forever"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"forever :: !(Task a) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Repeats a task infinitely. As soon as the task is stable, it is restarted immediately.\nAs a consequence, the combined task never stabilizes."],["Task: The task that has to be repeated infinitely"],[],["Just","The combined task"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",209],["Just",133],"||-"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","Task",[["Var","b"]]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["RightAssoc",3],"fe_representation":"(||-) infixr 3 :: !(Task a) !(Task b) -> Task b | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Group two tasks in parallel, return the result of the right task"],["Left: The left task","Right: The right task"],[],["Just","The result of the task that is completed first"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",240],["Just",157],"feedForward"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Type","ReadOnlyShared",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_representation":"feedForward :: (Task a) ((ReadOnlyShared (Maybe a)) -> Task b) -> Task b | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Feed the result of one task as read-only shared to another"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",235],["Just",149],"-&&-"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","Task",[["Var","b"]]]],["Type","Task",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["RightAssoc",4],"fe_representation":"(-&&-) infixr 4 :: !(Task a) !(Task b) -> Task (a,b) | iTask a & iTask b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",243],["Just",169],">&>"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Type","ReadOnlyShared",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>&>) infixl 1 :: (Task a) ((ReadOnlyShared (Maybe a)) -> Task b) -> Task b | iTask a & iTask b"},["Tip"],["Tip"]]]]],["Bin",15,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",319],["Just",237],"whileUnchangedWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Func",[["Var","r"]],["Type","Bool",[]],[]],[]],["Type","ReadWriteShared",[["Var","r"],["Var","w"]]],["Func",[["Var","r"]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","b"]]]],"fe_representation":"whileUnchangedWith :: !(r -> r -> Bool) !(ReadWriteShared r w) (r -> Task b) -> Task b | iTask r & iTask w & iTask b"},["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",290],["Just",205],"eitherTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Type","Task",[["Var","b"]]]],["Type","Task",[["Type","Either",[["Var","a"],["Var","b"]]]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_representation":"eitherTask :: !(Task a) !(Task b) -> Task (Either a b) | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Group two tasks in parallel of which only one needs to be completed.\nThe tasks can have different types. The 'Either' results indicates which task completed."],["Left: The left task","Right: The right task"],[],["Just","The result of the first completed task wrapped in an 'Either'."]]},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",263],["Just",187],"anyTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Task",[["Var","a"]]]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"anyTask :: ![Task a] -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Group a list of tasks in parallel.\nThe group stops as soon as one result is available which is returned."],["Tasks: The list of tasks"],[],["Just","The first result"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",249],["Just",184],">&^"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Type","ReadOnlyShared",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>&^) infixl 1 :: (Task a) ((ReadOnlyShared (Maybe a)) -> Task b) -> Task a | iTask a & iTask b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",277],["Just",195],"allTasks"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","Task",[["Var","a"]]]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"allTasks :: ![Task a] -> Task [a] | iTask a","fe_documentation":["FunctionDoc",["Just","Group a list of tasks in parallel.\nThe group stops when all tasks are completed."],["Tasks: The list of tasks"],[],["Just","The list of results"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",312],["Just",212],"repeatTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Task",[["Var","a"]]],[]],["Func",[["Var","a"]],["Type","Bool",[]],[]],["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"repeatTask :: !(a -> Task a) !(a -> Bool) a -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Iterate a task as long as a predicate is not valid."],["Task function: A task function to repeat. At each iteration the result of the previous iteration is given.","Predicate: A predicate to test if we can stop.","Initial value: An initial value for the first iteration."],[],["Just","The result of the last iteration (that thus satisfies the predicate)"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",299],["Just",208],"randomChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"randomChoice :: ![a] -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Randomly selects one item from a list."],["Options: The list of options"],[],["Just","The chosen item"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",318],["Just",218],"whileUnchanged"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ReadWriteShared",[["Var","r"],["Var","w"]]],["Func",[["Var","r"]],["Type","Task",[["Var","b"]]],[]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","b"]]]],"fe_representation":"whileUnchanged :: !(ReadWriteShared r w) (r -> Task b) -> Task b | iTask r & iTask b","fe_documentation":["FunctionDoc",["Just","Do a task as long while monitoring that a shared state remains unchanged.\nWhen the share changes the task is restarted"],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",335],["Just",255],"never"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","b"],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"never :: b (TaskValue a) -> Maybe b"},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",331],["Just",245],"appendTopLevelTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskAttributes",[]],["Type","Bool",[]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Type","TaskId",[]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"appendTopLevelTask :: !TaskAttributes !Bool !(Task a) -> Task TaskId | iTask a","fe_documentation":["FunctionDoc",["Just","Append a task to the set of top level tasks"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",325],["Just",242],"withSelection"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","c"]]],["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]],["Type","ReadOnlyShared",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]],[["Class","iTask"],["Var","c"]]]],"fe_representation":"withSelection :: (Task c) (a -> Task b) (ReadOnlyShared (Maybe a)) -> Task b | iTask a & iTask b & iTask c","fe_documentation":["FunctionDoc",["Just","Do a task when there is a Just value in the share\nDo a default task when there is a Nothing value"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",334],["Just",252],"always"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","b"],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"always :: b (TaskValue a) -> Maybe b"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",338],["Just",272],"ifStable"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"ifStable :: (a -> b) (TaskValue a) -> Maybe b"},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",337],["Just",264],"hasValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"hasValue :: (a -> b) (TaskValue a) -> Maybe b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",339],["Just",276],"ifUnstable"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"ifUnstable :: (a -> b) (TaskValue a) -> Maybe b"},["Tip"],["Tip"]]]]]]],["Bin",31,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",17],["Nothing"],"ActionNext"],{"fe_kind":["Macro"],"fe_representation":"ActionNext :== Action \"Next\""},["Bin",15,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",355],["Just",303],"tvSnd"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskValue",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]],["Type","TaskValue",[["Var","b"]]],[]],"fe_representation":"tvSnd :: (TaskValue (a,b)) -> TaskValue b"},["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",348],["Just",288],"withStable"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Maybe",[["Var","b"]]],[]],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"withStable :: (a -> Maybe b) (TaskValue a) -> Maybe b"},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",344],["Just",280],"withoutValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Var","b"]]],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"withoutValue :: (Maybe b) (TaskValue a) -> Maybe b"},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",342],["Just",268],"ifCond"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Var","b"],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"ifCond :: Bool b (TaskValue a) -> Maybe b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",346],["Just",284],"withValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Maybe",[["Var","b"]]],[]],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"withValue :: (a -> Maybe b) (TaskValue a) -> Maybe b"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",353],["Just",296],"tvHd"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskValue",[["Type","_List",[["Var","a"]]]]]],["Type","TaskValue",[["Var","a"]]],[]],"fe_representation":"tvHd :: (TaskValue [a]) -> TaskValue a"},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",350],["Just",292],"withUnstable"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Type","Maybe",[["Var","b"]]],[]],["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],"fe_representation":"withUnstable :: (a -> Maybe b) (TaskValue a) -> Maybe b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",354],["Just",300],"tvFst"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskValue",[["Type","_Tuple2",[["Var","a"],["Var","b"]]]]]],["Type","TaskValue",[["Var","a"]]],[]],"fe_representation":"tvFst :: (TaskValue (a,b)) -> TaskValue a"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",13],["Nothing"],"ActionOk"],{"fe_kind":["Macro"],"fe_representation":"ActionOk :== Action \"Ok\""},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",357],["Just",310],"tvToMaybe"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskValue",[["Var","a"]]]],["Type","TaskValue",[["Type","Maybe",[["Var","a"]]]]],[]],"fe_representation":"tvToMaybe :: (TaskValue a) -> TaskValue (Maybe a)"},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Common",["Just",356],["Just",306],"tvFromMaybe"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskValue",[["Type","Maybe",[["Var","a"]]]]]],["Type","TaskValue",[["Var","a"]]],[]],"fe_representation":"tvFromMaybe :: (TaskValue (Maybe a)) -> TaskValue a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",10],["Just",27],"Action"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Action",[]],[]],"fe_representation":"Action :: String -> Action"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",15],["Nothing"],"ActionYes"],{"fe_kind":["Macro"],"fe_representation":"ActionYes :== Action \"Yes\""},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",14],["Nothing"],"ActionCancel"],{"fe_kind":["Macro"],"fe_representation":"ActionCancel :== Action \"Cancel\""},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",16],["Nothing"],"ActionNo"],{"fe_kind":["Macro"],"fe_representation":"ActionNo :== Action \"No\""},["Tip"],["Tip"]]]]],["Bin",15,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",25],["Nothing"],"ActionHelp"],{"fe_kind":["Macro"],"fe_representation":"ActionHelp :== Action \"\/Help\/Help\""},["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",21],["Nothing"],"ActionOpen"],{"fe_kind":["Macro"],"fe_representation":"ActionOpen :== Action \"\/File\/Open\""},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",19],["Nothing"],"ActionFinish"],{"fe_kind":["Macro"],"fe_representation":"ActionFinish :== Action \"Finish\""},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",18],["Nothing"],"ActionPrevious"],{"fe_kind":["Macro"],"fe_representation":"ActionPrevious :== Action \"Previous\""},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",20],["Nothing"],"ActionContinue"],{"fe_kind":["Macro"],"fe_representation":"ActionContinue :== Action \"Continue\""},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",23],["Nothing"],"ActionSaveAs"],{"fe_kind":["Macro"],"fe_representation":"ActionSaveAs :== Action \"\/File\/Save as\""},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",22],["Nothing"],"ActionSave"],{"fe_kind":["Macro"],"fe_representation":"ActionSave :== Action \"\/File\/Save\""},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",24],["Nothing"],"ActionQuit"],{"fe_kind":["Macro"],"fe_representation":"ActionQuit :== Action \"\/File\/Quit\""},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",29],["Nothing"],"ActionEdit"],{"fe_kind":["Macro"],"fe_representation":"ActionEdit :== Action \"Edit\""},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",27],["Nothing"],"ActionFind"],{"fe_kind":["Macro"],"fe_representation":"ActionFind :== Action \"\/Edit\/Find\""},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",26],["Nothing"],"ActionAbout"],{"fe_kind":["Macro"],"fe_representation":"ActionAbout :== Action \"\/Help\/About\""},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",28],["Nothing"],"ActionNew"],{"fe_kind":["Macro"],"fe_representation":"ActionNew :== Action \"New\""},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",31],["Nothing"],"ActionRefresh"],{"fe_kind":["Macro"],"fe_representation":"ActionRefresh :== Action \"Refresh\""},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",30],["Nothing"],"ActionDelete"],{"fe_kind":["Macro"],"fe_representation":"ActionDelete :== Action \"Delete\""},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",32],["Nothing"],"ActionClose"],{"fe_kind":["Macro"],"fe_representation":"ActionClose :== Action \"Close\""},["Tip"],["Tip"]]]]]]]],["Bin",166,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",29],["Nothing"],"SelectInList"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","c"]],["Type","_List",[["Type","ChoiceText",[]]]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],["Type","SelectOption",[["Var","c"],["Var","s"]]],[]],"fe_representation":"SelectInList :: (c -> [ChoiceText]) (c -> [Int] -> [s]) -> SelectOption c s"},["Bin",101,["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",22],["Nothing"],"ApplyAttribute"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Var","a"]],["Type","ApplyAttribute",[["Var","a"]]],[]],"fe_representation":"ApplyAttribute :: String a -> ApplyAttribute a"},["Bin",41,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",56],["Just",51],"includeValue"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListFilter",[]]],["Type","Bool",[]],[]],"fe_representation":".includeValue :: TaskListFilter -> Bool"},["Bin",12,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",46],["Just",41],"progress"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListItem",[["Var","a"]]]],["Type","Maybe",[["Type","InstanceProgress",[]]]],[]],"fe_representation":".progress :: (TaskListItem a) -> Maybe InstanceProgress"},["Bin",6,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",46],["Just",41],"attributes"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListItem",[["Var","a"]]]],["Type","TaskAttributes",[]],[]],"fe_representation":".attributes :: (TaskListItem a) -> TaskAttributes"},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",34],["Just",29],"NamedDetached"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]],["Type","TaskAttributes",[]],["Type","Bool",[]]],["Type","ParallelTaskType",[]],[]],"fe_representation":"NamedDetached :: String TaskAttributes Bool -> ParallelTaskType"},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",34],["Just",29],"Embedded"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ParallelTaskType",[]],[]],"fe_representation":"Embedded :: ParallelTaskType"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",34],["Just",29],"NamedEmbedded"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","ParallelTaskType",[]],[]],"fe_representation":"NamedEmbedded :: String -> ParallelTaskType"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",46],["Just",41],"detached"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListItem",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":".detached :: (TaskListItem a) -> Bool"},["Tip"],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",46],["Just",41],"listId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListItem",[["Var","a"]]]],["Type","TaskId",[]],[]],"fe_representation":".listId :: (TaskListItem a) -> TaskId"},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",46],["Just",41],"value"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListItem",[["Var","a"]]]],["Type","TaskValue",[["Var","a"]]],[]],"fe_representation":".value :: (TaskListItem a) -> TaskValue a"},["Bin",2,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",46],["Just",41],"self"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListItem",[["Var","a"]]]],["Type","Bool",[]],[]],"fe_representation":".self :: (TaskListItem a) -> Bool"},["Tip"],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",46],["Just",41],"taskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListItem",[["Var","a"]]]],["Type","TaskId",[]],[]],"fe_representation":".taskId :: (TaskListItem a) -> TaskId"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",56],["Just",51],"includeAttributes"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListFilter",[]]],["Type","Bool",[]],[]],"fe_representation":".includeAttributes :: TaskListFilter -> Bool"},["Tip"],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",56],["Just",51],"includeProgress"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListFilter",[]]],["Type","Bool",[]],[]],"fe_representation":".includeProgress :: TaskListFilter -> Bool"},["Tip"],["Tip"]]]]],["Bin",28,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",77],["Nothing"],"InstanceEvalError"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","AttachException",[]],[]],"fe_representation":"InstanceEvalError :: AttachException"},["Bin",8,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",56],["Just",51],"onlyTaskId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListFilter",[]]],["Type","Maybe",[["Type","_List",[["Type","TaskId",[]]]]]],[]],"fe_representation":".onlyTaskId :: TaskListFilter -> Maybe [TaskId]"},["Bin",2,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",56],["Just",51],"onlySelf"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListFilter",[]]],["Type","Bool",[]],[]],"fe_representation":".onlySelf :: TaskListFilter -> Bool"},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",56],["Just",51],"onlyIndex"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","TaskListFilter",[]]],["Type","Maybe",[["Type","_List",[["Type","Int",[]]]]]],[]],"fe_representation":".onlyIndex :: TaskListFilter -> Maybe [Int]"},["Tip"],["Tip"]],["Tip"]],["Bin",5,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",70],["Nothing"],"ASExcepted"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","AttachmentStatus",[]],[]],"fe_representation":"ASExcepted :: AttachmentStatus"},["Bin",2,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",70],["Nothing"],"ASDeleted"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","AttachmentStatus",[]],[]],"fe_representation":"ASDeleted :: AttachmentStatus"},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",70],["Nothing"],"ASAttached"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Stability",[]]],["Type","AttachmentStatus",[]],[]],"fe_representation":"ASAttached :: Stability -> AttachmentStatus"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",70],["Nothing"],"ASIncompatible"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","AttachmentStatus",[]],[]],"fe_representation":"ASIncompatible :: AttachmentStatus"},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",70],["Nothing"],"ASInUse"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]]],["Type","AttachmentStatus",[]],[]],"fe_representation":"ASInUse :: TaskId -> AttachmentStatus"},["Tip"],["Tip"]],["Tip"]]]],["Bin",19,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",109],["Nothing"],"OnException"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","e"]],["Var","b"],[]]],["Type","TaskCont",[["Var","a"],["Var","b"]]],[[["Class","iTask"],["Var","e"]]]],"fe_representation":"OnException :: (e -> b) -> TaskCont a b | iTask e"},["Bin",5,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",109],["Nothing"],"OnAction"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Action",[]],["Func",[["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]]],["Type","TaskCont",[["Var","a"],["Var","b"]]],[]],"fe_representation":"OnAction :: Action ((TaskValue a) -> Maybe b) -> TaskCont a b"},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",90],["Just",69],"transform"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","TaskValue",[["Var","a"]]]],["Type","TaskValue",[["Var","b"]]],[]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","b"]]],[]],"fe_representation":"transform :: ((TaskValue a) -> TaskValue b) !(Task a) -> Task b","fe_documentation":["FunctionDoc",["Just","Adds a result transformation function to a task.\nThe resulting task is still considered a single step in the workflow."],["Function: The transformation function. It works on maybe's to also map over instable tasks.","Task: The task to which the transformation function is added"],[],["Just","The transformed task"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",77],["Nothing"],"InstanceNotFound"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","AttachException",[]],[]],"fe_representation":"InstanceNotFound :: AttachException"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",107],["Just",77],"step"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]],["Func",[["Type","Maybe",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]],["Type","_List",[["Type","TaskCont",[["Var","a"],["Type","Task",[["Var","b"]]]]]]]],["Type","Task",[["Var","b"]]],[[["Class","TC"],["Var","a"]],[["Generic","JSONDecode",["KindConst"]],["Var","a"]],[["Generic","JSONEncode",["KindConst"]],["Var","a"]]]],"fe_representation":"step :: !(Task a) ((Maybe a) -> Maybe b) [TaskCont a (Task b)] -> Task b | TC a & JSONDecode{|*|} a & JSONEncode{|*|} a","fe_documentation":["FunctionDoc",["Just","The generic sequential combinator.\nIt does a task followed by one out of a given list of continuations.\nOnce the transition to the continuation has been made it cannot be reversed."],["Task: The first step in the sequence","Value before step function: Computes the value of the composition before a step is taken","Continuations: A set of continuation definitions from which one is selected to make the step\n-OnValue: inspect the value, step if the predicate matches\n-OnAction: enable an action if the predicate matches, step if the actions is chosen\n-OnException: Provides an exception handler for exceptions of type e\n-OnAllExceptions: Provides an exception handler that catches all exceptions"],[],["Just","The combined task"]]},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",109],["Nothing"],"OnAllExceptions"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Type","String",[]]],["Var","b"],[]]],["Type","TaskCont",[["Var","a"],["Var","b"]]],[]],"fe_representation":"OnAllExceptions :: (String -> b) -> TaskCont a b"},["Tip"],["Tip"]]],["Bin",13,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",152],["Just",725],"focusTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]],["Type","SharedTaskList",[["Var","a"]]]],["Type","Task",[["Type","_Unit",[]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"focusTask :: !TaskId !(SharedTaskList a) -> Task () | iTask a","fe_documentation":["FunctionDoc",["Just","Focuses a task in a task list"],[],[],["Nothing"]]},["Bin",5,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",143],["Just",644],"removeTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]],["Type","SharedTaskList",[["Var","a"]]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"removeTask :: !TaskId !(SharedTaskList a) -> Task ()","fe_documentation":["FunctionDoc",["Just","Removes (and stops) a task from a task list"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",133],["Just",241],"parallel"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","ParallelTaskType",[]],["Type","ParallelTask",[["Var","a"]]]]]]],["Type","_List",[["Type","TaskCont",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","TaskValue",[["Var","a"]]]]]]],["Type","_Tuple2",[["Type","ParallelTaskType",[]],["Type","ParallelTask",[["Var","a"]]]]]]]]]],["Type","Task",[["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","TaskValue",[["Var","a"]]]]]]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"parallel :: ![(!ParallelTaskType,!ParallelTask a)] [TaskCont [(!Int,!TaskValue a)] (!ParallelTaskType,!ParallelTask a)] -> Task [(!Int,!TaskValue a)] | iTask a","fe_documentation":["FunctionDoc",["Just","Parallel task creation"],["Initial tasks: The initial list of tasks to run in parallel, each task is given\na view on the status of all tasks in the list","Continuations: A set of continuation definitions with which the list of tasks\ncan be extended\n-OnValue:         Inspect the value, add if the predicate matches\n-OnAction:        Enable an action if the predicate matches, add if the actions is chosen\n-OnException:     Provides an exception handler for exceptions of type e\nThe task in the parallel set that raised the exception is replaced\nwith the continuation\n-OnAllExceptions: Provides an exception handler that catches all exceptions\nThe task in the parallel set that raised the exception is replaced\nwith the continuation"],[],["Just","The sum of all results"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",109],["Nothing"],"OnValue"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]]],["Type","TaskCont",[["Var","a"],["Var","b"]]],[]],"fe_representation":"OnValue :: ((TaskValue a) -> Maybe b) -> TaskCont a b"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",139],["Just",608],"appendTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ParallelTaskType",[]],["Type","ParallelTask",[["Var","a"]]],["Type","SharedTaskList",[["Var","a"]]]],["Type","Task",[["Type","TaskId",[]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"appendTask :: !ParallelTaskType !(ParallelTask a) !(SharedTaskList a) -> Task TaskId | iTask a","fe_documentation":["FunctionDoc",["Just","Appends a task to a task list"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",148],["Just",683],"replaceTask"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","TaskId",[]],["Type","ParallelTask",[["Var","a"]]],["Type","SharedTaskList",[["Var","a"]]]],["Type","Task",[["Type","_Unit",[]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"replaceTask :: !TaskId !(ParallelTask a) !(SharedTaskList a) -> Task () | iTask a","fe_documentation":["FunctionDoc",["Just","Replaces a task in a list and resets its execution state.\nAll meta-data is kept"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",7,["Location","iTasks","iTasks.WF.Combinators.SDS",["Just",28],["Just",85],"withTaskId"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Task",[["Var","a"]]]],["Type","Task",[["Type","_Tuple2",[["Var","a"],["Type","TaskId",[]]]]]],[]],"fe_representation":"withTaskId :: (Task a) -> Task (a,TaskId)","fe_documentation":["FunctionDoc",["Just","Expose the taskId during execution"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.SDS",["Just",15],["Just",20],"withShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","b"],["Func",[["Type","Shared",[["Var","b"]]]],["Type","Task",[["Var","a"]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_representation":"withShared :: !b !((Shared b) -> Task a) -> Task a | iTask a & iTask b","fe_documentation":["FunctionDoc",["Just","Provide a local read\/write shared for a task to work on."],["The initial value of the shared variable","The task which uses the shared variable"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",161],["Just",738],"attach"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","InstanceNo",[]],["Type","Bool",[]]],["Type","Task",[["Type","AttachmentStatus",[]]]],[]],"fe_representation":"attach :: !InstanceNo !Bool -> Task AttachmentStatus","fe_documentation":["FunctionDoc",["Just","Attaches a a detached task."],["Identification of the task instance to attach","Steal\/takeover if this is true this attach will takeover the instance when it was already attached somewhere else"],[],["Just","The state of the task to work on"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.SDS",["Just",23],["Just",56],"exposeShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]],["Func",[["Type","String",[]]],["Func",[["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]],["Type","Task",[["Var","a"]]],[]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","p"]]]],"fe_representation":"exposeShared :: !(RWShared p r w) !(String -> (RWShared p r w) -> Task a) -> Task a | iTask a & iTask r & iTask w & iTask p","fe_documentation":["FunctionDoc",["Just","Expose a share to be accessable via an URL."],["The share to be exposed","The task which uses the shared variable"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",15],["Nothing"],"LazyRefresh"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","LazyRefresh",[]],[]],"fe_representation":"LazyRefresh :: LazyRefresh"},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.SDS",["Just",37],["Just",97],"withTemporaryDirectory"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","FilePath",[]]],["Type","Task",[["Var","a"]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"withTemporaryDirectory :: (FilePath -> Task a) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Creates a temporary directory on the server's file system for the duration of a task"],["The task that gets the temporary directory's location as argument"],[],["Just","The result of the task"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",19],["Nothing"],"ApplyLayout"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Layout",[]]],["Type","ApplyLayout",[]],[]],"fe_representation":"ApplyLayout :: Layout -> ApplyLayout"},["Tip"],["Tip"]]]]]]]],["Bin",59,["Location","iTasks","iTasks.WF.Definition",["Just",95],["Nothing"],"Unstable"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ValueStatus",[]],[]],"fe_representation":"Unstable :: ValueStatus"},["Bin",27,["Location","iTasks","iTasks.WF.Definition",["Just",63],["Nothing"],"TaskId"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","InstanceNo",[]],["Type","TaskNo",[]]],["Type","TaskId",[]],[]],"fe_representation":"TaskId :: InstanceNo TaskNo -> TaskId"},["Bin",14,["Location","iTasks","iTasks.WF.Definition",["Just",34],["Nothing"],"ExceptionResult"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskException",[]]],["Type","TaskResult",[["Var","a"]]],[]],"fe_representation":"ExceptionResult :: TaskException -> TaskResult a"},["Bin",7,["Location","iTasks","iTasks.WF.Definition",["Just",28],["Nothing"],"FocusEvent"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]]],["Type","Event",[]],[]],"fe_representation":"FocusEvent :: TaskId -> Event"},["Bin",3,["Location","iTasks","iTasks.WF.Definition",["Just",28],["Nothing"],"ActionEvent"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","String",[]]],["Type","Event",[]],[]],"fe_representation":"ActionEvent :: TaskId String -> Event"},["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",26],["Nothing"],"Task"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Type","Event",[]]],["Func",[["Type","TaskEvalOpts",[]]],["Func",[["Type","TaskTree",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","TaskResult",[["Var","a"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]]],["Type","Task",[["Var","a"]]],[]],"fe_representation":"Task :: (Event -> TaskEvalOpts -> TaskTree -> *IWorld -> *(TaskResult a, *IWorld)) -> Task a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",28],["Nothing"],"EditEvent"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskId",[]],["Type","String",[]],["Type","JSONNode",[]]],["Type","Event",[]],[]],"fe_representation":"EditEvent :: TaskId String JSONNode -> Event"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Definition",["Just",28],["Nothing"],"ResetEvent"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Event",[]],[]],"fe_representation":"ResetEvent :: Event"},["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",28],["Nothing"],"RefreshEvent"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","Event",[]],[]],"fe_representation":"RefreshEvent :: String -> Event"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",34],["Nothing"],"DestroyedResult"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TaskResult",[["Var","a"]]],[]],"fe_representation":"DestroyedResult :: TaskResult a"},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.WF.Definition",["Just",47],["Nothing"],"StableValue"],{"fe_kind":["Macro"],"fe_representation":"StableValue a :== Value a True"},["Bin",3,["Location","iTasks","iTasks.WF.Definition",["Just",43],["Nothing"],"NoValue"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","TaskValue",[["Var","a"]]],[]],"fe_representation":"NoValue :: TaskValue a"},["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",34],["Nothing"],"ValueResult"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","TaskValue",[["Var","a"]]],["Type","TaskEvalInfo",[]],["Type","UIChange",[]],["Type","TaskTree",[]]],["Type","TaskResult",[["Var","a"]]],[]],"fe_representation":"ValueResult :: (TaskValue a) TaskEvalInfo UIChange TaskTree -> TaskResult a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",43],["Nothing"],"Value"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Var","a"],["Type","Stability",[]]],["Type","TaskValue",[["Var","a"]]],[]],"fe_representation":"Value :: a Stability -> TaskValue a"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.WF.Definition",["Just",48],["Nothing"],"UnstableValue"],{"fe_kind":["Macro"],"fe_representation":"UnstableValue a :== Value a False"},["Tip"],["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",56],["Just",20],"exception"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"]],["Type","TaskException",[]],[[["Class","TC"],["Var","e"]],[["Class","toString"],["Var","e"]]]],"fe_representation":"exception :: !e -> TaskException | TC e & toString e","fe_documentation":["FunctionDoc",["Just","Creates an exception"],[],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",12,["Location","iTasks","iTasks.WF.Definition",["Just",87],["Nothing"],"instanceKey"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceProgress",[]]],["Type","InstanceKey",[]],[]],"fe_representation":".instanceKey :: InstanceProgress -> InstanceKey","fe_documentation":["FunctionDoc",["Just","Random token that a client gets to have (temporary) access to the task instance"],[],[],["Nothing"]]},["Bin",6,["Location","iTasks","iTasks.WF.Definition",["Just",80],["Nothing"],"session"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceConstants",[]]],["Type","Bool",[]],[]],"fe_representation":".session :: InstanceConstants -> Bool","fe_documentation":["FunctionDoc",["Just","True for sessions (instances that automatically get garbage collected)"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.WF.Definition",["Just",80],["Nothing"],"issuedAt"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceConstants",[]]],["Type","Timestamp",[]],[]],"fe_representation":".issuedAt :: InstanceConstants -> Timestamp","fe_documentation":["FunctionDoc",["Just","When was the task created"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",80],["Nothing"],"build"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceConstants",[]]],["Type","String",[]],[]],"fe_representation":".build :: InstanceConstants -> String","fe_documentation":["FunctionDoc",["Just","Application build version when the instance was created"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",80],["Nothing"],"listId"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceConstants",[]]],["Type","TaskId",[]],[]],"fe_representation":".listId :: InstanceConstants -> TaskId","fe_documentation":["FunctionDoc",["Just","Reference to parent tasklist"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.WF.Definition",["Just",87],["Nothing"],"attachedTo"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceProgress",[]]],["Type","_List",[["Type","TaskId",[]]]],[]],"fe_representation":".attachedTo :: InstanceProgress -> [TaskId]","fe_documentation":["FunctionDoc",["Just","Chain of tasks through which this instance was attached"],[],[],["Nothing"]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",87],["Nothing"],"firstEvent"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceProgress",[]]],["Type","Maybe",[["Type","Timestamp",[]]]],[]],"fe_representation":".firstEvent :: InstanceProgress -> Maybe Timestamp","fe_documentation":["FunctionDoc",["Just","When was the first work done on this task"],[],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.WF.Definition",["Just",95],["Nothing"],"Exception"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ValueStatus",[]],[]],"fe_representation":"Exception :: ValueStatus"},["Bin",2,["Location","iTasks","iTasks.WF.Definition",["Just",87],["Nothing"],"value"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceProgress",[]]],["Type","ValueStatus",[]],[]],"fe_representation":".value :: InstanceProgress -> ValueStatus","fe_documentation":["FunctionDoc",["Just","Status of the task value"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",87],["Nothing"],"lastEvent"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","InstanceProgress",[]]],["Type","Maybe",[["Type","Timestamp",[]]]],[]],"fe_representation":".lastEvent :: InstanceProgress -> Maybe Timestamp","fe_documentation":["FunctionDoc",["Just","When was the latest event on this task (excluding Refresh events)"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","iTasks","iTasks.WF.Definition",["Just",95],["Nothing"],"Stable"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ValueStatus",[]],[]],"fe_representation":"Stable :: ValueStatus"},["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",95],["Nothing"],"None"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","ValueStatus",[]],[]],"fe_representation":"None :: ValueStatus"},["Tip"],["Tip"]],["Tip"]]]]],["Bin",31,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",52],["Just",63],"tcplisten"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Bool",[]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]],["Type","ConnectionHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Type","Task",[["Type","_List",[["Var","l"]]]]],[[["Class","iTask"],["Var","l"]],[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"tcplisten :: !Int !Bool !(RWShared () r w) (ConnectionHandlers l r w) -> Task [l] | iTask l & iTask r & iTask w","fe_documentation":["FunctionDoc",["Just","Listen for connections from external systems using TCP."],["Port","Remove closed connections. If this is true, closed connections are removed from the task value, if not they are kept in the list","A reference to shared data the task has access to","Initialization function: function that is called when a new connection is established","Communication function: function that is called when data arrives, the connection is closed or the observed share changes."],[],["Nothing"]]},["Bin",20,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",19],["Just",24],"onExit"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ExternalProcessHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Type","ExitCode",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple2",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]]]],[]],[]],[]],[]],"fe_representation":".onExit :: (ExternalProcessHandlers l r w) -> ExitCode -> l -> r -> (MaybeErrorString l, Maybe w)"},["Bin",14,["Location","iTasks","iTasks.WF.Tasks.Core",["Just",100],["Just",55],"interact"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","EditMode",[]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]],["Func",[["Var","r"]],["Type","_Tuple2",[["Var","l"],["Var","v"]]],[]],["Func",[["Var","v"]],["Func",[["Var","l"]],["Func",[["Var","v"]],["Type","_Tuple3",[["Var","l"],["Var","v"],["Type","Maybe",[["Func",[["Var","r"]],["Var","w"],[]]]]]],[]],[]],[]],["Func",[["Var","r"]],["Func",[["Var","l"]],["Func",[["Var","v"]],["Type","_Tuple3",[["Var","l"],["Var","v"],["Type","Maybe",[["Func",[["Var","r"]],["Var","w"],[]]]]]],[]],[]],[]],["Type","Maybe",[["Type","Editor",[["Var","v"]]]]]],["Type","Task",[["Type","_Tuple2",[["Var","l"],["Var","v"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","l"]],[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","v"]]]],"fe_representation":"interact :: !d !EditMode !(RWShared () r w) (r -> (l,v)) (v -> l -> v -> (l,v,Maybe (r -> w))) (r -> l -> v -> (l,v,Maybe (r -> w))) (Maybe (Editor v)) -> Task (l,v) | toPrompt d & iTask l & iTask r & iTask v","fe_documentation":["FunctionDoc",["Just","Core interaction task. All other interaction tasks are derived from this one.\nAn interaction tasks works on a local state and has read-only access to shared data."],["Description: A description of the task to display to the user","Edit mode: The type of interaction: viewing, entering or updating information","ReadOnlyShared: A reference to shared data the task has access to","Initialization function: Computes the initial local state and view","Refresh function: Recomputes the local state and view when either the view is edited or the shared data changes.","Custom editor: Optional custom editor for the interaction"],[],["Just","The local state"]]},["Bin",7,["Location","iTasks","iTasks.WF.Tasks.Core",["Just",55],["Just",29],"accWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"accWorld :: !(*World -> *(!a,!*World)) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Evaluate a \"World\" function that also returns a value once."],["World function: The function to evaluate"],[],["Just","A task that evaluates the function and yield a"]]},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Core",["Just",35],["Just",20],"throw"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","e"]],[["Class","toString"],["Var","e"]]]],"fe_representation":"throw :: !e -> Task a | iTask a & iTask e & toString e","fe_documentation":["FunctionDoc",["Just","Exception throwing. This will throw an exception of arbitrary type e which has to be caught\nby a higher level exception handler combinator."],["Value: The exception value"],[],["Just","The combined task"]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Core",["Just",23],["Just",17],"treturn"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"treturn :: !a -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Lifts a value to the task domain. The task finishes immediately and yields its parameter\nas result of the task."],["Value: The value to be returned"],[],["Just","A task that will return the value defined by the parameter"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Core",["Just",45],["Just",23],"appWorld"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","World",[]]],[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"appWorld :: !(*World -> *World) -> Task ()","fe_documentation":["FunctionDoc",["Just","Evaluate a \"World\" function that does not yield any result once."],["World function: The function to evaluate"],[],["Just","A () task that evaluates the function"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Core",["Just",79],["Just",48],"accWorldOSError"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Var","a"]]],["Uniq",["Type","World",[]]]]],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"accWorldOSError :: !(*World -> (!MaybeOSError a,!*World)) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Evaluate a \"World\" function that also returns a MaybeOSError value.\nIf the MaybeError value is Error, the error is transformed."],["World function: The function to evaluate","Error function: Error transformation function"],[],["Just","A task that evaluates the function"]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Core",["Just",67],["Just",36],"accWorldError"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeError",[["Var","e"],["Var","a"]]],["Uniq",["Type","World",[]]]]],[]],["Func",[["Var","e"]],["Var","err"],[]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]],[["Class","TC"],["Var","err"]],[["Class","toString"],["Var","err"]]]],"fe_representation":"accWorldError :: !(*World -> (!MaybeError e a,!*World)) !(e -> err) -> Task a | iTask a & TC err & toString err","fe_documentation":["FunctionDoc",["Just","Evaluate a \"World\" function that also returns a MaybeError value.\nIf the MaybeError value is Error, the error is transformed."],["World function: The function to evaluate","Error function: Error transformation function"],[],["Just","A  task that evaluates the function"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Core",["Just",81],["Nothing"],"OSException"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","OSError",[]]],["Type","OSException",[]],[]],"fe_representation":"OSException :: OSError -> OSException"},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",11],["Just",16],"onShareChange"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],[]],"fe_representation":".onShareChange :: (ConnectionHandlers l r w) -> l -> r -> (MaybeErrorString l, Maybe w, [String], Bool)"},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",11],["Just",16],"onData"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Type","String",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],[]],[]],"fe_representation":".onData :: (ConnectionHandlers l r w) -> String -> l -> r -> (MaybeErrorString l, Maybe w, [String], Bool)"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",11],["Just",16],"onConnect"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Type","String",[]]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],[]],"fe_representation":".onConnect :: (ConnectionHandlers l r w) -> String -> r -> (MaybeErrorString l, Maybe w, [String], Bool)"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",11],["Just",16],"onDisconnect"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ConnectionHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple2",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]]]],[]],[]],[]],"fe_representation":".onDisconnect :: (ConnectionHandlers l r w) -> l -> r -> (MaybeErrorString l, Maybe w)"},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",19],["Just",24],"onErrData"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ExternalProcessHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Type","String",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],[]],[]],"fe_representation":".onErrData :: (ExternalProcessHandlers l r w) -> String -> l -> r -> (MaybeErrorString l, Maybe w, [String], Bool)"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",18],["Just",23],"ExitCode"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","Int",[]]],["Type","ExitCode",[]],[]],"fe_representation":"ExitCode :: Int -> ExitCode"},["Tip"],["Tip"]],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",19],["Just",24],"onStartup"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ExternalProcessHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],"fe_representation":".onStartup :: (ExternalProcessHandlers l r w) -> r -> (MaybeErrorString l, Maybe w, [String], Bool)"},["Bin",2,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",19],["Just",24],"onShareChange"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ExternalProcessHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],[]],"fe_representation":".onShareChange :: (ExternalProcessHandlers l r w) -> l -> r -> (MaybeErrorString l, Maybe w, [String], Bool)"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",19],["Just",24],"onOutData"],{"fe_kind":["RecordField"],"fe_type":["Func",[["Type","ExternalProcessHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Func",[["Type","String",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],[]],[]],"fe_representation":".onOutData :: (ExternalProcessHandlers l r w) -> String -> l -> r -> (MaybeErrorString l, Maybe w, [String], Bool)"},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",43],["Just",92],"tcpconnect"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","Int",[]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]],["Type","ConnectionHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Type","Task",[["Var","l"]]],[[["Class","iTask"],["Var","l"]],[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"tcpconnect :: !String !Int !(RWShared () r w) (ConnectionHandlers l r w) -> Task l | iTask l & iTask r & iTask w","fe_documentation":["FunctionDoc",["Just","Connect to an external system using TCP. This task's value becomes stable when the connection is closed"],["Hostname","Port","A reference to shared data the task has access to","The event handler functions"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",35],["Just",32],"externalProcess"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","FilePath",[]],["Type","_List",[["Type","String",[]]]],["Type","Maybe",[["Type","FilePath",[]]]],["Type","RWShared",[["Type","_Unit",[]],["Var","r"],["Var","w"]]],["Type","ExternalProcessHandlers",[["Var","l"],["Var","r"],["Var","w"]]]],["Type","Task",[["Var","l"]]],[[["Class","iTask"],["Var","l"]],[["Class","TC"],["Var","r"]],[["Class","TC"],["Var","w"]]]],"fe_representation":"externalProcess :: !FilePath ![String] !(Maybe FilePath) !(RWShared () r w) !(ExternalProcessHandlers l r w) -> Task l | iTask l & TC r & TC w","fe_documentation":["FunctionDoc",["Just","Execute an external process. This task's value becomes stable when the process is terminated."],["Path to the executable","a list of command-line arguments","(optional) startup directory","A reference to shared data the task has access to","The event handler functions"],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]]]],["Bin",10,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",19],["Nothing"],"UpdateUsing"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","v"],[]],["Func",[["Var","a"]],["Func",[["Var","v"]],["Var","b"],[]],[]],["Type","Editor",[["Var","v"]]]],["Type","UpdateOption",[["Var","a"],["Var","b"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"UpdateUsing :: (a -> v) (a -> v -> b) (Editor v) -> UpdateOption a b | iTask v"},["Bin",6,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",16],["Nothing"],"EnterAs"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","v"]],["Var","a"],[]]],["Type","EnterOption",[["Var","a"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"EnterAs :: (v -> a) -> EnterOption a | iTask v"},["Bin",2,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",13],["Nothing"],"ViewUsing"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","v"],[]],["Type","Editor",[["Var","v"]]]],["Type","ViewOption",[["Var","a"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"ViewUsing :: (a -> v) (Editor v) -> ViewOption a | iTask v"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",13],["Nothing"],"ViewAs"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","v"],[]]],["Type","ViewOption",[["Var","a"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"ViewAs :: (a -> v) -> ViewOption a | iTask v"},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",19],["Nothing"],"UpdateAs"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","v"],[]],["Func",[["Var","a"]],["Func",[["Var","v"]],["Var","b"],[]],[]]],["Type","UpdateOption",[["Var","a"],["Var","b"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"UpdateAs :: (a -> v) (a -> v -> b) -> UpdateOption a b | iTask v"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",16],["Nothing"],"EnterUsing"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","v"]],["Var","a"],[]],["Type","Editor",[["Var","v"]]]],["Type","EnterOption",[["Var","a"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"EnterUsing :: (v -> a) (Editor v) -> EnterOption a | iTask v"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",19],["Nothing"],"UpdateSharedAs"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","v"],[]],["Func",[["Var","a"]],["Func",[["Var","v"]],["Var","b"],[]],[]],["Func",[["Var","v"]],["Func",[["Var","v"]],["Var","v"],[]],[]]],["Type","UpdateOption",[["Var","a"],["Var","b"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"UpdateSharedAs :: (a -> v) (a -> v -> b) (v -> v -> v) -> UpdateOption a b | iTask v"},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",29],["Nothing"],"SelectInDropdown"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","c"]],["Type","_List",[["Type","ChoiceText",[]]]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],["Type","SelectOption",[["Var","c"],["Var","s"]]],[]],"fe_representation":"SelectInDropdown :: (c -> [ChoiceText]) (c -> [Int] -> [s]) -> SelectOption c s"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",29],["Nothing"],"SelectInCheckGroup"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","c"]],["Type","_List",[["Type","ChoiceText",[]]]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],["Type","SelectOption",[["Var","c"],["Var","s"]]],[]],"fe_representation":"SelectInCheckGroup :: (c -> [ChoiceText]) (c -> [Int] -> [s]) -> SelectOption c s"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",29],["Nothing"],"SelectInGrid"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","c"]],["Type","ChoiceGrid",[]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],["Type","SelectOption",[["Var","c"],["Var","s"]]],[]],"fe_representation":"SelectInGrid :: (c -> ChoiceGrid) (c -> [Int] -> [s]) -> SelectOption c s"},["Tip"],["Tip"]]]]]]],["Bin",64,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",154],["Just",231],"editSharedChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","_List",[["Var","a"]]],["Type","Shared",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSharedChoice :: !d ![ChoiceOption a] ![a] (Shared (Maybe a)) -> Task a | toPrompt d & iTask a"},["Bin",39,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",134],["Just",181],"updateChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","_List",[["Var","a"]]],["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"updateChoice :: !d ![ChoiceOption a] ![a] a -> Task a | toPrompt d & iTask a"},["Bin",23,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",124],["Just",157],"editChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","_List",[["Var","a"]]],["Type","Maybe",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editChoice :: !d ![ChoiceOption a] ![a] (Maybe a) -> Task a | toPrompt d & iTask a","fe_documentation":["FunctionDoc",["Just","More specific selection from lists"],[],[],["Nothing"]]},["Bin",15,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",73],["Just",39],"viewInformation"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ViewOption",[["Var","m"]]]]],["Var","m"]],["Type","Task",[["Var","m"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","m"]]]],"fe_representation":"viewInformation :: !d ![ViewOption m] !m -> Task m | toPrompt d & iTask m","fe_documentation":["FunctionDoc",["Just","Show information to the user."],["Description:\t\tA description of the task to display to the user","Views:\t\t\t\tInteraction views; only get parts of Views are used, Putbacks are ignored; if no get is defined the id get is used","Data model:\t\tThe data shown to the user"],[],["Just","Value shown to the user, the value is not modified"]]},["Bin",7,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",36],["Nothing"],"ChooseFromGrid"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","o"]],["Var","v"],[]]],["Type","ChoiceOption",[["Var","o"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"ChooseFromGrid :: (o -> v) -> ChoiceOption o | iTask v"},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",36],["Nothing"],"ChooseFromCheckGroup"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","o"]],["Var","v"],[]]],["Type","ChoiceOption",[["Var","o"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"ChooseFromCheckGroup :: (o -> v) -> ChoiceOption o | iTask v"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",29],["Nothing"],"SelectInTree"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","c"]],["Type","_List",[["Type","ChoiceNode",[]]]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],["Type","SelectOption",[["Var","c"],["Var","s"]]],[]],"fe_representation":"SelectInTree :: (c -> [ChoiceNode]) (c -> [Int] -> [s]) -> SelectOption c s"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",36],["Nothing"],"ChooseFromDropdown"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","o"]],["Var","v"],[]]],["Type","ChoiceOption",[["Var","o"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"ChooseFromDropdown :: (o -> v) -> ChoiceOption o | iTask v"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",51],["Just",23],"enterInformation"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","EnterOption",[["Var","m"]]]]]],["Type","Task",[["Var","m"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","m"]]]],"fe_representation":"enterInformation :: !d ![EnterOption m] -> Task m | toPrompt d & iTask m","fe_documentation":["FunctionDoc",["Just","Ask the user to enter information."],["Description:\t\tA description of the task to display to the user","Views:\t\t\t\tViews"],[],["Just","Value entered by the user"]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",36],["Nothing"],"ChooseFromList"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Func",[["Var","o"]],["Var","v"],[]]],["Type","ChoiceOption",[["Var","o"]]],[[["Class","iTask"],["Var","v"]]]],"fe_representation":"ChooseFromList :: (o -> v) -> ChoiceOption o | iTask v"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",62],["Just",30],"updateInformation"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","UpdateOption",[["Var","m"],["Var","m"]]]]],["Var","m"]],["Type","Task",[["Var","m"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","m"]]]],"fe_representation":"updateInformation :: !d ![UpdateOption m m] m -> Task m | toPrompt d & iTask m","fe_documentation":["FunctionDoc",["Just","Ask the user to update predefined information."],["Description:\t\tA description of the task to display to the user","Views:\t\t\t\tInteraction views; if no view is defined a default view with the id lens is used","Data model:\t\tThe data updated by the user"],[],["Just","Value updated by the user"]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",110],["Just",99],"editSelection"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","Bool",[]],["Type","SelectOption",[["Var","c"],["Var","a"]]],["Var","c"],["Type","_List",[["Type","Int",[]]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSelection :: !d !Bool !(SelectOption c a) c [Int] -> Task [a] | toPrompt d & iTask a","fe_documentation":["FunctionDoc",["Just","General selection with explicit identification in arbitrary containers"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",96],["Just",72],"viewSharedInformation"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ViewOption",[["Var","r"]]]]],["Type","ReadWriteShared",[["Var","r"],["Var","w"]]]],["Type","Task",[["Var","r"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","r"]]]],"fe_representation":"viewSharedInformation :: !d ![ViewOption r] !(ReadWriteShared r w) -> Task r | toPrompt d & iTask r","fe_documentation":["FunctionDoc",["Just","Show a shared value."],["Description:\t\tA description of the task to display to the user","Options:\t\t\tViews options","Shared:\t\t\tReference to the shared state to monitor"],[],["Just","Last value of the monitored state"]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",85],["Just",46],"updateSharedInformation"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","UpdateOption",[["Var","r"],["Var","w"]]]]],["Type","ReadWriteShared",[["Var","r"],["Var","w"]]]],["Type","Task",[["Var","r"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"updateSharedInformation :: !d ![UpdateOption r w] !(ReadWriteShared r w) -> Task r | toPrompt d & iTask r & iTask w","fe_documentation":["FunctionDoc",["Just","Ask the user to update predefined local and shared information."],["Description:\t\tA description of the task to display to the user","Views:\t\t\t\tInteraction views; if no view is defined & w = r a default view with the id lens is used, if r <> w the value of the shared state (r) is shown to the user; the default for the local data is always the id lens","Shared:\t\t\tReference to the shared state to update","Local:\t\t\t\tThe local data updated by the user"],[],["Just","Current value of the shared thats being modified and local modified copy"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",103],["Just",85],"updateInformationWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","UpdateOption",[["Type","_Tuple2",[["Var","r"],["Var","m"]]],["Var","m"]]]]],["Type","ReadWriteShared",[["Var","r"],["Var","w"]]],["Var","m"]],["Type","Task",[["Var","m"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","m"]]]],"fe_representation":"updateInformationWithShared :: !d ![UpdateOption (r,m) m] !(ReadWriteShared r w) m -> Task m | toPrompt d & iTask r & iTask m","fe_documentation":["FunctionDoc",["Just","Update a local value, making use of shared information."],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",116],["Just",125],"editSharedSelection"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","Bool",[]],["Type","SelectOption",[["Var","c"],["Var","a"]]],["Var","c"],["Type","Shared",[["Type","_List",[["Type","Int",[]]]]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","c"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSharedSelection :: !d !Bool !(SelectOption c a) c (Shared [Int]) -> Task [a] | toPrompt d & iTask c & iTask a"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",113],["Just",112],"editSelectionWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","Bool",[]],["Type","SelectOption",[["Var","c"],["Var","a"]]],["Type","ReadWriteShared",[["Var","c"],["Var","w"]]],["Func",[["Var","c"]],["Type","_List",[["Type","Int",[]]]],[]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","c"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSelectionWithShared :: !d !Bool !(SelectOption c a) (ReadWriteShared c w) (c -> [Int]) -> Task [a] | toPrompt d & iTask c & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",119],["Just",138],"editSharedSelectionWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","Bool",[]],["Type","SelectOption",[["Var","c"],["Var","a"]]],["Type","ReadWriteShared",[["Var","c"],["Var","w"]]],["Type","Shared",[["Type","_List",[["Type","Int",[]]]]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","c"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSharedSelectionWithShared :: !d !Bool !(SelectOption c a) (ReadWriteShared c w) (Shared [Int]) -> Task [a] | toPrompt d & iTask c & iTask a"},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",129],["Just",169],"enterChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"enterChoice :: !d ![ChoiceOption a] ![a] -> Task a | toPrompt d & iTask a"},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",126],["Just",163],"editMultipleChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editMultipleChoice :: !d ![ChoiceOption a] ![a] [a] -> Task [a] | toPrompt d & iTask a"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",125],["Just",160],"editChoiceAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","_List",[["Var","o"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","Maybe",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editChoiceAs :: !d ![ChoiceOption o] ![o] !(o -> a) (Maybe a) -> Task a | toPrompt d & iTask o & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",127],["Just",166],"editMultipleChoiceAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","_List",[["Var","o"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editMultipleChoiceAs :: !d ![ChoiceOption o] ![o] !(o -> a) [a] -> Task [a] | toPrompt d & iTask o & iTask a"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",131],["Just",175],"enterMultipleChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"enterMultipleChoice :: !d ![ChoiceOption a] ![a] -> Task [a] | toPrompt d & iTask a"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",130],["Just",172],"enterChoiceAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","_List",[["Var","o"]]],["Func",[["Var","o"]],["Var","a"],[]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"enterChoiceAs :: !d ![ChoiceOption o] ![o] !(o -> a) -> Task a | toPrompt d & iTask o & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",132],["Just",178],"enterMultipleChoiceAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","_List",[["Var","o"]]],["Func",[["Var","o"]],["Var","a"],[]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"enterMultipleChoiceAs :: !d ![ChoiceOption o] ![o] !(o -> a) -> Task [a] | toPrompt d & iTask o & iTask a"},["Tip"],["Tip"]]]]],["Bin",15,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",144],["Just",207],"enterChoiceWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","a"]]],["Var","w"]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"enterChoiceWithShared :: !d ![ChoiceOption a] !(ReadWriteShared [a] w) -> Task a | toPrompt d & iTask a & iTask w"},["Bin",7,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",139],["Just",193],"editChoiceWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","a"]]],["Var","w"]]],["Type","Maybe",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"editChoiceWithShared :: !d ![ChoiceOption a] !(ReadWriteShared [a] w) (Maybe a) -> Task a | toPrompt d & iTask a & iTask w"},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",136],["Just",187],"updateMultipleChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"updateMultipleChoice :: !d ![ChoiceOption a] ![a] [a] -> Task [a] | toPrompt d & iTask a"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",135],["Just",184],"updateChoiceAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","_List",[["Var","o"]]],["Func",[["Var","o"]],["Var","a"],[]],["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"updateChoiceAs :: !d ![ChoiceOption o] ![o] !(o -> a) a -> Task a | toPrompt d & iTask o & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",137],["Just",190],"updateMultipleChoiceAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","_List",[["Var","o"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"updateMultipleChoiceAs :: !d ![ChoiceOption o] ![o] !(o -> a) [a] -> Task [a] | toPrompt d & iTask o & iTask a"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",141],["Just",200],"editMultipleChoiceWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","a"]]],["Var","w"]]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"editMultipleChoiceWithShared :: !d ![ChoiceOption a] !(ReadWriteShared [a] w) [a] -> Task [a] | toPrompt d & iTask a & iTask w"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",140],["Just",196],"editChoiceWithSharedAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","o"]]],["Var","w"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","Maybe",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editChoiceWithSharedAs :: !d ![ChoiceOption o] !(ReadWriteShared [o] w) (o -> a) (Maybe a) -> Task a | toPrompt d & iTask o & iTask w & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",142],["Just",203],"editMultipleChoiceWithSharedAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","o"]]],["Var","w"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editMultipleChoiceWithSharedAs :: !d ![ChoiceOption o] !(ReadWriteShared [o] w) (o -> a) [a] -> Task [a] | toPrompt d & iTask o & iTask w & iTask a"},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",149],["Just",219],"updateChoiceWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","a"]]],["Var","w"]]],["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"updateChoiceWithShared :: !d ![ChoiceOption a] !(ReadWriteShared [a] w) a -> Task a | toPrompt d & iTask a & iTask w"},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",146],["Just",213],"enterMultipleChoiceWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","a"]]],["Var","w"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"enterMultipleChoiceWithShared :: !d ![ChoiceOption a] !(ReadWriteShared [a] w) -> Task [a] | toPrompt d & iTask a & iTask w"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",145],["Just",210],"enterChoiceWithSharedAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","o"]]],["Var","w"]]],["Func",[["Var","o"]],["Var","a"],[]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"enterChoiceWithSharedAs :: !d ![ChoiceOption o] !(ReadWriteShared [o] w) (o -> a) -> Task a | toPrompt d & iTask o & iTask w & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",147],["Just",216],"enterMultipleChoiceWithSharedAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","o"]]],["Var","w"]]],["Func",[["Var","o"]],["Var","a"],[]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"enterMultipleChoiceWithSharedAs :: !d ![ChoiceOption o] !(ReadWriteShared [o] w) (o -> a) -> Task [a] | toPrompt d & iTask o & iTask w & iTask a"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",151],["Just",225],"updateMultipleChoiceWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","a"]]],["Var","w"]]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"updateMultipleChoiceWithShared :: !d ![ChoiceOption a] !(ReadWriteShared [a] w) [a] -> Task [a] | toPrompt d & iTask a & iTask w"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",150],["Just",222],"updateChoiceWithSharedAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","o"]]],["Var","w"]]],["Func",[["Var","o"]],["Var","a"],[]],["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"updateChoiceWithSharedAs :: !d ![ChoiceOption o] !(ReadWriteShared [o] w) (o -> a) a -> Task a | toPrompt d & iTask o & iTask w & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",152],["Just",228],"updateMultipleChoiceWithSharedAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","o"]]],["Var","w"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","_List",[["Var","a"]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"updateMultipleChoiceWithSharedAs :: !d ![ChoiceOption o] !(ReadWriteShared [o] w) (o -> a) [a] -> Task [a] | toPrompt d & iTask o & iTask w & iTask a"},["Tip"],["Tip"]]]]]],["Bin",24,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",173],["Just",302],"wait"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Func",[["Var","r"]],["Type","Bool",[]],[]],["Type","ReadWriteShared",[["Var","r"],["Var","w"]]]],["Type","Task",[["Var","r"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","r"]]]],"fe_representation":"wait :: !d (r -> Bool) !(ReadWriteShared r w) -> Task r | toPrompt d & iTask r","fe_documentation":["FunctionDoc",["Just","Wait for a share to match a certain predicate"],["Description:\t\tA description of the task to display to the user","Predicate:\t\t\tA predicate to test when to continue. The task completes as soon as the predicate is true","Shared:\t\t\tReference to the shared state to wait for"],[],["Just","The value of the shared when the predicate becomes true"]]},["Bin",7,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",159],["Just",245],"editSharedChoiceWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","a"]]],["Var","w"]]],["Type","Shared",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"editSharedChoiceWithShared :: !d ![ChoiceOption a] !(ReadWriteShared [a] w) (Shared (Maybe a)) -> Task a | toPrompt d & iTask a & iTask w"},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",156],["Just",238],"editSharedMultipleChoice"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","_List",[["Var","a"]]],["Type","Shared",[["Type","_List",[["Var","a"]]]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSharedMultipleChoice :: !d ![ChoiceOption a] ![a] (Shared [a]) -> Task [a] | toPrompt d & iTask a"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",155],["Just",234],"editSharedChoiceAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","_List",[["Var","o"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","Shared",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSharedChoiceAs :: !d [ChoiceOption o] ![o] !(o -> a) (Shared (Maybe a)) -> Task a | toPrompt d & iTask o & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",157],["Just",241],"editSharedMultipleChoiceAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","_List",[["Var","o"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","Shared",[["Type","_List",[["Var","a"]]]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSharedMultipleChoiceAs :: !d [ChoiceOption o] ![o] !(o -> a) (Shared [a]) -> Task [a] | toPrompt d & iTask o & iTask a"},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",161],["Just",252],"editSharedMultipleChoiceWithShared"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","a"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","a"]]],["Var","w"]]],["Type","Shared",[["Type","_List",[["Var","a"]]]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"editSharedMultipleChoiceWithShared :: !d ![ChoiceOption a] !(ReadWriteShared [a] w) (Shared [a]) -> Task [a] | toPrompt d & iTask a & iTask w"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",160],["Just",248],"editSharedChoiceWithSharedAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","o"]]],["Var","w"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","Shared",[["Type","Maybe",[["Var","a"]]]]]],["Type","Task",[["Var","a"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSharedChoiceWithSharedAs :: !d ![ChoiceOption o] !(ReadWriteShared [o] w) (o -> a) (Shared (Maybe a)) -> Task a | toPrompt d & iTask o & iTask w & iTask a"},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",162],["Just",255],"editSharedMultipleChoiceWithSharedAs"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","o"]]]]],["Type","ReadWriteShared",[["Type","_List",[["Var","o"]]],["Var","w"]]],["Func",[["Var","o"]],["Var","a"],[]],["Type","Shared",[["Type","_List",[["Var","a"]]]]]],["Type","Task",[["Type","_List",[["Var","a"]]]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","o"]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Var","a"]]]],"fe_representation":"editSharedMultipleChoiceWithSharedAs :: !d ![ChoiceOption o] !(ReadWriteShared [o] w) (o -> a) (Shared [a]) -> Task [a] | toPrompt d & iTask o & iTask w & iTask a"},["Tip"],["Tip"]]]],["Bin",16,["Location","iTasks","iTasks.WF.Tasks.SDS",["Just",69],["Just",51],"watch"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ReadWriteShared",[["Var","r"],["Var","w"]]]],["Type","Task",[["Var","r"]]],[[["Class","iTask"],["Var","r"]]]],"fe_representation":"watch :: !(ReadWriteShared r w) -> Task r | iTask r","fe_documentation":["FunctionDoc",["Just","Reads shared data continously"],["Shared: A shared reference"],[],["Just","The value read"]]},["Bin",9,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",200],["Just",349],"crud"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Func",[["Cons","f",[["Var","r"]]]],["Type","_List",[["Var","r"]]],[]],["Func",[["Var","r"]],["Func",[["Cons","f",[["Var","r"]]]],["Cons","f`",[["Var","w"]]],[]],[]],["Func",[["Var","r"]],["Func",[["Cons","f",[["Var","r"]]]],["Cons","f`",[["Var","w"]]],[]],[]],["Type","RWShared",[["Type","_Unit",[]],["Cons","f",[["Var","r"]]],["Cons","f`",[["Var","w"]]]]]],["Type","Task",[["Var","r"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Cons","f",[["Var","r"]]]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Cons","f`",[["Var","w"]]]]]],"fe_representation":"crud :: !d !((f r) -> [r]) !(r -> (f r) -> f` w) !(r -> (f r) -> f` w) (RWShared () (f r) (f` w)) -> Task r | toPrompt d & iTask r & iTask (f r) & iTask w & iTask (f` w)","fe_documentation":["FunctionDoc",["Just","Basic Create, Read, Update, Delete (CRUD) editor for a shared collection"],[],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",190],["Just",312],"viewTitle"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"viewTitle :: !a -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","View data as a title"],[],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",185],["Just",307],"chooseAction"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","_Tuple2",[["Type","Action",[]],["Var","a"]]]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"chooseAction :: ![(!Action,a)] -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Ask the user to choose an action."],["Action list:\tA list of actions the user can choose from. Each actions yields the given result if it's chosen."],[],["Just","Value associated with chosen action"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",195],["Just",318],"viewSharedTitle"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ReadWriteShared",[["Var","r"],["Var","w"]]]],["Type","Task",[["Var","r"]]],[[["Class","iTask"],["Var","r"]]]],"fe_representation":"viewSharedTitle :: !(ReadWriteShared r w) -> Task r | iTask r","fe_documentation":["FunctionDoc",["Just","View shared data as a title"],[],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",5,["Location","iTasks","iTasks.WF.Tasks.SDS",["Just",16],["Nothing"],"SharedException"],{"fe_kind":["Constructor"],"fe_type":["Func",[["Type","String",[]]],["Type","SharedException",[]],[]],"fe_representation":"SharedException :: String -> SharedException"},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",204],["Just",321],"crudWith"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"],["Type","_List",[["Type","ChoiceOption",[["Var","r"]]]]],["Type","_List",[["Type","EnterOption",[["Var","r"]]]]],["Type","_List",[["Type","ViewOption",[["Var","r"]]]]],["Type","_List",[["Type","UpdateOption",[["Var","r"],["Var","r"]]]]],["Func",[["Cons","f",[["Var","r"]]]],["Type","_List",[["Var","r"]]],[]],["Func",[["Var","r"]],["Func",[["Cons","f",[["Var","r"]]]],["Cons","f`",[["Var","w"]]],[]],[]],["Func",[["Var","r"]],["Func",[["Cons","f",[["Var","r"]]]],["Cons","f`",[["Var","w"]]],[]],[]],["Type","RWShared",[["Type","_Unit",[]],["Cons","f",[["Var","r"]]],["Cons","f`",[["Var","w"]]]]]],["Type","Task",[["Var","r"]]],[[["Class","toPrompt"],["Var","d"]],[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Cons","f",[["Var","r"]]]],[["Class","iTask"],["Var","w"]],[["Class","iTask"],["Cons","f`",[["Var","w"]]]]]],"fe_representation":"crudWith :: !d ![ChoiceOption r] [EnterOption r] [ViewOption r] [UpdateOption r r] !((f r) -> [r]) !(r -> (f r) -> f` w) !(r -> (f r) -> f` w) (RWShared () (f r) (f` w)) -> Task r | toPrompt d & iTask r & iTask (f r) & iTask w & iTask (f` w)"},["Tip"],["Tip"]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.SDS",["Just",44],["Just",28],"set"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","ReadWriteShared",[["Var","r"],["Var","a"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"set :: !a !(ReadWriteShared r a) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Writes shared data."],["Value: A value to write","Shared: A shared reference"],[],["Just","The value written"]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.SDS",["Just",31],["Just",19],"get"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","ReadWriteShared",[["Var","a"],["Var","w"]]]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"get :: !(ReadWriteShared a w) -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Reads shared data once."],["Shared: A shared reference"],[],["Just","The value read"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.SDS",["Just",57],["Just",37],"upd"],{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","r"]],["Var","w"],[]],["Type","ReadWriteShared",[["Var","r"],["Var","w"]]]],["Type","Task",[["Var","w"]]],[[["Class","iTask"],["Var","r"]],[["Class","iTask"],["Var","w"]]]],"fe_representation":"upd :: !(r -> w) !(ReadWriteShared r w) -> Task w | iTask r & iTask w","fe_documentation":["FunctionDoc",["Just","Updates shared data in one atomic operation."],["Shared: A shared reference","Update function: A function modifying the shared value"],[],["Just","The value written"]]},["Tip"],["Tip"]]]]],["Bin",6,["Builtin","True"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Bool",[]],[]],"fe_representation":"True :: Bool"},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.System",["Just",17],["Just",17],"shutDown"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Type","Task",[["Type","_Unit",[]]]],[]],"fe_representation":"shutDown :: Int -> Task ()","fe_documentation":["FunctionDoc",["Just","Terminates a running task server"],["The exit code of the server process"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.System",["Just",10],["Just",10],"traceValue"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Task",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"traceValue :: a -> Task a | iTask a","fe_documentation":["FunctionDoc",["Just","Write a value to the server console output for tracing"],[],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Builtin","False"],{"fe_kind":["Constructor"],"fe_type":["Func",[],["Type","Bool",[]],[]],"fe_representation":"False :: Bool"},["Tip"],["Tip"]]],["Bin",2,["Builtin","dynamic"],{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Dynamic",[]],[]]},["Tip"],["Bin",1,["Builtin","if"],{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Var","a"],["Var","a"]],["Var","a"],[]]},["Tip"],["Tip"]]]]]]]]]]]]]],"classmap":["Bin",157,["Location","Platform","Graphics.Scalable",["Just",97],["Nothing"],"toSVGColor"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toSVGColor",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","SVGColor",[]],[]],"fe_representation":"toSVGColor :: !a -> SVGColor"}]],"ce_instances":[{"ie_types":[[["Type","RGB",[]],"RGB"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",98],["Just",443],""]]},{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",98],["Just",442],""]]}]},["Bin",41,["Location","Platform","Data.Functor",["Just",5],["Nothing"],"Functor"],{"ce_vars":["f"],"ce_context":[],"ce_members":[["fmap",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Cons","f",[["Var","a"]]]],["Cons","f",[["Var","b"]]],[]],"fe_representation":"fmap :: (a -> b) (f a) -> f b"}]],"ce_instances":[{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",13],["Just",14],""]]},{"ie_types":[[["Type","PAlt",[["Var","f"]]],"(PAlt f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",47],["Just",140],""]]},{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",45],["Just",137],""]]},{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",23],["Just",96],""]]},{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","Platform","System.IO",["Just",31],["Just",27],""]]},{"ie_types":[[["Type","_Tuple2",[["Var","a"]]],"(,) a"]],"ie_locations":[["Location","Platform","Data.Functor",["Just",9],["Just",10],""]]},{"ie_types":[[["Arrow",["Just",["Var","r"]]],"((->) r)"]],"ie_locations":[["Location","Platform","Data.Functor",["Just",8],["Just",7],""]]},{"ie_types":[[["Type","Map",[["Var","k"]]],"(Map k)"]],"ie_locations":[["Location","Platform","Data.Map",["Just",226],["Just",1943],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Data.Maybe",["Just",20],["Just",21],""]]},{"ie_types":[[["Type","Either",[["Var","a"]]],"(Either a)"]],"ie_locations":[["Location","Platform","Data.Either",["Just",14],["Just",7],""]]},{"ie_types":[[["Type","MaybeError",[["Var","a"]]],"(MaybeError a)"]],"ie_locations":[["Location","Platform","Data.Error",["Just",12],["Just",8],""]]},{"ie_types":[[["Type","RTree",[]],"RTree"]],"ie_locations":[["Location","Platform","Data.Tree",["Just",23],["Just",21],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Data.List",["Just",101],["Just",104],""]]},{"ie_types":[[["Type","IntMap",[]],"IntMap"]],"ie_locations":[["Location","Platform","Data.IntMap.Strict",["Just",123],["Just",726],""]]},{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Data.Functor.Identity",["Just",11],["Just",12],""]]},{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",23],["Just",28],""]]},{"ie_types":[[["Type","Const",[["Var","m"]]],"(Const m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",22],["Just",12],""]]},{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",181],["Just",108],""]]},{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"]]],"(RWST r w s m)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",16],["Just",14],""]]},{"ie_types":[[["Type","ReaderT",[["Var","r"],["Var","m"]]],"(ReaderT r m)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",25],["Just",13],""]]},{"ie_types":[[["Type","StateT",[["Var","s"],["Var","m"]]],"(StateT s m)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",29],["Just",12],""]]},{"ie_types":[[["Type","WriterT",[["Var","w"],["Var","m"]]],"(WriterT w m)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",14],["Just",15],""]]},{"ie_types":[[["Type","JSIO",[]],"JSIO"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",22],["Just",31],""]]},{"ie_types":[[["Type","TaskValue",[]],"TaskValue"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",52],["Just",23],""]]},{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",17],["Just",11],""]]}]},["Bin",23,["Location","Platform","Data.Bifunctor",["Just",5],["Nothing"],"Bifunctor"],{"ce_vars":["p"],"ce_context":[],"ce_members":[["bifmap",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Func",[["Var","c"]],["Var","d"],[]],["Cons","p",[["Var","a"],["Var","c"]]]],["Cons","p",[["Var","b"],["Var","d"]]],[]],"fe_representation":"bifmap :: (a -> b) (c -> d) (p a c) -> p b d"}],["first",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Cons","p",[["Var","a"],["Var","c"]]]],["Cons","p",[["Var","b"],["Var","c"]]],[]],"fe_representation":"first :: (a -> b) (p a c) -> p b c"}],["second",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Var","c"],[]],["Cons","p",[["Var","a"],["Var","b"]]]],["Cons","p",[["Var","a"],["Var","c"]]],[]],"fe_representation":"second :: (b -> c) (p a b) -> p a c"}]],"ce_instances":[{"ie_types":[[["Type","Either",[]],"Either"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",18],["Just",26],""]]},{"ie_types":[[["Type","_Tuple5",[["Var","x"],["Var","y"],["Var","z"]]],"(,,,,) x y z"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",16],["Just",21],""]]},{"ie_types":[[["Type","_Tuple4",[["Var","x"],["Var","y"]]],"(,,,) x y"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",14],["Just",16],""]]},{"ie_types":[[["Type","_Tuple3",[["Var","x"]]],"(,,) x"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",12],["Just",11],""]]},{"ie_types":[[["Type","_Tuple2",[]],"(,)"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",10],["Just",6],""]]}]},["Bin",16,["Location","Platform","Control.Arrow",["Just",128],["Nothing"],"ArrowChoice"],{"ce_vars":["a"],"ce_context":[[["Class","Arrow"],["Var","a"]]],"ce_members":[["left",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]]],["Cons","a",[["Type","Either",[["Var","b"],["Var","d"]]],["Type","Either",[["Var","c"],["Var","d"]]]]],[]],"fe_representation":"left :: (a b c) -> a (Either b d) (Either c d)"}],["right",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]]],["Cons","a",[["Type","Either",[["Var","d"],["Var","b"]]],["Type","Either",[["Var","d"],["Var","c"]]]]],[]],"fe_representation":"right :: (a b c) -> a (Either d b) (Either d c)"}],["<+++>",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]],["Cons","a",[["Var","b`"],["Var","c`"]]]],["Cons","a",[["Type","Either",[["Var","b"],["Var","b`"]]],["Type","Either",[["Var","c"],["Var","c`"]]]]],[]],"fe_priority":["RightAssoc",2],"fe_representation":"(<+++>) infixr 2 :: (a b c) (a b` c`) -> a (Either b b`) (Either c c`)"}],["|||",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","d"]]],["Cons","a",[["Var","c"],["Var","d"]]]],["Cons","a",[["Type","Either",[["Var","b"],["Var","c"]]],["Var","d"]]],[]],"fe_priority":["RightAssoc",2],"fe_representation":"(|||) infixr 2 :: (a b d) (a c d) -> a (Either b c) d"}]],"ce_instances":[{"ie_types":[[["Type","Kleisli",[["Var","m"]]],"(Kleisli m)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",156],["Just",96],""]]},{"ie_types":[[["Arrow",["Nothing"]],"(->)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",154],["Just",90],""]]}]},["Bin",9,["Location","Platform","Control.Applicative",["Just",37],["Nothing"],"Alternative"],{"ce_vars":["f"],"ce_context":[[["Class","Applicative"],["Var","f"]]],"ce_members":[["empty",{"fe_kind":["Function"],"fe_type":["Func",[],["Cons","f",[["Var","a"]]],[]],"fe_representation":"empty :: f a"}],["<|>",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]],["Cons","f",[["Var","a"]]]],["Cons","f",[["Var","a"]]],[]],"fe_priority":["LeftAssoc",3],"fe_representation":"(<|>) infixl 3 :: (f a) (f a) -> f a"}]],"ce_instances":[{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",15],["Just",21],""]]},{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",55],["Just",170],""]]},{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",27],["Just",103],""]]},{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",28],["Just",38],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",20],["Just",60],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",19],["Just",55],""]]},{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",187],["Just",119],""]]}]},["Bin",5,["Location","Generics","GenParse",["Just",5],["Nothing"],"ParseInput"],{"ce_vars":["s"],"ce_context":[],"ce_members":[["parseInput",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Type","_Tuple2",[["Type","Maybe",[["Type","Char",[]]]],["Var","s"]]],[]],"fe_representation":"parseInput :: s -> (Maybe Char,s)"}]],"ce_instances":[{"ie_types":[[["Type","File",[]],"File"]],"ie_locations":[["Location","Generics","GenParse",["Just",12],["Just",22],""]]},{"ie_types":[[["Type","StringInput",[]],"StringInput"]],"ie_locations":[["Location","Generics","GenParse",["Just",11],["Just",13],""]]}]},["Bin",1,["Location","Generics","GenMonad",["Just",5],["Nothing"],"Monad"],{"ce_vars":["m"],"ce_context":[],"ce_members":[["ret",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Cons","m",[["Var","a"]]],[]],"fe_representation":"ret :: .a -> m:(m .a), [m<=a]"}],[">>=",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]],["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]]],["Cons","m",[["Var","b"]]],[]],"fe_priority":["LeftAssoc",5],"fe_representation":"(>>=) infixl 5 :: u:(m .a) v:(.a -> u:(m .b)) -> u:(m .b), [u<=v]"}]],"ce_instances":[{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",16],["Just",25],""]]},{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",57],["Just",174],""]]},{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",35],["Just",107],""]]},{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","Platform","System.IO",["Just",32],["Just",30],""]]},{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","Platform","Data.Either",["Just",18],["Just",16],""]]},{"ie_types":[[["Type","MaybeError",[["Var","a"]]],"(MaybeError a)"]],"ie_locations":[["Location","Platform","Data.Error",["Just",14],["Nothing"],""]]},{"ie_types":[[["Type","RTree",[]],"RTree"]],"ie_locations":[["Location","Platform","Data.Tree",["Just",29],["Just",32],""]]},{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Data.Functor.Identity",["Just",13],["Just",19],""]]},{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",26],["Just",35],""]]},{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",185],["Just",115],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",28],""],["Location","Platform","Control.Monad",["Just",14],["Just",17],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",33],""],["Location","Platform","Control.Monad",["Just",12],["Just",14],""]]},{"ie_types":[[["Arrow",["Just",["Var","r"]]],"((->) r)"]],"ie_locations":[["Location","Platform","Control.Monad",["Just",10],["Just",11],""]]},{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"]]],"(RWST r w s m)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",18],["Just",21],""]]},{"ie_types":[[["Type","ReaderT",[["Var","r"],["Var","m"]]],"(ReaderT r m)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",27],["Just",20],""]]},{"ie_types":[[["Type","StateT",[["Var","s"],["Var","m"]]],"(StateT s m)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",31],["Just",19],""]]},{"ie_types":[[["Type","WriterT",[["Var","w"],["Var","m"]]],"(WriterT w m)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",16],["Just",22],""]]},{"ie_types":[[["Type","StMonad",[["Var","s"]]],"(StMonad .s)"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",52],""]]},{"ie_types":[[["Type","JSIO",[]],"JSIO"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",23],["Just",34],""]]}]},["Tip"],["Tip"]],["Bin",3,["Location","Generics","_Array",["Just",20],["Nothing"],"UnsafeArray"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["unsafeCreate",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Uniq",["Cons","a",[["Var","e"]]]],[]],"fe_representation":"unsafeCreate :: !Int -> *(a .e)"}],["unsafeUselect",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","e"]]],["Type","Int",[]]],["Uniq",["Type","_Tuple2",[["Var","e"],["Cons","a",[["Var","e"]]]]]],[]],"fe_representation":"unsafeUselect :: !u:(a .e) !Int -> *(.e,!u:(a .e))"}]],"ce_instances":[{"ie_types":[[["Type","_!Array",[]],"{!}"]],"ie_locations":[["Location","Generics","_Array",["Just",24],["Just",23],""]]},{"ie_types":[[["Type","_Array",[]],"{}"]],"ie_locations":[["Location","Generics","_Array",["Just",24],["Just",10],""]]}]},["Bin",1,["Location","Generics","GenPrint",["Just",5],["Nothing"],"PrintOutput"],{"ce_vars":["s"],"ce_context":[],"ce_members":[["printOutput",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]],["Uniq",["Var","s"]]],["Uniq",["Var","s"]],[]],"fe_representation":"printOutput :: Char *s -> *s"}]],"ce_instances":[{"ie_types":[[["Type","File",[]],"File"]],"ie_locations":[["Location","Generics","GenPrint",["Just",21],["Just",31],""]]},{"ie_types":[[["Type","StringOutput",[]],"StringOutput"]],"ie_locations":[["Location","Generics","GenPrint",["Just",20],["Just",10],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Applicative",["Just",33],["Nothing"],"Applicative"],{"ce_vars":["f"],"ce_context":[[["Class","Functor"],["Var","f"]]],"ce_members":[["pure",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Cons","f",[["Var","a"]]],[]],"fe_representation":"pure :: a -> f a"}],["<*>",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Func",[["Var","a"]],["Var","b"],[]]]],["Cons","f",[["Var","a"]]]],["Cons","f",[["Var","b"]]],[]],"fe_priority":["LeftAssoc",4],"fe_representation":"(<*>) infixl 4 :: (f (a -> b)) (f a) -> f b"}]],"ce_instances":[{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",14],["Just",17],""]]},{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",53],["Just",158],""]]},{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",25],["Just",99],""]]},{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","Platform","System.IO",["Just",30],["Just",23],""]]},{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","Platform","Data.Either",["Just",16],["Just",11],""]]},{"ie_types":[[["Type","MaybeError",[["Var","a"]]],"(MaybeError a)"]],"ie_locations":[["Location","Platform","Data.Error",["Just",13],["Nothing"],""]]},{"ie_types":[[["Type","RTree",[]],"RTree"]],"ie_locations":[["Location","Platform","Data.Tree",["Just",27],["Just",27],""]]},{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Data.Functor.Identity",["Just",12],["Just",15],""]]},{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",25],["Just",31],""]]},{"ie_types":[[["Type","Const",[["Var","m"]]],"(Const m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",24],["Just",21],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",17],["Just",51],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",16],["Just",46],""]]},{"ie_types":[[["Arrow",["Just",["Var","r"]]],"((->) r)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",15],["Just",42],""]]},{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",183],["Just",111],""]]},{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"]]],"(RWST r w s m)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",17],["Just",17],""]]},{"ie_types":[[["Type","ReaderT",[["Var","r"],["Var","m"]]],"(ReaderT r m)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",26],["Just",16],""]]},{"ie_types":[[["Type","StateT",[["Var","s"],["Var","m"]]],"(StateT s m)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",30],["Just",15],""]]},{"ie_types":[[["Type","WriterT",[["Var","w"],["Var","m"]]],"(WriterT w m)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",15],["Just",18],""]]},{"ie_types":[[["Type","JSIO",[]],"JSIO"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",21],["Just",27],""]]}]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Control.Arrow",["Just",90],["Nothing"],"ArrowZero"],{"ce_vars":["a"],"ce_context":[[["Class","Arrow"],["Var","a"]]],"ce_members":[["zeroArrow",{"fe_kind":["Function"],"fe_type":["Func",[],["Cons","a",[["Var","b"],["Var","c"]]],[]],"fe_representation":"zeroArrow :: a b c"}]],"ce_instances":[]},["Bin",1,["Location","Platform","Control.Arrow",["Just",35],["Nothing"],"Arrow"],{"ce_vars":["a"],"ce_context":[[["Class","Category"],["Var","a"]]],"ce_members":[["arr",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Var","c"],[]]],["Cons","a",[["Var","b"],["Var","c"]]],[]],"fe_representation":"arr :: (b -> c) -> a b c"}],["first",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]]],["Cons","a",[["Type","_Tuple2",[["Var","b"],["Var","d"]]],["Type","_Tuple2",[["Var","c"],["Var","d"]]]]],[]],"fe_representation":"first :: (a b c) -> a (b,d) (c,d)"}],["second",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]]],["Cons","a",[["Type","_Tuple2",[["Var","d"],["Var","b"]]],["Type","_Tuple2",[["Var","d"],["Var","c"]]]]],[]],"fe_representation":"second :: (a b c) -> a (d,b) (d,c)"}],["***",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]],["Cons","a",[["Var","b`"],["Var","c`"]]]],["Cons","a",[["Type","_Tuple2",[["Var","b"],["Var","b`"]]],["Type","_Tuple2",[["Var","c"],["Var","c`"]]]]],[]],"fe_priority":["RightAssoc",3],"fe_representation":"(***) infixr 3 :: (a b c) (a b` c`) -> a (b,b`) (c,c`)"}],["&&&",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]],["Cons","a",[["Var","b"],["Var","c`"]]]],["Cons","a",[["Var","b"],["Type","_Tuple2",[["Var","c"],["Var","c`"]]]]],[]],"fe_priority":["RightAssoc",3],"fe_representation":"(&&&) infixr 3 :: (a b c) (a b c`) -> a b (c,c`)"}]],"ce_instances":[{"ie_types":[[["Type","Kleisli",[["Var","m"]]],"(Kleisli m)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",73],["Just",54],""]]},{"ie_types":[[["Arrow",["Nothing"]],"(->)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",64],["Just",37],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Arrow",["Just",97],["Nothing"],"ArrowPlus"],{"ce_vars":["a"],"ce_context":[[["Class","ArrowZero"],["Var","a"]]],"ce_members":[["<+>",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","b"],["Var","c"]]],["Cons","a",[["Var","b"],["Var","c"]]]],["Cons","a",[["Var","b"],["Var","c"]]],[]],"fe_priority":["RightAssoc",5],"fe_representation":"(<+>) infixr 5 :: (a b c) (a b c) -> a b c"}]],"ce_instances":[]},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Control.Monad",["Just",16],["Nothing"],"MonadPlus"],{"ce_vars":["m"],"ce_context":[[["Class","Monad"],["Var","m"]]],"ce_members":[["mzero",{"fe_kind":["Function"],"fe_type":["Func",[],["Cons","m",[["Var","a"]]],[]],"fe_representation":"mzero :: m a"}],["mplus",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]],["Cons","m",[["Var","a"]]]],["Cons","m",[["Var","a"]]],[]],"fe_representation":"mplus :: (m a) (m a) -> m a"}]],"ce_instances":[{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",17],["Just",28],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Control.Monad",["Just",22],["Just",25],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Control.Monad",["Just",20],["Just",21],""]]}]},["Bin",3,["Location","Platform","Control.Category",["Just",17],["Nothing"],"Category"],{"ce_vars":["cat"],"ce_context":[],"ce_members":[["cid",{"fe_kind":["Function"],"fe_type":["Func",[],["Cons","cat",[["Var","a"],["Var","a"]]],[]],"fe_representation":"cid :: cat a a"}],["O",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","cat",[["Var","b"],["Var","c"]]],["Cons","cat",[["Var","a"],["Var","b"]]]],["Cons","cat",[["Var","a"],["Var","c"]]],[]],"fe_priority":["RightAssoc",9],"fe_representation":"(O) infixr 9 :: (cat b c) (cat a b) -> cat a c"}]],"ce_instances":[{"ie_types":[[["Arrow",["Nothing"]],"(->)"]],"ie_locations":[["Location","Platform","Control.Category",["Just",24],["Just",17],""]]},{"ie_types":[[["Type","Kleisli",[["Var","m"]]],"(Kleisli m)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",71],["Just",50],""]]}]},["Bin",1,["Location","Platform","Control.Arrow",["Just",169],["Nothing"],"ArrowApply"],{"ce_vars":["a"],"ce_context":[[["Class","Arrow"],["Var","a"]]],"ce_members":[["app",{"fe_kind":["Function"],"fe_type":["Func",[],["Cons","a",[["Type","_Tuple2",[["Cons","a",[["Var","b"],["Var","c"]]],["Var","b"]]],["Var","c"]]],[]],"fe_representation":"app :: a (a b c,b) c"}]],"ce_instances":[{"ie_types":[[["Type","Kleisli",[["Var","m"]]],"(Kleisli m)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",174],["Just",105],""]]},{"ie_types":[[["Arrow",["Nothing"]],"(->)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",172],["Just",102],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad",["Just",7],["Nothing"],"Monad"],{"ce_vars":["m"],"ce_context":[[["Class","Applicative"],["Var","m"]]],"ce_members":[["bind",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]],["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]]],["Cons","m",[["Var","b"]]],[]],"fe_representation":"bind :: (m a) (a -> m b) -> m b"}]],"ce_instances":[{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",16],["Just",25],""]]},{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",57],["Just",174],""]]},{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",35],["Just",107],""]]},{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","Platform","System.IO",["Just",32],["Just",30],""]]},{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","Platform","Data.Either",["Just",18],["Just",16],""]]},{"ie_types":[[["Type","MaybeError",[["Var","a"]]],"(MaybeError a)"]],"ie_locations":[["Location","Platform","Data.Error",["Just",14],["Nothing"],""]]},{"ie_types":[[["Type","RTree",[]],"RTree"]],"ie_locations":[["Location","Platform","Data.Tree",["Just",29],["Just",32],""]]},{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Data.Functor.Identity",["Just",13],["Just",19],""]]},{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",26],["Just",35],""]]},{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",185],["Just",115],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",28],""],["Location","Platform","Control.Monad",["Just",14],["Just",17],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",33],""],["Location","Platform","Control.Monad",["Just",12],["Just",14],""]]},{"ie_types":[[["Arrow",["Just",["Var","r"]]],"((->) r)"]],"ie_locations":[["Location","Platform","Control.Monad",["Just",10],["Just",11],""]]},{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"]]],"(RWST r w s m)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",18],["Just",21],""]]},{"ie_types":[[["Type","ReaderT",[["Var","r"],["Var","m"]]],"(ReaderT r m)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",27],["Just",20],""]]},{"ie_types":[[["Type","StateT",[["Var","s"],["Var","m"]]],"(StateT s m)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",31],["Just",19],""]]},{"ie_types":[[["Type","WriterT",[["Var","w"],["Var","m"]]],"(WriterT w m)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",16],["Just",22],""]]},{"ie_types":[[["Type","StMonad",[["Var","s"]]],"(StMonad .s)"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",52],""]]},{"ie_types":[[["Type","JSIO",[]],"JSIO"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",23],["Just",34],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Control.Monad.Fix",["Just",8],["Nothing"],"MonadFix"],{"ce_vars":["m"],"ce_context":[[["Class","Monad"],["Var","m"]]],"ce_members":[["mfix",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","m",[["Var","a"]]],[]]],["Cons","m",[["Var","a"]]],[]],"fe_representation":"mfix :: (a -> m a) -> m a"}]],"ce_instances":[{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Control.Monad.Fix",["Just",13],["Just",17],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Control.Monad.Fix",["Just",11],["Just",11],""]]},{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Control.Monad.Identity",["Just",9],["Just",10],""]]}]},["Tip"],["Bin",1,["Location","Platform","Control.Monad.Trans",["Just",7],["Just",7],"MonadTrans"],{"ce_vars":["t"],"ce_context":[],"ce_members":[["liftT",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]]],["Cons","t",[["Var","m"],["Var","a"]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"liftT :: (m a) -> t m a | Monad m"}]],"ce_instances":[{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"]]],"(RWST r w s)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",19],["Just",27],""]]},{"ie_types":[[["Type","ReaderT",[["Var","r"]]],"(ReaderT r)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",29],["Just",23],""]]},{"ie_types":[[["Type","StateT",[["Var","s"]]],"(StateT s)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",32],["Just",22],""]]},{"ie_types":[[["Type","WriterT",[["Var","w"]]],"(WriterT w)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",18],["Just",27],""]]}]},["Tip"],["Tip"]]]]],["Bin",6,["Location","Platform","Data.Complex",["Just",11],["Nothing"],"HypGeo"],{"ce_vars":["a"],"ce_context":[[["Class","asinh"],["Var","a"]],[["Class","acosh"],["Var","a"]],[["Class","atanh"],["Var","a"]],[["Class","sinh"],["Var","a"]],[["Class","cosh"],["Var","a"]],[["Class","tanh"],["Var","a"]]],"ce_members":[],"ce_instances":[]},["Bin",3,["Location","Platform","Data.Complex",["Just",9],["Nothing"],"Geo"],{"ce_vars":["a"],"ce_context":[[["Class","sin"],["Var","a"]],[["Class","cos"],["Var","a"]],[["Class","tan"],["Var","a"]]],"ce_members":[],"ce_instances":[]},["Bin",1,["Location","Platform","Data.Complex",["Just",8],["Nothing"],"pi"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["pi",{"fe_kind":["Function"],"fe_type":["Func",[],["Var","a"],[]],"fe_representation":"pi :: a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",15],["Just",18],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",14],["Just",15],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Complex",["Just",10],["Nothing"],"ArcGeo"],{"ce_vars":["a"],"ce_context":[[["Class","asin"],["Var","a"]],[["Class","acos"],["Var","a"]],[["Class","atan"],["Var","a"]]],"ce_members":[],"ce_instances":[]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Complex",["Just",12],["Nothing"],"AllGeo"],{"ce_vars":["a"],"ce_context":[[["Class","Geo"],["Var","a"]],[["Class","ArcGeo"],["Var","a"]],[["Class","HypGeo"],["Var","a"]]],"ce_members":[],"ce_instances":[]},["Tip"],["Bin",1,["Location","Platform","Data.Foldable",["Just",40],["Just",16],"Foldable"],{"ce_vars":["t"],"ce_context":[],"ce_documentation":["ClassDoc",["Just","Ported from Haskell's Data.Foldable by Jurriën Stutterheim 15-08-2014"],[],[["Nothing"],["Nothing"],["Nothing"],["Nothing"],["Nothing"],["Nothing"],["Nothing"],["Nothing"]]],"ce_members":[["fold",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Var","m"]]]],["Var","m"],[[["Class","Monoid"],["Var","m"]]]],"fe_representation":"fold :: (t m) -> m | Monoid m"}],["foldMap",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","m"],[]],["Cons","t",[["Var","a"]]]],["Var","m"],[[["Class","Monoid"],["Var","m"]]]],"fe_representation":"foldMap :: (a -> m) (t a) -> m | Monoid m"}],["foldr",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Var","b"],["Cons","t",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"foldr :: (a -> b -> b) b (t a) -> b"}],["foldr`",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","b"]],["Var","b"],[]],[]],["Var","b"],["Cons","t",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"foldr` :: (a -> b -> b) b (t a) -> b"}],["foldl",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Func",[["Var","a"]],["Var","b"],[]],[]],["Var","b"],["Cons","t",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"foldl :: (b -> a -> b) b (t a) -> b"}],["foldl`",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","b"]],["Func",[["Var","a"]],["Var","b"],[]],[]],["Var","b"],["Cons","t",[["Var","a"]]]],["Var","b"],[]],"fe_representation":"foldl` :: (b -> a -> b) b (t a) -> b"}],["foldr1",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Cons","t",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"foldr1 :: (a -> a -> a) (t a) -> a"}],["foldl1",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Func",[["Var","a"]],["Var","a"],[]],[]],["Cons","t",[["Var","a"]]]],["Var","a"],[]],"fe_representation":"foldl1 :: (a -> a -> a) (t a) -> a"}]],"ce_instances":[{"ie_types":[[["Type","Const",[["Var","m"]]],"(Const m)"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",88],["Just",141],""]]},{"ie_types":[[["Type","_Tuple2",[["Var","a"]]],"(,) a"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",83],["Just",113],""]]},{"ie_types":[[["Type","Either",[["Var","a"]]],"(Either a)"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",82],["Just",90],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",81],["Just",79],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",80],["Just",56],""]]}]},["Tip"],["Tip"]]]]],["Bin",17,["Location","Platform","Database.SQL",["Just",143],["Nothing"],"SQLCursor"],{"ce_vars":["cur"],"ce_context":[],"ce_members":[["execute",{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLStatement",[]],["Type","_List",[["Type","SQLValue",[]]]],["Uniq",["Var","cur"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","SQLError",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"execute :: !SQLStatement ![SQLValue] !*cur -> (!Maybe SQLError,!*cur)"}],["executeMany",{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLStatement",[]],["Type","_List",[["Type","_List",[["Type","SQLValue",[]]]]]],["Uniq",["Var","cur"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","SQLError",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"executeMany :: !SQLStatement ![[SQLValue]] !*cur -> (!Maybe SQLError,!*cur)"}],["numRows",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","Int",[]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"numRows :: !*cur -> (!Maybe SQLError,!Int,!*cur)"}],["numFields",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","Int",[]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"numFields :: !*cur -> (!Maybe SQLError,!Int,!*cur)"}],["insertId",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","Int",[]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"insertId :: !*cur -> (!Maybe SQLError,!Int,!*cur)"}],["fetchOne",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","Maybe",[["Type","SQLRow",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"fetchOne :: !*cur -> (!Maybe SQLError,!Maybe SQLRow,!*cur)"}],["fetchMany",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","_List",[["Type","SQLRow",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"fetchMany :: !Int !*cur -> (!Maybe SQLError,![SQLRow],!*cur)"}],["fetchAll",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","_List",[["Type","SQLRow",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"fetchAll :: !*cur -> (!Maybe SQLError,![SQLRow],!*cur)"}],["commit",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","cur"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","SQLError",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"commit :: !*cur -> (!Maybe SQLError,!*cur)"}],["rollback",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","cur"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","SQLError",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"rollback :: !*cur -> (!Maybe SQLError,!*cur)"}]],"ce_instances":[{"ie_types":[[["Type","SQLiteCursor",[]],"SQLiteCursor"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",15],["Just",75],""]]},{"ie_types":[[["Type","MySQLCursor",[]],"MySQLCursor"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",15],["Just",80],""]]}]},["Bin",10,["Location","Platform","Data.Monoid",["Just",9],["Nothing"],"Monoid"],{"ce_vars":["a"],"ce_context":[[["Class","Semigroup"],["Var","a"]]],"ce_members":[["mempty",{"fe_kind":["Function"],"fe_type":["Func",[],["Var","a"],[]],"fe_representation":"mempty :: a"}]],"ce_instances":[{"ie_types":[[["Type","Map",[["Var","k"],["Var","v"]]],"(Map k v)"]],"ie_locations":[["Location","Platform","Data.Map",["Just",35],["Just",33],""]]},{"ie_types":[[["Type","Heap",[["Var","a"]]],"(Heap a)"]],"ie_locations":[["Location","Platform","Data.Heap",["Just",30],["Just",272],""]]},{"ie_types":[[["Type","Last",[["Var","a"]]],"(Last a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",65],["Just",112],""]]},{"ie_types":[[["Type","First",[["Var","a"]]],"(First a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",64],["Just",105],""]]},{"ie_types":[[["Type","Product",[["Var","a"]]],"(Product a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",63],["Just",98],""]]},{"ie_types":[[["Type","Sum",[["Var","a"]]],"(Sum a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",62],["Just",92],""]]},{"ie_types":[[["Type","Any",[]],"Any"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",61],["Just",86],""]]},{"ie_types":[[["Type","All",[]],"All"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",60],["Just",80],""]]},{"ie_types":[[["Type","Endo",[["Var","a"]]],"(Endo a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",59],["Just",74],""]]},{"ie_types":[[["Type","Dual",[["Var","a"]]],"(Dual a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",58],["Just",68],""]]},{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",31],["Just",62],""]]},{"ie_types":[[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]],"(a,b,c,d,e)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",30],["Just",54],""]]},{"ie_types":[[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]],"(a,b,c,d)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",29],["Just",48],""]]},{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",28],["Just",42],""]]},{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",27],["Just",36],""]]},{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",26],["Just",30],""]]},{"ie_types":[[["Func",[["Var","a"]],["Var","b"],[]],"(a -> b)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",25],["Just",24],""]]},{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",24],["Just",18],""]]},{"ie_types":[[["Type","Const",[["Var","a"],["Var","b"]]],"(Const a b)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",31],["Just",18],""]]}]},["Bin",5,["Location","Platform","Data.Integer",["Just",29],["Nothing"],"toInteger"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toInteger",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Integer",[]],[]],"fe_representation":"toInteger :: !a -> Integer"}]],"ce_instances":[{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",39],["Just",32],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",37],["Just",23],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",36],["Just",20],""]]}]},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",96],["Nothing"],"DynGraph"],{"ce_vars":["gr"],"ce_context":[[["Class","Graph"],["Var","gr"]]],"ce_members":[["<&>",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Context",[["Var","a"],["Var","b"]]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[]],"fe_priority":["LeftAssoc",9],"fe_representation":"(<&>) infixl 9 :: (Context a b) (gr a b) -> gr a b"}]],"ce_instances":[{"ie_types":[[["Type","Gr",[]],"Gr"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",41],["Just",94],""]]}]},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",62],["Nothing"],"Graph"],{"ce_vars":["gr"],"ce_context":[],"ce_members":[["emptyGraph",{"fe_kind":["Function"],"fe_type":["Func",[],["Cons","gr",[["Var","a"],["Var","b"]]],[]],"fe_representation":"emptyGraph :: gr a b"}],["isEmptyGraph",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Bool",[]],[]],"fe_representation":"isEmptyGraph :: (gr a b) -> Bool"}],["match",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Decomp",[["Var","gr"],["Var","a"],["Var","b"]]],[]],"fe_representation":"match :: Node (gr a b) -> Decomp gr a b"}],["mkGraph",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","LNode",[["Var","a"]]]]],["Type","_List",[["Type","LEdge",[["Var","b"]]]]]],["Cons","gr",[["Var","a"],["Var","b"]]],[]],"fe_representation":"mkGraph :: [LNode a] [LEdge b] -> gr a b"}],["labNodes",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","LNode",[["Var","a"]]]]],[]],"fe_representation":"labNodes :: (gr a b) -> [LNode a]"}],["matchAny",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","GDecomp",[["Var","gr"],["Var","a"],["Var","b"]]],[]],"fe_representation":"matchAny :: (gr a b) -> GDecomp gr a b"}],["noNodes",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","Int",[]],[]],"fe_representation":"noNodes :: (gr a b) -> Int"}],["nodeRange",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_Tuple2",[["Type","Node",[]],["Type","Node",[]]]],[]],"fe_representation":"nodeRange :: (gr a b) -> (Node,Node)"}],["labEdges",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","gr",[["Var","a"],["Var","b"]]]],["Type","_List",[["Type","LEdge",[["Var","b"]]]]],[]],"fe_representation":"labEdges :: (gr a b) -> [LEdge b]"}]],"ce_instances":[{"ie_types":[[["Type","Gr",[]],"Gr"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",39],["Just",63],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Monad",["Just",27],["Nothing"],"GraphM"],{"ce_vars":["m","gr"],"ce_context":[[["Class","Monad"],["Var","m"]]],"ce_members":[["emptyM",{"fe_kind":["Function"],"fe_type":["Func",[],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]],[]],"fe_representation":"emptyM :: m (gr a b)"}],["isEmptyM",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","Bool",[]]]],[]],"fe_representation":"isEmptyM :: (m (gr a b)) -> m Bool"}],["matchM",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Node",[]],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","Decomp",[["Var","gr"],["Var","a"],["Var","b"]]]]],[]],"fe_representation":"matchM :: Node (m (gr a b)) -> m (Decomp gr a b)"}],["mkGraphM",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","LNode",[["Var","a"]]]]],["Type","_List",[["Type","LEdge",[["Var","b"]]]]]],["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]],[]],"fe_representation":"mkGraphM :: [LNode a] [LEdge b] -> m (gr a b)"}],["labNodesM",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","_List",[["Type","LNode",[["Var","a"]]]]]]],[]],"fe_representation":"labNodesM :: (m (gr a b)) -> m [LNode a]"}],["matchAnyM",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","GDecomp",[["Var","gr"],["Var","a"],["Var","b"]]]]],[]],"fe_representation":"matchAnyM :: (m (gr a b)) -> m (GDecomp gr a b)"}],["noNodesM",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","Int",[]]]],[]],"fe_representation":"noNodesM :: (m (gr a b)) -> m Int"}],["nodeRangeM",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","_Tuple2",[["Type","Node",[]],["Type","Node",[]]]]]],[]],"fe_representation":"nodeRangeM :: (m (gr a b)) -> m (Node,Node)"}],["labEdgesM",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Cons","gr",[["Var","a"],["Var","b"]]]]]],["Cons","m",[["Type","_List",[["Type","LEdge",[["Var","b"]]]]]]],[]],"fe_representation":"labEdgesM :: (m (gr a b)) -> m [LEdge b]"}]],"ce_instances":[]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Monoid",["Just",6],["Nothing"],"Semigroup"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["mappend",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_representation":"mappend :: a a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Heap",[["Var","a"]]],"(Heap a)"]],"ie_locations":[["Location","Platform","Data.Heap",["Just",28],["Just",269],""]]},{"ie_types":[[["Type","Last",[["Var","a"]]],"(Last a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",56],["Just",108],""]]},{"ie_types":[[["Type","First",[["Var","a"]]],"(First a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",55],["Just",101],""]]},{"ie_types":[[["Type","Product",[["Var","a"]]],"(Product a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",54],["Just",95],""]]},{"ie_types":[[["Type","Sum",[["Var","a"]]],"(Sum a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",53],["Just",89],""]]},{"ie_types":[[["Type","Any",[]],"Any"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",52],["Just",83],""]]},{"ie_types":[[["Type","All",[]],"All"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",51],["Just",77],""]]},{"ie_types":[[["Type","Endo",[["Var","a"]]],"(Endo a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",50],["Just",71],""]]},{"ie_types":[[["Type","Dual",[["Var","a"]]],"(Dual a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",49],["Just",65],""]]},{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",22],["Just",57],""]]},{"ie_types":[[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]],"(a,b,c,d,e)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",21],["Just",51],""]]},{"ie_types":[[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]],"(a,b,c,d)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",20],["Just",45],""]]},{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",19],["Just",39],""]]},{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",18],["Just",33],""]]},{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",17],["Just",27],""]]},{"ie_types":[[["Func",[["Var","a"]],["Var","b"],[]],"(a -> b)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",16],["Just",21],""]]},{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",15],["Just",15],""]]},{"ie_types":[[["Type","Const",[["Var","a"],["Var","b"]]],"(Const a b)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",30],["Just",15],""]]}]},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Database.SQL",["Just",128],["Nothing"],"SQLEnvironment"],{"ce_vars":["env","ctx"],"ce_context":[],"ce_members":[["openContext",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","Maybe",[["Uniq",["Var","ctx"]]]],["Uniq",["Var","env"]]]],[]],"fe_representation":"openContext :: !*env -> (!Maybe SQLError,!Maybe *ctx,!*env)"}],["closeContext",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","ctx"]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","SQLError",[]]]],["Uniq",["Var","env"]]]],[]],"fe_representation":"closeContext :: !*ctx !*env -> (!Maybe SQLError,!*env)"}]],"ce_instances":[{"ie_types":[[["Type","World",[]],"World"],[["Type","SQLiteContext",[]],"SQLiteContext"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",12],["Just",23],""]]},{"ie_types":[[["Type","World",[]],"World"],[["Type","MySQLContext",[]],"MySQLContext"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",12],["Just",25],""]]}]},["Bin",1,["Location","Platform","Data.Traversable",["Just",96],["Nothing"],"Traversable"],{"ce_vars":["t"],"ce_context":[[["Class","Functor"],["Var","t"]],[["Class","Foldable"],["Var","t"]]],"ce_members":[["traverse",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","f",[["Var","b"]]],[]],["Cons","t",[["Var","a"]]]],["Cons","f",[["Cons","t",[["Var","b"]]]]],[[["Class","Applicative"],["Var","f"]]]],"fe_representation":"traverse :: (a -> f b) (t a) -> f (t b) | Applicative f"}],["sequenceA",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Cons","f",[["Var","a"]]]]]],["Cons","f",[["Cons","t",[["Var","a"]]]]],[[["Class","Applicative"],["Var","f"]]]],"fe_representation":"sequenceA :: (t (f a)) -> f (t a) | Applicative f"}],["mapM",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]],["Cons","t",[["Var","a"]]]],["Cons","m",[["Cons","t",[["Var","b"]]]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"mapM :: (a -> m b) (t a) -> m (t b) | Monad m"}],["sequence",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","t",[["Cons","m",[["Var","a"]]]]]],["Cons","m",[["Cons","t",[["Var","a"]]]]],[[["Class","Monad"],["Var","m"]]]],"fe_representation":"sequence :: (t (m a)) -> m (t a) | Monad m"}]],"ce_instances":[{"ie_types":[[["Type","_Tuple2",[["Var","a"]]],"(,) a"]],"ie_locations":[["Location","Platform","Data.Traversable",["Just",119],["Just",51],""]]},{"ie_types":[[["Type","Either",[["Var","a"]]],"(Either a)"]],"ie_locations":[["Location","Platform","Data.Traversable",["Just",117],["Just",44],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Data.Traversable",["Just",115],["Just",37],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Data.Traversable",["Just",113],["Just",30],""]]}]},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Database.SQL",["Just",133],["Nothing"],"SQLContext"],{"ce_vars":["ctx","con"],"ce_context":[],"ce_members":[["openConnection",{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLDatabase",[]],["Uniq",["Var","ctx"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","Maybe",[["Uniq",["Var","con"]]]],["Uniq",["Var","ctx"]]]],[]],"fe_representation":"openConnection :: !SQLDatabase !*ctx -> (!Maybe SQLError,!Maybe *con,!*ctx)"}],["closeConnection",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","con"]],["Uniq",["Var","ctx"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","SQLError",[]]]],["Uniq",["Var","ctx"]]]],[]],"fe_representation":"closeConnection :: !*con !*ctx -> (!Maybe SQLError,!*ctx)"}]],"ce_instances":[{"ie_types":[[["Type","SQLiteContext",[]],"SQLiteContext"],[["Type","SQLiteConnection",[]],"SQLiteConnection"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",13],["Just",32],""]]},{"ie_types":[[["Type","MySQLContext",[]],"MySQLContext"],[["Type","MySQLConnection",[]],"MySQLConnection"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",13],["Just",34],""]]}]},["Tip"],["Bin",1,["Location","Platform","Database.SQL",["Just",138],["Nothing"],"SQLConnection"],{"ce_vars":["con","cur"],"ce_context":[],"ce_members":[["openCursor",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","con"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","Maybe",[["Uniq",["Var","cur"]]]],["Uniq",["Var","con"]]]],[]],"fe_representation":"openCursor :: !*con -> (!Maybe SQLError,!Maybe *cur,!*con)"}],["closeCursor",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","cur"]],["Uniq",["Var","con"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","SQLError",[]]]],["Uniq",["Var","con"]]]],[]],"fe_representation":"closeCursor :: !*cur !*con -> (!Maybe SQLError,!*con)"}]],"ce_instances":[{"ie_types":[[["Type","SQLiteConnection",[]],"SQLiteConnection"],[["Type","SQLiteCursor",[]],"SQLiteCursor"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",14],["Just",55],""]]},{"ie_types":[[["Type","MySQLConnection",[]],"MySQLConnection"],[["Type","MySQLCursor",[]],"MySQLCursor"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",14],["Just",58],""]]}]},["Tip"],["Tip"]]]]],["Bin",6,["Location","Platform","Graphics.Layout",["Just",37],["Nothing"],"DimRef"],{"ce_vars":["tag","unit"],"ce_context":[],"ce_members":[["xdim",{"fe_kind":["Function"],"fe_type":["Func",[["Var","tag"]],["Var","unit"],[]],"fe_representation":"xdim :: tag -> unit"}],["ydim",{"fe_kind":["Function"],"fe_type":["Func",[["Var","tag"]],["Var","unit"],[]],"fe_representation":"ydim :: tag -> unit"}]],"ce_instances":[]},["Bin",3,["Location","Platform","Graphics.Layout",["Just",21],["Nothing"],"Layout"],{"ce_vars":["thing","size","offset","host"],"ce_context":[],"ce_members":[["collage",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","offset"]]],["Type","_List",[["Cons","thing",[["Var","m"]]]]],["Cons","host",[["Var","m"]]]],["Cons","thing",[["Var","m"]]],[]],"fe_representation":"collage :: [offset] [thing m] (host m) -> thing m"}],["overlay",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Type","XYAlign",[]]]],["Type","_List",[["Var","offset"]]],["Type","_List",[["Cons","thing",[["Var","m"]]]]],["Cons","host",[["Var","m"]]]],["Cons","thing",[["Var","m"]]],[]],"fe_representation":"overlay :: [XYAlign] [offset] [thing m] (host m) -> thing m"}],["beside",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","size"]]],["Type","_List",[["Type","YAlign",[]]]],["Type","_List",[["Var","offset"]]],["Type","_List",[["Cons","thing",[["Var","m"]]]]],["Cons","host",[["Var","m"]]]],["Cons","thing",[["Var","m"]]],[]],"fe_representation":"beside :: [size] [YAlign] [offset] [thing m] (host m) -> thing m"}],["above",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","size"]]],["Type","_List",[["Type","XAlign",[]]]],["Type","_List",[["Var","offset"]]],["Type","_List",[["Cons","thing",[["Var","m"]]]]],["Cons","host",[["Var","m"]]]],["Cons","thing",[["Var","m"]]],[]],"fe_representation":"above :: [size] [XAlign] [offset] [thing m] (host m) -> thing m"}],["grid",{"fe_kind":["Function"],"fe_type":["Func",[["Type","GridDimension",[]],["Type","GridLayout",[]],["Type","_List",[["Var","size"]]],["Type","_List",[["Var","size"]]],["Type","_List",[["Type","XYAlign",[]]]],["Type","_List",[["Var","offset"]]],["Type","_List",[["Cons","thing",[["Var","m"]]]]],["Cons","host",[["Var","m"]]]],["Cons","thing",[["Var","m"]]],[]],"fe_representation":"grid :: GridDimension GridLayout [size] [size] [XYAlign] [offset] [thing m] (host m) -> thing m"}]],"ce_instances":[]},["Bin",1,["Location","Platform","Database.SQL",["Just",156],["Nothing"],"SQLSchemaCursor"],{"ce_vars":["cur"],"ce_context":[],"ce_members":[["listTables",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","_List",[["Type","SQLTableName",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"listTables :: !*cur -> (!Maybe SQLError,![SQLTableName],!*cur)"}],["describeTable",{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLTableName",[]],["Uniq",["Var","cur"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SQLError",[]]]],["Type","Maybe",[["Type","SQLTable",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"describeTable :: !SQLTableName !*cur -> (!Maybe SQLError,!Maybe SQLTable,!*cur)"}],["createTable",{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLTable",[]],["Uniq",["Var","cur"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","SQLError",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"createTable :: !SQLTable !*cur -> (!Maybe SQLError,!*cur)"}],["deleteTable",{"fe_kind":["Function"],"fe_type":["Func",[["Type","SQLTableName",[]],["Uniq",["Var","cur"]]],["Type","_Tuple2",[["Type","Maybe",[["Type","SQLError",[]]]],["Uniq",["Var","cur"]]]],[]],"fe_representation":"deleteTable :: !SQLTableName !*cur -> (!Maybe SQLError,!*cur)"}]],"ce_instances":[{"ie_types":[[["Type","SQLiteCursor",[]],"SQLiteCursor"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",16],["Just",221],""]]},{"ie_types":[[["Type","MySQLCursor",[]],"MySQLCursor"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",16],["Just",258],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Layout",["Just",32],["Nothing"],"Fit"],{"ce_vars":["thing","dim"],"ce_context":[],"ce_members":[["fitXY",{"fe_kind":["Function"],"fe_type":["Func",[["Var","dim"],["Var","dim"],["Cons","thing",[["Var","m"]]]],["Cons","thing",[["Var","m"]]],[]],"fe_representation":"fitXY :: dim dim (thing m) -> thing m"}],["fitX",{"fe_kind":["Function"],"fe_type":["Func",[["Var","dim"],["Cons","thing",[["Var","m"]]]],["Cons","thing",[["Var","m"]]],[]],"fe_representation":"fitX :: dim (thing m) -> thing m"}],["fitY",{"fe_kind":["Function"],"fe_type":["Func",[["Var","dim"],["Cons","thing",[["Var","m"]]]],["Cons","thing",[["Var","m"]]],[]],"fe_representation":"fitY :: dim (thing m) -> thing m"}]],"ce_instances":[]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Graphics.Scalable",["Just",86],["Nothing"],"tuneImage"],{"ce_vars":["attr"],"ce_context":[],"ce_members":[["tuneImage",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Image",[["Var","m"]]],["Cons","attr",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"tuneImage :: !(Image m) !(attr m) -> Image m"}]],"ce_instances":[{"ie_types":[[["Type","NoAttr",[]],"NoAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",380],""]]},{"ie_types":[[["Type","MaskAttr",[]],"MaskAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",396],""]]},{"ie_types":[[["Type","DashAttr",[]],"DashAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",394],""]]},{"ie_types":[[["Type","YRadiusAttr",[]],"YRadiusAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",388],""]]},{"ie_types":[[["Type","XRadiusAttr",[]],"XRadiusAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",386],""]]},{"ie_types":[[["Type","DraggableAttr",[]],"DraggableAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",410],""]]},{"ie_types":[[["Type","OnMouseOutAttr",[]],"OnMouseOutAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",408],""]]},{"ie_types":[[["Type","OnMouseMoveAttr",[]],"OnMouseMoveAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",406],""]]},{"ie_types":[[["Type","OnMouseOverAttr",[]],"OnMouseOverAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",404],""]]},{"ie_types":[[["Type","OnMouseUpAttr",[]],"OnMouseUpAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",402],""]]},{"ie_types":[[["Type","OnMouseDownAttr",[]],"OnMouseDownAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",400],""]]},{"ie_types":[[["Type","OnClickAttr",[]],"OnClickAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",398],""]]},{"ie_types":[[["Type","OpacityAttr",[]],"OpacityAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",392],""]]},{"ie_types":[[["Type","FillAttr",[]],"FillAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",390],""]]},{"ie_types":[[["Type","StrokeWidthAttr",[]],"StrokeWidthAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",384],""]]},{"ie_types":[[["Type","StrokeAttr",[]],"StrokeAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",382],""]]}]},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",38],["Just",88],"margin"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["margin",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","Image",[["Var","m"]]]],["Type","Image",[["Var","m"]]],[]],"fe_representation":"margin :: !a !(Image m) -> Image m"}]],"ce_instances":[{"ie_types":[[["Type","_Tuple4",[["Type","Span",[]],["Type","Span",[]],["Type","Span",[]],["Type","Span",[]]]],"(!Span,!Span,!Span,!Span)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",44],["Just",100],""]]},{"ie_types":[[["Type","_Tuple3",[["Type","Span",[]],["Type","Span",[]],["Type","Span",[]]]],"(!Span,!Span,!Span)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",43],["Just",97],""]]},{"ie_types":[[["Type","_Tuple2",[["Type","Span",[]],["Type","Span",[]]]],"(!Span,!Span)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",42],["Just",94],""]]},{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",41],["Just",91],""]]}]},["Tip"],["Tip"]],["Tip"]]]]],["Bin",115,["Location","StdEnv","StdOverloaded",["Just",48],["Just",49],"fromReal"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["fromReal",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Real",[]]],["Var","a"],[]],"fe_representation":"fromReal :: !Real -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",32],["Nothing"],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",33],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",32],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",31],["Nothing"],""]]}]},["Bin",62,["Location","Sapl","Sapl.SaplStruct",["Just",55],["Nothing"],"toStrictVar"],{"ce_vars":["v"],"ce_context":[],"ce_members":[["toStrictVar",{"fe_kind":["Function"],"fe_type":["Func",[["Var","v"]],["Var","v"],[]],"fe_representation":"toStrictVar :: !v -> v"}]],"ce_instances":[{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",65],["Just",71],""]]},{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",64],["Just",65],""]]}]},["Bin",21,["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",21],["Just",33],"space"],{"ce_vars":["s"],"ce_context":[],"ce_members":[["space",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Type","Bool",[]],[]],"fe_representation":"space :: !s -> Bool"}]],"ce_instances":[{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",23],["Just",35],""]]}]},["Bin",11,["Location","Platform","Text.HTML",["Just",416],["Just",580],"html"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["html",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","HtmlTag",[]],[]],"fe_representation":"html :: !a -> HtmlTag"}]],"ce_instances":[{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",423],["Just",597],""]]},{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",422],["Just",592],""]]},{"ie_types":[[["Type","HtmlTag",[]],"HtmlTag"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",421],["Just",588],""]]},{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",420],["Just",584],""]]},{"ie_types":[[["Type","URL",[]],"URL"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",13],["Just",32],""]]},{"ie_types":[[["Type","PhoneNumber",[]],"PhoneNumber"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",13],["Just",33],""]]},{"ie_types":[[["Type","EmailAddress",[]],"EmailAddress"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",8],["Just",17],""]]}]},["Bin",7,["Location","Platform","StdArrayExtensions",["Just",42],["Just",41],"accArrElt"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["accArrElt",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","e"]],["Type","_Tuple2",[["Var","x"],["Var","e"]]],[]],["Type","Int",[]],["Uniq",["Cons","a",[["Var","e"]]]]],["Type","_Tuple2",[["Var","x"],["Uniq",["Cons","a",[["Var","e"]]]]]],[]],"fe_representation":"accArrElt :: !(.e -> (!.x,!.e)) !Int !*(a .e) -> (!.x,!*(a .e))"}]],"ce_instances":[{"ie_types":[[["Type","_!Array",[]],"{!}"]],"ie_locations":[["Location","Platform","StdArrayExtensions",["Just",48],["Just",50],""]]},{"ie_types":[[["Type","_Array",[]],"{}"]],"ie_locations":[["Location","Platform","StdArrayExtensions",["Just",47],["Just",43],""]]}]},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",167],["Nothing"],"\/"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["\/",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","n"]],["Type","Span",[]],[]],"fe_priority":["LeftAssoc",7],"fe_representation":"(\/) infixl 7 :: !a !n -> Span"}]],"ce_instances":[{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",19],["Just",47],""],["Location","Platform","Graphics.Scalable.Internal",["Just",176],["Just",119],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",15],["Just",44],""],["Location","Platform","Graphics.Scalable.Internal",["Just",176],["Just",122],""]]},{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",177],["Just",18],""],["Location","Platform","Graphics.Scalable.Internal",["Just",176],["Just",18],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",23],["Just",31],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",21],["Just",80],""]]}]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",166],["Nothing"],"*."],{"ce_vars":["a"],"ce_context":[],"ce_members":[["*.",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","n"]],["Type","Span",[]],[]],"fe_priority":["LeftAssoc",7],"fe_representation":"(*.) infixl 7 :: !a !n -> Span"}]],"ce_instances":[{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",174],["Just",104],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",174],["Just",107],""]]},{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",174],["Just",110],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","StdArrayExtensions",["Just",36],["Just",27],"updateArrElt"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["updateArrElt",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","e"]],["Var","e"],[]],["Type","Int",[]],["Uniq",["Cons","a",[["Var","e"]]]]],["Uniq",["Cons","a",[["Var","e"]]]],[]],"fe_representation":"updateArrElt :: !(.e -> .e) !Int !*(a .e) -> *(a .e)"}]],"ce_instances":[{"ie_types":[[["Type","_!Array",[]],"{!}"]],"ie_locations":[["Location","Platform","StdArrayExtensions",["Just",40],["Just",35],""]]},{"ie_types":[[["Type","_Array",[]],"{}"]],"ie_locations":[["Location","Platform","StdArrayExtensions",["Just",39],["Just",29],""]]}]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","System.Process",["Just",117],["Nothing"],"closePipe"],{"ce_vars":["a"],"ce_context":[],"ce_documentation":["ClassDoc",["Just","closes an individual IO channel"],[],[["Nothing"]]],"ce_members":[["closePipe",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Uniq",["Type","World",[]]]],["Type","_Tuple2",[["Type","MaybeOSError",[["Type","_Unit",[]]]],["Uniq",["Type","World",[]]]]],[]],"fe_representation":"closePipe :: !a !*World -> (!MaybeOSError (),!*World)"}]],"ce_instances":[{"ie_types":[[["Type","ReadPipe",[]],"ReadPipe"]],"ie_locations":[["Location","Platform","System.Process",["Just",120],["Just",320],""]]},{"ie_types":[[["Type","WritePipe",[]],"WritePipe"]],"ie_locations":[["Location","Platform","System.Process",["Just",119],["Just",315],""]]}]},["Bin",1,["Location","Platform","StdLibMisc",["Just",15],["Just",21],"gMap"],{"ce_vars":["c"],"ce_context":[],"ce_members":[["gMap",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Var","a"]],["Var","b"],[]],["Cons","c",[["Var","a"]]]],["Cons","c",[["Var","b"]]],[]],"fe_representation":"gMap :: (a -> b) !(c a) -> c b"}]],"ce_instances":[{"ie_types":[[["Type","_!Array",[]],"{!}"]],"ie_locations":[["Location","Platform","StdLibMisc",["Just",19],["Just",31],""]]},{"ie_types":[[["Type","_Array",[]],"{}"]],"ie_locations":[["Location","Platform","StdLibMisc",["Just",18],["Just",27],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","StdLibMisc",["Just",17],["Just",23],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text",["Just",12],["Nothing"],"Text"],{"ce_vars":["s"],"ce_context":[],"ce_members":[["textSize",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Type","Int",[]],[]],"fe_representation":"textSize :: !s -> Int"}],["concat",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","s"]]]],["Var","s"],[]],"fe_representation":"concat :: ![s] -> s"}],["split",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Var","s"]],["Type","_List",[["Var","s"]]],[]],"fe_representation":"split :: !s !s -> [s]"}],["join",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Type","_List",[["Var","s"]]]],["Var","s"],[]],"fe_representation":"join :: !s ![s] -> s"}],["indexOf",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Var","s"]],["Type","Int",[]],[]],"fe_representation":"indexOf :: !s !s -> Int"}],["lastIndexOf",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Var","s"]],["Type","Int",[]],[]],"fe_representation":"lastIndexOf :: !s !s -> Int"}],["indexOfAfter",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","s"],["Var","s"]],["Type","Int",[]],[]],"fe_representation":"indexOfAfter :: !Int !s !s -> Int"}],["startsWith",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Var","s"]],["Type","Bool",[]],[]],"fe_representation":"startsWith :: !s !s -> Bool"}],["endsWith",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Var","s"]],["Type","Bool",[]],[]],"fe_representation":"endsWith :: !s !s -> Bool"}],["subString",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Type","Int",[]],["Var","s"]],["Var","s"],[]],"fe_representation":"subString :: !Int !Int !s -> s"}],["replaceSubString",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Var","s"],["Var","s"]],["Var","s"],[]],"fe_representation":"replaceSubString :: !s !s !s -> s"}],["trim",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Var","s"],[]],"fe_representation":"trim :: !s -> s"}],["ltrim",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Var","s"],[]],"fe_representation":"ltrim :: !s -> s"}],["rtrim",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Var","s"],[]],"fe_representation":"rtrim :: !s -> s"}],["lpad",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Type","Int",[]],["Type","Char",[]]],["Var","s"],[]],"fe_representation":"lpad :: !s !Int !Char -> s"}],["rpad",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Type","Int",[]],["Type","Char",[]]],["Var","s"],[]],"fe_representation":"rpad :: !s !Int !Char -> s"}],["toLowerCase",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Var","s"],[]],"fe_representation":"toLowerCase :: !s -> s"}],["toUpperCase",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Var","s"],[]],"fe_representation":"toUpperCase :: !s -> s"}],["upperCaseFirst",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Var","s"],[]],"fe_representation":"upperCaseFirst :: !s -> s"}],["dropChars",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","s"]],["Var","s"],[]],"fe_representation":"dropChars :: !Int !s -> s"}]],"ce_instances":[{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Text",["Just",149],["Just",5],""]]}]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",56],["Just",163],"isWhite"],{"ce_vars":["s"],"ce_context":[],"ce_members":[["isWhite",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"]],["Type","Bool",[]],[]],"fe_representation":"isWhite :: !s -> Bool"}]],"ce_instances":[{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",57],["Just",164],""]]}]},["Bin",1,["Location","Platform","Text.PPrint",["Just",37],["Just",224],"Pretty"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["pretty",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Doc",[]],[]],"fe_representation":"pretty :: a -> Doc"}]],"ce_instances":[{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",56],["Just",259],""]]},{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",54],["Just",255],""]]},{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",52],["Just",251],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",50],["Just",247],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",48],["Just",243],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",46],["Just",239],""]]},{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",44],["Just",235],""]]},{"ie_types":[[["Type","Doc",[]],"Doc"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",42],["Just",231],""]]},{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",40],["Just",227],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.MetarDemo.MetarParser",["Just",10],["Just",307],"report"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["report",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[]],"fe_representation":"report :: a -> String"}]],"ce_instances":[{"ie_types":[[["Type","MetarData",[]],"MetarData"]],"ie_locations":[["Location","Platform","Text.Parsers.MetarDemo.MetarParser",["Just",12],["Just",309],""]]}]},["Tip"],["Tip"]]]],["Bin",9,["Location","Platform","Text.Unicode",["Just",15],["Nothing"],"toUnicode"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toUnicode",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","UString",[]],[]],"fe_representation":"toUnicode :: a -> UString"}]],"ce_instances":[{"ie_types":[[["Type","JSLit",[]],"JSLit"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.JS",["Just",10],["Just",20],""]]},{"ie_types":[[["Type","UTF8",[]],"UTF8"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.UTF8",["Just",21],["Just",16],""]]}]},["Bin",5,["Location","Platform","Text.Show",["Just",59],["Just",62],"Show"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["showsPrec",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","a"]],["Type","ShowS",[]],[]],"fe_representation":"showsPrec :: Int a -> ShowS"}],["show",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[]],"fe_representation":"show :: a -> String"}],["showList",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_List",[["Var","a"]]]],["Type","ShowS",[]],[]],"fe_representation":"showList :: [a] -> ShowS"}]],"ce_instances":[{"ie_types":[[["Type","_Tuple12",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"],["Var","i"],["Var","j"],["Var","k"],["Var","l"]]],"(a,b,c,d,e,f,g,h,i,j,k,l)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",122],["Just",206],""]]},{"ie_types":[[["Type","_Tuple11",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"],["Var","i"],["Var","j"],["Var","k"]]],"(a,b,c,d,e,f,g,h,i,j,k)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",121],["Just",200],""]]},{"ie_types":[[["Type","_Tuple10",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"],["Var","i"],["Var","j"]]],"(a,b,c,d,e,f,g,h,i,j)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",120],["Just",194],""]]},{"ie_types":[[["Type","_Tuple9",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"],["Var","i"]]],"(a,b,c,d,e,f,g,h,i)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",119],["Just",188],""]]},{"ie_types":[[["Type","_Tuple8",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"]]],"(a,b,c,d,e,f,g,h)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",118],["Just",183],""]]},{"ie_types":[[["Type","_Tuple7",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"]]],"(a,b,c,d,e,f,g)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",117],["Just",178],""]]},{"ie_types":[[["Type","_Tuple6",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"]]],"(a,b,c,d,e,f)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",116],["Just",173],""]]},{"ie_types":[[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]],"(a,b,c,d,e)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",115],["Just",168],""]]},{"ie_types":[[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]],"(a,b,c,d)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",114],["Just",163],""]]},{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",113],["Just",158],""]]},{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",112],["Just",153],""]]},{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",100],["Just",137],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Text.Show",["Just",99],["Just",132],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Text.Show",["Just",98],["Just",125],""]]},{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","Platform","Text.Show",["Just",97],["Just",120],""]]},{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Text.Show",["Just",96],["Just",115],""]]},{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","Platform","Text.Show",["Just",95],["Just",110],""]]}]},["Bin",2,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",29],["Nothing"],"Splittable"],{"ce_vars":["f"],"ce_context":[],"ce_members":[["getNonPure",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]]],["Type","Maybe",[["Cons","f",[["Var","a"]]]]],[]],"fe_representation":"getNonPure :: (f a) -> Maybe (f a)"}],["getPure",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Var","a"]]]],["Type","Maybe",[["Var","a"]]],[]],"fe_representation":"getPure :: (f a) -> Maybe a"}]],"ce_instances":[{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",33],["Just",116],""]]}]},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",130],["Just",285],"Orr"],{"ce_vars":["c"],"ce_context":[],"ce_members":[["<-!>",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","c",[["Var","s"],["Var","r"],["Var","u"],["Var","t"]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]],"fe_priority":["RightAssoc",4],"fe_representation":"(<-!>) infixr 4 :: !(c s r u t) (Parser s t r) -> Parser s t r"}]],"ce_instances":[{"ie_types":[[["Type","ArrowSeq",[]],"ArrowSeq"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",137],["Just",296],""]]},{"ie_types":[[["Type","MonadicSeq",[]],"MonadicSeq"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",134],["Just",291],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.Unicode",["Just",14],["Nothing"],"fromUnicode"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["fromUnicode",{"fe_kind":["Function"],"fe_type":["Func",[["Type","UString",[]]],["Var","a"],[]],"fe_representation":"fromUnicode :: UString -> a"}]],"ce_instances":[{"ie_types":[[["Type","JSLit",[]],"JSLit"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.JS",["Just",9],["Just",15],""]]},{"ie_types":[[["Type","UTF8",[]],"UTF8"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.UTF8",["Just",20],["Just",11],""]]}]},["Bin",1,["Location","Platform","Text.StringAppender",["Just",51],["Nothing"],"Appendable"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["<++",{"fe_kind":["Function"],"fe_type":["Func",[["Type","StringAppender",[]],["Var","a"]],["Type","StringAppender",[]],[]],"fe_priority":["LeftAssoc",1],"fe_representation":"(<++) infixl 1 :: StringAppender a -> StringAppender"}]],"ce_instances":[{"ie_types":[[["Func",[["Type","StringAppender",[]]],["Type","StringAppender",[]],[]],"(StringAppender -> StringAppender)"]],"ie_locations":[["Location","Platform","Text.StringAppender",["Just",58],["Just",60],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","Platform","Text.StringAppender",["Just",57],["Just",56],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Text.StringAppender",["Just",56],["Just",52],""]]},{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Text.StringAppender",["Just",55],["Just",48],""]]}]},["Tip"],["Tip"]],["Tip"]]],["Bin",3,["Location","Sapl","Sapl.SaplStruct",["Just",53],["Nothing"],"isStrictVar"],{"ce_vars":["v"],"ce_context":[],"ce_members":[["isStrictVar",{"fe_kind":["Function"],"fe_type":["Func",[["Var","v"]],["Type","Bool",[]],[]],"fe_representation":"isStrictVar :: !v -> Bool"}]],"ce_instances":[{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",61],["Just",49],""]]},{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",60],["Just",43],""]]}]},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",52],["Nothing"],"eqStrictVar"],{"ce_vars":["v"],"ce_context":[],"ce_members":[["eqStrictVar",{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Var","v"]],["Type","Bool",[]],[]],"fe_representation":"eqStrictVar :: !String !v -> Bool"}]],"ce_instances":[{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",59],["Just",38],""]]},{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",58],["Just",32],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",54],["Nothing"],"toNormalVar"],{"ce_vars":["v"],"ce_context":[],"ce_members":[["toNormalVar",{"fe_kind":["Function"],"fe_type":["Func",[["Var","v"]],["Var","v"],[]],"fe_representation":"toNormalVar :: !v -> v"}]],"ce_instances":[{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",63],["Just",60],""]]},{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",62],["Just",54],""]]}]},["Tip"],["Tip"]]]]],["Bin",40,["Location","StdEnv","StdOverloaded",["Just",34],["Just",35],"mod"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["mod",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_priority":["NoAssoc",7],"fe_representation":"(mod) infix 7 :: !a !a -> a"}]],"ce_instances":[]},["Bin",28,["Location","StdEnv","StdOverloaded",["Just",15],["Just",14],"one"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["one",{"fe_kind":["Function"],"fe_type":["Func",[],["Var","a"],[]],"fe_representation":"one :: a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",24],["Nothing"],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",13],["Just",46],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",13],["Just",37],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",16],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",20],["Nothing"],""]]}]},["Bin",16,["Location","StdEnv","StdFile",["Just",44],["Just",467],"FileEnv"],{"ce_vars":["env"],"ce_context":[],"ce_members":[["accFiles",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","Files",[]]]],["Type","_Tuple2",[["Var","x"],["Uniq",["Type","Files",[]]]]],[]],["Uniq",["Var","env"]]],["Type","_Tuple2",[["Var","x"],["Uniq",["Var","env"]]]],[]],"fe_representation":"accFiles :: !.(*Files -> (.x,*Files)) !*env -> (!.x,!*env)"}],["appFiles",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Uniq",["Type","Files",[]]]],["Uniq",["Type","Files",[]]],[]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"appFiles :: !.(*Files -> *Files) !*env -> *env"}]],"ce_instances":[{"ie_types":[[["Type","World",[]],"World"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",48],["Just",471],""]]}]},["Bin",10,["Location","StdEnv","StdClass",["Just",19],["Just",19],"Arith"],{"ce_vars":["a"],"ce_context":[[["Class","PlusMin"],["Var","a"]],[["Class","MultDiv"],["Var","a"]],[["Class","abs"],["Var","a"]],[["Class","sign"],["Var","a"]],[["Class","~"],["Var","a"]]],"ce_members":[],"ce_instances":[]},["Bin",4,["Location","Sapl","Sapl.Transform.AddSelectors",["Just",5],["Nothing"],"addSelectors"],{"ce_vars":["t"],"ce_context":[],"ce_members":[["addSelectors",{"fe_kind":["Function"],"fe_type":["Func",[["Var","t"]],["Var","t"],[]],"fe_representation":"addSelectors :: !t -> t"}]],"ce_instances":[{"ie_types":[[["Type","SaplTerm",[]],"SaplTerm"]],"ie_locations":[["Location","Sapl","Sapl.Transform.AddSelectors",["Just",7],["Just",8],""]]}]},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",56],["Nothing"],"unpackVar"],{"ce_vars":["v"],"ce_context":[],"ce_members":[["unpackVar",{"fe_kind":["Function"],"fe_type":["Func",[["Var","v"]],["Type","String",[]],[]],"fe_representation":"unpackVar :: !v -> String"}]],"ce_instances":[{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",67],["Just",82],""]]},{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",66],["Just",76],""]]}]},["Tip"],["Tip"]],["Bin",2,["Location","StdEnv","StdClass",["Just",17],["Just",17],"MultDiv"],{"ce_vars":["a"],"ce_context":[[["Class","*"],["Var","a"]],[["Class","\/"],["Var","a"]],[["Class","one"],["Var","a"]]],"ce_members":[],"ce_instances":[]},["Bin",1,["Location","StdEnv","StdClass",["Just",15],["Just",15],"PlusMin"],{"ce_vars":["a"],"ce_context":[[["Class","+"],["Var","a"]],[["Class","-"],["Var","a"]],[["Class","zero"],["Var","a"]]],"ce_members":[],"ce_instances":[]},["Tip"],["Tip"]],["Tip"]]],["Bin",5,["Location","StdEnv","StdClass",["Just",31],["Just",31],"Eq"],{"ce_vars":["a"],"ce_context":[[["Class","=="],["Var","a"]]],"ce_members":[["<>",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[[["Class","Eq"],["Var","a"]]]],"fe_priority":["NoAssoc",4],"fe_representation":"(<>) infix 4 :: !a !a -> Bool | Eq a\n(<>) x y :== not (x == y)"}]],"ce_instances":[]},["Bin",2,["Location","StdEnv","StdClass",["Just",21],["Just",21],"IncDec"],{"ce_vars":["a"],"ce_context":[[["Class","+"],["Var","a"]],[["Class","-"],["Var","a"]],[["Class","one"],["Var","a"]],[["Class","zero"],["Var","a"]]],"ce_members":[["inc",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[[["Class","+"],["Var","a"]],[["Class","one"],["Var","a"]]]],"fe_representation":"inc :: !a -> a | + a & one a\ninc x :== x + one"}],["dec",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[[["Class","-"],["Var","a"]],[["Class","one"],["Var","a"]]]],"fe_representation":"dec :: !a -> a | - a & one a\ndec x :== x - one"}]],"ce_instances":[]},["Tip"],["Bin",1,["Location","StdEnv","StdClass",["Just",29],["Just",29],"Enum"],{"ce_vars":["a"],"ce_context":[[["Class","<"],["Var","a"]],[["Class","IncDec"],["Var","a"]]],"ce_members":[],"ce_instances":[]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdClass",["Just",36],["Just",36],"Ord"],{"ce_vars":["a"],"ce_context":[[["Class","<"],["Var","a"]]],"ce_members":[[">",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[[["Class","Ord"],["Var","a"]]]],"fe_priority":["NoAssoc",4],"fe_representation":"(>) infix 4 :: !a !a -> Bool | Ord a\n(>) x y :== y < x"}],["<=",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[[["Class","Ord"],["Var","a"]]]],"fe_priority":["NoAssoc",4],"fe_representation":"(<=) infix 4 :: !a !a -> Bool | Ord a\n(<=) x y :== not (y < x)"}],[">=",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[[["Class","Ord"],["Var","a"]]]],"fe_priority":["NoAssoc",4],"fe_representation":"(>=) infix 4 :: !a !a -> Bool | Ord a\n(>=) x y :== not (x < y)"}],["min",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"min :: !a !a -> a | Ord a\nmin x y :== case (x < y) of\n\tTrue = x\n\t_ = y"}],["max",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[[["Class","Ord"],["Var","a"]]]],"fe_representation":"max :: !a !a -> a | Ord a\nmax x y :== case (x < y) of\n\tTrue = y\n\t_ = x"}]],"ce_instances":[]},["Tip"],["Bin",1,["Location","StdEnv","StdFile",["Just",27],["Just",29],"FileSystem"],{"ce_vars":["f"],"ce_context":[],"ce_members":[["fopen",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]],["Uniq",["Var","f"]]],["Type","_Tuple3",[["Type","Bool",[]],["Uniq",["Type","File",[]]],["Uniq",["Var","f"]]]],[]],"fe_representation":"fopen :: !{#Char} !Int !*f -> (!Bool,!*File,!*f)"}],["fclose",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]],["Uniq",["Var","f"]]],["Type","_Tuple2",[["Type","Bool",[]],["Uniq",["Var","f"]]]],[]],"fe_representation":"fclose :: !*File !*f -> (!Bool,!*f)"}],["stdio",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","f"]]],["Type","_Tuple2",[["Uniq",["Type","File",[]]],["Uniq",["Var","f"]]]],[]],"fe_representation":"stdio :: !*f -> (!*File,!*f)"}],["sfopen",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]],["Type","Int",[]],["Uniq",["Var","f"]]],["Type","_Tuple3",[["Type","Bool",[]],["Type","File",[]],["Uniq",["Var","f"]]]],[]],"fe_representation":"sfopen :: !{#Char} !Int !*f -> (!Bool,!File,!*f)"}]],"ce_instances":[{"ie_types":[[["Type","IWorld",[]],"IWorld"]],"ie_locations":[["Location","iTasks","iTasks.Internal.IWorld",["Just",189],["Just",203],""]]},{"ie_types":[[["Type","World",[]],"World"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",42],["Just",64],""]]},{"ie_types":[[["Type","Files",[]],"Files"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",41],["Just",42],""]]}]},["Tip"],["Tip"]]]]],["Bin",5,["Location","StdEnv","StdOverloaded",["Just",10],["Just",9],"-"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["-",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"(-) infixl 6 :: !a !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",171],["Just",91],""]]},{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",21],["Just",45],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",19],["Just",23],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",16],["Just",58],""]]},{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",10],["Just",56],""]]},{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",10],["Just",22],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",11],["Just",19],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",11],["Just",20],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",13],["Just",23],""]]}]},["Bin",2,["Location","StdEnv","StdFile",["Just",112],["Just",416],"<<<"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["<<<",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Type","File",[]]],["Var","a"]],["Uniq",["Type","File",[]]],[]],"fe_priority":["LeftAssoc",9],"fe_representation":"(<<<) infixl 9 :: !*File !a -> *File"}]],"ce_instances":[{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","Platform","Text.JSON",["Just",35],["Just",156],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",118],["Just",452],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",117],["Just",444],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",116],["Just",431],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",115],["Just",418],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",8],["Just",8],"+"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["+",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_priority":["LeftAssoc",6],"fe_representation":"(+) infixl 6 :: !a !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Text",["Just",150],["Just",162],""]]},{"ie_types":[[["Type","ImageOffset",[]],"ImageOffset"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",112],["Just",479],""]]},{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",170],["Just",64],""]]},{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",20],["Just",40],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",17],["Just",20],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",10],["Just",35],""]]},{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",9],["Just",52],""]]},{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",9],["Just",18],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",10],["Just",10],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",10],["Just",12],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",11],["Just",15],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdOverloaded",["Just",11],["Just",10],"zero"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["zero",{"fe_kind":["Function"],"fe_type":["Func",[],["Var","a"],[]],"fe_representation":"zero :: a"}]],"ce_instances":[{"ie_types":[[["Type","RGB",[]],"RGB"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",99],["Just",445],""]]},{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",169],["Just",52],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",20],["Just",26],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",12],["Just",43],""]]},{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",14],["Just",72],""]]},{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",14],["Just",38],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",12],["Just",28],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",12],["Just",28],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",15],["Just",31],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",13],["Just",12],"*"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["*",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_priority":["LeftAssoc",7],"fe_representation":"(*) infixl 7 :: !a !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",175],["Just",31],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",22],["Just",28],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",11],["Just",39],""]]},{"ie_types":[[["Type","Matrix",[["Var","a"]]],"(Matrix a)"]],"ie_locations":[["Location","Platform","Data.Matrix",["Just",8],["Just",5],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",14],["Just",36],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",17],["Just",39],""]]}]},["Tip"],["Tip"]]]]],["Bin",11,["Location","StdEnv","StdOverloaded",["Just",25],["Just",31],"%"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["%",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]]],["Var","a"],[]],"fe_priority":["LeftAssoc",9],"fe_representation":"(%) infixl 9 :: !a !(!Int,!Int) -> a"}]],"ce_instances":[{"ie_types":[[["Type","UString",[]],"UString"]],"ie_locations":[["Location","Platform","Text.Unicode",["Just",11],["Just",10],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",25],["Just",83],""]]},{"ie_types":[[["Type","_#List!",[["Var","e"]]],"[#e!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",46],["Just",187],""]]},{"ie_types":[[["Type","_#List",[["Var","e"]]],"[#e]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",44],["Just",182],""]]},{"ie_types":[[["Type","_!List!",[["Var","a"]]],"[!a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",43],["Just",177],""]]},{"ie_types":[[["Type","_List!",[["Var","a"]]],"[a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",42],["Just",172],""]]},{"ie_types":[[["Type","_!List",[["Var","a"]]],"[!a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",41],["Just",167],""]]},{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",24],["Just",54],""]]}]},["Bin",5,["Location","StdEnv","StdOverloaded",["Just",19],["Just",25],"isEven"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["isEven",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Bool",[]],[]],"fe_representation":"isEven :: !a -> Bool"}]],"ce_instances":[{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",30],["Nothing"],""]]}]},["Bin",2,["Location","StdEnv","StdOverloaded",["Just",17],["Just",23],"=="],{"ce_vars":["a"],"ce_context":[],"ce_members":[["==",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[]],"fe_priority":["NoAssoc",4],"fe_representation":"(==) infix 4 :: !a !a -> Bool"}]],"ce_instances":[{"ie_types":[[["Type","FontDef",[]],"FontDef"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",114],["Just",483],""]]},{"ie_types":[[["Type","ImageTag",[]],"ImageTag"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",103],["Just",448],""]]},{"ie_types":[[["Type","ImageAttr",[["Var","m"]]],"(ImageAttr m)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",84],["Just",440],""]]},{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","Platform","Text.JSON",["Just",160],["Just",747],""]]},{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",7],["Just",295],""]]},{"ie_types":[[["Type","SugPosition",[]],"SugPosition"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",21],["Just",80],""]]},{"ie_types":[[["Type","Timestamp",[]],"Timestamp"]],"ie_locations":[["Location","Platform","System.Time",["Just",42],["Just",10],""]]},{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",18],["Just",30],""]]},{"ie_types":[[["Type","SQLTime",[]],"SQLTime"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",168],["Just",68],""]]},{"ie_types":[[["Type","SQLDate",[]],"SQLDate"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",168],["Just",63],""]]},{"ie_types":[[["Type","SQLValue",[]],"SQLValue"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",168],["Just",44],""]]},{"ie_types":[[["Type","DirType",[]],"DirType"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",424],["Just",138],""]]},{"ie_types":[[["Type","ArrowType",[]],"ArrowType"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",413],["Just",140],""]]},{"ie_types":[[["Type","Color",[]],"Color"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",383],["Just",141],""]]},{"ie_types":[[["Type","EdgeStyle",[]],"EdgeStyle"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",366],["Just",136],""]]},{"ie_types":[[["Type","NodeStyle",[]],"NodeStyle"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",355],["Just",137],""]]},{"ie_types":[[["Type","NodeShape",[]],"NodeShape"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",341],["Just",139],""]]},{"ie_types":[[["Type","Map",[["Var","k"],["Var","a"]]],"(Map k a)"]],"ie_locations":[["Location","Platform","Data.Map",["Just",37],["Just",1934],""]]},{"ie_types":[[["Type","Set",[["Var","a"]]],"(Set a)"]],"ie_locations":[["Location","Platform","Data.Set",["Just",49],["Just",20],""]]},{"ie_types":[[["Type","Heap",[["Var","a"]]],"(Heap a)"]],"ie_locations":[["Location","Platform","Data.Heap",["Just",24],["Just",35],""]]},{"ie_types":[[["Type","Maybe",[["Var","x"]]],"(Maybe x)"]],"ie_locations":[["Location","Platform","Data.Maybe",["Just",18],["Just",13],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",26],["Nothing"],""]]},{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",13],["Just",19],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",26],["Nothing"],""]]},{"ie_types":[[["Type","IntMap",[["Var","a"]]],"(IntMap a)"]],"ie_locations":[["Location","Platform","Data.IntMap.Base",["Just",19],["Just",1529],""]]},{"ie_types":[[["Type","NodeMap",[["Var","a"]]],"(NodeMap a)"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",13],["Just",22],""]]},{"ie_types":[[["Type","GroupEdges",[["Var","b"]]],"(GroupEdges b)"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.Graph",["Just",338],["Just",392],""]]},{"ie_types":[[["Type","LPath",[["Var","a"]]],"(LPath a)"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.Graph",["Just",33],["Just",25],""]]},{"ie_types":[[["Type","ByteSeq",[]],"ByteSeq"]],"ie_locations":[["Location","TCPIP","TCPDef",["Just",29],["Just",23],""]]},{"ie_types":[[["Type","TimeoutReport",[]],"TimeoutReport"]],"ie_locations":[["Location","TCPIP","TCPChannelClass",["Just",124],["Just",78],""]]},{"ie_types":[[["Type","SelectResult",[]],"SelectResult"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",112],["Just",483],""]]},{"ie_types":[[["Type","Document",[]],"Document"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",20],["Just",34],""]]},{"ie_types":[[["Type","Password",[]],"Password"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",52],["Just",110],""]]},{"ie_types":[[["Type","Username",[]],"Username"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",52],["Just",85],""]]},{"ie_types":[[["Type","User",[]],"User"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",15],["Just",28],""]]},{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",11],["Just",60],""]]},{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",11],["Just",26],""]]},{"ie_types":[[["Type","DateTime",[]],"DateTime"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",48],["Just",139],""]]},{"ie_types":[[["Type","Time",[]],"Time"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",48],["Just",91],""]]},{"ie_types":[[["Type","Date",[]],"Date"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",48],["Just",50],""]]},{"ie_types":[[["Type","Extension",[]],"Extension"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",36],["Just",6],""]]},{"ie_types":[[["Type","DBRef",[["Var","a"]]],"(DBRef a)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",27],["Nothing"],""]]},{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",72],["Just",40],""]]},{"ie_types":[[["Type","TLit",[]],"TLit"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",20],["Just",55],""]]},{"ie_types":[[["Type","TPriority",[]],"TPriority"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",19],["Just",50],""]]},{"ie_types":[[["Type","TAssoc",[]],"TAssoc"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",18],["Just",44],""]]},{"ie_types":[[["Type","TExpr",[]],"TExpr"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",17],["Just",28],""]]},{"ie_types":[[["Type","TonicFunc",[]],"TonicFunc"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",16],["Just",20],""]]},{"ie_types":[[["Type","TonicModule",[]],"TonicModule"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",15],["Just",16],""]]},{"ie_types":[[["Type","TypeCodeConstructor",[]],"TypeCodeConstructor"]],"ie_locations":[["Location","Dynamics","_SystemDynamic",["Just",84],["Just",634],""]]},{"ie_types":[[["Type","TypeCode",[]],"TypeCode"]],"ie_locations":[["Location","Dynamics","_SystemDynamic",["Just",23],["Just",167],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",10],["Just",10],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",15],["Just",46],""]]},{"ie_types":[[["Type","_#List!",[["Var","a"]]],"[#a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",11],["Just",49],""]]},{"ie_types":[[["Type","_#List",[["Var","a"]]],"[#a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",8],["Just",38],""]]},{"ie_types":[[["Type","_!List!",[["Var","a"]]],"[!a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",7],["Just",27],""]]},{"ie_types":[[["Type","_List!",[["Var","a"]]],"[a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",6],["Just",16],""]]},{"ie_types":[[["Type","_!List",[["Var","a"]]],"[!a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",5],["Just",5],""]]},{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","StdBool",["Just",10],["Just",10],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",23],["Nothing"],""]]},{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","StdEnv","StdTuple",["Just",23],["Just",29],""]]},{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","StdEnv","StdTuple",["Just",22],["Just",24],""]]},{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",13],["Just",14],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",28],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",18],["Just",24],"<"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["<",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Type","Bool",[]],[]],"fe_priority":["NoAssoc",4],"fe_representation":"(<) infix 4 :: !a !a -> Bool"}]],"ce_instances":[{"ie_types":[[["Type","FontDef",[]],"FontDef"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",115],["Just",487],""]]},{"ie_types":[[["Type","ImageTag",[]],"ImageTag"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",104],["Just",451],""]]},{"ie_types":[[["Type","ImageAttr",[["Var","m"]]],"(ImageAttr m)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",83],["Just",439],""]]},{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",8],["Just",301],""]]},{"ie_types":[[["Type","Timestamp",[]],"Timestamp"]],"ie_locations":[["Location","Platform","System.Time",["Just",43],["Just",14],""]]},{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",19],["Just",35],""]]},{"ie_types":[[["Type","Set",[["Var","a"]]],"(Set a)"]],"ie_locations":[["Location","Platform","Data.Set",["Just",51],["Just",24],""]]},{"ie_types":[[["Type","Heap",[["Var","a"]]],"(Heap a)"]],"ie_locations":[["Location","Platform","Data.Heap",["Just",26],["Just",45],""]]},{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",14],["Just",23],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",27],["Nothing"],""]]},{"ie_types":[[["Type","LPath",[["Var","a"]]],"(LPath a)"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.Graph",["Just",34],["Just",30],""]]},{"ie_types":[[["Type","Password",[]],"Password"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",53],["Just",114],""]]},{"ie_types":[[["Type","Username",[]],"Username"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",53],["Just",89],""]]},{"ie_types":[[["Type","User",[]],"User"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",16],["Just",35],""]]},{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",12],["Just",64],""]]},{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",12],["Just",30],""]]},{"ie_types":[[["Type","DateTime",[]],"DateTime"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",49],["Just",144],""]]},{"ie_types":[[["Type","Time",[]],"Time"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",49],["Just",95],""]]},{"ie_types":[[["Type","Date",[]],"Date"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",49],["Just",54],""]]},{"ie_types":[[["Type","DBRef",[["Var","a"]]],"(DBRef a)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",28],["Nothing"],""]]},{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",73],["Just",44],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",11],["Just",20],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",16],["Just",54],""]]},{"ie_types":[[["Type","_#List!",[["Var","a"]]],"[#a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",21],["Just",120],""]]},{"ie_types":[[["Type","_#List",[["Var","a"]]],"[#a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",18],["Just",105],""]]},{"ie_types":[[["Type","_!List!",[["Var","a"]]],"[!a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",17],["Just",90],""]]},{"ie_types":[[["Type","_List!",[["Var","a"]]],"[a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",16],["Just",75],""]]},{"ie_types":[[["Type","_!List",[["Var","a"]]],"[!a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",15],["Just",60],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",25],["Nothing"],""]]},{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","StdEnv","StdTuple",["Just",26],["Just",45],""]]},{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","StdEnv","StdTuple",["Just",25],["Just",34],""]]},{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",18],["Just",29],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",29],["Nothing"],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdOverloaded",["Just",20],["Just",26],"isOdd"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["isOdd",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Bool",[]],[]],"fe_representation":"isOdd :: !a -> Bool"}]],"ce_instances":[{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",31],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",22],["Just",28],"length"],{"ce_vars":["m"],"ce_context":[],"ce_members":[["length",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]]],["Type","Int",[]],[]],"fe_representation":"length :: !(m a) -> Int"}]],"ce_instances":[{"ie_types":[[["Type","Stack",[]],"Stack"]],"ie_locations":[["Location","Platform","Data.Stack",["Just",13],["Just",8],""]]},{"ie_types":[[["Type","Queue",[]],"Queue"]],"ie_locations":[["Location","Platform","Data.Queue",["Just",25],["Just",12],""]]},{"ie_types":[[["Type","_!List!",[]],"[!!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",27],["Just",149],""]]},{"ie_types":[[["Type","_List!",[]],"[ !]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",26],["Just",142],""]]},{"ie_types":[[["Type","_!List",[]],"[!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",25],["Just",135],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",23],["Just",46],""]]}]},["Tip"],["Tip"]]]],["Bin",5,["Location","StdEnv","StdOverloaded",["Just",30],["Just",19],"abs"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["abs",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"abs :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",172],["Just",55],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",28],["Nothing"],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",18],["Just",62],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",19],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",24],["Nothing"],""]]}]},["Bin",2,["Location","StdEnv","StdOverloaded",["Just",27],["Just",33],"+++"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["+++",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_priority":["RightAssoc",5],"fe_representation":"(+++) infixr 5 :: !a !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","UString",[]],"UString"]],"ie_locations":[["Location","Platform","Text.Unicode",["Just",12],["Just",14],""]]},{"ie_types":[[["Cons","arr",[["Var","a"]]],"(arr a)"]],"ie_locations":[["Location","Platform","Data.Array",["Just",30],["Just",114],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",27],["Just",93],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",29],["Just",16],"^"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["^",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_priority":["RightAssoc",8],"fe_representation":"(^) infixr 8 :: !a !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",18],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",23],["Nothing"],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdOverloaded",["Just",31],["Just",20],"sign"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["sign",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Int",[]],[]],"fe_representation":"sign :: !a -> Int"}]],"ce_instances":[{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",22],["Just",50],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",19],["Just",73],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",20],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",25],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",32],["Just",21],"~"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["~",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"~ :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",173],["Just",62],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",29],["Nothing"],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",15],["Just",50],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",21],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",26],["Nothing"],""]]}]},["Tip"],["Tip"]]]]]],["Bin",11,["Location","StdEnv","StdOverloaded",["Just",41],["Just",42],"toBool"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toBool",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Bool",[]],[]],"fe_representation":"toBool :: !a -> Bool"}]],"ce_instances":[{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","StdBool",["Just",12],["Just",18],""]]}]},["Bin",5,["Location","StdEnv","StdOverloaded",["Just",37],["Just",38],"lcm"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["lcm",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_representation":"lcm :: !a !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",47],["Nothing"],""]]}]},["Bin",2,["Location","StdEnv","StdOverloaded",["Just",35],["Just",36],"rem"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["rem",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_priority":["NoAssoc",7],"fe_representation":"(rem) infix 7 :: !a !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",22],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",45],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",36],["Just",37],"gcd"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["gcd",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Var","a"]],["Var","a"],[]],"fe_representation":"gcd :: !a !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",46],["Nothing"],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdOverloaded",["Just",39],["Just",40],"toInt"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toInt",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Int",[]],[]],"fe_representation":"toInt :: !a -> Int"}]],"ce_instances":[{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",15],["Just",323],""]]},{"ie_types":[[["Type","IPAddress",[]],"IPAddress"]],"ie_locations":[["Location","Platform","Network.IP",["Just",21],["Just",32],""]]},{"ie_types":[[["Type","Timestamp",[]],"Timestamp"]],"ie_locations":[["Location","Platform","System.Time",["Just",44],["Just",37],""]]},{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",9],["Just",15],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",32],["Just",9],""]]},{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",13],["Just",68],""]]},{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",13],["Just",34],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",36],["Just",263],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",35],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",34],["Nothing"],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",33],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",40],["Just",41],"toChar"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toChar",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Char",[]],[]],"fe_representation":"toChar :: !a -> Char"}]],"ce_instances":[{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",14],["Just",317],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",31],["Just",6],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",19],["Just",70],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",18],["Just",62],""]]}]},["Tip"],["Tip"]]]],["Bin",5,["Location","StdEnv","StdOverloaded",["Just",45],["Just",46],"fromInt"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["fromInt",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Var","a"],[]],"fe_representation":"fromInt :: !Int -> a"}]],"ce_instances":[{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",10],["Just",307],""]]},{"ie_types":[[["Type","IPAddress",[]],"IPAddress"]],"ie_locations":[["Location","Platform","Network.IP",["Just",22],["Just",36],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",31],["Nothing"],""]]},{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",8],["Just",11],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",41],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",40],["Nothing"],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",39],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",38],["Nothing"],""]]}]},["Bin",2,["Location","StdEnv","StdOverloaded",["Just",42],["Just",43],"toReal"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toReal",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Real",[]],[]],"fe_representation":"toReal :: !a -> Real"}]],"ce_instances":[{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",29],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",28],["Nothing"],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",27],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",43],["Just",44],"toString"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toString",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_#Array",[["Type","Char",[]]]],[]],"fe_representation":"toString :: !a -> {#Char}"}]],"ce_instances":[{"ie_types":[[["Type","SVGZoomAndPan",[]],"SVGZoomAndPan"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",411],["Just",904],""]]},{"ie_types":[[["Type","SVGTransform",[]],"SVGTransform"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",410],["Just",894],""]]},{"ie_types":[[["Type","SVGStrokeWidth",[]],"SVGStrokeWidth"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",409],["Just",876],""]]},{"ie_types":[[["Type","SVGStrokeDashOffset",[]],"SVGStrokeDashOffset"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",408],["Just",868],""]]},{"ie_types":[[["Type","SVGStrokeDashArray",[]],"SVGStrokeDashArray"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",407],["Just",859],""]]},{"ie_types":[[["Type","SVGPaint",[]],"SVGPaint"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",406],["Just",843],""]]},{"ie_types":[[["Type","SVGStrokeMiterLimit",[]],"SVGStrokeMiterLimit"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",405],["Just",824],""]]},{"ie_types":[[["Type","SVGMeetOrSlice",[]],"SVGMeetOrSlice"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",404],["Just",816],""]]},{"ie_types":[[["Type","SVGLineJoin",[]],"SVGLineJoin"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",403],["Just",806],""]]},{"ie_types":[[["Type","SVGLineCap",[]],"SVGLineCap"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",402],["Just",796],""]]},{"ie_types":[[["Type","SVGLengthUnit",[]],"SVGLengthUnit"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",401],["Just",779],""]]},{"ie_types":[[["Type","SVGLengthAdjust",[]],"SVGLengthAdjust"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",400],["Just",771],""]]},{"ie_types":[[["Type","SVGLength",[]],"SVGLength"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",399],["Just",764],""]]},{"ie_types":[[["Type","SVGFuncIRI",[]],"SVGFuncIRI"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",398],["Just",758],""]]},{"ie_types":[[["Type","SVGFillRule",[]],"SVGFillRule"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",397],["Just",750],""]]},{"ie_types":[[["Type","SVGFillOpacity",[]],"SVGFillOpacity"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",396],["Just",743],""]]},{"ie_types":[[["Type","SVGICCColor",[]],"SVGICCColor"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",395],["Just",736],""]]},{"ie_types":[[["Type","SVGColor",[]],"SVGColor"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",394],["Just",729],""]]},{"ie_types":[[["Type","SVGAlign",[]],"SVGAlign"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",393],["Just",710],""]]},{"ie_types":[[["Type","SVGElt",[]],"SVGElt"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",392],["Just",606],""]]},{"ie_types":[[["Type","HtmlTag",[]],"HtmlTag"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",391],["Just",9],""]]},{"ie_types":[[["Type","StringAppender",[]],"StringAppender"]],"ie_locations":[["Location","Platform","Text.StringAppender",["Just",49],["Just",44],""]]},{"ie_types":[[["Type","URI",[]],"URI"]],"ie_locations":[["Location","Platform","Text.URI",["Just",30],["Just",25],""]]},{"ie_types":[[["Type","XMLDoc",[]],"XMLDoc"]],"ie_locations":[["Location","Platform","Text.XML",["Just",39],["Just",129],""]]},{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","Platform","Text.JSON",["Just",26],["Just",7],""]]},{"ie_types":[[["Type","JSLit",[]],"JSLit"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.JS",["Just",13],["Just",30],""]]},{"ie_types":[[["Type","UTF8",[]],"UTF8"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.UTF8",["Just",24],["Just",26],""]]},{"ie_types":[[["Type","SymbolType",[]],"SymbolType"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",50],["Just",108],""]]},{"ie_types":[[["Type","IPAddress",[]],"IPAddress"]],"ie_locations":[["Location","TCPIP","TCPDef",["Just",34],["Just",35],""],["Location","Platform","Network.IP",["Just",16],["Just",17],""]]},{"ie_types":[[["Type","MD5Digest",[]],"MD5Digest"]],"ie_locations":[["Location","Platform","Crypto.Hash.MD5",["Just",44],["Just",321],""]]},{"ie_types":[[["Type","SHA1Digest",[]],"SHA1Digest"]],"ie_locations":[["Location","Platform","Crypto.Hash.SHA1",["Just",46],["Just",98],""]]},{"ie_types":[[["Type","HTTPResponse",[]],"HTTPResponse"]],"ie_locations":[["Location","Platform","Internet.HTTP",["Just",80],["Just",95],""]]},{"ie_types":[[["Type","HTTPRequest",[]],"HTTPRequest"]],"ie_locations":[["Location","Platform","Internet.HTTP",["Just",79],["Just",87],""]]},{"ie_types":[[["Type","HTTPMethod",[]],"HTTPMethod"]],"ie_locations":[["Location","Platform","Internet.HTTP",["Just",18],["Just",57],""]]},{"ie_types":[[["Type","FileError",[]],"FileError"]],"ie_locations":[["Location","Platform","System.File",["Just",12],["Just",19],""]]},{"ie_types":[[["Type","Timestamp",[]],"Timestamp"]],"ie_locations":[["Location","Platform","System.Time",["Just",41],["Just",26],""]]},{"ie_types":[[["Type","Clock",[]],"Clock"]],"ie_locations":[["Location","Platform","System.Time",["Just",40],["Just",34],""]]},{"ie_types":[[["Type","Tm",[]],"Tm"]],"ie_locations":[["Location","Platform","System.Time",["Just",39],["Just",18],""]]},{"ie_types":[[["Type","Voice",[]],"Voice"]],"ie_locations":[["Location","Platform","System.TTS",["Just",15],["Just",16],""]]},{"ie_types":[[["Type","SQLError",[]],"SQLError"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",167],["Just",32],""]]},{"ie_types":[[["Type","SQLTime",[]],"SQLTime"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",167],["Just",28],""]]},{"ie_types":[[["Type","SQLDate",[]],"SQLDate"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",167],["Just",24],""]]},{"ie_types":[[["Type","SQLValue",[]],"SQLValue"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",167],["Just",6],""]]},{"ie_types":[[["Type","MappingError",[]],"MappingError"]],"ie_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",26],["Just",38],""]]},{"ie_types":[[["Type","DirType",[]],"DirType"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",423],["Just",19],""]]},{"ie_types":[[["Type","ArrowType",[]],"ArrowType"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",412],["Just",36],""]]},{"ie_types":[[["Type","Color",[]],"Color"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",382],["Just",38],""]]},{"ie_types":[[["Type","EdgeStyle",[]],"EdgeStyle"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",365],["Just",17],""]]},{"ie_types":[[["Type","NodeStyle",[]],"NodeStyle"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",354],["Just",18],""]]},{"ie_types":[[["Type","NodeShape",[]],"NodeShape"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",340],["Just",20],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",34],["Nothing"],""]]},{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",34],["Just",17],""]]},{"ie_types":[[["Type","ByteSeq",[]],"ByteSeq"]],"ie_locations":[["Location","TCPIP","TCPDef",["Just",28],["Just",18],""]]},{"ie_types":[[["Type","TimeoutReport",[]],"TimeoutReport"]],"ie_locations":[["Location","TCPIP","TCPChannelClass",["Just",125],["Just",87],""]]},{"ie_types":[[["Type","SelectResult",[]],"SelectResult"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",113],["Just",494],""]]},{"ie_types":[[["Type","FileException",[]],"FileException"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",21],["Just",38],""]]},{"ie_types":[[["Type","Document",[]],"Document"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",19],["Just",30],""]]},{"ie_types":[[["Type","Password",[]],"Password"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",51],["Just",106],""]]},{"ie_types":[[["Type","Username",[]],"Username"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",51],["Just",81],""]]},{"ie_types":[[["Type","UserConstraint",[]],"UserConstraint"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",24],["Just",65],""]]},{"ie_types":[[["Type","User",[]],"User"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",14],["Just",22],""]]},{"ie_types":[[["Type","CallException",[]],"CallException"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Process",["Just",18],["Just",29],""]]},{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",8],["Just",48],""]]},{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",8],["Just",14],""]]},{"ie_types":[[["Type","JSONParseException",[]],"JSONParseException"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.JSONFile",["Just",8],["Just",7],""]]},{"ie_types":[[["Type","DateTime",[]],"DateTime"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",39],["Just",116],""]]},{"ie_types":[[["Type","Time",[]],"Time"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",39],["Just",76],""]]},{"ie_types":[[["Type","Date",[]],"Date"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",39],["Just",35],""]]},{"ie_types":[[["Type","URL",[]],"URL"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",12],["Just",28],""]]},{"ie_types":[[["Type","PhoneNumber",[]],"PhoneNumber"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",12],["Just",29],""]]},{"ie_types":[[["Type","EmailAddress",[]],"EmailAddress"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",7],["Just",13],""]]},{"ie_types":[[["Type","Extension",[]],"Extension"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",35],["Just",8],""]]},{"ie_types":[[["Type","ShipIconColor",[]],"ShipIconColor"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",15],["Just",12],""]]},{"ie_types":[[["Type","EditMode",[]],"EditMode"]],"ie_locations":[["Location","iTasks","iTasks.UI.Editor",["Just",65],["Just",15],""]]},{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",70],["Just",30],""]]},{"ie_types":[[["Type","AttachException",[]],"AttachException"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Core",["Just",80],["Just",62],""]]},{"ie_types":[[["Type","OSException",[]],"OSException"]],"ie_locations":[["Location","iTasks","iTasks.WF.Tasks.Core",["Just",82],["Just",51],""]]},{"ie_types":[[["Type","SharedException",[]],"SharedException"]],"ie_locations":[["Location","iTasks","iTasks.WF.Tasks.SDS",["Just",19],["Just",13],""]]},{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Util",["Just",16],["Just",48],""]]},{"ie_types":[[["Type","StoreReadError",[]],"StoreReadError"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Store",["Just",43],["Just",31],""]]},{"ie_types":[[["Type","Token",[]],"Token"]],"ie_locations":[["Location","Sapl","Sapl.SaplTokenizer",["Just",36],["Just",215],""]]},{"ie_types":[[["Type","Literal",[]],"Literal"]],"ie_locations":[["Location","Sapl","Sapl.SaplTokenizer",["Just",35],["Just",206],""]]},{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",42],["Just",22],""]]},{"ie_types":[[["Type","LineType",[]],"LineType"]],"ie_locations":[["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",40],["Just",15],""]]},{"ie_types":[[["Type","TypeCodeConstructor",[]],"TypeCodeConstructor"]],"ie_locations":[["Location","Dynamics","_SystemDynamic",["Just",83],["Just",652],""]]},{"ie_types":[[["Type","TypeCode",[]],"TypeCode"]],"ie_locations":[["Location","Dynamics","_SystemDynamic",["Just",22],["Just",66],""]]},{"ie_types":[[["Type","CTCons",[]],"CTCons"]],"ie_locations":[["Location","Dynamics","StdCleanTypes",["Just",39],["Just",31],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",23],["Just",67],""]]},{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","StdString",["Just",21],["Just",57],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdString",["Just",19],["Just",48],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdString",["Just",17],["Just",41],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdString",["Just",15],["Just",32],""]]},{"ie_types":[[["Type","_#List!",[["Var","x"]]],"[#x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",54],["Just",223],""]]},{"ie_types":[[["Type","_#List",[["Var","x"]]],"[#x]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",52],["Just",216],""]]},{"ie_types":[[["Type","_!List!",[["Var","x"]]],"[!x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",51],["Just",208],""]]},{"ie_types":[[["Type","_List!",[["Var","x"]]],"[x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",50],["Just",200],""]]},{"ie_types":[[["Type","_!List",[["Var","x"]]],"[!x]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",49],["Just",192],""]]},{"ie_types":[[["Type","_List",[["Var","x"]]],"[x]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",26],["Just",59],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdOverloaded",["Just",46],["Just",47],"fromChar"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["fromChar",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Char",[]]],["Var","a"],[]],"fe_representation":"fromChar :: !Char -> a"}]],"ce_instances":[{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",11],["Just",311],""]]},{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",11],["Just",7],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",23],["Just",87],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",22],["Just",95],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",21],["Just",78],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",47],["Just",48],"fromBool"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["fromBool",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]]],["Var","a"],[]],"fe_representation":"fromBool :: !Bool -> a"}]],"ce_instances":[{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdBool",["Just",15],["Just",45],""]]},{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","StdBool",["Just",14],["Just",37],""]]}]},["Tip"],["Tip"]]]]]]],["Bin",52,["Location","TCPIP","TCPChannels",["Just",130],["Just",311],"SelectSend"],{"ce_vars":["channels"],"ce_context":[],"ce_members":[["accSChannels",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","TCP_SChannel",[]]],["Uniq",["Type","_Tuple2",[["Var","x"],["Type","TCP_SChannel",[]]]]],[]],["Uniq",["Var","channels"]]],["Type","_Tuple2",[["Type","_List",[["Var","x"]]],["Uniq",["Var","channels"]]]],[]],"fe_representation":"accSChannels :: (TCP_SChannel -> *(.x,TCP_SChannel)) !*channels -> (![.x],!*channels)"}],["appDisconnected",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Var","channels"]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","Bool",[]],["Uniq",["Var","channels"]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"appDisconnected :: !Int !*channels !*env -> (!Bool,!*channels,!*env) | ChannelEnv env"}]],"ce_instances":[{"ie_types":[[["Type","StringSChannels",[]],"StringSChannels"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",53],["Just",149],""]]},{"ie_types":[[["Type","TCP_Void",[]],"TCP_Void"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",152],["Just",361],""]]},{"ie_types":[[["Type","TCP_SCharStreams",[]],"TCP_SCharStreams"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",152],["Just",345],""]]},{"ie_types":[[["Type","TCP_SChannels",[]],"TCP_SChannels"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",152],["Just",335],""]]},{"ie_types":[[["Type","TCP_Pair",[["Uniq",["Var","x"]],["Uniq",["Var","y"]]]],"(TCP_Pair *x *y)"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",153],["Just",321],""]]}]},["Bin",26,["Location","StdEnv","StdOverloaded",["Just",64],["Just",63],"sinh"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["sinh",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"sinh :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",46],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",50],["Nothing"],""]]}]},["Bin",11,["Location","StdEnv","StdOverloaded",["Just",58],["Just",57],"sin"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["sin",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"sin :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",40],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",44],["Nothing"],""]]}]},["Bin",5,["Location","StdEnv","StdOverloaded",["Just",52],["Just",53],"log10"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["log10",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"log10 :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",38],["Nothing"],""]]}]},["Bin",2,["Location","StdEnv","StdOverloaded",["Just",49],["Just",50],"fromString"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["fromString",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#Array",[["Type","Char",[]]]]],["Var","a"],[]],"fe_representation":"fromString :: !{#Char} -> a"}]],"ce_instances":[{"ie_types":[[["Type","UString",[]],"UString"]],"ie_locations":[["Location","Platform","Text.Unicode",["Just",9],["Just",6],""]]},{"ie_types":[[["Type","MaybeErrorString",[["Type","XMLDoc",[]]]],"(MaybeErrorString XMLDoc)"]],"ie_locations":[["Location","Platform","Text.XML",["Just",40],["Just",137],""]]},{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","Platform","Text.JSON",["Just",30],["Just",179],""]]},{"ie_types":[[["Type","JSLit",[]],"JSLit"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.JS",["Just",12],["Just",25],""]]},{"ie_types":[[["Type","UTF8",[]],"UTF8"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.UTF8",["Just",23],["Just",21],""]]},{"ie_types":[[["Type","IPAddress",[]],"IPAddress"]],"ie_locations":[["Location","Platform","Network.IP",["Just",17],["Just",26],""]]},{"ie_types":[[["Type","HTTPMethod",[]],"HTTPMethod"]],"ie_locations":[["Location","Platform","Internet.HTTP",["Just",19],["Just",69],""]]},{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",33],["Nothing"],""]]},{"ie_types":[[["Type","DateTime",[]],"DateTime"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",45],["Just",135],""]]},{"ie_types":[[["Type","Time",[]],"Time"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",45],["Just",87],""]]},{"ie_types":[[["Type","Date",[]],"Date"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",45],["Just",46],""]]},{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",71],["Just",34],""]]},{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",13],["Just",75],""]]},{"ie_types":[[["Type","_#List!",[["Var","x"]]],"[#x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",62],["Just",270],""]]},{"ie_types":[[["Type","_#List",[["Var","x"]]],"[#x]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",60],["Just",260],""]]},{"ie_types":[[["Type","_!List!",[["Var","x"]]],"[!x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",59],["Just",250],""]]},{"ie_types":[[["Type","_List!",[["Var","x"]]],"[x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",58],["Just",240],""]]},{"ie_types":[[["Type","_!List",[["Var","x"]]],"[!x]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",57],["Just",230],""]]},{"ie_types":[[["Type","_List",[["Var","x"]]],"[x]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",28],["Just",68],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",51],["Just",52],"ln"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["ln",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"ln :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",36],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",37],["Nothing"],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdOverloaded",["Just",53],["Just",54],"exp"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["exp",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"exp :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",37],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",39],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",54],["Just",55],"sqrt"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["sqrt",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"sqrt :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",38],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",40],["Nothing"],""]]}]},["Tip"],["Tip"]]]],["Bin",5,["Location","StdEnv","StdOverloaded",["Just",61],["Just",60],"asin"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["asin",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"asin :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",43],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",47],["Nothing"],""]]}]},["Bin",2,["Location","StdEnv","StdOverloaded",["Just",59],["Just",58],"cos"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["cos",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"cos :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",41],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",45],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",60],["Just",59],"tan"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["tan",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"tan :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",42],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",46],["Nothing"],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdOverloaded",["Just",62],["Just",61],"acos"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["acos",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"acos :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",44],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",48],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",63],["Just",62],"atan"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["atan",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"atan :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",45],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",49],["Nothing"],""]]}]},["Tip"],["Tip"]]]]],["Bin",14,["Location","StdEnv","_SystemArray",["Just",3],["Just",3],"Array"],{"ce_vars":["a","e"],"ce_context":[],"ce_members":[["select",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","e"]]],["Type","Int",[]]],["Var","e"],[]],"fe_representation":"select :: !.(a .e) !Int -> .e"}],["uselect",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","e"]]],["Type","Int",[]]],["Uniq",["Type","_Tuple2",[["Var","e"],["Cons","a",[["Var","e"]]]]]],[]],"fe_representation":"uselect :: !u:(a e) !Int -> *(e,!u:(a e))"}],["size",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","e"]]]],["Type","Int",[]],[]],"fe_representation":"size :: !.(a .e) -> Int"}],["usize",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","a",[["Var","e"]]]],["Uniq",["Type","_Tuple2",[["Type","Int",[]],["Cons","a",[["Var","e"]]]]]],[]],"fe_representation":"usize :: !u:(a .e) -> *(!Int,!u:(a .e))"}],["update",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","a",[["Var","e"]]]],["Type","Int",[]],["Var","e"]],["Uniq",["Cons","a",[["Var","e"]]]],[]],"fe_representation":"update :: !*(a .e) !Int .e -> *(a .e)"}],["createArray",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Var","e"]],["Uniq",["Cons","a",[["Var","e"]]]],[]],"fe_representation":"createArray :: !Int e -> *(a e)"}],["_createArray",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]]],["Uniq",["Cons","a",[["Var","e"]]]],[]],"fe_representation":"_createArray :: !Int -> *(a .e)"}],["replace",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","a",[["Var","e"]]]],["Type","Int",[]],["Var","e"]],["Uniq",["Type","_Tuple2",[["Var","e"],["Uniq",["Cons","a",[["Var","e"]]]]]]],[]],"fe_representation":"replace :: !*(a .e) !Int .e -> *(.e,!*(a .e))"}]],"ce_instances":[{"ie_types":[[["Type","_Array",[]],"{}"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",29],["Just",439],""]]},{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",25],["Just",321],""]]},{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","_Array",[["Var","a"]]],"{.a}"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",23],["Just",277],""]]},{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","_!Array",[["Var","a"]]],"{!.a}"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",22],["Just",233],""]]},{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","_#Array",[["Var","a"]]],"{#.a}"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",21],["Just",189],""]]},{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",19],["Just",145],""]]},{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",18],["Just",101],""]]},{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",17],["Just",57],""]]},{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",16],["Just",13],""]]},{"ie_types":[[["Type","_!Array",[]],"{!}"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",14],["Just",395],""]]}]},["Bin",5,["Location","StdEnv","StdOverloaded",["Just",67],["Just",66],"asinh"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["asinh",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"asinh :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",49],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",53],["Nothing"],""]]}]},["Bin",2,["Location","StdEnv","StdOverloaded",["Just",65],["Just",64],"cosh"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["cosh",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"cosh :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",47],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",51],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",66],["Just",65],"tanh"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["tanh",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"tanh :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",48],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",52],["Nothing"],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdOverloaded",["Just",68],["Just",67],"acosh"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["acosh",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"acosh :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",50],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",54],["Nothing"],""]]}]},["Tip"],["Bin",1,["Location","StdEnv","StdOverloaded",["Just",69],["Just",68],"atanh"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["atanh",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Var","a"],[]],"fe_representation":"atanh :: !a -> a"}]],"ce_instances":[{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",51],["Nothing"],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",55],["Nothing"],""]]}]},["Tip"],["Tip"]]]],["Bin",8,["Location","TCPIP","TCPChannelClass",["Just",56],["Just",37],"Send"],{"ce_vars":["ch"],"ce_context":[],"ce_members":[["send_MT",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Timeout",[]]]],["Var","a"],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple4",[["Type","TimeoutReport",[]],["Type","Int",[]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"send_MT :: !(Maybe Timeout) !.a !*(ch .a) !*env -> (!TimeoutReport,!Int,!*(ch .a),!*env) | ChannelEnv env"}],["nsend_MT",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Timeout",[]]]],["Type","_List",[["Var","a"]]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple4",[["Type","TimeoutReport",[]],["Type","Int",[]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"nsend_MT :: !(Maybe Timeout) ![.a] !*(ch .a) !*env -> (!TimeoutReport,!Int,!*(ch .a),!*env) | ChannelEnv env"}],["flushBuffer_MT",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Timeout",[]]]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple4",[["Type","TimeoutReport",[]],["Type","Int",[]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"flushBuffer_MT :: !(Maybe Timeout) !*(ch .a) !*env -> (!TimeoutReport,!Int,!*(ch .a),!*env) | ChannelEnv env"}],["closeChannel_MT",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Timeout",[]]]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","TimeoutReport",[]],["Type","Int",[]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"closeChannel_MT :: !(Maybe Timeout) !*(ch .a) !*env -> (!TimeoutReport,!Int,!*env) | ChannelEnv env"}],["abortConnection",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"abortConnection :: !*(ch .a) !*env -> *env | ChannelEnv env"}],["disconnected",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","Bool",[]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"disconnected :: !*(ch .a) !*env -> (!Bool,!*(ch .a),!*env) | ChannelEnv env"}],["bufferSize",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Cons","ch",[["Var","a"]]]]]],[]],"fe_representation":"bufferSize :: !*(ch .a) -> (!Int,!*(ch .a))"}]],"ce_instances":[{"ie_types":[[["Type","StringSChannel_",[]],"StringSChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",47],["Just",112],""]]},{"ie_types":[[["Type","TCP_SCharStream_",[]],"TCP_SCharStream_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",63],["Just",633],""]]},{"ie_types":[[["Type","TCP_SChannel_",[]],"TCP_SChannel_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",32],["Just",111],""]]}]},["Bin",5,["Location","TCPIP","TCPChannelClass",["Just",21],["Just",19],"Receive"],{"ce_vars":["ch"],"ce_context":[],"ce_members":[["receive_MT",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Maybe",[["Type","Timeout",[]]]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple4",[["Type","TimeoutReport",[]],["Type","Maybe",[["Var","a"]]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"receive_MT :: !(Maybe Timeout) !*(ch .a) !*env -> (!TimeoutReport,!Maybe .a,!*(ch .a),!*env) | ChannelEnv env"}],["receiveUpTo",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","_List",[["Var","a"]]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"receiveUpTo :: !Int !*(ch .a) !*env -> (![.a],!*(ch .a),!*env) | ChannelEnv env"}],["available",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","Bool",[]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"available :: !*(ch .a) !*env -> (!Bool,!*(ch .a),!*env) | ChannelEnv env"}],["eom",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","Bool",[]],["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"eom :: !*(ch .a) !*env -> (!Bool,!*(ch .a),!*env) | ChannelEnv env"}]],"ce_instances":[{"ie_types":[[["Type","StringRChannel_",[]],"StringRChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",32],["Just",16],""]]},{"ie_types":[[["Type","TCP_RCharStream_",[]],"TCP_RCharStream_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",51],["Just",577],""]]},{"ie_types":[[["Type","TCP_RChannel_",[]],"TCP_RChannel_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",38],["Just",67],""]]},{"ie_types":[[["Type","TCP_Listener_",[]],"TCP_Listener_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",22],["Just",12],""]]}]},["Bin",3,["Location","StdEnv","_SystemStrictLists",["Just",8],["Just",8],"UList"],{"ce_vars":["e"],"ce_context":[],"ce_members":[["_cons_u",{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"],["Type","_#List",[["Var","e"]]]],["Type","_#List",[["Var","e"]]],[]],"fe_representation":"_cons_u :: !.e u:[#.e] -> u:[#.e]"}],["_decons_u",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#List",[["Var","e"]]]],["Type","_Tuple2",[["Var","e"],["Type","_#List",[["Var","e"]]]]],[]],"fe_representation":"_decons_u :: !u:[#.e] -> (!.e,u:[#.e])"}]],"ce_instances":[{"ie_types":[[["Type","_#Array",[["Var","a"]]],"{#.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",39],["Just",152],""]]},{"ie_types":[[["Type","_!Array",[["Var","a"]]],"{!.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",38],["Just",142],""]]},{"ie_types":[[["Type","_Array",[["Var","a"]]],"{.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",37],["Just",132],""]]},{"ie_types":[[["Type","File",[]],"File"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",36],["Just",121],""]]},{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",35],["Just",110],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",34],["Just",99],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",33],["Just",88],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",32],["Just",77],""]]},{"ie_types":[[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",30],["Just",66],""]]}]},["Bin",1,["Location","StdEnv","_SystemStrictLists",["Just",3],["Just",3],"List"],{"ce_vars":["l","e"],"ce_context":[],"ce_members":[["_cons",{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"],["Cons","l",[["Var","e"]]]],["Cons","l",[["Var","e"]]],[]],"fe_representation":"_cons :: .e u:(l .e) -> u:(l .e)"}],["_decons",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","l",[["Var","e"]]]],["Type","_Tuple2",[["Var","e"],["Cons","l",[["Var","e"]]]]],[]],"fe_representation":"_decons :: !u:(l .e) -> (.e,u:(l .e))"}]],"ce_instances":[{"ie_types":[[["Type","_#List!",[]],"[#!]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",28],["Just",61],""]]},{"ie_types":[[["Type","_#List",[]],"[#]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",27],["Just",56],""]]},{"ie_types":[[["Type","_!List!",[]],"[!!]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",25],["Just",51],""]]},{"ie_types":[[["Type","_List!",[]],"[ !]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",24],["Just",46],""]]},{"ie_types":[[["Type","_!List",[]],"[!]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",23],["Just",41],""]]},{"ie_types":[[["Type","_List",[]],"[]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",22],["Just",36],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","_SystemStrictLists",["Just",13],["Just",13],"UTSList"],{"ce_vars":["e"],"ce_context":[],"ce_members":[["_cons_uts",{"fe_kind":["Function"],"fe_type":["Func",[["Var","e"],["Type","_#List!",[["Var","e"]]]],["Type","_#List!",[["Var","e"]]],[]],"fe_representation":"_cons_uts :: !.e !u:[#.e!] -> u:[#.e!]"}],["_decons_uts",{"fe_kind":["Function"],"fe_type":["Func",[["Type","_#List!",[["Var","e"]]]],["Type","_Tuple2",[["Var","e"],["Type","_#List!",[["Var","e"]]]]],[]],"fe_representation":"_decons_uts :: !u:[#.e!] -> (!.e,!u:[#.e!])"}]],"ce_instances":[{"ie_types":[[["Type","_#Array",[["Var","a"]]],"{#.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",50],["Just",248],""]]},{"ie_types":[[["Type","_!Array",[["Var","a"]]],"{!.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",49],["Just",238],""]]},{"ie_types":[[["Type","_Array",[["Var","a"]]],"{.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",48],["Just",228],""]]},{"ie_types":[[["Type","File",[]],"File"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",47],["Just",217],""]]},{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",46],["Just",206],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",45],["Just",195],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",44],["Just",184],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",43],["Just",173],""]]},{"ie_types":[[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",41],["Just",162],""]]}]},["Tip"],["Tip"]]],["Bin",1,["Location","TCPIP","TCPChannelClass",["Just",48],["Just",33],"closeRChannel"],{"ce_vars":["ch"],"ce_context":[],"ce_members":[["closeRChannel",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"closeRChannel :: !*(ch .a) !*env -> *env | ChannelEnv env"}]],"ce_instances":[{"ie_types":[[["Type","StringRChannel_",[]],"StringRChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",33],["Just",78],""]]},{"ie_types":[[["Type","TCP_RCharStream_",[]],"TCP_RCharStream_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",52],["Just",619],""]]},{"ie_types":[[["Type","TCP_RChannel_",[]],"TCP_RChannel_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",39],["Just",84],""]]},{"ie_types":[[["Type","TCP_Listener_",[]],"TCP_Listener_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",23],["Just",35],""]]}]},["Tip"],["Tip"]]],["Bin",2,["Location","TCPIP","TCPChannelClass",["Just",106],["Just",60],"MaxSize"],{"ce_vars":["ch"],"ce_context":[],"ce_members":[["setMaxSize",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Cons","ch",[["Var","a"]]]]],["Uniq",["Cons","ch",[["Var","a"]]]],[]],"fe_representation":"setMaxSize :: !Int !*(ch .a) -> *(ch .a)"}],["getMaxSize",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Cons","ch",[["Var","a"]]]]]],[]],"fe_representation":"getMaxSize :: !*(ch .a) -> (!Int,!*(ch .a))"}],["clearMaxSize",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Cons","ch",[["Var","a"]]]]],["Uniq",["Cons","ch",[["Var","a"]]]],[]],"fe_representation":"clearMaxSize :: !*(ch .a) -> *(ch .a)"}]],"ce_instances":[{"ie_types":[[["Type","StringRChannel_",[]],"StringRChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",34],["Just",84],""]]},{"ie_types":[[["Type","TCP_RChannel_",[]],"TCP_RChannel_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",40],["Just",239],""]]}]},["Tip"],["Bin",1,["Location","TCPIP","TCPChannels",["Just",117],["Just",304],"SelectReceive"],{"ce_vars":["channels"],"ce_context":[],"ce_members":[["accRChannels",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","PrimitiveRChannel",[]]],["Type","_Tuple2",[["Var","x"],["Type","PrimitiveRChannel",[]]]],[]],["Uniq",["Var","channels"]]],["Type","_Tuple2",[["Type","_List",[["Var","x"]]],["Uniq",["Var","channels"]]]],[]],"fe_representation":"accRChannels :: (PrimitiveRChannel -> (x,PrimitiveRChannel)) !*channels -> (![x],!*channels)"}],["getRState",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Int",[]],["Uniq",["Var","channels"]],["Uniq",["Var","env"]]],["Type","_Tuple3",[["Type","Maybe",[["Type","SelectResult",[]]]],["Uniq",["Var","channels"]],["Uniq",["Var","env"]]]],[[["Class","ChannelEnv"],["Var","env"]]]],"fe_representation":"getRState :: !Int !*channels !*env -> (!Maybe SelectResult,!*channels,!*env) | ChannelEnv env"}]],"ce_instances":[{"ie_types":[[["Type","StringRChannels",[]],"StringRChannels"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",54],["Just",165],""]]},{"ie_types":[[["Type","TCP_Void",[]],"TCP_Void"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",148],["Just",431],""]]},{"ie_types":[[["Type","TCP_RCharStreams",[]],"TCP_RCharStreams"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",148],["Just",415],""]]},{"ie_types":[[["Type","TCP_Listeners",[]],"TCP_Listeners"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",148],["Just",395],""]]},{"ie_types":[[["Type","TCP_RChannels",[]],"TCP_RChannels"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",148],["Just",382],""]]},{"ie_types":[[["Type","TCP_Pair",[["Uniq",["Var","x"]],["Uniq",["Var","y"]]]],"(TCP_Pair *x *y)"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",149],["Just",368],""]]}]},["Tip"],["Tip"]]]]]],["Bin",25,["Location","iTasks","iTasks.UI.Definition",["Just",240],["Just",213],"encodeUI"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["encodeUI",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","JSONNode",[]],[]],"fe_representation":"encodeUI :: a -> JSONNode"}]],"ce_instances":[{"ie_types":[[["Type","UIWindowType",[]],"UIWindowType"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",257],["Just",328],""]]},{"ie_types":[[["Type","UIDirection",[]],"UIDirection"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",256],["Just",323],""]]},{"ie_types":[[["Type","UIHAlign",[]],"UIHAlign"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",255],["Just",317],""]]},{"ie_types":[[["Type","UIVAlign",[]],"UIVAlign"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",254],["Just",311],""]]},{"ie_types":[[["Type","UIBound",[]],"UIBound"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",253],["Just",306],""]]},{"ie_types":[[["Type","UISize",[]],"UISize"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",252],["Just",300],""]]},{"ie_types":[[["Type","UISideSizes",[]],"UISideSizes"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",251],["Just",295],""]]},{"ie_types":[[["Type","UI",[]],"UI"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",250],["Just",235],""]]},{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",249],["Just",231],""]]},{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",248],["Just",226],""]]},{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",247],["Just",222],""]]},{"ie_types":[[["Type","HtmlTag",[]],"HtmlTag"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",246],["Just",220],""]]},{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",245],["Just",219],""]]},{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",244],["Just",218],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",243],["Just",217],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",242],["Just",216],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",241],["Just",215],""]]}]},["Bin",11,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",62],["Nothing"],"toWorkflow"],{"ce_vars":["w"],"ce_context":[],"ce_members":[["toWorkflow",{"fe_kind":["Function"],"fe_type":["Func",[["Type","String",[]],["Type","String",[]],["Type","_List",[["Type","Role",[]]]],["Type","Bool",[]],["Var","w"]],["Type","Workflow",[]],[]],"fe_representation":"toWorkflow :: String String [Role] Bool !w -> Workflow"}]],"ce_instances":[{"ie_types":[[["Type","ParamWorkflowContainer",[["Var","a"],["Var","b"]]],"(ParamWorkflowContainer a b)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",67],["Just",371],""]]},{"ie_types":[[["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]],"(a -> Task b)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",66],["Just",367],""]]},{"ie_types":[[["Type","WorkflowContainer",[["Var","a"]]],"(WorkflowContainer a)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",65],["Just",363],""]]},{"ie_types":[[["Type","Task",[["Var","a"]]],"(Task a)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",64],["Just",359],""]]}]},["Bin",3,["Location","TCPIP","TCPEvent",["Just",14],["Just",6],"accSChannel"],{"ce_vars":["ch"],"ce_context":[],"ce_members":[["accSChannel",{"fe_kind":["Function"],"fe_type":["Func",[["Func",[["Type","TCP_SChannel",[]]],["Type","_Tuple2",[["Var","x"],["Type","TCP_SChannel",[]]]],[]],["Uniq",["Cons","ch",[["Var","a"]]]]],["Type","_Tuple2",[["Var","x"],["Uniq",["Cons","ch",[["Var","a"]]]]]],[]],"fe_representation":"accSChannel :: (TCP_SChannel -> (x,TCP_SChannel)) *(ch .a) -> (x,*(ch .a))"}]],"ce_instances":[{"ie_types":[[["Type","StringSChannel_",[]],"StringSChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",50],["Just",142],""]]},{"ie_types":[[["Type","TCP_SCharStream_",[]],"TCP_SCharStream_"]],"ie_locations":[["Location","TCPIP","TCPEvent",["Just",21],["Just",13],""]]},{"ie_types":[[["Type","TCP_SChannel_",[]],"TCP_SChannel_"]],"ie_locations":[["Location","TCPIP","TCPEvent",["Just",20],["Just",8],""]]}]},["Bin",1,["Location","TCPIP","TCPChannels",["Just",143],["Just",318],"getNrOfChannels"],{"ce_vars":["channels"],"ce_context":[],"ce_members":[["getNrOfChannels",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","channels"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","channels"]]]],[]],"fe_representation":"getNrOfChannels :: !*channels -> (!Int,!*channels)"}]],"ce_instances":[{"ie_types":[[["Type","StringRChannels",[]],"StringRChannels"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",55],["Just",190],""]]},{"ie_types":[[["Type","TCP_Void",[]],"TCP_Void"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",478],""]]},{"ie_types":[[["Type","TCP_SCharStreams",[]],"TCP_SCharStreams"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",473],""]]},{"ie_types":[[["Type","TCP_SChannels",[]],"TCP_SChannels"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",468],""]]},{"ie_types":[[["Type","TCP_RCharStreams",[]],"TCP_RCharStreams"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",463],""]]},{"ie_types":[[["Type","TCP_Listeners",[]],"TCP_Listeners"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",458],""]]},{"ie_types":[[["Type","TCP_RChannels",[]],"TCP_RChannels"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",453],""]]},{"ie_types":[[["Type","TCP_Pair",[["Uniq",["Var","x"]],["Uniq",["Var","y"]]]],"(TCP_Pair *x *y)"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",158],["Just",447],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",12],["Just",6],"ChannelEnv"],{"ce_vars":["env"],"ce_context":[],"ce_members":[["channelEnvKind",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","env"]]]],[]],"fe_representation":"channelEnvKind :: !*env -> (!Int,!*env)"}],["mb_close_inet_receiver_without_id",{"fe_kind":["Function"],"fe_type":["Func",[["Type","Bool",[]],["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],["Uniq",["Var","env"]]],["Uniq",["Var","env"]],[]],"fe_representation":"mb_close_inet_receiver_without_id :: !Bool !(!Int,!Int) !*env -> *env"}],["channel_env_get_current_tick",{"fe_kind":["Function"],"fe_type":["Func",[["Uniq",["Var","env"]]],["Type","_Tuple2",[["Type","Int",[]],["Uniq",["Var","env"]]]],[]],"fe_representation":"channel_env_get_current_tick :: !*env -> (!Int,!*env)"}]],"ce_instances":[{"ie_types":[[["Type","World",[]],"World"]],"ie_locations":[["Location","TCPIP","TCPChannelClass",["Just",15],["Just",7],""]]}]},["Tip"],["Tip"]]],["Bin",7,["Location","iTasks","iTasks.Internal.Engine",["Just",83],["Just",266],"Runnable"],{"ce_vars":["a"],"ce_context":[],"ce_documentation":["ClassDoc",["Just","Start a stripped task engine (without an HTTP server) with a list of tasks to be created"],[],[["Nothing"]]],"ce_members":[["toRunnable",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_List",[["Type","TaskWrapper",[]]]],[]],"fe_representation":"toRunnable :: !a -> [TaskWrapper]"}]],"ce_instances":[{"ie_types":[[["Type","_List",[["Type","TaskWrapper",[]]]],"[TaskWrapper]"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Engine",["Just",88],["Just",274],""]]},{"ie_types":[[["Type","Task",[["Var","a"]]],"(Task a)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Engine",["Just",87],["Just",270],""]]}]},["Bin",3,["Location","iTasks","iTasks.Extensions.User",["Just",26],["Nothing"],"toUserConstraint"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toUserConstraint",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","UserConstraint",[]],[]],"fe_representation":"toUserConstraint :: !a -> UserConstraint"}],["toTitle",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","String",[]],[]],"fe_representation":"toTitle :: !a -> String"}]],"ce_instances":[{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",39],["Just",60],""]]},{"ie_types":[[["Type","UserId",[]],"UserId"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",33],["Just",54],""]]},{"ie_types":[[["Type","User",[]],"User"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",32],["Just",46],""]]},{"ie_types":[[["Type","UserConstraint",[]],"UserConstraint"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",31],["Just",41],""]]}]},["Bin",1,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",10],["Nothing"],"DB"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["databaseId",{"fe_kind":["Function"],"fe_type":["Func",[],["Type","Shared",[["Type","_List",[["Var","a"]]]]],[]],"fe_representation":"databaseId :: Shared [a]"}],["getItemId",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","DBRef",[["Var","a"]]],[]],"fe_representation":"getItemId :: !a -> DBRef a"}],["setItemId",{"fe_kind":["Function"],"fe_type":["Func",[["Type","DBRef",[["Var","a"]]],["Var","a"]],["Var","a"],[]],"fe_representation":"setItemId :: !(DBRef a) !a -> a"}]],"ce_instances":[]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",70],["Nothing"],"Publishable"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["publishAll",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_List",[["Type","PublishedTask",[]]]],[]],"fe_representation":"publishAll :: !a -> [PublishedTask]"}]],"ce_instances":[{"ie_types":[[["Type","_List",[["Type","PublishedTask",[]]]],"[PublishedTask]"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Engine",["Just",76],["Just",262],""]]},{"ie_types":[[["Func",[["Type","HTTPRequest",[]]],["Type","Task",[["Var","a"]]],[]],"(HTTPRequest -> Task a)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Engine",["Just",75],["Just",258],""]]},{"ie_types":[[["Type","Task",[["Var","a"]]],"(Task a)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Engine",["Just",74],["Just",254],""]]}]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.Tonic",["Just",30],["Nothing"],"TonicBlueprintPart"],{"ce_vars":["m"],"ce_context":[[["Class","TMonad"],["Var","m"]]],"ce_members":[["tonicWrapApp",{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","ExprId",[]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Func",[["Var","a"]],["Type","Int",[]],[]]]]]],["Cons","m",[["Var","a"]]]],["Cons","m",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicWrapApp :: !ModuleName !FuncName !ExprId [(ExprId,a -> Int)] (m a) -> m a | iTask a"}]],"ce_instances":[{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",43],["Just",109],""]]},{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",40],["Just",74],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",37],["Just",67],""]]},{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",34],["Just",60],""]]}]},["Bin",1,["Location","iTasks","iTasks.Internal.Tonic",["Just",26],["Nothing"],"TonicTopLevelBlueprint"],{"ce_vars":["m"],"ce_context":[[["Class","TonicBlueprintPart"],["Var","m"]]],"ce_members":[["tonicWrapBody",{"fe_kind":["Function"],"fe_type":["Func",[["Type","ModuleName",[]],["Type","FuncName",[]],["Type","_List",[["Type","_Tuple3",[["Type","VarName",[]],["Type","Int",[]],["Cons","m",[["Type","_Unit",[]]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","ExprId",[]],["Type","Int",[]]]]]],["Cons","m",[["Var","a"]]]],["Cons","m",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicWrapBody :: !ModuleName !FuncName [(VarName,Int,m ())] [(ExprId,Int)] (m a) -> m a | iTask a"}],["tonicWrapArg",{"fe_kind":["Function"],"fe_type":["Func",[["Type","VarName",[]],["Type","Int",[]],["Var","a"]],["Cons","m",[["Type","_Unit",[]]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"tonicWrapArg :: !VarName !Int a -> m () | iTask a"}]],"ce_instances":[{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",42],["Just",105],""]]},{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",39],["Just",70],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",36],["Just",63],""]]},{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",33],["Just",56],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",108],["Nothing"],"BlueprintLike"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["getComputationId",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","ComputationId",[]],[]],"fe_representation":"getComputationId :: a -> ComputationId"}],["getIdent",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","BlueprintIdent",[]],[]],"fe_representation":"getIdent :: a -> BlueprintIdent"}],["getBranches",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Map",[["Type","ExprId",[]],["Type","Int",[]]]],[]],"fe_representation":"getBranches :: a -> Map ExprId Int"}],["getActiveCompIds",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_List",[["Type","ComputationId",[]]]],[]],"fe_representation":"getActiveCompIds :: a -> [ComputationId]"}],["getActiveCompId",{"fe_kind":["Function"],"fe_type":["Func",[["Type","ExprId",[]],["Var","a"]],["Type","Maybe",[["Type","ComputationId",[]]]],[]],"fe_representation":"getActiveCompId :: ExprId a -> Maybe ComputationId"}],["getPreviouslyActive",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Map",[["Type","ExprId",[]],["Type","ComputationId",[]]]],[]],"fe_representation":"getPreviouslyActive :: a -> Map ExprId ComputationId"}],["getCurrentUser",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","Maybe",[["Type","String",[]]]],[]],"fe_representation":"getCurrentUser :: a -> Maybe String"}]],"ce_instances":[{"ie_types":[[["Type","GenBlueprintInstance",[]],"GenBlueprintInstance"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",122],["Just",37],""]]},{"ie_types":[[["Type","BlueprintInstance",[]],"BlueprintInstance"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",117],["Just",17],""]]}]},["Tip"],["Tip"]]]]],["Bin",13,["Location","iTasks","iTasks.UI.JS.Interface",["Just",144],["Just",235],"ToArgs"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toArgs",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","_List",[["Type","JSArg",[]]]],[]],"fe_representation":"toArgs :: !a -> [JSArg]"}]],"ce_instances":[{"ie_types":[[["Var","a"],"a"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",175],["Just",280],""]]},{"ie_types":[[["Type","_Tuple6",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"]]],"(a,b,c,d,e,f)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",173],["Just",277],""]]},{"ie_types":[[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]],"(a,b,c,d,e)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",171],["Just",274],""]]},{"ie_types":[[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]],"(a,b,c,d)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",169],["Just",271],""]]},{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",167],["Just",268],""]]},{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",165],["Just",265],""]]},{"ie_types":[[["Type","_List",[["Type","JSArg",[]]]],"[JSArg]"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",163],["Just",262],""]]},{"ie_types":[[["Type","JSVal",[["Var","a"]]],"(JSVal a)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",161],["Just",256],""]]},{"ie_types":[[["Type","JSArg",[]],"JSArg"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",159],["Just",259],""]]},{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",157],["Just",253],""]]},{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",155],["Just",250],""]]},{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",153],["Just",247],""]]},{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",151],["Just",244],""]]},{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",149],["Just",241],""]]},{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",147],["Just",238],""]]}]},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",65],["Just",110],".#"],{"ce_vars":["s"],"ce_context":[],"ce_members":[[".#",{"fe_kind":["Function"],"fe_type":["Func",[["Var","s"],["Var","t"]],["Type","JSObjSelector",[]],[[["Class","JSObjAttr"],["Var","t"]]]],"fe_priority":["LeftAssoc",3],"fe_representation":"(.#) infixl 3 :: !s !t -> JSObjSelector | JSObjAttr t"}]],"ce_instances":[{"ie_types":[[["Type","JSObjSelector",[]],"JSObjSelector"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",67],["Just",115],""]]},{"ie_types":[[["Type","JSVal",[["Var","o"]]],"(JSVal o)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",66],["Just",112],""]]}]},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",56],["Just",72],"JSObjAttr"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["jsSetter",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","JSVal",[["Var","v"]]],["Type","JSObj",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","JSWorld",[]]],[]],"fe_representation":"jsSetter :: !a !(JSVal v) !(JSObj o) !*JSWorld -> *JSWorld"}],["jsGetter",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"],["Type","JSObj",[["Var","o"]]],["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","b"]]],["Uniq",["Type","JSWorld",[]]]]]],[]],"fe_representation":"jsGetter :: !a !(JSObj o) !*JSWorld -> *(!JSVal b,!*JSWorld)"}]],"ce_instances":[{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",61],["Just",80],""]]},{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",60],["Just",76],""]]}]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",74],["Just",127],".$"],{"ce_vars":["o"],"ce_context":[],"ce_members":[[".$",{"fe_kind":["Function"],"fe_type":["Func",[["Var","o"],["Var","a"]],["Uniq",["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","JSVal",[["Var","r"]]],["Uniq",["Type","JSWorld",[]]]]]],[]]],[[["Class","ToArgs"],["Var","a"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(.$) infixl 1 :: !o !a -> *(*JSWorld -> *(!JSVal r,!*JSWorld)) | ToArgs a"}]],"ce_instances":[{"ie_types":[[["Type","JSObjSelector",[]],"JSObjSelector"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",76],["Just",132],""]]},{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",75],["Just",129],""]]}]},["Tip"],["Tip"]]],["Bin",9,["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",12],["Just",20],"tunev"],{"ce_vars":["b","a"],"ce_context":[[["Class","iTask"],["Var","a"]]],"ce_members":[["tunev",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","b",[["Var","a"]]],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[]],"fe_representation":"tunev :: !(b a) !(Task a) -> Task a"}]],"ce_instances":[]},["Bin",4,["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",13],["Nothing"],"TMonad"],{"ce_vars":["m"],"ce_context":[[["Class","TApplicative"],["Var","m"]]],"ce_members":[[">>=",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]],["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]]],["Cons","m",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>>=) infixl 1 :: (m a) (a -> m b) -> m b | iTask a & iTask b"}],[">>|",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","m",[["Var","a"]]],["Cons","m",[["Var","b"]]]],["Cons","m",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",1],"fe_representation":"(>>|) infixl 1 :: (m a) (m b) -> m b | iTask a & iTask b"}]],"ce_instances":[{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",28],["Just",42],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",25],["Just",33],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",22],["Just",25],""]]},{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",19],["Just",17],""]]},{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",46],["Just",221],""]]}]},["Bin",2,["Location","iTasks","iTasks.UI.Prompt",["Just",7],["Nothing"],"toPrompt"],{"ce_vars":["d"],"ce_context":[],"ce_members":[["toPrompt",{"fe_kind":["Function"],"fe_type":["Func",[["Var","d"]],["Type","UI",[]],[]],"fe_representation":"toPrompt :: !d -> UI"}]],"ce_instances":[{"ie_types":[[["Type","_List",[["Var","d"]]],"[d]"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",30],["Just",60],""]]},{"ie_types":[[["Type","Att",[]],"Att"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",29],["Just",56],""]]},{"ie_types":[[["Type","Icon",[]],"Icon"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",27],["Just",52],""]]},{"ie_types":[[["Type","Hint",[]],"Hint"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",26],["Just",48],""]]},{"ie_types":[[["Type","Label",[]],"Label"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",25],["Just",44],""]]},{"ie_types":[[["Type","Title",[]],"Title"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",24],["Just",40],""]]},{"ie_types":[[["Type","_Tuple3",[["Type","Icon",[]],["Type","String",[]],["Type","String",[]]]],"(!Icon,!String,!String)"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",23],["Just",32],""]]},{"ie_types":[[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]],"(!String,!String)"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",11],["Just",17],""]]},{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",10],["Just",14],""]]},{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",9],["Just",11],""]]}]},["Tip"],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",9],["Nothing"],"TApplicative"],{"ce_vars":["f"],"ce_context":[[["Class","Functor"],["Var","f"]]],"ce_members":[["<#>",{"fe_kind":["Function"],"fe_type":["Func",[["Cons","f",[["Func",[["Var","a"]],["Var","b"],[]]]],["Cons","f",[["Var","a"]]]],["Cons","f",[["Var","b"]]],[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]],"fe_priority":["LeftAssoc",9],"fe_representation":"(<#>) infixl 9 :: (f (a -> b)) (f a) -> f b | iTask a & iTask b"}],["return",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Cons","f",[["Var","a"]]],[[["Class","iTask"],["Var","a"]]]],"fe_representation":"return :: a -> f a | iTask a"}]],"ce_instances":[{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",27],["Just",37],""]]},{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",24],["Just",30],""]]},{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",21],["Just",21],""]]},{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",18],["Just",13],""]]},{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",45],["Just",217],""]]}]},["Tip"],["Tip"]]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",11],["Just",19],"tune"],{"ce_vars":["b"],"ce_context":[],"ce_documentation":["ClassDoc",["Just","Fine tune a task by specifying custom layouts, tweaking generic layouts,\nor add additional titles, hints and descriptions"],[],[["Nothing"]]],"ce_members":[["tune",{"fe_kind":["Function"],"fe_type":["Func",[["Var","b"],["Type","Task",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[]],"fe_representation":"tune :: !b !(Task a) -> Task a"}]],"ce_instances":[{"ie_types":[[["Type","Icon",[]],"Icon"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",102],["Just",160],""]]},{"ie_types":[[["Type","Label",[]],"Label"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",101],["Just",164],""]]},{"ie_types":[[["Type","Title",[]],"Title"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",100],["Just",156],""]]},{"ie_types":[[["Type","NoUserInterface",[]],"NoUserInterface"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",93],["Just",150],""]]},{"ie_types":[[["Type","InContainer",[]],"InContainer"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",90],["Just",146],""]]},{"ie_types":[[["Type","InPanel",[]],"InPanel"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",87],["Just",142],""]]},{"ie_types":[[["Type","ToWindow",[]],"ToWindow"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",84],["Just",138],""]]},{"ie_types":[[["Type","ArrangeHorizontal",[]],"ArrangeHorizontal"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",71],["Just",134],""]]},{"ie_types":[[["Type","ArrangeVertical",[]],"ArrangeVertical"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",68],["Just",130],""]]},{"ie_types":[[["Type","ArrangeSplit",[]],"ArrangeSplit"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",65],["Just",126],""]]},{"ie_types":[[["Type","ArrangeWithSideBar",[]],"ArrangeWithSideBar"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",62],["Just",122],""]]},{"ie_types":[[["Type","ArrangeWithTabs",[]],"ArrangeWithTabs"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",59],["Just",119],""]]},{"ie_types":[[["Type","ApplyAttribute",[["Var","a"]]],"(ApplyAttribute a)"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",27],["Just",67],""]]},{"ie_types":[[["Type","ApplyLayout",[]],"ApplyLayout"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",20],["Just",31],""]]},{"ie_types":[[["Type","LazyRefresh",[]],"LazyRefresh"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",16],["Just",22],""]]}]},["Tip"],["Tip"]]],["Bin",4,["Location","iTasks","iTasks.WF.Definition",["Just",75],["Just",48],"toInstanceNo"],{"ce_vars":["t"],"ce_context":[],"ce_members":[["toInstanceNo",{"fe_kind":["Function"],"fe_type":["Func",[["Var","t"]],["Type","InstanceNo",[]],[]],"fe_representation":"toInstanceNo :: t -> InstanceNo"}]],"ce_instances":[{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",77],["Just",50],""]]},{"ie_types":[[["Type","InstanceNo",[]],"InstanceNo"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",76],["Just",49],""]]}]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",24],["Just",64],"toAttribute"],{"ce_vars":["a"],"ce_context":[],"ce_members":[["toAttribute",{"fe_kind":["Function"],"fe_type":["Func",[["Var","a"]],["Type","JSONNode",[]],[]],"fe_representation":"toAttribute :: a -> JSONNode"}]],"ce_instances":[{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",25],["Just",65],""]]}]},["Tip"],["Tip"]],["Bin",2,["Location","iTasks","iTasks.WF.Definition",["Just",103],["Nothing"],"iTask"],{"ce_vars":["a"],"ce_context":[[["Generic","gEditor",["KindConst"]],["Var","a"]],[["Generic","gText",["KindConst"]],["Var","a"]],[["Generic","JSONEncode",["KindConst"]],["Var","a"]],[["Generic","JSONDecode",["KindConst"]],["Var","a"]],[["Generic","gDefault",["KindConst"]],["Var","a"]],[["Generic","gEq",["KindConst"]],["Var","a"]],[["Class","TC"],["Var","a"]]],"ce_members":[],"ce_instances":[]},["Tip"],["Bin",1,["Builtin","TC"],{"ce_vars":["v"],"ce_context":[],"ce_members":[],"ce_instances":[]},["Tip"],["Tip"]]]]]]]]]],"typemap":["Bin",790,["Location","Platform","Graphics.Scalable.Internal",["Just",143],["Nothing"],"OpacityAttr"],{"tde_typedef":{"td_name":"OpacityAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_OpacityAttr",[],[{"rf_name":"opacity","rf_type":["Type","Real",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",255,["Location","Platform","Data.Graphviz",["Just",259],["Nothing"],"RankDir"],{"tde_typedef":{"td_name":"RankDir","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"RDTB","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RDLR","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RDBT","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RDRL","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",145,["Location","Platform","Data.Graph.Inductive.Graph",["Just",54],["Nothing"],"GDecomp"],{"tde_typedef":{"td_name":"GDecomp","td_uniq":false,"td_args":[["Var","g"],["Var","a"],["Var","b"]],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","Context",[["Var","a"],["Var","b"]]],["Cons","g",[["Var","a"],["Var","b"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",108,["Location","Platform","Control.Arrow",["Just",179],["Nothing"],"ArrowMonad"],{"tde_typedef":{"td_name":"ArrowMonad","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"ArrowMonad","cons_args":[["Cons","a",[["Type","_Unit",[]],["Var","b"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",74,["Location","Dynamics","_SystemDynamic",["Just",67],["Just",619],"TC__Tuple24"],{"tde_typedef":{"td_name":"TC__Tuple24","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple24","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",45,["Location","Dynamics","_SystemDynamic",["Just",51],["Just",603],"TC__Tuple8"],{"tde_typedef":{"td_name":"TC__Tuple8","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple8","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",29,["Location","Dynamics","_SystemDynamic",["Just",42],["Just",594],"TC__StrictTailStrictList"],{"tde_typedef":{"td_name":"TC__StrictTailStrictList","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__StrictTailStrictList","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",21,["Location","Dynamics","_SystemDynamic",["Just",32],["Just",584],"TC_Dynamic"],{"tde_typedef":{"td_name":"TC_Dynamic","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC_Dynamic","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",13,["Location","Dynamics","_SystemDynamic",["Just",28],["Just",580],"TC_Int"],{"tde_typedef":{"td_name":"TC_Int","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC_Int","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",9,["Location","Dynamics","StdCleanTypes",["Just",37],["Just",6],"CTCons"],{"tde_typedef":{"td_name":"CTCons","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",5,["Location","Dynamics","StdCleanTypes",["Just",24],["Nothing"],"CTFieldDef"],{"tde_typedef":{"td_name":"CTFieldDef","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_CTFieldDef",[],[{"rf_name":"fd_name","rf_type":["Type","_#Array",[["Type","Char",[]]]]},{"rf_name":"fd_exist","rf_type":["Type","Int",[]]},{"rf_name":"fd_type","rf_type":["Type","TypeCode",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","Dynamics","StdCleanTypes",["Just",12],["Nothing"],"CTConsDef"],{"tde_typedef":{"td_name":"CTConsDef","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_CTConsDef",[],[{"rf_name":"cd_cons","rf_type":["Type","CTCons",[]]},{"rf_name":"cd_args","rf_type":["Type","_List",[["Type","TypeCode",[]]]]},{"rf_name":"cd_exist","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",6],["Nothing"],"CTTypeRHS"],{"tde_typedef":{"td_name":"CTTypeRHS","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CTAlgType","cons_args":[["Type","_List",[["Type","CTConsDef",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CTRecordType","cons_args":[["Type","_List",[["Type","CTFieldDef",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CTSynType","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CTPredefined","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",19],["Nothing"],"CTFixity"],{"tde_typedef":{"td_name":"CTFixity","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CTFixNone","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CTFixLeft","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CTFixRight","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",1,["Location","Dynamics","StdCleanTypes",["Just",30],["Nothing"],"CTTypeDef"],{"tde_typedef":{"td_name":"CTTypeDef","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_CTTypeDef",[],[{"rf_name":"td_name","rf_type":["Type","_#Array",[["Type","Char",[]]]]},{"rf_name":"td_arity","rf_type":["Type","Int",[]]},{"rf_name":"td_unq","rf_type":["Type","Bool",[]]},{"rf_name":"td_rhs","rf_type":["Type","CTTypeRHS",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",12],["Nothing"],"TypeCode"],{"tde_typedef":{"td_name":"TypeCode","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TypeScheme","cons_args":[["Type","Int",[]],["Type","TypeCode",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TypeVar","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TypeCons","cons_args":[["Type","TypeCodeConstructor",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TypeApp","cons_args":[["Type","TypeCode",[]],["Type","TypeCode",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TypeUnique","cons_args":[["Type","TypeCode",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"_TypeFixedVar","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"_TypeEmpty","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",6],["Nothing"],"DynamicTemp"],{"tde_typedef":{"td_name":"DynamicTemp","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_DynamicTemp",["a"],[{"rf_name":"_value","rf_type":["Var","a"]},{"rf_name":"_type","rf_type":["Type","TypeCode",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",26],["Just",563],"TypeCodeConstructor"],{"tde_typedef":{"td_name":"TypeCodeConstructor","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TypeCodeConstructor",["a"],[{"rf_name":"_tcc_cons","rf_type":["Var","a"]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",30],["Just",582],"TC_Real"],{"tde_typedef":{"td_name":"TC_Real","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC_Real","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",29],["Just",581],"TC_Char"],{"tde_typedef":{"td_name":"TC_Char","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC_Char","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",31],["Just",583],"TC_Bool"],{"tde_typedef":{"td_name":"TC_Bool","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC_Bool","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",38],["Just",590],"TC__List"],{"tde_typedef":{"td_name":"TC__List","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"TC__List","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",34],["Just",586],"TC_World"],{"tde_typedef":{"td_name":"TC_World","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC_World","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",33],["Just",585],"TC_File"],{"tde_typedef":{"td_name":"TC_File","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC_File","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",36],["Just",588],"TC__Arrow"],{"tde_typedef":{"td_name":"TC__Arrow","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Arrow","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",40],["Just",592],"TC__UnboxedList"],{"tde_typedef":{"td_name":"TC__UnboxedList","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__UnboxedList","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",39],["Just",591],"TC__StrictList"],{"tde_typedef":{"td_name":"TC__StrictList","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__StrictList","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",41],["Just",593],"TC__TailStrictList"],{"tde_typedef":{"td_name":"TC__TailStrictList","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__TailStrictList","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",47],["Just",599],"TC__Tuple4"],{"tde_typedef":{"td_name":"TC__Tuple4","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple4","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",45],["Just",597],"TC__Tuple2"],{"tde_typedef":{"td_name":"TC__Tuple2","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple2","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",43],["Just",595],"TC__UnboxedTailStrictList"],{"tde_typedef":{"td_name":"TC__UnboxedTailStrictList","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__UnboxedTailStrictList","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",46],["Just",598],"TC__Tuple3"],{"tde_typedef":{"td_name":"TC__Tuple3","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple3","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",49],["Just",601],"TC__Tuple6"],{"tde_typedef":{"td_name":"TC__Tuple6","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple6","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",48],["Just",600],"TC__Tuple5"],{"tde_typedef":{"td_name":"TC__Tuple5","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple5","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",50],["Just",602],"TC__Tuple7"],{"tde_typedef":{"td_name":"TC__Tuple7","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple7","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",15,["Location","Dynamics","_SystemDynamic",["Just",59],["Just",611],"TC__Tuple16"],{"tde_typedef":{"td_name":"TC__Tuple16","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple16","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",55],["Just",607],"TC__Tuple12"],{"tde_typedef":{"td_name":"TC__Tuple12","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple12","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",53],["Just",605],"TC__Tuple10"],{"tde_typedef":{"td_name":"TC__Tuple10","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple10","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",52],["Just",604],"TC__Tuple9"],{"tde_typedef":{"td_name":"TC__Tuple9","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple9","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",54],["Just",606],"TC__Tuple11"],{"tde_typedef":{"td_name":"TC__Tuple11","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple11","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",57],["Just",609],"TC__Tuple14"],{"tde_typedef":{"td_name":"TC__Tuple14","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple14","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",56],["Just",608],"TC__Tuple13"],{"tde_typedef":{"td_name":"TC__Tuple13","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple13","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",58],["Just",610],"TC__Tuple15"],{"tde_typedef":{"td_name":"TC__Tuple15","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple15","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",63],["Just",615],"TC__Tuple20"],{"tde_typedef":{"td_name":"TC__Tuple20","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple20","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",61],["Just",613],"TC__Tuple18"],{"tde_typedef":{"td_name":"TC__Tuple18","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple18","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",60],["Just",612],"TC__Tuple17"],{"tde_typedef":{"td_name":"TC__Tuple17","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple17","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",62],["Just",614],"TC__Tuple19"],{"tde_typedef":{"td_name":"TC__Tuple19","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple19","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",65],["Just",617],"TC__Tuple22"],{"tde_typedef":{"td_name":"TC__Tuple22","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple22","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",64],["Just",616],"TC__Tuple21"],{"tde_typedef":{"td_name":"TC__Tuple21","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple21","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",66],["Just",618],"TC__Tuple23"],{"tde_typedef":{"td_name":"TC__Tuple23","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple23","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]]],["Bin",28,["Location","Generics","GenFMap",["Just",5],["Just",7],"FMap"],{"tde_typedef":{"td_name":"FMap","td_uniq":false,"td_args":[["Var","v"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",15,["Location","Dynamics","_SystemDynamic",["Just",75],["Just",627],"TC__Tuple32"],{"tde_typedef":{"td_name":"TC__Tuple32","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple32","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",71],["Just",623],"TC__Tuple28"],{"tde_typedef":{"td_name":"TC__Tuple28","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple28","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",69],["Just",621],"TC__Tuple26"],{"tde_typedef":{"td_name":"TC__Tuple26","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple26","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",68],["Just",620],"TC__Tuple25"],{"tde_typedef":{"td_name":"TC__Tuple25","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple25","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",70],["Just",622],"TC__Tuple27"],{"tde_typedef":{"td_name":"TC__Tuple27","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple27","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",73],["Just",625],"TC__Tuple30"],{"tde_typedef":{"td_name":"TC__Tuple30","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple30","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",72],["Just",624],"TC__Tuple29"],{"tde_typedef":{"td_name":"TC__Tuple29","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple29","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",74],["Just",626],"TC__Tuple31"],{"tde_typedef":{"td_name":"TC__Tuple31","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Tuple31","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","Dynamics","_SystemDynamic",["Just",81],["Nothing"],"TC__Unit"],{"tde_typedef":{"td_name":"TC__Unit","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__Unit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Dynamics","_SystemDynamic",["Just",78],["Just",630],"TC__StrictArray"],{"tde_typedef":{"td_name":"TC__StrictArray","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__StrictArray","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",77],["Just",629],"TC__LazyArray"],{"tde_typedef":{"td_name":"TC__LazyArray","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__LazyArray","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",79],["Just",631],"TC__UnboxedArray"],{"tde_typedef":{"td_name":"TC__UnboxedArray","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TC__UnboxedArray","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Generics","GenCompress",["Just",5],["Just",21],"BitVector"],{"tde_typedef":{"td_name":"BitVector","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_#Array",[["Type","Int",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Dynamics","_SystemDynamic",["Just",109],["Just",11],"_UnificationEnvironment"],{"tde_typedef":{"td_name":"_UnificationEnvironment","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Generics","GenCompress",["Just",7],["Just",24],"CompressSt"],{"tde_typedef":{"td_name":"CompressSt","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",12,["Location","Generics","GenParse",["Just",14],["Just",67],"Expr"],{"tde_typedef":{"td_name":"Expr","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",4,["Location","Generics","GenMonad",["Just",9],["Nothing"],"StMonad"],{"tde_typedef":{"td_name":"StMonad","td_uniq":false,"td_args":[["Var","s"],["Var","a"]],"td_rhs":["TDRRecord","_StMonad",[],[{"rf_name":"st_monad","rf_type":["Func",[["Var","s"]],["Uniq",["Type","_Tuple2",[["Var","a"],["Var","s"]]]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",2,["Location","Generics","GenHylo",["Just",5],["Just",5],"Fix"],{"tde_typedef":{"td_name":"Fix","td_uniq":false,"td_args":[["Var","f"]],"td_rhs":["TDRCons",false,[{"cons_name":"In","cons_args":[["Cons","f",[["Type","Fix",[["Var","f"]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Generics","GenLexOrd",["Just",5],["Just",6],"LexOrd"],{"tde_typedef":{"td_name":"LexOrd","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LT","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EQ","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GT","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",1,["Location","Generics","GenParse",["Just",8],["Just",8],"StringInput"],{"tde_typedef":{"td_name":"StringInput","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_StringInput",[],[{"rf_name":"si_str","rf_type":["Type","String",[]]},{"rf_name":"si_pos","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",7,["Location","Platform","Control.Applicative",["Just",8],["Nothing"],"Const"],{"tde_typedef":{"td_name":"Const","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"Const","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",4,["Location","Generics","GenPrint",["Just",10],["Just",55],"PrintState"],{"tde_typedef":{"td_name":"PrintState","td_uniq":false,"td_args":[["Var","s"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",1,["Location","Generics","GenPrint",["Just",8],["Just",7],"StringOutput"],{"tde_typedef":{"td_name":"StringOutput","td_uniq":true,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",2,["Location","GraphCopy","graph_to_sapl_string",["Just",7],["Just",13],"DynamicSapl"],{"tde_typedef":{"td_name":"DynamicSapl","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"IntS","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BoolS","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CharS","cons_args":[["Type","Char",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RealS","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StringS","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CstrS","cons_args":[["Type","String",[]],["Type","String",[]],["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FunctionS","cons_args":[["Type","String",[]],["Type","String",[]],["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ArrayS","cons_args":[["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ListS","cons_args":[["Type","_List",[["Type","DynamicSapl",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TupleS","cons_args":[["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RecS","cons_args":[["Type","String",[]],["Type","String",[]],["Type","Int",[]],["Type","_List",[["Type","DynamicSapl",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","GraphCopy","graph_copy_with_names",["Just",6],["Just",500],"DescInfo"],{"tde_typedef":{"td_name":"DescInfo","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_DescInfo",[],[{"rf_name":"di_prefix_arity_and_mod","rf_type":["Type","Int",[]]},{"rf_name":"di_name","rf_type":["Type","_#Array",[["Type","Char",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Platform","Control.Applicative",["Just",9],["Nothing"],"WrappedMonad"],{"tde_typedef":{"td_name":"WrappedMonad","td_uniq":false,"td_args":[["Var","m"],["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"WrapMonad","cons_args":[["Cons","m",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Control.Arrow",["Just",67],["Just",45],"Kleisli"],{"tde_typedef":{"td_name":"Kleisli","td_uniq":false,"td_args":[["Var","m"],["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"Kleisli","cons_args":[["Func",[["Var","a"]],["Cons","m",[["Var","b"]]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]]]],["Bin",33,["Location","Platform","Data.Graph",["Just",9],["Just",15],"Graph"],{"tde_typedef":{"td_name":"Graph","td_uniq":false,"td_args":[["Var","n"],["Var","e"]],"td_rhs":["TDRRecord","_Graph",[],[{"rf_name":"nodes","rf_type":["Type","Map",[["Type","NodeIndex",[]],["Type","Node",[["Var","n"]]]]]},{"rf_name":"edges","rf_type":["Type","Map",[["Type","EdgeIndex",[]],["Var","e"]]]},{"rf_name":"lastId","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",16,["Location","Platform","Crypto.Hash.SHA1",["Just",14],["Just",13],"SHA1Digest"],{"tde_typedef":{"td_name":"SHA1Digest","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SHA1Digest","cons_args":[["Type","_#Array",[["Type","Char",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",9,["Location","Platform","Control.Monad.Reader",["Just",11],["Just",11],"Reader"],{"tde_typedef":{"td_name":"Reader","td_uniq":false,"td_args":[["Var","r"],["Var","a"]],"td_rhs":["TDRSynonym",["Type","ReaderT",[["Var","r"],["Type","Identity",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","Platform","Control.Monad.RWST",["Just",14],["Just",53],"RWST"],{"tde_typedef":{"td_name":"RWST","td_uniq":false,"td_args":[["Var","r"],["Var","w"],["Var","s"],["Var","m"],["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"RWST","cons_args":[["Func",[["Var","r"]],["Func",[["Var","s"]],["Cons","m",[["Type","_Tuple3",[["Var","a"],["Var","s"],["Var","w"]]]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Control.Monad.RWST",["Just",11],["Nothing"],"RWS"],{"tde_typedef":{"td_name":"RWS","td_uniq":false,"td_args":[["Var","r"],["Var","w"],["Var","s"],["Var","a"]],"td_rhs":["TDRSynonym",["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Type","Identity",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Control.Monad.Reader",["Just",9],["Just",9],"ReaderT"],{"tde_typedef":{"td_name":"ReaderT","td_uniq":false,"td_args":[["Var","r"],["Var","m"],["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"ReaderT","cons_args":[["Func",[["Var","r"]],["Cons","m",[["Var","a"]]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Control.Monad.State",["Just",11],["Nothing"],"State"],{"tde_typedef":{"td_name":"State","td_uniq":false,"td_args":[["Var","s"],["Var","a"]],"td_rhs":["TDRSynonym",["Type","StateT",[["Var","s"],["Type","Identity",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Control.Monad.State",["Just",9],["Nothing"],"StateT"],{"tde_typedef":{"td_name":"StateT","td_uniq":false,"td_args":[["Var","s"],["Var","m"],["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"StateT","cons_args":[["Func",[["Var","s"]],["Cons","m",[["Type","_Tuple2",[["Var","a"],["Var","s"]]]]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",3,["Location","Platform","Control.Monad.Writer",["Just",12],["Just",13],"Writer"],{"tde_typedef":{"td_name":"Writer","td_uniq":false,"td_args":[["Var","w"],["Var","a"]],"td_rhs":["TDRSynonym",["Type","WriterT",[["Var","w"],["Type","Identity",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Control.Monad.Writer",["Just",10],["Just",11],"WriterT"],{"tde_typedef":{"td_name":"WriterT","td_uniq":false,"td_args":[["Var","w"],["Var","m"],["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"WriterT","cons_args":[["Cons","m",[["Type","_Tuple2",[["Var","a"],["Var","w"]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Crypto.Hash.MD5",["Just",12],["Nothing"],"MD5Digest"],{"tde_typedef":{"td_name":"MD5Digest","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"MD5Digest","cons_args":[["Type","_#Array",[["Type","Char",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",6,["Location","Platform","Data.Either",["Just",12],["Nothing"],"Either"],{"tde_typedef":{"td_name":"Either","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"Left","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Right","cons_args":[["Var","b"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Platform","Data.Complex",["Just",6],["Just",13],"Complex"],{"tde_typedef":{"td_name":"Complex","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":":+","cons_args":[["Var","a"],["Var","a"]],"cons_exi_vars":[],"cons_context":[],"cons_priority":["LeftAssoc",6]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Data.CircularStack",["Just",6],["Nothing"],"CircularStack"],{"tde_typedef":{"td_name":"CircularStack","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRRecord","_CircularStack",[],[{"rf_name":"maxSize","rf_type":["Type","Int",[]]},{"rf_name":"actualSize","rf_type":["Type","Int",[]]},{"rf_name":"nextIdx","rf_type":["Type","Int",[]]},{"rf_name":"stackData","rf_type":["Type","IntMap",[["Var","a"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Data.Error",["Just",10],["Nothing"],"MaybeErrorString"],{"tde_typedef":{"td_name":"MaybeErrorString","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","MaybeError",[["Type","String",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Data.Error",["Just",8],["Nothing"],"MaybeError"],{"tde_typedef":{"td_name":"MaybeError","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"Error","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Ok","cons_args":[["Var","b"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Functor.Identity",["Just",7],["Just",7],"Identity"],{"tde_typedef":{"td_name":"Identity","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Identity","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",16,["Location","Platform","Data.Graph.Inductive.Graph",["Just",22],["Nothing"],"UEdge"],{"tde_typedef":{"td_name":"UEdge","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","LEdge",[["Type","_Unit",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",8,["Location","Platform","Data.Graph",["Just",22],["Nothing"],"EdgeIndex"],{"tde_typedef":{"td_name":"EdgeIndex","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","NodeIndex",[]],["Type","NodeIndex",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","Platform","Data.Graph",["Just",15],["Just",21],"Node"],{"tde_typedef":{"td_name":"Node","td_uniq":false,"td_args":[["Var","n"]],"td_rhs":["TDRRecord","_Node",[],[{"rf_name":"data","rf_type":["Var","n"]},{"rf_name":"predecessors","rf_type":["Type","_List",[["Type","NodeIndex",[]]]]},{"rf_name":"successors","rf_type":["Type","_List",[["Type","NodeIndex",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graph",["Just",21],["Nothing"],"NodeIndex"],{"tde_typedef":{"td_name":"NodeIndex","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Data.Graph.Inductive.Graph",["Just",18],["Nothing"],"Edge"],{"tde_typedef":{"td_name":"Edge","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","Node",[]],["Type","Node",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",13],["Nothing"],"LNode"],{"tde_typedef":{"td_name":"LNode","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","Node",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",11],["Nothing"],"Node"],{"tde_typedef":{"td_name":"Node","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",15],["Nothing"],"UNode"],{"tde_typedef":{"td_name":"UNode","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","LNode",[["Type","_Unit",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",20],["Nothing"],"LEdge"],{"tde_typedef":{"td_name":"LEdge","td_uniq":false,"td_args":[["Var","b"]],"td_rhs":["TDRSynonym",["Type","_Tuple3",[["Type","Node",[]],["Type","Node",[]],["Var","b"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Data.Graph.Inductive.Graph",["Just",46],["Nothing"],"Adj"],{"tde_typedef":{"td_name":"Adj","td_uniq":false,"td_args":[["Var","b"]],"td_rhs":["TDRSynonym",["Type","_List",[["Type","_Tuple2",[["Var","b"],["Type","Node",[]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",27],["Nothing"],"LPath"],{"tde_typedef":{"td_name":"LPath","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"LP","cons_args":[["Type","_List",[["Type","LNode",[["Var","a"]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",25],["Nothing"],"Path"],{"tde_typedef":{"td_name":"Path","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","Node",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",43],["Nothing"],"UPath"],{"tde_typedef":{"td_name":"UPath","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","UNode",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",49],["Nothing"],"MContext"],{"tde_typedef":{"td_name":"MContext","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRSynonym",["Type","Maybe",[["Type","Context",[["Var","a"],["Var","b"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",48],["Nothing"],"Context"],{"tde_typedef":{"td_name":"Context","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRSynonym",["Type","_Tuple4",[["Type","Adj",[["Var","b"]]],["Type","Node",[]],["Var","a"],["Type","Adj",[["Var","b"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",52],["Nothing"],"Decomp"],{"tde_typedef":{"td_name":"Decomp","td_uniq":false,"td_args":[["Var","g"],["Var","a"],["Var","b"]],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","MContext",[["Var","a"],["Var","b"]]],["Cons","g",[["Var","a"],["Var","b"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]]]]],["Bin",36,["Location","Platform","Data.Graphviz",["Just",201],["Nothing"],"ClusterMode"],{"tde_typedef":{"td_name":"ClusterMode","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CMLocal","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CMGlobal","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CMNone","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",24,["Location","Platform","Data.Graph.Inductive.Internal.RootPath",["Just",8],["Just",10],"RTree"],{"tde_typedef":{"td_name":"RTree","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","Path",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",6,["Location","Platform","Data.Graph.Inductive.Graph",["Just",380],["Just",458],"OrdGr"],{"tde_typedef":{"td_name":"OrdGr","td_uniq":false,"td_args":[["Var","gr"],["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"OrdGr","cons_args":[["Cons","gr",[["Var","a"],["Var","b"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Data.Graph.Inductive.Graph",["Just",59],["Nothing"],"UDecomp"],{"tde_typedef":{"td_name":"UDecomp","td_uniq":false,"td_args":[["Var","g"]],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","Maybe",[["Type","UContext",[]]]],["Var","g"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",57],["Nothing"],"UContext"],{"tde_typedef":{"td_name":"UContext","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple3",[["Type","_List",[["Type","Node",[]]]],["Type","Node",[]],["Type","_List",[["Type","Node",[]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Graph",["Just",336],["Just",390],"GroupEdges"],{"tde_typedef":{"td_name":"GroupEdges","td_uniq":false,"td_args":[["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"GEs","cons_args":[["Type","LEdge",[["Type","_List",[["Var","b"]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graph.Inductive.Internal.RootPath",["Just",7],["Just",9],"LRTree"],{"tde_typedef":{"td_name":"LRTree","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","_List",[["Type","LPath",[["Var","a"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.Queue",["Just",3],["Just",6],"Queue"],{"tde_typedef":{"td_name":"Queue","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"MkQueue","cons_args":[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]]],["Bin",17,["Location","Platform","Data.Graphviz",["Just",23],["Nothing"],"NodeDef"],{"tde_typedef":{"td_name":"NodeDef","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"NodeDef","cons_args":[["Type","Int",[]],["Type","_List",[["Type","NodeState",[]]]],["Type","_List",[["Type","NodeAttribute",[]]]],["Type","_List",[["Type","EdgeDef",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",11,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",28],["Just",41],"Context`"],{"tde_typedef":{"td_name":"Context`","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRSynonym",["Type","_Tuple3",[["Type","IntMap",[["Type","_List",[["Var","b"]]]]],["Var","a"],["Type","IntMap",[["Type","_List",[["Var","b"]]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",7,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",89],["Just",97],"SplitM"],{"tde_typedef":{"td_name":"SplitM","td_uniq":false,"td_args":[["Var","t"],["Var","i"],["Var","r"]],"td_rhs":["TDRSynonym",["Type","Split",[["Var","t"],["Var","i"],["Type","Maybe",[["Var","r"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",65],["Just",65],"Thread"],{"tde_typedef":{"td_name":"Thread","td_uniq":false,"td_args":[["Var","t"],["Var","i"],["Var","r"]],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Var","t"],["Type","Split",[["Var","t"],["Var","i"],["Var","r"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",64],["Just",64],"Split"],{"tde_typedef":{"td_name":"Split","td_uniq":false,"td_args":[["Var","t"],["Var","i"],["Var","r"]],"td_rhs":["TDRSynonym",["Func",[["Var","i"]],["Func",[["Var","t"]],["Type","_Tuple2",[["Var","r"],["Var","t"]]],[]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.Internal.Thread",["Just",66],["Just",66],"Collect"],{"tde_typedef":{"td_name":"Collect","td_uniq":false,"td_args":[["Var","r"],["Var","c"]],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Func",[["Var","r"]],["Func",[["Var","c"]],["Var","c"],[]],[]],["Var","c"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",25],["Just",38],"Gr"],{"tde_typedef":{"td_name":"Gr","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"Gr","cons_args":[["Type","GraphRep",[["Var","a"],["Var","b"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",8],["Just",17],"NodeMap"],{"tde_typedef":{"td_name":"NodeMap","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRRecord","_NodeMap",[],[{"rf_name":"map","rf_type":["Type","Map",[["Var","a"],["Type","Node",[]]]]},{"rf_name":"key","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",27],["Just",40],"GraphRep"],{"tde_typedef":{"td_name":"GraphRep","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRSynonym",["Type","IntMap",[["Type","Context`",[["Var","a"],["Var","b"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Graphviz",["Just",11],["Nothing"],"Digraph"],{"tde_typedef":{"td_name":"Digraph","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Digraph","cons_args":[["Type","String",[]],["Type","_List",[["Type","GraphAttribute",[]]]],["Type","_List",[["Type","NodeDef",[]]]],["Type","Maybe",[["Type","SelectedItem",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",30],["Just",43],"UGr"],{"tde_typedef":{"td_name":"UGr","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Gr",[["Type","_Unit",[]],["Type","_Unit",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Graphviz",["Just",13],["Nothing"],"SelectedItem"],{"tde_typedef":{"td_name":"SelectedItem","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SelectedItem","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.Graphviz",["Just",36],["Nothing"],"GraphAttribute"],{"tde_typedef":{"td_name":"GraphAttribute","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"GAttDamping","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttK","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttURL","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttBB","cons_args":[["Type","Rect",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttBGColor","cons_args":[["Type","Color",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttCenter","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttCharset","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttClusterRank","cons_args":[["Type","ClusterMode",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttColorScheme","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttComment","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttCompound","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttConcentrate","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttDefaultDist","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttDim","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttDPI","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttEpsilon","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttESep","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttFontColor","cons_args":[["Type","Color",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttFontName","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttFontNames","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttFontPath","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttFontSize","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttLabel","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttLabelJust","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttLabelLoc","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttLandscape","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttLayers","cons_args":[["Type","LayerList",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttLayerSep","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttLevelsGap","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttLP","cons_args":[["Type","DotPoint",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttMargin","cons_args":[["Type","Margin",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttMaxIter","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttMCLimit","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttMinDist","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttMode","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttModeL","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttMosek","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttNodeSep","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttNoJustify","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttNormalize","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttNSLimit","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttNSLimit1","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttOrdering","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttOrientation","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttOutputOrder","cons_args":[["Type","OutputMode",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttPad","cons_args":[["Type","Pad",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttPage","cons_args":[["Type","Pointf",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttPageDir","cons_args":[["Type","PageDir",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttQuantum","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttRank","cons_args":[["Type","RankType",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttRankDir","cons_args":[["Type","RankDir",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttRankSep","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttRatio","cons_args":[["Type","Ratio",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttRemInCross","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttResolution","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttRoot","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttRotate","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttSearchSize","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttShowBoxes","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttSize","cons_args":[["Type","Sizef",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttStart","cons_args":[["Type","StartType",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttStylesheet","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttTarget","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttTrueColor","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttViewport","cons_args":[["Type","ViewPort",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GAttVoroMargin","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Platform","Data.Graphviz",["Just",26],["Nothing"],"EdgeDef"],{"tde_typedef":{"td_name":"EdgeDef","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","Int",[]],["Type","_List",[["Type","EdgeAttribute",[]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",29],["Nothing"],"NodeState"],{"tde_typedef":{"td_name":"NodeState","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"NStAllEdgesFound","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",106],["Nothing"],"NodeAttribute"],{"tde_typedef":{"td_name":"NodeAttribute","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"NAttURL","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttColor","cons_args":[["Type","Color",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttColorScheme","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttComment","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttDistortion","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttFillColor","cons_args":[["Type","Color",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttFixedSize","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttFontColor","cons_args":[["Type","Color",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttFontName","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttFontSize","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttGroup","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttHeight","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttLabel","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttLayer","cons_args":[["Type","LayerRange",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttMargin","cons_args":[["Type","Margin",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttNoJustify","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttOrientation","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttPeripheries","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttPin","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttRects","cons_args":[["Type","Rect",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttRegular","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttSamplePoints","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttShape","cons_args":[["Type","NodeShape",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttShapeFile","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttShowBoxes","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttSides","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttSkew","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttStyle","cons_args":[["Type","NodeStyle",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttTarget","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttTooltip","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttWidth","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NAttZ","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",141],["Nothing"],"EdgeAttribute"],{"tde_typedef":{"td_name":"EdgeAttribute","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"EAttURL","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttArrowHead","cons_args":[["Type","ArrowType",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttArrowSize","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttArrowTail","cons_args":[["Type","ArrowType",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttColor","cons_args":[["Type","Color",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttColorScheme","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttComment","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttConstraint","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttDecorate","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttDir","cons_args":[["Type","DirType",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttEdgeURL","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttEdgeHRef","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttEdgeTarget","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttEdgeTooltip","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttFontColor","cons_args":[["Type","Color",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttFontName","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttFontSize","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttHeadURL","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttHeadClip","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttHeadHRef","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttHeadLabel","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttHeadPort","cons_args":[["Type","PortPos",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttHeadTarget","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttHeadTooltip","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttHRef","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabel","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelURL","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelAngle","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelDistance","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelFloat","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelFontColor","cons_args":[["Type","Color",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelFontName","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelFontSize","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelHref","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelTarget","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLabelTooltip","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLayer","cons_args":[["Type","LayerRange",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLen","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLHead","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLP","cons_args":[["Type","DotPoint",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttLTail","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttMinLen","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttNoJustify","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttSameHead","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttSameTail","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttShowBoxes","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttStyle","cons_args":[["Type","EdgeStyle",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttTailURL","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttTailClip","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttTailHRef","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttTailLabel","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttTailPort","cons_args":[["Type","PortPos",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttTailTarget","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttTailTooltip","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttTarget","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttTooltip","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EAttWeight","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]]],["Bin",11,["Location","Platform","Data.Graphviz",["Just",230],["Nothing"],"Margin"],{"tde_typedef":{"td_name":"Margin","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SingleMargin","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DoubleMargin","cons_args":[["Type","Real",[]],["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",5,["Location","Platform","Data.Graphviz",["Just",219],["Nothing"],"LayerId"],{"tde_typedef":{"td_name":"LayerId","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LayerAll","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LayerNr","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LayerName","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Platform","Data.Graphviz",["Just",206],["Nothing"],"CompassPoint"],{"tde_typedef":{"td_name":"CompassPoint","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CPN","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CPNE","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CPE","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CPSE","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CPS","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CPSW","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CPW","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CPNW","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",216],["Nothing"],"DotPoint"],{"tde_typedef":{"td_name":"DotPoint","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"DotPoint","cons_args":[["Type","Real",[]],["Type","Real",[]],["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",224],["Nothing"],"LayerList"],{"tde_typedef":{"td_name":"LayerList","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LayerList","cons_args":[["Type","_List",[["Type","String",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",227],["Nothing"],"LayerRange"],{"tde_typedef":{"td_name":"LayerRange","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LayerRange","cons_args":[["Type","LayerId",[]],["Type","_List",[["Type","LayerId",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.Graphviz",["Just",243],["Nothing"],"PageDir"],{"tde_typedef":{"td_name":"PageDir","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"PDBL","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PDBR","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PDTL","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PDTR","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PDRB","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PDRT","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PDLB","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PDLT","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Platform","Data.Graphviz",["Just",234],["Nothing"],"OutputMode"],{"tde_typedef":{"td_name":"OutputMode","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"OMBreadthFirst","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OMNodesFirst","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OMEdgesFirst","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",239],["Nothing"],"Pad"],{"tde_typedef":{"td_name":"Pad","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SinglePad","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DoublePad","cons_args":[["Type","Real",[]],["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",253],["Nothing"],"Pointf"],{"tde_typedef":{"td_name":"Pointf","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Pointf","cons_args":[["Type","Real",[]],["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",256],["Nothing"],"PortPos"],{"tde_typedef":{"td_name":"PortPos","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","CompassPoint",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]]]]],["Bin",109,["Location","Platform","Database.SQL",["Just",91],["Nothing"],"SQLSchema"],{"tde_typedef":{"td_name":"SQLSchema","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","SQLTable",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",55,["Location","Platform","Data.Map",["Just",31],["Nothing"],"Map"],{"tde_typedef":{"td_name":"Map","td_uniq":false,"td_args":[["Var","k"],["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Bin","cons_args":[["Type","Int",[]],["Var","k"],["Var","a"],["Type","Map",[["Var","k"],["Var","a"]]],["Type","Map",[["Var","k"],["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Tip","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","The abstract Map type provides the mapping.\nThe parameter k is the key type on which the data structure\nis indexed. The parameter v is the type of the values\nstored in the mapping. For example \"Map Int String\" is a mapping\n\"from\" integers \"to\" strings."],[],["Just",["ADTDoc",[]]]]},["Bin",29,["Location","Platform","Data.Graphviz",["Just",386],["Nothing"],"ArrowType"],{"tde_typedef":{"td_name":"ArrowType","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ArrowType",[],[{"rf_name":"closest","rf_type":["Type","Arrow",[]]},{"rf_name":"furthest","rf_type":["Type","Maybe",[["Type","Arrow",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",11,["Location","Platform","Data.Graphviz",["Just",294],["Nothing"],"StartType"],{"tde_typedef":{"td_name":"StartType","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_StartType",[],[{"rf_name":"startStyle","rf_type":["Type","Maybe",[["Type","StartStyle",[]]]]},{"rf_name":"startSeed","rf_type":["Type","Maybe",[["Type","Int",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",5,["Location","Platform","Data.Graphviz",["Just",279],["Nothing"],"Rect"],{"tde_typedef":{"td_name":"Rect","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Rect",[],[{"rf_name":"llx","rf_type":["Type","Int",[]]},{"rf_name":"lly","rf_type":["Type","Int",[]]},{"rf_name":"urx","rf_type":["Type","Int",[]]},{"rf_name":"ury","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",2,["Location","Platform","Data.Graphviz",["Just",265],["Nothing"],"RankType"],{"tde_typedef":{"td_name":"RankType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"RTSame","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RTMin","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RTSource","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RTMax","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RTSink","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",272],["Nothing"],"Ratio"],{"tde_typedef":{"td_name":"Ratio","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AspectRatio","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RFill","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RCompress","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RExpand","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RAuto","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",286],["Nothing"],"Sizef"],{"tde_typedef":{"td_name":"Sizef","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Sizef","cons_args":[["Type","Real",[]],["Type","Real",[]],["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",289],["Nothing"],"StartStyle"],{"tde_typedef":{"td_name":"StartStyle","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SSRegular","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SSSelf","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SSRandom","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Data.Graphviz",["Just",344],["Nothing"],"NodeStyle"],{"tde_typedef":{"td_name":"NodeStyle","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"NStyleFilled","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NStyleInvis","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NStyleDiagonals","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NStyleRounded","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NStyleDashed","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NStyleDotted","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NStyleSolid","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NStyleBold","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Platform","Data.Graphviz",["Just",299],["Nothing"],"ViewPort"],{"tde_typedef":{"td_name":"ViewPort","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ViewPort",[],[{"rf_name":"vpW","rf_type":["Type","Real",[]]},{"rf_name":"vpH","rf_type":["Type","Real",[]]},{"rf_name":"vpZ","rf_type":["Type","Maybe",[["Type","Real",[]]]]},{"rf_name":"vpXY","rf_type":["Type","Maybe",[["Type","Pointf",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",310],["Nothing"],"NodeShape"],{"tde_typedef":{"td_name":"NodeShape","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"NShapeBox","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeCircle","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeDiamond","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeDoubleCircle","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeDoubleOctagon","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeEgg","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeEllipse","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeHexagon","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeHouse","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeInvTriangle","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeInvTrapezium","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeInvHouse","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeOctagon","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeMDiamond","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeMSquare","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeMCircle","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeParallelogram","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapePentagon","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapePlainText","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapePolygon","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapePoint","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeRect","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeRectangle","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeSeptagon","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeTrapezium","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeTriangle","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeTripleOctagon","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NShapeNone","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Data.Graphviz",["Just",358],["Nothing"],"EdgeStyle"],{"tde_typedef":{"td_name":"EdgeStyle","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"EStyleSolid","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EStyleBold","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EStyleDashed","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EStyleDotted","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EStyleInvis","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",369],["Nothing"],"Color"],{"tde_typedef":{"td_name":"Color","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"RGB","cons_args":[["Type","Int",[]],["Type","Int",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HSV","cons_args":[["Type","Real",[]],["Type","Real",[]],["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Color","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",17,["Location","Platform","Data.Heap",["Just",20],["Just",506],"Forest"],{"tde_typedef":{"td_name":"Forest","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Cons","cons_args":[["Type","Tree",[["Var","a"]]],["Type","Forest",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Nil","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",6,["Location","Platform","Data.Graphviz",["Just",401],["Nothing"],"ArrowShape"],{"tde_typedef":{"td_name":"ArrowShape","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AShapeBox","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AShapeCrow","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AShapeDiamond","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AShapeDot","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AShapeInv","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AShapeNone","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AShapeNormal","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AShapeTee","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AShapeVee","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Platform","Data.Graphviz",["Just",391],["Nothing"],"Arrow"],{"tde_typedef":{"td_name":"Arrow","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Arrow",[],[{"rf_name":"open","rf_type":["Type","Bool",[]]},{"rf_name":"side","rf_type":["Type","Maybe",[["Type","Side",[]]]]},{"rf_name":"shape","rf_type":["Type","ArrowShape",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Data.Graphviz",["Just",397],["Nothing"],"Side"],{"tde_typedef":{"td_name":"Side","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SideL","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SideR","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Heap",["Just",14],["Just",31],"Heap"],{"tde_typedef":{"td_name":"Heap","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Empty","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Heap","cons_args":[["Type","Int",[]],["Func",[["Var","a"]],["Func",[["Var","a"]],["Type","Bool",[]],[]],[]],["Type","Tree",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","Ported from Edward Kmett's Data.Heap by Jurriën Stutterheim 15-08-2014"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Data.Graphviz",["Just",417],["Nothing"],"DirType"],{"tde_typedef":{"td_name":"DirType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"DTForward","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DTBack","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DTBoth","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DTNone","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Heap",["Just",18],["Just",500],"Tree"],{"tde_typedef":{"td_name":"Tree","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Node","cons_args":[["Type","Int",[]],["Var","a"],["Type","Forest",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",10,["Location","Platform","Data.IntMap.Base",["Just",17],["Nothing"],"Mask"],{"tde_typedef":{"td_name":"Mask","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","Platform","Data.IntMap.Base",["Just",8],["Nothing"],"IntMap"],{"tde_typedef":{"td_name":"IntMap","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Nil","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Tip","cons_args":[["Type","Int",[]],["Var","a"]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Bin","cons_args":[["Type","Prefix",[]],["Type","Mask",[]],["Type","IntMap",[["Var","a"]]],["Type","IntMap",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Data.Heap",["Just",32],["Nothing"],"Entry"],{"tde_typedef":{"td_name":"Entry","td_uniq":false,"td_args":[["Var","p"],["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Entry","cons_args":[["Var","p"],["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.IntMap.Base",["Just",16],["Nothing"],"Prefix"],{"tde_typedef":{"td_name":"Prefix","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",6,["Location","Platform","Data.IntSet.Base",["Just",23],["Nothing"],"Mask"],{"tde_typedef":{"td_name":"Mask","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","Platform","Data.IntSet.Base",["Just",22],["Nothing"],"Prefix"],{"tde_typedef":{"td_name":"Prefix","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Data.IntSet.Base",["Just",3],["Nothing"],"IntSet"],{"tde_typedef":{"td_name":"IntSet","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Bin","cons_args":[["Type","Prefix",[]],["Type","Mask",[]],["Type","IntSet",[]],["Type","IntSet",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Tip","cons_args":[["Type","Prefix",[]],["Type","BitMap",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Nil","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Data.IntSet.Base",["Just",25],["Nothing"],"Key"],{"tde_typedef":{"td_name":"Key","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Data.IntSet.Base",["Just",24],["Nothing"],"BitMap"],{"tde_typedef":{"td_name":"BitMap","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Integer",["Just",8],["Nothing"],"Integer"],{"tde_typedef":{"td_name":"Integer","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Integer",[],[{"rf_name":"integer_s","rf_type":["Type","Int",[]]},{"rf_name":"integer_a","rf_type":["Type","_#Array",[["Type","Int",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]]]],["Bin",25,["Location","Platform","Data.Queue",["Just",10],["Nothing"],"Queue"],{"tde_typedef":{"td_name":"Queue","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Queue","cons_args":[["Type","_List",[["Var","a"]]],["Type","_List",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",11,["Location","Platform","Data.Monoid",["Just",41],["Nothing"],"Sum"],{"tde_typedef":{"td_name":"Sum","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Sum","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",7,["Location","Platform","Data.Monoid",["Just",33],["Nothing"],"Dual"],{"tde_typedef":{"td_name":"Dual","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Dual","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Data.Matrix",["Just",6],["Nothing"],"Vector"],{"tde_typedef":{"td_name":"Vector","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","_Array",[["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Data.Matrix",["Just",5],["Nothing"],"Matrix"],{"tde_typedef":{"td_name":"Matrix","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","_Array",[["Type","_Array",[["Var","a"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Maybe",["Just",11],["Just",9],"Maybe"],{"tde_typedef":{"td_name":"Maybe","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Nothing","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Just","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","The Maybe type represents an optional value by providing a constructor\nfor no value (Nothing) and a constructor for just a value (Just)."],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Monoid",["Just",37],["Nothing"],"All"],{"tde_typedef":{"td_name":"All","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"All","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Data.Monoid",["Just",35],["Nothing"],"Endo"],{"tde_typedef":{"td_name":"Endo","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Endo","cons_args":[["Func",[["Var","a"]],["Var","a"],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Monoid",["Just",39],["Nothing"],"Any"],{"tde_typedef":{"td_name":"Any","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Any","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Data.Monoid",["Just",45],["Nothing"],"First"],{"tde_typedef":{"td_name":"First","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"First","cons_args":[["Type","Maybe",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Data.Monoid",["Just",43],["Nothing"],"Product"],{"tde_typedef":{"td_name":"Product","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Product","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Monoid",["Just",47],["Nothing"],"Last"],{"tde_typedef":{"td_name":"Last","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Last","cons_args":[["Type","Maybe",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",13,["Location","Platform","Database.SQL",["Just",22],["Nothing"],"SQLStatement"],{"tde_typedef":{"td_name":"SQLStatement","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",7,["Location","Platform","Data.Tree",["Just",21],["Nothing"],"RForest"],{"tde_typedef":{"td_name":"RForest","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","_List",[["Type","RTree",[["Var","a"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","Platform","Data.Stack",["Just",5],["Nothing"],"Stack"],{"tde_typedef":{"td_name":"Stack","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Stack","cons_args":[["Type","_List",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Data.Set",["Just",46],["Just",17],"Set"],{"tde_typedef":{"td_name":"Set","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Tip","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Bin","cons_args":[["Type","Int",[]],["Var","a"],["Type","Set",[["Var","a"]]],["Type","Set",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Data.Tree",["Just",12],["Nothing"],"RTree"],{"tde_typedef":{"td_name":"RTree","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"RNode","cons_args":[["Var","a"],["Type","RForest",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Data.Word8",["Just",5],["Just",5],"Word8"],{"tde_typedef":{"td_name":"Word8","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",1,["Location","Platform","Data.Void",["Just",5],["Nothing"],"Void"],{"tde_typedef":{"td_name":"Void","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Void","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","This module defines the empty type 'Void' which means something like 'no value'."],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL",["Just",14],["Nothing"],"SQLDatabase"],{"tde_typedef":{"td_name":"SQLDatabase","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SQLDatabase",[],[{"rf_name":"database","rf_type":["Type","String",[]]},{"rf_name":"host","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"username","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"password","rf_type":["Type","Maybe",[["Type","String",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",5,["Location","Platform","Database.SQL",["Just",49],["Nothing"],"SQLTime"],{"tde_typedef":{"td_name":"SQLTime","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SQLTime",[],[{"rf_name":"hour","rf_type":["Type","Int",[]]},{"rf_name":"minute","rf_type":["Type","Int",[]]},{"rf_name":"second","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",2,["Location","Platform","Database.SQL",["Just",27],["Nothing"],"SQLValue"],{"tde_typedef":{"td_name":"SQLValue","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SQLVChar","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVVarchar","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVText","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVInteger","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVReal","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVFloat","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVDouble","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVDate","cons_args":[["Type","SQLDate",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVTime","cons_args":[["Type","SQLTime",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVTimestamp","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVDatetime","cons_args":[["Type","SQLDate",[]],["Type","SQLTime",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVEnum","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVNull","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVBlob","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLVUnknown","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Database.SQL",["Just",44],["Nothing"],"SQLDate"],{"tde_typedef":{"td_name":"SQLDate","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SQLDate",[],[{"rf_name":"year","rf_type":["Type","Int",[]]},{"rf_name":"month","rf_type":["Type","Int",[]]},{"rf_name":"day","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL",["Just",56],["Nothing"],"SQLRow"],{"tde_typedef":{"td_name":"SQLRow","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","SQLValue",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","Platform","Database.SQL",["Just",78],["Nothing"],"SQLError"],{"tde_typedef":{"td_name":"SQLError","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SQLWarning","cons_args":[["Type","Int",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLInterfaceError","cons_args":[["Type","Int",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLDatabaseError","cons_args":[["Type","Int",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLDataError","cons_args":[["Type","Int",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLOperationalError","cons_args":[["Type","Int",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLIntegrityError","cons_args":[["Type","Int",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLInternalError","cons_args":[["Type","Int",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLProgrammingError","cons_args":[["Type","Int",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLNotSupportedError","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]]]],["Bin",53,["Location","Platform","Graphics.Scalable",["Just",107],["Nothing"],"TagRef"],{"tde_typedef":{"td_name":"TagRef","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Uniq",["Type","_Tuple2",[["Type","ImageTag",[]],["Uniq",["Type","ImageTag",[]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",26,["Location","Platform","Graphics.Layout",["Just",3],["Nothing"],"GridDimension"],{"tde_typedef":{"td_name":"GridDimension","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Rows","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Columns","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",16,["Location","Platform","Database.SQL",["Just",109],["Nothing"],"SQLColumnType"],{"tde_typedef":{"td_name":"SQLColumnType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SQLTChar","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTVarchar","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTText","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTInteger","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTReal","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTFloat","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTDouble","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTDate","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTTime","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTTimestamp","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTDatetime","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTEnum","cons_args":[["Type","_List",[["Type","String",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTBlob","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLTUnknown","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",4,["Location","Platform","Database.SQL",["Just",100],["Nothing"],"SQLColumnName"],{"tde_typedef":{"td_name":"SQLColumnName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","Platform","Database.SQL",["Just",92],["Nothing"],"SQLTable"],{"tde_typedef":{"td_name":"SQLTable","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SQLTable",[],[{"rf_name":"name","rf_type":["Type","SQLTableName",[]]},{"rf_name":"columns","rf_type":["Type","_List",[["Type","SQLColumn",[]]]]},{"rf_name":"primaryKey","rf_type":["Type","_List",[["Type","SQLColumnName",[]]]]},{"rf_name":"foreignKeys","rf_type":["Type","_List",[["Type","_Tuple3",[["Type","_List",[["Type","SQLColumnName",[]]]],["Type","SQLTableName",[]],["Type","_List",[["Type","SQLColumnName",[]]]]]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Database.SQL",["Just",99],["Nothing"],"SQLTableName"],{"tde_typedef":{"td_name":"SQLTableName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Database.SQL",["Just",102],["Nothing"],"SQLColumn"],{"tde_typedef":{"td_name":"SQLColumn","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SQLColumn",[],[{"rf_name":"name","rf_type":["Type","SQLColumnName",[]]},{"rf_name":"type","rf_type":["Type","SQLColumnType",[]]},{"rf_name":"null","rf_type":["Type","Bool",[]]},{"rf_name":"autoIncrement","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",11,["Location","Platform","Database.SQL.RelationalMapping",["Just",36],["Just",57],"RelMapMode"],{"tde_typedef":{"td_name":"RelMapMode","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"RelMapCreate","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RelMapRead","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RelMapUpdate","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RelMapDelete","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RelMapInfo","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RelMapInit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",4,["Location","Platform","Database.SQL.MySQL",["Just",10],["Just",16],"MySQLCursor"],{"tde_typedef":{"td_name":"MySQLCursor","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",2,["Location","Platform","Database.SQL.MySQL",["Just",9],["Just",12],"MySQLConnection"],{"tde_typedef":{"td_name":"MySQLConnection","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",1,["Location","Platform","Database.SQL.MySQL",["Just",8],["Just",9],"MySQLContext"],{"tde_typedef":{"td_name":"MySQLContext","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",23],["Nothing"],"MappingError"],{"tde_typedef":{"td_name":"MappingError","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"DatabaseError","cons_args":[["Type","SQLError",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TypeError","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",6,["Location","Platform","Database.SQL.SQLite",["Just",8],["Just",9],"SQLiteContext"],{"tde_typedef":{"td_name":"SQLiteContext","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",3,["Location","Platform","Database.SQL.RelationalMapping",["Just",48],["Just",51],"RelMapToken"],{"tde_typedef":{"td_name":"RelMapToken","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"RelMapValue","cons_args":[["Type","SQLValue",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RelMapTerminator","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RelMapOverride","cons_args":[["Type","String",[]],["Type","SQLValue",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",44],["Just",77],"RelMapPass"],{"tde_typedef":{"td_name":"RelMapPass","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Database.SQL.RelationalMapping",["Just",53],["Just",65],"RelMapFieldInfo"],{"tde_typedef":{"td_name":"RelMapFieldInfo","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_RelMapFieldInfo",[],[{"rf_name":"fld_table","rf_type":["Type","String",[]]},{"rf_name":"fld_select","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"fld_match","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"rec_table","rf_type":["Type","String",[]]},{"rf_name":"rec_key","rf_type":["Type","String",[]]},{"rf_name":"val_list","rf_type":["Type","Bool",[]]},{"rf_name":"val_maybe","rf_type":["Type","Bool",[]]},{"rf_name":"val_fields","rf_type":["Type","_List",[["Type","RelMapFieldInfo",[]]]]},{"rf_name":"val_id","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Database.SQL.SQLite",["Just",9],["Just",12],"SQLiteConnection"],{"tde_typedef":{"td_name":"SQLiteConnection","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Bin",1,["Location","Platform","Database.SQL.SQLite",["Just",10],["Just",16],"SQLiteCursor"],{"tde_typedef":{"td_name":"SQLiteCursor","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]]]]],["Bin",9,["Location","Platform","Graphics.Layout",["Just",7],["Nothing"],"GridYLayout"],{"tde_typedef":{"td_name":"GridYLayout","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TopToBottom","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BottomToTop","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Graphics.Layout",["Just",5],["Nothing"],"GridMajor"],{"tde_typedef":{"td_name":"GridMajor","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ColumnMajor","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RowMajor","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Layout",["Just",4],["Nothing"],"GridLayout"],{"tde_typedef":{"td_name":"GridLayout","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple3",[["Type","GridMajor",[]],["Type","GridXLayout",[]],["Type","GridYLayout",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Layout",["Just",6],["Nothing"],"GridXLayout"],{"tde_typedef":{"td_name":"GridXLayout","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LeftToRight","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RightToLeft","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Graphics.Layout",["Just",19],["Nothing"],"XYAlign"],{"tde_typedef":{"td_name":"XYAlign","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","XAlign",[]],["Type","YAlign",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","Platform","Graphics.Layout",["Just",14],["Nothing"],"YAlign"],{"tde_typedef":{"td_name":"YAlign","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AtTop","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AtMiddleY","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AtBottom","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Layout",["Just",9],["Nothing"],"XAlign"],{"tde_typedef":{"td_name":"XAlign","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AtLeft","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AtMiddleX","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AtRight","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","Platform","Graphics.Scalable",["Just",106],["Nothing"],"TagSource"],{"tde_typedef":{"td_name":"TagSource","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Uniq",["Type","_List",[["Type","TagRef",[]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Graphics.Scalable",["Just",101],["Nothing"],"RGB"],{"tde_typedef":{"td_name":"RGB","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_RGB",[],[{"rf_name":"r","rf_type":["Type","Int",[]]},{"rf_name":"g","rf_type":["Type","Int",[]]},{"rf_name":"b","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Tip"]]]]],["Bin",26,["Location","Platform","Graphics.Scalable.Internal",["Just",109],["Nothing"],"YAlign"],{"tde_typedef":{"td_name":"YAlign","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AtTop","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AtMiddleY","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AtBottom","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",18,["Location","Platform","Graphics.Scalable.Internal",["Just",86],["Nothing"],"CompositeImage"],{"tde_typedef":{"td_name":"CompositeImage","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_CompositeImage",[],[{"rf_name":"host","rf_type":["Type","Host",[["Var","m"]]]},{"rf_name":"compose","rf_type":["Type","Compose",[["Var","m"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",10,["Location","Platform","Graphics.Scalable.Internal",["Just",56],["Nothing"],"Span"],{"tde_typedef":{"td_name":"Span","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"PxSpan","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LookupSpan","cons_args":[["Type","LookupSpan",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AddSpan","cons_args":[["Type","Span",[]],["Type","Span",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SubSpan","cons_args":[["Type","Span",[]],["Type","Span",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MulSpan","cons_args":[["Type","Span",[]],["Type","Span",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DivSpan","cons_args":[["Type","Span",[]],["Type","Span",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AbsSpan","cons_args":[["Type","Span",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MinSpan","cons_args":[["Type","_List",[["Type","Span",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MaxSpan","cons_args":[["Type","_List",[["Type","Span",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",6,["Location","Platform","Graphics.Scalable.Internal",["Just",34],["Nothing"],"ImageContent"],{"tde_typedef":{"td_name":"ImageContent","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRCons",false,[{"cons_name":"Basic","cons_args":[["Type","BasicImage",[]],["Type","ImageSpan",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Line","cons_args":[["Type","LineImage",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Composite","cons_args":[["Type","CompositeImage",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",21],["Nothing"],"ImageTransform"],{"tde_typedef":{"td_name":"ImageTransform","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"RotateImage","cons_args":[["Type","Angle",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SkewXImage","cons_args":[["Type","Angle",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SkewYImage","cons_args":[["Type","Angle",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FitImage","cons_args":[["Type","Span",[]],["Type","Span",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FitXImage","cons_args":[["Type","Span",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FitYImage","cons_args":[["Type","Span",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ScaleImage","cons_args":[["Type","Real",[]],["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ScaleXImage","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ScaleYImage","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FlipXImage","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FlipYImage","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",9],["Nothing"],"Image"],{"tde_typedef":{"td_name":"Image","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_Image",[],[{"rf_name":"content","rf_type":["Type","ImageContent",[["Var","m"]]]},{"rf_name":"mask","rf_type":["Type","Maybe",[["Type","Image",[["Var","m"]]]]]},{"rf_name":"attribs","rf_type":["Type","Set",[["Type","ImageAttr",[["Var","m"]]]]]},{"rf_name":"transform","rf_type":["Type","_List",[["Type","ImageTransform",[]]]]},{"rf_name":"tags","rf_type":["Type","Set",[["Type","ImageTag",[]]]]},{"rf_name":"uniqId","rf_type":["Type","Int",[]]},{"rf_name":"totalSpanPreTrans","rf_type":["Type","ImageSpan",[]]},{"rf_name":"transformCorrection","rf_type":["Type","ImageOffset",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",45],["Nothing"],"Markers"],{"tde_typedef":{"td_name":"Markers","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_Markers",[],[{"rf_name":"markerStart","rf_type":["Type","Maybe",[["Type","Image",[["Var","m"]]]]]},{"rf_name":"markerMid","rf_type":["Type","Maybe",[["Type","Image",[["Var","m"]]]]]},{"rf_name":"markerEnd","rf_type":["Type","Maybe",[["Type","Image",[["Var","m"]]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",39],["Nothing"],"LineImage"],{"tde_typedef":{"td_name":"LineImage","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_LineImage",[],[{"rf_name":"lineSpan","rf_type":["Type","ImageSpan",[]]},{"rf_name":"markers","rf_type":["Type","Maybe",[["Type","Markers",[["Var","m"]]]]]},{"rf_name":"lineContent","rf_type":["Type","LineContent",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",51],["Nothing"],"LineContent"],{"tde_typedef":{"td_name":"LineContent","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SimpleLineImage","cons_args":[["Type","Slash",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PolygonImage","cons_args":[["Type","_List",[["Type","ImageOffset",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PolylineImage","cons_args":[["Type","_List",[["Type","ImageOffset",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",69],["Nothing"],"BasicImage"],{"tde_typedef":{"td_name":"BasicImage","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"EmptyImage","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextImage","cons_args":[["Type","FontDef",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CircleImage","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RectImage","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EllipseImage","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RawImage","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",67],["Nothing"],"ImageSpan"],{"tde_typedef":{"td_name":"ImageSpan","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","Span",[]],["Type","Span",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",77],["Nothing"],"FontDef"],{"tde_typedef":{"td_name":"FontDef","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_FontDef",[],[{"rf_name":"fontfamily","rf_type":["Type","String",[]]},{"rf_name":"fontysize","rf_type":["Type","Real",[]]},{"rf_name":"fontstretch","rf_type":["Type","String",[]]},{"rf_name":"fontstyle","rf_type":["Type","String",[]]},{"rf_name":"fontvariant","rf_type":["Type","String",[]]},{"rf_name":"fontweight","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Graphics.Scalable.Internal",["Just",100],["Nothing"],"GridMajor"],{"tde_typedef":{"td_name":"GridMajor","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ColumnMajor","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RowMajor","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",98],["Nothing"],"GridDimension"],{"tde_typedef":{"td_name":"GridDimension","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Rows","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Columns","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",91],["Nothing"],"LookupSpan"],{"tde_typedef":{"td_name":"LookupSpan","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ColumnXSpan","cons_args":[["Type","ImageTag",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RowYSpan","cons_args":[["Type","ImageTag",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageXSpan","cons_args":[["Type","ImageTag",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageYSpan","cons_args":[["Type","ImageTag",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextXSpan","cons_args":[["Type","FontDef",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",99],["Nothing"],"GridLayout"],{"tde_typedef":{"td_name":"GridLayout","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple3",[["Type","GridMajor",[]],["Type","GridXLayout",[]],["Type","GridYLayout",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",102],["Nothing"],"GridYLayout"],{"tde_typedef":{"td_name":"GridYLayout","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TopToBottom","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BottomToTop","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",101],["Nothing"],"GridXLayout"],{"tde_typedef":{"td_name":"GridXLayout","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LeftToRight","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RightToLeft","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",104],["Nothing"],"XAlign"],{"tde_typedef":{"td_name":"XAlign","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AtLeft","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AtMiddleX","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AtRight","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","Platform","Graphics.Scalable.Internal",["Just",139],["Nothing"],"StrokeAttr"],{"tde_typedef":{"td_name":"StrokeAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_StrokeAttr",[],[{"rf_name":"stroke","rf_type":["Type","SVGColor",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",117],["Nothing"],"Compose"],{"tde_typedef":{"td_name":"Compose","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRCons",false,[{"cons_name":"AsGrid","cons_args":[["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]],["Type","_List",[["Type","_List",[["Type","ImageOffset",[]]]]]],["Type","_List",[["Type","_List",[["Type","XYAlign",[]]]]]],["Type","_List",[["Type","_List",[["Type","Image",[["Var","m"]]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AsCollage","cons_args":[["Type","_List",[["Type","ImageOffset",[]]]],["Type","_List",[["Type","Image",[["Var","m"]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AsOverlay","cons_args":[["Type","_List",[["Type","ImageOffset",[]]]],["Type","_List",[["Type","XYAlign",[]]]],["Type","_List",[["Type","Image",[["Var","m"]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",114],["Nothing"],"XYAlign"],{"tde_typedef":{"td_name":"XYAlign","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","XAlign",[]],["Type","YAlign",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",122],["Nothing"],"ImageAttr"],{"tde_typedef":{"td_name":"ImageAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRCons",false,[{"cons_name":"ImageStrokeAttr","cons_args":[["Type","StrokeAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageStrokeWidthAttr","cons_args":[["Type","StrokeWidthAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageXRadiusAttr","cons_args":[["Type","XRadiusAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageYRadiusAttr","cons_args":[["Type","YRadiusAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageStrokeOpacityAttr","cons_args":[["Type","OpacityAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageFillOpacityAttr","cons_args":[["Type","OpacityAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageFillAttr","cons_args":[["Type","FillAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageDashAttr","cons_args":[["Type","DashAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageOnClickAttr","cons_args":[["Type","OnClickAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageOnMouseDownAttr","cons_args":[["Type","OnMouseDownAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageOnMouseUpAttr","cons_args":[["Type","OnMouseUpAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageOnMouseOverAttr","cons_args":[["Type","OnMouseOverAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageOnMouseMoveAttr","cons_args":[["Type","OnMouseMoveAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageOnMouseOutAttr","cons_args":[["Type","OnMouseOutAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageDraggableAttr","cons_args":[["Type","DraggableAttr",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",141],["Nothing"],"XRadiusAttr"],{"tde_typedef":{"td_name":"XRadiusAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_XRadiusAttr",[],[{"rf_name":"xradius","rf_type":["Type","Span",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",140],["Nothing"],"StrokeWidthAttr"],{"tde_typedef":{"td_name":"StrokeWidthAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_StrokeWidthAttr",[],[{"rf_name":"strokewidth","rf_type":["Type","Span",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",142],["Nothing"],"YRadiusAttr"],{"tde_typedef":{"td_name":"YRadiusAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_YRadiusAttr",[],[{"rf_name":"yradius","rf_type":["Type","Span",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]]]]],["Bin",534,["Location","TCPIP","TCPDef",["Just",43],["Just",44],"TCP_Listeners"],{"tde_typedef":{"td_name":"TCP_Listeners","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TCP_Listeners","cons_args":[["Uniq",["Type","_List",[["Type","TCP_Listener",[]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",202,["Location","Platform","Text.HTML",["Just",359],["Nothing"],"SVGOpacityValue"],{"tde_typedef":{"td_name":"SVGOpacityValue","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","SVGNumber",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",79,["Location","Platform","Text.Encodings.Base64",["Just",12],["Nothing"],"Padding"],{"tde_typedef":{"td_name":"Padding","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",54,["Location","Platform","Graphics.Scalable.Internal",["Just",164],["Nothing"],"Slash"],{"tde_typedef":{"td_name":"Slash","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Slash","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Backslash","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",14,["Location","Platform","Graphics.Scalable.Internal",["Just",151],["Nothing"],"OnMouseOutAttr"],{"tde_typedef":{"td_name":"OnMouseOutAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_OnMouseOutAttr",[],[{"rf_name":"onmouseout","rf_type":["Func",[["Var","m"]],["Var","m"],[]]},{"rf_name":"local","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",7,["Location","Platform","Graphics.Scalable.Internal",["Just",147],["Nothing"],"OnMouseDownAttr"],{"tde_typedef":{"td_name":"OnMouseDownAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_OnMouseDownAttr",[],[{"rf_name":"onmousedown","rf_type":["Func",[["Var","m"]],["Var","m"],[]]},{"rf_name":"local","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",145],["Nothing"],"DashAttr"],{"tde_typedef":{"td_name":"DashAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_DashAttr",[],[{"rf_name":"dash","rf_type":["Type","_List",[["Type","Int",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",144],["Nothing"],"FillAttr"],{"tde_typedef":{"td_name":"FillAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_FillAttr",[],[{"rf_name":"fill","rf_type":["Type","SVGColor",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",146],["Nothing"],"OnClickAttr"],{"tde_typedef":{"td_name":"OnClickAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_OnClickAttr",[],[{"rf_name":"onclick","rf_type":["Func",[["Type","Int",[]]],["Func",[["Var","m"]],["Var","m"],[]],[]]},{"rf_name":"local","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",149],["Nothing"],"OnMouseOverAttr"],{"tde_typedef":{"td_name":"OnMouseOverAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_OnMouseOverAttr",[],[{"rf_name":"onmouseover","rf_type":["Func",[["Var","m"]],["Var","m"],[]]},{"rf_name":"local","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",148],["Nothing"],"OnMouseUpAttr"],{"tde_typedef":{"td_name":"OnMouseUpAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_OnMouseUpAttr",[],[{"rf_name":"onmouseup","rf_type":["Func",[["Var","m"]],["Var","m"],[]]},{"rf_name":"local","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",150],["Nothing"],"OnMouseMoveAttr"],{"tde_typedef":{"td_name":"OnMouseMoveAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_OnMouseMoveAttr",[],[{"rf_name":"onmousemove","rf_type":["Func",[["Var","m"]],["Var","m"],[]]},{"rf_name":"local","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",6,["Location","Platform","Graphics.Scalable.Internal",["Just",156],["Nothing"],"ImageTag"],{"tde_typedef":{"td_name":"ImageTag","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ImageTagUser","cons_args":[["Type","Int",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageTagSystem","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Graphics.Scalable.Internal",["Just",153],["Nothing"],"MaskAttr"],{"tde_typedef":{"td_name":"MaskAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_MaskAttr",[],[{"rf_name":"mask","rf_type":["Type","Image",[["Var","m"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",152],["Nothing"],"DraggableAttr"],{"tde_typedef":{"td_name":"DraggableAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRRecord","_DraggableAttr",[],[{"rf_name":"draggable","rf_type":["Type","Maybe",[["Func",[["Type","Maybe",[["Type","Set",[["Type","ImageTag",[]]]]]]],["Func",[["Type","Real",[]]],["Func",[["Type","Real",[]]],["Func",[["Var","m"]],["Var","m"],[]],[]],[]],[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",154],["Nothing"],"NoAttr"],{"tde_typedef":{"td_name":"NoAttr","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRCons",false,[{"cons_name":"NoAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Graphics.Scalable.Internal",["Just",162],["Nothing"],"Host"],{"tde_typedef":{"td_name":"Host","td_uniq":false,"td_args":[["Var","m"]],"td_rhs":["TDRCons",false,[{"cons_name":"NoHost","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Host","cons_args":[["Type","Image",[["Var","m"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Graphics.Scalable.Internal",["Just",160],["Nothing"],"ImageOffset"],{"tde_typedef":{"td_name":"ImageOffset","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","Span",[]],["Type","Span",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Tip"]]]],["Bin",39,["Location","Platform","System.OSError",["Just",10],["Nothing"],"MaybeOSErrorCode"],{"tde_typedef":{"td_name":"MaybeOSErrorCode","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","MaybeError",[["Type","OSErrorCode",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",23,["Location","Platform","Network.IP",["Just",11],["Just",12],"IPAddress"],{"tde_typedef":{"td_name":"IPAddress","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Just","Type which represents an IP (v4) address"],[],["Nothing"]]},["Bin",9,["Location","Platform","Internet.HTTP",["Just",48],["Nothing"],"HTTPProtocol"],{"tde_typedef":{"td_name":"HTTPProtocol","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"HTTPProtoHTTP","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HTTPProtoHTTPS","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Internet.HTTP",["Just",22],["Nothing"],"HTTPRequestHeader"],{"tde_typedef":{"td_name":"HTTPRequestHeader","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_HTTPRequestHeader",[],[{"rf_name":"req_method","rf_type":["Type","String",[]]},{"rf_name":"req_path","rf_type":["Type","String",[]]},{"rf_name":"req_query","rf_type":["Type","String",[]]},{"rf_name":"req_version","rf_type":["Type","String",[]]},{"rf_name":"req_headers","rf_type":["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","Internet.HTTP",["Just",8],["Nothing"],"HTTPMethod"],{"tde_typedef":{"td_name":"HTTPMethod","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"HTTP_GET","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HTTP_HEAD","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HTTP_PUT","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HTTP_DELETE","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HTTP_POST","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HTTP_OPTIONS","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HTTP_TRACE","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HTTP_CONNECT","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HTTP_CUSTOM","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Internet.HTTP",["Just",31],["Nothing"],"HTTPRequest"],{"tde_typedef":{"td_name":"HTTPRequest","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_HTTPRequest",[],[{"rf_name":"req_method","rf_type":["Type","HTTPMethod",[]]},{"rf_name":"req_path","rf_type":["Type","String",[]]},{"rf_name":"req_query","rf_type":["Type","String",[]]},{"rf_name":"req_version","rf_type":["Type","String",[]]},{"rf_name":"req_protocol","rf_type":["Type","HTTPProtocol",[]]},{"rf_name":"req_headers","rf_type":["Type","Map",[["Type","String",[]],["Type","String",[]]]]},{"rf_name":"req_data","rf_type":["Type","String",[]]},{"rf_name":"arg_get","rf_type":["Type","Map",[["Type","String",[]],["Type","String",[]]]]},{"rf_name":"arg_post","rf_type":["Type","Map",[["Type","String",[]],["Type","String",[]]]]},{"rf_name":"arg_cookies","rf_type":["Type","Map",[["Type","String",[]],["Type","String",[]]]]},{"rf_name":"arg_uploads","rf_type":["Type","Map",[["Type","String",[]],["Type","HTTPUpload",[]]]]},{"rf_name":"server_name","rf_type":["Type","String",[]]},{"rf_name":"server_port","rf_type":["Type","Int",[]]},{"rf_name":"client_name","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Internet.HTTP",["Just",59],["Nothing"],"HTTPResponseHeader"],{"tde_typedef":{"td_name":"HTTPResponseHeader","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_HTTPResponseHeader",[],[{"rf_name":"rsp_version","rf_type":["Type","String",[]]},{"rf_name":"rsp_code","rf_type":["Type","Int",[]]},{"rf_name":"rsp_reason","rf_type":["Type","String",[]]},{"rf_name":"rsp_headers","rf_type":["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","Internet.HTTP",["Just",50],["Nothing"],"HTTPResponse"],{"tde_typedef":{"td_name":"HTTPResponse","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_HTTPResponse",[],[{"rf_name":"rsp_version","rf_type":["Type","String",[]]},{"rf_name":"rsp_code","rf_type":["Type","Int",[]]},{"rf_name":"rsp_reason","rf_type":["Type","String",[]]},{"rf_name":"rsp_headers","rf_type":["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]},{"rf_name":"rsp_data","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",3,["Location","Platform","Internet.HTTP.CGI",["Just",5],["Nothing"],"CGIOption"],{"tde_typedef":{"td_name":"CGIOption","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CGIOptStaticFallback","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CGIOptParseArguments","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Internet.HTTP",["Just",66],["Nothing"],"HTTPUpload"],{"tde_typedef":{"td_name":"HTTPUpload","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_HTTPUpload",[],[{"rf_name":"upl_name","rf_type":["Type","String",[]]},{"rf_name":"upl_filename","rf_type":["Type","String",[]]},{"rf_name":"upl_mimetype","rf_type":["Type","String",[]]},{"rf_name":"upl_content","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Math.Geometry",["Just",7],["Nothing"],"Angle"],{"tde_typedef":{"td_name":"Angle","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Deg","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Rad","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",13,["Location","Platform","System.IO",["Just",8],["Just",10],"IO"],{"tde_typedef":{"td_name":"IO","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"IO","cons_args":[["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","World",[]]]]]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",8,["Location","Platform","System.GetOpt",["Just",42],["Nothing"],"ArgOrder"],{"tde_typedef":{"td_name":"ArgOrder","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"RequireOrder","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Permute","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ReturnInOrder","cons_args":[["Func",[["Type","String",[]]],["Var","a"],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",5,["Location","Platform","System.File",["Just",75],["Nothing"],"FileInfo"],{"tde_typedef":{"td_name":"FileInfo","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_FileInfo",[],[{"rf_name":"directory","rf_type":["Type","Bool",[]]},{"rf_name":"creationTime","rf_type":["Type","Tm",[]]},{"rf_name":"lastModifiedTime","rf_type":["Type","Tm",[]]},{"rf_name":"lastAccessedTime","rf_type":["Type","Tm",[]]},{"rf_name":"sizeHigh","rf_type":["Type","Int",[]]},{"rf_name":"sizeLow","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","Platform","StdLibMisc",["Just",28],["Just",14],"Date"],{"tde_typedef":{"td_name":"Date","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Date",[],[{"rf_name":"year","rf_type":["Type","Int",[]]},{"rf_name":"month","rf_type":["Type","Int",[]]},{"rf_name":"day","rf_type":["Type","Int",[]]},{"rf_name":"dayNr","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","StdLibMisc",["Just",23],["Just",9],"Time"],{"tde_typedef":{"td_name":"Time","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Time",[],[{"rf_name":"hours","rf_type":["Type","Int",[]]},{"rf_name":"minutes","rf_type":["Type","Int",[]]},{"rf_name":"seconds","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System.File",["Just",10],["Nothing"],"FileError"],{"tde_typedef":{"td_name":"FileError","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CannotOpen","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CannotClose","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IOError","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","System.FilePath",["Just",6],["Nothing"],"FilePath"],{"tde_typedef":{"td_name":"FilePath","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","System.GetOpt",["Just",55],["Nothing"],"OptDescr"],{"tde_typedef":{"td_name":"OptDescr","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Option","cons_args":[["Type","_List",[["Type","Char",[]]]],["Type","_List",[["Type","String",[]]]],["Type","ArgDescr",[["Var","a"]]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","System.GetOpt",["Just",63],["Nothing"],"ArgDescr"],{"tde_typedef":{"td_name":"ArgDescr","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"NoArg","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ReqArg","cons_args":[["Func",[["Type","String",[]]],["Var","a"],[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OptArg","cons_args":[["Func",[["Type","Maybe",[["Type","String",[]]]]],["Var","a"],[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",4,["Location","Platform","System.OSError",["Just",8],["Nothing"],"OSError"],{"tde_typedef":{"td_name":"OSError","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","OSErrorCode",[]],["Type","OSErrorMessage",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","Platform","System.OSError",["Just",6],["Nothing"],"OSErrorMessage"],{"tde_typedef":{"td_name":"OSErrorMessage","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","System.OSError",["Just",5],["Nothing"],"OSErrorCode"],{"tde_typedef":{"td_name":"OSErrorCode","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","System.OSError",["Just",9],["Nothing"],"MaybeOSError"],{"tde_typedef":{"td_name":"MaybeOSError","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","MaybeError",[["Type","OSError",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]]],["Bin",15,["Location","Platform","System.Process",["Just",23],["Just",25],"ReadPipe"],{"tde_typedef":{"td_name":"ReadPipe","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",4,["Location","Platform","System.Process",["Just",17],["Nothing"],"ProcessIO"],{"tde_typedef":{"td_name":"ProcessIO","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ProcessIO",[],[{"rf_name":"stdIn","rf_type":["Type","WritePipe",[]]},{"rf_name":"stdOut","rf_type":["Type","ReadPipe",[]]},{"rf_name":"stdErr","rf_type":["Type","ReadPipe",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",2,["Location","Platform","System.Platform",["Just",5],["Nothing"],"Platform"],{"tde_typedef":{"td_name":"Platform","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Linux32","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Linux64","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Mac","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Windows32","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Windows64","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","System.Process",["Just",14],["Nothing"],"ProcessHandle"],{"tde_typedef":{"td_name":"ProcessHandle","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ProcessHandle",[],[{"rf_name":"pid","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","System.Process",["Just",22],["Just",24],"WritePipe"],{"tde_typedef":{"td_name":"WritePipe","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",10,["Location","Platform","System._Posix",["Just",61],["Nothing"],"Stat"],{"tde_typedef":{"td_name":"Stat","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Stat",[],[{"rf_name":"st_dev","rf_type":["Type","Int",[]]},{"rf_name":"st_ino","rf_type":["Type","Int",[]]},{"rf_name":"st_mode","rf_type":["Type","Int",[]]},{"rf_name":"st_nlink","rf_type":["Type","Int",[]]},{"rf_name":"st_uid","rf_type":["Type","Int",[]]},{"rf_name":"st_gid","rf_type":["Type","Int",[]]},{"rf_name":"st_rdev","rf_type":["Type","Int",[]]},{"rf_name":"st_size","rf_type":["Type","Int",[]]},{"rf_name":"st_blocks","rf_type":["Type","Int",[]]},{"rf_name":"st_blksize","rf_type":["Type","Int",[]]},{"rf_name":"st_ctimespec","rf_type":["Type","Int",[]]},{"rf_name":"st_mtimespec","rf_type":["Type","Int",[]]},{"rf_name":"st_atimespec","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",6,["Location","Platform","System.Time",["Just",33],["Nothing"],"Timestamp"],{"tde_typedef":{"td_name":"Timestamp","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Timestamp","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","The time data type represents a number of seconds since the epoch (1-1-1970)."],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Platform","System.Time",["Just",19],["Nothing"],"Tm"],{"tde_typedef":{"td_name":"Tm","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Tm",[],[{"rf_name":"sec","rf_type":["Type","Int",[]]},{"rf_name":"min","rf_type":["Type","Int",[]]},{"rf_name":"hour","rf_type":["Type","Int",[]]},{"rf_name":"mday","rf_type":["Type","Int",[]]},{"rf_name":"mon","rf_type":["Type","Int",[]]},{"rf_name":"year","rf_type":["Type","Int",[]]},{"rf_name":"wday","rf_type":["Type","Int",[]]},{"rf_name":"yday","rf_type":["Type","Int",[]]},{"rf_name":"isdst","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Just","The Tm record structure contains date and time information\nin a broken down format."],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","System.TTS",["Just",5],["Nothing"],"Voice"],{"tde_typedef":{"td_name":"Voice","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Male1","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Male2","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Male3","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Female1","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Female2","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Female3","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ChildMale","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ChildFemale","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Platform","System._Pointer",["Just",11],["Nothing"],"Pointer"],{"tde_typedef":{"td_name":"Pointer","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Just","Low level reading from and writing to memory using pointers and offsets.\nWARNING:\nThis module provides unsafe and impure functions that can really mess up\nyour program when used incorrectly.\nOnly use these if you understand the risks of these low-level operations."],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","System.Time",["Just",37],["Nothing"],"Clock"],{"tde_typedef":{"td_name":"Clock","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Clock","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","The clock data type represents a number of CPU clock ticks."],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","System._Pointer",["Just",12],["Nothing"],"Offset"],{"tde_typedef":{"td_name":"Offset","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Text.Encodings.Base64",["Just",10],["Nothing"],"Alphabet"],{"tde_typedef":{"td_name":"Alphabet","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_#Array",[["Type","Char",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Text.Encodings.Base64",["Just",9],["Nothing"],"Length"],{"tde_typedef":{"td_name":"Length","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Encodings.Base64",["Just",11],["Nothing"],"Offset"],{"tde_typedef":{"td_name":"Offset","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]]]]],["Bin",24,["Location","Platform","Text.HTML",["Just",274],["Nothing"],"SVGAttr"],{"tde_typedef":{"td_name":"SVGAttr","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AlignmentBaselineAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BaseProfileAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ContentScriptTypeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ClipPathAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CxAttr","cons_args":[["Type","SVGCoordinate",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CyAttr","cons_args":[["Type","SVGCoordinate",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DominantBaselineAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ExternalResourcesRequiredAttr","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FillAttr","cons_args":[["Type","SVGPaint",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FillOpacityAttr","cons_args":[["Type","SVGFillOpacity",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FillRuleAttr","cons_args":[["Type","SVGFillRule",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FontFamilyAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FontSizeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FontStyleAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FontStretchAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FontVariantAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FontWeightAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LengthAdjustAttr","cons_args":[["Type","SVGLengthAdjust",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MarkerStartAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MarkerMidAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MarkerEndAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MarkerHeightAttr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MarkerWidthAttr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MaskAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OffsetAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OrientAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PointsAttr","cons_args":[["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PreserveAspectRatioAttr","cons_args":[["Type","Maybe",[["Type","SVGDefer",[]]]],["Type","Maybe",[["Type","SVGAlign",[]]]],["Type","Maybe",[["Type","SVGMeetOrSlice",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RAttr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RefXAttr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RefYAttr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RxAttr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RyAttr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StopColorAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StopOpacityAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrokeAttr","cons_args":[["Type","SVGPaint",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrokeDashArrayAttr","cons_args":[["Type","SVGStrokeDashArray",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrokeDashOffsetAttr","cons_args":[["Type","SVGStrokeDashOffset",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrokeLineCapAttr","cons_args":[["Type","SVGLineCap",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrokeLineJoinAttr","cons_args":[["Type","SVGLineJoin",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrokeMiterLimitAttr","cons_args":[["Type","SVGStrokeMiterLimit",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrokeOpacityAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrokeWidthAttr","cons_args":[["Type","SVGStrokeWidth",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextAnchorAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextLengthAttr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextRenderingAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TransformAttr","cons_args":[["Type","_List",[["Type","SVGTransform",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"VersionAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ViewBoxAttr","cons_args":[["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XAttr","cons_args":[["Type","SVGCoordinate",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"X1Attr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"X2Attr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XLinkHRefAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"YAttr","cons_args":[["Type","SVGCoordinate",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Y1Attr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Y2Attr","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ZoomAndPanAttr","cons_args":[["Type","SVGZoomAndPan",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",8,["Location","Platform","Text.Encodings.MIME",["Just",10],["Nothing"],"MIMEType"],{"tde_typedef":{"td_name":"MIMEType","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",4,["Location","Platform","Text.Encodings.MIME",["Just",8],["Nothing"],"MIMEBody"],{"tde_typedef":{"td_name":"MIMEBody","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","Platform","Text.Encodings.MIME",["Just",7],["Nothing"],"MIMEHeader"],{"tde_typedef":{"td_name":"MIMEHeader","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Text.Encodings.MIME",["Just",6],["Nothing"],"MIMEBoundary"],{"tde_typedef":{"td_name":"MIMEBoundary","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Just","This module provides functions for working with MIME messages and MIME types."],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","Platform","Text.Encodings.MIME",["Just",9],["Nothing"],"MIMEPart"],{"tde_typedef":{"td_name":"MIMEPart","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","_List",[["Type","MIMEHeader",[]]]],["Type","MIMEBody",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",124],["Nothing"],"HtmlAttr"],{"tde_typedef":{"td_name":"HtmlAttr","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AbbrAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AcceptAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AcceptcharsetAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AccesskeyAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ActionAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AlignAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AlinkAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AltAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ArchiveAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AxisAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BackgroundAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BgcolorAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BorderAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CellspacingAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CellpaddingAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CharAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CharoffAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CharsetAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CheckedAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CiteAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ClassAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ClassidAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ColorAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ColsAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ColspanAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CodebaseAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CodetypeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ContentAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CompactAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CoordsAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DataAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DatetimeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DeclareAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DeferAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DirAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DisabledAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DXAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DYAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EnctypeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FaceAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ForAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FrameAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FrameborderAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HeadersAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HeightAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HrefAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HreflangAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HttpequivAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HspaceAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IdAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IsmapAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LabelAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LangAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LanguageAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LinkAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LongdescAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MarginheightAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MarginwidthAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MaxlengthAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MediaAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MethodAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MultipleAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NameAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NohrefAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NoshadeAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NowrapAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnblurAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnchangeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnclickAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OndblclickAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnfocusAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnloadAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnmousedownAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnmousemoveAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnmouseoutAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnmouseoverAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnmouseupAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnkeydownAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnkeypressAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnkeyupAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnresetAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnselectAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnsubmitAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnunloadAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ProfileAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PromptAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ReadonlyAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RelAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RevAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RowsAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RowspanAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RulesAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RXAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RYAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SchemeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ScopeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ScrollingAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectedAttr","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ShapeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SizeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SpanAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SrcAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StandbyAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StartAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StyleAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SummaryAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TabindexAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TargetAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TitleAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TypeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UsemapAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ValignAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ValueAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ValuetypeAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"VlinkAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"VspaceAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"WidthAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XmllangAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XmlspaceAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XmlnsAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XmlnsXlinkAttr","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","This type provides an enumeration of all attributes that can occur in html tags."],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.HTML",["Just",20],["Nothing"],"HtmlTag"],{"tde_typedef":{"td_name":"HtmlTag","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Text","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Html","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ATag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AbbrTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AcronymTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AddressTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AppletTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AreaTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BaseTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BasefontTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BdoTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BigTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BlockquoteTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BodyTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BrTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ButtonTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CaptionTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CanvasTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CenterTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CircleTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CiteTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CodeTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ColTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ColgroupTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DdTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DelTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DfnTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DirTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DivTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DlTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DtTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EllipseTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EmTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FieldsetTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FontTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FormTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"H1Tag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"H2Tag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"H3Tag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"H4Tag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"H5Tag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"H6Tag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HeadTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HrTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HtmlTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ITag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IframeTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImgTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"InputTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"InsTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IsindexTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"KdbTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LabelTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LegendTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LiTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LinkTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MapTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MenuTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MetaTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NoframesTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NoscriptTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ObjectTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OlTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OptgroupTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OptionTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ParamTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PreTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"QTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RectTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"STag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SampTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ScriptTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SmallTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SpanTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrikeTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrongTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StyleTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SubTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SupTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SvgTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TableTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TbodyTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TdTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextareaTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TfootTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ThTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TheadTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TitleTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TrTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TspanTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TtTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UlTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"VarTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DetailsTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SummaryTag","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","HtmlTag",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","This type provides an enumeration of all html tags."],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",250],["Nothing"],"SVGElt"],{"tde_typedef":{"td_name":"SVGElt","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SVGElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CircleElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ClipPathElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DefsElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EllipseElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ImageElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LinearGradientElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LineElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MarkerElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MaskElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PathElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PolygonElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PolylineElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RectElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RadialGradientElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","_List",[["Type","SVGElt",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StopElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextElt","cons_args":[["Type","_List",[["Type","HtmlAttr",[]]]],["Type","_List",[["Type","SVGAttr",[]]]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RawElt","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","This type provides an enumeration of (not yet) all SVG elements."],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",15,["Location","Platform","Text.HTML",["Just",350],["Nothing"],"SVGICCColor"],{"tde_typedef":{"td_name":"SVGICCColor","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","String",[]],["Type","_List",[["Type","SVGNumber",[]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",7,["Location","Platform","Text.HTML",["Just",345],["Nothing"],"SVGDefer"],{"tde_typedef":{"td_name":"SVGDefer","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SVGDefer","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Text.HTML",["Just",342],["Nothing"],"SVGColor"],{"tde_typedef":{"td_name":"SVGColor","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SVGRGB","cons_args":[["Type","Int",[]],["Type","Int",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SVGColorText","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.HTML",["Just",333],["Nothing"],"SVGAlign"],{"tde_typedef":{"td_name":"SVGAlign","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"XMinYMin","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XMidYMin","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XMaxYMin","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XMinYMid","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XMidYMid","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XMaxYMid","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XMinYMax","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XMidYMax","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XMaxYMax","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",344],["Nothing"],"SVGCoordinate"],{"tde_typedef":{"td_name":"SVGCoordinate","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","SVGLength",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",348],["Nothing"],"SVGFillRule"],{"tde_typedef":{"td_name":"SVGFillRule","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"FillNonzero","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FillEvenodd","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FillInherit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.HTML",["Just",346],["Nothing"],"SVGFillOpacity"],{"tde_typedef":{"td_name":"SVGFillOpacity","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"FillOpacity","cons_args":[["Type","SVGNumber",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FillOpacityInherit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",349],["Nothing"],"SVGFuncIRI"],{"tde_typedef":{"td_name":"SVGFuncIRI","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"IRI","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","Platform","Text.HTML",["Just",354],["Nothing"],"SVGLineCap"],{"tde_typedef":{"td_name":"SVGLineCap","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CapButt","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CapRound","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CapSquare","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CapInherit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Text.HTML",["Just",352],["Nothing"],"SVGLengthAdjust"],{"tde_typedef":{"td_name":"SVGLengthAdjust","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Spacing","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SpacingAndGlyphs","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.HTML",["Just",351],["Nothing"],"SVGLength"],{"tde_typedef":{"td_name":"SVGLength","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","SVGNumber",[]],["Type","SVGLengthUnit",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",353],["Nothing"],"SVGLengthUnit"],{"tde_typedef":{"td_name":"SVGLengthUnit","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"EM","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EX","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PX","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IN","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CM","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MM","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PT","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PC","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PERCENT","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.HTML",["Just",356],["Nothing"],"SVGMeetOrSlice"],{"tde_typedef":{"td_name":"SVGMeetOrSlice","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SVGMeet","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SVGSlice","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.HTML",["Just",355],["Nothing"],"SVGLineJoin"],{"tde_typedef":{"td_name":"SVGLineJoin","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"JoinMiter","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JoinRound","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JoinBevel","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JoinInherit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",358],["Nothing"],"SVGNumber"],{"tde_typedef":{"td_name":"SVGNumber","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]]]]],["Bin",122,["Location","Platform","Text.Show",["Just",8],["Just",11],"ShowS"],{"tde_typedef":{"td_name":"ShowS","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Func",[["Type","String",[]]],["Type","String",[]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",32,["Location","Platform","Text.PPrint",["Just",132],["Just",296],"Doc"],{"tde_typedef":{"td_name":"Doc","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",9,["Location","Platform","Text.HTML",["Just",370],["Nothing"],"SVGStrokeMiterLimit"],{"tde_typedef":{"td_name":"SVGStrokeMiterLimit","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"MiterLimit","cons_args":[["Type","SVGNumber",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MiterLimitInherit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Text.HTML",["Just",365],["Nothing"],"SVGStrokeDashArray"],{"tde_typedef":{"td_name":"SVGStrokeDashArray","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"NoDash","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DashArray","cons_args":[["Type","_List",[["Type","String",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"InheritDash","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.HTML",["Just",360],["Nothing"],"SVGPaint"],{"tde_typedef":{"td_name":"SVGPaint","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"PaintNone","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PaintCurrentColor","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PaintColor","cons_args":[["Type","SVGColor",[]],["Type","Maybe",[["Type","SVGICCColor",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PaintFuncIRI","cons_args":[["Type","SVGFuncIRI",[]],["Type","Maybe",[["Type","SVGPaint",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PaintInherit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.HTML",["Just",368],["Nothing"],"SVGStrokeDashOffset"],{"tde_typedef":{"td_name":"SVGStrokeDashOffset","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"DashOffsetLength","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DashOffsetInherit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",5,["Location","Platform","Text.HTML",["Just",380],["Nothing"],"SVGZoomAndPan"],{"tde_typedef":{"td_name":"SVGZoomAndPan","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Disable","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Magnify","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Platform","Text.HTML",["Just",374],["Nothing"],"SVGTransform"],{"tde_typedef":{"td_name":"SVGTransform","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"MatrixTransform","cons_args":[["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]],["Type","SVGNumber",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TranslateTransform","cons_args":[["Type","SVGNumber",[]],["Type","SVGNumber",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ScaleTransform","cons_args":[["Type","SVGNumber",[]],["Type","SVGNumber",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RotateTransform","cons_args":[["Type","SVGNumber",[]],["Type","Maybe",[["Type","_Tuple2",[["Type","SVGNumber",[]],["Type","SVGNumber",[]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SkewXTransform","cons_args":[["Type","SVGNumber",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SkewYTransform","cons_args":[["Type","SVGNumber",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.HTML",["Just",372],["Nothing"],"SVGStrokeWidth"],{"tde_typedef":{"td_name":"SVGStrokeWidth","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"StrokeWidthLength","cons_args":[["Type","SVGLength",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrokeWidthInherit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Location","Platform","Text.JSON",["Just",14],["Nothing"],"JSONNode"],{"tde_typedef":{"td_name":"JSONNode","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"JSONNull","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JSONBool","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JSONInt","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JSONReal","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JSONString","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JSONArray","cons_args":[["Type","_List",[["Type","JSONNode",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JSONObject","cons_args":[["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","JSONNode",[]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JSONRaw","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"JSONError","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Platform","Text.LaTeX",["Just",7],["Nothing"],"LaTeX"],{"tde_typedef":{"td_name":"LaTeX","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Text","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RawText","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Chapter","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Section","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Subsection","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Subsubsection","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Paragraph","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Emph","cons_args":[["Type","_List",[["Type","LaTeX",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextBf","cons_args":[["Type","_List",[["Type","LaTeX",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TextIt","cons_args":[["Type","_List",[["Type","LaTeX",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CleanCode","cons_args":[["Type","_List",[["Type","String",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CleanInline","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Itemize","cons_args":[["Type","_List",[["Type","LaTeX",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Item","cons_args":[["Type","_List",[["Type","LaTeX",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Label","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Cite","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Index","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EnDash","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EmDash","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NewParagraph","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Environment","cons_args":[["Type","String",[]],["Type","_List",[["Type","LaTeX",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","This module provides data types for construction of very simple LaTeX documents."],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",22,["Location","Platform","Text.Parsers.Simple.Core",["Just",9],["Nothing"],"Error"],{"tde_typedef":{"td_name":"Error","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",8,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",13],["Just",14],"CParser"],{"tde_typedef":{"td_name":"CParser","td_uniq":false,"td_args":[["Var","s"],["Var","r"],["Var","t"]],"td_rhs":["TDRCons",false,[{"cons_name":"CParser","cons_args":[["Func",[["Type","SucCont",[["Var","s"],["Var","r"],["Var","t"]]]],["Func",[["Type","XorCont",[["Var","s"],["Var","t"]]]],["Func",[["Type","AltCont",[["Var","s"],["Var","t"]]]],["Type","Parser",[["Var","s"],["Var","t"]]],[]],[]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",10],["Just",11],"Parser"],{"tde_typedef":{"td_name":"Parser","td_uniq":false,"td_args":[["Var","s"],["Var","r"]],"td_rhs":["TDRSynonym",["Func",[["Type","_List",[["Var","s"]]]],["Type","ParsResult",[["Var","s"],["Var","r"]]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Text.PPrint",["Just",133],["Just",306],"SimpleDoc"],{"tde_typedef":{"td_name":"SimpleDoc","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",11],["Just",12],"ParsResult"],{"tde_typedef":{"td_name":"ParsResult","td_uniq":false,"td_args":[["Var","s"],["Var","r"]],"td_rhs":["TDRSynonym",["Type","_List",[["Type","_Tuple2",[["Type","_List",[["Var","s"]]],["Var","r"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",4,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",15],["Just",16],"XorCont"],{"tde_typedef":{"td_name":"XorCont","td_uniq":false,"td_args":[["Var","s"],["Var","t"]],"td_rhs":["TDRSynonym",["Func",[["Type","AltCont",[["Var","s"],["Var","t"]]]],["Type","ParsResult",[["Var","s"],["Var","t"]]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",14],["Just",15],"SucCont"],{"tde_typedef":{"td_name":"SucCont","td_uniq":false,"td_args":[["Var","s"],["Var","r"],["Var","t"]],"td_rhs":["TDRSynonym",["Func",[["Var","r"]],["Func",[["Type","XorCont",[["Var","s"],["Var","t"]]]],["Func",[["Type","AltCont",[["Var","s"],["Var","t"]]]],["Type","Parser",[["Var","s"],["Var","t"]]],[]],[]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",2,["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",16],["Just",17],"AltCont"],{"tde_typedef":{"td_name":"AltCont","td_uniq":false,"td_args":[["Var","s"],["Var","t"]],"td_rhs":["TDRSynonym",["Type","ParsResult",[["Var","s"],["Var","t"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","Platform","Text.Parsers.MetarDemo.MetarParser",["Just",8],["Just",284],"MetarData"],{"tde_typedef":{"td_name":"MetarData","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",13,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",136],["Just",283],"ArrowSeq"],{"tde_typedef":{"td_name":"ArrowSeq","td_uniq":false,"td_args":[["Var","s"],["Var","u"],["Var","r"],["Var","t"]],"td_rhs":["TDRCons",false,[{"cons_name":"<++->","cons_args":[["Type","Parser",[["Var","s"],["Var","t"],["Func",[["Var","r"]],["Var","u"],[]]]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]]],"cons_exi_vars":[],"cons_context":[],"cons_priority":["LeftAssoc",6]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",9,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",19],["Just",75],"SugPosition"],{"tde_typedef":{"td_name":"SugPosition","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"At","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EndAt","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",5,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",15],["Just",40],"SymbolType"],{"tde_typedef":{"td_name":"SymbolType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Whole","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Slice","cons_args":[["Type","String",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",10],["Just",23],"Parsable"],{"tde_typedef":{"td_name":"Parsable","td_uniq":false,"td_args":[["Var","s"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",1,["Location","Platform","Text.Parsers.Simple.Core",["Just",10],["Just",12],"Parser"],{"tde_typedef":{"td_name":"Parser","td_uniq":false,"td_args":[["Var","t"],["Var","a"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",11],["Just",28],"Parser"],{"tde_typedef":{"td_name":"Parser","td_uniq":false,"td_args":[["Var","s"],["Var","t"],["Var","r"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",17],["Just",39],"SymbolTypes"],{"tde_typedef":{"td_name":"SymbolTypes","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","SymbolType",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",39],["Just",112],"PAlt"],{"tde_typedef":{"td_name":"PAlt","td_uniq":false,"td_args":[["Var","f"],["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Seq","cons_args":[["Cons","f",[["Func",[["Var","b"]],["Var","a"],[]]]],["Type","Gram",[["Var","f"],["Var","b"]]]],"cons_exi_vars":["b"],"cons_context":[]},{"cons_name":"Bind","cons_args":[["Cons","f",[["Var","b"]]],["Func",[["Var","b"]],["Type","Gram",[["Var","f"],["Var","a"]]],[]]],"cons_exi_vars":["b"],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",37],["Just",110],"Gram"],{"tde_typedef":{"td_name":"Gram","td_uniq":false,"td_args":[["Var","f"],["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Gram","cons_args":[["Type","_List",[["Type","PAlt",[["Var","f"],["Var","a"]]]]],["Type","Maybe",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",133],["Just",282],"MonadicSeq"],{"tde_typedef":{"td_name":"MonadicSeq","td_uniq":false,"td_args":[["Var","s"],["Var","r"],["Var","u"],["Var","t"]],"td_rhs":["TDRCons",false,[{"cons_name":"<&->","cons_args":[["Type","Parser",[["Var","s"],["Var","t"],["Var","u"]]],["Func",[["Var","u"]],["Type","Parser",[["Var","s"],["Var","t"],["Var","r"]]],[]]],"cons_exi_vars":[],"cons_context":[],"cons_priority":["RightAssoc",6]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",201],["Just",453],"RoseNode"],{"tde_typedef":{"td_name":"RoseNode","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"RoseLeaf","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RoseTwig","cons_args":[["Var","a"],["Type","Rose",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",197],["Just",451],"Result"],{"tde_typedef":{"td_name":"Result","td_uniq":false,"td_args":[["Var","r"]],"td_rhs":["TDRCons",false,[{"cons_name":"Err","cons_args":[["Type","SymbolTypes",[]],["Type","Rose",[["Type","_Tuple2",[["Type","String",[]],["Type","_List",[["Type","SugPosition",[]]]]]]]],["Type","_List",[["Type","SugPosition",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Succ","cons_args":[["Type","_List",[["Var","r"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",206],["Just",458],"Rose"],{"tde_typedef":{"td_name":"Rose","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","_List",[["Type","RoseNode",[["Var","a"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]]]],["Bin",89,["Location","Sapl","Sapl.SaplParser",["Just",21],["Nothing"],"ErrorMsg"],{"tde_typedef":{"td_name":"ErrorMsg","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",32,["Location","Platform","Text.XML",["Just",22],["Nothing"],"XMLURI"],{"tde_typedef":{"td_name":"XMLURI","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",11,["Location","Platform","Text.XML",["Just",14],["Nothing"],"XMLNode"],{"tde_typedef":{"td_name":"XMLNode","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"XMLElem","cons_args":[["Type","XMLQName",[]],["Type","_List",[["Type","XMLAttr",[]]]],["Type","_List",[["Type","XMLNode",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"XMLText","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",7,["Location","Platform","Text.Unicode",["Just",6],["Nothing"],"UString"],{"tde_typedef":{"td_name":"UString","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","UChar",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","Platform","Text.URI",["Just",17],["Nothing"],"URI"],{"tde_typedef":{"td_name":"URI","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_URI",[],[{"rf_name":"uriScheme","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"uriUserInfo","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"uriRegName","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"uriPort","rf_type":["Type","Maybe",[["Type","Int",[]]]]},{"rf_name":"uriPath","rf_type":["Type","String",[]]},{"rf_name":"uriQuery","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"uriFragment","rf_type":["Type","Maybe",[["Type","String",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Platform","Text.StringAppender",["Just",11],["Just",6],"StringAppender"],{"tde_typedef":{"td_name":"StringAppender","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Location","Platform","Text.Unicode.UChar",["Just",5],["Just",8],"UChar"],{"tde_typedef":{"td_name":"UChar","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstractSynonym",["Type","Int",[]]]}},["Bin",2,["Location","Platform","Text.Unicode.Encodings.JS",["Just",7],["Just",10],"JSLit"],{"tde_typedef":{"td_name":"JSLit","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Bin",1,["Location","Platform","Text.Unicode.Encodings.UTF8",["Just",18],["Just",9],"UTF8"],{"tde_typedef":{"td_name":"UTF8","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",1,["Location","Platform","Text.XML",["Just",12],["Nothing"],"XMLDoc"],{"tde_typedef":{"td_name":"XMLDoc","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"XMLDoc","cons_args":[["Type","Maybe",[["Type","XMLURI",[]]]],["Type","_List",[["Type","_Tuple2",[["Type","XMLNamespacePrefix",[]],["Type","XMLURI",[]]]]]],["Type","XMLNode",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","Platform","Text.XML",["Just",19],["Nothing"],"XMLQName"],{"tde_typedef":{"td_name":"XMLQName","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"XMLQName","cons_args":[["Type","Maybe",[["Type","XMLNamespacePrefix",[]]]],["Type","XMLName",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.XML",["Just",17],["Nothing"],"XMLAttr"],{"tde_typedef":{"td_name":"XMLAttr","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"XMLAttr","cons_args":[["Type","XMLQName",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.XML",["Just",21],["Nothing"],"XMLNamespacePrefix"],{"tde_typedef":{"td_name":"XMLNamespacePrefix","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",20,["Location","Platform","Text.XML",["Just",55],["Nothing"],"XMLBoolAttribute"],{"tde_typedef":{"td_name":"XMLBoolAttribute","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"XMLBoolAttribute","cons_args":[["Type","XMLQName",[]],["Type","Bool",[]],["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",6,["Location","Platform","Text.XML",["Just",52],["Nothing"],"XMLCharAttribute"],{"tde_typedef":{"td_name":"XMLCharAttribute","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"XMLCharAttribute","cons_args":[["Type","XMLQName",[]],["Type","Char",[]],["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Platform","Text.XML",["Just",47],["Just",335],"XMLEncodeResult"],{"tde_typedef":{"td_name":"XMLEncodeResult","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",1,["Location","Platform","Text.XML",["Just",23],["Nothing"],"XMLName"],{"tde_typedef":{"td_name":"XMLName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Platform","Text.XML",["Just",51],["Nothing"],"XMLIntAttribute"],{"tde_typedef":{"td_name":"XMLIntAttribute","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"XMLIntAttribute","cons_args":[["Type","XMLQName",[]],["Type","Int",[]],["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Platform","Text.XML",["Just",54],["Nothing"],"XMLStringAttribute"],{"tde_typedef":{"td_name":"XMLStringAttribute","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"XMLStringAttribute","cons_args":[["Type","XMLQName",[]],["Type","String",[]],["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Platform","Text.XML",["Just",53],["Nothing"],"XMLRealAttribute"],{"tde_typedef":{"td_name":"XMLRealAttribute","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"XMLRealAttribute","cons_args":[["Type","XMLQName",[]],["Type","Real",[]],["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]]],["Bin",13,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",34],["Nothing"],"LoaderFunction"],{"tde_typedef":{"td_name":"LoaderFunction","td_uniq":false,"td_args":[["Var","st"]],"td_rhs":["TDRSynonym",["Func",[["Var","st"]],["Func",[["Type","String",[]]],["Func",[["Type","FuncTypeMap",[]]],["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple4",[["Type","Maybe",[["Type","LineType",[]]]],["Type","FuncTypeMap",[]],["Var","st"],["Uniq",["Type","World",[]]]]]],[]],[]],[]],[]]]},"tde_doc":["TypeDoc",["Just","Loads a function by its name, that is: String -> Maybe LineType + side effects"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",7,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",21],["Nothing"],"FuncTypeMap"],{"tde_typedef":{"td_name":"FuncTypeMap","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Map",[["Type","String",[]],["Type","LineType",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",4,["Location","Sapl","Sapl.Linker.LazyLinker",["Just",20],["Just",19],"LoaderStateExt"],{"tde_typedef":{"td_name":"LoaderStateExt","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple3",[["Type","LoaderState",[]],["Type","FuncTypeMap",[]],["Type","SkipSet",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Sapl","Sapl.Linker.LazyLinker",["Just",19],["Just",18],"LoaderState"],{"tde_typedef":{"td_name":"LoaderState","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",2,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",18],["Nothing"],"DependencyType"],{"tde_typedef":{"td_name":"DependencyType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"DT_NO_DEPENDENCY","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DT_NEED_PROCESS","cons_args":[["Type","_List",[["Type","Token",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",14],["Nothing"],"LineType"],{"tde_typedef":{"td_name":"LineType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LT_REDIRECT","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LT_FUNC","cons_args":[["Type","String",[]],["Type","DependencyType",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LT_MACRO","cons_args":[["Type","String",[]],["Type","DependencyType",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","A line in a SAPL source file can be the following:"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]]],["Bin",2,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",23],["Nothing"],"IdGenerator"],{"tde_typedef":{"td_name":"IdGenerator","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",24],["Nothing"],"Warnings"],{"tde_typedef":{"td_name":"Warnings","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","String",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",5,["Location","Sapl","Sapl.Optimization.StrictnessPropagation",["Just",5],["Nothing"],"IsStrictArgFun"],{"tde_typedef":{"td_name":"IsStrictArgFun","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Func",[["Type","ParserState",[]]],["Func",[["Type","String",[]]],["Func",[["Type","Int",[]]],["Func",[["Type","Int",[]]],["Type","Bool",[]],[]],[]],[]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",35],["Nothing"],"Loader"],{"tde_typedef":{"td_name":"Loader","td_uniq":false,"td_args":[["Var","st"]],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","LoaderFunction",[["Var","st"]]],["Var","st"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",38],["Nothing"],"SkipSet"],{"tde_typedef":{"td_name":"SkipSet","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Set",[["Type","String",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Sapl","Sapl.SaplParser",["Just",8],["Nothing"],"ParserState"],{"tde_typedef":{"td_name":"ParserState","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ParserState",[],[{"rf_name":"ps_level","rf_type":["Type","Int",[]]},{"rf_name":"ps_constructors","rf_type":["Type","Map",[["Type","String",[]],["Type","ConstructorDef",[]]]]},{"rf_name":"ps_functions","rf_type":["Type","Map",[["Type","String",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]]]},{"rf_name":"ps_CAFs","rf_type":["Type","Map",[["Type","String",[]],["Type","Void",[]]]]},{"rf_name":"ps_genFuns","rf_type":["Type","_List",[["Type","FuncType",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","Sapl","Sapl.SaplParser",["Just",15],["Nothing"],"ConstructorDef"],{"tde_typedef":{"td_name":"ConstructorDef","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ConstructorDef",[],[{"rf_name":"index","rf_type":["Type","Int",[]]},{"rf_name":"nr_cons","rf_type":["Type","Int",[]]},{"rf_name":"nr_args","rf_type":["Type","Int",[]]},{"rf_name":"args","rf_type":["Type","_List",[["Type","SaplTypedVar",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]]]],["Bin",56,["Location","TCPIP","TCPChannelClass",["Just",122],["Just",76],"Timeout"],{"tde_typedef":{"td_name":"Timeout","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",41,["Location","Sapl","Sapl.Target.Flavour",["Just",13],["Nothing"],"TermCoderFun"],{"tde_typedef":{"td_name":"TermCoderFun","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Func",[["Type","SaplTerm",[]]],["Func",[["Type","StringAppender",[]]],["Type","StringAppender",[]],[]],[]]]},"tde_doc":["TypeDoc",["Just","Describes a function which generates code from an AST using a specific strategy.\n(normal, force, ...)"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",13,["Location","Sapl","Sapl.SaplStruct",["Just",34],["Nothing"],"SaplTypedVar"],{"tde_typedef":{"td_name":"SaplTypedVar","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TypedVar","cons_args":[["Type","SaplVar",[]],["Type","SaplType",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",6,["Location","Sapl","Sapl.SaplStruct",["Just",18],["Nothing"],"SaplTerm"],{"tde_typedef":{"td_name":"SaplTerm","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SLit","cons_args":[["Type","Literal",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SVar","cons_args":[["Type","SaplVar",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SApplication","cons_args":[["Type","SaplTerm",[]],["Type","_List",[["Type","SaplTerm",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SCase","cons_args":[["Type","SaplTerm",[]],["Type","_List",[["Type","_Tuple2",[["Type","SaplPattern",[]],["Type","SaplTerm",[]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SLet","cons_args":[["Type","SaplTerm",[]],["Type","_List",[["Type","SaplLetDef",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SSelect","cons_args":[["Type","SaplTerm",[]],["Type","SaplType",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SUpdate","cons_args":[["Type","SaplTerm",[]],["Type","SaplType",[]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","SaplTerm",[]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SAbortBody","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","Sapl","Sapl.SaplStruct",["Just",16],["Nothing"],"SaplConstructor"],{"tde_typedef":{"td_name":"SaplConstructor","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SaplConstructor","cons_args":[["Type","SaplVar",[]],["Type","Int",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",10],["Nothing"],"FuncType"],{"tde_typedef":{"td_name":"FuncType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"FTRecord","cons_args":[["Type","SaplVar",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FTADT","cons_args":[["Type","SaplVar",[]],["Type","_List",[["Type","SaplConstructor",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FTCAF","cons_args":[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FTMacro","cons_args":[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FTFunc","cons_args":[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]],["Type","_List",[["Type","SaplTypedVar",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","Possible function types and language constructs."],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","Sapl","Sapl.SaplStruct",["Just",29],["Nothing"],"SaplName"],{"tde_typedef":{"td_name":"SaplName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",27],["Nothing"],"SaplLetDef"],{"tde_typedef":{"td_name":"SaplLetDef","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SaplLetDef","cons_args":[["Type","SaplTypedVar",[]],["Type","SaplTerm",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",31],["Nothing"],"SaplVar"],{"tde_typedef":{"td_name":"SaplVar","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"NormalVar","cons_args":[["Type","SaplName",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StrictVar","cons_args":[["Type","SaplName",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",6,["Location","Sapl","Sapl.SaplTokenizer",["Just",41],["Nothing"],"PosToken"],{"tde_typedef":{"td_name":"PosToken","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"PosToken","cons_args":[["Type","Int",[]],["Type","Int",[]],["Type","Token",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","Token wrapped around position information (line and column numbers)"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","Sapl","Sapl.SaplStruct",["Just",40],["Nothing"],"SaplType"],{"tde_typedef":{"td_name":"SaplType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Type","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NoType","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","Sapl","Sapl.SaplStruct",["Just",36],["Nothing"],"SaplPattern"],{"tde_typedef":{"td_name":"SaplPattern","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"PCons","cons_args":[["Type","String",[]],["Type","_List",[["Type","SaplVar",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PLit","cons_args":[["Type","Literal",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"PDefault","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.SaplTokenizer",["Just",8],["Nothing"],"Token"],{"tde_typedef":{"td_name":"Token","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TIdentifier","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TStrictIdentifier","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TComment","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TInlineAnnotation","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TAssignmentOp","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCaseAssignmentOp","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TMacroAssignmentOp","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCAFAssignmentOp","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TLambda","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TComma","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TColon","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TVerticalBar","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TOpenParenthesis","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCloseParenthesis","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TOpenBracket","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCloseBracket","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TOpenSquareBracket","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCloseSquareBracket","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TTypeDef","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TLit","cons_args":[["Type","Literal",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCaseKeyword","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TSelectKeyword","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TUpdateKeyword","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TLetKeyword","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TInKeyword","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TEndOfLine","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","Possible token types of a SAPL program"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","Sapl","Sapl.SaplTokenizer",["Just",46],["Nothing"],"Literal"],{"tde_typedef":{"td_name":"Literal","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LString","cons_args":[["Type","UString",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LChar","cons_args":[["Type","UString",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LInt","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LReal","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LBool","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",7],["Nothing"],"Arity"],{"tde_typedef":{"td_name":"Arity","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]]],["Bin",27,["Location","StdEnv","StdGeneric",["Just",36],["Nothing"],"GenericRecordDescriptor"],{"tde_typedef":{"td_name":"GenericRecordDescriptor","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GenericRecordDescriptor",[],[{"rf_name":"grd_name","rf_type":["Type","String",[]]},{"rf_name":"grd_arity","rf_type":["Type","Int",[]]},{"rf_name":"grd_type_arity","rf_type":["Type","Int",[]]},{"rf_name":"grd_type","rf_type":["Type","GenType",[]]},{"rf_name":"grd_fields","rf_type":["Type","_List",[["Type","String",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",19,["Location","StdEnv","StdFunc",["Just",27],["Just",54],"St"],{"tde_typedef":{"td_name":"St","td_uniq":false,"td_args":[["Var","s"],["Var","a"]],"td_rhs":["TDRSynonym",["Func",[["Var","s"]],["Uniq",["Type","_Tuple2",[["Var","a"],["Var","s"]]]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",6,["Location","Sapl","Sapl.Target.Flavour",["Just",48],["Nothing"],"FlavourRep"],{"tde_typedef":{"td_name":"FlavourRep","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_FlavourRep",[],[{"rf_name":"fun_prefix","rf_type":["Type","String",[]]},{"rf_name":"options","rf_type":["Type","_List",[["Type","String",[]]]]},{"rf_name":"bifs","rf_type":["Type","_List",[["Type","BIFRep",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","Sapl","Sapl.Target.Flavour",["Just",22],["Nothing"],"InlineFunDef"],{"tde_typedef":{"td_name":"InlineFunDef","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_InlineFunDef",[],[{"rf_name":"fun","rf_type":["Type","InlineCoderFun",[]]},{"rf_name":"arity","rf_type":["Type","Arity",[]]},{"rf_name":"strictness","rf_type":["Type","_#Array",[["Type","Char",[]]]]},{"rf_name":"data_cons","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",20],["Nothing"],"InlineCoderFun"],{"tde_typedef":{"td_name":"InlineCoderFun","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Func",[["Type","TermCoderFun",[]]],["Func",[["Type","TermCoderFun",[]]],["Func",[["Type","_List",[["Type","SaplTerm",[]]]]],["Func",[["Type","StringAppender",[]]],["Type","StringAppender",[]],[]],[]],[]],[]]]},"tde_doc":["TypeDoc",["Just","Describes a function which generates inline code using the elements of its\nthird argument as the arguments of the inline function. The two TermCoderFun are the normal one (first)\nand a the one which forces the evaluation (brings it to HNF) of the given term."],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",29],["Nothing"],"Flavour"],{"tde_typedef":{"td_name":"Flavour","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Flavour",[],[{"rf_name":"fun_prefix","rf_type":["Type","String",[]]},{"rf_name":"options","rf_type":["Type","Set",[["Type","String",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","StdEnv","StdFile",["Just",23],["Just",27],"Files"],{"tde_typedef":{"td_name":"Files","td_uniq":true,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",1,["Location","Sapl","Sapl.Target.Flavour",["Just",53],["Nothing"],"BIFRep"],{"tde_typedef":{"td_name":"BIFRep","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_BIFRep",[],[{"rf_name":"sapl_fun","rf_type":["Type","String",[]]},{"rf_name":"arity","rf_type":["Type","Int",[]]},{"rf_name":"data_cons","rf_type":["Type","Maybe",[["Type","Bool",[]]]]},{"rf_name":"ext_fun","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"inline_exp","rf_type":["Type","Maybe",[["Type","String",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Tip"]]],["Bin",12,["Location","StdEnv","StdGeneric",["Just",18],["Nothing"],"GenericTypeDefDescriptor"],{"tde_typedef":{"td_name":"GenericTypeDefDescriptor","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GenericTypeDefDescriptor",[],[{"rf_name":"gtd_name","rf_type":["Type","String",[]]},{"rf_name":"gtd_arity","rf_type":["Type","Int",[]]},{"rf_name":"gtd_num_conses","rf_type":["Type","Int",[]]},{"rf_name":"gtd_conses","rf_type":["Type","_List",[["Type","GenericConsDescriptor",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",8,["Location","StdEnv","StdGeneric",["Just",13],["Nothing"],"OBJECT"],{"tde_typedef":{"td_name":"OBJECT","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"OBJECT","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",4,["Location","StdEnv","StdGeneric",["Just",9],["Nothing"],"EITHER"],{"tde_typedef":{"td_name":"EITHER","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"LEFT","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RIGHT","cons_args":[["Var","b"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","StdEnv","StdGeneric",["Just",8],["Nothing"],"UNIT"],{"tde_typedef":{"td_name":"UNIT","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"UNIT","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","StdEnv","StdGeneric",["Just",4],["Nothing"],"Bimap"],{"tde_typedef":{"td_name":"Bimap","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRRecord","_Bimap",[],[{"rf_name":"map_to","rf_type":["Func",[["Var","a"]],["Var","b"],[]]},{"rf_name":"map_from","rf_type":["Func",[["Var","b"]],["Var","a"],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",10],["Nothing"],"PAIR"],{"tde_typedef":{"td_name":"PAIR","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"PAIR","cons_args":[["Var","a"],["Var","b"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","StdEnv","StdGeneric",["Just",15],["Nothing"],"RECORD"],{"tde_typedef":{"td_name":"RECORD","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"RECORD","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","StdEnv","StdGeneric",["Just",14],["Nothing"],"CONS"],{"tde_typedef":{"td_name":"CONS","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"CONS","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",16],["Nothing"],"FIELD"],{"tde_typedef":{"td_name":"FIELD","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"FIELD","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","StdEnv","StdGeneric",["Just",33],["Nothing"],"GenConsPrio"],{"tde_typedef":{"td_name":"GenConsPrio","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"GenConsNoPrio","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GenConsPrio","cons_args":[["Type","GenConsAssoc",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","StdEnv","StdGeneric",["Just",25],["Nothing"],"GenericConsDescriptor"],{"tde_typedef":{"td_name":"GenericConsDescriptor","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GenericConsDescriptor",[],[{"rf_name":"gcd_name","rf_type":["Type","String",[]]},{"rf_name":"gcd_arity","rf_type":["Type","Int",[]]},{"rf_name":"gcd_prio","rf_type":["Type","GenConsPrio",[]]},{"rf_name":"gcd_type_def","rf_type":["Type","GenericTypeDefDescriptor",[]]},{"rf_name":"gcd_type","rf_type":["Type","GenType",[]]},{"rf_name":"gcd_index","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",34],["Nothing"],"GenConsAssoc"],{"tde_typedef":{"td_name":"GenConsAssoc","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"GenConsAssocNone","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GenConsAssocLeft","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GenConsAssocRight","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","StdEnv","StdGeneric",["Just",75],["Nothing"],"GenericDict"],{"tde_typedef":{"td_name":"GenericDict","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRRecord","_GenericDict",[],[{"rf_name":"generic_dict","rf_type":["Var","a"]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","StdEnv","StdGeneric",["Just",50],["Nothing"],"GenType"],{"tde_typedef":{"td_name":"GenType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"GenTypeCons","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GenTypeVar","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GenTypeApp","cons_args":[["Type","GenType",[]],["Type","GenType",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GenTypeArrow","cons_args":[["Type","GenType",[]],["Type","GenType",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","StdEnv","StdGeneric",["Just",44],["Nothing"],"GenericFieldDescriptor"],{"tde_typedef":{"td_name":"GenericFieldDescriptor","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GenericFieldDescriptor",[],[{"rf_name":"gfd_name","rf_type":["Type","String",[]]},{"rf_name":"gfd_index","rf_type":["Type","Int",[]]},{"rf_name":"gfd_cons","rf_type":["Type","GenericRecordDescriptor",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","StdEnv","StdGeneric",["Just",56],["Nothing"],"ConsPos"],{"tde_typedef":{"td_name":"ConsPos","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ConsLeft","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ConsRight","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","TCPIP","TCPChannelClass",["Just",112],["Just",66],"DuplexChannel"],{"tde_typedef":{"td_name":"DuplexChannel","td_uniq":false,"td_args":[["Var","sChannel"],["Var","rChannel"],["Var","a"]],"td_rhs":["TDRRecord","_DuplexChannel",[],[{"rf_name":"sChannel","rf_type":["Cons","sChannel",[["Var","a"]]]},{"rf_name":"rChannel","rf_type":["Cons","rChannel",[["Var","a"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","StdEnv","StdGeneric",["Just",76],["Nothing"],"GenericDict0"],{"tde_typedef":{"td_name":"GenericDict0","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRRecord","_GenericDict0",[],[{"rf_name":"generic_dict0","rf_type":["Var","a"]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPChannelClass",["Just",117],["Just",71],"TimeoutReport"],{"tde_typedef":{"td_name":"TimeoutReport","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TR_Expired","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TR_Success","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TR_NoSuccess","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]]],["Bin",14,["Location","TCPIP","TCPDef",["Just",17],["Just",7],"TCP_SChannel"],{"tde_typedef":{"td_name":"TCP_SChannel","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Type","TCP_SChannel_",[["Type","ByteSeq",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",6,["Location","TCPIP","TCPChannels",["Just",46],["Just",567],"TCP_RCharStream"],{"tde_typedef":{"td_name":"TCP_RCharStream","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Type","TCP_RCharStream_",[["Type","Char",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","TCPIP","TCPChannels",["Just",16],["Just",8],"TCP_Pair"],{"tde_typedef":{"td_name":"TCP_Pair","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"TCP_Pair","cons_args":[["Var","a"],["Var","b"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","TCPIP","TCPChannels",["Just",15],["Just",7],"TCP_Void"],{"tde_typedef":{"td_name":"TCP_Void","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TCP_Void","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","TCPIP","TCPChannels",["Just",58],["Just",626],"TCP_SCharStream"],{"tde_typedef":{"td_name":"TCP_SCharStream","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Type","TCP_SCharStream_",[["Type","Char",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","TCPIP","TCPChannels",["Just",47],["Just",568],"TCP_RCharStreams"],{"tde_typedef":{"td_name":"TCP_RCharStreams","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TCP_RCharStreams","cons_args":[["Uniq",["Type","_List",[["Type","TCP_RCharStream",[]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPChannels",["Just",59],["Just",627],"TCP_SCharStreams"],{"tde_typedef":{"td_name":"TCP_SCharStreams","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TCP_SCharStreams","cons_args":[["Uniq",["Type","_List",[["Type","TCP_SCharStream",[]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","TCPIP","TCPDef",["Just",23],["Just",13],"TCP_DuplexChannel"],{"tde_typedef":{"td_name":"TCP_DuplexChannel","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Type","DuplexChannel",[["Uniq",["Type","TCP_SChannel_",[]]],["Uniq",["Type","TCP_RChannel_",[]]],["Type","ByteSeq",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","TCPIP","TCPDef",["Just",19],["Just",9],"TCP_Listener"],{"tde_typedef":{"td_name":"TCP_Listener","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Type","TCP_Listener_",[["Uniq",["Type","_Tuple2",[["Type","IPAddress",[]],["Type","TCP_DuplexChannel",[]]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","TCPIP","TCPDef",["Just",18],["Just",8],"TCP_RChannel"],{"tde_typedef":{"td_name":"TCP_RChannel","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Type","TCP_RChannel_",[["Type","ByteSeq",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPDef",["Just",21],["Just",11],"Port"],{"tde_typedef":{"td_name":"Port","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","TCPIP","TCPDef",["Just",41],["Just",42],"TCP_RChannels"],{"tde_typedef":{"td_name":"TCP_RChannels","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TCP_RChannels","cons_args":[["Uniq",["Type","_List",[["Type","TCP_RChannel",[]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","TCPIP","TCPDef",["Just",25],["Just",14],"ByteSeq"],{"tde_typedef":{"td_name":"ByteSeq","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPDef",["Just",42],["Just",43],"TCP_SChannels"],{"tde_typedef":{"td_name":"TCP_SChannels","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TCP_SChannels","cons_args":[["Uniq",["Type","_List",[["Type","TCP_SChannel",[]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]]]]]],["Bin",331,["Location","iTasks","iTasks.UI.Editor",["Just",53],["Nothing"],"VSt"],{"tde_typedef":{"td_name":"VSt","td_uniq":true,"td_args":[],"td_rhs":["TDRRecord","_VSt",[],[{"rf_name":"taskId","rf_type":["Type","String",[]]},{"rf_name":"mode","rf_type":["Type","EditMode",[]]},{"rf_name":"optional","rf_type":["Type","Bool",[]]},{"rf_name":"selectedConsIndex","rf_type":["Type","Int",[]]},{"rf_name":"iworld","rf_type":["Uniq",["Type","IWorld",[]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",240,["Location","iTasks","iTasks.Internal.IWorld",["Just",144],["Nothing"],"IOStates"],{"tde_typedef":{"td_name":"IOStates","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Map",[["Type","TaskId",[]],["Type","IOState",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",116,["Location","iTasks","iTasks.Extensions.Document",["Just",15],["Nothing"],"DocumentId"],{"tde_typedef":{"td_name":"DocumentId","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",52,["Location","iTasks","iTasks.Extensions.Currency",["Just",5],["Nothing"],"EUR"],{"tde_typedef":{"td_name":"EUR","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"EUR","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",30,["Location","TCPIP","TCPStringChannelsInternal",["Just",16],["Nothing"],"StringRChannel_"],{"tde_typedef":{"td_name":"StringRChannel_","td_uniq":true,"td_args":[["Var","a"]],"td_rhs":["TDRRecord","_StringRChannel_",[],[{"rf_name":"tcp_rchan","rf_type":["Type","TCP_RChannel",[]]},{"rf_name":"readPhase","rf_type":["Type","ReadPhase",[]]},{"rf_name":"receivedStrings","rf_type":["Type","_List",[["Type","String",[]]]]},{"rf_name":"maxSize","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",8,["Location","TCPIP","TCPStringChannels",["Just",28],["Just",10],"StringRChannels"],{"tde_typedef":{"td_name":"StringRChannels","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"StringRChannels","cons_args":[["Uniq",["Type","_List",[["Type","StringRChannel",[]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","TCPIP","TCPDef",["Just",49],["Just",50],"SelectResult"],{"tde_typedef":{"td_name":"SelectResult","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SR_Available","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SR_EOM","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SR_Sendable","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SR_Disconnected","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","TCPIP","TCPDef",["Just",45],["Just",46],"PrimitiveRChannel"],{"tde_typedef":{"td_name":"PrimitiveRChannel","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TCP_RCHANNEL","cons_args":[["Type","TCP_RChannel",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCP_LISTENER","cons_args":[["Type","TCP_Listener",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","TCPStringChannels",["Just",27],["Just",9],"StringRChannel"],{"tde_typedef":{"td_name":"StringRChannel","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Type","StringRChannel_",[["Type","String",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",4,["Location","TCPIP","TCPStringChannels",["Just",43],["Just",100],"StringSChannels"],{"tde_typedef":{"td_name":"StringSChannels","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"StringSChannels","cons_args":[["Uniq",["Type","_List",[["Type","StringSChannel",[]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","TCPIP","TCPStringChannels",["Just",42],["Just",99],"StringSChannel"],{"tde_typedef":{"td_name":"StringSChannel","td_uniq":true,"td_args":[],"td_rhs":["TDRSynonym",["Type","StringSChannel_",[["Type","String",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","TCPIP","TCPStringChannels",["Just",41],["Just",98],"StringSChannel_"],{"tde_typedef":{"td_name":"StringSChannel_","td_uniq":true,"td_args":[["Var","a"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","TCPIP","TCPStringChannelsInternal",["Just",6],["Nothing"],"ReadPhase"],{"tde_typedef":{"td_name":"ReadPhase","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ReadingLength","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ReadingString","cons_args":[["Uniq",["Type","_#Array",[["Type","Char",[]]]]],["Type","Int",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EndOfMessages","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",21,["Location","TCPIP","tcp",["Just",49],["Just",39],"TCP_Listener_"],{"tde_typedef":{"td_name":"TCP_Listener_","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",5,["Location","TCPIP","tcp",["Just",47],["Just",35],"TCP_SChannel_"],{"tde_typedef":{"td_name":"TCP_SChannel_","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",3,["Location","TCPIP","tcp",["Just",43],["Just",32],"EndpointRef"],{"tde_typedef":{"td_name":"EndpointRef","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","TCPIP","tcp",["Just",42],["Just",31],"InetEvent"],{"tde_typedef":{"td_name":"InetEvent","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",44],["Just",33],"InetErrCode"],{"tde_typedef":{"td_name":"InetErrCode","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",1,["Location","TCPIP","tcp",["Just",48],["Just",36],"TCP_RChannel_"],{"tde_typedef":{"td_name":"TCP_RChannel_","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",15,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",30],["Nothing"],"WorkflowFolderLabel"],{"tde_typedef":{"td_name":"WorkflowFolderLabel","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",9,["Location","TCPIP","tcp",["Just",64],["Just",57],"InetReceiverCategory"],{"tde_typedef":{"td_name":"InetReceiverCategory","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","TCPIP","tcp",["Just",57],["Just",48],"Buffer"],{"tde_typedef":{"td_name":"Buffer","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Buffer",[],[{"rf_name":"bPackets","rf_type":["Type","_List",[["Type","_#Array",[["Type","Char",[]]]]]]},{"rf_name":"bBegin","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","TCPIP","tcp",["Just",51],["Just",41],"Buffered_SChan"],{"tde_typedef":{"td_name":"Buffered_SChan","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Buffered_SChan",[],[{"rf_name":"bEndpointRef","rf_type":["Type","EndpointRef",[]]},{"rf_name":"bNormal","rf_type":["Type","Buffer",[]]},{"rf_name":"bUnsent","rf_type":["Type","Int",[]]},{"rf_name":"bId","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","TCPIP","tcp",["Just",62],["Just",55],"IPAddress"],{"tde_typedef":{"td_name":"IPAddress","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",5,["Location","TCPIP","tcp_bytestreams",["Just",18],["Just",13],"TCP_SCharStream_"],{"tde_typedef":{"td_name":"TCP_SCharStream_","td_uniq":true,"td_args":[["Var","char"]],"td_rhs":["TDRRecord","_TCP_SCharStream_",[],[{"rf_name":"sbs_schan","rf_type":["Type","TCP_SChannel",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","TCPIP","tcp_bytestreams",["Just",12],["Just",5],"TCP_RCharStream_"],{"tde_typedef":{"td_name":"TCP_RCharStream_","td_uniq":true,"td_args":[["Var","char"]],"td_rhs":["TDRRecord","_TCP_RCharStream_",[],[{"rf_name":"rbs_rchan","rf_type":["Type","TCP_RChannel",[]]},{"rf_name":"rbs_buffer","rf_type":["Type","_#Array",[["Type","Char",[]]]]},{"rf_name":"rbs_index","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",8],["Nothing"],"Workflow"],{"tde_typedef":{"td_name":"Workflow","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Workflow",[],[{"rf_name":"path","rf_type":["Type","String",[]]},{"rf_name":"roles","rf_type":["Type","_List",[["Type","String",[]]]]},{"rf_name":"description","rf_type":["Type","String",[]]},{"rf_name":"transient","rf_type":["Type","Bool",[]]},{"rf_name":"managerProperties","rf_type":["Type","TaskAttributes",[]]},{"rf_name":"task","rf_type":["Type","WorkflowTaskContainer",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[["Just","a unique name of this workflow"],["Just","the roles that are allowed to initate this workflow"],["Just","a description of the workflow"],["Just","this workflow is intended only as part of a session, it is not persistent"],["Just","the initial manager properties of the main task"],["Just","the thread of the main task of the workflow"]]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.UserAdmin",["Just",8],["Nothing"],"UserAccount"],{"tde_typedef":{"td_name":"UserAccount","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_UserAccount",[],[{"rf_name":"credentials","rf_type":["Type","Credentials",[]]},{"rf_name":"title","rf_type":["Type","Maybe",[["Type","UserTitle",[]]]]},{"rf_name":"roles","rf_type":["Type","_List",[["Type","Role",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",16],["Nothing"],"WorkflowTaskContainer"],{"tde_typedef":{"td_name":"WorkflowTaskContainer","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"WorkflowTask","cons_args":[["Type","Task",[["Var","a"]]]],"cons_exi_vars":["a"],"cons_context":[[["Class","iTask"],["Var","a"]]]},{"cons_name":"ParamWorkflowTask","cons_args":[["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]]],"cons_exi_vars":["a","b"],"cons_context":[[["Class","iTask"],["Var","a"]],[["Class","iTask"],["Var","b"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",5,["Location","iTasks","iTasks.Extensions.Clock",["Just",7],["Nothing"],"AnalogClock"],{"tde_typedef":{"td_name":"AnalogClock","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AnalogClock","cons_args":[["Type","Time",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",69],["Nothing"],"WorkflowContainer"],{"tde_typedef":{"td_name":"WorkflowContainer","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Workflow","cons_args":[["Type","TaskAttributes",[]],["Type","Task",[["Var","a"]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",70],["Nothing"],"ParamWorkflowContainer"],{"tde_typedef":{"td_name":"ParamWorkflowContainer","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"ParamWorkflow","cons_args":[["Type","TaskAttributes",[]],["Func",[["Var","a"]],["Type","Task",[["Var","b"]]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Extensions.Contact",["Just",6],["Nothing"],"EmailAddress"],{"tde_typedef":{"td_name":"EmailAddress","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"EmailAddress","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.Contact",["Just",11],["Nothing"],"PhoneNumber"],{"tde_typedef":{"td_name":"PhoneNumber","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"PhoneNumber","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]]]],["Bin",21,["Location","iTasks","iTasks.Extensions.DateTime",["Just",24],["Nothing"],"DateTime"],{"tde_typedef":{"td_name":"DateTime","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_DateTime",[],[{"rf_name":"year","rf_type":["Type","Int",[]]},{"rf_name":"mon","rf_type":["Type","Int",[]]},{"rf_name":"day","rf_type":["Type","Int",[]]},{"rf_name":"hour","rf_type":["Type","Int",[]]},{"rf_name":"min","rf_type":["Type","Int",[]]},{"rf_name":"sec","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",6,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",16],["Nothing"],"Gauge"],{"tde_typedef":{"td_name":"Gauge","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Gauge",[],[{"rf_name":"val","rf_type":["Type","Int",[]]},{"rf_name":"min","rf_type":["Type","Int",[]]},{"rf_name":"max","rf_type":["Type","Int",[]]},{"rf_name":"unit","rf_type":["Type","String",[]]},{"rf_name":"label","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.Extensions.Currency",["Just",6],["Nothing"],"USD"],{"tde_typedef":{"td_name":"USD","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"USD","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.Dashboard",["Just",9],["Nothing"],"ControlLight"],{"tde_typedef":{"td_name":"ControlLight","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LightOff","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LightOnGreen","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LightOnOrange","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LightOnRed","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.DateTime",["Just",12],["Nothing"],"Date"],{"tde_typedef":{"td_name":"Date","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Date",[],[{"rf_name":"year","rf_type":["Type","Int",[]]},{"rf_name":"mon","rf_type":["Type","Int",[]]},{"rf_name":"day","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",25],["Nothing"],"DBRef"],{"tde_typedef":{"td_name":"DBRef","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"DBRef","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.DateTime",["Just",18],["Nothing"],"Time"],{"tde_typedef":{"td_name":"Time","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Time",[],[{"rf_name":"hour","rf_type":["Type","Int",[]]},{"rf_name":"min","rf_type":["Type","Int",[]]},{"rf_name":"sec","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",14,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",23],["Nothing"],"ModuleType"],{"tde_typedef":{"td_name":"ModuleType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"MainModule","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AuxModule","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",6,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",15],["Nothing"],"SourceTreeSelection"],{"tde_typedef":{"td_name":"SourceTreeSelection","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SelSourceTree","cons_args":[["Type","SourceTreeName",[]],["Type","FilePath",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelMainModule","cons_args":[["Type","ModuleName",[]],["Type","FilePath",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelAuxModule","cons_args":[["Type","ModuleName",[]],["Type","FilePath",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",8],["Nothing"],"SourceTree"],{"tde_typedef":{"td_name":"SourceTree","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SourceTree",[],[{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"rootPath","rf_type":["Type","FilePath",[]]},{"rf_name":"subPaths","rf_type":["Type","_List",[["Type","FilePath",[]]]]},{"rf_name":"readOnly","rf_type":["Type","Bool",[]]},{"rf_name":"modules","rf_type":["Type","_List",[["Type","_Tuple3",[["Type","ModuleName",[]],["Type","ModuleType",[]],["Type","FilePath",[]]]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",6],["Nothing"],"CodeBase"],{"tde_typedef":{"td_name":"CodeBase","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","SourceTree",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",21],["Nothing"],"FileName"],{"tde_typedef":{"td_name":"FileName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",20],["Nothing"],"SourceTreeName"],{"tde_typedef":{"td_name":"SourceTreeName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",22],["Nothing"],"ModuleName"],{"tde_typedef":{"td_name":"ModuleName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",29],["Nothing"],"CleanModule"],{"tde_typedef":{"td_name":"CleanModule","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","CleanModuleName",[]],["Type","Extension",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",26],["Nothing"],"CleanFile"],{"tde_typedef":{"td_name":"CleanFile","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple3",[["Type","FilePath",[]],["Type","ModuleName",[]],["Type","Extension",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",24],["Nothing"],"Extension"],{"tde_typedef":{"td_name":"Extension","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Icl","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Dcl","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",28],["Nothing"],"CleanModuleName"],{"tde_typedef":{"td_name":"CleanModuleName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","FilePath",[]],["Type","ModuleName",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",32],["Nothing"],"Identifier"],{"tde_typedef":{"td_name":"Identifier","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",31],["Nothing"],"CleanPath"],{"tde_typedef":{"td_name":"CleanPath","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","FilePath",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Document",["Just",8],["Nothing"],"Document"],{"tde_typedef":{"td_name":"Document","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Document",[],[{"rf_name":"documentId","rf_type":["Type","DocumentId",[]]},{"rf_name":"contentUrl","rf_type":["Type","String",[]]},{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"mime","rf_type":["Type","String",[]]},{"rf_name":"size","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[["Just","A unique identifier of the document"],["Just","A url to where the document can be downloaded"],["Just","The filename of a document"],["Just","The mime type of the document"],["Just","The filesize in bytes"]]]]]},["Tip"],["Tip"]]]]]]],["Bin",63,["Location","iTasks","iTasks.Extensions.Image",["Just",8],["Nothing"],"WebImage"],{"tde_typedef":{"td_name":"WebImage","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_WebImage",[],[{"rf_name":"src","rf_type":["Type","String",[]]},{"rf_name":"alt","rf_type":["Type","String",[]]},{"rf_name":"width","rf_type":["Type","Int",[]]},{"rf_name":"height","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",26,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",14],["Nothing"],"GoogleMapType"],{"tde_typedef":{"td_name":"GoogleMapType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ROADMAP","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SATELLITE","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HYBRID","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TERRAIN","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",7,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",23],["Nothing"],"AceOptions"],{"tde_typedef":{"td_name":"AceOptions","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_AceOptions",[],[{"rf_name":"theme","rf_type":["Type","String",[]]},{"rf_name":"mode","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",13],["Nothing"],"AceState"],{"tde_typedef":{"td_name":"AceState","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_AceState",[],[{"rf_name":"lines","rf_type":["Type","_List",[["Type","String",[]]]]},{"rf_name":"cursor","rf_type":["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]]},{"rf_name":"selection","rf_type":["Type","Maybe",[["Type","AceRange",[]]]]},{"rf_name":"disabled","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Document",["Just",17],["Nothing"],"FileException"],{"tde_typedef":{"td_name":"FileException","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"FileException","cons_args":[["Type","FilePath",[]],["Type","FileError",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",19],["Nothing"],"AceRange"],{"tde_typedef":{"td_name":"AceRange","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_AceRange",[],[{"rf_name":"start","rf_type":["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]]},{"rf_name":"end","rf_type":["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",4],["Nothing"],"GoogleMap"],{"tde_typedef":{"td_name":"GoogleMap","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GoogleMap",[],[{"rf_name":"settings","rf_type":["Type","GoogleMapSettings",[]]},{"rf_name":"perspective","rf_type":["Type","GoogleMapPerspective",[]]},{"rf_name":"markers","rf_type":["Type","_List",[["Type","GoogleMapMarker",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Email",["Just",19],["Nothing"],"EmailOpt"],{"tde_typedef":{"td_name":"EmailOpt","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"EmailOptSMTPServer","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EmailOptSMTPServerPort","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"EmailOptExtraHeaders","cons_args":[["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",9],["Nothing"],"GoogleMapPerspective"],{"tde_typedef":{"td_name":"GoogleMapPerspective","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GoogleMapPerspective",[],[{"rf_name":"type","rf_type":["Type","GoogleMapType",[]]},{"rf_name":"center","rf_type":["Type","GoogleMapPosition",[]]},{"rf_name":"zoom","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",18,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",31],["Nothing"],"LeafletBounds"],{"tde_typedef":{"td_name":"LeafletBounds","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_LeafletBounds",[],[{"rf_name":"southWest","rf_type":["Type","LeafletLatLng",[]]},{"rf_name":"northEast","rf_type":["Type","LeafletLatLng",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",10,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",38],["Nothing"],"GoogleMapIcon"],{"tde_typedef":{"td_name":"GoogleMapIcon","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"GoogleMapSimpleIcon","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GoogleMapComplexIcon","cons_args":[["Type","GoogleMapComplexIcon",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",24],["Nothing"],"GoogleMapPosition"],{"tde_typedef":{"td_name":"GoogleMapPosition","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GoogleMapPosition",[],[{"rf_name":"lat","rf_type":["Type","Real",[]]},{"rf_name":"lng","rf_type":["Type","Real",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",15],["Nothing"],"GoogleMapSettings"],{"tde_typedef":{"td_name":"GoogleMapSettings","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GoogleMapSettings",[],[{"rf_name":"mapTypeControl","rf_type":["Type","Bool",[]]},{"rf_name":"panControl","rf_type":["Type","Bool",[]]},{"rf_name":"zoomControl","rf_type":["Type","Bool",[]]},{"rf_name":"streetViewControl","rf_type":["Type","Bool",[]]},{"rf_name":"scaleControl","rf_type":["Type","Bool",[]]},{"rf_name":"scrollwheel","rf_type":["Type","Bool",[]]},{"rf_name":"draggable","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",28],["Nothing"],"GoogleMapMarker"],{"tde_typedef":{"td_name":"GoogleMapMarker","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GoogleMapMarker",[],[{"rf_name":"markerId","rf_type":["Type","String",[]]},{"rf_name":"position","rf_type":["Type","GoogleMapPosition",[]]},{"rf_name":"title","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"icon","rf_type":["Type","Maybe",[["Type","GoogleMapIcon",[]]]]},{"rf_name":"infoWindow","rf_type":["Type","Maybe",[["Type","HtmlTag",[]]]]},{"rf_name":"draggable","rf_type":["Type","Bool",[]]},{"rf_name":"selected","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",12],["Nothing"],"LeafletPerspective"],{"tde_typedef":{"td_name":"LeafletPerspective","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_LeafletPerspective",[],[{"rf_name":"center","rf_type":["Type","LeafletLatLng",[]]},{"rf_name":"zoom","rf_type":["Type","Int",[]]},{"rf_name":"cursor","rf_type":["Type","Maybe",[["Type","LeafletLatLng",[]]]]},{"rf_name":"bounds","rf_type":["Type","Maybe",[["Type","LeafletBounds",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",42],["Nothing"],"GoogleMapComplexIcon"],{"tde_typedef":{"td_name":"GoogleMapComplexIcon","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GoogleMapComplexIcon",[],[{"rf_name":"image","rf_type":["Type","String",[]]},{"rf_name":"size","rf_type":["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]]},{"rf_name":"origin","rf_type":["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]]},{"rf_name":"anchor","rf_type":["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",5],["Nothing"],"LeafletMap"],{"tde_typedef":{"td_name":"LeafletMap","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_LeafletMap",[],[{"rf_name":"perspective","rf_type":["Type","LeafletPerspective",[]]},{"rf_name":"tilesUrl","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"objects","rf_type":["Type","_List",[["Type","LeafletObject",[]]]]},{"rf_name":"icons","rf_type":["Type","_List",[["Type","LeafletIcon",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",20],["Nothing"],"LeafletIcon"],{"tde_typedef":{"td_name":"LeafletIcon","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_LeafletIcon",[],[{"rf_name":"iconId","rf_type":["Type","LeafletIconID",[]]},{"rf_name":"iconUrl","rf_type":["Type","String",[]]},{"rf_name":"iconSize","rf_type":["Type","_Tuple2",[["Type","Int",[]],["Type","Int",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",19],["Nothing"],"LeafletIconID"],{"tde_typedef":{"td_name":"LeafletIconID","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",26],["Nothing"],"LeafletLatLng"],{"tde_typedef":{"td_name":"LeafletLatLng","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_LeafletLatLng",[],[{"rf_name":"lat","rf_type":["Type","Real",[]]},{"rf_name":"lng","rf_type":["Type","Real",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",51],["Nothing"],"LeafletPolyline"],{"tde_typedef":{"td_name":"LeafletPolyline","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_LeafletPolyline",[],[{"rf_name":"polylineId","rf_type":["Type","LeafletObjectID",[]]},{"rf_name":"points","rf_type":["Type","_List",[["Type","LeafletLatLng",[]]]]},{"rf_name":"strokeColor","rf_type":["Type","String",[]]},{"rf_name":"strokeWidth","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",41],["Nothing"],"LeafletObjectID"],{"tde_typedef":{"td_name":"LeafletObjectID","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",36],["Nothing"],"LeafletObject"],{"tde_typedef":{"td_name":"LeafletObject","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Marker","cons_args":[["Type","LeafletMarker",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Polyline","cons_args":[["Type","LeafletPolyline",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Polygon","cons_args":[["Type","LeafletPolygon",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",42],["Nothing"],"LeafletMarker"],{"tde_typedef":{"td_name":"LeafletMarker","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_LeafletMarker",[],[{"rf_name":"markerId","rf_type":["Type","LeafletObjectID",[]]},{"rf_name":"position","rf_type":["Type","LeafletLatLng",[]]},{"rf_name":"title","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"icon","rf_type":["Type","Maybe",[["Type","LeafletIconID",[]]]]},{"rf_name":"popup","rf_type":["Type","Maybe",[["Type","HtmlTag",[]]]]},{"rf_name":"selected","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",12],["Nothing"],"ShipIconHeading"],{"tde_typedef":{"td_name":"ShipIconHeading","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",58],["Nothing"],"LeafletPolygon"],{"tde_typedef":{"td_name":"LeafletPolygon","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_LeafletPolygon",[],[{"rf_name":"polygonId","rf_type":["Type","LeafletObjectID",[]]},{"rf_name":"points","rf_type":["Type","_List",[["Type","LeafletLatLng",[]]]]},{"rf_name":"strokeColor","rf_type":["Type","String",[]]},{"rf_name":"strokeWidth","rf_type":["Type","Int",[]]},{"rf_name":"fillColor","rf_type":["Type","Maybe",[["Type","String",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",13],["Nothing"],"ShipIconColor"],{"tde_typedef":{"td_name":"ShipIconColor","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"GrayShip","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BlueShip","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OrangeShip","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"GreenShip","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RedShip","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]]],["Bin",36,["Location","iTasks","iTasks.Extensions.Web",["Just",11],["Nothing"],"URL"],{"tde_typedef":{"td_name":"URL","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"URL","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",13,["Location","iTasks","iTasks.Extensions.User",["Just",9],["Nothing"],"User"],{"tde_typedef":{"td_name":"User","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SystemUser","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AnonymousUser","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AuthenticatedUser","cons_args":[["Type","UserId",[]],["Type","_List",[["Type","Role",[]]]],["Type","Maybe",[["Type","UserTitle",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[["Just",["ConstructorDoc",["Just","The global user that is used when events do not originate from a session"],[]]],["Just",["ConstructorDoc",["Just","An anonymous user identified only by a session id"],[]]],["Just",["ConstructorDoc",["Just","An authenticated user"],[]]]]]]]},["Bin",5,["Location","iTasks","iTasks.Extensions.Process",["Just",11],["Just",21],"ProcessStatus"],{"tde_typedef":{"td_name":"ProcessStatus","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"RunningProcess","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CompletedProcess","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.JSONFile",["Just",7],["Just",6],"JSONParseException"],{"tde_typedef":{"td_name":"JSONParseException","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CannotParse","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Extensions.SQLDatabase",["Just",11],["Nothing"],"SQLDatabaseDef"],{"tde_typedef":{"td_name":"SQLDatabaseDef","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"MySQLDatabase","cons_args":[["Type","SQLDatabase",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SQLiteDatabase","cons_args":[["Type","FilePath",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.Process",["Just",15],["Nothing"],"CallException"],{"tde_typedef":{"td_name":"CallException","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CallFailed","cons_args":[["Type","OSError",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.SVG.SVGEditor",["Just",11],["Nothing"],"SVGEditor"],{"tde_typedef":{"td_name":"SVGEditor","td_uniq":false,"td_args":[["Var","m"],["Var","v"]],"td_rhs":["TDRRecord","_SVGEditor",[],[{"rf_name":"initView","rf_type":["Func",[["Var","m"]],["Var","v"],[]]},{"rf_name":"renderImage","rf_type":["Func",[["Var","m"]],["Func",[["Var","v"]],["Func",[["Uniq",["Type","TagSource",[]]]],["Type","Image",[["Var","v"]]],[]],[]],[]]},{"rf_name":"updView","rf_type":["Func",[["Var","m"]],["Func",[["Var","v"]],["Var","v"],[]],[]]},{"rf_name":"updModel","rf_type":["Func",[["Var","m"]],["Func",[["Var","v"]],["Var","m"],[]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Extensions.User",["Just",37],["Nothing"],"UserTitle"],{"tde_typedef":{"td_name":"UserTitle","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","iTasks","iTasks.Extensions.User",["Just",35],["Nothing"],"UserId"],{"tde_typedef":{"td_name":"UserId","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",19],["Nothing"],"UserConstraint"],{"tde_typedef":{"td_name":"UserConstraint","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AnyUser","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UserWithId","cons_args":[["Type","UserId",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UserWithRole","cons_args":[["Type","Role",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",36],["Nothing"],"Role"],{"tde_typedef":{"td_name":"Role","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Extensions.User",["Just",47],["Nothing"],"Username"],{"tde_typedef":{"td_name":"Username","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Username","cons_args":[["Type","UserId",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",42],["Nothing"],"Credentials"],{"tde_typedef":{"td_name":"Credentials","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Credentials",[],[{"rf_name":"username","rf_type":["Type","Username",[]]},{"rf_name":"password","rf_type":["Type","Password",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Extensions.User",["Just",49],["Nothing"],"Password"],{"tde_typedef":{"td_name":"Password","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Password","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",22,["Location","iTasks","iTasks.Internal.IWorld",["Just",102],["Nothing"],"IOTasks"],{"tde_typedef":{"td_name":"IOTasks","td_uniq":true,"td_args":[],"td_rhs":["TDRRecord","_IOTasks",[],[{"rf_name":"done","rf_type":["Uniq",["Type","_List",[["Type","IOTaskInstance",[]]]]]},{"rf_name":"todo","rf_type":["Uniq",["Type","_List",[["Type","IOTaskInstance",[]]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",14,["Location","iTasks","iTasks.Internal.IWorld",["Just",55],["Nothing"],"Config"],{"tde_typedef":{"td_name":"Config","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Config",[],[{"rf_name":"sessionTime","rf_type":["Type","Int",[]]},{"rf_name":"smtpServer","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[["Just","Time (in seconds) before inactive sessions are garbage collected. Default is 3600 (one hour)."],["Just","The smtp server to use for sending e-mails"]]]]]},["Bin",6,["Location","iTasks","iTasks.Internal.Engine",["Just",38],["Nothing"],"TaskWrapper"],{"tde_typedef":{"td_name":"TaskWrapper","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TaskWrapper","cons_args":[["Type","Task",[["Var","a"]]]],"cons_exi_vars":["a"],"cons_context":[[["Class","iTask"],["Var","a"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.Internal.Engine",["Just",27],["Nothing"],"ServerOptions"],{"tde_typedef":{"td_name":"ServerOptions","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ServerOptions",[],[{"rf_name":"appName","rf_type":["Type","String",[]]},{"rf_name":"appPath","rf_type":["Type","FilePath",[]]},{"rf_name":"serverPort","rf_type":["Type","Int",[]]},{"rf_name":"keepalive","rf_type":["Type","Int",[]]},{"rf_name":"webDirPath","rf_type":["Type","Maybe",[["Type","FilePath",[]]]]},{"rf_name":"storeDirPath","rf_type":["Type","Maybe",[["Type","FilePath",[]]]]},{"rf_name":"saplDirPath","rf_type":["Type","Maybe",[["Type","FilePath",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",22],["Nothing"],"PublishedTask"],{"tde_typedef":{"td_name":"PublishedTask","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_PublishedTask",[],[{"rf_name":"url","rf_type":["Type","String",[]]},{"rf_name":"task","rf_type":["Type","WebTaskWrapper",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Engine",["Just",37],["Nothing"],"WebTaskWrapper"],{"tde_typedef":{"td_name":"WebTaskWrapper","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"WebTaskWrapper","cons_args":[["Func",[["Type","HTTPRequest",[]]],["Type","Task",[["Var","a"]]],[]]],"cons_exi_vars":["a"],"cons_context":[[["Class","iTask"],["Var","a"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",31],["Nothing"],"IWorld"],{"tde_typedef":{"td_name":"IWorld","td_uniq":true,"td_args":[],"td_rhs":["TDRRecord","_IWorld",[],[{"rf_name":"server","rf_type":["Type","ServerInfo",[]]},{"rf_name":"config","rf_type":["Type","Config",[]]},{"rf_name":"clocks","rf_type":["Type","SystemClocks",[]]},{"rf_name":"current","rf_type":["Type","TaskEvalState",[]]},{"rf_name":"random","rf_type":["Type","_List",[["Type","Int",[]]]]},{"rf_name":"sdsNotifyRequests","rf_type":["Type","_List",[["Type","SDSNotifyRequest",[]]]]},{"rf_name":"memoryShares","rf_type":["Type","Map",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]],["Type","Dynamic",[]]]]},{"rf_name":"cachedShares","rf_type":["Type","ShareCache",[]]},{"rf_name":"exposedShares","rf_type":["Type","Map",[["Type","String",[]],["Type","_Tuple2",[["Type","Dynamic",[]],["Type","JSONShared",[]]]]]]},{"rf_name":"jsCompilerState","rf_type":["Type","Maybe",[["Type","JSCompilerState",[]]]]},{"rf_name":"ioTasks","rf_type":["Uniq",["Type","IOTasks",[]]]},{"rf_name":"ioStates","rf_type":["Type","IOStates",[]]},{"rf_name":"world","rf_type":["Uniq",["Type","World",[]]]},{"rf_name":"resources","rf_type":["Uniq",["Type","Maybe",[["Uniq",["Type","Resource",[]]]]]]},{"rf_name":"onClient","rf_type":["Type","Bool",[]]},{"rf_name":"shutdown","rf_type":["Type","Maybe",[["Type","Int",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",13],["Nothing"],"TextFormat"],{"tde_typedef":{"td_name":"TextFormat","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AsSingleLine","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AsMultiLine","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AsRow","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AsHeader","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]]],["Bin",7,["Location","iTasks","iTasks.Internal.IWorld",["Just",83],["Nothing"],"ShareCache"],{"tde_typedef":{"td_name":"ShareCache","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Map",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]],["Type","_Tuple3",[["Type","Dynamic",[]],["Type","Bool",[]],["Type","Maybe",[["Type","CachedValue",[]]]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","iTasks","iTasks.Internal.IWorld",["Just",67],["Nothing"],"SystemPaths"],{"tde_typedef":{"td_name":"SystemPaths","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SystemPaths",[],[{"rf_name":"appDirectory","rf_type":["Type","FilePath",[]]},{"rf_name":"dataDirectory","rf_type":["Type","FilePath",[]]},{"rf_name":"webDirectory","rf_type":["Type","FilePath",[]]},{"rf_name":"saplDirectory","rf_type":["Type","FilePath",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",60],["Nothing"],"ServerInfo"],{"tde_typedef":{"td_name":"ServerInfo","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ServerInfo",[],[{"rf_name":"serverName","rf_type":["Type","String",[]]},{"rf_name":"serverURL","rf_type":["Type","String",[]]},{"rf_name":"buildID","rf_type":["Type","String",[]]},{"rf_name":"paths","rf_type":["Type","SystemPaths",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",74],["Nothing"],"SystemClocks"],{"tde_typedef":{"td_name":"SystemClocks","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SystemClocks",[],[{"rf_name":"timestamp","rf_type":["Type","Timestamp",[]]},{"rf_name":"localDate","rf_type":["Type","Date",[]]},{"rf_name":"localTime","rf_type":["Type","Time",[]]},{"rf_name":"utcDate","rf_type":["Type","Date",[]]},{"rf_name":"utcTime","rf_type":["Type","Time",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.IWorld",["Just",86],["Nothing"],"JSCompilerState"],{"tde_typedef":{"td_name":"JSCompilerState","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_JSCompilerState",[],[{"rf_name":"loaderState","rf_type":["Type","LoaderState",[]]},{"rf_name":"functionMap","rf_type":["Type","FuncTypeMap",[]]},{"rf_name":"flavour","rf_type":["Type","Flavour",[]]},{"rf_name":"parserState","rf_type":["Type","Maybe",[["Type","ParserState",[]]]]},{"rf_name":"skipMap","rf_type":["Type","Map",[["Type","InstanceNo",[]],["Type","Set",[["Type","String",[]]]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",84],["Nothing"],"CachedValue"],{"tde_typedef":{"td_name":"CachedValue","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"CachedJSONValue","cons_args":[["Type","DeferredJSON",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CachedDynamicValue","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",94],["Nothing"],"TaskEvalState"],{"tde_typedef":{"td_name":"TaskEvalState","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TaskEvalState",[],[{"rf_name":"taskTime","rf_type":["Type","TaskTime",[]]},{"rf_name":"taskInstance","rf_type":["Type","InstanceNo",[]]},{"rf_name":"sessionInstance","rf_type":["Type","Maybe",[["Type","InstanceNo",[]]]]},{"rf_name":"attachmentChain","rf_type":["Type","_List",[["Type","TaskId",[]]]]},{"rf_name":"nextTaskNo","rf_type":["Type","TaskNo",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.Internal.IWorld",["Just",129],["Nothing"],"ConnectionId"],{"tde_typedef":{"td_name":"ConnectionId","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","iTasks","iTasks.Internal.IWorld",["Just",113],["Nothing"],"ListenerInstanceOpts"],{"tde_typedef":{"td_name":"ListenerInstanceOpts","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ListenerInstanceOpts",[],[{"rf_name":"taskId","rf_type":["Type","TaskId",[]]},{"rf_name":"nextConnectionId","rf_type":["Type","ConnectionId",[]]},{"rf_name":"port","rf_type":["Type","Int",[]]},{"rf_name":"connectionTask","rf_type":["Type","ConnectionTask",[]]},{"rf_name":"removeOnClose","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",107],["Nothing"],"IOTaskInstance"],{"tde_typedef":{"td_name":"IOTaskInstance","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ListenerInstance","cons_args":[["Type","ListenerInstanceOpts",[]],["Uniq",["Type","TCP_Listener",[]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ConnectionInstance","cons_args":[["Type","ConnectionInstanceOpts",[]],["Uniq",["Type","TCP_DuplexChannel",[]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ExternalProcessInstance","cons_args":[["Type","ExternalProcessInstanceOpts",[]],["Type","ProcessHandle",[]],["Type","ProcessIO",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BackgroundInstance","cons_args":[["Type","BackgroundInstanceOpts",[]],["Type","BackgroundTask",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",121],["Nothing"],"ConnectionInstanceOpts"],{"tde_typedef":{"td_name":"ConnectionInstanceOpts","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ConnectionInstanceOpts",[],[{"rf_name":"taskId","rf_type":["Type","TaskId",[]]},{"rf_name":"connectionId","rf_type":["Type","ConnectionId",[]]},{"rf_name":"remoteHost","rf_type":["Type","IPAddress",[]]},{"rf_name":"connectionTask","rf_type":["Type","ConnectionTask",[]]},{"rf_name":"removeOnClose","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.IWorld",["Just",137],["Nothing"],"BackgroundInstanceOpts"],{"tde_typedef":{"td_name":"BackgroundInstanceOpts","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_BackgroundInstanceOpts",[],[{"rf_name":"bgInstId","rf_type":["Type","BackgroundTaskId",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",131],["Nothing"],"ExternalProcessInstanceOpts"],{"tde_typedef":{"td_name":"ExternalProcessInstanceOpts","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ExternalProcessInstanceOpts",[],[{"rf_name":"taskId","rf_type":["Type","TaskId",[]]},{"rf_name":"connectionId","rf_type":["Type","ConnectionId",[]]},{"rf_name":"externalProcessTask","rf_type":["Type","ExternalProcessTask",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",141],["Nothing"],"BackgroundTaskId"],{"tde_typedef":{"td_name":"BackgroundTaskId","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]]]]]],["Bin",123,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",89],["Nothing"],"TMApply"],{"tde_typedef":{"td_name":"TMApply","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TMApply",[],[{"rf_name":"tma_computationId","rf_type":["Type","ComputationId",[]]},{"rf_name":"tma_nodeId","rf_type":["Type","NodeId",[]]},{"rf_name":"tma_bpModuleName","rf_type":["Type","ModuleName",[]]},{"rf_name":"tma_bpFunctionName","rf_type":["Type","FunctionName",[]]},{"rf_name":"tma_appModuleName","rf_type":["Type","ModuleName",[]]},{"rf_name":"tma_appFunName","rf_type":["Type","FunctionName",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",70,["Location","iTasks","iTasks.Internal.TaskState",["Just",94],["Nothing"],"ParallelTaskChange"],{"tde_typedef":{"td_name":"ParallelTaskChange","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"RemoveParallelTask","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ReplaceParallelTask","cons_args":[["Type","Dynamic",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",26,["Location","iTasks","iTasks.Internal.Store",["Just",37],["Nothing"],"StoreReadError"],{"tde_typedef":{"td_name":"StoreReadError","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"StoreReadMissingError","cons_args":[["Type","StoreName",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StoreReadDataError","cons_args":[["Type","StoreName",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StoreReadTypeError","cons_args":[["Type","StoreName",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"StoreReadBuildVersionError","cons_args":[["Type","StoreName",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",10,["Location","iTasks","iTasks.Internal.Store",["Just",26],["Nothing"],"StoreNamespace"],{"tde_typedef":{"td_name":"StoreNamespace","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",6,["Location","iTasks","iTasks.Internal.IWorld",["Just",154],["Nothing"],"Resource"],{"tde_typedef":{"td_name":"Resource","td_uniq":true,"td_args":[],"td_rhs":["TDRCons",true,[{"cons_name":"Resource","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.Internal.IWorld",["Just",149],["Nothing"],"IOConnectionState"],{"tde_typedef":{"td_name":"IOConnectionState","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_IOConnectionState",[],[{"rf_name":"connectionTaskState","rf_type":["Type","Dynamic",[]]},{"rf_name":"closed","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.IWorld",["Just",145],["Nothing"],"IOState"],{"tde_typedef":{"td_name":"IOState","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"IOActive","cons_args":[["Type","Map",[["Type","ConnectionId",[]],["Type","_Tuple2",[["Type","Dynamic",[]],["Type","Bool",[]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IODestroyed","cons_args":[["Type","Map",[["Type","ConnectionId",[]],["Type","_Tuple2",[["Type","Dynamic",[]],["Type","Bool",[]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IOException","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.Internal.SDS",["Just",22],["Nothing"],"SDSIdentity"],{"tde_typedef":{"td_name":"SDSIdentity","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",14],["Nothing"],"SDSNotifyRequest"],{"tde_typedef":{"td_name":"SDSNotifyRequest","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SDSNotifyRequest",[],[{"rf_name":"reqTaskId","rf_type":["Type","TaskId",[]]},{"rf_name":"reqSDSId","rf_type":["Type","SDSIdentity",[]]},{"rf_name":"cmpSDSId","rf_type":["Type","SDSIdentity",[]]},{"rf_name":"cmpParam","rf_type":["Type","Dynamic",[]]},{"rf_name":"cmpParamText","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.SDS",["Just",69],["Nothing"],"JSONShared"],{"tde_typedef":{"td_name":"JSONShared","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","RWShared",[["Type","JSONNode",[]],["Type","JSONNode",[]],["Type","JSONNode",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Internal.Store",["Just",28],["Nothing"],"StorePrefix"],{"tde_typedef":{"td_name":"StorePrefix","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",27],["Nothing"],"StoreName"],{"tde_typedef":{"td_name":"StoreName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Store",["Just",29],["Nothing"],"BuildID"],{"tde_typedef":{"td_name":"BuildID","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",15,["Location","iTasks","iTasks.Internal.TaskEval",["Just",46],["Nothing"],"TaskTime"],{"tde_typedef":{"td_name":"TaskTime","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",7,["Location","iTasks","iTasks.Internal.Task",["Just",62],["Nothing"],"BackgroundTask"],{"tde_typedef":{"td_name":"BackgroundTask","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"BackgroundTask","cons_args":[["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","_Unit",[]]]],["Uniq",["Type","IWorld",[]]]]]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.Internal.Task",["Just",39],["Nothing"],"ConnectionHandlersIWorld"],{"tde_typedef":{"td_name":"ConnectionHandlersIWorld","td_uniq":false,"td_args":[["Var","l"],["Var","r"],["Var","w"]],"td_rhs":["TDRRecord","_ConnectionHandlersIWorld",[],[{"rf_name":"onConnect","rf_type":["Func",[["Type","String",[]]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]]},{"rf_name":"onData","rf_type":["Func",[["Type","String",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]]},{"rf_name":"onShareChange","rf_type":["Func",[["Var","l"]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]]},{"rf_name":"onTick","rf_type":["Func",[["Var","l"]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]]},{"rf_name":"onDisconnect","rf_type":["Func",[["Var","l"]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple3",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.Task",["Just",27],["Nothing"],"ConnectionTask"],{"tde_typedef":{"td_name":"ConnectionTask","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ConnectionTask","cons_args":[["Type","ConnectionHandlersIWorld",[["Type","Dynamic",[]],["Type","Dynamic",[]],["Type","Dynamic",[]]]],["Type","RWShared",[["Type","_Unit",[]],["Type","Dynamic",[]],["Type","Dynamic",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Task",["Just",48],["Nothing"],"ExternalProcessTask"],{"tde_typedef":{"td_name":"ExternalProcessTask","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ExternalProcessTask","cons_args":[["Type","ExternalProcessHandlers",[["Type","Dynamic",[]],["Type","Dynamic",[]],["Type","Dynamic",[]]]],["Type","RWShared",[["Type","_Unit",[]],["Type","Dynamic",[]],["Type","Dynamic",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskEval",["Just",25],["Nothing"],"TonicOpts"],{"tde_typedef":{"td_name":"TonicOpts","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TonicOpts",[],[{"rf_name":"inAssignNode","rf_type":["Type","Maybe",[["Type","ExprId",[]]]]},{"rf_name":"inParallel","rf_type":["Type","Maybe",[["Type","TaskId",[]]]]},{"rf_name":"captureParallel","rf_type":["Type","Bool",[]]},{"rf_name":"currBlueprintModuleName","rf_type":["Type","String",[]]},{"rf_name":"currBlueprintFuncName","rf_type":["Type","String",[]]},{"rf_name":"currBlueprintTaskId","rf_type":["Type","TaskId",[]]},{"rf_name":"currBlueprintExprId","rf_type":["Type","ExprId",[]]},{"rf_name":"callTrace","rf_type":["Type","CircularStack",[["Type","TaskId",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",20],["Nothing"],"TaskEvalOpts"],{"tde_typedef":{"td_name":"TaskEvalOpts","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TaskEvalOpts",[],[{"rf_name":"noUI","rf_type":["Type","Bool",[]]},{"rf_name":"tonicOpts","rf_type":["Type","TonicOpts",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskEval",["Just",40],["Nothing"],"TaskEvalInfo"],{"tde_typedef":{"td_name":"TaskEvalInfo","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TaskEvalInfo",[],[{"rf_name":"lastEvent","rf_type":["Type","TaskTime",[]]},{"rf_name":"removedTasks","rf_type":["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","TaskId",[]]]]]]},{"rf_name":"refreshSensitive","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.Internal.TaskState",["Just",53],["Nothing"],"TIUIState"],{"tde_typedef":{"td_name":"TIUIState","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"UIDisabled","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIEnabled","cons_args":[["Type","Int",[]],["Type","UIChange",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIException","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.Internal.TaskState",["Just",38],["Nothing"],"TIReduct"],{"tde_typedef":{"td_name":"TIReduct","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TIReduct",[],[{"rf_name":"task","rf_type":["Type","Task",[["Type","JSONNode",[]]]]},{"rf_name":"tree","rf_type":["Type","TaskTree",[]]},{"rf_name":"tonicRedOpts","rf_type":["Type","TonicOpts",[]]},{"rf_name":"nextTaskNo","rf_type":["Type","TaskNo",[]]},{"rf_name":"nextTaskTime","rf_type":["Type","TaskTime",[]]},{"rf_name":"tasks","rf_type":["Type","Map",[["Type","TaskId",[]],["Type","Dynamic",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",24],["Nothing"],"TIMeta"],{"tde_typedef":{"td_name":"TIMeta","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TIMeta",[],[{"rf_name":"instanceNo","rf_type":["Type","InstanceNo",[]]},{"rf_name":"instanceKey","rf_type":["Type","InstanceKey",[]]},{"rf_name":"listId","rf_type":["Type","TaskId",[]]},{"rf_name":"session","rf_type":["Type","Bool",[]]},{"rf_name":"build","rf_type":["Type","String",[]]},{"rf_name":"issuedAt","rf_type":["Type","Timestamp",[]]},{"rf_name":"progress","rf_type":["Type","InstanceProgress",[]]},{"rf_name":"attributes","rf_type":["Type","TaskAttributes",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",48],["Nothing"],"TIValue"],{"tde_typedef":{"td_name":"TIValue","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TIValue","cons_args":[["Type","TaskValue",[["Type","JSONNode",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TIException","cons_args":[["Type","Dynamic",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.Internal.TaskState",["Just",75],["Nothing"],"DeferredJSON"],{"tde_typedef":{"td_name":"DeferredJSON","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"DeferredJSON","cons_args":[["Var","a"]],"cons_exi_vars":["a"],"cons_context":[[["Class","TC"],["Var","a"]],[["Generic","JSONEncode",["KindConst"]],["Var","a"]]]},{"cons_name":"DeferredJSONNode","cons_args":[["Type","JSONNode",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",58],["Nothing"],"TaskTree"],{"tde_typedef":{"td_name":"TaskTree","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TCInit","cons_args":[["Type","TaskId",[]],["Type","TaskTime",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCBasic","cons_args":[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","JSONNode",[]],["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCInteract","cons_args":[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","JSONNode",[]],["Type","JSONNode",[]],["Type","EditMask",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCProject","cons_args":[["Type","TaskId",[]],["Type","JSONNode",[]],["Type","TaskTree",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCStep","cons_args":[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","Either",[["Type","_Tuple2",[["Type","TaskTree",[]],["Type","_List",[["Type","String",[]]]]]],["Type","_Tuple3",[["Type","DeferredJSON",[]],["Type","Int",[]],["Type","TaskTree",[]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCParallel","cons_args":[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","TaskTree",[]]]]]],["Type","_List",[["Type","String",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCShared","cons_args":[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","TaskTree",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCAttach","cons_args":[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","AttachmentStatus",[]],["Type","String",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCExposedShared","cons_args":[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","String",[]],["Type","TaskTree",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCStable","cons_args":[["Type","TaskId",[]],["Type","TaskTime",[]],["Type","DeferredJSON",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCLayout","cons_args":[["Type","JSONNode",[]],["Type","TaskTree",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCNop","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCDestroy","cons_args":[["Type","TaskTree",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.TaskState",["Just",82],["Nothing"],"ParallelTaskState"],{"tde_typedef":{"td_name":"ParallelTaskState","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ParallelTaskState",[],[{"rf_name":"taskId","rf_type":["Type","TaskId",[]]},{"rf_name":"index","rf_type":["Type","Int",[]]},{"rf_name":"detached","rf_type":["Type","Bool",[]]},{"rf_name":"attributes","rf_type":["Type","TaskAttributes",[]]},{"rf_name":"value","rf_type":["Type","TaskValue",[["Type","JSONNode",[]]]]},{"rf_name":"createdAt","rf_type":["Type","TaskTime",[]]},{"rf_name":"lastFocus","rf_type":["Type","Maybe",[["Type","TaskTime",[]]]]},{"rf_name":"lastEvent","rf_type":["Type","TaskTime",[]]},{"rf_name":"change","rf_type":["Type","Maybe",[["Type","ParallelTaskChange",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]]],["Bin",43,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",37],["Nothing"],"BlueprintQuery"],{"tde_typedef":{"td_name":"BlueprintQuery","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"FuncName","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UserInvolved","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IsActiveTask","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"HasInstanceNo","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AndQuery","cons_args":[["Type","BlueprintQuery",[]],["Type","BlueprintQuery",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OrQuery","cons_args":[["Type","BlueprintQuery",[]],["Type","BlueprintQuery",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",31,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",46],["Nothing"],"TExpr"],{"tde_typedef":{"td_name":"TExpr","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TVar","cons_args":[["Type","ExprId",[]],["Type","PPExpr",[]],["Type","VarPtr",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TLit","cons_args":[["Type","TLit",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TPPExpr","cons_args":[["Type","PPExpr",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TMApp","cons_args":[["Type","ExprId",[]],["Type","Maybe",[["Type","TypeName",[]]]],["Type","ModuleName",[]],["Type","FuncName",[]],["Type","_List",[["Type","TExpr",[]]]],["Type","TPriority",[]],["Type","Maybe",[["Type","VarPtr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TFApp","cons_args":[["Type","ExprId",[]],["Type","FuncName",[]],["Type","_List",[["Type","TExpr",[]]]],["Type","TPriority",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TLam","cons_args":[["Type","_List",[["Type","TExpr",[]]]],["Type","TExpr",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TSel","cons_args":[["Type","TExpr",[]],["Type","_List",[["Type","TExpr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TRecUpd","cons_args":[["Type","VarName",[]],["Type","TExpr",[]],["Type","_List",[["Type","TExpr",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TNoBind","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TLet","cons_args":[["Type","_List",[["Type","_Tuple2",[["Type","Pattern",[]],["Type","TExpr",[]]]]]],["Type","TExpr",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TIf","cons_args":[["Type","ExprId",[]],["Type","TExpr",[]],["Type","TExpr",[]],["Type","TExpr",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TCase","cons_args":[["Type","ExprId",[]],["Type","TExpr",[]],["Type","_List",[["Type","_Tuple2",[["Type","Pattern",[]],["Type","TExpr",[]]]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TExpand","cons_args":[["Type","_List",[["Type","TExpr",[]]]],["Type","TonicFunc",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TAugment","cons_args":[["Type","TExpr",[]],["Type","TExpr",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",19,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",26],["Nothing"],"TestResult"],{"tde_typedef":{"td_name":"TestResult","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Passed","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Failed","cons_args":[["Type","Maybe",[["Type","String",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Skipped","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",6,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",12],["Nothing"],"Test"],{"tde_typedef":{"td_name":"Test","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"UnitTest","cons_args":[["Type","UnitTest",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"InteractiveTest","cons_args":[["Type","InteractiveTest",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.Internal.TaskStore",["Just",29],["Nothing"],"InstanceData"],{"tde_typedef":{"td_name":"InstanceData","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple4",[["Type","InstanceNo",[]],["Type","Maybe",[["Type","InstanceConstants",[]]]],["Type","Maybe",[["Type","InstanceProgress",[]]]],["Type","Maybe",[["Type","TaskAttributes",[]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.TaskStore",["Just",18],["Nothing"],"InstanceFilter"],{"tde_typedef":{"td_name":"InstanceFilter","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_InstanceFilter",[],[{"rf_name":"onlyInstanceNo","rf_type":["Type","Maybe",[["Type","_List",[["Type","InstanceNo",[]]]]]]},{"rf_name":"notInstanceNo","rf_type":["Type","Maybe",[["Type","_List",[["Type","InstanceNo",[]]]]]]},{"rf_name":"onlySession","rf_type":["Type","Maybe",[["Type","Bool",[]]]]},{"rf_name":"matchAttribute","rf_type":["Type","Maybe",[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]]]]},{"rf_name":"includeConstants","rf_type":["Type","Bool",[]]},{"rf_name":"includeProgress","rf_type":["Type","Bool",[]]},{"rf_name":"includeAttributes","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",5],["Nothing"],"InteractiveTest"],{"tde_typedef":{"td_name":"InteractiveTest","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_InteractiveTest",[],[{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"instructions","rf_type":["Type","String",[]]},{"rf_name":"expectation","rf_type":["Type","String",[]]},{"rf_name":"taskUnderTest","rf_type":["Type","Task",[["Type","_Unit",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",15],["Nothing"],"UnitTest"],{"tde_typedef":{"td_name":"UnitTest","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_UnitTest",[],[{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"test","rf_type":["Func",[["Uniq",["Type","World",[]]]],["Uniq",["Type","_Tuple2",[["Type","TestResult",[]],["Uniq",["Type","World",[]]]]]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",20],["Nothing"],"TestSuite"],{"tde_typedef":{"td_name":"TestSuite","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TestSuite",[],[{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"description","rf_type":["Type","String",[]]},{"rf_name":"tests","rf_type":["Type","_List",[["Type","Test",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",12,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",26],["Nothing"],"PPExpr"],{"tde_typedef":{"td_name":"PPExpr","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",6,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",23],["Nothing"],"FuncName"],{"tde_typedef":{"td_name":"FuncName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",36],["Nothing"],"TestReport"],{"tde_typedef":{"td_name":"TestReport","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","SuiteResult",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.Test.Definition",["Just",31],["Nothing"],"SuiteResult"],{"tde_typedef":{"td_name":"SuiteResult","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_SuiteResult",[],[{"rf_name":"suiteName","rf_type":["Type","String",[]]},{"rf_name":"testResults","rf_type":["Type","_List",[["Type","_Tuple2",[["Type","String",[]],["Type","TestResult",[]]]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",22],["Nothing"],"ModuleName"],{"tde_typedef":{"td_name":"ModuleName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",24],["Nothing"],"Pattern"],{"tde_typedef":{"td_name":"Pattern","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","TExpr",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",25],["Nothing"],"TypeName"],{"tde_typedef":{"td_name":"TypeName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",29],["Nothing"],"VarPtr"],{"tde_typedef":{"td_name":"VarPtr","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",27],["Nothing"],"ExprId"],{"tde_typedef":{"td_name":"ExprId","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","Int",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",28],["Nothing"],"VarName"],{"tde_typedef":{"td_name":"VarName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",31],["Nothing"],"TonicModule"],{"tde_typedef":{"td_name":"TonicModule","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TonicModule",[],[{"rf_name":"tm_name","rf_type":["Type","ModuleName",[]]},{"rf_name":"tm_funcs","rf_type":["Type","Map",[["Type","FuncName",[]],["Type","TonicFunc",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",36],["Nothing"],"TonicFunc"],{"tde_typedef":{"td_name":"TonicFunc","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TonicFunc",[],[{"rf_name":"tf_comments","rf_type":["Type","String",[]]},{"rf_name":"tf_module","rf_type":["Type","ModuleName",[]]},{"rf_name":"tf_name","rf_type":["Type","FuncName",[]]},{"rf_name":"tf_iclLineNo","rf_type":["Type","Int",[]]},{"rf_name":"tf_resty","rf_type":["Type","TExpr",[]]},{"rf_name":"tf_args","rf_type":["Type","_List",[["Type","_Tuple2",[["Type","TExpr",[]],["Type","TExpr",[]]]]]]},{"rf_name":"tf_body","rf_type":["Type","TExpr",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]]],["Bin",11,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",29],["Nothing"],"TaskAppRenderer"],{"tde_typedef":{"td_name":"TaskAppRenderer","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Func",[["Type","Bool",[]]],["Func",[["Type","Bool",[]]],["Func",[["Type","Bool",[]]],["Func",[["Type","Bool",[]]],["Func",[["Type","Bool",[]]],["Func",[["Type","Bool",[]]],["Func",[["Type","Bool",[]]],["Func",[["Type","ExprId",[]]],["Func",[["Type","ModuleName",[]]],["Func",[["Type","FuncName",[]]],["Func",[["Type","ModuleName",[]]],["Func",[["Type","FuncName",[]]],["Func",[["Type","_List",[["Type","Image",[["Type","ModelTy",[]]]]]]],["Func",[["Type","_List",[["Type","Image",[["Type","ModelTy",[]]]]]]],["Func",[["Uniq",["Type","TagSource",[]]]],["Uniq",["Type","_Tuple2",[["Type","Maybe",[["Type","Image",[["Type","ModelTy",[]]]]]],["Uniq",["Type","TagSource",[]]]]]],[]],[]],[]],[]],[]],[]],[]],[]],[]],[]],[]],[]],[]],[]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",5,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",74],["Nothing"],"TPriority"],{"tde_typedef":{"td_name":"TPriority","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TPrio","cons_args":[["Type","TAssoc",[]],["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TNoPrio","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",63],["Nothing"],"TLit"],{"tde_typedef":{"td_name":"TLit","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TBool","cons_args":[["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TInt","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TReal","cons_args":[["Type","Real",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TString","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",69],["Nothing"],"TAssoc"],{"tde_typedef":{"td_name":"TAssoc","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TLeftAssoc","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TRightAssoc","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TNoAssoc","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",24],["Nothing"],"ActionState"],{"tde_typedef":{"td_name":"ActionState","td_uniq":false,"td_args":[["Var","a"],["Var","s"]],"td_rhs":["TDRRecord","_ActionState",[],[{"rf_name":"state","rf_type":["Var","s"]},{"rf_name":"action","rf_type":["Type","Maybe",[["Var","a"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Images",["Just",27],["Nothing"],"ModelTy"],{"tde_typedef":{"td_name":"ModelTy","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","ActionState",[["Type","_Tuple2",[["Type","TClickAction",[]],["Type","ClickMeta",[]]]],["Type","TonicImageState",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",18],["Nothing"],"DynamicDisplaySettings"],{"tde_typedef":{"td_name":"DynamicDisplaySettings","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_DynamicDisplaySettings",[],[{"rf_name":"unfold_depth","rf_type":["Type","Int",[]]},{"rf_name":"display_compact","rf_type":["Type","Bool",[]]},{"rf_name":"show_finished_blueprints","rf_type":["Type","Bool",[]]},{"rf_name":"show_task_value","rf_type":["Type","Bool",[]]},{"rf_name":"show_comments","rf_type":["Type","Bool",[]]},{"rf_name":"show_all_child_tasks","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",10],["Nothing"],"ListId"],{"tde_typedef":{"td_name":"ListId","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","TaskId",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",12],["Nothing"],"StaticDisplaySettings"],{"tde_typedef":{"td_name":"StaticDisplaySettings","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_StaticDisplaySettings",[],[{"rf_name":"unfold_depth","rf_type":["Type","Int",[]]},{"rf_name":"display_compact","rf_type":["Type","Bool",[]]},{"rf_name":"show_comments","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",27],["Nothing"],"NavStack"],{"tde_typedef":{"td_name":"NavStack","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","ClickMeta",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",29],["Nothing"],"DynamicView"],{"tde_typedef":{"td_name":"DynamicView","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_DynamicView",[],[{"rf_name":"taskName","rf_type":["Type","String",[]]},{"rf_name":"startTime","rf_type":["Type","String",[]]},{"rf_name":"lastUpdate","rf_type":["Type","String",[]]},{"rf_name":"endTime","rf_type":["Type","String",[]]},{"rf_name":"user","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]]],["Bin",11,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",71],["Nothing"],"TStability"],{"tde_typedef":{"td_name":"TStability","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TNoVal","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TStable","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TUnstable","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",5,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",52],["Nothing"],"BlueprintInstance"],{"tde_typedef":{"td_name":"BlueprintInstance","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_BlueprintInstance",[],[{"rf_name":"bpi_taskId","rf_type":["Type","TaskId",[]]},{"rf_name":"bpi_startTime","rf_type":["Type","DateTime",[]]},{"rf_name":"bpi_lastUpdated","rf_type":["Type","DateTime",[]]},{"rf_name":"bpi_endTime","rf_type":["Type","Maybe",[["Type","DateTime",[]]]]},{"rf_name":"bpi_activeNodes","rf_type":["Type","Map",[["Type","ListId",[]],["Type","IntMap",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","ExprId",[]]]]]]]]},{"rf_name":"bpi_previouslyActive","rf_type":["Type","Map",[["Type","ExprId",[]],["Type","TaskId",[]]]]},{"rf_name":"bpi_parentTaskId","rf_type":["Type","TaskId",[]]},{"rf_name":"bpi_currentUser","rf_type":["Type","Maybe",[["Type","User",[]]]]},{"rf_name":"bpi_blueprint","rf_type":["Type","TonicFunc",[]]},{"rf_name":"bpi_case_branches","rf_type":["Type","Map",[["Type","ExprId",[]],["Type","Int",[]]]]},{"rf_name":"bpi_index","rf_type":["Type","Int",[]]},{"rf_name":"bpi_bpref","rf_type":["Type","BlueprintIdent",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",45],["Nothing"],"AllBlueprints"],{"tde_typedef":{"td_name":"AllBlueprints","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Map",[["Type","ModuleName",[]],["Type","Map",[["Type","FuncName",[]],["Type","TonicFunc",[]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",47],["Nothing"],"BlueprintIdent"],{"tde_typedef":{"td_name":"BlueprintIdent","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_BlueprintIdent",[],[{"rf_name":"bpr_moduleName","rf_type":["Type","ModuleName",[]]},{"rf_name":"bpr_taskName","rf_type":["Type","FuncName",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",67],["Nothing"],"TonicRTMap"],{"tde_typedef":{"td_name":"TonicRTMap","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Map",[["Type","TaskId",[]],["Type","_List",[["Type","_Tuple2",[["Type","_Tuple2",[["Type","ModuleName",[]],["Type","FuncName",[]]]],["Type","BlueprintInstance",[]]]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",69],["Nothing"],"Calltrace"],{"tde_typedef":{"td_name":"Calltrace","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","CircularStack",[["Type","TaskId",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",5,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",77],["Nothing"],"FunctionName"],{"tde_typedef":{"td_name":"FunctionName","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",75],["Nothing"],"ComputationId"],{"tde_typedef":{"td_name":"ComputationId","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","Int",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",76],["Nothing"],"NodeId"],{"tde_typedef":{"td_name":"NodeId","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","Int",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",79],["Nothing"],"TonicMessage"],{"tde_typedef":{"td_name":"TonicMessage","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TMNewTopLevel","cons_args":[["Type","TMNewTopLevel",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TMApply","cons_args":[["Type","TMApply",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",83],["Nothing"],"TMNewTopLevel"],{"tde_typedef":{"td_name":"TMNewTopLevel","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TMNewTopLevel",[],[{"rf_name":"tmn_computationId","rf_type":["Type","ComputationId",[]]},{"rf_name":"tmn_bpModuleName","rf_type":["Type","ModuleName",[]]},{"rf_name":"tmn_bpFunctionName","rf_type":["Type","FunctionName",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]]]],["Bin",52,["Location","iTasks","iTasks.UI.Definition",["Just",116],["Nothing"],"UISize"],{"tde_typedef":{"td_name":"UISize","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ExactSize","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"WrapSize","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FlexSize","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",37,["Location","iTasks","iTasks.Internal.WebService",["Just",44],["Just",254],"ChangeQueues"],{"tde_typedef":{"td_name":"ChangeQueues","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Map",[["Type","InstanceNo",[]],["Type","Queue",[["Type","UIChange",[]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",9,["Location","iTasks","iTasks.Internal.WebService",["Just",18],["Nothing"],"ConnectionState"],{"tde_typedef":{"td_name":"ConnectionState","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple3",[["Type","String",[]],["Type","WebSockState",[]],["Type","_List",[["Type","_Tuple2",[["Type","InstanceNo",[]],["Type","String",[]]]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",5,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",126],["Nothing"],"TonicImageState"],{"tde_typedef":{"td_name":"TonicImageState","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TonicImageState",[],[{"rf_name":"tis_task","rf_type":["Type","TonicFunc",[]]},{"rf_name":"tis_depth","rf_type":["Type","Int",[]]},{"rf_name":"tis_compact","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",98],["Nothing"],"GenBlueprintInstance"],{"tde_typedef":{"td_name":"GenBlueprintInstance","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_GenBlueprintInstance",[],[{"rf_name":"gbpi_computationId","rf_type":["Type","ComputationId",[]]},{"rf_name":"gbpi_activeNode","rf_type":["Type","_Tuple2",[["Type","ComputationId",[]],["Type","ExprId",[]]]]},{"rf_name":"gbpi_previouslyActive","rf_type":["Type","Map",[["Type","ExprId",[]],["Type","ComputationId",[]]]]},{"rf_name":"gbpi_parentId","rf_type":["Type","ComputationId",[]]},{"rf_name":"gbpi_blueprint","rf_type":["Type","TonicFunc",[]]},{"rf_name":"gbpi_case_branches","rf_type":["Type","Map",[["Type","ExprId",[]],["Type","Int",[]]]]},{"rf_name":"gbpi_bpref","rf_type":["Type","BlueprintIdent",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",124],["Nothing"],"TClickAction"],{"tde_typedef":{"td_name":"TClickAction","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TNavAction","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TDetailAction","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"TSelectArg","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",132],["Nothing"],"ClickMeta"],{"tde_typedef":{"td_name":"ClickMeta","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ClickMeta",[],[{"rf_name":"click_origin_mbbpident","rf_type":["Type","Maybe",[["Type","BlueprintRef",[]]]]},{"rf_name":"click_origin_mbnodeId","rf_type":["Type","Maybe",[["Type","ExprId",[]]]]},{"rf_name":"click_target_bpident","rf_type":["Type","BlueprintRef",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Bin",1,["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",138],["Nothing"],"BlueprintRef"],{"tde_typedef":{"td_name":"BlueprintRef","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_BlueprintRef",[],[{"rf_name":"bpident_moduleName","rf_type":["Type","ModuleName",[]]},{"rf_name":"bpident_compName","rf_type":["Type","FuncName",[]]},{"rf_name":"bpident_compId","rf_type":["Type","Maybe",[["Type","ComputationId",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.Internal.WebService",["Just",26],["Nothing"],"WebSockEvent"],{"tde_typedef":{"td_name":"WebSockEvent","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"WSTextMessage","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"WSBinMessage","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"WSClose","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"WSPing","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",20],["Nothing"],"WebSockState"],{"tde_typedef":{"td_name":"WebSockState","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_WebSockState",[],[{"rf_name":"cur_frame","rf_type":["Type","_#Array",[["Type","Char",[]]]]},{"rf_name":"message_text","rf_type":["Type","Bool",[]]},{"rf_name":"message_data","rf_type":["Type","_List",[["Type","String",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.Internal.WebService",["Just",32],["Nothing"],"WebService"],{"tde_typedef":{"td_name":"WebService","td_uniq":false,"td_args":[["Var","r"],["Var","w"]],"td_rhs":["TDRRecord","_WebService",[],[{"rf_name":"urlMatchPred","rf_type":["Func",[["Type","String",[]]],["Type","Bool",[]],[]]},{"rf_name":"completeRequest","rf_type":["Type","Bool",[]]},{"rf_name":"onNewReq","rf_type":["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple4",[["Type","HTTPResponse",[]],["Type","Maybe",[["Type","ConnectionState",[]]]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]]},{"rf_name":"onData","rf_type":["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Type","String",[]]],["Func",[["Type","ConnectionState",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","_List",[["Type","_#Array",[["Type","Char",[]]]]]],["Type","Bool",[]],["Type","ConnectionState",[]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]],[]]},{"rf_name":"onShareChange","rf_type":["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Type","ConnectionState",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","_List",[["Type","_#Array",[["Type","Char",[]]]]]],["Type","Bool",[]],["Type","ConnectionState",[]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]]},{"rf_name":"onTick","rf_type":["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Type","ConnectionState",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple5",[["Type","_List",[["Type","_#Array",[["Type","Char",[]]]]]],["Type","Bool",[]],["Type","ConnectionState",[]],["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]]},{"rf_name":"onDisconnect","rf_type":["Func",[["Type","HTTPRequest",[]]],["Func",[["Var","r"]],["Func",[["Type","ConnectionState",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","Maybe",[["Var","w"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",27,["Location","iTasks","iTasks.SDS.Definition",["Just",90],["Nothing"],"SDSSequence"],{"tde_typedef":{"td_name":"SDSSequence","td_uniq":false,"td_args":[["Var","p"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","r"],["Var","w"]],"td_rhs":["TDRRecord","_SDSSequence",[],[{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"param","rf_type":["Func",[["Var","p"]],["Func",[["Var","r1"]],["Var","p2"],[]],[]]},{"rf_name":"read","rf_type":["Func",[["Type","_Tuple2",[["Var","r1"],["Var","r2"]]]],["Var","r"],[]]},{"rf_name":"writel","rf_type":["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r1"],["Var","w1"]]]},{"rf_name":"writer","rf_type":["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r2"],["Var","w2"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",18,["Location","iTasks","iTasks.SDS.Definition",["Just",41],["Nothing"],"SDSNotifyPred"],{"tde_typedef":{"td_name":"SDSNotifyPred","td_uniq":false,"td_args":[["Var","p"]],"td_rhs":["TDRSynonym",["Func",[["Var","p"]],["Type","Bool",[]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",10,["Location","iTasks","iTasks.SDS.Definition",["Just",34],["Nothing"],"ReadWriteShared"],{"tde_typedef":{"td_name":"ReadWriteShared","td_uniq":false,"td_args":[["Var","r"],["Var","w"]],"td_rhs":["TDRSynonym",["Type","SDS",[["Type","_Unit",[]],["Var","r"],["Var","w"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",6,["Location","iTasks","iTasks.SDS.Definition",["Just",19],["Nothing"],"SDS"],{"tde_typedef":{"td_name":"SDS","td_uniq":false,"td_args":[["Var","p"],["Var","r"],["Var","w"]],"td_rhs":["TDRCons",false,[{"cons_name":"SDSSource","cons_args":[["Type","SDSSource",[["Var","p"],["Var","r"],["Var","w"]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SDSLens","cons_args":[["Type","RWShared",[["Var","ps"],["Var","rs"],["Var","ws"]]],["Type","SDSLens",[["Var","p"],["Var","r"],["Var","w"],["Var","ps"],["Var","rs"],["Var","ws"]]]],"cons_exi_vars":["ps","rs","ws"],"cons_context":[[["Class","iTask"],["Var","ps"]]]},{"cons_name":"SDSSelect","cons_args":[["Type","RWShared",[["Var","p1"],["Var","r"],["Var","w"]]],["Type","RWShared",[["Var","p2"],["Var","r"],["Var","w"]]],["Type","SDSSelect",[["Var","p"],["Var","p1"],["Var","p2"],["Var","r"],["Var","w"]]]],"cons_exi_vars":["p1","p2"],"cons_context":[[["Class","iTask"],["Var","p1"]],[["Class","iTask"],["Var","p2"]]]},{"cons_name":"SDSParallel","cons_args":[["Type","RWShared",[["Var","p1"],["Var","r1"],["Var","w1"]]],["Type","RWShared",[["Var","p2"],["Var","r2"],["Var","w2"]]],["Type","SDSParallel",[["Var","p1"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","p"],["Var","r"],["Var","w"]]]],"cons_exi_vars":["p1","r1","w1","p2","r2","w2"],"cons_context":[[["Class","iTask"],["Var","p1"]],[["Class","iTask"],["Var","p2"]]]},{"cons_name":"SDSSequence","cons_args":[["Type","RWShared",[["Var","p"],["Var","r1"],["Var","w1"]]],["Type","RWShared",[["Var","p2"],["Var","r2"],["Var","w2"]]],["Type","SDSSequence",[["Var","p"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","r"],["Var","w"]]]],"cons_exi_vars":["r1","w1","p2","r2","w2"],"cons_context":[[["Class","iTask"],["Var","p2"]]]},{"cons_name":"SDSDynamic","cons_args":[["Func",[["Var","p"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","RWShared",[["Var","p"],["Var","r"],["Var","w"]]]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",25],["Nothing"],"SDSWriteProjection"],{"tde_typedef":{"td_name":"SDSWriteProjection","td_uniq":false,"td_args":[["Var","rs"],["Var","ws"],["Var","wt"]],"td_rhs":["TDRCons",false,[{"cons_name":"SDSLensWrite","cons_args":[["Func",[["Var","rs"]],["Func",[["Var","wt"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","ws"]]]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SDSBlindWrite","cons_args":[["Func",[["Var","wt"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","ws"]]]]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SDSNoWrite","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.SDS.Combinators.Common",["Just",21],["Nothing"],"SDSReadProjection"],{"tde_typedef":{"td_name":"SDSReadProjection","td_uniq":false,"td_args":[["Var","rs"],["Var","rt"]],"td_rhs":["TDRCons",false,[{"cons_name":"SDSLensRead","cons_args":[["Func",[["Var","rs"]],["Type","MaybeError",[["Type","TaskException",[]],["Var","rt"]]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SDSConstRead","cons_args":[["Var","rt"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",31],["Nothing"],"ROShared"],{"tde_typedef":{"td_name":"ROShared","td_uniq":false,"td_args":[["Var","p"],["Var","a"]],"td_rhs":["TDRSynonym",["Type","SDS",[["Var","p"],["Var","a"],["Type","_Unit",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",30],["Nothing"],"RWShared"],{"tde_typedef":{"td_name":"RWShared","td_uniq":false,"td_args":[["Var","p"],["Var","r"],["Var","w"]],"td_rhs":["TDRSynonym",["Type","SDS",[["Var","p"],["Var","r"],["Var","w"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",32],["Nothing"],"WOShared"],{"tde_typedef":{"td_name":"WOShared","td_uniq":false,"td_args":[["Var","p"],["Var","a"]],"td_rhs":["TDRSynonym",["Type","SDS",[["Var","p"],["Type","_Unit",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",36],["Nothing"],"WriteOnlyShared"],{"tde_typedef":{"td_name":"WriteOnlyShared","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","SDS",[["Type","_Unit",[]],["Type","_Unit",[]],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",35],["Nothing"],"ReadOnlyShared"],{"tde_typedef":{"td_name":"ReadOnlyShared","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","SDS",[["Type","_Unit",[]],["Var","a"],["Type","_Unit",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",37],["Nothing"],"Shared"],{"tde_typedef":{"td_name":"Shared","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","SDS",[["Type","_Unit",[]],["Var","a"],["Var","a"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.SDS.Definition",["Just",63],["Nothing"],"SDSLensWrite"],{"tde_typedef":{"td_name":"SDSLensWrite","td_uniq":false,"td_args":[["Var","p"],["Var","w"],["Var","rs"],["Var","ws"]],"td_rhs":["TDRCons",false,[{"cons_name":"SDSWrite","cons_args":[["Func",[["Var","p"]],["Func",[["Var","rs"]],["Func",[["Var","w"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","ws"]]]]],[]],[]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SDSWriteConst","cons_args":[["Func",[["Var","p"]],["Func",[["Var","w"]],["Type","MaybeError",[["Type","TaskException",[]],["Type","Maybe",[["Var","ws"]]]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",51],["Nothing"],"SDSLens"],{"tde_typedef":{"td_name":"SDSLens","td_uniq":false,"td_args":[["Var","p"],["Var","r"],["Var","w"],["Var","ps"],["Var","rs"],["Var","ws"]],"td_rhs":["TDRRecord","_SDSLens",[],[{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"param","rf_type":["Func",[["Var","p"]],["Var","ps"],[]]},{"rf_name":"read","rf_type":["Type","SDSLensRead",[["Var","p"],["Var","r"],["Var","rs"]]]},{"rf_name":"write","rf_type":["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","rs"],["Var","ws"]]]},{"rf_name":"notify","rf_type":["Type","SDSLensNotify",[["Var","p"],["Var","w"],["Var","rs"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",44],["Nothing"],"SDSSource"],{"tde_typedef":{"td_name":"SDSSource","td_uniq":false,"td_args":[["Var","p"],["Var","r"],["Var","w"]],"td_rhs":["TDRRecord","_SDSSource",[],[{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"read","rf_type":["Func",[["Var","p"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Var","r"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]]},{"rf_name":"write","rf_type":["Func",[["Var","p"]],["Func",[["Var","w"]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeError",[["Type","TaskException",[]],["Type","SDSNotifyPred",[["Var","p"]]]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",59],["Nothing"],"SDSLensRead"],{"tde_typedef":{"td_name":"SDSLensRead","td_uniq":false,"td_args":[["Var","p"],["Var","r"],["Var","rs"]],"td_rhs":["TDRCons",false,[{"cons_name":"SDSRead","cons_args":[["Func",[["Var","p"]],["Func",[["Var","rs"]],["Type","MaybeError",[["Type","TaskException",[]],["Var","r"]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SDSReadConst","cons_args":[["Func",[["Var","p"]],["Var","r"],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.SDS.Definition",["Just",72],["Nothing"],"SDSSelect"],{"tde_typedef":{"td_name":"SDSSelect","td_uniq":false,"td_args":[["Var","p"],["Var","p1"],["Var","p2"],["Var","r"],["Var","w"]],"td_rhs":["TDRRecord","_SDSSelect",[],[{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"select","rf_type":["Func",[["Var","p"]],["Type","Either",[["Var","p1"],["Var","p2"]]],[]]},{"rf_name":"notifyl","rf_type":["Func",[["Var","p1"]],["Func",[["Var","r"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p2"]]],[]],[]],[]]},{"rf_name":"notifyr","rf_type":["Func",[["Var","p2"]],["Func",[["Var","r"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p1"]]],[]],[]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",67],["Nothing"],"SDSLensNotify"],{"tde_typedef":{"td_name":"SDSLensNotify","td_uniq":false,"td_args":[["Var","p"],["Var","w"],["Var","rs"]],"td_rhs":["TDRCons",false,[{"cons_name":"SDSNotify","cons_args":[["Func",[["Var","p"]],["Func",[["Var","rs"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p"]]],[]],[]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SDSNotifyConst","cons_args":[["Func",[["Var","p"]],["Func",[["Var","w"]],["Type","SDSNotifyPred",[["Var","p"]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.SDS.Definition",["Just",80],["Nothing"],"SDSParallel"],{"tde_typedef":{"td_name":"SDSParallel","td_uniq":false,"td_args":[["Var","p1"],["Var","r1"],["Var","w1"],["Var","p2"],["Var","r2"],["Var","w2"],["Var","p"],["Var","r"],["Var","w"]],"td_rhs":["TDRRecord","_SDSParallel",[],[{"rf_name":"name","rf_type":["Type","String",[]]},{"rf_name":"param","rf_type":["Func",[["Var","p"]],["Type","_Tuple2",[["Var","p1"],["Var","p2"]]],[]]},{"rf_name":"read","rf_type":["Func",[["Type","_Tuple2",[["Var","r1"],["Var","r2"]]]],["Var","r"],[]]},{"rf_name":"writel","rf_type":["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r1"],["Var","w1"]]]},{"rf_name":"writer","rf_type":["Type","SDSLensWrite",[["Var","p"],["Var","w"],["Var","r2"],["Var","w2"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",8,["Location","iTasks","iTasks.UI.Definition",["Just",55],["Nothing"],"UI"],{"tde_typedef":{"td_name":"UI","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"UI","cons_args":[["Type","UINodeType",[]],["Type","UIAttributes",[]],["Type","_List",[["Type","UI",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","Rendering a user interface for a composition of is a staged process in which\nthe raw UI material provided by basic tasks is grouped by layout policies to reach\na final UI definition consisting of a set of controls and a window title for the top-level application window.\nThe UI type has contstructors for the various types of partial UI definitions."],[],["Just",["ADTDoc",[]]]]},["Bin",4,["Location","iTasks","iTasks.UI.Definition",["Just",39],["Nothing"],"UIAttributeChange"],{"tde_typedef":{"td_name":"UIAttributeChange","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SetAttribute","cons_args":[["Type","String",[]],["Type","JSONNode",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DelAttribute","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.UI.Definition",["Just",34],["Nothing"],"UIChange"],{"tde_typedef":{"td_name":"UIChange","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"NoChange","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ReplaceUI","cons_args":[["Type","UI",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ChangeUI","cons_args":[["Type","_List",[["Type","UIAttributeChange",[]]]],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","UIChildChange",[]]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.SDS.Sources.System",["Just",18],["Nothing"],"TaskInstance"],{"tde_typedef":{"td_name":"TaskInstance","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TaskInstance",[],[{"rf_name":"instanceNo","rf_type":["Type","InstanceNo",[]]},{"rf_name":"instanceKey","rf_type":["Type","InstanceKey",[]]},{"rf_name":"session","rf_type":["Type","Bool",[]]},{"rf_name":"listId","rf_type":["Type","TaskId",[]]},{"rf_name":"build","rf_type":["Type","String",[]]},{"rf_name":"issuedAt","rf_type":["Type","Timestamp",[]]},{"rf_name":"attributes","rf_type":["Type","TaskAttributes",[]]},{"rf_name":"value","rf_type":["Type","ValueStatus",[]]},{"rf_name":"firstEvent","rf_type":["Type","Maybe",[["Type","Timestamp",[]]]]},{"rf_name":"lastEvent","rf_type":["Type","Maybe",[["Type","Timestamp",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[["Just","Unique global identification"],["Just","Random string that a client needs to provide to access the task instance"],["Just","Is this a session"],["Just","Reference to parent tasklist"],["Just","Application build version when the instance was created"],["Just","When was the task created"],["Just","Arbitrary meta-data"],["Just","Status of the task value"],["Just","When was the first work done on this task"],["Just","When was the last event on this task"]]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",41],["Nothing"],"UIChildChange"],{"tde_typedef":{"td_name":"UIChildChange","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ChangeChild","cons_args":[["Type","UIChange",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RemoveChild","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"InsertChild","cons_args":[["Type","UI",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MoveChild","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",108],["Nothing"],"UIAttributes"],{"tde_typedef":{"td_name":"UIAttributes","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Map",[["Type","String",[]],["Type","JSONNode",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",57],["Nothing"],"UINodeType"],{"tde_typedef":{"td_name":"UINodeType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"UIEmpty","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIAction","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIPair","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIRecord","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UICons","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIVarCons","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIInteract","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIStep","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIParallel","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIComponent","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIViewport","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UITextField","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UITextArea","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIPasswordField","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIIntegerField","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIDecimalField","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIDocumentField","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UICheckbox","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UISlider","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIButton","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UILabel","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIIcon","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UITextView","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIHtmlView","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIProgressBar","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIDropdown","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UICheckGroup","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIChoiceList","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIGrid","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UITree","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIContainer","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIPanel","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UITabSet","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIWindow","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIMenu","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIToolBar","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIButtonBar","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIList","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIListItem","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIDebug","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"UIData","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",111],["Nothing"],"UIWindowType"],{"tde_typedef":{"td_name":"UIWindowType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"FloatingWindow","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NotificationBubble","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]]],["Bin",14,["Location","iTasks","iTasks.UI.Editor",["Just",22],["Nothing"],"Editor"],{"tde_typedef":{"td_name":"Editor","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRRecord","_Editor",[],[{"rf_name":"genUI","rf_type":["Func",[["Type","DataPath",[]]],["Func",[["Var","a"]],["Func",[["Uniq",["Type","VSt",[]]]],["Uniq",["Type","_Tuple2",[["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","UI",[]],["Type","EditMask",[]]]]]],["Uniq",["Type","VSt",[]]]]]],[]],[]],[]]},{"rf_name":"onEdit","rf_type":["Func",[["Type","DataPath",[]]],["Func",[["Type","_Tuple2",[["Type","DataPath",[]],["Type","JSONNode",[]]]]],["Func",[["Var","a"]],["Func",[["Type","EditMask",[]]],["Func",[["Uniq",["Type","VSt",[]]]],["Uniq",["Type","_Tuple3",[["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","UIChange",[]],["Type","EditMask",[]]]]]],["Var","a"],["Uniq",["Type","VSt",[]]]]]],[]],[]],[]],[]],[]]},{"rf_name":"onRefresh","rf_type":["Func",[["Type","DataPath",[]]],["Func",[["Var","a"]],["Func",[["Var","a"]],["Func",[["Type","EditMask",[]]],["Func",[["Uniq",["Type","VSt",[]]]],["Uniq",["Type","_Tuple3",[["Type","MaybeErrorString",[["Type","_Tuple2",[["Type","UIChange",[]],["Type","EditMask",[]]]]]],["Var","a"],["Uniq",["Type","VSt",[]]]]]],[]],[]],[]],[]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",7,["Location","iTasks","iTasks.UI.Definition",["Just",135],["Nothing"],"UIDirection"],{"tde_typedef":{"td_name":"UIDirection","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Horizontal","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Vertical","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",125],["Nothing"],"UIHAlign"],{"tde_typedef":{"td_name":"UIHAlign","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AlignLeft","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AlignCenter","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AlignRight","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",121],["Nothing"],"UIBound"],{"tde_typedef":{"td_name":"UIBound","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ExactBound","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"WrapBound","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",130],["Nothing"],"UIVAlign"],{"tde_typedef":{"td_name":"UIVAlign","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"AlignTop","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AlignMiddle","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"AlignBottom","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Definition",["Just",145],["Nothing"],"UISideSizes"],{"tde_typedef":{"td_name":"UISideSizes","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_UISideSizes",[],[{"rf_name":"top","rf_type":["Type","Int",[]]},{"rf_name":"right","rf_type":["Type","Int",[]]},{"rf_name":"bottom","rf_type":["Type","Int",[]]},{"rf_name":"left","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",139],["Nothing"],"UISide"],{"tde_typedef":{"td_name":"UISide","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TopSide","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RightSide","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"BottomSide","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LeftSide","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Definition",["Just",152],["Nothing"],"UITreeNode"],{"tde_typedef":{"td_name":"UITreeNode","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_UITreeNode",[],[{"rf_name":"text","rf_type":["Type","String",[]]},{"rf_name":"iconCls","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"children","rf_type":["Type","Maybe",[["Type","_List",[["Type","UITreeNode",[]]]]]]},{"rf_name":"leaf","rf_type":["Type","Bool",[]]},{"rf_name":"expanded","rf_type":["Type","Bool",[]]},{"rf_name":"value","rf_type":["Type","Int",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",6,["Location","iTasks","iTasks.UI.Editor",["Just",40],["Nothing"],"FieldMask"],{"tde_typedef":{"td_name":"FieldMask","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_FieldMask",[],[{"rf_name":"touched","rf_type":["Type","Bool",[]]},{"rf_name":"valid","rf_type":["Type","Bool",[]]},{"rf_name":"state","rf_type":["Type","JSONNode",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.UI.Editor",["Just",31],["Nothing"],"EditMode"],{"tde_typedef":{"td_name":"EditMode","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Enter","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Update","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"View","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",29],["Nothing"],"DataPath"],{"tde_typedef":{"td_name":"DataPath","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","Int",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",36],["Nothing"],"EditMask"],{"tde_typedef":{"td_name":"EditMask","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"FieldMask","cons_args":[["Type","FieldMask",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"CompoundMask","cons_args":[["Type","CompoundMask",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Editor",["Just",51],["Nothing"],"Masked"],{"tde_typedef":{"td_name":"Masked","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Var","a"],["Type","EditMask",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Editor",["Just",46],["Nothing"],"CompoundMask"],{"tde_typedef":{"td_name":"CompoundMask","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_CompoundMask",[],[{"rf_name":"fields","rf_type":["Type","_List",[["Type","EditMask",[]]]]},{"rf_name":"state","rf_type":["Type","JSONNode",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Tip"]]]]]]],["Bin",90,["Location","iTasks","iTasks.UI.Layout",["Just",90],["Nothing"],"UIAttributeSelection"],{"tde_typedef":{"td_name":"UIAttributeSelection","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SelectAll","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectKeys","cons_args":[["Type","_List",[["Type","String",[]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",27,["Location","iTasks","iTasks.UI.JS.Map",["Just",5],["Nothing"],"JSMap"],{"tde_typedef":{"td_name":"JSMap","td_uniq":false,"td_args":[["Var","k"],["Var","v"]],"td_rhs":["TDRSynonym",["Type","JSArr",[["Var","v"]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",19,["Location","iTasks","iTasks.UI.JS.Interface",["Just",30],["Just",18],"JSArg"],{"tde_typedef":{"td_name":"JSArg","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",11,["Location","iTasks","iTasks.UI.JS.Interface",["Just",26],["Just",14],"JSVal"],{"tde_typedef":{"td_name":"JSVal","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",7,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",57],["Nothing"],"ChoiceNode"],{"tde_typedef":{"td_name":"ChoiceNode","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ChoiceNode",[],[{"rf_name":"id","rf_type":["Type","Int",[]]},{"rf_name":"label","rf_type":["Type","String",[]]},{"rf_name":"icon","rf_type":["Type","Maybe",[["Type","String",[]]]]},{"rf_name":"expanded","rf_type":["Type","Bool",[]]},{"rf_name":"children","rf_type":["Type","_List",[["Type","ChoiceNode",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",48],["Nothing"],"ChoiceGrid"],{"tde_typedef":{"td_name":"ChoiceGrid","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ChoiceGrid",[],[{"rf_name":"header","rf_type":["Type","_List",[["Type","String",[]]]]},{"rf_name":"rows","rf_type":["Type","_List",[["Type","ChoiceRow",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",44],["Nothing"],"ChoiceText"],{"tde_typedef":{"td_name":"ChoiceText","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ChoiceText",[],[{"rf_name":"id","rf_type":["Type","Int",[]]},{"rf_name":"text","rf_type":["Type","String",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Editor.Builtin",["Just",52],["Nothing"],"ChoiceRow"],{"tde_typedef":{"td_name":"ChoiceRow","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_ChoiceRow",[],[{"rf_name":"id","rf_type":["Type","Int",[]]},{"rf_name":"cells","rf_type":["Type","_List",[["Type","HtmlTag",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",19],["Nothing"],"JSIO"],{"tde_typedef":{"td_name":"JSIO","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"JSIO","cons_args":[["Func",[["Uniq",["Type","JSWorld",[]]]],["Uniq",["Type","_Tuple2",[["Var","a"],["Uniq",["Type","JSWorld",[]]]]]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","This module provides access to the javascript world of webbrowsers\nwhere all the client side objects of which the iTask world live."],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",12],["Nothing"],"DomElementId"],{"tde_typedef":{"td_name":"DomElementId","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",25],["Just",13],"JSWorld"],{"tde_typedef":{"td_name":"JSWorld","td_uniq":true,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",28],["Nothing"],"JSFun"],{"tde_typedef":{"td_name":"JSFun","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","JSObj",[["Type","JSFunction",[["Var","a"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",27],["Nothing"],"JSObj"],{"tde_typedef":{"td_name":"JSObj","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","JSVal",[["Type","JSObject",[["Var","a"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",29],["Nothing"],"JSArr"],{"tde_typedef":{"td_name":"JSArr","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","JSObj",[["Type","JSArray",[["Var","a"]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.UI.JS.Interface",["Just",35],["Just",20],"JSWindow"],{"tde_typedef":{"td_name":"JSWindow","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",33],["Just",23],"JSArray"],{"tde_typedef":{"td_name":"JSArray","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",32],["Just",22],"JSFunction"],{"tde_typedef":{"td_name":"JSFunction","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",34],["Just",24],"JSObject"],{"tde_typedef":{"td_name":"JSObject","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.JS.Interface",["Just",37],["Just",25],"JSEvent"],{"tde_typedef":{"td_name":"JSEvent","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",36],["Just",21],"JSDocument"],{"tde_typedef":{"td_name":"JSDocument","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.JS.Interface",["Just",63],["Just",84],"JSObjSelector"],{"tde_typedef":{"td_name":"JSObjSelector","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]},"tde_doc":["TypeDoc",["Nothing"],[],["Nothing"]]},["Tip"],["Tip"]]]]],["Bin",7,["Location","iTasks","iTasks.UI.Layout",["Just",44],["Nothing"],"MvUI"],{"tde_typedef":{"td_name":"MvUI","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_MvUI",[],[{"rf_name":"type","rf_type":["Type","UINodeType",[]]},{"rf_name":"attr","rf_type":["Type","UIAttributes",[]]},{"rf_name":"matched","rf_type":["Type","Bool",[]]},{"rf_name":"moved","rf_type":["Type","Bool",[]]},{"rf_name":"deleted","rf_type":["Type","Bool",[]]},{"rf_name":"dstChange","rf_type":["Type","UIChange",[]]},{"rf_name":"children","rf_type":["Type","_List",[["Type","MvUIChild",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",25],["Nothing"],"LayoutState"],{"tde_typedef":{"td_name":"LayoutState","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LSNone","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSType","cons_args":[["Type","UI",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSAttributes","cons_args":[["Type","UIAttributes",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSModifyAttributes","cons_args":[["Type","UIAttributes",[]],["Type","UIAttributes",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSCopyAttributes","cons_args":[["Type","UI",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSWrap","cons_args":[["Type","UI",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSUnwrap","cons_args":[["Type","UI",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSInsert","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSSequence","cons_args":[["Type","LayoutState",[]],["Type","LayoutState",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSLayoutSubUIs","cons_args":[["Type","UI",[]],["Type","LayoutTree",[["Type","LayoutState",[]],["Type","_Unit",[]]]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSRemoveSubUIs","cons_args":[["Type","MvUI",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"LSReference","cons_args":[["Type","UI",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",19],["Nothing"],"Layout"],{"tde_typedef":{"td_name":"Layout","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_Layout",[],[{"rf_name":"apply","rf_type":["Func",[["Type","UI",[]]],["Type","_Tuple2",[["Type","UIChange",[]],["Type","LayoutState",[]]]],[]]},{"rf_name":"adjust","rf_type":["Func",[["Type","_Tuple2",[["Type","UIChange",[]],["Type","LayoutState",[]]]]],["Type","_Tuple2",[["Type","UIChange",[]],["Type","LayoutState",[]]]],[]]},{"rf_name":"restore","rf_type":["Func",[["Type","LayoutState",[]]],["Type","UIChange",[]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",39],["Nothing"],"LayoutTree"],{"tde_typedef":{"td_name":"LayoutTree","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"UIModified","cons_args":[["Var","a"]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SubUIsModified","cons_args":[["Var","b"],["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","LayoutTree",[["Var","a"],["Var","b"]]]]]]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.UI.Layout",["Just",63],["Nothing"],"UIPath"],{"tde_typedef":{"td_name":"UIPath","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","Int",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",54],["Nothing"],"MvUIChild"],{"tde_typedef":{"td_name":"MvUIChild","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"MvUIItem","cons_args":[["Type","MvUI",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"MvUIMoveDestination","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",71],["Nothing"],"UISelection"],{"tde_typedef":{"td_name":"UISelection","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SelectByPath","cons_args":[["Type","UIPath",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectChildren","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectDescendents","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectByType","cons_args":[["Type","UINodeType",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectByAttribute","cons_args":[["Type","String",[]],["Type","JSONNode",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectByHasAttribute","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectByNumChildren","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectRelative","cons_args":[["Type","UIPath",[]],["Type","UISelection",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectByContains","cons_args":[["Type","UISelection",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectNone","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectAND","cons_args":[["Type","UISelection",[]],["Type","UISelection",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectOR","cons_args":[["Type","UISelection",[]],["Type","UISelection",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectNOT","cons_args":[["Type","UISelection",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",62,["Location","iTasks","iTasks.UI.Prompt",["Just",19],["Nothing"],"Icon"],{"tde_typedef":{"td_name":"Icon","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Icon","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IconView","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"IconEdit","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",16,["Location","iTasks","iTasks.UI.Layout.Common",["Just",86],["Nothing"],"InPanel"],{"tde_typedef":{"td_name":"InPanel","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"InPanel","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",9,["Location","iTasks","iTasks.UI.Layout",["Just",172],["Nothing"],"TaskHost"],{"tde_typedef":{"td_name":"TaskHost","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"InTaskHost","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NoTaskHost","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.UI.Layout",["Just",168],["Nothing"],"NodeLayoutState"],{"tde_typedef":{"td_name":"NodeLayoutState","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"BranchLayout","cons_args":[["Type","LayoutState",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ChildBranchLayout","cons_args":[["Type","NodeLayoutStates",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout",["Just",167],["Nothing"],"NodeLayoutStates"],{"tde_typedef":{"td_name":"NodeLayoutStates","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_List",[["Type","_Tuple2",[["Type","Int",[]],["Type","NodeLayoutState",[]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",6,["Location","iTasks","iTasks.UI.Layout.Common",["Just",64],["Nothing"],"ArrangeSplit"],{"tde_typedef":{"td_name":"ArrangeSplit","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ArrangeSplit","cons_args":[["Type","UIDirection",[]],["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.UI.Layout.Common",["Just",61],["Nothing"],"ArrangeWithSideBar"],{"tde_typedef":{"td_name":"ArrangeWithSideBar","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ArrangeWithSideBar","cons_args":[["Type","Int",[]],["Type","UISide",[]],["Type","Int",[]],["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",58],["Nothing"],"ArrangeWithTabs"],{"tde_typedef":{"td_name":"ArrangeWithTabs","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ArrangeWithTabs","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.UI.Layout.Common",["Just",70],["Nothing"],"ArrangeHorizontal"],{"tde_typedef":{"td_name":"ArrangeHorizontal","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ArrangeHorizontal","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",67],["Nothing"],"ArrangeVertical"],{"tde_typedef":{"td_name":"ArrangeVertical","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ArrangeVertical","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",80],["Nothing"],"ToWindow"],{"tde_typedef":{"td_name":"ToWindow","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ToWindow","cons_args":[["Type","UIWindowType",[]],["Type","UIVAlign",[]],["Type","UIHAlign",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",6,["Location","iTasks","iTasks.UI.Prompt",["Just",16],["Nothing"],"Title"],{"tde_typedef":{"td_name":"Title","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Title","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.UI.Layout.Common",["Just",92],["Nothing"],"NoUserInterface"],{"tde_typedef":{"td_name":"NoUserInterface","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"NoUserInterface","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Layout.Common",["Just",89],["Nothing"],"InContainer"],{"tde_typedef":{"td_name":"InContainer","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"InContainer","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.UI.Prompt",["Just",14],["Nothing"],"Att"],{"tde_typedef":{"td_name":"Att","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Att","cons_args":[["Var","a"]],"cons_exi_vars":["a"],"cons_context":[[["Class","toPrompt"],["Var","a"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",2,["Location","iTasks","iTasks.UI.Prompt",["Just",18],["Nothing"],"Hint"],{"tde_typedef":{"td_name":"Hint","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Hint","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.UI.Prompt",["Just",17],["Nothing"],"Label"],{"tde_typedef":{"td_name":"Label","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Label","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Tip"]]]],["Bin",45,["Location","iTasks","iTasks.WF.Definition",["Just",63],["Nothing"],"TaskId"],{"tde_typedef":{"td_name":"TaskId","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"TaskId","cons_args":[["Type","InstanceNo",[]],["Type","TaskNo",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",19,["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",19],["Nothing"],"ApplyLayout"],{"tde_typedef":{"td_name":"ApplyLayout","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ApplyLayout","cons_args":[["Type","Layout",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",11,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",70],["Nothing"],"AttachmentStatus"],{"tde_typedef":{"td_name":"AttachmentStatus","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ASAttached","cons_args":[["Type","Stability",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ASInUse","cons_args":[["Type","TaskId",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ASExcepted","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ASDeleted","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ASIncompatible","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Just","State of another task instance."],[],["Just",["ADTDoc",[["Just",["ConstructorDoc",["Just","the task instance is currently attached to this task"],[]]],["Just",["ConstructorDoc",["Just","the task instance is already attached to another task"],[]]],["Just",["ConstructorDoc",["Just","the task instance had an uncaught exception"],[]]],["Just",["ConstructorDoc",["Just","the task instance does not exist anymore"],[]]],["Just",["ConstructorDoc",["Just","the task instance can not be executed in this is version of the program (it was created by an older version)"],[]]]]]]]},["Bin",7,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",43],["Just",38],"TaskList"],{"tde_typedef":{"td_name":"TaskList","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","TaskId",[]],["Type","_List",[["Type","TaskListItem",[["Var","a"]]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",34],["Just",29],"ParallelTaskType"],{"tde_typedef":{"td_name":"ParallelTaskType","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Embedded","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NamedEmbedded","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Detached","cons_args":[["Type","TaskAttributes",[]],["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"NamedDetached","cons_args":[["Type","String",[]],["Type","TaskAttributes",[]],["Type","Bool",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",10],["Just",27],"Action"],{"tde_typedef":{"td_name":"Action","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"Action","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",40],["Just",35],"ParallelTask"],{"tde_typedef":{"td_name":"ParallelTask","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Func",[["Type","SharedTaskList",[["Var","a"]]]],["Type","Task",[["Var","a"]]],[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",46],["Just",41],"TaskListItem"],{"tde_typedef":{"td_name":"TaskListItem","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRRecord","_TaskListItem",[],[{"rf_name":"taskId","rf_type":["Type","TaskId",[]]},{"rf_name":"listId","rf_type":["Type","TaskId",[]]},{"rf_name":"detached","rf_type":["Type","Bool",[]]},{"rf_name":"self","rf_type":["Type","Bool",[]]},{"rf_name":"value","rf_type":["Type","TaskValue",[["Var","a"]]]},{"rf_name":"attributes","rf_type":["Type","TaskAttributes",[]]},{"rf_name":"progress","rf_type":["Type","Maybe",[["Type","InstanceProgress",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",44],["Just",39],"SharedTaskList"],{"tde_typedef":{"td_name":"SharedTaskList","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRSynonym",["Type","SDS",[["Type","TaskListFilter",[]],["Type","_Tuple2",[["Type","TaskId",[]],["Type","_List",[["Type","TaskListItem",[["Var","a"]]]]]]],["Type","_List",[["Type","_Tuple2",[["Type","TaskId",[]],["Type","TaskAttributes",[]]]]]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",56],["Just",51],"TaskListFilter"],{"tde_typedef":{"td_name":"TaskListFilter","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_TaskListFilter",[],[{"rf_name":"onlyIndex","rf_type":["Type","Maybe",[["Type","_List",[["Type","Int",[]]]]]]},{"rf_name":"onlyTaskId","rf_type":["Type","Maybe",[["Type","_List",[["Type","TaskId",[]]]]]]},{"rf_name":"onlySelf","rf_type":["Type","Bool",[]]},{"rf_name":"includeValue","rf_type":["Type","Bool",[]]},{"rf_name":"includeAttributes","rf_type":["Type","Bool",[]]},{"rf_name":"includeProgress","rf_type":["Type","Bool",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",3,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",109],["Nothing"],"TaskCont"],{"tde_typedef":{"td_name":"TaskCont","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"OnValue","cons_args":[["Func",[["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnAction","cons_args":[["Type","Action",[]],["Func",[["Type","TaskValue",[["Var","a"]]]],["Type","Maybe",[["Var","b"]]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"OnException","cons_args":[["Func",[["Var","e"]],["Var","b"],[]]],"cons_exi_vars":["e"],"cons_context":[[["Class","iTask"],["Var","e"]]]},{"cons_name":"OnAllExceptions","cons_args":[["Func",[["Type","String",[]]],["Var","b"],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Core",["Just",77],["Nothing"],"AttachException"],{"tde_typedef":{"td_name":"AttachException","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"InstanceNotFound","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"InstanceEvalError","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",15],["Nothing"],"LazyRefresh"],{"tde_typedef":{"td_name":"LazyRefresh","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"LazyRefresh","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]],["Bin",7,["Location","iTasks","iTasks.WF.Definition",["Just",34],["Nothing"],"TaskResult"],{"tde_typedef":{"td_name":"TaskResult","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"ValueResult","cons_args":[["Type","TaskValue",[["Var","a"]]],["Type","TaskEvalInfo",[]],["Type","UIChange",[]],["Type","TaskTree",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ExceptionResult","cons_args":[["Type","TaskException",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"DestroyedResult","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.WF.Definition",["Just",26],["Nothing"],"Task"],{"tde_typedef":{"td_name":"Task","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"Task","cons_args":[["Func",[["Type","Event",[]]],["Func",[["Type","TaskEvalOpts",[]]],["Func",[["Type","TaskTree",[]]],["Func",[["Uniq",["Type","IWorld",[]]]],["Uniq",["Type","_Tuple2",[["Type","TaskResult",[["Var","a"]]],["Uniq",["Type","IWorld",[]]]]]],[]],[]],[]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",22],["Nothing"],"ApplyAttribute"],{"tde_typedef":{"td_name":"ApplyAttribute","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"ApplyAttribute","cons_args":[["Type","String",[]],["Var","a"]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",28],["Nothing"],"Event"],{"tde_typedef":{"td_name":"Event","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"EditEvent","cons_args":[["Type","TaskId",[]],["Type","String",[]],["Type","JSONNode",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ActionEvent","cons_args":[["Type","TaskId",[]],["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"FocusEvent","cons_args":[["Type","TaskId",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"RefreshEvent","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"ResetEvent","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",3,["Location","iTasks","iTasks.WF.Definition",["Just",45],["Nothing"],"Stability"],{"tde_typedef":{"td_name":"Stability","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Bool",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",43],["Nothing"],"TaskValue"],{"tde_typedef":{"td_name":"TaskValue","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"NoValue","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Value","cons_args":[["Var","a"],["Type","Stability",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",50],["Nothing"],"TaskException"],{"tde_typedef":{"td_name":"TaskException","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_Tuple2",[["Type","Dynamic",[]],["Type","String",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]]]],["Bin",25,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",19],["Just",24],"ExternalProcessHandlers"],{"tde_typedef":{"td_name":"ExternalProcessHandlers","td_uniq":false,"td_args":[["Var","l"],["Var","r"],["Var","w"]],"td_rhs":["TDRRecord","_ExternalProcessHandlers",[],[{"rf_name":"onStartup","rf_type":["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]]},{"rf_name":"onOutData","rf_type":["Func",[["Type","String",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],[]]},{"rf_name":"onErrData","rf_type":["Func",[["Type","String",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],[]]},{"rf_name":"onShareChange","rf_type":["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]]},{"rf_name":"onExit","rf_type":["Func",[["Type","ExitCode",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple2",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]]]],[]],[]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",10,["Location","iTasks","iTasks.WF.Definition",["Just",68],["Nothing"],"InstanceKey"],{"tde_typedef":{"td_name":"InstanceKey","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","String",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",3,["Location","iTasks","iTasks.WF.Definition",["Just",65],["Nothing"],"TaskNo"],{"tde_typedef":{"td_name":"TaskNo","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",64],["Nothing"],"InstanceNo"],{"tde_typedef":{"td_name":"InstanceNo","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Int",[]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",67],["Nothing"],"TaskAttributes"],{"tde_typedef":{"td_name":"TaskAttributes","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","Map",[["Type","String",[]],["Type","String",[]]]]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["SynonymDoc",["Nothing"]]]]},["Tip"],["Tip"]]],["Bin",6,["Location","iTasks","iTasks.WF.Definition",["Just",95],["Nothing"],"ValueStatus"],{"tde_typedef":{"td_name":"ValueStatus","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"None","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Unstable","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Stable","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"Exception","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",2,["Location","iTasks","iTasks.WF.Definition",["Just",87],["Nothing"],"InstanceProgress"],{"tde_typedef":{"td_name":"InstanceProgress","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_InstanceProgress",[],[{"rf_name":"value","rf_type":["Type","ValueStatus",[]]},{"rf_name":"attachedTo","rf_type":["Type","_List",[["Type","TaskId",[]]]]},{"rf_name":"instanceKey","rf_type":["Type","InstanceKey",[]]},{"rf_name":"firstEvent","rf_type":["Type","Maybe",[["Type","Timestamp",[]]]]},{"rf_name":"lastEvent","rf_type":["Type","Maybe",[["Type","Timestamp",[]]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[["Just","Status of the task value"],["Just","Chain of tasks through which this instance was attached"],["Just","Random token that a client gets to have (temporary) access to the task instance"],["Just","When was the first work done on this task"],["Just","When was the latest event on this task (excluding Refresh events)"]]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Definition",["Just",80],["Nothing"],"InstanceConstants"],{"tde_typedef":{"td_name":"InstanceConstants","td_uniq":false,"td_args":[],"td_rhs":["TDRRecord","_InstanceConstants",[],[{"rf_name":"listId","rf_type":["Type","TaskId",[]]},{"rf_name":"session","rf_type":["Type","Bool",[]]},{"rf_name":"build","rf_type":["Type","String",[]]},{"rf_name":"issuedAt","rf_type":["Type","Timestamp",[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[["Just","Reference to parent tasklist"],["Just","True for sessions (instances that automatically get garbage collected)"],["Just","Application build version when the instance was created"],["Just","When was the task created"]]]]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",11],["Just",16],"ConnectionHandlers"],{"tde_typedef":{"td_name":"ConnectionHandlers","td_uniq":false,"td_args":[["Var","l"],["Var","r"],["Var","w"]],"td_rhs":["TDRRecord","_ConnectionHandlers",[],[{"rf_name":"onConnect","rf_type":["Func",[["Type","String",[]]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]]},{"rf_name":"onData","rf_type":["Func",[["Type","String",[]]],["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]],[]]},{"rf_name":"onShareChange","rf_type":["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple4",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]],["Type","_List",[["Type","String",[]]]],["Type","Bool",[]]]],[]],[]]},{"rf_name":"onDisconnect","rf_type":["Func",[["Var","l"]],["Func",[["Var","r"]],["Type","_Tuple2",[["Type","MaybeErrorString",[["Var","l"]]],["Type","Maybe",[["Var","w"]]]]],[]],[]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["RecordDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Core",["Just",81],["Nothing"],"OSException"],{"tde_typedef":{"td_name":"OSException","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"OSException","cons_args":[["Type","OSError",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.IO",["Just",18],["Just",23],"ExitCode"],{"tde_typedef":{"td_name":"ExitCode","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"ExitCode","cons_args":[["Type","Int",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]]]],["Bin",14,["Builtin","File"],{"tde_typedef":{"td_name":"File","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]}},["Bin",9,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",29],["Nothing"],"SelectOption"],{"tde_typedef":{"td_name":"SelectOption","td_uniq":false,"td_args":[["Var","c"],["Var","s"]],"td_rhs":["TDRCons",false,[{"cons_name":"SelectInDropdown","cons_args":[["Func",[["Var","c"]],["Type","_List",[["Type","ChoiceText",[]]]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectInCheckGroup","cons_args":[["Func",[["Var","c"]],["Type","_List",[["Type","ChoiceText",[]]]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectInList","cons_args":[["Func",[["Var","c"]],["Type","_List",[["Type","ChoiceText",[]]]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectInGrid","cons_args":[["Func",[["Var","c"]],["Type","ChoiceGrid",[]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"SelectInTree","cons_args":[["Func",[["Var","c"]],["Type","_List",[["Type","ChoiceNode",[]]]],[]],["Func",[["Var","c"]],["Func",[["Type","_List",[["Type","Int",[]]]]],["Type","_List",[["Var","s"]]],[]],[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",3,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",16],["Nothing"],"EnterOption"],{"tde_typedef":{"td_name":"EnterOption","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"EnterAs","cons_args":[["Func",[["Var","v"]],["Var","a"],[]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]},{"cons_name":"EnterUsing","cons_args":[["Func",[["Var","v"]],["Var","a"],[]],["Type","Editor",[["Var","v"]]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",13],["Nothing"],"ViewOption"],{"tde_typedef":{"td_name":"ViewOption","td_uniq":false,"td_args":[["Var","a"]],"td_rhs":["TDRCons",false,[{"cons_name":"ViewAs","cons_args":[["Func",[["Var","a"]],["Var","v"],[]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]},{"cons_name":"ViewUsing","cons_args":[["Func",[["Var","a"]],["Var","v"],[]],["Type","Editor",[["Var","v"]]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",19],["Nothing"],"UpdateOption"],{"tde_typedef":{"td_name":"UpdateOption","td_uniq":false,"td_args":[["Var","a"],["Var","b"]],"td_rhs":["TDRCons",false,[{"cons_name":"UpdateAs","cons_args":[["Func",[["Var","a"]],["Var","v"],[]],["Func",[["Var","a"]],["Func",[["Var","v"]],["Var","b"],[]],[]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]},{"cons_name":"UpdateUsing","cons_args":[["Func",[["Var","a"]],["Var","v"],[]],["Func",[["Var","a"]],["Func",[["Var","v"]],["Var","b"],[]],[]],["Type","Editor",[["Var","v"]]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]},{"cons_name":"UpdateSharedAs","cons_args":[["Func",[["Var","a"]],["Var","v"],[]],["Func",[["Var","a"]],["Func",[["Var","v"]],["Var","b"],[]],[]],["Func",[["Var","v"]],["Func",[["Var","v"]],["Var","v"],[]],[]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]]],["Bin",5,["Location","iTasks","iTasks.WF.Tasks.SDS",["Just",16],["Nothing"],"SharedException"],{"tde_typedef":{"td_name":"SharedException","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"SharedException","cons_args":[["Type","String",[]]],"cons_exi_vars":[],"cons_context":[]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Bin",1,["Location","iTasks","iTasks.WF.Tasks.Interaction",["Just",36],["Nothing"],"ChoiceOption"],{"tde_typedef":{"td_name":"ChoiceOption","td_uniq":false,"td_args":[["Var","o"]],"td_rhs":["TDRCons",false,[{"cons_name":"ChooseFromDropdown","cons_args":[["Func",[["Var","o"]],["Var","v"],[]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]},{"cons_name":"ChooseFromCheckGroup","cons_args":[["Func",[["Var","o"]],["Var","v"],[]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]},{"cons_name":"ChooseFromList","cons_args":[["Func",[["Var","o"]],["Var","v"],[]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]},{"cons_name":"ChooseFromGrid","cons_args":[["Func",[["Var","o"]],["Var","v"],[]]],"cons_exi_vars":["v"],"cons_context":[[["Class","iTask"],["Var","v"]]]}]]},"tde_doc":["TypeDoc",["Nothing"],[],["Just",["ADTDoc",[]]]]},["Tip"],["Tip"]],["Bin",3,["Builtin","Char"],{"tde_typedef":{"td_name":"Char","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]}},["Bin",1,["Builtin","Bool"],{"tde_typedef":{"td_name":"Bool","td_uniq":false,"td_args":[],"td_rhs":["TDRCons",false,[{"cons_name":"False","cons_args":[],"cons_exi_vars":[],"cons_context":[]},{"cons_name":"True","cons_args":[],"cons_exi_vars":[],"cons_context":[]}]]}},["Tip"],["Tip"]],["Bin",1,["Builtin","Dynamic"],{"tde_typedef":{"td_name":"Dynamic","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]}},["Tip"],["Tip"]]]]],["Bin",4,["Builtin","String"],{"tde_typedef":{"td_name":"String","td_uniq":false,"td_args":[],"td_rhs":["TDRSynonym",["Type","_#Array",[["Type","Char",[]]]]]}},["Bin",2,["Builtin","Real"],{"tde_typedef":{"td_name":"Real","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]}},["Bin",1,["Builtin","Int"],{"tde_typedef":{"td_name":"Int","td_uniq":false,"td_args":[],"td_rhs":["TDRAbstract"]}},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Builtin","World"],{"tde_typedef":{"td_name":"World","td_uniq":true,"td_args":[],"td_rhs":["TDRAbstract"]}},["Tip"],["Tip"]]]]]]]]]]],"derivemap":["Bin",30,"gMaybeZip",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]}],["Bin",19,"gEq",[{"de_type":["Type","TonicModule",[]],"de_type_representation":"TonicModule","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]},{"de_type":["Type","TonicFunc",[]],"de_type_representation":"TonicFunc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]},{"de_type":["Type","TExpr",[]],"de_type_representation":"TExpr","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]},{"de_type":["Type","TPriority",[]],"de_type_representation":"TPriority","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]},{"de_type":["Type","TAssoc",[]],"de_type_representation":"TAssoc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]},{"de_type":["Type","TLit",[]],"de_type_representation":"TLit","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]},{"de_type":["Type","UnitTest",[]],"de_type_representation":"UnitTest","de_locations":[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",42],["Nothing"],""]]},{"de_type":["Type","Task",[]],"de_type_representation":"Task","de_locations":[["Location","iTasks","iTasks.Internal.Task",["Just",24],["Nothing"],""]]},{"de_type":["Type","_Unit",[]],"de_type_representation":"()","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]},{"de_type":["Type","HtmlTag",[]],"de_type_representation":"HtmlTag","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]},{"de_type":["Type","HtmlAttr",[]],"de_type_representation":"HtmlAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]},{"de_type":["Type","Either",[]],"de_type_representation":"Either","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]},{"de_type":["Type","MaybeError",[]],"de_type_representation":"MaybeError","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]},{"de_type":["Type","Timestamp",[]],"de_type_representation":"Timestamp","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]},{"de_type":["Type","JSONNode",[]],"de_type_representation":"JSONNode","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]},{"de_type":["Arrow",["Nothing"]],"de_type_representation":"(->)","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]},{"de_type":["Type","Dynamic",[]],"de_type_representation":"Dynamic","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]},{"de_type":["Type","SDS",[]],"de_type_representation":"SDS","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",31],["Nothing"],""]]},{"de_type":["Type","SVGElt",[]],"de_type_representation":"SVGElt","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGAttr",[]],"de_type_representation":"SVGAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGAlign",[]],"de_type_representation":"SVGAlign","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGColor",[]],"de_type_representation":"SVGColor","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGDefer",[]],"de_type_representation":"SVGDefer","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGFillOpacity",[]],"de_type_representation":"SVGFillOpacity","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGFuncIRI",[]],"de_type_representation":"SVGFuncIRI","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGLengthAdjust",[]],"de_type_representation":"SVGLengthAdjust","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGLengthUnit",[]],"de_type_representation":"SVGLengthUnit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGLineCap",[]],"de_type_representation":"SVGLineCap","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGFillRule",[]],"de_type_representation":"SVGFillRule","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGLineJoin",[]],"de_type_representation":"SVGLineJoin","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGMeetOrSlice",[]],"de_type_representation":"SVGMeetOrSlice","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGStrokeMiterLimit",[]],"de_type_representation":"SVGStrokeMiterLimit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGPaint",[]],"de_type_representation":"SVGPaint","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashArray",[]],"de_type_representation":"SVGStrokeDashArray","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashOffset",[]],"de_type_representation":"SVGStrokeDashOffset","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGStrokeWidth",[]],"de_type_representation":"SVGStrokeWidth","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGTransform",[]],"de_type_representation":"SVGTransform","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","SVGZoomAndPan",[]],"de_type_representation":"SVGZoomAndPan","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]},{"de_type":["Type","TaskValue",[]],"de_type_representation":"TaskValue","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]},{"de_type":["Type","TaskListItem",[]],"de_type_representation":"TaskListItem","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]},{"de_type":["Type","InstanceConstants",[]],"de_type_representation":"InstanceConstants","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]},{"de_type":["Type","InstanceProgress",[]],"de_type_representation":"InstanceProgress","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]},{"de_type":["Type","ValueStatus",[]],"de_type_representation":"ValueStatus","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]},{"de_type":["Type","TaskInstance",[]],"de_type_representation":"TaskInstance","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]},{"de_type":["Type","Action",[]],"de_type_representation":"Action","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]},{"de_type":["Type","EditMask",[]],"de_type_representation":"EditMask","de_locations":[["Location","iTasks","iTasks.UI.Editor",["Just",63],["Nothing"],""]]},{"de_type":["Type","FieldMask",[]],"de_type_representation":"FieldMask","de_locations":[["Location","iTasks","iTasks.UI.Editor",["Just",63],["Nothing"],""]]},{"de_type":["Type","LeafletMap",[]],"de_type_representation":"LeafletMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]},{"de_type":["Type","LeafletPerspective",[]],"de_type_representation":"LeafletPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]},{"de_type":["Type","LeafletIcon",[]],"de_type_representation":"LeafletIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]},{"de_type":["Type","LeafletLatLng",[]],"de_type_representation":"LeafletLatLng","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]},{"de_type":["Type","LeafletBounds",[]],"de_type_representation":"LeafletBounds","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]},{"de_type":["Type","LeafletObject",[]],"de_type_representation":"LeafletObject","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]},{"de_type":["Type","LeafletMarker",[]],"de_type_representation":"LeafletMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]},{"de_type":["Type","LeafletPolyline",[]],"de_type_representation":"LeafletPolyline","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]},{"de_type":["Type","LeafletPolygon",[]],"de_type_representation":"LeafletPolygon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]},{"de_type":["Type","GoogleMap",[]],"de_type_representation":"GoogleMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]},{"de_type":["Type","GoogleMapSettings",[]],"de_type_representation":"GoogleMapSettings","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]},{"de_type":["Type","GoogleMapPerspective",[]],"de_type_representation":"GoogleMapPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]},{"de_type":["Type","GoogleMapPosition",[]],"de_type_representation":"GoogleMapPosition","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]},{"de_type":["Type","GoogleMapMarker",[]],"de_type_representation":"GoogleMapMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]},{"de_type":["Type","GoogleMapType",[]],"de_type_representation":"GoogleMapType","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]},{"de_type":["Type","GoogleMapIcon",[]],"de_type_representation":"GoogleMapIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]},{"de_type":["Type","GoogleMapComplexIcon",[]],"de_type_representation":"GoogleMapComplexIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]},{"de_type":["Type","WorkflowTaskContainer",[]],"de_type_representation":"WorkflowTaskContainer","de_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",27],["Nothing"],""]]},{"de_type":["Type","AceOptions",[]],"de_type_representation":"AceOptions","de_locations":[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",31],["Nothing"],""]]},{"de_type":["Type","EmailAddress",[]],"de_type_representation":"EmailAddress","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",18],["Nothing"],""]]},{"de_type":["Type","PhoneNumber",[]],"de_type_representation":"PhoneNumber","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",18],["Nothing"],""]]},{"de_type":["Type","URL",[]],"de_type_representation":"URL","de_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",20],["Nothing"],""]]},{"de_type":["Type","Date",[]],"de_type_representation":"Date","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",54],["Nothing"],""]]},{"de_type":["Type","Time",[]],"de_type_representation":"Time","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",54],["Nothing"],""]]},{"de_type":["Type","DateTime",[]],"de_type_representation":"DateTime","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",54],["Nothing"],""]]},{"de_type":["Type","ControlLight",[]],"de_type_representation":"ControlLight","de_locations":[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",29],["Nothing"],""]]},{"de_type":["Type","AnalogClock",[]],"de_type_representation":"AnalogClock","de_locations":[["Location","iTasks","iTasks.Extensions.Clock",["Just",12],["Nothing"],""]]},{"de_type":["Type","EUR",[]],"de_type_representation":"EUR","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",19],["Nothing"],""]]},{"de_type":["Type","USD",[]],"de_type_representation":"USD","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",19],["Nothing"],""]]},{"de_type":["Type","WebImage",[]],"de_type_representation":"WebImage","de_locations":[["Location","iTasks","iTasks.Extensions.Image",["Just",20],["Nothing"],""]]},{"de_type":["Type","User",[]],"de_type_representation":"User","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",58],["Nothing"],""]]},{"de_type":["Type","UserConstraint",[]],"de_type_representation":"UserConstraint","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",58],["Nothing"],""]]},{"de_type":["Type","Username",[]],"de_type_representation":"Username","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",58],["Nothing"],""]]},{"de_type":["Type","Password",[]],"de_type_representation":"Password","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",58],["Nothing"],""]]},{"de_type":["Type","Document",[]],"de_type_representation":"Document","de_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",27],["Nothing"],""]]},{"de_type":["Type","LexOrd",[]],"de_type_representation":"LexOrd","de_locations":[["Location","Generics","GenLexOrd",["Just",6],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","RECORD",[]],"de_type_representation":"RECORD","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]},{"de_type":["Type","IntMap",[]],"de_type_representation":"IntMap","de_locations":[["Location","Platform","Data.IntMap.Strict",["Just",95],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","Platform","Data.Maybe",["Just",13],["Nothing"],""]]},{"de_type":["Type","Graph",[]],"de_type_representation":"Graph","de_locations":[["Location","Platform","Data.Graph",["Just",26],["Nothing"],""]]},{"de_type":["Type","Node",[]],"de_type_representation":"Node","de_locations":[["Location","Platform","Data.Graph",["Just",26],["Nothing"],""]]},{"de_type":["Type","Map",[]],"de_type_representation":"Map","de_locations":[["Location","Platform","Data.Map",["Just",179],["Nothing"],""]]},{"de_type":["Type","NodeShape",[]],"de_type_representation":"NodeShape","de_locations":[["Location","Platform","Data.Graphviz",["Just",342],["Nothing"],""]]},{"de_type":["Type","NodeStyle",[]],"de_type_representation":"NodeStyle","de_locations":[["Location","Platform","Data.Graphviz",["Just",356],["Nothing"],""]]},{"de_type":["Type","EdgeStyle",[]],"de_type_representation":"EdgeStyle","de_locations":[["Location","Platform","Data.Graphviz",["Just",367],["Nothing"],""]]},{"de_type":["Type","Color",[]],"de_type_representation":"Color","de_locations":[["Location","Platform","Data.Graphviz",["Just",384],["Nothing"],""]]},{"de_type":["Type","ArrowType",[]],"de_type_representation":"ArrowType","de_locations":[["Location","Platform","Data.Graphviz",["Just",414],["Nothing"],""]]},{"de_type":["Type","DirType",[]],"de_type_representation":"DirType","de_locations":[["Location","Platform","Data.Graphviz",["Just",425],["Nothing"],""]]}],["Bin",10,"bimap",[{"de_type":["Var","c"],"de_type_representation":"c","de_locations":[["Location","StdEnv","StdGeneric",["Just",62],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","StdEnv","StdGeneric",["Just",63],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","StdEnv","StdGeneric",["Just",64],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","StdEnv","StdGeneric",["Just",65],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","StdEnv","StdGeneric",["Just",66],["Nothing"],""]]},{"de_type":["Type","RECORD",[]],"de_type_representation":"RECORD","de_locations":[["Location","StdEnv","StdGeneric",["Just",67],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","StdEnv","StdGeneric",["Just",68],["Nothing"],""]]},{"de_type":["Arrow",["Nothing"]],"de_type_representation":"(->)","de_locations":[["Location","StdEnv","StdGeneric",["Just",69],["Nothing"],""]]},{"de_type":["Type","Bimap",[]],"de_type_representation":"Bimap","de_locations":[["Location","StdEnv","StdGeneric",["Just",70],["Nothing"],""]]},{"de_type":["Type","Editor",[]],"de_type_representation":"Editor","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",31],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]},{"de_type":["Type","FMap",[]],"de_type_representation":"FMap","de_locations":[["Location","Generics","GenFMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","StMonad",[]],"de_type_representation":"StMonad","de_locations":[["Location","Generics","GenMonad",["Just",10],["Nothing"],""]]}],["Bin",5,"JSONEncode",[{"de_type":["Type","TonicModule",[]],"de_type_representation":"TonicModule","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]},{"de_type":["Type","TonicFunc",[]],"de_type_representation":"TonicFunc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]},{"de_type":["Type","TExpr",[]],"de_type_representation":"TExpr","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]},{"de_type":["Type","TPriority",[]],"de_type_representation":"TPriority","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]},{"de_type":["Type","TAssoc",[]],"de_type_representation":"TAssoc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]},{"de_type":["Type","TLit",[]],"de_type_representation":"TLit","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]},{"de_type":["Type","UnitTest",[]],"de_type_representation":"UnitTest","de_locations":[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",40],["Nothing"],""]]},{"de_type":["Type","Dynamic",[]],"de_type_representation":"Dynamic","de_locations":[["Location","iTasks","iTasks.Internal.Serialization",["Just",12],["Nothing"],""]]},{"de_type":["Arrow",["Nothing"]],"de_type_representation":"(->)","de_locations":[["Location","iTasks","iTasks.Internal.Serialization",["Just",12],["Nothing"],""]]},{"de_type":["Type","Task",[]],"de_type_representation":"Task","de_locations":[["Location","iTasks","iTasks.Internal.Task",["Just",19],["Nothing"],""]]},{"de_type":["Type","TIMeta",[]],"de_type_representation":"TIMeta","de_locations":[["Location","iTasks","iTasks.Internal.TaskState",["Just",18],["Nothing"],""]]},{"de_type":["Type","TIReduct",[]],"de_type_representation":"TIReduct","de_locations":[["Location","iTasks","iTasks.Internal.TaskState",["Just",18],["Nothing"],""]]},{"de_type":["Type","TaskTree",[]],"de_type_representation":"TaskTree","de_locations":[["Location","iTasks","iTasks.Internal.TaskState",["Just",18],["Nothing"],""]]},{"de_type":["Type","DeferredJSON",[]],"de_type_representation":"DeferredJSON","de_locations":[["Location","iTasks","iTasks.Internal.TaskState",["Just",79],["Nothing"],""]]},{"de_type":["Type","_Unit",[]],"de_type_representation":"()","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]},{"de_type":["Type","HtmlTag",[]],"de_type_representation":"HtmlTag","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]},{"de_type":["Type","HtmlAttr",[]],"de_type_representation":"HtmlAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]},{"de_type":["Type","Either",[]],"de_type_representation":"Either","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]},{"de_type":["Type","MaybeError",[]],"de_type_representation":"MaybeError","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]},{"de_type":["Type","Timestamp",[]],"de_type_representation":"Timestamp","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]},{"de_type":["Type","SDS",[]],"de_type_representation":"SDS","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",29],["Nothing"],""]]},{"de_type":["Type","SVGElt",[]],"de_type_representation":"SVGElt","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGAttr",[]],"de_type_representation":"SVGAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGAlign",[]],"de_type_representation":"SVGAlign","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGColor",[]],"de_type_representation":"SVGColor","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGDefer",[]],"de_type_representation":"SVGDefer","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGFillOpacity",[]],"de_type_representation":"SVGFillOpacity","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGFuncIRI",[]],"de_type_representation":"SVGFuncIRI","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGLengthAdjust",[]],"de_type_representation":"SVGLengthAdjust","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGLengthUnit",[]],"de_type_representation":"SVGLengthUnit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGLineCap",[]],"de_type_representation":"SVGLineCap","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGFillRule",[]],"de_type_representation":"SVGFillRule","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGLineJoin",[]],"de_type_representation":"SVGLineJoin","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGMeetOrSlice",[]],"de_type_representation":"SVGMeetOrSlice","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGStrokeMiterLimit",[]],"de_type_representation":"SVGStrokeMiterLimit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGPaint",[]],"de_type_representation":"SVGPaint","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashArray",[]],"de_type_representation":"SVGStrokeDashArray","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashOffset",[]],"de_type_representation":"SVGStrokeDashOffset","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGStrokeWidth",[]],"de_type_representation":"SVGStrokeWidth","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGTransform",[]],"de_type_representation":"SVGTransform","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","SVGZoomAndPan",[]],"de_type_representation":"SVGZoomAndPan","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]},{"de_type":["Type","TaskValue",[]],"de_type_representation":"TaskValue","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]},{"de_type":["Type","TaskListItem",[]],"de_type_representation":"TaskListItem","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]},{"de_type":["Type","InstanceConstants",[]],"de_type_representation":"InstanceConstants","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]},{"de_type":["Type","InstanceProgress",[]],"de_type_representation":"InstanceProgress","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]},{"de_type":["Type","ValueStatus",[]],"de_type_representation":"ValueStatus","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]},{"de_type":["Type","TaskInstance",[]],"de_type_representation":"TaskInstance","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]},{"de_type":["Type","Action",[]],"de_type_representation":"Action","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]},{"de_type":["Type","EditMask",[]],"de_type_representation":"EditMask","de_locations":[["Location","iTasks","iTasks.UI.Editor",["Just",61],["Nothing"],""]]},{"de_type":["Type","FieldMask",[]],"de_type_representation":"FieldMask","de_locations":[["Location","iTasks","iTasks.UI.Editor",["Just",61],["Nothing"],""]]},{"de_type":["Type","LeafletMap",[]],"de_type_representation":"LeafletMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]},{"de_type":["Type","LeafletPerspective",[]],"de_type_representation":"LeafletPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]},{"de_type":["Type","LeafletIcon",[]],"de_type_representation":"LeafletIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]},{"de_type":["Type","LeafletLatLng",[]],"de_type_representation":"LeafletLatLng","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]},{"de_type":["Type","LeafletBounds",[]],"de_type_representation":"LeafletBounds","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]},{"de_type":["Type","LeafletObject",[]],"de_type_representation":"LeafletObject","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]},{"de_type":["Type","LeafletMarker",[]],"de_type_representation":"LeafletMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]},{"de_type":["Type","LeafletPolyline",[]],"de_type_representation":"LeafletPolyline","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]},{"de_type":["Type","LeafletPolygon",[]],"de_type_representation":"LeafletPolygon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]},{"de_type":["Type","GoogleMap",[]],"de_type_representation":"GoogleMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]},{"de_type":["Type","GoogleMapSettings",[]],"de_type_representation":"GoogleMapSettings","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]},{"de_type":["Type","GoogleMapPerspective",[]],"de_type_representation":"GoogleMapPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]},{"de_type":["Type","GoogleMapPosition",[]],"de_type_representation":"GoogleMapPosition","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]},{"de_type":["Type","GoogleMapMarker",[]],"de_type_representation":"GoogleMapMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]},{"de_type":["Type","GoogleMapType",[]],"de_type_representation":"GoogleMapType","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]},{"de_type":["Type","GoogleMapIcon",[]],"de_type_representation":"GoogleMapIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]},{"de_type":["Type","GoogleMapComplexIcon",[]],"de_type_representation":"GoogleMapComplexIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]},{"de_type":["Type","WorkflowTaskContainer",[]],"de_type_representation":"WorkflowTaskContainer","de_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",24],["Nothing"],""]]},{"de_type":["Type","AceOptions",[]],"de_type_representation":"AceOptions","de_locations":[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",34],["Nothing"],""]]},{"de_type":["Type","EmailAddress",[]],"de_type_representation":"EmailAddress","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",15],["Nothing"],""]]},{"de_type":["Type","PhoneNumber",[]],"de_type_representation":"PhoneNumber","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",15],["Nothing"],""]]},{"de_type":["Type","URL",[]],"de_type_representation":"URL","de_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",17],["Nothing"],""]]},{"de_type":["Type","Date",[]],"de_type_representation":"Date","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",51],["Nothing"],""]]},{"de_type":["Type","Time",[]],"de_type_representation":"Time","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",51],["Nothing"],""]]},{"de_type":["Type","DateTime",[]],"de_type_representation":"DateTime","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",51],["Nothing"],""]]},{"de_type":["Type","ControlLight",[]],"de_type_representation":"ControlLight","de_locations":[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",24],["Nothing"],""]]},{"de_type":["Type","AnalogClock",[]],"de_type_representation":"AnalogClock","de_locations":[["Location","iTasks","iTasks.Extensions.Clock",["Just",9],["Nothing"],""]]},{"de_type":["Type","EUR",[]],"de_type_representation":"EUR","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",16],["Nothing"],""]]},{"de_type":["Type","USD",[]],"de_type_representation":"USD","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",16],["Nothing"],""]]},{"de_type":["Type","WebImage",[]],"de_type_representation":"WebImage","de_locations":[["Location","iTasks","iTasks.Extensions.Image",["Just",17],["Nothing"],""]]},{"de_type":["Type","User",[]],"de_type_representation":"User","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",55],["Nothing"],""]]},{"de_type":["Type","UserConstraint",[]],"de_type_representation":"UserConstraint","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",55],["Nothing"],""]]},{"de_type":["Type","Username",[]],"de_type_representation":"Username","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",55],["Nothing"],""]]},{"de_type":["Type","Password",[]],"de_type_representation":"Password","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",55],["Nothing"],""]]},{"de_type":["Type","Document",[]],"de_type_representation":"Document","de_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",24],["Nothing"],""]]},{"de_type":["Type","IntMap",[]],"de_type_representation":"IntMap","de_locations":[["Location","Platform","Data.IntMap.Strict",["Just",93],["Nothing"],""]]},{"de_type":["Type","Graph",[]],"de_type_representation":"Graph","de_locations":[["Location","Platform","Data.Graph",["Just",24],["Nothing"],""]]},{"de_type":["Type","Node",[]],"de_type_representation":"Node","de_locations":[["Location","Platform","Data.Graph",["Just",24],["Nothing"],""]]},{"de_type":["Type","Map",[]],"de_type_representation":"Map","de_locations":[["Location","Platform","Data.Map",["Just",177],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","JSONNode",[]],"de_type_representation":"JSONNode","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]}],["Bin",3,"JSEncode",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Arrow",["Nothing"]],"de_type_representation":"(->)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]}],["Bin",1,"JSDecode",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]}],["Tip"],["Tip"]],["Bin",1,"JSONDecode",[{"de_type":["Type","TonicModule",[]],"de_type_representation":"TonicModule","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]},{"de_type":["Type","TonicFunc",[]],"de_type_representation":"TonicFunc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]},{"de_type":["Type","TExpr",[]],"de_type_representation":"TExpr","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]},{"de_type":["Type","TPriority",[]],"de_type_representation":"TPriority","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]},{"de_type":["Type","TAssoc",[]],"de_type_representation":"TAssoc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]},{"de_type":["Type","TLit",[]],"de_type_representation":"TLit","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]},{"de_type":["Type","UnitTest",[]],"de_type_representation":"UnitTest","de_locations":[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",41],["Nothing"],""]]},{"de_type":["Type","Dynamic",[]],"de_type_representation":"Dynamic","de_locations":[["Location","iTasks","iTasks.Internal.Serialization",["Just",13],["Nothing"],""]]},{"de_type":["Arrow",["Nothing"]],"de_type_representation":"(->)","de_locations":[["Location","iTasks","iTasks.Internal.Serialization",["Just",13],["Nothing"],""]]},{"de_type":["Type","Task",[]],"de_type_representation":"Task","de_locations":[["Location","iTasks","iTasks.Internal.Task",["Just",20],["Nothing"],""]]},{"de_type":["Type","TIMeta",[]],"de_type_representation":"TIMeta","de_locations":[["Location","iTasks","iTasks.Internal.TaskState",["Just",19],["Nothing"],""]]},{"de_type":["Type","TIReduct",[]],"de_type_representation":"TIReduct","de_locations":[["Location","iTasks","iTasks.Internal.TaskState",["Just",19],["Nothing"],""]]},{"de_type":["Type","TaskTree",[]],"de_type_representation":"TaskTree","de_locations":[["Location","iTasks","iTasks.Internal.TaskState",["Just",19],["Nothing"],""]]},{"de_type":["Type","DeferredJSON",[]],"de_type_representation":"DeferredJSON","de_locations":[["Location","iTasks","iTasks.Internal.TaskState",["Just",80],["Nothing"],""]]},{"de_type":["Type","_Unit",[]],"de_type_representation":"()","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]},{"de_type":["Type","HtmlTag",[]],"de_type_representation":"HtmlTag","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]},{"de_type":["Type","HtmlAttr",[]],"de_type_representation":"HtmlAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]},{"de_type":["Type","Either",[]],"de_type_representation":"Either","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]},{"de_type":["Type","MaybeError",[]],"de_type_representation":"MaybeError","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]},{"de_type":["Type","Timestamp",[]],"de_type_representation":"Timestamp","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]},{"de_type":["Type","SDS",[]],"de_type_representation":"SDS","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",30],["Nothing"],""]]},{"de_type":["Type","SVGElt",[]],"de_type_representation":"SVGElt","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGAttr",[]],"de_type_representation":"SVGAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGAlign",[]],"de_type_representation":"SVGAlign","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGColor",[]],"de_type_representation":"SVGColor","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGDefer",[]],"de_type_representation":"SVGDefer","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGFillOpacity",[]],"de_type_representation":"SVGFillOpacity","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGFuncIRI",[]],"de_type_representation":"SVGFuncIRI","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGLengthAdjust",[]],"de_type_representation":"SVGLengthAdjust","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGLengthUnit",[]],"de_type_representation":"SVGLengthUnit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGLineCap",[]],"de_type_representation":"SVGLineCap","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGFillRule",[]],"de_type_representation":"SVGFillRule","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGLineJoin",[]],"de_type_representation":"SVGLineJoin","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGMeetOrSlice",[]],"de_type_representation":"SVGMeetOrSlice","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGStrokeMiterLimit",[]],"de_type_representation":"SVGStrokeMiterLimit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGPaint",[]],"de_type_representation":"SVGPaint","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashArray",[]],"de_type_representation":"SVGStrokeDashArray","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashOffset",[]],"de_type_representation":"SVGStrokeDashOffset","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGStrokeWidth",[]],"de_type_representation":"SVGStrokeWidth","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGTransform",[]],"de_type_representation":"SVGTransform","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","SVGZoomAndPan",[]],"de_type_representation":"SVGZoomAndPan","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]},{"de_type":["Type","TaskValue",[]],"de_type_representation":"TaskValue","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]},{"de_type":["Type","TaskListItem",[]],"de_type_representation":"TaskListItem","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]},{"de_type":["Type","InstanceConstants",[]],"de_type_representation":"InstanceConstants","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]},{"de_type":["Type","InstanceProgress",[]],"de_type_representation":"InstanceProgress","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]},{"de_type":["Type","ValueStatus",[]],"de_type_representation":"ValueStatus","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]},{"de_type":["Type","TaskInstance",[]],"de_type_representation":"TaskInstance","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]},{"de_type":["Type","Action",[]],"de_type_representation":"Action","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]},{"de_type":["Type","EditMask",[]],"de_type_representation":"EditMask","de_locations":[["Location","iTasks","iTasks.UI.Editor",["Just",62],["Nothing"],""]]},{"de_type":["Type","FieldMask",[]],"de_type_representation":"FieldMask","de_locations":[["Location","iTasks","iTasks.UI.Editor",["Just",62],["Nothing"],""]]},{"de_type":["Type","LeafletMap",[]],"de_type_representation":"LeafletMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]},{"de_type":["Type","LeafletPerspective",[]],"de_type_representation":"LeafletPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]},{"de_type":["Type","LeafletIcon",[]],"de_type_representation":"LeafletIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]},{"de_type":["Type","LeafletLatLng",[]],"de_type_representation":"LeafletLatLng","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]},{"de_type":["Type","LeafletBounds",[]],"de_type_representation":"LeafletBounds","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]},{"de_type":["Type","LeafletObject",[]],"de_type_representation":"LeafletObject","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]},{"de_type":["Type","LeafletMarker",[]],"de_type_representation":"LeafletMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]},{"de_type":["Type","LeafletPolyline",[]],"de_type_representation":"LeafletPolyline","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]},{"de_type":["Type","LeafletPolygon",[]],"de_type_representation":"LeafletPolygon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]},{"de_type":["Type","GoogleMap",[]],"de_type_representation":"GoogleMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]},{"de_type":["Type","GoogleMapSettings",[]],"de_type_representation":"GoogleMapSettings","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]},{"de_type":["Type","GoogleMapPerspective",[]],"de_type_representation":"GoogleMapPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]},{"de_type":["Type","GoogleMapPosition",[]],"de_type_representation":"GoogleMapPosition","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]},{"de_type":["Type","GoogleMapMarker",[]],"de_type_representation":"GoogleMapMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]},{"de_type":["Type","GoogleMapType",[]],"de_type_representation":"GoogleMapType","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]},{"de_type":["Type","GoogleMapIcon",[]],"de_type_representation":"GoogleMapIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]},{"de_type":["Type","GoogleMapComplexIcon",[]],"de_type_representation":"GoogleMapComplexIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]},{"de_type":["Type","WorkflowTaskContainer",[]],"de_type_representation":"WorkflowTaskContainer","de_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",25],["Nothing"],""]]},{"de_type":["Type","AceOptions",[]],"de_type_representation":"AceOptions","de_locations":[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",35],["Nothing"],""]]},{"de_type":["Type","EmailAddress",[]],"de_type_representation":"EmailAddress","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",16],["Nothing"],""]]},{"de_type":["Type","PhoneNumber",[]],"de_type_representation":"PhoneNumber","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",16],["Nothing"],""]]},{"de_type":["Type","URL",[]],"de_type_representation":"URL","de_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",18],["Nothing"],""]]},{"de_type":["Type","Date",[]],"de_type_representation":"Date","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",52],["Nothing"],""]]},{"de_type":["Type","Time",[]],"de_type_representation":"Time","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",52],["Nothing"],""]]},{"de_type":["Type","DateTime",[]],"de_type_representation":"DateTime","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",52],["Nothing"],""]]},{"de_type":["Type","ControlLight",[]],"de_type_representation":"ControlLight","de_locations":[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",25],["Nothing"],""]]},{"de_type":["Type","AnalogClock",[]],"de_type_representation":"AnalogClock","de_locations":[["Location","iTasks","iTasks.Extensions.Clock",["Just",10],["Nothing"],""]]},{"de_type":["Type","EUR",[]],"de_type_representation":"EUR","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",17],["Nothing"],""]]},{"de_type":["Type","USD",[]],"de_type_representation":"USD","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",17],["Nothing"],""]]},{"de_type":["Type","WebImage",[]],"de_type_representation":"WebImage","de_locations":[["Location","iTasks","iTasks.Extensions.Image",["Just",18],["Nothing"],""]]},{"de_type":["Type","User",[]],"de_type_representation":"User","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",56],["Nothing"],""]]},{"de_type":["Type","UserConstraint",[]],"de_type_representation":"UserConstraint","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",56],["Nothing"],""]]},{"de_type":["Type","Username",[]],"de_type_representation":"Username","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",56],["Nothing"],""]]},{"de_type":["Type","Password",[]],"de_type_representation":"Password","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",56],["Nothing"],""]]},{"de_type":["Type","Document",[]],"de_type_representation":"Document","de_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",25],["Nothing"],""]]},{"de_type":["Type","IntMap",[]],"de_type_representation":"IntMap","de_locations":[["Location","Platform","Data.IntMap.Strict",["Just",94],["Nothing"],""]]},{"de_type":["Type","Graph",[]],"de_type_representation":"Graph","de_locations":[["Location","Platform","Data.Graph",["Just",25],["Nothing"],""]]},{"de_type":["Type","Node",[]],"de_type_representation":"Node","de_locations":[["Location","Platform","Data.Graph",["Just",25],["Nothing"],""]]},{"de_type":["Type","Map",[]],"de_type_representation":"Map","de_locations":[["Location","Platform","Data.Map",["Just",178],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]},{"de_type":["Type","JSONNode",[]],"de_type_representation":"JSONNode","de_locations":[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]}],["Tip"],["Tip"]]],["Bin",1,"XMLEncode",[{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]},{"de_type":["Type","Either",[]],"de_type_representation":"Either","de_locations":[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]},{"de_type":["Type","XMLIntAttribute",[]],"de_type_representation":"XMLIntAttribute","de_locations":[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]},{"de_type":["Type","XMLCharAttribute",[]],"de_type_representation":"XMLCharAttribute","de_locations":[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]},{"de_type":["Type","XMLRealAttribute",[]],"de_type_representation":"XMLRealAttribute","de_locations":[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]},{"de_type":["Type","XMLStringAttribute",[]],"de_type_representation":"XMLStringAttribute","de_locations":[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]},{"de_type":["Type","XMLBoolAttribute",[]],"de_type_representation":"XMLBoolAttribute","de_locations":[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]}],["Tip"],["Tip"]]],["Bin",4,"gCompressedSize",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]}],["Bin",1,"gCompress",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]}],["Tip"],["Tip"]],["Bin",2,"gDefault",[{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]},{"de_type":["Type","RECORD",[]],"de_type_representation":"RECORD","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","_Unit",[]],"de_type_representation":"()","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Arrow",["Nothing"]],"de_type_representation":"(->)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","Dynamic",[]],"de_type_representation":"Dynamic","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]},{"de_type":["Type","Either",[]],"de_type_representation":"Either","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]},{"de_type":["Type","MaybeError",[]],"de_type_representation":"MaybeError","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]},{"de_type":["Type","Map",[]],"de_type_representation":"Map","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]},{"de_type":["Type","JSONNode",[]],"de_type_representation":"JSONNode","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]},{"de_type":["Type","HtmlTag",[]],"de_type_representation":"HtmlTag","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]},{"de_type":["Type","Timestamp",[]],"de_type_representation":"Timestamp","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]},{"de_type":["Type","TonicModule",[]],"de_type_representation":"TonicModule","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]},{"de_type":["Type","TonicFunc",[]],"de_type_representation":"TonicFunc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]},{"de_type":["Type","TExpr",[]],"de_type_representation":"TExpr","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]},{"de_type":["Type","TPriority",[]],"de_type_representation":"TPriority","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]},{"de_type":["Type","TAssoc",[]],"de_type_representation":"TAssoc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]},{"de_type":["Type","IntMap",[]],"de_type_representation":"IntMap","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]},{"de_type":["Type","TLit",[]],"de_type_representation":"TLit","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]},{"de_type":["Type","UnitTest",[]],"de_type_representation":"UnitTest","de_locations":[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",45],["Nothing"],""]]},{"de_type":["Type","Task",[]],"de_type_representation":"Task","de_locations":[["Location","iTasks","iTasks.Internal.Task",["Just",21],["Nothing"],""]]},{"de_type":["Type","HtmlAttr",[]],"de_type_representation":"HtmlAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",25],["Nothing"],""]]},{"de_type":["Type","SDS",[]],"de_type_representation":"SDS","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",32],["Nothing"],""]]},{"de_type":["Type","SVGElt",[]],"de_type_representation":"SVGElt","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGAttr",[]],"de_type_representation":"SVGAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGAlign",[]],"de_type_representation":"SVGAlign","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGColor",[]],"de_type_representation":"SVGColor","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGDefer",[]],"de_type_representation":"SVGDefer","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGFillOpacity",[]],"de_type_representation":"SVGFillOpacity","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGFuncIRI",[]],"de_type_representation":"SVGFuncIRI","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGLengthAdjust",[]],"de_type_representation":"SVGLengthAdjust","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGLengthUnit",[]],"de_type_representation":"SVGLengthUnit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGLineCap",[]],"de_type_representation":"SVGLineCap","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGFillRule",[]],"de_type_representation":"SVGFillRule","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGLineJoin",[]],"de_type_representation":"SVGLineJoin","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGMeetOrSlice",[]],"de_type_representation":"SVGMeetOrSlice","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGStrokeMiterLimit",[]],"de_type_representation":"SVGStrokeMiterLimit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGPaint",[]],"de_type_representation":"SVGPaint","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashArray",[]],"de_type_representation":"SVGStrokeDashArray","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashOffset",[]],"de_type_representation":"SVGStrokeDashOffset","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGStrokeWidth",[]],"de_type_representation":"SVGStrokeWidth","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGTransform",[]],"de_type_representation":"SVGTransform","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","SVGZoomAndPan",[]],"de_type_representation":"SVGZoomAndPan","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",41],["Nothing"],""]]},{"de_type":["Type","TaskValue",[]],"de_type_representation":"TaskValue","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]},{"de_type":["Type","TaskListItem",[]],"de_type_representation":"TaskListItem","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]},{"de_type":["Type","InstanceConstants",[]],"de_type_representation":"InstanceConstants","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]},{"de_type":["Type","InstanceProgress",[]],"de_type_representation":"InstanceProgress","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]},{"de_type":["Type","ValueStatus",[]],"de_type_representation":"ValueStatus","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]},{"de_type":["Type","TaskInstance",[]],"de_type_representation":"TaskInstance","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]},{"de_type":["Type","Action",[]],"de_type_representation":"Action","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]},{"de_type":["Type","LeafletMap",[]],"de_type_representation":"LeafletMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]},{"de_type":["Type","LeafletPerspective",[]],"de_type_representation":"LeafletPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]},{"de_type":["Type","LeafletIcon",[]],"de_type_representation":"LeafletIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]},{"de_type":["Type","LeafletLatLng",[]],"de_type_representation":"LeafletLatLng","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]},{"de_type":["Type","LeafletBounds",[]],"de_type_representation":"LeafletBounds","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]},{"de_type":["Type","LeafletObject",[]],"de_type_representation":"LeafletObject","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]},{"de_type":["Type","LeafletMarker",[]],"de_type_representation":"LeafletMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]},{"de_type":["Type","LeafletPolyline",[]],"de_type_representation":"LeafletPolyline","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]},{"de_type":["Type","LeafletPolygon",[]],"de_type_representation":"LeafletPolygon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]},{"de_type":["Type","GoogleMap",[]],"de_type_representation":"GoogleMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]},{"de_type":["Type","GoogleMapSettings",[]],"de_type_representation":"GoogleMapSettings","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]},{"de_type":["Type","GoogleMapPerspective",[]],"de_type_representation":"GoogleMapPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]},{"de_type":["Type","GoogleMapPosition",[]],"de_type_representation":"GoogleMapPosition","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]},{"de_type":["Type","GoogleMapMarker",[]],"de_type_representation":"GoogleMapMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]},{"de_type":["Type","GoogleMapType",[]],"de_type_representation":"GoogleMapType","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]},{"de_type":["Type","GoogleMapIcon",[]],"de_type_representation":"GoogleMapIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]},{"de_type":["Type","GoogleMapComplexIcon",[]],"de_type_representation":"GoogleMapComplexIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]},{"de_type":["Type","WorkflowTaskContainer",[]],"de_type_representation":"WorkflowTaskContainer","de_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",26],["Nothing"],""]]},{"de_type":["Type","AceOptions",[]],"de_type_representation":"AceOptions","de_locations":[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",33],["Nothing"],""]]},{"de_type":["Type","EmailAddress",[]],"de_type_representation":"EmailAddress","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",17],["Nothing"],""]]},{"de_type":["Type","PhoneNumber",[]],"de_type_representation":"PhoneNumber","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",17],["Nothing"],""]]},{"de_type":["Type","URL",[]],"de_type_representation":"URL","de_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",19],["Nothing"],""]]},{"de_type":["Type","Date",[]],"de_type_representation":"Date","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",53],["Nothing"],""]]},{"de_type":["Type","Time",[]],"de_type_representation":"Time","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",53],["Nothing"],""]]},{"de_type":["Type","DateTime",[]],"de_type_representation":"DateTime","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",53],["Nothing"],""]]},{"de_type":["Type","ControlLight",[]],"de_type_representation":"ControlLight","de_locations":[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",28],["Nothing"],""]]},{"de_type":["Type","AnalogClock",[]],"de_type_representation":"AnalogClock","de_locations":[["Location","iTasks","iTasks.Extensions.Clock",["Just",13],["Nothing"],""]]},{"de_type":["Type","EUR",[]],"de_type_representation":"EUR","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",18],["Nothing"],""]]},{"de_type":["Type","USD",[]],"de_type_representation":"USD","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",18],["Nothing"],""]]},{"de_type":["Type","WebImage",[]],"de_type_representation":"WebImage","de_locations":[["Location","iTasks","iTasks.Extensions.Image",["Just",19],["Nothing"],""]]},{"de_type":["Type","User",[]],"de_type_representation":"User","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",57],["Nothing"],""]]},{"de_type":["Type","UserConstraint",[]],"de_type_representation":"UserConstraint","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",57],["Nothing"],""]]},{"de_type":["Type","Username",[]],"de_type_representation":"Username","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",57],["Nothing"],""]]},{"de_type":["Type","Password",[]],"de_type_representation":"Password","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",57],["Nothing"],""]]},{"de_type":["Type","Document",[]],"de_type_representation":"Document","de_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",26],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]}],["Tip"],["Bin",1,"gEditor",[{"de_type":["Type","TonicModule",[]],"de_type_representation":"TonicModule","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]},{"de_type":["Type","TonicFunc",[]],"de_type_representation":"TonicFunc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]},{"de_type":["Type","TExpr",[]],"de_type_representation":"TExpr","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]},{"de_type":["Type","TPriority",[]],"de_type_representation":"TPriority","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]},{"de_type":["Type","TAssoc",[]],"de_type_representation":"TAssoc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]},{"de_type":["Type","IntMap",[]],"de_type_representation":"IntMap","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]},{"de_type":["Type","TLit",[]],"de_type_representation":"TLit","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]},{"de_type":["Type","UnitTest",[]],"de_type_representation":"UnitTest","de_locations":[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",43],["Nothing"],""]]},{"de_type":["Type","Task",[]],"de_type_representation":"Task","de_locations":[["Location","iTasks","iTasks.Internal.Task",["Just",23],["Nothing"],""]]},{"de_type":["Type","HtmlAttr",[]],"de_type_representation":"HtmlAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",26],["Nothing"],""]]},{"de_type":["Type","SVGElt",[]],"de_type_representation":"SVGElt","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGAttr",[]],"de_type_representation":"SVGAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGAlign",[]],"de_type_representation":"SVGAlign","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGColor",[]],"de_type_representation":"SVGColor","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGDefer",[]],"de_type_representation":"SVGDefer","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGFillOpacity",[]],"de_type_representation":"SVGFillOpacity","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGFuncIRI",[]],"de_type_representation":"SVGFuncIRI","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGLengthAdjust",[]],"de_type_representation":"SVGLengthAdjust","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGLengthUnit",[]],"de_type_representation":"SVGLengthUnit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGLineCap",[]],"de_type_representation":"SVGLineCap","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGFillRule",[]],"de_type_representation":"SVGFillRule","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGLineJoin",[]],"de_type_representation":"SVGLineJoin","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGMeetOrSlice",[]],"de_type_representation":"SVGMeetOrSlice","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGStrokeMiterLimit",[]],"de_type_representation":"SVGStrokeMiterLimit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGPaint",[]],"de_type_representation":"SVGPaint","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashArray",[]],"de_type_representation":"SVGStrokeDashArray","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashOffset",[]],"de_type_representation":"SVGStrokeDashOffset","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGStrokeWidth",[]],"de_type_representation":"SVGStrokeWidth","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGTransform",[]],"de_type_representation":"SVGTransform","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","SVGZoomAndPan",[]],"de_type_representation":"SVGZoomAndPan","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",42],["Nothing"],""]]},{"de_type":["Type","TaskValue",[]],"de_type_representation":"TaskValue","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]},{"de_type":["Type","TaskListItem",[]],"de_type_representation":"TaskListItem","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]},{"de_type":["Type","InstanceConstants",[]],"de_type_representation":"InstanceConstants","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]},{"de_type":["Type","InstanceProgress",[]],"de_type_representation":"InstanceProgress","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]},{"de_type":["Type","ValueStatus",[]],"de_type_representation":"ValueStatus","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]},{"de_type":["Type","TaskInstance",[]],"de_type_representation":"TaskInstance","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]},{"de_type":["Type","Action",[]],"de_type_representation":"Action","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]},{"de_type":["Type","RECORD",[]],"de_type_representation":"RECORD","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","_Unit",[]],"de_type_representation":"()","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Arrow",["Nothing"]],"de_type_representation":"(->)","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","Dynamic",[]],"de_type_representation":"Dynamic","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]},{"de_type":["Type","Either",[]],"de_type_representation":"Either","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]},{"de_type":["Type","MaybeError",[]],"de_type_representation":"MaybeError","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]},{"de_type":["Type","Map",[]],"de_type_representation":"Map","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]},{"de_type":["Type","JSONNode",[]],"de_type_representation":"JSONNode","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]},{"de_type":["Type","HtmlTag",[]],"de_type_representation":"HtmlTag","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]},{"de_type":["Type","Timestamp",[]],"de_type_representation":"Timestamp","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]},{"de_type":["Type","SDS",[]],"de_type_representation":"SDS","de_locations":[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",29],["Nothing"],""]]},{"de_type":["Type","LeafletMap",[]],"de_type_representation":"LeafletMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]},{"de_type":["Type","LeafletPerspective",[]],"de_type_representation":"LeafletPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]},{"de_type":["Type","LeafletIcon",[]],"de_type_representation":"LeafletIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]},{"de_type":["Type","LeafletLatLng",[]],"de_type_representation":"LeafletLatLng","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]},{"de_type":["Type","LeafletBounds",[]],"de_type_representation":"LeafletBounds","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]},{"de_type":["Type","LeafletObject",[]],"de_type_representation":"LeafletObject","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]},{"de_type":["Type","LeafletMarker",[]],"de_type_representation":"LeafletMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]},{"de_type":["Type","LeafletPolyline",[]],"de_type_representation":"LeafletPolyline","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]},{"de_type":["Type","LeafletPolygon",[]],"de_type_representation":"LeafletPolygon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]},{"de_type":["Type","GoogleMap",[]],"de_type_representation":"GoogleMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]},{"de_type":["Type","GoogleMapSettings",[]],"de_type_representation":"GoogleMapSettings","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]},{"de_type":["Type","GoogleMapPerspective",[]],"de_type_representation":"GoogleMapPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]},{"de_type":["Type","GoogleMapPosition",[]],"de_type_representation":"GoogleMapPosition","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]},{"de_type":["Type","GoogleMapMarker",[]],"de_type_representation":"GoogleMapMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]},{"de_type":["Type","GoogleMapType",[]],"de_type_representation":"GoogleMapType","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]},{"de_type":["Type","GoogleMapIcon",[]],"de_type_representation":"GoogleMapIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]},{"de_type":["Type","GoogleMapComplexIcon",[]],"de_type_representation":"GoogleMapComplexIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]},{"de_type":["Type","WorkflowTaskContainer",[]],"de_type_representation":"WorkflowTaskContainer","de_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",23],["Nothing"],""]]},{"de_type":["Type","AceOptions",[]],"de_type_representation":"AceOptions","de_locations":[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",30],["Nothing"],""]]},{"de_type":["Type","EmailAddress",[]],"de_type_representation":"EmailAddress","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",20],["Nothing"],""]]},{"de_type":["Type","PhoneNumber",[]],"de_type_representation":"PhoneNumber","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",20],["Nothing"],""]]},{"de_type":["Type","URL",[]],"de_type_representation":"URL","de_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",15],["Nothing"],""]]},{"de_type":["Type","Date",[]],"de_type_representation":"Date","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",56],["Nothing"],""]]},{"de_type":["Type","Time",[]],"de_type_representation":"Time","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",56],["Nothing"],""]]},{"de_type":["Type","DateTime",[]],"de_type_representation":"DateTime","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",56],["Nothing"],""]]},{"de_type":["Type","ControlLight",[]],"de_type_representation":"ControlLight","de_locations":[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",26],["Nothing"],""]]},{"de_type":["Type","AnalogClock",[]],"de_type_representation":"AnalogClock","de_locations":[["Location","iTasks","iTasks.Extensions.Clock",["Just",11],["Nothing"],""]]},{"de_type":["Type","EUR",[]],"de_type_representation":"EUR","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",21],["Nothing"],""]]},{"de_type":["Type","USD",[]],"de_type_representation":"USD","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",21],["Nothing"],""]]},{"de_type":["Type","WebImage",[]],"de_type_representation":"WebImage","de_locations":[["Location","iTasks","iTasks.Extensions.Image",["Just",16],["Nothing"],""]]},{"de_type":["Type","User",[]],"de_type_representation":"User","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",61],["Nothing"],""]]},{"de_type":["Type","UserConstraint",[]],"de_type_representation":"UserConstraint","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",61],["Nothing"],""]]},{"de_type":["Type","Username",[]],"de_type_representation":"Username","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",61],["Nothing"],""]]},{"de_type":["Type","Password",[]],"de_type_representation":"Password","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",61],["Nothing"],""]]},{"de_type":["Type","Document",[]],"de_type_representation":"Document","de_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",29],["Nothing"],""]]}],["Tip"],["Tip"]]]]],["Bin",8,"gMapLM",[{"de_type":["Var","c"],"de_type_representation":"c","de_locations":[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]}],["Bin",4,"gLookupFMap",[{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]}],["Bin",2,"gInsertFMap",[{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]}],["Tip"],["Bin",1,"gLexOrd",[{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","RECORD",[]],"de_type_representation":"RECORD","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]}],["Tip"],["Tip"]]],["Bin",1,"gMap",[{"de_type":["Var","c"],"de_type_representation":"c","de_locations":[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]}],["Tip"],["Tip"]]],["Bin",3,"gMapRM",[{"de_type":["Var","c"],"de_type_representation":"c","de_locations":[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]}],["Bin",1,"gMapLSt",[{"de_type":["Var","c"],"de_type_representation":"c","de_locations":[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]}],["Tip"],["Tip"]],["Bin",1,"gMapRSt",[{"de_type":["Var","c"],"de_type_representation":"c","de_locations":[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]}],["Tip"],["Tip"]]]]],["Bin",10,"gReduceLSt",[{"de_type":["Var","c"],"de_type_representation":"c","de_locations":[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]}],["Bin",4,"gPrint",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","RECORD",[]],"de_type_representation":"RECORD","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]}],["Bin",2,"gParse",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","RECORD",[]],"de_type_representation":"RECORD","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]}],["Tip"],["Bin",1,"gPrettyTrace",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",8],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",8],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",8],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",8],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]},{"de_type":["Type","RECORD",[]],"de_type_representation":"RECORD","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]},{"de_type":["Type","_Unit",[]],"de_type_representation":"()","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]},{"de_type":["Type","Dynamic",[]],"de_type_representation":"Dynamic","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]},{"de_type":["Type","Map",[]],"de_type_representation":"Map","de_locations":[["Location","iTasks","iTasks.Util.Trace",["Just",11],["Nothing"],""]]}],["Tip"],["Tip"]]],["Bin",1,"gReduce",[{"de_type":["Var","c"],"de_type_representation":"c","de_locations":[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]}],["Tip"],["Tip"]]],["Bin",5,"gZip",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]}],["Bin",3,"gText",[{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]},{"de_type":["Type","RECORD",[]],"de_type_representation":"RECORD","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]},{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","_Unit",[]],"de_type_representation":"()","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Arrow",["Nothing"]],"de_type_representation":"(->)","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","Dynamic",[]],"de_type_representation":"Dynamic","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]},{"de_type":["Type","Either",[]],"de_type_representation":"Either","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]},{"de_type":["Type","MaybeError",[]],"de_type_representation":"MaybeError","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]},{"de_type":["Type","Map",[]],"de_type_representation":"Map","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]},{"de_type":["Type","JSONNode",[]],"de_type_representation":"JSONNode","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]},{"de_type":["Type","HtmlTag",[]],"de_type_representation":"HtmlTag","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]},{"de_type":["Type","Timestamp",[]],"de_type_representation":"Timestamp","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]},{"de_type":["Type","SDS",[]],"de_type_representation":"SDS","de_locations":[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]},{"de_type":["Type","TonicModule",[]],"de_type_representation":"TonicModule","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]},{"de_type":["Type","TonicFunc",[]],"de_type_representation":"TonicFunc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]},{"de_type":["Type","TExpr",[]],"de_type_representation":"TExpr","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]},{"de_type":["Type","TPriority",[]],"de_type_representation":"TPriority","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]},{"de_type":["Type","TAssoc",[]],"de_type_representation":"TAssoc","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]},{"de_type":["Type","IntMap",[]],"de_type_representation":"IntMap","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]},{"de_type":["Type","TLit",[]],"de_type_representation":"TLit","de_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]},{"de_type":["Type","UnitTest",[]],"de_type_representation":"UnitTest","de_locations":[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",44],["Nothing"],""]]},{"de_type":["Type","Task",[]],"de_type_representation":"Task","de_locations":[["Location","iTasks","iTasks.Internal.Task",["Just",22],["Nothing"],""]]},{"de_type":["Type","HtmlAttr",[]],"de_type_representation":"HtmlAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",27],["Nothing"],""]]},{"de_type":["Type","SVGElt",[]],"de_type_representation":"SVGElt","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGAttr",[]],"de_type_representation":"SVGAttr","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGAlign",[]],"de_type_representation":"SVGAlign","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGColor",[]],"de_type_representation":"SVGColor","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGDefer",[]],"de_type_representation":"SVGDefer","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGFillOpacity",[]],"de_type_representation":"SVGFillOpacity","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGFuncIRI",[]],"de_type_representation":"SVGFuncIRI","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGLengthAdjust",[]],"de_type_representation":"SVGLengthAdjust","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGLengthUnit",[]],"de_type_representation":"SVGLengthUnit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGLineCap",[]],"de_type_representation":"SVGLineCap","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGFillRule",[]],"de_type_representation":"SVGFillRule","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGLineJoin",[]],"de_type_representation":"SVGLineJoin","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGMeetOrSlice",[]],"de_type_representation":"SVGMeetOrSlice","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGStrokeMiterLimit",[]],"de_type_representation":"SVGStrokeMiterLimit","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGPaint",[]],"de_type_representation":"SVGPaint","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashArray",[]],"de_type_representation":"SVGStrokeDashArray","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGStrokeDashOffset",[]],"de_type_representation":"SVGStrokeDashOffset","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGStrokeWidth",[]],"de_type_representation":"SVGStrokeWidth","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGTransform",[]],"de_type_representation":"SVGTransform","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","SVGZoomAndPan",[]],"de_type_representation":"SVGZoomAndPan","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",43],["Nothing"],""]]},{"de_type":["Type","TaskValue",[]],"de_type_representation":"TaskValue","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]},{"de_type":["Type","TaskListItem",[]],"de_type_representation":"TaskListItem","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]},{"de_type":["Type","InstanceConstants",[]],"de_type_representation":"InstanceConstants","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]},{"de_type":["Type","InstanceProgress",[]],"de_type_representation":"InstanceProgress","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]},{"de_type":["Type","ValueStatus",[]],"de_type_representation":"ValueStatus","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]},{"de_type":["Type","TaskInstance",[]],"de_type_representation":"TaskInstance","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]},{"de_type":["Type","Action",[]],"de_type_representation":"Action","de_locations":[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]},{"de_type":["Type","LeafletMap",[]],"de_type_representation":"LeafletMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]},{"de_type":["Type","LeafletPerspective",[]],"de_type_representation":"LeafletPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]},{"de_type":["Type","LeafletIcon",[]],"de_type_representation":"LeafletIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]},{"de_type":["Type","LeafletLatLng",[]],"de_type_representation":"LeafletLatLng","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]},{"de_type":["Type","LeafletBounds",[]],"de_type_representation":"LeafletBounds","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]},{"de_type":["Type","LeafletObject",[]],"de_type_representation":"LeafletObject","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]},{"de_type":["Type","LeafletMarker",[]],"de_type_representation":"LeafletMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]},{"de_type":["Type","LeafletPolyline",[]],"de_type_representation":"LeafletPolyline","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]},{"de_type":["Type","LeafletPolygon",[]],"de_type_representation":"LeafletPolygon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]},{"de_type":["Type","GoogleMap",[]],"de_type_representation":"GoogleMap","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]},{"de_type":["Type","GoogleMapSettings",[]],"de_type_representation":"GoogleMapSettings","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]},{"de_type":["Type","GoogleMapPerspective",[]],"de_type_representation":"GoogleMapPerspective","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]},{"de_type":["Type","GoogleMapPosition",[]],"de_type_representation":"GoogleMapPosition","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]},{"de_type":["Type","GoogleMapMarker",[]],"de_type_representation":"GoogleMapMarker","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]},{"de_type":["Type","GoogleMapType",[]],"de_type_representation":"GoogleMapType","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]},{"de_type":["Type","GoogleMapIcon",[]],"de_type_representation":"GoogleMapIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]},{"de_type":["Type","GoogleMapComplexIcon",[]],"de_type_representation":"GoogleMapComplexIcon","de_locations":[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]},{"de_type":["Type","WorkflowTaskContainer",[]],"de_type_representation":"WorkflowTaskContainer","de_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",22],["Nothing"],""]]},{"de_type":["Type","AceOptions",[]],"de_type_representation":"AceOptions","de_locations":[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",32],["Nothing"],""]]},{"de_type":["Type","EmailAddress",[]],"de_type_representation":"EmailAddress","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",19],["Nothing"],""]]},{"de_type":["Type","PhoneNumber",[]],"de_type_representation":"PhoneNumber","de_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",19],["Nothing"],""]]},{"de_type":["Type","URL",[]],"de_type_representation":"URL","de_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",16],["Nothing"],""]]},{"de_type":["Type","Date",[]],"de_type_representation":"Date","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",55],["Nothing"],""]]},{"de_type":["Type","Time",[]],"de_type_representation":"Time","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",55],["Nothing"],""]]},{"de_type":["Type","DateTime",[]],"de_type_representation":"DateTime","de_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",55],["Nothing"],""]]},{"de_type":["Type","ControlLight",[]],"de_type_representation":"ControlLight","de_locations":[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",27],["Nothing"],""]]},{"de_type":["Type","AnalogClock",[]],"de_type_representation":"AnalogClock","de_locations":[["Location","iTasks","iTasks.Extensions.Clock",["Just",14],["Nothing"],""]]},{"de_type":["Type","EUR",[]],"de_type_representation":"EUR","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",20],["Nothing"],""]]},{"de_type":["Type","USD",[]],"de_type_representation":"USD","de_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",20],["Nothing"],""]]},{"de_type":["Type","WebImage",[]],"de_type_representation":"WebImage","de_locations":[["Location","iTasks","iTasks.Extensions.Image",["Just",15],["Nothing"],""]]},{"de_type":["Type","User",[]],"de_type_representation":"User","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",60],["Nothing"],""]]},{"de_type":["Type","UserConstraint",[]],"de_type_representation":"UserConstraint","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",60],["Nothing"],""]]},{"de_type":["Type","Username",[]],"de_type_representation":"Username","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",60],["Nothing"],""]]},{"de_type":["Type","Password",[]],"de_type_representation":"Password","de_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",60],["Nothing"],""]]},{"de_type":["Type","Document",[]],"de_type_representation":"Document","de_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",28],["Nothing"],""]]}],["Bin",1,"gReduceRSt",[{"de_type":["Var","c"],"de_type_representation":"c","de_locations":[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple2",[]],"de_type_representation":"(,)","de_locations":[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple3",[]],"de_type_representation":"(,,)","de_locations":[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple4",[]],"de_type_representation":"(,,,)","de_locations":[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple5",[]],"de_type_representation":"(,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple6",[]],"de_type_representation":"(,,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple7",[]],"de_type_representation":"(,,,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]},{"de_type":["Type","_Tuple8",[]],"de_type_representation":"(,,,,,,,)","de_locations":[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]}],["Tip"],["Tip"]],["Bin",1,"gUncompress",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]}],["Tip"],["Tip"]]],["Bin",1,"relMap",[{"de_type":["Type","Int",[]],"de_type_representation":"Int","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","Real",[]],"de_type_representation":"Real","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","Bool",[]],"de_type_representation":"Bool","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","Char",[]],"de_type_representation":"Char","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","String",[]],"de_type_representation":"String","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","UNIT",[]],"de_type_representation":"UNIT","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","PAIR",[]],"de_type_representation":"PAIR","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","EITHER",[]],"de_type_representation":"EITHER","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","CONS",[]],"de_type_representation":"CONS","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","FIELD",[]],"de_type_representation":"FIELD","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","OBJECT",[]],"de_type_representation":"OBJECT","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","_Array",[]],"de_type_representation":"{}","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","_!Array",[]],"de_type_representation":"{!}","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","Maybe",[]],"de_type_representation":"Maybe","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]},{"de_type":["Type","_List",[]],"de_type_representation":"[]","de_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]}],["Tip"],["Tip"]]]]],"modulemap":["Bin",320,["Platform","Network.IP"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","Small module which provides basic IP functionality"]]},["Bin",117,["Platform","Data.Graphviz"],{"me_is_core":false},["Bin",77,["Platform","Data.Graph.Inductive"],{"me_is_core":false},["Bin",52,["Platform","Data.Bifunctor"],{"me_is_core":false},["Bin",38,["Generics","GenParse"],{"me_is_core":false},["Bin",14,["Generics","GenHylo"],{"me_is_core":false},["Bin",8,["Generics","GenCompress"],{"me_is_core":false},["Bin",4,["Dynamics","_SystemDynamic"],{"me_is_core":false},["Bin",2,["Dynamics","StdDynamic"],{"me_is_core":false},["Bin",1,["Dynamics","StdCleanTypes"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Generics","GenBimap"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",3,["Generics","GenEq"],{"me_is_core":false},["Bin",1,["Generics","GenDefault"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Generics","GenFMap"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",5,["Generics","GenMapSt"],{"me_is_core":false},["Bin",3,["Generics","GenLib"],{"me_is_core":false},["Bin",1,["Generics","GenLexOrd"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Generics","GenMap"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",1,["Generics","GenMonad"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",23,["Platform","Control.Monad.Fix"],{"me_is_core":false},["Bin",13,["Platform","Control.Applicative"],{"me_is_core":false},["Bin",9,["Generics","_Array"],{"me_is_core":false},["Bin",3,["Generics","GenReduce"],{"me_is_core":false},["Bin",1,["Generics","GenPrint"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Generics","GenZip"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",5,["GraphCopy","graph_to_string_and_descriptors"],{"me_is_core":false},["Bin",3,["GraphCopy","graph_copy_with_names"],{"me_is_core":false},["Bin",1,["GraphCopy","dynamic_string"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["GraphCopy","graph_to_sapl_string"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",1,["GraphCopy","sapldebug"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",3,["Platform","Control.Category"],{"me_is_core":false},["Bin",1,["Platform","Control.Arrow"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Control.Monad"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",9,["Platform","Crypto.Hash.MD5"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","Pure Clean MD5 implementation."]]},["Bin",6,["Platform","Control.Monad.State"],{"me_is_core":false},["Bin",3,["Platform","Control.Monad.RWST"],{"me_is_core":false},["Bin",1,["Platform","Control.Monad.Identity"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Control.Monad.Reader"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["Platform","Control.Monad.Trans"],{"me_is_core":false},["Tip"],["Bin",1,["Platform","Control.Monad.Writer"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",2,["Platform","Crypto.Hash.SHA1"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","Simple pure Clean SHA1 implementation.\nProbably not the fastest, but without any dependencies\nRelatively straightforward implementation of FIPS 180-1"]]},["Tip"],["Bin",1,["Platform","Data.Array"],{"me_is_core":false},["Tip"],["Tip"]]]]]],["Bin",13,["Platform","Data.Eq"],{"me_is_core":false},["Bin",5,["Platform","Data.Data"],{"me_is_core":false},["Bin",2,["Platform","Data.Complex"],{"me_is_core":false},["Bin",1,["Platform","Data.CircularStack"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Platform","Data.Either"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module defines the \"Either\" type to represent binary choice.\nClean's generics define a similar type EITHER, but this should only be\nused inside generic functions, since most generic functions treat this\ntype in a special way which may lead to strange behavior."]]},["Tip"],["Bin",1,["Platform","Data.Encoding.RunLength"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",7,["Platform","Data.Functor"],{"me_is_core":false},["Bin",3,["Platform","Data.Foldable"],{"me_is_core":false},["Bin",1,["Platform","Data.Error"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Data.Func"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",3,["Platform","Data.Generic"],{"me_is_core":false},["Bin",1,["Platform","Data.Functor.Identity"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Data.Graph"],{"me_is_core":false},["Tip"],["Tip"]]]]]],["Bin",24,["Platform","Data.Graph.Inductive.Query.BFS"],{"me_is_core":false},["Bin",12,["Platform","Data.Graph.Inductive.NodeMap"],{"me_is_core":false},["Bin",7,["Platform","Data.Graph.Inductive.Internal.Heap"],{"me_is_core":false},["Bin",2,["Platform","Data.Graph.Inductive.Graph"],{"me_is_core":false},["Bin",1,["Platform","Data.Graph.Inductive.Basic"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",4,["Platform","Data.Graph.Inductive.Internal.RootPath"],{"me_is_core":false},["Bin",1,["Platform","Data.Graph.Inductive.Internal.Queue"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",2,["Platform","Data.Graph.Inductive.Monad"],{"me_is_core":false},["Bin",1,["Platform","Data.Graph.Inductive.Internal.Thread"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]]]],["Bin",4,["Platform","Data.Graph.Inductive.Query"],{"me_is_core":false},["Bin",1,["Platform","Data.Graph.Inductive.PatriciaTree"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",2,["Platform","Data.Graph.Inductive.Query.ArtPoint"],{"me_is_core":false},["Tip"],["Bin",1,["Platform","Data.Graph.Inductive.Query.BCC"],{"me_is_core":false},["Tip"],["Tip"]]]]],["Bin",11,["Platform","Data.Graph.Inductive.Query.MaxFlow"],{"me_is_core":false},["Bin",5,["Platform","Data.Graph.Inductive.Query.Indep"],{"me_is_core":false},["Bin",3,["Platform","Data.Graph.Inductive.Query.Dominators"],{"me_is_core":false},["Bin",1,["Platform","Data.Graph.Inductive.Query.DFS"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Data.Graph.Inductive.Query.GVD"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",1,["Platform","Data.Graph.Inductive.Query.MST"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",5,["Platform","Data.Graph.Inductive.Query.TransClos"],{"me_is_core":false},["Bin",3,["Platform","Data.Graph.Inductive.Query.Monad"],{"me_is_core":false},["Bin",1,["Platform","Data.Graph.Inductive.Query.MaxFlow2"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Data.Graph.Inductive.Query.SP"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",1,["Platform","Data.Graph.Inductive.Tree"],{"me_is_core":false},["Tip"],["Tip"]]]]]],["Bin",39,["Platform","Database.SQL"],{"me_is_core":false},["Bin",24,["Platform","Data.Set"],{"me_is_core":false},["Bin",17,["Platform","Data.Map"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a dynamic Map type for creating mappings from keys to values\nInternally it uses an AVL tree to organize the key-value pairs stored in the mapping\nsuch that lookup, insert and delete operations can be performed in O(log n)."]]},["Bin",12,["Platform","Data.IntSet"],{"me_is_core":false},["Bin",3,["Platform","Data.IntMap.Base"],{"me_is_core":false},["Bin",1,["Platform","Data.Heap"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Data.IntMap.Strict"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",8,["Platform","Data.Integer.Mul"],{"me_is_core":false},["Bin",4,["Platform","Data.Integer.Add"],{"me_is_core":false},["Bin",2,["Platform","Data.Integer"],{"me_is_core":false},["Bin",1,["Platform","Data.IntSet.Base"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Platform","Data.Integer.Div"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",3,["Platform","Data.Integer.ToString"],{"me_is_core":false},["Bin",1,["Platform","Data.Integer.ToInteger"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Data.List"],{"me_is_core":false},["Tip"],["Tip"]]]]],["Bin",4,["Platform","Data.Monoid"],{"me_is_core":false},["Bin",2,["Platform","Data.Maybe"],{"me_is_core":false},["Bin",1,["Platform","Data.Matrix"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Platform","Data.Queue"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a straightforward FIFO queue.\nIt is implemented using two list based on Chris Okasaki's example in Purely Functional Data Structures."]]},["Tip"],["Tip"]]]],["Bin",6,["Platform","Data.Tuple"],{"me_is_core":false},["Bin",3,["Platform","Data.Traversable"],{"me_is_core":false},["Bin",1,["Platform","Data.Stack"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Data.Tree"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["Platform","Data.Word8"],{"me_is_core":false},["Bin",1,["Platform","Data.Void"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]]]],["Bin",14,["Platform","Graphics.Scalable"],{"me_is_core":false},["Bin",7,["Platform","Database.SQL._MySQL"],{"me_is_core":false},["Bin",3,["Platform","Database.SQL.RelationalMapping"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides type-generic functions that map Clean values to a relational database.\nIt provides mapping functions for the basic C(reate)R(ead)U(pdate)D(elete) operations.\nAlthough it uses a type-generic function it is defined only for a subset of all Clean types.\nIt only has meaning for types that are specifically designed to represent parts of a relational database.\nFor more information about defining such \"representation types\" see:\nhttp:\/\/www.baslijnse.nl\/projects\/between-types-and-tables\/"]]},["Bin",1,["Platform","Database.SQL.MySQL"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Database.SQL.SQLite"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",3,["Platform","Debug.Performance"],{"me_is_core":false},["Bin",1,["Platform","Database.SQL._SQLite"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Graphics.Layout"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",6,["Platform","Math.Geometry"],{"me_is_core":false},["Bin",3,["Platform","Internet.HTTP"],{"me_is_core":false},["Bin",1,["Platform","Graphics.Scalable.Internal"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Internet.HTTP.CGI"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["Platform","Math.Random"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a pseudo random generator based\non the Mersenne Twister algorithm\nVersion 1.0.1 - July 30, 1999 - Thorsten Zoerner\nCatholic University of Nijmegen - zoerner@cs.kun.nl\nThis implementation is a rewrite of a C program by T. Nishimura\nwhich can be found in the paper \"Mersenne Twister: A\n623-dimensionally equidistributed uniform pseudorandom number\ngenerator\" by M. Matsumoto and T. Nishimura in ACM Transactions\non Modeling and Computer Simulation, vol. 8, no. 1,\nJanuary 1998, pp. 3-30.\nThe original C code contained the following notice:\nCopyright (C) 1997 Makoto Matsumoto and Takuji Nishimura.\nWhen you use this, send an email to: matumoto@math.keio.ac.jp\nwith an appropriate reference to your work."]]},["Tip"],["Bin",1,["Platform","MersenneTwister"],{"me_is_core":false},["Tip"],["Tip"]]]]]]],["Bin",202,["TCPIP","TCPStringChannels"],{"me_is_core":false},["Bin",98,["Platform","Text.HTML"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides data types for easy construction of Html documents.\nAll tags and attributes of Xhtml 1.0 transitional are captured\nin the HtmlTag and HtmlAttribute type. This library does not control\n**how** you assemble these tags into a document. It only discerns\nbetween tags that contain other tags and tags that are empty.\nFor information on how to construct valid html pages with these types,\nsee the document definition at:\nhttp:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-transitional.dtd"]]},["Bin",27,["Platform","System.OSError"],{"me_is_core":false},["Bin",13,["Platform","System.Directory"],{"me_is_core":false},["Bin",6,["Platform","StdListExtensions"],{"me_is_core":false},["Bin",3,["Platform","StdLib"],{"me_is_core":false},["Bin",1,["Platform","StdArrayExtensions"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","StdLibMisc"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["Platform","StdMaybe"],{"me_is_core":false},["Tip"],["Bin",1,["Platform","System.CommandLine"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides access to the commandline arguments of\nthe program and enables setting a return code."]]},["Tip"],["Tip"]]]],["Bin",6,["Platform","System.GetOpt"],{"me_is_core":false},["Bin",3,["Platform","System.File"],{"me_is_core":false},["Bin",1,["Platform","System.Environment"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","Module for accessing environment variables"]]},["Tip"],["Tip"]],["Bin",1,["Platform","System.FilePath"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["Platform","System.IO"],{"me_is_core":false},["Tip"],["Bin",1,["Platform","System.OS"],{"me_is_core":false},["Tip"],["Tip"]]]]],["Bin",13,["Platform","Text"],{"me_is_core":false},["Bin",8,["Platform","System.Time"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides an interface to the time definition of the\nC standard library."]]},["Bin",3,["Platform","System.Process"],{"me_is_core":false},["Bin",1,["Platform","System.Platform"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","System.TTS"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",4,["Platform","System._Pointer"],{"me_is_core":false},["Bin",1,["Platform","System._Platform"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",2,["Platform","System._Posix"],{"me_is_core":false},["Tip"],["Bin",1,["Platform","System._Unsafe"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","Execute impure functions as side effect of evaluating pure expressions.\nWARNING:\nThis module provides unsafe and impure functions that can really mess up\nyour program when used incorrectly.\nOnly use these if you understand the risks of these low-level operations."]]},["Tip"],["Tip"]]]]],["Bin",4,["Platform","Text.Encodings.Base64"],{"me_is_core":false},["Bin",1,["Platform","Text.CSV"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides functions for reading and writing comma separated vector (CSV) files."]]},["Tip"],["Tip"]],["Bin",2,["Platform","Text.Encodings.UrlEncoding"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides encode and decode functions for encoding strings for embedding in urls.\nFor more info see:\n- http:\/\/en.wikipedia.org\/wiki\/Percent-encoding\n- http:\/\/tools.ietf.org\/html\/rfc3986"]]},["Bin",1,["Platform","Text.Encodings.MIME"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]]]]],["Bin",70,["Sapl","Sapl.SaplParser"],{"me_is_core":false},["Bin",25,["Platform","Text.Show"],{"me_is_core":false},["Bin",13,["Platform","Text.Parsers.CParsers.ParserCombinators"],{"me_is_core":false},["Bin",3,["Platform","Text.LaTeX"],{"me_is_core":false},["Bin",1,["Platform","Text.JSON"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Platform","Text.PPrint"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",9,["Platform","Text.Parsers.ZParsers.ParserLanguage"],{"me_is_core":false},["Bin",4,["Platform","Text.Parsers.Simple.Core"],{"me_is_core":false},["Bin",2,["Platform","Text.Parsers.Simple.Chars"],{"me_is_core":false},["Bin",1,["Platform","Text.Parsers.MetarDemo.MetarParser"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Platform","Text.Parsers.Simple.ParserCombinators"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",4,["Platform","Text.Parsers.ZParsers.ParsersDerived"],{"me_is_core":false},["Bin",2,["Platform","Text.Parsers.ZParsers.ParsersAccessories"],{"me_is_core":false},["Bin",1,["Platform","Text.Parsers.ZParsers.Parsers"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",1,["Platform","Text.Parsers.ZParsers.ParsersKernel"],{"me_is_core":false},["Tip"],["Tip"]]]]],["Bin",11,["Platform","Text.Unicode.UChar"],{"me_is_core":false},["Bin",5,["Platform","Text.Unicode"],{"me_is_core":false},["Bin",2,["Platform","Text.URI"],{"me_is_core":false},["Bin",1,["Platform","Text.StringAppender"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides an iterface for a \"string output stream\" like\ndata structure to efficiently concatenate values as strings."]]},["Tip"],["Tip"]],["Tip"]],["Bin",2,["Platform","Text.Unicode.Encodings.JS"],{"me_is_core":false},["Tip"],["Bin",1,["Platform","Text.Unicode.Encodings.UTF8"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",5,["Sapl","Sapl.FastString"],{"me_is_core":false},["Bin",1,["Platform","Text.XML"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides data types for easy construction of XML documents and\na generic printer\/parser."]]},["Tip"],["Tip"]],["Bin",3,["Sapl","Sapl.Linker.SaplLinkerShared"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","Types and function definitions used by the different SAPL linker implementations"]]},["Bin",1,["Sapl","Sapl.Linker.LazyLinker"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Sapl","Sapl.Optimization.StrictnessPropagation"],{"me_is_core":false},["Tip"],["Tip"]]]]]],["Bin",44,["StdEnv","StdString"],{"me_is_core":false},["Bin",28,["StdEnv","StdEnum"],{"me_is_core":false},["Bin",15,["Sapl","Sapl.Transform.AddSelectors"],{"me_is_core":false},["Bin",6,["Sapl","Sapl.Target.Flavour"],{"me_is_core":false},["Bin",3,["Sapl","Sapl.SaplTokenizer"],{"me_is_core":false},["Bin",1,["Sapl","Sapl.SaplStruct"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["Sapl","Sapl.Target.CleanFlavour"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","Built in Flavour defintion for Clean.\nYou can use this instead of having your program parse a clean.f flavour file at runtime each time"]]},["Tip"],["Tip"]]],["Bin",2,["Sapl","Sapl.Target.JS.Lifting"],{"me_is_core":false},["Bin",1,["Sapl","Sapl.Target.JS.CodeGeneratorJS"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","SAPL to JS compiler.\nTwo kinds:\n1. expression compiler (an expression doesn't contain any function definition),\n2. full compiler\nBecause for proper expression generation the code generator has to know whether\nthe dependent functions have strict entry point, the exprGenerateJS has an optional\nargument of ParserState which contains this information. The necessary ParserState\ninstance is made by generateJS which is supposed to generate the function definitions\nneeded by the expression."]]},["Tip"],["Tip"]],["Tip"]]],["Bin",8,["StdEnv","StdBool"],{"me_is_core":false},["Bin",3,["Sapl","Sapl.Transform.TailRecursion"],{"me_is_core":false},["Bin",1,["Sapl","Sapl.Transform.Let"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["StdEnv","StdArray"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",4,["StdEnv","StdCharList"],{"me_is_core":false},["Bin",1,["StdEnv","StdChar"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",2,["StdEnv","StdDebug"],{"me_is_core":false},["Bin",1,["StdEnv","StdClass"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]]]]],["Bin",12,["StdEnv","StdMisc"],{"me_is_core":false},["Bin",6,["StdEnv","StdFunc"],{"me_is_core":false},["Bin",2,["StdEnv","StdFile"],{"me_is_core":false},["Bin",1,["StdEnv","StdEnv"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",3,["StdEnv","StdInt"],{"me_is_core":false},["Bin",1,["StdEnv","StdGeneric"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["StdEnv","StdList"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",5,["StdEnv","StdOverloadedList"],{"me_is_core":false},["Bin",2,["StdEnv","StdOverloaded"],{"me_is_core":false},["Bin",1,["StdEnv","StdOrdList"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",2,["StdEnv","StdStrictLists"],{"me_is_core":false},["Bin",1,["StdEnv","StdReal"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]]]]],["Bin",15,["TCPIP","TCPChannelClass"],{"me_is_core":false},["Bin",10,["StdEnv","_SystemStrictLists"],{"me_is_core":false},["Bin",4,["StdEnv","_SystemEnum"],{"me_is_core":false},["Bin",2,["StdEnv","_SystemArray"],{"me_is_core":false},["Bin",1,["StdEnv","StdTuple"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]],["Bin",1,["StdEnv","_SystemEnumStrict"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",5,["StdEnv","_startupProfile"],{"me_is_core":false},["Bin",2,["StdEnv","_library"],{"me_is_core":false},["Tip"],["Bin",1,["StdEnv","_startup"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["StdEnv","_system"],{"me_is_core":false},["Bin",1,["StdEnv","_startupTrace"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]]]],["Bin",4,["TCPIP","TCPDef"],{"me_is_core":false},["Bin",1,["TCPIP","TCPChannels"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",2,["TCPIP","TCPEvent"],{"me_is_core":false},["Tip"],["Bin",1,["TCPIP","TCPIP"],{"me_is_core":false},["Tip"],["Tip"]]]]]]]],["Bin",103,["iTasks","iTasks.Internal.Engine"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides the iTasks engine.\nThis is the primary function that creates the complete\nenvironment in which worfklow specifications can be executed."]]},["Bin",43,["iTasks","iTasks.Extensions.Document"],{"me_is_core":false},["Bin",22,["iTasks","iTasks.Extensions.Currency"],{"me_is_core":false},["Bin",14,["iTasks","iTasks.Extensions.Admin.UserAdmin"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This extension provides workflows for managing the users of an iTask system."]]},["Bin",8,["TCPIP","tcp_bytestreams"],{"me_is_core":false},["Bin",3,["TCPIP","ostcp"],{"me_is_core":false},["Bin",1,["TCPIP","TCPStringChannelsInternal"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["TCPIP","tcp"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",4,["iTasks","iTasks.Extensions.Admin.ServerAdmin"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides management tasks for an iTasks task server\nlike listing persistent task instances and i\/o task instances."]]},["Bin",1,["iTasks","iTasks"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","Main iTask module exporting all end user iTask modules"]]},["Tip"],["Tip"]],["Bin",2,["iTasks","iTasks.Extensions.Admin.StoreAdmin"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides management tasks for the internal generic\nstore of an iTasks applications."]]},["Tip"],["Bin",1,["iTasks","iTasks.Extensions.Admin.TonicAdmin"],{"me_is_core":false},["Tip"],["Tip"]]]]],["Bin",5,["iTasks","iTasks.Extensions.Clock"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a type for visualizing time as an an analog clock"]]},["Bin",2,["iTasks","iTasks.Extensions.Admin.WorkflowAdmin"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This extension provides workflows for managing the users of an iTask system."]]},["Tip"],["Bin",1,["iTasks","iTasks.Extensions.CSVFile"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["iTasks","iTasks.Extensions.Collection"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides generic tasks for managing data collections\nIt provides basic CRUD functions for a shared list of items"]]},["Tip"],["Bin",1,["iTasks","iTasks.Extensions.Contact"],{"me_is_core":false},["Tip"],["Tip"]]]]],["Bin",7,["iTasks","iTasks.Extensions.Development.Codebase"],{"me_is_core":false},["Bin",4,["iTasks","iTasks.Extensions.DateTime"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides types for working with dates and times"]]},["Bin",2,["iTasks","iTasks.Extensions.Dashboard"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides some types for visuazing key indicator\nvalues in a dashboard style using simulated lights and gauges"]]},["Tip"],["Bin",1,["iTasks","iTasks.Extensions.Database.StoreDatabase"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a simple database on top of the iTasks store"]]},["Tip"],["Tip"]]],["Bin",1,["iTasks","iTasks.Extensions.Development.CleanCode"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["iTasks","iTasks.Extensions.Development.Testing"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides utilities for testing iTasks programs"]]},["Tip"],["Bin",1,["iTasks","iTasks.Extensions.Development.Tools"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides utilities to find and use standard Clean development tools\nsuch as the build tool cpm"]]},["Tip"],["Tip"]]]]],["Bin",20,["iTasks","iTasks.Extensions.Platform"],{"me_is_core":false},["Bin",8,["iTasks","iTasks.Extensions.Form.Pikaday"],{"me_is_core":false},["Bin",2,["iTasks","iTasks.Extensions.Email"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides basic SMTP email support"]]},["Bin",1,["iTasks","iTasks.Extensions.Editors.Ace"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","Integration of Cloud9 Ace code editor"]]},["Tip"],["Tip"]],["Tip"]],["Bin",5,["iTasks","iTasks.Extensions.Image"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides support for displaying (interactive) images"]]},["Bin",3,["iTasks","iTasks.Extensions.GIS.Leaflet"],{"me_is_core":false},["Bin",1,["iTasks","iTasks.Extensions.GIS.GoogleMap"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.Extensions.GIS.LeafletNavalIcons"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a set of naval icons to use with leaflet maps"]]},["Tip"],["Tip"]]],["Bin",1,["iTasks","iTasks.Extensions.JSONFile"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",11,["iTasks","iTasks.Extensions.TextFile"],{"me_is_core":false},["Bin",3,["iTasks","iTasks.Extensions.SQLDatabase"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This experimental extension provides tasks and shares\nfor interacting with a relational database.\nIt provides only mimimal functionality and currently only works with MySQL and SQLite"]]},["Bin",1,["iTasks","iTasks.Extensions.Process"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.Extensions.SVG.SVGEditor"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",7,["iTasks","iTasks.Internal.Client.Override"],{"me_is_core":false},["Bin",4,["iTasks","iTasks.Extensions.Web"],{"me_is_core":false},["Bin",1,["iTasks","iTasks.Extensions.User"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",2,["iTasks","iTasks.Internal.Client.JSStore"],{"me_is_core":false},["Tip"],["Bin",1,["iTasks","iTasks.Internal.Client.LinkerSupport"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",2,["iTasks","iTasks.Internal.DynamicUtil"],{"me_is_core":false},["Bin",1,["iTasks","iTasks.Internal.Client.RunOnClient"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]]]]]],["Bin",59,["iTasks","iTasks.UI.Editor"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module defines the interfaces for task editors used in the interact task\nthe interact core task uses these editors to generate and update the user interface"]]},["Bin",34,["iTasks","iTasks.Internal.TaskState"],{"me_is_core":false},["Bin",13,["iTasks","iTasks.Internal.Store"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a simple generic store.\nIt is used to store the internal databases with users, sessions and workflow processes\nand for storage of intermediate task results.\nValues can be stored either by generic serialization to plain text, or by writing a dynamic\nto disk.\nDynamics are generally more expensive, so only when really necessary (for example to store tasks or\nfunctions) should they be used."]]},["Bin",9,["iTasks","iTasks.Internal.IWorld"],{"me_is_core":false},["Bin",4,["iTasks","iTasks.Internal.HtmlUtil"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides rudimentary utilities for generating simple html pages."]]},["Bin",2,["iTasks","iTasks.Internal.Generic.Defaults"],{"me_is_core":false},["Tip"],["Bin",1,["iTasks","iTasks.Internal.Generic.Visualization"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",1,["iTasks","iTasks.Internal.HttpUtil"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",4,["iTasks","iTasks.Internal.SDS"],{"me_is_core":false},["Bin",1,["iTasks","iTasks.Internal.RemoteAccess"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",2,["iTasks","iTasks.Internal.SDSService"],{"me_is_core":false},["Tip"],["Bin",1,["iTasks","iTasks.Internal.Serialization"],{"me_is_core":false},["Tip"],["Tip"]]]]],["Bin",3,["iTasks","iTasks.Internal.TaskEval"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides functions for creation, evaluation and removal of task\/workflow instances."]]},["Bin",1,["iTasks","iTasks.Internal.Task"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides types for the definition of tasks."]]},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.Internal.TaskServer"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",20,["iTasks","iTasks.Internal.Tonic.Images"],{"me_is_core":false},["Bin",6,["iTasks","iTasks.Internal.Tonic"],{"me_is_core":false},["Bin",3,["iTasks","iTasks.Internal.Test.Definition"],{"me_is_core":false},["Bin",1,["iTasks","iTasks.Internal.TaskStore"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides storage of task instances\nIt contains two types of task instances:\nSession instances: temporary tasks for each interactive session between a user and the server.\nWorkflow instances: persistent long-running tasks that may be shared between users and exist between sessions."]]},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.Internal.Test.Stubs"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["iTasks","iTasks.Internal.Tonic.Blueprints"],{"me_is_core":false},["Bin",1,["iTasks","iTasks.Internal.Tonic.AbsSyn"],{"me_is_core":false},["Tip"],["Tip"]],["Tip"]]],["Bin",13,["iTasks","iTasks.Internal.Tonic.Types"],{"me_is_core":false},["Bin",3,["iTasks","iTasks.Internal.Tonic.Server"],{"me_is_core":false},["Bin",1,["iTasks","iTasks.Internal.Tonic.Pretty"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.Internal.Tonic.Shares"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",9,["iTasks","iTasks.SDS.Combinators.Core"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides the core builtin combinators for composing shared data sources."]]},["Bin",3,["iTasks","iTasks.Internal.WebService"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides the web service that gives access to tasks via the web.\nIt also provides access to upload\/download of blob content."]]},["Bin",1,["iTasks","iTasks.Internal.Util"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.SDS.Combinators.Common"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides common patterns for composing shared sources defined on top of the core set"]]},["Tip"],["Tip"]]],["Bin",5,["iTasks","iTasks.SDS.Sources.Store"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides access to the generic document store where\nitasks applications store their data by default"]]},["Bin",2,["iTasks","iTasks.SDS.Definition"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides the types that define a shared data source"]]},["Tip"],["Bin",1,["iTasks","iTasks.SDS.Sources.Core"],{"me_is_core":false},["Tip"],["Tip"]]],["Bin",2,["iTasks","iTasks.UI.Definition"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides an abstract representation of user interfaces.\nIt is the interface between UI's as specified by tasks and the Web-based UI framework that\nrenders the task UI's in a web browser.\nThis representation seeks a middle ground between being fine grained enough\nto describe rich user interfaces and being abstract enough to leave rendering details to the client framework."]]},["Bin",1,["iTasks","iTasks.SDS.Sources.System"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module exposes system information from an itask application"]]},["Tip"],["Tip"]],["Tip"]]]]]]],["Bin",24,["iTasks","iTasks.UI.Layout"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a simple DSL for creating layouts.\nLayouts are stateful transformations on a stream of UIChange events.\nThey rearrange UI's when they are initially created and modify incremental\nupdates that are later applied accordingly."]]},["Bin",7,["iTasks","iTasks.UI.Editor.Generic"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a generic function to create editors for arbitrary types"]]},["Bin",3,["iTasks","iTasks.UI.Editor.Combinators"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides combinator functions for combining editors"]]},["Bin",1,["iTasks","iTasks.UI.Editor.Builtin"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides a set of editors that are standard available\nin the client-side UI framework."]]},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.UI.Editor.Common"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides some convenient editors"]]},["Tip"],["Tip"]]],["Bin",3,["iTasks","iTasks.UI.JS.Interface"],{"me_is_core":false},["Bin",1,["iTasks","iTasks.UI.JS.Encoding"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides encoding\/decoding functions for communicating values efficiently\nbetween an itasks server application and its client (webbrowser).\nIt uses an encoding of Clean values as JSON that can be decoded natively in javascript"]]},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.UI.JS.Map"],{"me_is_core":false},["Tip"],["Tip"]]]],["Bin",16,["iTasks","iTasks.WF.Combinators.Overloaded"],{"me_is_core":false},["Bin",6,["iTasks","iTasks.UI.Prompt"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides different ways to create prompts"]]},["Bin",2,["iTasks","iTasks.UI.Layout.Default"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module defines the functions that drive iTask's automagic default UI layouting"]]},["Bin",1,["iTasks","iTasks.UI.Layout.Common"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides common alternative layout annotations\nthat you can apply at strategic points in your task specifications\nto optimize the user experience for specific tasks"]]},["Tip"],["Tip"]],["Tip"]],["Bin",3,["iTasks","iTasks.WF.Combinators.Common"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module contains a collection of useful iTasks combinators defined in terms of the basic iTask combinators."]]},["Bin",1,["iTasks","iTasks.Util.Trace"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.WF.Combinators.Core"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides the core builtin combinators for composing tasks into workflows"]]},["Tip"],["Tip"]]]],["Bin",9,["iTasks","iTasks.WF.Definition"],{"me_is_core":false},["Bin",2,["iTasks","iTasks.WF.Combinators.Tune"],{"me_is_core":false},["Bin",1,["iTasks","iTasks.WF.Combinators.SDS"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides task combinators that give tasks access to shared sources"]]},["Tip"],["Tip"]],["Tip"]],["Bin",6,["iTasks","iTasks.WF.Tasks.IO"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This modules provides tasks that support interaction with other systems.\nEither by running external programs, creating network clients and servers, or exchanging files"]]},["Bin",2,["iTasks","iTasks.WF.Derives"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides derived instances for common types from StdEnv and Platform\nsuch that you don't have to derive them when you use these libraries."]]},["Tip"],["Bin",1,["iTasks","iTasks.WF.Tasks.Core"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provis the builtin basic tasks"]]},["Tip"],["Tip"]]],["Bin",3,["iTasks","iTasks.WF.Tasks.SDS"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides the core tasks for accessing shared data sources."]]},["Bin",1,["iTasks","iTasks.WF.Tasks.Interaction"],{"me_is_core":false},["Tip"],["Tip"]],["Bin",1,["iTasks","iTasks.WF.Tasks.System"],{"me_is_core":false,"me_documentation":["ModuleDoc",["Just","This module provides some tasks that influence the iTask system directly"]]},["Tip"],["Tip"]]]]]]]]]]],"instancemap`":["Bin",257,"SQLError",[["toString",{"ie_types":[[["Type","SQLError",[]],"SQLError"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",167],["Just",32],""]]}]],["Bin",127,"ImageAttr",[["==",{"ie_types":[[["Type","ImageAttr",[["Var","m"]]],"(ImageAttr m)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",84],["Just",440],""]]}],["<",{"ie_types":[[["Type","ImageAttr",[["Var","m"]]],"(ImageAttr m)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",83],["Just",439],""]]}]],["Bin",63,"Document",[["==",{"ie_types":[[["Type","Document",[]],"Document"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",20],["Just",34],""]]}],["toString",{"ie_types":[[["Type","Document",[]],"Document"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",19],["Just",30],""]]}]],["Bin",31,"BlueprintInstance",[["BlueprintLike",{"ie_types":[[["Type","BlueprintInstance",[]],"BlueprintInstance"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",117],["Just",17],""]]}]],["Bin",15,"ArrangeVertical",[["tune",{"ie_types":[[["Type","ArrangeVertical",[]],"ArrangeVertical"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",68],["Just",130],""]]}]],["Bin",7,"ApplyAttribute",[["tune",{"ie_types":[[["Type","ApplyAttribute",[["Var","a"]]],"(ApplyAttribute a)"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",27],["Just",67],""]]}]],["Bin",3,"Angle",[["+",{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",20],["Just",40],""]]}],["-",{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",21],["Just",45],""]]}],["==",{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",18],["Just",30],""]]}],["<",{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",19],["Just",35],""]]}],["sign",{"ie_types":[[["Type","Angle",[]],"Angle"]],"ie_locations":[["Location","Platform","Math.Geometry",["Just",22],["Just",50],""]]}]],["Bin",1,"All",[["Semigroup",{"ie_types":[[["Type","All",[]],"All"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",51],["Just",77],""]]}],["Monoid",{"ie_types":[[["Type","All",[]],"All"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",60],["Just",80],""]]}]],["Tip"],["Tip"]],["Bin",1,"Any",[["Semigroup",{"ie_types":[[["Type","Any",[]],"Any"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",52],["Just",83],""]]}],["Monoid",{"ie_types":[[["Type","Any",[]],"Any"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",61],["Just",86],""]]}]],["Tip"],["Tip"]]],["Bin",3,"ArrangeHorizontal",[["tune",{"ie_types":[[["Type","ArrangeHorizontal",[]],"ArrangeHorizontal"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",71],["Just",134],""]]}]],["Bin",1,"ApplyLayout",[["tune",{"ie_types":[[["Type","ApplyLayout",[]],"ApplyLayout"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",20],["Just",31],""]]}]],["Tip"],["Tip"]],["Bin",1,"ArrangeSplit",[["tune",{"ie_types":[[["Type","ArrangeSplit",[]],"ArrangeSplit"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",65],["Just",126],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"ArrowSeq",[["Orr",{"ie_types":[[["Type","ArrowSeq",[]],"ArrowSeq"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",137],["Just",296],""]]}]],["Bin",3,"ArrangeWithTabs",[["tune",{"ie_types":[[["Type","ArrangeWithTabs",[]],"ArrangeWithTabs"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",59],["Just",119],""]]}]],["Bin",1,"ArrangeWithSideBar",[["tune",{"ie_types":[[["Type","ArrangeWithSideBar",[]],"ArrangeWithSideBar"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",62],["Just",122],""]]}]],["Tip"],["Tip"]],["Bin",1,"ArrowMonad",[["Monad",{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",185],["Just",115],""]]}],["Applicative",{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",183],["Just",111],""]]}],["Alternative",{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",187],["Just",119],""]]}],["Monad",{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",185],["Just",115],""]]}],["Functor",{"ie_types":[[["Type","ArrowMonad",[["Var","a"]]],"(ArrowMonad a)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",181],["Just",108],""]]}]],["Tip"],["Tip"]]],["Bin",3,"Att",[["toPrompt",{"ie_types":[[["Type","Att",[]],"Att"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",29],["Just",56],""]]}]],["Bin",1,"ArrowType",[["==",{"ie_types":[[["Type","ArrowType",[]],"ArrowType"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",413],["Just",140],""]]}],["toString",{"ie_types":[[["Type","ArrowType",[]],"ArrowType"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",412],["Just",36],""]]}]],["Tip"],["Tip"]],["Bin",1,"AttachException",[["toString",{"ie_types":[[["Type","AttachException",[]],"AttachException"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Core",["Just",80],["Just",62],""]]}]],["Tip"],["Tip"]]]]],["Bin",15,"Complex",[["pi",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",15],["Just",18],""]]}],["\/",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",23],["Just",31],""]]}],["+",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",17],["Just",20],""]]}],["-",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",19],["Just",23],""]]}],["zero",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",20],["Just",26],""]]}],["*",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",22],["Just",28],""]]}],["one",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",24],["Nothing"],""]]}],["==",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",26],["Nothing"],""]]}],["abs",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",28],["Nothing"],""]]}],["~",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",29],["Nothing"],""]]}],["toString",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",34],["Nothing"],""]]}],["fromInt",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",31],["Nothing"],""]]}],["fromReal",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",32],["Nothing"],""]]}],["fromString",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",33],["Nothing"],""]]}],["ln",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",36],["Nothing"],""]]}],["exp",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",37],["Nothing"],""]]}],["sqrt",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",38],["Nothing"],""]]}],["sin",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",40],["Nothing"],""]]}],["cos",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",41],["Nothing"],""]]}],["tan",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",42],["Nothing"],""]]}],["asin",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",43],["Nothing"],""]]}],["acos",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",44],["Nothing"],""]]}],["atan",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",45],["Nothing"],""]]}],["sinh",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",46],["Nothing"],""]]}],["cosh",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",47],["Nothing"],""]]}],["tanh",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",48],["Nothing"],""]]}],["asinh",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",49],["Nothing"],""]]}],["acosh",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",50],["Nothing"],""]]}],["atanh",{"ie_types":[[["Type","Complex",[["Var","a"]]],"(Complex a)"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",51],["Nothing"],""]]}]],["Bin",7,"CallException",[["toString",{"ie_types":[[["Type","CallException",[]],"CallException"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Process",["Just",18],["Just",29],""]]}]],["Bin",3,"ByteSeq",[["==",{"ie_types":[[["Type","ByteSeq",[]],"ByteSeq"]],"ie_locations":[["Location","TCPIP","TCPDef",["Just",29],["Just",23],""]]}],["toString",{"ie_types":[[["Type","ByteSeq",[]],"ByteSeq"]],"ie_locations":[["Location","TCPIP","TCPDef",["Just",28],["Just",18],""]]}]],["Bin",1,"Bool",[["Pretty",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",44],["Just",235],""]]}],["Show",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","Platform","Text.Show",["Just",97],["Just",120],""]]}],["==",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","StdBool",["Just",10],["Just",10],""]]}],["toBool",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","StdBool",["Just",12],["Just",18],""]]}],["toString",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","StdString",["Just",21],["Just",57],""]]}],["fromBool",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","StdBool",["Just",14],["Just",37],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",19],["Just",145],""]]}],["UList",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",35],["Just",110],""]]}],["UTSList",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",46],["Just",206],""]]}],["encodeUI",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",245],["Just",219],""]]}],["ToArgs",{"ie_types":[[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",149],["Just",241],""]]}]],["Tip"],["Tip"]],["Bin",1,"CTCons",[["toString",{"ie_types":[[["Type","CTCons",[]],"CTCons"]],"ie_locations":[["Location","Dynamics","StdCleanTypes",["Just",39],["Just",31],""]]}]],["Tip"],["Tip"]]],["Bin",3,"Clock",[["toString",{"ie_types":[[["Type","Clock",[]],"Clock"]],"ie_locations":[["Location","Platform","System.Time",["Just",40],["Just",34],""]]}]],["Bin",1,"Char",[["toInteger",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",36],["Just",20],""]]}],["Pretty",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",46],["Just",239],""]]}],["isWhite",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Text.Parsers.CParsers.ParserCombinators",["Just",57],["Just",164],""]]}],["space",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",23],["Just",35],""]]}],["Show",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","Platform","Text.Show",["Just",98],["Just",125],""]]}],["<<<",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",116],["Just",431],""]]}],["+",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",10],["Just",10],""]]}],["-",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",11],["Just",19],""]]}],["zero",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",12],["Just",28],""]]}],["one",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",13],["Just",37],""]]}],["==",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",15],["Just",46],""]]}],["<",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",16],["Just",54],""]]}],["toInt",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",33],["Nothing"],""]]}],["toChar",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",18],["Just",62],""]]}],["toString",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdString",["Just",17],["Just",41],""]]}],["fromInt",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",39],["Nothing"],""]]}],["fromChar",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",22],["Just",95],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",17],["Just",57],""]]}],["UList",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",34],["Just",99],""]]}],["UTSList",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",45],["Just",195],""]]}],["encodeUI",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",243],["Just",217],""]]}],["ToArgs",{"ie_types":[[["Type","Char",[]],"Char"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",153],["Just",247],""]]}]],["Tip"],["Tip"]],["Bin",1,"Color",[["==",{"ie_types":[[["Type","Color",[]],"Color"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",383],["Just",141],""]]}],["toString",{"ie_types":[[["Type","Color",[]],"Color"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",382],["Just",38],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"Date",[["==",{"ie_types":[[["Type","Date",[]],"Date"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",48],["Just",50],""]]}],["<",{"ie_types":[[["Type","Date",[]],"Date"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",49],["Just",54],""]]}],["toString",{"ie_types":[[["Type","Date",[]],"Date"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",39],["Just",35],""]]}],["fromString",{"ie_types":[[["Type","Date",[]],"Date"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",45],["Just",46],""]]}]],["Bin",3,"DBRef",[["==",{"ie_types":[[["Type","DBRef",[["Var","a"]]],"(DBRef a)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",27],["Nothing"],""]]}],["<",{"ie_types":[[["Type","DBRef",[["Var","a"]]],"(DBRef a)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Database.StoreDatabase",["Just",28],["Nothing"],""]]}]],["Bin",1,"Const",[["Applicative",{"ie_types":[[["Type","Const",[["Var","m"]]],"(Const m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",24],["Just",21],""]]}],["Foldable",{"ie_types":[[["Type","Const",[["Var","m"]]],"(Const m)"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",88],["Just",141],""]]}],["Functor",{"ie_types":[[["Type","Const",[["Var","m"]]],"(Const m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",22],["Just",12],""]]}],["Semigroup",{"ie_types":[[["Type","Const",[["Var","a"],["Var","b"]]],"(Const a b)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",30],["Just",15],""]]}],["Monoid",{"ie_types":[[["Type","Const",[["Var","a"],["Var","b"]]],"(Const a b)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",31],["Just",18],""]]}]],["Tip"],["Tip"]],["Bin",1,"DashAttr",[["tuneImage",{"ie_types":[[["Type","DashAttr",[]],"DashAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",394],""]]}]],["Tip"],["Tip"]]],["Bin",3,"DirType",[["==",{"ie_types":[[["Type","DirType",[]],"DirType"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",424],["Just",138],""]]}],["toString",{"ie_types":[[["Type","DirType",[]],"DirType"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",423],["Just",19],""]]}]],["Bin",1,"DateTime",[["==",{"ie_types":[[["Type","DateTime",[]],"DateTime"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",48],["Just",139],""]]}],["<",{"ie_types":[[["Type","DateTime",[]],"DateTime"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",49],["Just",144],""]]}],["toString",{"ie_types":[[["Type","DateTime",[]],"DateTime"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",39],["Just",116],""]]}],["fromString",{"ie_types":[[["Type","DateTime",[]],"DateTime"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",45],["Just",135],""]]}]],["Tip"],["Tip"]],["Bin",1,"Doc",[["Pretty",{"ie_types":[[["Type","Doc",[]],"Doc"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",42],["Just",231],""]]}]],["Tip"],["Tip"]]]]]],["Bin",31,"FontDef",[["==",{"ie_types":[[["Type","FontDef",[]],"FontDef"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",114],["Just",483],""]]}],["<",{"ie_types":[[["Type","FontDef",[]],"FontDef"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",115],["Just",487],""]]}]],["Bin",15,"Endo",[["Semigroup",{"ie_types":[[["Type","Endo",[["Var","a"]]],"(Endo a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",50],["Just",71],""]]}],["Monoid",{"ie_types":[[["Type","Endo",[["Var","a"]]],"(Endo a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",59],["Just",74],""]]}]],["Bin",7,"EdgeStyle",[["==",{"ie_types":[[["Type","EdgeStyle",[]],"EdgeStyle"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",366],["Just",136],""]]}],["toString",{"ie_types":[[["Type","EdgeStyle",[]],"EdgeStyle"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",365],["Just",17],""]]}]],["Bin",3,"Dual",[["Semigroup",{"ie_types":[[["Type","Dual",[["Var","a"]]],"(Dual a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",49],["Just",65],""]]}],["Monoid",{"ie_types":[[["Type","Dual",[["Var","a"]]],"(Dual a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",58],["Just",68],""]]}]],["Bin",1,"DraggableAttr",[["tuneImage",{"ie_types":[[["Type","DraggableAttr",[]],"DraggableAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",410],""]]}]],["Tip"],["Tip"]],["Bin",1,"EUR",[["+",{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",9],["Just",18],""]]}],["-",{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",10],["Just",22],""]]}],["zero",{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",14],["Just",38],""]]}],["==",{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",11],["Just",26],""]]}],["<",{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",12],["Just",30],""]]}],["toInt",{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",13],["Just",34],""]]}],["toString",{"ie_types":[[["Type","EUR",[]],"EUR"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",8],["Just",14],""]]}]],["Tip"],["Tip"]]],["Bin",3,"Either",[["Monad",{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","Platform","Data.Either",["Just",18],["Just",16],""]]}],["Applicative",{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","Platform","Data.Either",["Just",16],["Just",11],""]]}],["Monad",{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","Platform","Data.Either",["Just",18],["Just",16],""]]}],["Bifunctor",{"ie_types":[[["Type","Either",[]],"Either"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",18],["Just",26],""]]}],["Foldable",{"ie_types":[[["Type","Either",[["Var","a"]]],"(Either a)"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",82],["Just",90],""]]}],["Functor",{"ie_types":[[["Type","Either",[["Var","a"]]],"(Either a)"]],"ie_locations":[["Location","Platform","Data.Either",["Just",14],["Just",7],""]]}],["Traversable",{"ie_types":[[["Type","Either",[["Var","a"]]],"(Either a)"]],"ie_locations":[["Location","Platform","Data.Traversable",["Just",117],["Just",44],""]]}],["TonicTopLevelBlueprint",{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",39],["Just",70],""]]}],["TonicBlueprintPart",{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",40],["Just",74],""]]}],["TApplicative",{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",27],["Just",37],""]]}],["TMonad",{"ie_types":[[["Type","Either",[["Var","e"]]],"(Either e)"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",28],["Just",42],""]]}]],["Bin",1,"EditMode",[["toString",{"ie_types":[[["Type","EditMode",[]],"EditMode"]],"ie_locations":[["Location","iTasks","iTasks.UI.Editor",["Just",65],["Just",15],""]]}]],["Tip"],["Tip"]],["Bin",1,"EmailAddress",[["html",{"ie_types":[[["Type","EmailAddress",[]],"EmailAddress"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",8],["Just",17],""]]}],["toString",{"ie_types":[[["Type","EmailAddress",[]],"EmailAddress"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",7],["Just",13],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"FileException",[["toString",{"ie_types":[[["Type","FileException",[]],"FileException"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Document",["Just",21],["Just",38],""]]}]],["Bin",3,"File",[["ParseInput",{"ie_types":[[["Type","File",[]],"File"]],"ie_locations":[["Location","Generics","GenParse",["Just",12],["Just",22],""]]}],["PrintOutput",{"ie_types":[[["Type","File",[]],"File"]],"ie_locations":[["Location","Generics","GenPrint",["Just",21],["Just",31],""]]}],["UList",{"ie_types":[[["Type","File",[]],"File"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",36],["Just",121],""]]}],["UTSList",{"ie_types":[[["Type","File",[]],"File"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",47],["Just",217],""]]}]],["Bin",1,"Extension",[["==",{"ie_types":[[["Type","Extension",[]],"Extension"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",36],["Just",6],""]]}],["toString",{"ie_types":[[["Type","Extension",[]],"Extension"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Development.Codebase",["Just",35],["Just",8],""]]}]],["Tip"],["Tip"]],["Bin",1,"FileError",[["toString",{"ie_types":[[["Type","FileError",[]],"FileError"]],"ie_locations":[["Location","Platform","System.File",["Just",12],["Just",19],""]]}]],["Tip"],["Tip"]]],["Bin",3,"FillAttr",[["tuneImage",{"ie_types":[[["Type","FillAttr",[]],"FillAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",390],""]]}]],["Bin",1,"Files",[["FileSystem",{"ie_types":[[["Type","Files",[]],"Files"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",41],["Just",42],""]]}]],["Tip"],["Tip"]],["Bin",1,"First",[["Semigroup",{"ie_types":[[["Type","First",[["Var","a"]]],"(First a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",55],["Just",101],""]]}],["Monoid",{"ie_types":[[["Type","First",[["Var","a"]]],"(First a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",64],["Just",105],""]]}]],["Tip"],["Tip"]]]]],["Bin",15,"Heap",[["Semigroup",{"ie_types":[[["Type","Heap",[["Var","a"]]],"(Heap a)"]],"ie_locations":[["Location","Platform","Data.Heap",["Just",28],["Just",269],""]]}],["Monoid",{"ie_types":[[["Type","Heap",[["Var","a"]]],"(Heap a)"]],"ie_locations":[["Location","Platform","Data.Heap",["Just",30],["Just",272],""]]}],["==",{"ie_types":[[["Type","Heap",[["Var","a"]]],"(Heap a)"]],"ie_locations":[["Location","Platform","Data.Heap",["Just",24],["Just",35],""]]}],["<",{"ie_types":[[["Type","Heap",[["Var","a"]]],"(Heap a)"]],"ie_locations":[["Location","Platform","Data.Heap",["Just",26],["Just",45],""]]}]],["Bin",7,"GroupEdges",[["==",{"ie_types":[[["Type","GroupEdges",[["Var","b"]]],"(GroupEdges b)"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.Graph",["Just",338],["Just",392],""]]}]],["Bin",3,"Gr",[["Graph",{"ie_types":[[["Type","Gr",[]],"Gr"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",39],["Just",63],""]]}],["DynGraph",{"ie_types":[[["Type","Gr",[]],"Gr"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.PatriciaTree",["Just",41],["Just",94],""]]}]],["Bin",1,"GenBlueprintInstance",[["BlueprintLike",{"ie_types":[[["Type","GenBlueprintInstance",[]],"GenBlueprintInstance"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",122],["Just",37],""]]}]],["Tip"],["Tip"]],["Bin",1,"Gram",[["Monad",{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",57],["Just",174],""]]}],["Applicative",{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",53],["Just",158],""]]}],["Alternative",{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",55],["Just",170],""]]}],["Monad",{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",57],["Just",174],""]]}],["Functor",{"ie_types":[[["Type","Gram",[["Var","f"]]],"(Gram f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",45],["Just",137],""]]}]],["Tip"],["Tip"]]],["Bin",3,"HTTPRequest",[["toString",{"ie_types":[[["Type","HTTPRequest",[]],"HTTPRequest"]],"ie_locations":[["Location","Platform","Internet.HTTP",["Just",79],["Just",87],""]]}]],["Bin",1,"HTTPMethod",[["toString",{"ie_types":[[["Type","HTTPMethod",[]],"HTTPMethod"]],"ie_locations":[["Location","Platform","Internet.HTTP",["Just",18],["Just",57],""]]}],["fromString",{"ie_types":[[["Type","HTTPMethod",[]],"HTTPMethod"]],"ie_locations":[["Location","Platform","Internet.HTTP",["Just",19],["Just",69],""]]}]],["Tip"],["Tip"]],["Bin",1,"HTTPResponse",[["toString",{"ie_types":[[["Type","HTTPResponse",[]],"HTTPResponse"]],"ie_locations":[["Location","Platform","Internet.HTTP",["Just",80],["Just",95],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"IPAddress",[["toInt",{"ie_types":[[["Type","IPAddress",[]],"IPAddress"]],"ie_locations":[["Location","Platform","Network.IP",["Just",21],["Just",32],""]]}],["toString",{"ie_types":[[["Type","IPAddress",[]],"IPAddress"]],"ie_locations":[["Location","TCPIP","TCPDef",["Just",34],["Just",35],""],["Location","Platform","Network.IP",["Just",16],["Just",17],""]]}],["fromInt",{"ie_types":[[["Type","IPAddress",[]],"IPAddress"]],"ie_locations":[["Location","Platform","Network.IP",["Just",22],["Just",36],""]]}],["fromString",{"ie_types":[[["Type","IPAddress",[]],"IPAddress"]],"ie_locations":[["Location","Platform","Network.IP",["Just",17],["Just",26],""]]}]],["Bin",3,"HtmlTag",[["html",{"ie_types":[[["Type","HtmlTag",[]],"HtmlTag"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",421],["Just",588],""]]}],["toString",{"ie_types":[[["Type","HtmlTag",[]],"HtmlTag"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",391],["Just",9],""]]}],["encodeUI",{"ie_types":[[["Type","HtmlTag",[]],"HtmlTag"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",246],["Just",220],""]]}]],["Bin",1,"Hint",[["toPrompt",{"ie_types":[[["Type","Hint",[]],"Hint"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",26],["Just",48],""]]}]],["Tip"],["Tip"]],["Bin",1,"IO",[["Monad",{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","Platform","System.IO",["Just",32],["Just",30],""]]}],["Applicative",{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","Platform","System.IO",["Just",30],["Just",23],""]]}],["Monad",{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","Platform","System.IO",["Just",32],["Just",30],""]]}],["Functor",{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","Platform","System.IO",["Just",31],["Just",27],""]]}],["TonicTopLevelBlueprint",{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",42],["Just",105],""]]}],["TonicBlueprintPart",{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",43],["Just",109],""]]}],["TApplicative",{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",45],["Just",217],""]]}],["TMonad",{"ie_types":[[["Type","IO",[]],"IO"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",46],["Just",221],""]]}]],["Tip"],["Tip"]]],["Bin",3,"Icon",[["toPrompt",{"ie_types":[[["Type","Icon",[]],"Icon"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",27],["Just",52],""]]}],["tune",{"ie_types":[[["Type","Icon",[]],"Icon"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",102],["Just",160],""]]}]],["Bin",1,"IWorld",[["FileSystem",{"ie_types":[[["Type","IWorld",[]],"IWorld"]],"ie_locations":[["Location","iTasks","iTasks.Internal.IWorld",["Just",189],["Just",203],""]]}]],["Tip"],["Tip"]],["Bin",1,"Identity",[["Monad",{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Data.Functor.Identity",["Just",13],["Just",19],""]]}],["Applicative",{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Data.Functor.Identity",["Just",12],["Just",15],""]]}],["Monad",{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Data.Functor.Identity",["Just",13],["Just",19],""]]}],["MonadFix",{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Control.Monad.Identity",["Just",9],["Just",10],""]]}],["Functor",{"ie_types":[[["Type","Identity",[]],"Identity"]],"ie_locations":[["Location","Platform","Data.Functor.Identity",["Just",11],["Just",12],""]]}]],["Tip"],["Tip"]]]]]]],["Bin",63,"MonadicSeq",[["Orr",{"ie_types":[[["Type","MonadicSeq",[]],"MonadicSeq"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",134],["Just",291],""]]}]],["Bin",31,"Kleisli",[["Arrow",{"ie_types":[[["Type","Kleisli",[["Var","m"]]],"(Kleisli m)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",73],["Just",54],""]]}],["ArrowChoice",{"ie_types":[[["Type","Kleisli",[["Var","m"]]],"(Kleisli m)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",156],["Just",96],""]]}],["ArrowApply",{"ie_types":[[["Type","Kleisli",[["Var","m"]]],"(Kleisli m)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",174],["Just",105],""]]}],["Category",{"ie_types":[[["Type","Kleisli",[["Var","m"]]],"(Kleisli m)"]],"ie_locations":[["Location","Platform","Control.Arrow",["Just",71],["Just",50],""]]}]],["Bin",15,"Integer",[["\/",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",21],["Just",80],""]]}],["+",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",10],["Just",35],""]]}],["-",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",16],["Just",58],""]]}],["zero",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",12],["Just",43],""]]}],["*",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",11],["Just",39],""]]}],["one",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",13],["Just",46],""]]}],["==",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",26],["Nothing"],""]]}],["<",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",27],["Nothing"],""]]}],["abs",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",18],["Just",62],""]]}],["sign",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",19],["Just",73],""]]}],["~",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",15],["Just",50],""]]}],["rem",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",22],["Nothing"],""]]}],["toInt",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",32],["Just",9],""]]}],["toChar",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",31],["Just",6],""]]}],["toString",{"ie_types":[[["Type","Integer",[]],"Integer"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",34],["Just",17],""]]}]],["Bin",7,"InPanel",[["tune",{"ie_types":[[["Type","InPanel",[]],"InPanel"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",87],["Just",142],""]]}]],["Bin",3,"ImageTag",[["==",{"ie_types":[[["Type","ImageTag",[]],"ImageTag"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",103],["Just",448],""]]}],["<",{"ie_types":[[["Type","ImageTag",[]],"ImageTag"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",104],["Just",451],""]]}]],["Bin",1,"ImageOffset",[["+",{"ie_types":[[["Type","ImageOffset",[]],"ImageOffset"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",112],["Just",479],""]]}]],["Tip"],["Tip"]],["Bin",1,"InContainer",[["tune",{"ie_types":[[["Type","InContainer",[]],"InContainer"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",90],["Just",146],""]]}]],["Tip"],["Tip"]]],["Bin",3,"Int",[["toInteger",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",37],["Just",23],""]]}],["*.",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",174],["Just",104],""]]}],["\/",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",19],["Just",47],""],["Location","Platform","Graphics.Scalable.Internal",["Just",176],["Just",119],""]]}],["Pretty",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",48],["Just",243],""]]}],["Show",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Text.Show",["Just",99],["Just",132],""]]}],["Appendable",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","Platform","Text.StringAppender",["Just",56],["Just",52],""]]}],["<<<",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",115],["Just",418],""]]}],["+",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",11],["Just",15],""]]}],["-",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",13],["Just",23],""]]}],["zero",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",15],["Just",31],""]]}],["*",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",17],["Just",39],""]]}],["one",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",20],["Nothing"],""]]}],["==",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",28],["Nothing"],""]]}],["<",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",29],["Nothing"],""]]}],["isEven",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",30],["Nothing"],""]]}],["isOdd",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",31],["Nothing"],""]]}],["^",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",23],["Nothing"],""]]}],["abs",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",24],["Nothing"],""]]}],["sign",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",25],["Nothing"],""]]}],["~",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",26],["Nothing"],""]]}],["rem",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",45],["Nothing"],""]]}],["gcd",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",46],["Nothing"],""]]}],["lcm",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",47],["Nothing"],""]]}],["toInt",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",34],["Nothing"],""]]}],["toChar",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",19],["Just",70],""]]}],["toReal",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",27],["Nothing"],""]]}],["toString",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdString",["Just",15],["Just",32],""]]}],["fromInt",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",38],["Nothing"],""]]}],["fromChar",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",21],["Just",78],""]]}],["fromReal",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",31],["Nothing"],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",16],["Just",13],""]]}],["UList",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",32],["Just",77],""]]}],["UTSList",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",43],["Just",173],""]]}],["encodeUI",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",241],["Just",215],""]]}],["JSObjAttr",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",61],["Just",80],""]]}],["ToArgs",{"ie_types":[[["Type","Int",[]],"Int"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",147],["Just",238],""]]}]],["Bin",1,"InstanceNo",[["toInstanceNo",{"ie_types":[[["Type","InstanceNo",[]],"InstanceNo"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",76],["Just",49],""]]}]],["Tip"],["Tip"]],["Bin",1,"IntMap",[["Functor",{"ie_types":[[["Type","IntMap",[]],"IntMap"]],"ie_locations":[["Location","Platform","Data.IntMap.Strict",["Just",123],["Just",726],""]]}],["==",{"ie_types":[[["Type","IntMap",[["Var","a"]]],"(IntMap a)"]],"ie_locations":[["Location","Platform","Data.IntMap.Base",["Just",19],["Just",1529],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"JSONNode",[["<<<",{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","Platform","Text.JSON",["Just",35],["Just",156],""]]}],["==",{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","Platform","Text.JSON",["Just",160],["Just",747],""]]}],["toString",{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","Platform","Text.JSON",["Just",26],["Just",7],""]]}],["fromString",{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","Platform","Text.JSON",["Just",30],["Just",179],""]]}],["encodeUI",{"ie_types":[[["Type","JSONNode",[]],"JSONNode"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",247],["Just",222],""]]}]],["Bin",3,"JSIO",[["Monad",{"ie_types":[[["Type","JSIO",[]],"JSIO"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",23],["Just",34],""]]}],["Applicative",{"ie_types":[[["Type","JSIO",[]],"JSIO"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",21],["Just",27],""]]}],["Monad",{"ie_types":[[["Type","JSIO",[]],"JSIO"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",23],["Just",34],""]]}],["Functor",{"ie_types":[[["Type","JSIO",[]],"JSIO"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",22],["Just",31],""]]}]],["Bin",1,"JSArg",[["ToArgs",{"ie_types":[[["Type","JSArg",[]],"JSArg"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",159],["Just",259],""]]}]],["Tip"],["Tip"]],["Bin",1,"JSLit",[["fromUnicode",{"ie_types":[[["Type","JSLit",[]],"JSLit"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.JS",["Just",9],["Just",15],""]]}],["toUnicode",{"ie_types":[[["Type","JSLit",[]],"JSLit"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.JS",["Just",10],["Just",20],""]]}],["toString",{"ie_types":[[["Type","JSLit",[]],"JSLit"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.JS",["Just",13],["Just",30],""]]}],["fromString",{"ie_types":[[["Type","JSLit",[]],"JSLit"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.JS",["Just",12],["Just",25],""]]}]],["Tip"],["Tip"]]],["Bin",3,"JSObjSelector",[[".#",{"ie_types":[[["Type","JSObjSelector",[]],"JSObjSelector"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",67],["Just",115],""]]}],[".$",{"ie_types":[[["Type","JSObjSelector",[]],"JSObjSelector"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",76],["Just",132],""]]}]],["Bin",1,"JSONParseException",[["toString",{"ie_types":[[["Type","JSONParseException",[]],"JSONParseException"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.JSONFile",["Just",8],["Just",7],""]]}]],["Tip"],["Tip"]],["Bin",1,"JSVal",[[".#",{"ie_types":[[["Type","JSVal",[["Var","o"]]],"(JSVal o)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",66],["Just",112],""]]}],["ToArgs",{"ie_types":[[["Type","JSVal",[["Var","a"]]],"(JSVal a)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",161],["Just",256],""]]}]],["Tip"],["Tip"]]]]],["Bin",15,"Map",[["Functor",{"ie_types":[[["Type","Map",[["Var","k"]]],"(Map k)"]],"ie_locations":[["Location","Platform","Data.Map",["Just",226],["Just",1943],""]]}],["Monoid",{"ie_types":[[["Type","Map",[["Var","k"],["Var","v"]]],"(Map k v)"]],"ie_locations":[["Location","Platform","Data.Map",["Just",35],["Just",33],""]]}],["==",{"ie_types":[[["Type","Map",[["Var","k"],["Var","a"]]],"(Map k a)"]],"ie_locations":[["Location","Platform","Data.Map",["Just",37],["Just",1934],""]]}]],["Bin",7,"LazyRefresh",[["tune",{"ie_types":[[["Type","LazyRefresh",[]],"LazyRefresh"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",16],["Just",22],""]]}]],["Bin",3,"Label",[["toPrompt",{"ie_types":[[["Type","Label",[]],"Label"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",25],["Just",44],""]]}],["tune",{"ie_types":[[["Type","Label",[]],"Label"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",101],["Just",164],""]]}]],["Bin",1,"LPath",[["==",{"ie_types":[[["Type","LPath",[["Var","a"]]],"(LPath a)"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.Graph",["Just",33],["Just",25],""]]}],["<",{"ie_types":[[["Type","LPath",[["Var","a"]]],"(LPath a)"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.Graph",["Just",34],["Just",30],""]]}]],["Tip"],["Tip"]],["Bin",1,"Last",[["Semigroup",{"ie_types":[[["Type","Last",[["Var","a"]]],"(Last a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",56],["Just",108],""]]}],["Monoid",{"ie_types":[[["Type","Last",[["Var","a"]]],"(Last a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",65],["Just",112],""]]}]],["Tip"],["Tip"]]],["Bin",3,"Literal",[["toString",{"ie_types":[[["Type","Literal",[]],"Literal"]],"ie_locations":[["Location","Sapl","Sapl.SaplTokenizer",["Just",35],["Just",206],""]]}]],["Bin",1,"LineType",[["toString",{"ie_types":[[["Type","LineType",[]],"LineType"]],"ie_locations":[["Location","Sapl","Sapl.Linker.SaplLinkerShared",["Just",40],["Just",15],""]]}]],["Tip"],["Tip"]],["Bin",1,"MD5Digest",[["toString",{"ie_types":[[["Type","MD5Digest",[]],"MD5Digest"]],"ie_locations":[["Location","Platform","Crypto.Hash.MD5",["Just",44],["Just",321],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"Maybe",[["Monad",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",28],""],["Location","Platform","Control.Monad",["Just",14],["Just",17],""]]}],["Applicative",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",16],["Just",46],""]]}],["Alternative",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",19],["Just",55],""]]}],["Monad",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",28],""],["Location","Platform","Control.Monad",["Just",14],["Just",17],""]]}],["MonadPlus",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Control.Monad",["Just",22],["Just",25],""]]}],["MonadFix",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Control.Monad.Fix",["Just",11],["Just",11],""]]}],["Foldable",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",80],["Just",56],""]]}],["Functor",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Data.Maybe",["Just",20],["Just",21],""]]}],["Semigroup",{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",22],["Just",57],""]]}],["Monoid",{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",31],["Just",62],""]]}],["Traversable",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","Platform","Data.Traversable",["Just",113],["Just",30],""]]}],["html",{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",423],["Just",597],""]]}],["Pretty",{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",56],["Just",259],""]]}],["Show",{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",100],["Just",137],""]]}],["==",{"ie_types":[[["Type","Maybe",[["Var","x"]]],"(Maybe x)"]],"ie_locations":[["Location","Platform","Data.Maybe",["Just",18],["Just",13],""]]}],["toString",{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Util",["Just",16],["Just",48],""]]}],["TonicTopLevelBlueprint",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",36],["Just",63],""]]}],["TonicBlueprintPart",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",37],["Just",67],""]]}],["encodeUI",{"ie_types":[[["Type","Maybe",[["Var","a"]]],"(Maybe a)"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",248],["Just",226],""]]}],["TApplicative",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",21],["Just",21],""]]}],["TMonad",{"ie_types":[[["Type","Maybe",[]],"Maybe"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",22],["Just",25],""]]}]],["Bin",3,"MaskAttr",[["tuneImage",{"ie_types":[[["Type","MaskAttr",[]],"MaskAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",396],""]]}]],["Bin",1,"MappingError",[["toString",{"ie_types":[[["Type","MappingError",[]],"MappingError"]],"ie_locations":[["Location","Platform","Database.SQL.RelationalMapping",["Just",26],["Just",38],""]]}]],["Tip"],["Tip"]],["Bin",1,"Matrix",[["*",{"ie_types":[[["Type","Matrix",[["Var","a"]]],"(Matrix a)"]],"ie_locations":[["Location","Platform","Data.Matrix",["Just",8],["Just",5],""]]}]],["Tip"],["Tip"]]],["Bin",3,"MaybeErrorString",[["fromString",{"ie_types":[[["Type","MaybeErrorString",[["Type","XMLDoc",[]]]],"(MaybeErrorString XMLDoc)"]],"ie_locations":[["Location","Platform","Text.XML",["Just",40],["Just",137],""]]}]],["Bin",1,"MaybeError",[["Monad",{"ie_types":[[["Type","MaybeError",[["Var","a"]]],"(MaybeError a)"]],"ie_locations":[["Location","Platform","Data.Error",["Just",14],["Nothing"],""]]}],["Applicative",{"ie_types":[[["Type","MaybeError",[["Var","a"]]],"(MaybeError a)"]],"ie_locations":[["Location","Platform","Data.Error",["Just",13],["Nothing"],""]]}],["Monad",{"ie_types":[[["Type","MaybeError",[["Var","a"]]],"(MaybeError a)"]],"ie_locations":[["Location","Platform","Data.Error",["Just",14],["Nothing"],""]]}],["Functor",{"ie_types":[[["Type","MaybeError",[["Var","a"]]],"(MaybeError a)"]],"ie_locations":[["Location","Platform","Data.Error",["Just",12],["Just",8],""]]}]],["Tip"],["Tip"]],["Bin",1,"MetarData",[["report",{"ie_types":[[["Type","MetarData",[]],"MetarData"]],"ie_locations":[["Location","Platform","Text.Parsers.MetarDemo.MetarParser",["Just",12],["Just",309],""]]}]],["Tip"],["Tip"]]]]]],["Bin",31,"OpacityAttr",[["tuneImage",{"ie_types":[[["Type","OpacityAttr",[]],"OpacityAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",392],""]]}]],["Bin",15,"NodeStyle",[["==",{"ie_types":[[["Type","NodeStyle",[]],"NodeStyle"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",355],["Just",137],""]]}],["toString",{"ie_types":[[["Type","NodeStyle",[]],"NodeStyle"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",354],["Just",18],""]]}]],["Bin",7,"NoAttr",[["tuneImage",{"ie_types":[[["Type","NoAttr",[]],"NoAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",380],""]]}]],["Bin",3,"MySQLContext",[["SQLEnvironment",{"ie_types":[[["Type","World",[]],"World"],[["Type","MySQLContext",[]],"MySQLContext"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",12],["Just",25],""]]}],["SQLContext",{"ie_types":[[["Type","MySQLContext",[]],"MySQLContext"],[["Type","MySQLConnection",[]],"MySQLConnection"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",13],["Just",34],""]]}]],["Bin",1,"MySQLConnection",[["SQLContext",{"ie_types":[[["Type","MySQLContext",[]],"MySQLContext"],[["Type","MySQLConnection",[]],"MySQLConnection"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",13],["Just",34],""]]}],["SQLConnection",{"ie_types":[[["Type","MySQLConnection",[]],"MySQLConnection"],[["Type","MySQLCursor",[]],"MySQLCursor"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",14],["Just",58],""]]}]],["Tip"],["Tip"]],["Bin",1,"MySQLCursor",[["SQLConnection",{"ie_types":[[["Type","MySQLConnection",[]],"MySQLConnection"],[["Type","MySQLCursor",[]],"MySQLCursor"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",14],["Just",58],""]]}],["SQLCursor",{"ie_types":[[["Type","MySQLCursor",[]],"MySQLCursor"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",15],["Just",80],""]]}],["SQLSchemaCursor",{"ie_types":[[["Type","MySQLCursor",[]],"MySQLCursor"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",16],["Just",258],""]]}]],["Tip"],["Tip"]]],["Bin",3,"NodeMap",[["==",{"ie_types":[[["Type","NodeMap",[["Var","a"]]],"(NodeMap a)"]],"ie_locations":[["Location","Platform","Data.Graph.Inductive.NodeMap",["Just",13],["Just",22],""]]}]],["Bin",1,"NoUserInterface",[["tune",{"ie_types":[[["Type","NoUserInterface",[]],"NoUserInterface"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",93],["Just",150],""]]}]],["Tip"],["Tip"]],["Bin",1,"NodeShape",[["==",{"ie_types":[[["Type","NodeShape",[]],"NodeShape"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",341],["Just",139],""]]}],["toString",{"ie_types":[[["Type","NodeShape",[]],"NodeShape"]],"ie_locations":[["Location","Platform","Data.Graphviz",["Just",340],["Just",20],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"OnMouseMoveAttr",[["tuneImage",{"ie_types":[[["Type","OnMouseMoveAttr",[]],"OnMouseMoveAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",406],""]]}]],["Bin",3,"OnClickAttr",[["tuneImage",{"ie_types":[[["Type","OnClickAttr",[]],"OnClickAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",398],""]]}]],["Bin",1,"OSException",[["toString",{"ie_types":[[["Type","OSException",[]],"OSException"]],"ie_locations":[["Location","iTasks","iTasks.WF.Tasks.Core",["Just",82],["Just",51],""]]}]],["Tip"],["Tip"]],["Bin",1,"OnMouseDownAttr",[["tuneImage",{"ie_types":[[["Type","OnMouseDownAttr",[]],"OnMouseDownAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",400],""]]}]],["Tip"],["Tip"]]],["Bin",3,"OnMouseOverAttr",[["tuneImage",{"ie_types":[[["Type","OnMouseOverAttr",[]],"OnMouseOverAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",404],""]]}]],["Bin",1,"OnMouseOutAttr",[["tuneImage",{"ie_types":[[["Type","OnMouseOutAttr",[]],"OnMouseOutAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",408],""]]}]],["Tip"],["Tip"]],["Bin",1,"OnMouseUpAttr",[["tuneImage",{"ie_types":[[["Type","OnMouseUpAttr",[]],"OnMouseUpAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",402],""]]}]],["Tip"],["Tip"]]]]],["Bin",15,"RGB",[["toSVGColor",{"ie_types":[[["Type","RGB",[]],"RGB"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",98],["Just",443],""]]}],["zero",{"ie_types":[[["Type","RGB",[]],"RGB"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",99],["Just",445],""]]}]],["Bin",7,"Password",[["==",{"ie_types":[[["Type","Password",[]],"Password"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",52],["Just",110],""]]}],["<",{"ie_types":[[["Type","Password",[]],"Password"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",53],["Just",114],""]]}],["toString",{"ie_types":[[["Type","Password",[]],"Password"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",51],["Just",106],""]]}]],["Bin",3,"ParamWorkflowContainer",[["toWorkflow",{"ie_types":[[["Type","ParamWorkflowContainer",[["Var","a"],["Var","b"]]],"(ParamWorkflowContainer a b)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",67],["Just",371],""]]}]],["Bin",1,"PAlt",[["Functor",{"ie_types":[[["Type","PAlt",[["Var","f"]]],"(PAlt f)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",47],["Just",140],""]]}]],["Tip"],["Tip"]],["Bin",1,"Parser",[["Monad",{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",16],["Just",25],""]]}],["Monad",{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",35],["Just",107],""]]}],["Applicative",{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",14],["Just",17],""]]}],["Applicative",{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",25],["Just",99],""]]}],["Alternative",{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",15],["Just",21],""]]}],["Alternative",{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",27],["Just",103],""]]}],["Monad",{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",16],["Just",25],""]]}],["Monad",{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",35],["Just",107],""]]}],["MonadPlus",{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",17],["Just",28],""]]}],["Functor",{"ie_types":[[["Type","Parser",[["Var","t"]]],"(Parser t)"]],"ie_locations":[["Location","Platform","Text.Parsers.Simple.Core",["Just",13],["Just",14],""]]}],["Functor",{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",23],["Just",96],""]]}],["Splittable",{"ie_types":[[["Type","Parser",[["Var","s"],["Var","t"]]],"(Parser s t)"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",33],["Just",116],""]]}]],["Tip"],["Tip"]]],["Bin",3,"Product",[["Semigroup",{"ie_types":[[["Type","Product",[["Var","a"]]],"(Product a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",54],["Just",95],""]]}],["Monoid",{"ie_types":[[["Type","Product",[["Var","a"]]],"(Product a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",63],["Just",98],""]]}]],["Bin",1,"PhoneNumber",[["html",{"ie_types":[[["Type","PhoneNumber",[]],"PhoneNumber"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",13],["Just",33],""]]}],["toString",{"ie_types":[[["Type","PhoneNumber",[]],"PhoneNumber"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Contact",["Just",12],["Just",29],""]]}]],["Tip"],["Tip"]],["Bin",1,"Queue",[["length",{"ie_types":[[["Type","Queue",[]],"Queue"]],"ie_locations":[["Location","Platform","Data.Queue",["Just",25],["Just",12],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"ReaderT",[["Monad",{"ie_types":[[["Type","ReaderT",[["Var","r"],["Var","m"]]],"(ReaderT r m)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",27],["Just",20],""]]}],["Applicative",{"ie_types":[[["Type","ReaderT",[["Var","r"],["Var","m"]]],"(ReaderT r m)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",26],["Just",16],""]]}],["Monad",{"ie_types":[[["Type","ReaderT",[["Var","r"],["Var","m"]]],"(ReaderT r m)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",27],["Just",20],""]]}],["MonadTrans",{"ie_types":[[["Type","ReaderT",[["Var","r"]]],"(ReaderT r)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",29],["Just",23],""]]}],["Functor",{"ie_types":[[["Type","ReaderT",[["Var","r"],["Var","m"]]],"(ReaderT r m)"]],"ie_locations":[["Location","Platform","Control.Monad.Reader",["Just",25],["Just",13],""]]}]],["Bin",3,"RWST",[["Monad",{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"]]],"(RWST r w s m)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",18],["Just",21],""]]}],["Applicative",{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"]]],"(RWST r w s m)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",17],["Just",17],""]]}],["Monad",{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"]]],"(RWST r w s m)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",18],["Just",21],""]]}],["MonadTrans",{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"]]],"(RWST r w s)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",19],["Just",27],""]]}],["Functor",{"ie_types":[[["Type","RWST",[["Var","r"],["Var","w"],["Var","s"],["Var","m"]]],"(RWST r w s m)"]],"ie_locations":[["Location","Platform","Control.Monad.RWST",["Just",16],["Just",14],""]]}]],["Bin",1,"RTree",[["Monad",{"ie_types":[[["Type","RTree",[]],"RTree"]],"ie_locations":[["Location","Platform","Data.Tree",["Just",29],["Just",32],""]]}],["Applicative",{"ie_types":[[["Type","RTree",[]],"RTree"]],"ie_locations":[["Location","Platform","Data.Tree",["Just",27],["Just",27],""]]}],["Monad",{"ie_types":[[["Type","RTree",[]],"RTree"]],"ie_locations":[["Location","Platform","Data.Tree",["Just",29],["Just",32],""]]}],["Functor",{"ie_types":[[["Type","RTree",[]],"RTree"]],"ie_locations":[["Location","Platform","Data.Tree",["Just",23],["Just",21],""]]}]],["Tip"],["Tip"]],["Bin",1,"ReadPipe",[["closePipe",{"ie_types":[[["Type","ReadPipe",[]],"ReadPipe"]],"ie_locations":[["Location","Platform","System.Process",["Just",120],["Just",320],""]]}]],["Tip"],["Tip"]]],["Bin",3,"SHA1Digest",[["toString",{"ie_types":[[["Type","SHA1Digest",[]],"SHA1Digest"]],"ie_locations":[["Location","Platform","Crypto.Hash.SHA1",["Just",46],["Just",98],""]]}]],["Bin",1,"Real",[["pi",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","Platform","Data.Complex",["Just",14],["Just",15],""]]}],["*.",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",174],["Just",107],""]]}],["\/",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",15],["Just",44],""],["Location","Platform","Graphics.Scalable.Internal",["Just",176],["Just",122],""]]}],["Pretty",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",50],["Just",247],""]]}],["Appendable",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","Platform","Text.StringAppender",["Just",57],["Just",56],""]]}],["<<<",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",118],["Just",452],""]]}],["+",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",10],["Just",12],""]]}],["-",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",11],["Just",20],""]]}],["zero",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",12],["Just",28],""]]}],["*",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",14],["Just",36],""]]}],["one",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",16],["Nothing"],""]]}],["==",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",23],["Nothing"],""]]}],["<",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",25],["Nothing"],""]]}],["^",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",18],["Nothing"],""]]}],["abs",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",19],["Nothing"],""]]}],["sign",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",20],["Nothing"],""]]}],["~",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",21],["Nothing"],""]]}],["toInt",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",35],["Nothing"],""]]}],["toReal",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",28],["Nothing"],""]]}],["toString",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdString",["Just",19],["Just",48],""]]}],["fromInt",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",40],["Nothing"],""]]}],["fromReal",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",32],["Nothing"],""]]}],["ln",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",37],["Nothing"],""]]}],["log10",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",38],["Nothing"],""]]}],["exp",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",39],["Nothing"],""]]}],["sqrt",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",40],["Nothing"],""]]}],["sin",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",44],["Nothing"],""]]}],["cos",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",45],["Nothing"],""]]}],["tan",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",46],["Nothing"],""]]}],["asin",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",47],["Nothing"],""]]}],["acos",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",48],["Nothing"],""]]}],["atan",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",49],["Nothing"],""]]}],["sinh",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",50],["Nothing"],""]]}],["cosh",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",51],["Nothing"],""]]}],["tanh",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",52],["Nothing"],""]]}],["asinh",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",53],["Nothing"],""]]}],["acosh",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",54],["Nothing"],""]]}],["atanh",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",55],["Nothing"],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",18],["Just",101],""]]}],["UList",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",33],["Just",88],""]]}],["UTSList",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",44],["Just",184],""]]}],["encodeUI",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",242],["Just",216],""]]}],["ToArgs",{"ie_types":[[["Type","Real",[]],"Real"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",151],["Just",244],""]]}]],["Tip"],["Tip"]],["Bin",1,"SQLDate",[["==",{"ie_types":[[["Type","SQLDate",[]],"SQLDate"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",168],["Just",63],""]]}],["toString",{"ie_types":[[["Type","SQLDate",[]],"SQLDate"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",167],["Just",24],""]]}]],["Tip"],["Tip"]]]]]]]],["Bin",129,"TExpr",[["==",{"ie_types":[[["Type","TExpr",[]],"TExpr"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",17],["Just",28],""]]}]],["Bin",63,"ShipIconColor",[["toString",{"ie_types":[[["Type","ShipIconColor",[]],"ShipIconColor"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.GIS.LeafletNavalIcons",["Just",15],["Just",12],""]]}]],["Bin",31,"SVGLineCap",[["toString",{"ie_types":[[["Type","SVGLineCap",[]],"SVGLineCap"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",402],["Just",796],""]]}]],["Bin",15,"SVGElt",[["toString",{"ie_types":[[["Type","SVGElt",[]],"SVGElt"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",392],["Just",606],""]]}]],["Bin",7,"SQLiteContext",[["SQLEnvironment",{"ie_types":[[["Type","World",[]],"World"],[["Type","SQLiteContext",[]],"SQLiteContext"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",12],["Just",23],""]]}],["SQLContext",{"ie_types":[[["Type","SQLiteContext",[]],"SQLiteContext"],[["Type","SQLiteConnection",[]],"SQLiteConnection"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",13],["Just",32],""]]}]],["Bin",3,"SQLValue",[["==",{"ie_types":[[["Type","SQLValue",[]],"SQLValue"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",168],["Just",44],""]]}],["toString",{"ie_types":[[["Type","SQLValue",[]],"SQLValue"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",167],["Just",6],""]]}]],["Bin",1,"SQLTime",[["==",{"ie_types":[[["Type","SQLTime",[]],"SQLTime"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",168],["Just",68],""]]}],["toString",{"ie_types":[[["Type","SQLTime",[]],"SQLTime"]],"ie_locations":[["Location","Platform","Database.SQL",["Just",167],["Just",28],""]]}]],["Tip"],["Tip"]],["Bin",1,"SQLiteConnection",[["SQLContext",{"ie_types":[[["Type","SQLiteContext",[]],"SQLiteContext"],[["Type","SQLiteConnection",[]],"SQLiteConnection"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",13],["Just",32],""]]}],["SQLConnection",{"ie_types":[[["Type","SQLiteConnection",[]],"SQLiteConnection"],[["Type","SQLiteCursor",[]],"SQLiteCursor"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",14],["Just",55],""]]}]],["Tip"],["Tip"]]],["Bin",3,"SVGAlign",[["toString",{"ie_types":[[["Type","SVGAlign",[]],"SVGAlign"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",393],["Just",710],""]]}]],["Bin",1,"SQLiteCursor",[["SQLConnection",{"ie_types":[[["Type","SQLiteConnection",[]],"SQLiteConnection"],[["Type","SQLiteCursor",[]],"SQLiteCursor"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",14],["Just",55],""]]}],["SQLCursor",{"ie_types":[[["Type","SQLiteCursor",[]],"SQLiteCursor"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",15],["Just",75],""]]}],["SQLSchemaCursor",{"ie_types":[[["Type","SQLiteCursor",[]],"SQLiteCursor"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",16],["Just",221],""]]}]],["Tip"],["Tip"]],["Bin",1,"SVGColor",[["toString",{"ie_types":[[["Type","SVGColor",[]],"SVGColor"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",394],["Just",729],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"SVGICCColor",[["toString",{"ie_types":[[["Type","SVGICCColor",[]],"SVGICCColor"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",395],["Just",736],""]]}]],["Bin",3,"SVGFillRule",[["toString",{"ie_types":[[["Type","SVGFillRule",[]],"SVGFillRule"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",397],["Just",750],""]]}]],["Bin",1,"SVGFillOpacity",[["toString",{"ie_types":[[["Type","SVGFillOpacity",[]],"SVGFillOpacity"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",396],["Just",743],""]]}]],["Tip"],["Tip"]],["Bin",1,"SVGFuncIRI",[["toString",{"ie_types":[[["Type","SVGFuncIRI",[]],"SVGFuncIRI"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",398],["Just",758],""]]}]],["Tip"],["Tip"]]],["Bin",3,"SVGLengthAdjust",[["toString",{"ie_types":[[["Type","SVGLengthAdjust",[]],"SVGLengthAdjust"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",400],["Just",771],""]]}]],["Bin",1,"SVGLength",[["toString",{"ie_types":[[["Type","SVGLength",[]],"SVGLength"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",399],["Just",764],""]]}]],["Tip"],["Tip"]],["Bin",1,"SVGLengthUnit",[["toString",{"ie_types":[[["Type","SVGLengthUnit",[]],"SVGLengthUnit"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",401],["Just",779],""]]}]],["Tip"],["Tip"]]]]],["Bin",15,"SVGTransform",[["toString",{"ie_types":[[["Type","SVGTransform",[]],"SVGTransform"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",410],["Just",894],""]]}]],["Bin",7,"SVGStrokeDashArray",[["toString",{"ie_types":[[["Type","SVGStrokeDashArray",[]],"SVGStrokeDashArray"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",407],["Just",859],""]]}]],["Bin",3,"SVGMeetOrSlice",[["toString",{"ie_types":[[["Type","SVGMeetOrSlice",[]],"SVGMeetOrSlice"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",404],["Just",816],""]]}]],["Bin",1,"SVGLineJoin",[["toString",{"ie_types":[[["Type","SVGLineJoin",[]],"SVGLineJoin"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",403],["Just",806],""]]}]],["Tip"],["Tip"]],["Bin",1,"SVGPaint",[["toString",{"ie_types":[[["Type","SVGPaint",[]],"SVGPaint"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",406],["Just",843],""]]}]],["Tip"],["Tip"]]],["Bin",3,"SVGStrokeMiterLimit",[["toString",{"ie_types":[[["Type","SVGStrokeMiterLimit",[]],"SVGStrokeMiterLimit"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",405],["Just",824],""]]}]],["Bin",1,"SVGStrokeDashOffset",[["toString",{"ie_types":[[["Type","SVGStrokeDashOffset",[]],"SVGStrokeDashOffset"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",408],["Just",868],""]]}]],["Tip"],["Tip"]],["Bin",1,"SVGStrokeWidth",[["toString",{"ie_types":[[["Type","SVGStrokeWidth",[]],"SVGStrokeWidth"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",409],["Just",876],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"SaplVar",[["eqStrictVar",{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",58],["Just",32],""]]}],["isStrictVar",{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",60],["Just",43],""]]}],["toNormalVar",{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",62],["Just",54],""]]}],["toStrictVar",{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",64],["Just",65],""]]}],["unpackVar",{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",66],["Just",76],""]]}],["toString",{"ie_types":[[["Type","SaplVar",[]],"SaplVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",42],["Just",22],""]]}]],["Bin",3,"SaplTerm",[["addSelectors",{"ie_types":[[["Type","SaplTerm",[]],"SaplTerm"]],"ie_locations":[["Location","Sapl","Sapl.Transform.AddSelectors",["Just",7],["Just",8],""]]}]],["Bin",1,"SVGZoomAndPan",[["toString",{"ie_types":[[["Type","SVGZoomAndPan",[]],"SVGZoomAndPan"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",411],["Just",904],""]]}]],["Tip"],["Tip"]],["Bin",1,"SaplTypedVar",[["eqStrictVar",{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",59],["Just",38],""]]}],["isStrictVar",{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",61],["Just",49],""]]}],["toNormalVar",{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",63],["Just",60],""]]}],["toStrictVar",{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",65],["Just",71],""]]}],["unpackVar",{"ie_types":[[["Type","SaplTypedVar",[]],"SaplTypedVar"]],"ie_locations":[["Location","Sapl","Sapl.SaplStruct",["Just",67],["Just",82],""]]}]],["Tip"],["Tip"]]],["Bin",3,"Set",[["==",{"ie_types":[[["Type","Set",[["Var","a"]]],"(Set a)"]],"ie_locations":[["Location","Platform","Data.Set",["Just",49],["Just",20],""]]}],["<",{"ie_types":[[["Type","Set",[["Var","a"]]],"(Set a)"]],"ie_locations":[["Location","Platform","Data.Set",["Just",51],["Just",24],""]]}]],["Bin",1,"SelectResult",[["==",{"ie_types":[[["Type","SelectResult",[]],"SelectResult"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",112],["Just",483],""]]}],["toString",{"ie_types":[[["Type","SelectResult",[]],"SelectResult"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",113],["Just",494],""]]}]],["Tip"],["Tip"]],["Bin",1,"SharedException",[["toString",{"ie_types":[[["Type","SharedException",[]],"SharedException"]],"ie_locations":[["Location","iTasks","iTasks.WF.Tasks.SDS",["Just",19],["Just",13],""]]}]],["Tip"],["Tip"]]]]]],["Bin",31,"SugPosition",[["==",{"ie_types":[[["Type","SugPosition",[]],"SugPosition"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersKernel",["Just",21],["Just",80],""]]}]],["Bin",15,"StringInput",[["ParseInput",{"ie_types":[[["Type","StringInput",[]],"StringInput"]],"ie_locations":[["Location","Generics","GenParse",["Just",11],["Just",13],""]]}]],["Bin",7,"StateT",[["Monad",{"ie_types":[[["Type","StateT",[["Var","s"],["Var","m"]]],"(StateT s m)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",31],["Just",19],""]]}],["Applicative",{"ie_types":[[["Type","StateT",[["Var","s"],["Var","m"]]],"(StateT s m)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",30],["Just",15],""]]}],["Monad",{"ie_types":[[["Type","StateT",[["Var","s"],["Var","m"]]],"(StateT s m)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",31],["Just",19],""]]}],["MonadTrans",{"ie_types":[[["Type","StateT",[["Var","s"]]],"(StateT s)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",32],["Just",22],""]]}],["Functor",{"ie_types":[[["Type","StateT",[["Var","s"],["Var","m"]]],"(StateT s m)"]],"ie_locations":[["Location","Platform","Control.Monad.State",["Just",29],["Just",12],""]]}]],["Bin",3,"StMonad",[["Monad",{"ie_types":[[["Type","StMonad",[["Var","s"]]],"(StMonad .s)"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",52],""]]}],["Monad",{"ie_types":[[["Type","StMonad",[["Var","s"]]],"(StMonad .s)"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",52],""]]}]],["Bin",1,"Span",[["margin",{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",41],["Just",91],""]]}],["*.",{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",174],["Just",110],""]]}],["\/",{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",177],["Just",18],""],["Location","Platform","Graphics.Scalable.Internal",["Just",176],["Just",18],""]]}],["+",{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",170],["Just",64],""]]}],["-",{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",171],["Just",91],""]]}],["zero",{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",169],["Just",52],""]]}],["*",{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",175],["Just",31],""]]}],["abs",{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",172],["Just",55],""]]}],["~",{"ie_types":[[["Type","Span",[]],"Span"]],"ie_locations":[["Location","Platform","Graphics.Scalable.Internal",["Just",173],["Just",62],""]]}]],["Tip"],["Tip"]],["Bin",1,"Stack",[["length",{"ie_types":[[["Type","Stack",[]],"Stack"]],"ie_locations":[["Location","Platform","Data.Stack",["Just",13],["Just",8],""]]}]],["Tip"],["Tip"]]],["Bin",3,"String",[["toInteger",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Data.Integer",["Just",39],["Just",32],""]]}],["toSVGColor",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",98],["Just",442],""]]}],["Text",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Text",["Just",149],["Just",5],""]]}],["html",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",420],["Just",584],""]]}],["Appendable",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Text.StringAppender",["Just",55],["Just",48],""]]}],["+",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","Platform","Text",["Just",150],["Just",162],""]]}],["encodeUI",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",244],["Just",218],""]]}],["JSObjAttr",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",60],["Just",76],""]]}],[".$",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",75],["Just",129],""]]}],["ToArgs",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",155],["Just",250],""]]}],["toPrompt",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",10],["Just",14],""]]}],["toAttribute",{"ie_types":[[["Type","String",[]],"String"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Tune",["Just",25],["Just",65],""]]}]],["Bin",1,"StoreReadError",[["toString",{"ie_types":[[["Type","StoreReadError",[]],"StoreReadError"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Store",["Just",43],["Just",31],""]]}]],["Tip"],["Tip"]],["Bin",1,"StringAppender",[["toString",{"ie_types":[[["Type","StringAppender",[]],"StringAppender"]],"ie_locations":[["Location","Platform","Text.StringAppender",["Just",49],["Just",44],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"StringSChannel_",[["Send",{"ie_types":[[["Type","StringSChannel_",[]],"StringSChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",47],["Just",112],""]]}],["accSChannel",{"ie_types":[[["Type","StringSChannel_",[]],"StringSChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",50],["Just",142],""]]}]],["Bin",3,"StringRChannel_",[["Receive",{"ie_types":[[["Type","StringRChannel_",[]],"StringRChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",32],["Just",16],""]]}],["closeRChannel",{"ie_types":[[["Type","StringRChannel_",[]],"StringRChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",33],["Just",78],""]]}],["MaxSize",{"ie_types":[[["Type","StringRChannel_",[]],"StringRChannel_"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",34],["Just",84],""]]}]],["Bin",1,"StringOutput",[["PrintOutput",{"ie_types":[[["Type","StringOutput",[]],"StringOutput"]],"ie_locations":[["Location","Generics","GenPrint",["Just",20],["Just",10],""]]}]],["Tip"],["Tip"]],["Bin",1,"StringRChannels",[["SelectReceive",{"ie_types":[[["Type","StringRChannels",[]],"StringRChannels"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",54],["Just",165],""]]}],["getNrOfChannels",{"ie_types":[[["Type","StringRChannels",[]],"StringRChannels"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",55],["Just",190],""]]}]],["Tip"],["Tip"]]],["Bin",3,"StrokeAttr",[["tuneImage",{"ie_types":[[["Type","StrokeAttr",[]],"StrokeAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",382],""]]}]],["Bin",1,"StringSChannels",[["SelectSend",{"ie_types":[[["Type","StringSChannels",[]],"StringSChannels"]],"ie_locations":[["Location","TCPIP","TCPStringChannels",["Just",53],["Just",149],""]]}]],["Tip"],["Tip"]],["Bin",1,"StrokeWidthAttr",[["tuneImage",{"ie_types":[[["Type","StrokeWidthAttr",[]],"StrokeWidthAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",384],""]]}]],["Tip"],["Tip"]]]]],["Bin",15,"TCP_RChannels",[["SelectReceive",{"ie_types":[[["Type","TCP_RChannels",[]],"TCP_RChannels"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",148],["Just",382],""]]}],["getNrOfChannels",{"ie_types":[[["Type","TCP_RChannels",[]],"TCP_RChannels"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",453],""]]}]],["Bin",7,"TCP_Listener_",[["Receive",{"ie_types":[[["Type","TCP_Listener_",[]],"TCP_Listener_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",22],["Just",12],""]]}],["closeRChannel",{"ie_types":[[["Type","TCP_Listener_",[]],"TCP_Listener_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",23],["Just",35],""]]}]],["Bin",3,"SymbolType",[["toString",{"ie_types":[[["Type","SymbolType",[]],"SymbolType"]],"ie_locations":[["Location","Platform","Text.Parsers.ZParsers.ParsersAccessories",["Just",50],["Just",108],""]]}]],["Bin",1,"Sum",[["Semigroup",{"ie_types":[[["Type","Sum",[["Var","a"]]],"(Sum a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",53],["Just",89],""]]}],["Monoid",{"ie_types":[[["Type","Sum",[["Var","a"]]],"(Sum a)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",62],["Just",92],""]]}]],["Tip"],["Tip"]],["Bin",1,"TAssoc",[["==",{"ie_types":[[["Type","TAssoc",[]],"TAssoc"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",18],["Just",44],""]]}]],["Tip"],["Tip"]]],["Bin",3,"TCP_Pair",[["SelectReceive",{"ie_types":[[["Type","TCP_Pair",[["Uniq",["Var","x"]],["Uniq",["Var","y"]]]],"(TCP_Pair *x *y)"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",149],["Just",368],""]]}],["SelectSend",{"ie_types":[[["Type","TCP_Pair",[["Uniq",["Var","x"]],["Uniq",["Var","y"]]]],"(TCP_Pair *x *y)"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",153],["Just",321],""]]}],["getNrOfChannels",{"ie_types":[[["Type","TCP_Pair",[["Uniq",["Var","x"]],["Uniq",["Var","y"]]]],"(TCP_Pair *x *y)"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",158],["Just",447],""]]}]],["Bin",1,"TCP_Listeners",[["SelectReceive",{"ie_types":[[["Type","TCP_Listeners",[]],"TCP_Listeners"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",148],["Just",395],""]]}],["getNrOfChannels",{"ie_types":[[["Type","TCP_Listeners",[]],"TCP_Listeners"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",458],""]]}]],["Tip"],["Tip"]],["Bin",1,"TCP_RChannel_",[["Receive",{"ie_types":[[["Type","TCP_RChannel_",[]],"TCP_RChannel_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",38],["Just",67],""]]}],["closeRChannel",{"ie_types":[[["Type","TCP_RChannel_",[]],"TCP_RChannel_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",39],["Just",84],""]]}],["MaxSize",{"ie_types":[[["Type","TCP_RChannel_",[]],"TCP_RChannel_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",40],["Just",239],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"TCP_SChannels",[["SelectSend",{"ie_types":[[["Type","TCP_SChannels",[]],"TCP_SChannels"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",152],["Just",335],""]]}],["getNrOfChannels",{"ie_types":[[["Type","TCP_SChannels",[]],"TCP_SChannels"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",468],""]]}]],["Bin",3,"TCP_RCharStreams",[["SelectReceive",{"ie_types":[[["Type","TCP_RCharStreams",[]],"TCP_RCharStreams"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",148],["Just",415],""]]}],["getNrOfChannels",{"ie_types":[[["Type","TCP_RCharStreams",[]],"TCP_RCharStreams"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",463],""]]}]],["Bin",1,"TCP_RCharStream_",[["Receive",{"ie_types":[[["Type","TCP_RCharStream_",[]],"TCP_RCharStream_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",51],["Just",577],""]]}],["closeRChannel",{"ie_types":[[["Type","TCP_RCharStream_",[]],"TCP_RCharStream_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",52],["Just",619],""]]}]],["Tip"],["Tip"]],["Bin",1,"TCP_SChannel_",[["Send",{"ie_types":[[["Type","TCP_SChannel_",[]],"TCP_SChannel_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",32],["Just",111],""]]}],["accSChannel",{"ie_types":[[["Type","TCP_SChannel_",[]],"TCP_SChannel_"]],"ie_locations":[["Location","TCPIP","TCPEvent",["Just",20],["Just",8],""]]}]],["Tip"],["Tip"]]],["Bin",3,"TCP_SCharStreams",[["SelectSend",{"ie_types":[[["Type","TCP_SCharStreams",[]],"TCP_SCharStreams"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",152],["Just",345],""]]}],["getNrOfChannels",{"ie_types":[[["Type","TCP_SCharStreams",[]],"TCP_SCharStreams"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",473],""]]}]],["Bin",1,"TCP_SCharStream_",[["Send",{"ie_types":[[["Type","TCP_SCharStream_",[]],"TCP_SCharStream_"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",63],["Just",633],""]]}],["accSChannel",{"ie_types":[[["Type","TCP_SCharStream_",[]],"TCP_SCharStream_"]],"ie_locations":[["Location","TCPIP","TCPEvent",["Just",21],["Just",13],""]]}]],["Tip"],["Tip"]],["Bin",1,"TCP_Void",[["SelectReceive",{"ie_types":[[["Type","TCP_Void",[]],"TCP_Void"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",148],["Just",431],""]]}],["SelectSend",{"ie_types":[[["Type","TCP_Void",[]],"TCP_Void"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",152],["Just",361],""]]}],["getNrOfChannels",{"ie_types":[[["Type","TCP_Void",[]],"TCP_Void"]],"ie_locations":[["Location","TCPIP","TCPChannels",["Just",156],["Just",478],""]]}]],["Tip"],["Tip"]]]]]]],["Bin",65,"UserConstraint",[["toString",{"ie_types":[[["Type","UserConstraint",[]],"UserConstraint"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",24],["Just",65],""]]}],["toUserConstraint",{"ie_types":[[["Type","UserConstraint",[]],"UserConstraint"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",31],["Just",41],""]]}]],["Bin",31,"TypeCodeConstructor",[["==",{"ie_types":[[["Type","TypeCodeConstructor",[]],"TypeCodeConstructor"]],"ie_locations":[["Location","Dynamics","_SystemDynamic",["Just",84],["Just",634],""]]}],["toString",{"ie_types":[[["Type","TypeCodeConstructor",[]],"TypeCodeConstructor"]],"ie_locations":[["Location","Dynamics","_SystemDynamic",["Just",83],["Just",652],""]]}]],["Bin",15,"Timestamp",[["==",{"ie_types":[[["Type","Timestamp",[]],"Timestamp"]],"ie_locations":[["Location","Platform","System.Time",["Just",42],["Just",10],""]]}],["<",{"ie_types":[[["Type","Timestamp",[]],"Timestamp"]],"ie_locations":[["Location","Platform","System.Time",["Just",43],["Just",14],""]]}],["toInt",{"ie_types":[[["Type","Timestamp",[]],"Timestamp"]],"ie_locations":[["Location","Platform","System.Time",["Just",44],["Just",37],""]]}],["toString",{"ie_types":[[["Type","Timestamp",[]],"Timestamp"]],"ie_locations":[["Location","Platform","System.Time",["Just",41],["Just",26],""]]}]],["Bin",7,"TaskId",[["==",{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",72],["Just",40],""]]}],["<",{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",73],["Just",44],""]]}],["toString",{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",70],["Just",30],""]]}],["fromString",{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",71],["Just",34],""]]}],["toInstanceNo",{"ie_types":[[["Type","TaskId",[]],"TaskId"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",77],["Just",50],""]]}]],["Bin",3,"TPriority",[["==",{"ie_types":[[["Type","TPriority",[]],"TPriority"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",19],["Just",50],""]]}]],["Bin",1,"TLit",[["==",{"ie_types":[[["Type","TLit",[]],"TLit"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",20],["Just",55],""]]}]],["Tip"],["Tip"]],["Bin",1,"Task",[["Functor",{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",17],["Just",11],""]]}],["toWorkflow",{"ie_types":[[["Type","Task",[["Var","a"]]],"(Task a)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",64],["Just",359],""]]}],["Publishable",{"ie_types":[[["Type","Task",[["Var","a"]]],"(Task a)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Engine",["Just",74],["Just",254],""]]}],["Runnable",{"ie_types":[[["Type","Task",[["Var","a"]]],"(Task a)"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Engine",["Just",87],["Just",270],""]]}],["TonicTopLevelBlueprint",{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",33],["Just",56],""]]}],["TonicBlueprintPart",{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic",["Just",34],["Just",60],""]]}],["TApplicative",{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",18],["Just",13],""]]}],["TMonad",{"ie_types":[[["Type","Task",[]],"Task"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",19],["Just",17],""]]}]],["Tip"],["Tip"]]],["Bin",3,"Time",[["==",{"ie_types":[[["Type","Time",[]],"Time"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",48],["Just",91],""]]}],["<",{"ie_types":[[["Type","Time",[]],"Time"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",49],["Just",95],""]]}],["toString",{"ie_types":[[["Type","Time",[]],"Time"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",39],["Just",76],""]]}],["fromString",{"ie_types":[[["Type","Time",[]],"Time"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.DateTime",["Just",45],["Just",87],""]]}]],["Bin",1,"TaskValue",[["Functor",{"ie_types":[[["Type","TaskValue",[]],"TaskValue"]],"ie_locations":[["Location","iTasks","iTasks.WF.Definition",["Just",52],["Just",23],""]]}]],["Tip"],["Tip"]],["Bin",1,"TimeoutReport",[["==",{"ie_types":[[["Type","TimeoutReport",[]],"TimeoutReport"]],"ie_locations":[["Location","TCPIP","TCPChannelClass",["Just",124],["Just",78],""]]}],["toString",{"ie_types":[[["Type","TimeoutReport",[]],"TimeoutReport"]],"ie_locations":[["Location","TCPIP","TCPChannelClass",["Just",125],["Just",87],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"Token",[["toString",{"ie_types":[[["Type","Token",[]],"Token"]],"ie_locations":[["Location","Sapl","Sapl.SaplTokenizer",["Just",36],["Just",215],""]]}]],["Bin",3,"Tm",[["toString",{"ie_types":[[["Type","Tm",[]],"Tm"]],"ie_locations":[["Location","Platform","System.Time",["Just",39],["Just",18],""]]}]],["Bin",1,"Title",[["toPrompt",{"ie_types":[[["Type","Title",[]],"Title"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",24],["Just",40],""]]}],["tune",{"ie_types":[[["Type","Title",[]],"Title"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",100],["Just",156],""]]}]],["Tip"],["Tip"]],["Bin",1,"ToWindow",[["tune",{"ie_types":[[["Type","ToWindow",[]],"ToWindow"]],"ie_locations":[["Location","iTasks","iTasks.UI.Layout.Common",["Just",84],["Just",138],""]]}]],["Tip"],["Tip"]]],["Bin",3,"TonicModule",[["==",{"ie_types":[[["Type","TonicModule",[]],"TonicModule"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",15],["Just",16],""]]}]],["Bin",1,"TonicFunc",[["==",{"ie_types":[[["Type","TonicFunc",[]],"TonicFunc"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",16],["Just",20],""]]}]],["Tip"],["Tip"]],["Bin",1,"TypeCode",[["==",{"ie_types":[[["Type","TypeCode",[]],"TypeCode"]],"ie_locations":[["Location","Dynamics","_SystemDynamic",["Just",23],["Just",167],""]]}],["toString",{"ie_types":[[["Type","TypeCode",[]],"TypeCode"]],"ie_locations":[["Location","Dynamics","_SystemDynamic",["Just",22],["Just",66],""]]}]],["Tip"],["Tip"]]]]],["Bin",15,"UIVAlign",[["encodeUI",{"ie_types":[[["Type","UIVAlign",[]],"UIVAlign"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",254],["Just",311],""]]}]],["Bin",7,"UIDirection",[["encodeUI",{"ie_types":[[["Type","UIDirection",[]],"UIDirection"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",256],["Just",323],""]]}]],["Bin",3,"UI",[["encodeUI",{"ie_types":[[["Type","UI",[]],"UI"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",250],["Just",235],""]]}]],["Bin",1,"UChar",[["==",{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",7],["Just",295],""]]}],["<",{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",8],["Just",301],""]]}],["toInt",{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",15],["Just",323],""]]}],["toChar",{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",14],["Just",317],""]]}],["fromInt",{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",10],["Just",307],""]]}],["fromChar",{"ie_types":[[["Type","UChar",[]],"UChar"]],"ie_locations":[["Location","Platform","Text.Unicode.UChar",["Just",11],["Just",311],""]]}]],["Tip"],["Tip"]],["Bin",1,"UIBound",[["encodeUI",{"ie_types":[[["Type","UIBound",[]],"UIBound"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",253],["Just",306],""]]}]],["Tip"],["Tip"]]],["Bin",3,"UISideSizes",[["encodeUI",{"ie_types":[[["Type","UISideSizes",[]],"UISideSizes"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",251],["Just",295],""]]}]],["Bin",1,"UIHAlign",[["encodeUI",{"ie_types":[[["Type","UIHAlign",[]],"UIHAlign"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",255],["Just",317],""]]}]],["Tip"],["Tip"]],["Bin",1,"UISize",[["encodeUI",{"ie_types":[[["Type","UISize",[]],"UISize"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",252],["Just",300],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"USD",[["+",{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",9],["Just",52],""]]}],["-",{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",10],["Just",56],""]]}],["zero",{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",14],["Just",72],""]]}],["==",{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",11],["Just",60],""]]}],["<",{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",12],["Just",64],""]]}],["toInt",{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",13],["Just",68],""]]}],["toString",{"ie_types":[[["Type","USD",[]],"USD"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Currency",["Just",8],["Just",48],""]]}]],["Bin",3,"URI",[["toString",{"ie_types":[[["Type","URI",[]],"URI"]],"ie_locations":[["Location","Platform","Text.URI",["Just",30],["Just",25],""]]}]],["Bin",1,"UIWindowType",[["encodeUI",{"ie_types":[[["Type","UIWindowType",[]],"UIWindowType"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",257],["Just",328],""]]}]],["Tip"],["Tip"]],["Bin",1,"URL",[["html",{"ie_types":[[["Type","URL",[]],"URL"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",13],["Just",32],""]]}],["toString",{"ie_types":[[["Type","URL",[]],"URL"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Web",["Just",12],["Just",28],""]]}]],["Tip"],["Tip"]]],["Bin",3,"UTF8",[["fromUnicode",{"ie_types":[[["Type","UTF8",[]],"UTF8"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.UTF8",["Just",20],["Just",11],""]]}],["toUnicode",{"ie_types":[[["Type","UTF8",[]],"UTF8"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.UTF8",["Just",21],["Just",16],""]]}],["toString",{"ie_types":[[["Type","UTF8",[]],"UTF8"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.UTF8",["Just",24],["Just",26],""]]}],["fromString",{"ie_types":[[["Type","UTF8",[]],"UTF8"]],"ie_locations":[["Location","Platform","Text.Unicode.Encodings.UTF8",["Just",23],["Just",21],""]]}]],["Bin",1,"UString",[["%",{"ie_types":[[["Type","UString",[]],"UString"]],"ie_locations":[["Location","Platform","Text.Unicode",["Just",11],["Just",10],""]]}],["+++",{"ie_types":[[["Type","UString",[]],"UString"]],"ie_locations":[["Location","Platform","Text.Unicode",["Just",12],["Just",14],""]]}],["fromString",{"ie_types":[[["Type","UString",[]],"UString"]],"ie_locations":[["Location","Platform","Text.Unicode",["Just",9],["Just",6],""]]}]],["Tip"],["Tip"]],["Bin",1,"User",[["==",{"ie_types":[[["Type","User",[]],"User"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",15],["Just",28],""]]}],["<",{"ie_types":[[["Type","User",[]],"User"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",16],["Just",35],""]]}],["toString",{"ie_types":[[["Type","User",[]],"User"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",14],["Just",22],""]]}],["toUserConstraint",{"ie_types":[[["Type","User",[]],"User"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",32],["Just",46],""]]}]],["Tip"],["Tip"]]]]]],["Bin",33,"_#Array",[["<<<",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",117],["Just",444],""]]}],["==",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",10],["Just",10],""]]}],["<",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",11],["Just",20],""]]}],["%",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",25],["Just",83],""]]}],["+++",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",27],["Just",93],""]]}],["toInt",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",36],["Just",263],""]]}],["toReal",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",29],["Nothing"],""]]}],["toString",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",23],["Just",67],""]]}],["fromInt",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdInt",["Just",41],["Nothing"],""]]}],["fromChar",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdChar",["Just",23],["Just",87],""]]}],["fromBool",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdBool",["Just",15],["Just",45],""]]}],["fromReal",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdReal",["Just",33],["Nothing"],""]]}],["fromString",{"ie_types":[[["Type","_#Array",[["Type","Char",[]]]],"{#Char}"]],"ie_locations":[["Location","StdEnv","StdString",["Just",13],["Just",75],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",25],["Just",321],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","_Array",[["Var","a"]]],"{.a}"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",23],["Just",277],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","_!Array",[["Var","a"]]],"{!.a}"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",22],["Just",233],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","_#Array",[["Var","a"]]],"{#.a}"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",21],["Just",189],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","_#Array",[["Var","a"]]],"{#.a}"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",21],["Just",189],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Bool",[]],"Bool"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",19],["Just",145],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Real",[]],"Real"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",18],["Just",101],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Char",[]],"Char"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",17],["Just",57],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","Int",[]],"Int"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",16],["Just",13],""]]}],["UList",{"ie_types":[[["Type","_#Array",[["Var","a"]]],"{#.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",39],["Just",152],""]]}],["UTSList",{"ie_types":[[["Type","_#Array",[["Var","a"]]],"{#.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",50],["Just",248],""]]}]],["Bin",15,"WritePipe",[["closePipe",{"ie_types":[[["Type","WritePipe",[]],"WritePipe"]],"ie_locations":[["Location","Platform","System.Process",["Just",119],["Just",315],""]]}]],["Bin",7,"Word8",[["==",{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",13],["Just",19],""]]}],["<",{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",14],["Just",23],""]]}],["toInt",{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",9],["Just",15],""]]}],["fromInt",{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",8],["Just",11],""]]}],["fromChar",{"ie_types":[[["Type","Word8",[]],"Word8"]],"ie_locations":[["Location","Platform","Data.Word8",["Just",11],["Just",7],""]]}]],["Bin",3,"Username",[["==",{"ie_types":[[["Type","Username",[]],"Username"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",52],["Just",85],""]]}],["<",{"ie_types":[[["Type","Username",[]],"Username"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",53],["Just",89],""]]}],["toString",{"ie_types":[[["Type","Username",[]],"Username"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",51],["Just",81],""]]}]],["Bin",1,"UserId",[["toUserConstraint",{"ie_types":[[["Type","UserId",[]],"UserId"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",33],["Just",54],""]]}]],["Tip"],["Tip"]],["Bin",1,"Voice",[["toString",{"ie_types":[[["Type","Voice",[]],"Voice"]],"ie_locations":[["Location","Platform","System.TTS",["Just",15],["Just",16],""]]}]],["Tip"],["Tip"]]],["Bin",3,"World",[["SQLEnvironment",{"ie_types":[[["Type","World",[]],"World"],[["Type","SQLiteContext",[]],"SQLiteContext"]],"ie_locations":[["Location","Platform","Database.SQL.SQLite",["Just",12],["Just",23],""]]}],["SQLEnvironment",{"ie_types":[[["Type","World",[]],"World"],[["Type","MySQLContext",[]],"MySQLContext"]],"ie_locations":[["Location","Platform","Database.SQL.MySQL",["Just",12],["Just",25],""]]}],["FileSystem",{"ie_types":[[["Type","World",[]],"World"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",42],["Just",64],""]]}],["FileEnv",{"ie_types":[[["Type","World",[]],"World"]],"ie_locations":[["Location","StdEnv","StdFile",["Just",48],["Just",471],""]]}],["ChannelEnv",{"ie_types":[[["Type","World",[]],"World"]],"ie_locations":[["Location","TCPIP","TCPChannelClass",["Just",15],["Just",7],""]]}]],["Bin",1,"WorkflowContainer",[["toWorkflow",{"ie_types":[[["Type","WorkflowContainer",[["Var","a"]]],"(WorkflowContainer a)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",65],["Just",363],""]]}]],["Tip"],["Tip"]],["Bin",1,"WrappedMonad",[["Monad",{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",26],["Just",35],""]]}],["Applicative",{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",25],["Just",31],""]]}],["Alternative",{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",28],["Just",38],""]]}],["Monad",{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",26],["Just",35],""]]}],["Functor",{"ie_types":[[["Type","WrappedMonad",[["Var","m"]]],"(WrappedMonad m)"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",23],["Just",28],""]]}]],["Tip"],["Tip"]]]],["Bin",7,"YRadiusAttr",[["tuneImage",{"ie_types":[[["Type","YRadiusAttr",[]],"YRadiusAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",388],""]]}]],["Bin",3,"XMLDoc",[["toString",{"ie_types":[[["Type","XMLDoc",[]],"XMLDoc"]],"ie_locations":[["Location","Platform","Text.XML",["Just",39],["Just",129],""]]}]],["Bin",1,"WriterT",[["Monad",{"ie_types":[[["Type","WriterT",[["Var","w"],["Var","m"]]],"(WriterT w m)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",16],["Just",22],""]]}],["Applicative",{"ie_types":[[["Type","WriterT",[["Var","w"],["Var","m"]]],"(WriterT w m)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",15],["Just",18],""]]}],["Monad",{"ie_types":[[["Type","WriterT",[["Var","w"],["Var","m"]]],"(WriterT w m)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",16],["Just",22],""]]}],["MonadTrans",{"ie_types":[[["Type","WriterT",[["Var","w"]]],"(WriterT w)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",18],["Just",27],""]]}],["Functor",{"ie_types":[[["Type","WriterT",[["Var","w"],["Var","m"]]],"(WriterT w m)"]],"ie_locations":[["Location","Platform","Control.Monad.Writer",["Just",14],["Just",15],""]]}]],["Tip"],["Tip"]],["Bin",1,"XRadiusAttr",[["tuneImage",{"ie_types":[[["Type","XRadiusAttr",[]],"XRadiusAttr"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",92],["Just",386],""]]}]],["Tip"],["Tip"]]],["Bin",3,"_!List",[["==",{"ie_types":[[["Type","_!List",[["Var","a"]]],"[!a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",5],["Just",5],""]]}],["<",{"ie_types":[[["Type","_!List",[["Var","a"]]],"[!a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",15],["Just",60],""]]}],["length",{"ie_types":[[["Type","_!List",[]],"[!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",25],["Just",135],""]]}],["%",{"ie_types":[[["Type","_!List",[["Var","a"]]],"[!a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",41],["Just",167],""]]}],["toString",{"ie_types":[[["Type","_!List",[["Var","x"]]],"[!x]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",49],["Just",192],""]]}],["fromString",{"ie_types":[[["Type","_!List",[["Var","x"]]],"[!x]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",57],["Just",230],""]]}],["List",{"ie_types":[[["Type","_!List",[]],"[!]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",23],["Just",41],""]]}]],["Bin",1,"_!Array",[["UnsafeArray",{"ie_types":[[["Type","_!Array",[]],"{!}"]],"ie_locations":[["Location","Generics","_Array",["Just",24],["Just",23],""]]}],["updateArrElt",{"ie_types":[[["Type","_!Array",[]],"{!}"]],"ie_locations":[["Location","Platform","StdArrayExtensions",["Just",40],["Just",35],""]]}],["accArrElt",{"ie_types":[[["Type","_!Array",[]],"{!}"]],"ie_locations":[["Location","Platform","StdArrayExtensions",["Just",48],["Just",50],""]]}],["gMap",{"ie_types":[[["Type","_!Array",[]],"{!}"]],"ie_locations":[["Location","Platform","StdLibMisc",["Just",19],["Just",31],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","_!Array",[["Var","a"]]],"{!.a}"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",22],["Just",233],""]]}],["Array",{"ie_types":[[["Type","_!Array",[]],"{!}"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",14],["Just",395],""]]}],["UList",{"ie_types":[[["Type","_!Array",[["Var","a"]]],"{!.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",38],["Just",142],""]]}],["UTSList",{"ie_types":[[["Type","_!Array",[["Var","a"]]],"{!.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",49],["Just",238],""]]}]],["Tip"],["Tip"]],["Bin",1,"_!List!",[["==",{"ie_types":[[["Type","_!List!",[["Var","a"]]],"[!a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",7],["Just",27],""]]}],["<",{"ie_types":[[["Type","_!List!",[["Var","a"]]],"[!a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",17],["Just",90],""]]}],["length",{"ie_types":[[["Type","_!List!",[]],"[!!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",27],["Just",149],""]]}],["%",{"ie_types":[[["Type","_!List!",[["Var","a"]]],"[!a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",43],["Just",177],""]]}],["toString",{"ie_types":[[["Type","_!List!",[["Var","x"]]],"[!x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",51],["Just",208],""]]}],["fromString",{"ie_types":[[["Type","_!List!",[["Var","x"]]],"[!x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",59],["Just",250],""]]}],["List",{"ie_types":[[["Type","_!List!",[]],"[!!]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",25],["Just",51],""]]}]],["Tip"],["Tip"]]]]],["Bin",17,"_Tuple12",[["Show",{"ie_types":[[["Type","_Tuple12",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"],["Var","i"],["Var","j"],["Var","k"],["Var","l"]]],"(a,b,c,d,e,f,g,h,i,j,k,l)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",122],["Just",206],""]]}]],["Bin",7,"_List",[["Monad",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",33],""],["Location","Platform","Control.Monad",["Just",12],["Just",14],""]]}],["Applicative",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",17],["Just",51],""]]}],["Alternative",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Control.Applicative",["Just",20],["Just",60],""]]}],["Monad",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Generics","GenMonad",["Just",11],["Just",33],""],["Location","Platform","Control.Monad",["Just",12],["Just",14],""]]}],["MonadPlus",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Control.Monad",["Just",20],["Just",21],""]]}],["MonadFix",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Control.Monad.Fix",["Just",13],["Just",17],""]]}],["Foldable",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",81],["Just",79],""]]}],["Functor",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Data.List",["Just",101],["Just",104],""]]}],["Semigroup",{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",15],["Just",15],""]]}],["Monoid",{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",24],["Just",18],""]]}],["Traversable",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","Data.Traversable",["Just",115],["Just",37],""]]}],["gMap",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","Platform","StdLibMisc",["Just",17],["Just",23],""]]}],["html",{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Text.HTML",["Just",422],["Just",592],""]]}],["Pretty",{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",40],["Just",227],""]]}],["Show",{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","Platform","Text.Show",["Just",96],["Just",115],""]]}],["==",{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",13],["Just",14],""]]}],["<",{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",18],["Just",29],""]]}],["length",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",23],["Just",46],""]]}],["%",{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",24],["Just",54],""]]}],["toString",{"ie_types":[[["Type","_List",[["Var","x"]]],"[x]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",26],["Just",59],""]]}],["fromString",{"ie_types":[[["Type","_List",[["Var","x"]]],"[x]"]],"ie_locations":[["Location","StdEnv","StdList",["Just",28],["Just",68],""]]}],["List",{"ie_types":[[["Type","_List",[]],"[]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",22],["Just",36],""]]}],["Publishable",{"ie_types":[[["Type","_List",[["Type","PublishedTask",[]]]],"[PublishedTask]"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Engine",["Just",76],["Just",262],""]]}],["Runnable",{"ie_types":[[["Type","_List",[["Type","TaskWrapper",[]]]],"[TaskWrapper]"]],"ie_locations":[["Location","iTasks","iTasks.Internal.Engine",["Just",88],["Just",274],""]]}],["encodeUI",{"ie_types":[[["Type","_List",[["Var","a"]]],"[a]"]],"ie_locations":[["Location","iTasks","iTasks.UI.Definition",["Just",249],["Just",231],""]]}],["ToArgs",{"ie_types":[[["Type","_List",[["Type","JSArg",[]]]],"[JSArg]"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",163],["Just",262],""]]}],["toPrompt",{"ie_types":[[["Type","_List",[["Var","d"]]],"[d]"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",30],["Just",60],""]]}],["TApplicative",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",24],["Just",30],""]]}],["TMonad",{"ie_types":[[["Type","_List",[]],"[]"]],"ie_locations":[["Location","iTasks","iTasks.WF.Combinators.Overloaded",["Just",25],["Just",33],""]]}]],["Bin",3,"_#List!",[["==",{"ie_types":[[["Type","_#List!",[["Var","a"]]],"[#a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",11],["Just",49],""]]}],["<",{"ie_types":[[["Type","_#List!",[["Var","a"]]],"[#a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",21],["Just",120],""]]}],["%",{"ie_types":[[["Type","_#List!",[["Var","e"]]],"[#e!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",46],["Just",187],""]]}],["toString",{"ie_types":[[["Type","_#List!",[["Var","x"]]],"[#x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",54],["Just",223],""]]}],["fromString",{"ie_types":[[["Type","_#List!",[["Var","x"]]],"[#x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",62],["Just",270],""]]}],["List",{"ie_types":[[["Type","_#List!",[]],"[#!]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",28],["Just",61],""]]}]],["Bin",1,"_#List",[["==",{"ie_types":[[["Type","_#List",[["Var","a"]]],"[#a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",8],["Just",38],""]]}],["<",{"ie_types":[[["Type","_#List",[["Var","a"]]],"[#a]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",18],["Just",105],""]]}],["%",{"ie_types":[[["Type","_#List",[["Var","e"]]],"[#e]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",44],["Just",182],""]]}],["toString",{"ie_types":[[["Type","_#List",[["Var","x"]]],"[#x]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",52],["Just",216],""]]}],["fromString",{"ie_types":[[["Type","_#List",[["Var","x"]]],"[#x]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",60],["Just",260],""]]}],["List",{"ie_types":[[["Type","_#List",[]],"[#]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",27],["Just",56],""]]}]],["Tip"],["Tip"]],["Bin",1,"_Array",[["UnsafeArray",{"ie_types":[[["Type","_Array",[]],"{}"]],"ie_locations":[["Location","Generics","_Array",["Just",24],["Just",10],""]]}],["updateArrElt",{"ie_types":[[["Type","_Array",[]],"{}"]],"ie_locations":[["Location","Platform","StdArrayExtensions",["Just",39],["Just",29],""]]}],["accArrElt",{"ie_types":[[["Type","_Array",[]],"{}"]],"ie_locations":[["Location","Platform","StdArrayExtensions",["Just",47],["Just",43],""]]}],["gMap",{"ie_types":[[["Type","_Array",[]],"{}"]],"ie_locations":[["Location","Platform","StdLibMisc",["Just",18],["Just",27],""]]}],["Array",{"ie_types":[[["Type","_Array",[]],"{}"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",29],["Just",439],""]]}],["Array",{"ie_types":[[["Type","_#Array",[]],"{#}"],[["Type","_Array",[["Var","a"]]],"{.a}"]],"ie_locations":[["Location","StdEnv","_SystemArray",["Just",23],["Just",277],""]]}],["UList",{"ie_types":[[["Type","_Array",[["Var","a"]]],"{.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",37],["Just",132],""]]}],["UTSList",{"ie_types":[[["Type","_Array",[["Var","a"]]],"{.a}"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",48],["Just",228],""]]}]],["Tip"],["Tip"]]],["Bin",3,"_Tuple10",[["Show",{"ie_types":[[["Type","_Tuple10",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"],["Var","i"],["Var","j"]]],"(a,b,c,d,e,f,g,h,i,j)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",120],["Just",194],""]]}]],["Bin",1,"_List!",[["==",{"ie_types":[[["Type","_List!",[["Var","a"]]],"[a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",6],["Just",16],""]]}],["<",{"ie_types":[[["Type","_List!",[["Var","a"]]],"[a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",16],["Just",75],""]]}],["length",{"ie_types":[[["Type","_List!",[]],"[ !]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",26],["Just",142],""]]}],["%",{"ie_types":[[["Type","_List!",[["Var","a"]]],"[a!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",42],["Just",172],""]]}],["toString",{"ie_types":[[["Type","_List!",[["Var","x"]]],"[x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",50],["Just",200],""]]}],["fromString",{"ie_types":[[["Type","_List!",[["Var","x"]]],"[x!]"]],"ie_locations":[["Location","StdEnv","StdOverloadedList",["Just",58],["Just",240],""]]}],["List",{"ie_types":[[["Type","_List!",[]],"[ !]"],[["Var","a"],"a"]],"ie_locations":[["Location","StdEnv","_SystemStrictLists",["Just",24],["Just",46],""]]}]],["Tip"],["Tip"]],["Bin",1,"_Tuple11",[["Show",{"ie_types":[[["Type","_Tuple11",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"],["Var","i"],["Var","j"],["Var","k"]]],"(a,b,c,d,e,f,g,h,i,j,k)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",121],["Just",200],""]]}]],["Tip"],["Tip"]]]],["Bin",9,"_Tuple5",[["Bifunctor",{"ie_types":[[["Type","_Tuple5",[["Var","x"],["Var","y"],["Var","z"]]],"(,,,,) x y z"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",16],["Just",21],""]]}],["Semigroup",{"ie_types":[[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]],"(a,b,c,d,e)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",21],["Just",51],""]]}],["Monoid",{"ie_types":[[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]],"(a,b,c,d,e)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",30],["Just",54],""]]}],["Show",{"ie_types":[[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]],"(a,b,c,d,e)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",115],["Just",168],""]]}],["ToArgs",{"ie_types":[[["Type","_Tuple5",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"]]],"(a,b,c,d,e)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",171],["Just",274],""]]}]],["Bin",3,"_Tuple3",[["Bifunctor",{"ie_types":[[["Type","_Tuple3",[["Var","x"]]],"(,,) x"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",12],["Just",11],""]]}],["Semigroup",{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",19],["Just",39],""]]}],["Monoid",{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",28],["Just",42],""]]}],["margin",{"ie_types":[[["Type","_Tuple3",[["Type","Span",[]],["Type","Span",[]],["Type","Span",[]]]],"(!Span,!Span,!Span)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",43],["Just",97],""]]}],["Pretty",{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",54],["Just",255],""]]}],["Show",{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",113],["Just",158],""]]}],["==",{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","StdEnv","StdTuple",["Just",23],["Just",29],""]]}],["<",{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","StdEnv","StdTuple",["Just",26],["Just",45],""]]}],["ToArgs",{"ie_types":[[["Type","_Tuple3",[["Var","a"],["Var","b"],["Var","c"]]],"(a,b,c)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",167],["Just",268],""]]}],["toPrompt",{"ie_types":[[["Type","_Tuple3",[["Type","Icon",[]],["Type","String",[]],["Type","String",[]]]],"(!Icon,!String,!String)"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",23],["Just",32],""]]}]],["Bin",1,"_Tuple2",[["Bifunctor",{"ie_types":[[["Type","_Tuple2",[]],"(,)"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",10],["Just",6],""]]}],["Foldable",{"ie_types":[[["Type","_Tuple2",[["Var","a"]]],"(,) a"]],"ie_locations":[["Location","Platform","Data.Foldable",["Just",83],["Just",113],""]]}],["Functor",{"ie_types":[[["Type","_Tuple2",[["Var","a"]]],"(,) a"]],"ie_locations":[["Location","Platform","Data.Functor",["Just",9],["Just",10],""]]}],["Semigroup",{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",18],["Just",33],""]]}],["Monoid",{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",27],["Just",36],""]]}],["Traversable",{"ie_types":[[["Type","_Tuple2",[["Var","a"]]],"(,) a"]],"ie_locations":[["Location","Platform","Data.Traversable",["Just",119],["Just",51],""]]}],["margin",{"ie_types":[[["Type","_Tuple2",[["Type","Span",[]],["Type","Span",[]]]],"(!Span,!Span)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",42],["Just",94],""]]}],["Pretty",{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","Platform","Text.PPrint",["Just",52],["Just",251],""]]}],["Show",{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",112],["Just",153],""]]}],["==",{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","StdEnv","StdTuple",["Just",22],["Just",24],""]]}],["<",{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","StdEnv","StdTuple",["Just",25],["Just",34],""]]}],["toUserConstraint",{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","iTasks","iTasks.Extensions.User",["Just",39],["Just",60],""]]}],["ToArgs",{"ie_types":[[["Type","_Tuple2",[["Var","a"],["Var","b"]]],"(a,b)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",165],["Just",265],""]]}],["toPrompt",{"ie_types":[[["Type","_Tuple2",[["Type","String",[]],["Type","String",[]]]],"(!String,!String)"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",11],["Just",17],""]]}]],["Tip"],["Tip"]],["Bin",1,"_Tuple4",[["Bifunctor",{"ie_types":[[["Type","_Tuple4",[["Var","x"],["Var","y"]]],"(,,,) x y"]],"ie_locations":[["Location","Platform","Data.Bifunctor",["Just",14],["Just",16],""]]}],["Semigroup",{"ie_types":[[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]],"(a,b,c,d)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",20],["Just",45],""]]}],["Monoid",{"ie_types":[[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]],"(a,b,c,d)"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",29],["Just",48],""]]}],["margin",{"ie_types":[[["Type","_Tuple4",[["Type","Span",[]],["Type","Span",[]],["Type","Span",[]],["Type","Span",[]]]],"(!Span,!Span,!Span,!Span)"]],"ie_locations":[["Location","Platform","Graphics.Scalable",["Just",44],["Just",100],""]]}],["Show",{"ie_types":[[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]],"(a,b,c,d)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",114],["Just",163],""]]}],["ToArgs",{"ie_types":[[["Type","_Tuple4",[["Var","a"],["Var","b"],["Var","c"],["Var","d"]]],"(a,b,c,d)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",169],["Just",271],""]]}]],["Tip"],["Tip"]]],["Bin",5,"_Tuple9",[["Show",{"ie_types":[[["Type","_Tuple9",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"],["Var","i"]]],"(a,b,c,d,e,f,g,h,i)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",119],["Just",188],""]]}]],["Bin",3,"_Tuple7",[["Show",{"ie_types":[[["Type","_Tuple7",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"]]],"(a,b,c,d,e,f,g)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",117],["Just",178],""]]}]],["Bin",1,"_Tuple6",[["Show",{"ie_types":[[["Type","_Tuple6",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"]]],"(a,b,c,d,e,f)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",116],["Just",173],""]]}],["ToArgs",{"ie_types":[[["Type","_Tuple6",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"]]],"(a,b,c,d,e,f)"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",173],["Just",277],""]]}]],["Tip"],["Tip"]],["Bin",1,"_Tuple8",[["Show",{"ie_types":[[["Type","_Tuple8",[["Var","a"],["Var","b"],["Var","c"],["Var","d"],["Var","e"],["Var","f"],["Var","g"],["Var","h"]]],"(a,b,c,d,e,f,g,h)"]],"ie_locations":[["Location","Platform","Text.Show",["Just",118],["Just",183],""]]}]],["Tip"],["Tip"]]],["Bin",1,"_Unit",[["Semigroup",{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",17],["Just",27],""]]}],["Monoid",{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","Platform","Data.Monoid",["Just",26],["Just",30],""]]}],["Show",{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","Platform","Text.Show",["Just",95],["Just",110],""]]}],["ToArgs",{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","iTasks","iTasks.UI.JS.Interface",["Just",157],["Just",253],""]]}],["toPrompt",{"ie_types":[[["Type","_Unit",[]],"()"]],"ie_locations":[["Location","iTasks","iTasks.UI.Prompt",["Just",9],["Just",11],""]]}]],["Tip"],["Tip"]]]]]]]]],"derivemap`":["Bin",128,"Real",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",8],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Bin",63,"GoogleMapPosition",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]]],["Bin",31,"Dynamic",[["JSONDecode",[["Location","iTasks","iTasks.Internal.Serialization",["Just",13],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.Serialization",["Just",12],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]]],["Bin",15,"Char",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Bin",7,"ArrowType",[["gEq",[["Location","Platform","Data.Graphviz",["Just",414],["Nothing"],""]]]],["Bin",3,"Action",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]]],["Bin",1,"AceOptions",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",33],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",30],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",31],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Editors.Ace",["Just",32],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"AnalogClock",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Clock",["Just",10],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Clock",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Clock",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Clock",["Just",11],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Clock",["Just",12],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Clock",["Just",14],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"Bool",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",8],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Bin",1,"Bimap",[["bimap",[["Location","StdEnv","StdGeneric",["Just",70],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"CONS",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["bimap",[["Location","StdEnv","StdGeneric",["Just",66],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Tip"],["Tip"]]]],["Bin",7,"DateTime",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",52],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",51],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",53],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",56],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",54],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",55],["Nothing"],""]]]],["Bin",3,"ControlLight",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",25],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",24],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",28],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",26],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",29],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Dashboard",["Just",27],["Nothing"],""]]]],["Bin",1,"Color",[["gEq",[["Location","Platform","Data.Graphviz",["Just",384],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"Date",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",52],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",51],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",53],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",56],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",54],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",55],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"DirType",[["gEq",[["Location","Platform","Data.Graphviz",["Just",425],["Nothing"],""]]]],["Bin",1,"DeferredJSON",[["JSONDecode",[["Location","iTasks","iTasks.Internal.TaskState",["Just",80],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.TaskState",["Just",79],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"Document",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Document",["Just",25],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Document",["Just",24],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Document",["Just",26],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Document",["Just",29],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Document",["Just",27],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Document",["Just",28],["Nothing"],""]]]],["Tip"],["Tip"]]]]],["Bin",15,"FIELD",[["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["bimap",[["Location","StdEnv","StdGeneric",["Just",68],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Bin",7,"EditMask",[["JSONDecode",[["Location","iTasks","iTasks.UI.Editor",["Just",62],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.UI.Editor",["Just",61],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.UI.Editor",["Just",63],["Nothing"],""]]]],["Bin",3,"EUR",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Currency",["Just",17],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Currency",["Just",16],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Currency",["Just",18],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Currency",["Just",21],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Currency",["Just",19],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Currency",["Just",20],["Nothing"],""]]]],["Bin",1,"EITHER",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["bimap",[["Location","StdEnv","StdGeneric",["Just",64],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"EdgeStyle",[["gEq",[["Location","Platform","Data.Graphviz",["Just",367],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"Either",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]]],["Bin",1,"Editor",[["bimap",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",31],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"EmailAddress",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Contact",["Just",16],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Contact",["Just",15],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Contact",["Just",17],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Contact",["Just",20],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Contact",["Just",18],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Contact",["Just",19],["Nothing"],""]]]],["Tip"],["Tip"]]]],["Bin",7,"GoogleMapComplexIcon",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]]],["Bin",3,"FieldMask",[["JSONDecode",[["Location","iTasks","iTasks.UI.Editor",["Just",62],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.UI.Editor",["Just",61],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.UI.Editor",["Just",63],["Nothing"],""]]]],["Bin",1,"FMap",[["bimap",[["Location","Generics","GenFMap",["Just",6],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"GoogleMap",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"GoogleMapMarker",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]]],["Bin",1,"GoogleMapIcon",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"GoogleMapPerspective",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]]],["Tip"],["Tip"]]]]]],["Bin",31,"LeafletObject",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]]],["Bin",15,"Int",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",8],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Bin",7,"HtmlAttr",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",25],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",26],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",27],["Nothing"],""]]]],["Bin",3,"GoogleMapType",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]]],["Bin",1,"GoogleMapSettings",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",50],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",49],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",51],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",52],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.GoogleMap",["Just",53],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"Graph",[["JSONDecode",[["Location","Platform","Data.Graph",["Just",25],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Data.Graph",["Just",24],["Nothing"],""]]],["gEq",[["Location","Platform","Data.Graph",["Just",26],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"InstanceConstants",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]]],["Bin",1,"HtmlTag",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"InstanceProgress",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]]],["Tip"],["Tip"]]]],["Bin",7,"LeafletIcon",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]]],["Bin",3,"JSONNode",[["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]]],["Bin",1,"IntMap",[["JSONDecode",[["Location","Platform","Data.IntMap.Strict",["Just",94],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Data.IntMap.Strict",["Just",93],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]],["gEq",[["Location","Platform","Data.IntMap.Strict",["Just",95],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"LeafletBounds",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"LeafletMap",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]]],["Bin",1,"LeafletLatLng",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"LeafletMarker",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]]],["Tip"],["Tip"]]]]],["Bin",15,"Node",[["JSONDecode",[["Location","Platform","Data.Graph",["Just",25],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Data.Graph",["Just",24],["Nothing"],""]]],["gEq",[["Location","Platform","Data.Graph",["Just",26],["Nothing"],""]]]],["Bin",7,"LexOrd",[["gEq",[["Location","Generics","GenLexOrd",["Just",6],["Nothing"],""]]]],["Bin",3,"LeafletPolygon",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]]],["Bin",1,"LeafletPerspective",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"LeafletPolyline",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",70],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",69],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",71],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",74],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",72],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.GIS.Leaflet",["Just",73],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"Maybe",[["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]],["bimap",[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]],["gEq",[["Location","Platform","Data.Maybe",["Just",13],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Bin",1,"Map",[["JSONDecode",[["Location","Platform","Data.Map",["Just",178],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Data.Map",["Just",177],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]],["gEq",[["Location","Platform","Data.Map",["Just",179],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",11],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"MaybeError",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]]],["Tip"],["Tip"]]]],["Bin",7,"PAIR",[["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["bimap",[["Location","StdEnv","StdGeneric",["Just",63],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Bin",3,"NodeStyle",[["gEq",[["Location","Platform","Data.Graphviz",["Just",356],["Nothing"],""]]]],["Bin",1,"NodeShape",[["gEq",[["Location","Platform","Data.Graphviz",["Just",342],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"OBJECT",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["bimap",[["Location","StdEnv","StdGeneric",["Just",65],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",14],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",18],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",6],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",14],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",10],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"PhoneNumber",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Contact",["Just",16],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Contact",["Just",15],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Contact",["Just",17],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Contact",["Just",20],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Contact",["Just",18],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Contact",["Just",19],["Nothing"],""]]]],["Bin",1,"Password",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.User",["Just",56],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.User",["Just",55],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.User",["Just",57],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.User",["Just",61],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.User",["Just",58],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.User",["Just",60],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"RECORD",[["bimap",[["Location","StdEnv","StdGeneric",["Just",67],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]]],["Tip"],["Tip"]]]]]]],["Bin",64,"TaskListItem",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]]],["Bin",31,"SVGStrokeDashArray",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",15,"SVGFillRule",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",7,"SVGColor",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",3,"SVGAlign",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",1,"SDS",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",30],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",29],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",32],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",29],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",31],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"SVGAttr",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"SVGElt",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",1,"SVGDefer",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"SVGFillOpacity",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]]]],["Bin",7,"SVGLineCap",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",3,"SVGLengthAdjust",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",1,"SVGFuncIRI",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"SVGLengthUnit",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"SVGMeetOrSlice",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",1,"SVGLineJoin",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"SVGPaint",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]]]]],["Bin",15,"TAssoc",[["JSONDecode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]]],["Bin",7,"SVGTransform",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",3,"SVGStrokeMiterLimit",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Bin",1,"SVGStrokeDashOffset",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"SVGStrokeWidth",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"StMonad",[["bimap",[["Location","Generics","GenMonad",["Just",10],["Nothing"],""]]]],["Bin",1,"SVGZoomAndPan",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",35],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",34],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",37],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",38],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",36],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",39],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"String",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",7],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",8],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Tip"],["Tip"]]]],["Bin",7,"TLit",[["JSONDecode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]]],["Bin",3,"TIMeta",[["JSONDecode",[["Location","iTasks","iTasks.Internal.TaskState",["Just",19],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.TaskState",["Just",18],["Nothing"],""]]]],["Bin",1,"TExpr",[["JSONDecode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"TIReduct",[["JSONDecode",[["Location","iTasks","iTasks.Internal.TaskState",["Just",19],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.TaskState",["Just",18],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"Task",[["JSONDecode",[["Location","iTasks","iTasks.Internal.Task",["Just",20],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.Task",["Just",19],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Task",["Just",21],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Internal.Task",["Just",23],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Internal.Task",["Just",24],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Task",["Just",22],["Nothing"],""]]]],["Bin",1,"TPriority",[["JSONDecode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"TaskInstance",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]]],["Tip"],["Tip"]]]]]],["Bin",32,"WorkflowTaskContainer",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",25],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",24],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",26],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",23],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",27],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Admin.WorkflowAdmin",["Just",22],["Nothing"],""]]]],["Bin",15,"URL",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Web",["Just",18],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Web",["Just",17],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Web",["Just",19],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Web",["Just",15],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Web",["Just",20],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Web",["Just",16],["Nothing"],""]]]],["Bin",7,"Timestamp",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",14],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",28],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",26],["Nothing"],""]]]],["Bin",3,"TaskValue",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]]],["Bin",1,"TaskTree",[["JSONDecode",[["Location","iTasks","iTasks.Internal.TaskState",["Just",19],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.TaskState",["Just",18],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"Time",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",52],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",51],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",53],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",56],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",54],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.DateTime",["Just",55],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"TonicModule",[["JSONDecode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]]],["Bin",1,"TonicFunc",[["JSONDecode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",11],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",152],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",149],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Internal.Tonic.AbsSyn",["Just",13],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Tonic.Types",["Just",155],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"UNIT",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",57],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",12],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",18],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",9],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",24],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",6],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Tip"],["Tip"]]]],["Bin",7,"UserConstraint",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.User",["Just",56],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.User",["Just",55],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.User",["Just",57],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.User",["Just",61],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.User",["Just",58],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.User",["Just",60],["Nothing"],""]]]],["Bin",3,"UnitTest",[["JSONDecode",[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",41],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",40],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",45],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",43],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",42],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Test.Definition",["Just",44],["Nothing"],""]]]],["Bin",1,"USD",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Currency",["Just",17],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Currency",["Just",16],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Currency",["Just",18],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Currency",["Just",21],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Currency",["Just",19],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Currency",["Just",20],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"User",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.User",["Just",56],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.User",["Just",55],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.User",["Just",57],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.User",["Just",61],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.User",["Just",58],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.User",["Just",60],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"ValueStatus",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",49],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",48],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",50],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",54],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",51],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",53],["Nothing"],""]]]],["Bin",1,"Username",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.User",["Just",56],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.User",["Just",55],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.User",["Just",57],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.User",["Just",61],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.User",["Just",58],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.User",["Just",60],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"WebImage",[["JSONDecode",[["Location","iTasks","iTasks.Extensions.Image",["Just",18],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.Extensions.Image",["Just",17],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Extensions.Image",["Just",19],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.Extensions.Image",["Just",16],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.Extensions.Image",["Just",20],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Extensions.Image",["Just",15],["Nothing"],""]]]],["Tip"],["Tip"]]]]],["Bin",16,"_List",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]],["bimap",[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Bin",7,"XMLRealAttribute",[["XMLEncode",[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]]],["Bin",3,"XMLCharAttribute",[["XMLEncode",[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]]],["Bin",1,"XMLBoolAttribute",[["XMLEncode",[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"XMLIntAttribute",[["XMLEncode",[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",3,"_!Array",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Bin",1,"XMLStringAttribute",[["XMLEncode",[["Location","Platform","Text.XML",["Just",59],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"_Array",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["gCompress",[["Location","Generics","GenCompress",["Just",10],["Nothing"],""]]],["gCompressedSize",[["Location","Generics","GenCompress",["Just",13],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.WF.Derives",["Just",41],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.WF.Derives",["Just",42],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",8],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",15],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",11],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",11],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",6],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",6],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",10],["Nothing"],""]]],["gParse",[["Location","Generics","GenParse",["Just",17],["Nothing"],""]]],["gPrint",[["Location","Generics","GenPrint",["Just",25],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.WF.Derives",["Just",43],["Nothing"],""]]],["gUncompress",[["Location","Generics","GenCompress",["Just",16],["Nothing"],""]]],["relMap",[["Location","Platform","Database.SQL.RelationalMapping",["Just",71],["Nothing"],""]]]],["Tip"],["Tip"]]]],["Bin",8,"_Tuple5",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["bimap",[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]]],["Bin",3,"_Tuple3",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]],["bimap",[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]]],["Bin",1,"_Tuple2",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]],["bimap",[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",1,"_Tuple4",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["XMLEncode",[["Location","Platform","Text.XML",["Just",58],["Nothing"],""]]],["bimap",[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]]],["Tip"],["Tip"]]],["Bin",4,"_Tuple7",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["bimap",[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]]],["Bin",1,"_Tuple6",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["bimap",[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]]],["Tip"],["Tip"]],["Bin",2,"_Tuple8",[["JSDecode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",36],["Nothing"],""]]],["JSEncode",[["Location","iTasks","iTasks.UI.JS.Encoding",["Just",20],["Nothing"],""]]],["JSONDecode",[["Location","Platform","Text.JSON",["Just",112],["Nothing"],""]]],["JSONEncode",[["Location","Platform","Text.JSON",["Just",88],["Nothing"],""]]],["bimap",[["Location","Generics","GenBimap",["Just",7],["Nothing"],""]]],["gDefault",[["Location","Generics","GenDefault",["Just",9],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEq",[["Location","Generics","GenEq",["Just",11],["Nothing"],""]]],["gInsertFMap",[["Location","Generics","GenFMap",["Just",16],["Nothing"],""]]],["gLexOrd",[["Location","Generics","GenLexOrd",["Just",14],["Nothing"],""]]],["gLookupFMap",[["Location","Generics","GenFMap",["Just",12],["Nothing"],""]]],["gMap",[["Location","Generics","GenMap",["Just",8],["Nothing"],""]]],["gMapLM",[["Location","Generics","GenMonad",["Just",15],["Nothing"],""]]],["gMapLSt",[["Location","Generics","GenMapSt",["Just",7],["Nothing"],""]]],["gMapRM",[["Location","Generics","GenMonad",["Just",19],["Nothing"],""]]],["gMapRSt",[["Location","Generics","GenMapSt",["Just",11],["Nothing"],""]]],["gMaybeZip",[["Location","Generics","GenZip",["Just",11],["Nothing"],""]]],["gReduce",[["Location","Generics","GenReduce",["Just",7],["Nothing"],""]]],["gReduceLSt",[["Location","Generics","GenReduce",["Just",15],["Nothing"],""]]],["gReduceRSt",[["Location","Generics","GenReduce",["Just",11],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]],["gZip",[["Location","Generics","GenZip",["Just",7],["Nothing"],""]]]],["Tip"],["Bin",1,"_Unit",[["JSONDecode",[["Location","iTasks","iTasks.WF.Derives",["Just",23],["Nothing"],""]]],["JSONEncode",[["Location","iTasks","iTasks.WF.Derives",["Just",22],["Nothing"],""]]],["gDefault",[["Location","iTasks","iTasks.Internal.Generic.Defaults",["Just",13],["Nothing"],""]]],["gEditor",[["Location","iTasks","iTasks.UI.Editor.Generic",["Just",27],["Nothing"],""]]],["gEq",[["Location","iTasks","iTasks.WF.Derives",["Just",24],["Nothing"],""]]],["gPrettyTrace",[["Location","iTasks","iTasks.Util.Trace",["Just",10],["Nothing"],""]]],["gText",[["Location","iTasks","iTasks.Internal.Generic.Visualization",["Just",25],["Nothing"],""]]]],["Tip"],["Tip"]]]]]]]]]}