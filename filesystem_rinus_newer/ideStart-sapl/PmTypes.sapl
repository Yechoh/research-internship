|| ?module? PmTypes


PmTypes.DefaultProcessor = PmTypes.I386
PmTypes.PlatformProcessors = _predefined._Cons PmTypes.I386 _predefined._Nil
PmTypes.ProcessorSuffix !_x_0 = case _x_0 (PmTypes.CurrentProcessor -> PmTypes.ProcessorSuffix PmTypes.DefaultProcessor) (PmTypes.MC68000 -> ".obj0") (PmTypes.MC68020 -> ".obj1") (PmTypes.MC68020_and_68881 -> ".obj2") (PmTypes.PowerPC_Classic -> ".cxo") (PmTypes.PowerPC_Carbon -> ".xo") (PmTypes.PowerPC_MachO -> ".o") (PmTypes.I386 -> ".o") 
PmTypes.DefaultLinkOptions = PmTypes._LinkOptions <{_predefined._!Nil!}> <{_predefined._!Nil!}> PmTypes.LM_Static False False False False "" False ""
PmTypes.DefWindowPos_and_Size = PmTypes._WindowPos_and_Size 0 0 500 300
PmTypes.DefCodeGenOptions = PmTypes._CodeGenOptions False True
PmTypes.DefApplicationOptions = PmTypes._ApplicationOptions (<{StdInt.<<}> 2 20) (<{StdInt.<<}> 500 10) (<{StdInt.<<}> 8 10) (<{StdInt.<<}> 16 8) (<{StdInt.<<}> 200 10) False False False False False PmTypes.ShowConstructors "Monaco" 9 False False 0 False False False False True
PmTypes.isProjLibraryModule::B !mod_0 !info_1 = case info_1 (PmTypes._StaticLibInfo sLibs_1_0 sDcls_1_1 sDeps_1_2 -> UtilStrictLists.StringOccurs mod_0 sDcls_1_1) 
PmTypes.UnexpectedEvalBefore !defaultValue_0 !_x_1 = defaultValue_0
PmTypes.UnexpectedReport::I !message_0 = PmTypes.UnexpectedEvalBefore 0 (StdFile.fwrites message_0 StdFile.stderr)
PmTypes.UnexpectedConstructor !typeName_0 !string_1 !defaultValue_2 = PmTypes.UnexpectedEvalBefore defaultValue_2 (PmTypes.UnexpectedReport (<{StdString.+++_11}> "fromString (" (<{StdString.+++_11}> typeName_0 (<{StdString.+++_11}> "): unknown value (" (<{StdString.+++_11}> string_1 ")\n")))))
<{PmTypes.==_8}>::B !_x_0 !_x_1 = case _x_0 (PmTypes.CurrentProcessor -> case _x_1 (PmTypes.CurrentProcessor -> True) ) (PmTypes.MC68000 -> case _x_1 (PmTypes.MC68000 -> True) ) (PmTypes.MC68020 -> case _x_1 (PmTypes.MC68020 -> True) ) (PmTypes.MC68020_and_68881 -> case _x_1 (PmTypes.MC68020_and_68881 -> True) ) (PmTypes.PowerPC_Classic -> case _x_1 (PmTypes.PowerPC_Classic -> True) ) (PmTypes.PowerPC_Carbon -> case _x_1 (PmTypes.PowerPC_Carbon -> True) ) (PmTypes.PowerPC_MachO -> case _x_1 (PmTypes.PowerPC_MachO -> True) ) (PmTypes.I386 -> case _x_1 (PmTypes.I386 -> True) ) (_ -> False)
PmTypes.toString_9 !_x_0 = case _x_0 (PmTypes.MC68000 -> "MC68000") (PmTypes.MC68020 -> "MC68020") (PmTypes.MC68020_and_68881 -> "MC68020_and_68881") (PmTypes.PowerPC_Classic -> "PowerPC_Classic") (PmTypes.PowerPC_Carbon -> "PowerPC_Carbon") (PmTypes.PowerPC_MachO -> "PowerPC_MachO") (PmTypes.I386 -> "I386") (PmTypes.CurrentProcessor -> "CurrentProcessor") 
PmTypes.fromString_10 !_x_0 = case _x_0 ("CurrentProcessor" -> PmTypes.CurrentProcessor) ("MC68000" -> PmTypes.MC68000) ("MC68020" -> PmTypes.MC68020) ("MC68020_and_68881" -> PmTypes.MC68020_and_68881) ("PowerPC_Classic" -> PmTypes.PowerPC_Classic) ("PowerPC_Carbon" -> PmTypes.PowerPC_Carbon) ("PowerPC_MachO" -> PmTypes.PowerPC_MachO) ("I386" -> PmTypes.I386) (_ -> PmTypes.UnexpectedConstructor "Processor" _x_0 PmTypes.CurrentProcessor)
PmTypes.toString_11 !_x_0 = case _x_0 (PmTypes.LM_Static -> "Static") (PmTypes.LM_Dynamic -> "Dynamic") (PmTypes.LM_StaticLibrary -> "StaticLibrary") (PmTypes.LM_DynamicLibrary -> "DynamicLibrary") 
PmTypes.fromString_12 !_x_0 = case _x_0 ("Static" -> PmTypes.LM_Static) ("Eager" -> PmTypes.LM_Dynamic) ("Dynamic" -> PmTypes.LM_Dynamic) ("StaticLibrary" -> PmTypes.LM_StaticLibrary) ("DynamicLibrary" -> PmTypes.LM_DynamicLibrary) (_ -> PmTypes.LM_Static)
<{PmTypes.==_13}>::B !_x_0 !_x_1 = case _x_0 (PmTypes.LM_Static -> case _x_1 (PmTypes.LM_Static -> True) ) (PmTypes.LM_Dynamic -> case _x_1 (PmTypes.LM_Dynamic -> True) ) (PmTypes.LM_StaticLibrary -> case _x_1 (PmTypes.LM_StaticLibrary -> True) ) (PmTypes.LM_DynamicLibrary -> case _x_1 (PmTypes.LM_DynamicLibrary -> True) ) (_ -> False)
<{PmTypes.==_44}>::B !pos1_0 !pos2_1 = case (<{StdInt.==_16}> (select pos1_0::PmTypes._WindowPos_and_Size 0) (select pos2_1::PmTypes._WindowPos_and_Size 0)) (True -> case (<{StdInt.==_16}> (select pos1_0::PmTypes._WindowPos_and_Size 1) (select pos2_1::PmTypes._WindowPos_and_Size 1)) (True -> case (<{StdInt.==_16}> (select pos1_0::PmTypes._WindowPos_and_Size 2) (select pos2_1::PmTypes._WindowPos_and_Size 2)) (True -> <{StdInt.==_16}> (select pos1_0::PmTypes._WindowPos_and_Size 3) (select pos2_1::PmTypes._WindowPos_and_Size 3)) (False -> False) ) (False -> False) ) (False -> False) 
<{PmTypes.==_14}>::B !_x_0 !_x_1 = case _x_0 (PmTypes.WindowPosAndSize pos1_1_0 -> case _x_1 (PmTypes.WindowPosAndSize pos2_2_0 -> <{PmTypes.==_44}> pos1_1_0 pos2_2_0) ) (PmTypes.NoWindowPosAndSize -> case _x_1 (PmTypes.NoWindowPosAndSize -> True) ) (_ -> False)
<{PmTypes.==_15}>::B !eo1_0 !eo2_1 = True
<{PmTypes.==_16}>::B !cg1_0 !cg2_1 = case (<{StdBool.==_3}> (select cg1_0::PmTypes._CodeGenOptions 0) (select cg2_1::PmTypes._CodeGenOptions 0)) (True -> <{StdBool.==_3}> (select cg1_0::PmTypes._CodeGenOptions 1) (select cg2_1::PmTypes._CodeGenOptions 1)) (False -> False) 
<{PmTypes.==_17}>::B !_x_0 !_x_1 = case _x_0 (PmTypes.BasicValuesOnly -> case _x_1 (PmTypes.BasicValuesOnly -> True) ) (PmTypes.ShowConstructors -> case _x_1 (PmTypes.ShowConstructors -> True) ) (PmTypes.NoReturnType -> case _x_1 (PmTypes.NoReturnType -> True) ) (PmTypes.NoConsole -> case _x_1 (PmTypes.NoConsole -> True) ) (_ -> False)
PmTypes.toString_18 !_x_0 = case _x_0 (PmTypes.BasicValuesOnly -> "BasicValuesOnly") (PmTypes.ShowConstructors -> "ShowConstructors") (PmTypes.NoReturnType -> "NoReturnType") (PmTypes.NoConsole -> "NoConsole") 
PmTypes.fromString_19 !_x_0 = case _x_0 ("BasicValuesOnly" -> PmTypes.BasicValuesOnly) ("ShowConstructors" -> PmTypes.ShowConstructors) ("NoReturnType" -> PmTypes.NoReturnType) ("NoConsole" -> PmTypes.NoConsole) (_ -> PmTypes.UnexpectedConstructor "Output" _x_0 PmTypes.BasicValuesOnly)
<{PmTypes.TD;Modulename}> _x_0::B = _predefined._Nil
<{PmTypes.TD;ModuleDirAndName}> _x_0::B = _predefined._Nil
<{PmTypes.TD;Processor}> _x_0::B = _predefined._Nil
<{PmTypes.TD;LinkObjFileName}> _x_0::B = _predefined._Nil
<{PmTypes.TD;LinkLibraryName}> _x_0::B = _predefined._Nil
<{PmTypes.TD;LinkOptions}> _x_0::B = _predefined._Nil
<{PmTypes.TD;LinkMethod}> _x_0::B = _predefined._Nil
<{PmTypes.TD;WindowPos_and_Size}> _x_0::B = _predefined._Nil
<{PmTypes.TD;OptionalWindowPosAndSize}> _x_0::B = _predefined._Nil
<{PmTypes.TD;EditOptions}> _x_0::B = _predefined._Nil
<{PmTypes.TD;EditWdOptions}> _x_0::B = _predefined._Nil
<{PmTypes.TD;CodeGenOptions}> _x_0::B = _predefined._Nil
<{PmTypes.TD;ApplicationOptions}> _x_0::B = _predefined._Nil
<{PmTypes.TD;Output}> _x_0::B = _predefined._Nil
<{PmTypes.TD;ModInfoAndName}> _x_0::B = _predefined._Nil
<{PmTypes.TD;ModInfo}> _x_0::B = _predefined._Nil
<{PmTypes.TD;ModEditOptions}> _x_0::B = _predefined._Nil
<{PmTypes.TD;ABCLinkInfo}> _x_0::B = _predefined._Nil
<{PmTypes.TD;StaticLibInfo}> _x_0::B = _predefined._Nil

:: PmTypes.LinkMethod = PmTypes.LM_Static | PmTypes.LM_Dynamic | PmTypes.LM_StaticLibrary | PmTypes.LM_DynamicLibrary
:: PmTypes.OptionalWindowPosAndSize = PmTypes.NoWindowPosAndSize | PmTypes.WindowPosAndSize !a1
:: PmTypes.Output = PmTypes.BasicValuesOnly | PmTypes.ShowConstructors | PmTypes.NoReturnType | PmTypes.NoConsole
:: PmTypes.Processor = PmTypes.CurrentProcessor | PmTypes.MC68000 | PmTypes.MC68020 | PmTypes.MC68020_and_68881 | PmTypes.PowerPC_Classic | PmTypes.PowerPC_Carbon | PmTypes.PowerPC_MachO | PmTypes.I386

|| Converted Records
:: PmTypes._ModuleDirAndName = {!PmTypes.mdn_dir, !PmTypes.mdn_name}

:: PmTypes._LinkOptions = {!PmTypes.extraObjectModules, !PmTypes.libraries, !PmTypes.method, !PmTypes.generate_relocations::B, !PmTypes.generate_symbol_table::B, !PmTypes.generate_link_map::B, !PmTypes.link_resources::B, !PmTypes.resource_source, !PmTypes.generate_dll::B, !PmTypes.dll_export_list_name}

:: PmTypes._WindowPos_and_Size = {!PmTypes.posx::I, !PmTypes.posy::I, !PmTypes.sizex::I, !PmTypes.sizey::I}

:: PmTypes._EditOptions = {!PmTypes.newlines}

:: PmTypes._EditWdOptions = {!PmTypes.eo, !PmTypes.pos_size}

:: PmTypes._CodeGenOptions = {!PmTypes.cs::B, !PmTypes.ci::B}

:: PmTypes._ApplicationOptions = {!PmTypes.hs::I, !PmTypes.ss::I, !PmTypes.em::I, !PmTypes.heap_size_multiple::I, !PmTypes.initial_heap_size::I, !PmTypes.set::B, !PmTypes.sgc::B, !PmTypes.pss::B, !PmTypes.marking_collection::B, !PmTypes.disable_rts_flags::B, !PmTypes.o, !PmTypes.fn, !PmTypes.fs::I, !PmTypes.write_stderr_to_file::B, !PmTypes.memoryProfiling::B, !PmTypes.memoryProfilingMinimumHeapSize::I, !PmTypes.profiling::B, !PmTypes.stack_traces::B, !PmTypes.dynamics::B, !PmTypes.desc_exl::B, !PmTypes.standard_rte::B}

:: PmTypes._ModInfoAndName = {PmTypes.info, PmTypes.name}

:: PmTypes._ModInfo = {!PmTypes.dir, !PmTypes.compilerOptions, !PmTypes.mod_edit_options, !PmTypes.abcLinkInfo}

:: PmTypes._ModEditOptions = {!PmTypes.defeo, !PmTypes.impeo, !PmTypes.defopen::B, !PmTypes.impopen::B}

:: PmTypes._ABCLinkInfo = {!PmTypes.linkObjFileNames, !PmTypes.linkLibraryNames}

:: PmTypes._StaticLibInfo = {!PmTypes.sLibs, !PmTypes.sDcls, !PmTypes.sDeps}

