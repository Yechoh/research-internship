task met ace editor
tut = updateInformation () [UpdateUsing id (const id) aceTextArea] "hello world"

link
gitlab.science.ru.nl/clean-and-itasks/clean-build

---

System.callProcess
heeft als argumenten
- path van de exe
- argumenten
- current directory. Waarom je die mee zou willen geven heb ik geen idee
- world
geeft terug
- int foutmelding
- world

wat we willen:
als de process iets output willen we dat opvangen
hieruit komen de volgende vragen:
hoe output zo'n process iets? Waar wordt dat gelaten? Verschilt dat per OS?

clm wordt aangeroepen door de cleanIDE en de output wordt opgevangen

---

toolIconFun in IdePlatForm
heeft als argumenten
- int toolname. Waarom dit een int is geen idee
- maybestring tooltip. negeren dus
- toolfun. geen idee
- toolbar itemlist. geen idee
- world
geeft terug
- toolbar itemlist
- world

hoort dit niet iets meer terug te geven of zo?

---

callProcess in IntegrationTasks in iTasks
heeft als argumenten
- string description
- viewoptions
- filepath van process
- arguments
- maybe standard dir

createExec in createAndRunExec in filesystem_rinus
doet in volgorde:
createCleanProject
	
buildCleanProject

---
how to run foo.py in standard commandline (multiple ways):
cd to the map it is in
python -c "import foo; print foo.hello()"

C:\\Users\\Martin\\Documents\\clean-classic-itasks-windows-x86-20161223\\Libraries\\iTasks-SDK\\research internship\\foo.py

in pythonconsole
execfile("C:\\Users\\Martin\\Documents\\clean-classic-itasks-windows-x86-20161223\\Libraries\\iTasks-SDK\\research internship\\foo.py")

how to run hello.java:
"C:\Program Files\Java\jdk1.8.0_73\bin\javac" "C:\\Users\\Martin\\Documents\\clean-classic-itasks-windows-x86-20161223\\Libraries\\iTasks-SDK\\research internship\\Hello.java"
geeft een error, maar dat maakt niet uit

---
"Wat je het beste kan doen is kijken naar hoe de clean compiler zelf “CleanCompiler.exe” wordt aangeroepen door cpm of de Clean IDE. Die schrijft namelijk standaard zijn output al naar files."
cpm roept doCpmAction van cpmLogic aan
	doCpmAction in cpmLogic krijgt een projectaction mee.
	Deze kan BuildProject zijn.
	doCpmAction roept initGeneral van IdeState aan
		initGeneral heeft geen beschrijving. Het lijkt gewoon wat data te verzamelen
	daarna roept CpmAction pinit aan.
		dat roept BringProjectUpToDate in PmDriver aan
		beschrijving: bring complete project up to date. it has a boolean, when true it recompiles
		deze lijkt het echte werk te doen.
		het gebruikt ShowInfo in messwin om berichtjes te sturen
			deze gebruikt writeLog in ideState
				onduidelijk of deze log eerder geinitialiseerd wordt of zo, of hoe het werkt. het roept appPLoc aan, maar die husselt alleen wat info
				logfile zit in generalSt, wat een verzameling is van info, maar ook een world. logfile is een file. Hoe deze dan gemaakt, geprint, watefs wordt is onduidelijk. Dit moet logischerwijs gezien later in de programflow gebeuren. De vraag is waar.
doCpmAction is het laatste wat cpm aanroept. Deze moet de logfile dus printen
	
---
om een program te compilen, hebben we nodig: een project, een icl
de icl hebben we (sortof)
de project niet. 
	Wat als import missen. 
		Dan moeten die worden toegevoegd. 
			Hoe doet de clean ide dit? 
				Wss is die functie wel te vinden.
					Valt die ook om te zetten naar een itask?
						Onduidelijk. Het roept een venster aan.
							Kunnen we het zelf maken, zo'n venster?
								Misschien, maar dan hebben we nog steeds delen uit de ide nodig.
Hoe ziet dit er uiteindelijk uit?
	er komt een knop, regel imports, waarmee je imports kan regelen. Voor de rest geeft de errorshower gewoon de errors

---
doel: de tijd nu krijgen, updatend
wat ik heb: een functie die de tijd laat zien met een viewSharedInformation totdat een zekere tijd voorbij is
wat ik wil: zonder de view
ik heb de functie currentTime, maar die geeft geen task maar een readSharedOnly
als ik de readSharedOnly naar een normal value kan krijgen, ben ik klaar, maar dat kan niet.
als ik de readSharedOnly naar een unstable task value kan krijgen, is het ook goed, viewSharedInformation doet dit.
hoe werkt get?
in get wordt taskTime gebruikt. Laten we kijken of dat gewoon de tijd is en we daar iets mee kunnen
het is geen tijd en bas raadt het af
watch is wss wat ik zoek

---
wat doet de site?
het opent meerdere subscreens, terwijl watch er uit gesloopt zou moeten zijn
het updates niet.

---
>>- is een belangrijke combinator
update als waarde stable (net zoals >>=), maar genereert not een continue

---
waarom willen we temp files?
zodat het geen project genereert om de errors te laten zien.

scenarios:
1. ik kijk een file door
2. ik save een updated withoutStart file
3. ik save een updated withStart file

---
selectFromTree laat 2 windows zien. Een fetchdirectories window en een viewsharedinformation window. de sharedinformation is een path.
fetchdirectories returnt een task directory

de continue is veroorzaakt omdat viewinformation een waarde geeft die we nodig hebben. Die wordt gereturnd. Met de continue wordt die stable gemaakt.
!!! Wat ik nodig heb is een sidestep optie om paths aan te passen.

---
wat ik wil:
ik wil een icl die een overzicht geeft van welke pagina's naar welke pagina's wijzen.
waarom is dit niet makkelijk:
ik heb het nu opgedeeld in pages en buttons, maar die hebben informatie nodig. Bijv: 
	- editorPage heeft het path nodig van de icl waar we naar kijken, die zou die moeten krijgen van chooseFile. 
	- een Button zou een voorwaarde kunnen hebben, waar info voor nodig is
nieuw plan:
we hebben pages en pagenodes. pages zijn functies die (action,pagenode) tuples vragen en een pagina opleveren.
per page is er een pagenode die de page de goede (action,pagenode) tuples geeft (als een x-tuple van 2-tuples).

---
chooseFile doet meerdere dingen
- het vraagt om een pad, gebruikmakend van een filetree

---
hoe werkt >>* precies?
het type van >>* is 
	(task a) [TaskCont a (Task b)] -> Task b
TaskCont a (Task b) is
	OnAction    Action  ((TaskValue a)  -> Maybe b)
een voorbeeld hiervan is
	OnAction (Action "hoi") always (return ())
het type van always is
	b (TaskValue a) -> Maybe b
	
---
wat mist nog aan Bas zijn kant van de Ace Editor?
shortcuts
timestamp


