|| ?module? osmenu


osmenu.osInitialiseMenus::I !tb_0::I = menuCCall_12.winInitialiseMenus tb_0
osmenu.osDisableMenu::I !z_0::I !osMenuBar_1 !tb_2::I = case osMenuBar_1 (osdocumentinterface._OSMenuBar menuBar_1_0 menuWindow_1_1 menuClient_1_2 -> menuCrossCall_12.winChangeMenuAbility menuBar_1_0 z_0 False tb_2) 
osmenu.osEnableMenu::I !z_0::I !osMenuBar_1 !tb_2::I = case osMenuBar_1 (osdocumentinterface._OSMenuBar menuBar_1_0 menuWindow_1_1 menuClient_1_2 -> menuCrossCall_12.winChangeMenuAbility menuBar_1_0 z_0 True tb_2) 
osmenu.osDisableMenuItem::I !menuHandle_0::I !item_1::I !_x_2::I !tb_3::I = menuCrossCall_12.winChangeItemAbility menuHandle_0 item_1 False tb_3
osmenu.osEnableMenuItem::I !menuHandle_0::I !item_1::I !_x_2::I !tb_3::I = menuCrossCall_12.winChangeItemAbility menuHandle_0 item_1 True tb_3
osmenu.osDisableSubMenu::I !menuHandle_0::I !item_1::I !_x_2::I !tb_3::I = menuCrossCall_12.winChangeItemAbility menuHandle_0 item_1 False tb_3
osmenu.osEnableSubMenu::I !menuHandle_0::I !item_1::I !_x_2::I !tb_3::I = menuCrossCall_12.winChangeItemAbility menuHandle_0 item_1 True tb_3
osmenu.osDrawMenuBar::I !_x_0 !tb_1::I = case _x_0 (osdocumentinterface._OSMenuBar menuBar_1_0 menuWindow_1_1 menuClient_1_2 -> menuCrossCall_12.winDrawMenuBar menuWindow_1_1 (<{osmenu._if;63;34_80}> (<{StdInt.==_16}> menuClient_1_2 -1) menuClient_1_2) tb_1) 
<{osmenu._if;63;34_80}>::I !_x_0::B menuClient_1::I = case _x_0 (True -> 0) (_ -> menuClient_1)
osmenu.osMenuBarClear::I !tb_0::I = tb_0
osmenu.osMenuBarSet !menuBar_0 !tb_1::I = <{_Tuple2!3}> menuBar_0 tb_1
osmenu.osMenuInsert !index_0::I !osMenuNr_1::I !title_2 !menuBar_3 !tb_4::I = let _x_1_0::I = menuCrossCall_12.winCreatePopupMenuHandle tb_4, menu_1_1 = select _x_1_0::_Tuple2 0 in <{_Tuple3!7}> menu_1_1 menuBar_3 (menuCrossCall_12.winInsertMenu title_2 True menu_1_1 (select menuBar_3::osdocumentinterface._OSMenuBar 0) index_0 (select _x_1_0::_Tuple2 1))
osmenu.osSubMenuInsert !index_0::I !osMenuNr_1::I !title_2 !parentMenu_3::I !tb_4::I = let _x_1_0::I = menuCrossCall_12.winCreatePopupMenuHandle tb_4, menu_1_1 = select _x_1_0::_Tuple2 0 in <{_Tuple3!7}> menu_1_1 parentMenu_3 (menuCrossCall_12.winInsertMenu title_2 True menu_1_1 parentMenu_3 index_0 (select _x_1_0::_Tuple2 1))
osmenu.osMenuRemove !menu_0::I !menuBar_1 !tb_2::I = case menuBar_1 (osdocumentinterface._OSMenuBar hmenu_1_0 menuWindow_1_1 menuClient_1_2 -> <{_Tuple2!3}> menuBar_1 (menuCrossCall_12.winDestroyMenu menu_0 (menuCrossCall_12.winDeleteMenu hmenu_1_0 menu_0 tb_2))) 
osmenu.osSubMenuRemove !submenu_0::I !hmenu_1::I !_x_2::I !_x_3::I !tb_4::I = <{_Tuple2!3}> hmenu_1 (menuCrossCall_12.winDestroyMenu submenu_0 (menuCrossCall_12.winDeleteMenu hmenu_1 submenu_0 tb_4))
osmenu.osRemoveMenuShortKey::I !framePtr_0::I !item_1::I !tb_2::I = menuCrossCall_12.winRemoveMenuShortKey framePtr_0 item_1 tb_2
osmenu.osCreatePopUpMenu !tb_0::I = menuCrossCall_12.winCreatePopupMenuHandle tb_0
osmenu.osTrackPopUpMenu !menu_0::I !framePtr_1::I !tb_2::I = let _x_1_0::I = menuCrossCall_12.winTrackPopupMenu menu_0 framePtr_1 tb_2, menu_1_1 = select _x_1_0::_Tuple3 0 in case (<{StdInt.==_16}> menu_1_1 0) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> <{_Tuple2!3}> (Data.Maybe.Just (osmenu._OSTrackPopUpMenu (osmenu.PopUpTrackedByItemId menu_1_1) (select _x_1_0::_Tuple3 1))) (select _x_1_0::_Tuple3 2)) 
osmenu.osAppendMenuItem !_x_0 !index_1::I !menu_2::I !title_3 !able_4::B !mark_5::B !key_6::C !tb_7::I = case _x_0 (osdocumentinterface._OSMenuBar menuBar_1_0 menuWindow_1_1 menuClient_1_2 -> case (StdBool.not (<{StdChar.==_18}> key_6 '\0')) (True -> let _x_3_0::I = menuCrossCall_12.winInsertMenuItem (<{osmenu._if;123;19_81}> (StdBool.not (<{StdChar.==_18}> key_6 '\0')) title_3 key_6) able_4 mark_5 menu_2 index_1 tb_7, item_3_1 = select _x_3_0::_Tuple2 0 in <{_Tuple3!7}> item_3_1 menu_2 (menuCrossCall_12.winAddMenuShortKey menuWindow_1_1 item_3_1 key_6 (select _x_3_0::_Tuple2 1))) (False -> let _x_3_0 = menuCrossCall_12.winInsertMenuItem (<{osmenu._if;123;19_82}> (StdBool.not (<{StdChar.==_18}> key_6 '\0')) title_3 key_6) able_4 mark_5 menu_2 index_1 tb_7 in <{_Tuple3!7}> (select _x_3_0::_Tuple2 0) menu_2 (select _x_3_0::_Tuple2 1)) ) 
<{osmenu._if;123;19_82}> !_x_0::B !title_1 key_2::C = case _x_0 (True -> <{StdString.+++_11}> title_1 (<{StdString.+++_11}> "\tCtrl+" (StdString.toString_6 (StdChar.toUpper key_2)))) (_ -> title_1)
<{osmenu._if;123;19_81}> !_x_0::B !title_1 key_2::C = case _x_0 (True -> <{StdString.+++_11}> title_1 (<{StdString.+++_11}> "\tCtrl+" (StdString.toString_6 (StdChar.toUpper key_2)))) (_ -> title_1)
osmenu.osAppendMenuSeparator !index_0::I !menu_1::I !tb_2::I = <{_Tuple3!7}> 0 menu_1 (menuCrossCall_12.winInsertSeparator menu_1 index_0 tb_2)
osmenu.osChangeMenuTitle::I !_x_0 !menu_1::I !title_2 !tb_3::I = case _x_0 (osdocumentinterface._OSMenuBar menuBar_1_0 menuWindow_1_1 menuClient_1_2 -> menuCrossCall_12.winModifyMenu title_2 menu_1 menuBar_1_0 tb_3) 
osmenu.osChangeMenuItemTitle::I !menu_0::I !item_1::I !_x_2::I !title_3 !tb_4::I = menuCrossCall_12.winModifyMenuItem title_3 item_1 menu_0 tb_4
osmenu.osMenuItemCheck::I !check_0::B !menu_1::I !item_2::I !_x_3::I !_x_4::I !tb_5::I = menuCrossCall_12.winChangeMenuItemCheck menu_1 item_2 check_0 tb_5
osmenu.osMenuRemoveItem !item_0::I !_x_1::I !menu_2::I !tb_3::I = <{_Tuple2!3}> menu_2 (menuCrossCall_12.winRemoveMenuItem menu_2 item_0 tb_3)
osmenu.osValidateMenuItemTitle !_x_0 !title_1 = case _x_0 (Data.Maybe.Nothing -> title_1) (Data.Maybe.Just key_1_0 -> <{StdString.+++_11}> title_1 (<{StdString.+++_11}> "\tCtrl+" (StdString.toString_6 (StdChar.toUpper key_1_0)))) 
osmenu.osNewMenuNr !tb_0::I = <{_Tuple3!7}> True 0 tb_0
osmenu.osNewSubMenuNr !tb_0::I = <{_Tuple3!7}> True 0 tb_0
<{osmenu.TD;OSMenu}> _x_0::B = _predefined._Nil
<{osmenu.TD;OSMenuItem}> _x_0::B = _predefined._Nil
<{osmenu.TD;OSMenuSeparator}> _x_0::B = _predefined._Nil
<{osmenu.TD;OSTrackPopUpMenu}> _x_0::B = _predefined._Nil
<{osmenu.TD;OSTrackPopUpMenuResult}> _x_0::B = _predefined._Nil
<{osmenu.TD;OSMenuNr}> _x_0::B = _predefined._Nil
<{osmenu.TD;OSSubMenuNr}> _x_0::B = _predefined._Nil
<{osmenu.TD;OSMenuHandle}> _x_0::B = _predefined._Nil

:: osmenu.OSTrackPopUpMenuResult = osmenu.PopUpTrackedByIndex !a1::I !a2::I | osmenu.PopUpTrackedByItemId !a1::I

|| Converted Records
:: osmenu._OSTrackPopUpMenu = {!osmenu.ospupItem, !osmenu.ospupModifiers}

:: <{osmenu.gEq_s;}> = {!osmenu.gEq_s}

:: <{osmenu.gEq_ss;}> = {!osmenu.gEq_ss}

:: <{osmenu.gEq_sss;}> = {!osmenu.gEq_sss}

:: <{osmenu.gEq_ssss;}> = {!osmenu.gEq_ssss}

:: <{osmenu.gEq_sssss;}> = {!osmenu.gEq_sssss}

:: <{osmenu.gEq_ssssss;}> = {!osmenu.gEq_ssssss}

:: <{osmenu.gEq_sssssss;}> = {!osmenu.gEq_sssssss}

:: <{osmenu.gEq_ssssssss;}> = {!osmenu.gEq_ssssssss}

:: <{osmenu.gEq_sssssssss;}> = {!osmenu.gEq_sssssssss}

:: <{osmenu.bimap_s;}> = {osmenu.bimap_s}

:: <{osmenu.bimap_ss;}> = {osmenu.bimap_ss}

:: <{osmenu.bimap_sss;}> = {osmenu.bimap_sss}

