|| ?module? ostime


ostime.osMaxTime = ostime.OSTime (<{StdInt.-_7}> (<{StdInt.^_12}> 2 31) 1)
ostime.winGetTickCount !_x_0::I = error "no AnyCodeExpr"
ostime.getMessageTime_16 !tb_0::I = ostime.winGetTickCount tb_0
ostime.osGetTime !tb_0::I = let _x_1_0 = ostime.getMessageTime_16 tb_0 in <{_Tuple2!3}> (ostime.OSTime (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
ostime.winWait::I !i_0::I !tb_1::I = error "no AnyCodeExpr"
ostime.osWait !delay_0::I x_1 !tb_2::I = <{_Tuple2!2}> x_1 (ostime.winWait delay_0 tb_2)
ostime.winGetBlinkTime !tb_0::I = error "no AnyCodeExpr"
ostime.osGetBlinkInterval !tb_0::I = ostime.winGetBlinkTime tb_0
ostime.winGetTime !tb_0::I = error "no AnyCodeExpr"
ostime.osGetCurrentTime !tb_0::I = ostime.winGetTime tb_0
ostime.winGetDate !tb_0::I = error "no AnyCodeExpr"
ostime.osGetCurrentDate !tb_0::I = ostime.winGetDate tb_0
<{ostime.-_6}> !_x_0 !_x_1 = case _x_0 (ostime.OSTime new_1_0 -> case _x_1 (ostime.OSTime old_2_0 -> case (StdBool.not (<{StdInt.<_17}> new_1_0 old_2_0)) (True -> ostime.OSTime (<{StdInt.-_7}> new_1_0 old_2_0)) (False -> ostime.OSTime (<{StdInt.+_6}> (<{StdInt.-_7}> (<{StdInt.-_7}> (<{StdInt.^_12}> 2 31) 1) old_2_0) new_1_0)) ) ) 
<{ostime.<_7}>::B !_x_0 !_x_1 = case _x_0 (ostime.OSTime t1_1_0 -> case _x_1 (ostime.OSTime t2_2_0 -> <{StdInt.<_17}> t1_1_0 t2_2_0) ) 
ostime.toInt_8::I !_x_0 = case _x_0 (ostime.OSTime t_1_0 -> t_1_0) 
ostime.fromInt_9 !t_0::I = let x_1_0::I = 0 in ostime.OSTime (<{ostime._c;51;16_18}> (<{StdInt.<_17}> x_1_0 t_0) t_0 x_1_0)
<{ostime._c;51;16_18}>::I !_x_0::B t_1::I x_2::I = case _x_0 (True -> t_1) (_ -> x_2)
<{ostime.TD;OSTime}> _x_0::B = _predefined._Nil

:: ostime.OSTime = ostime.OSTime !a1::I

|| Converted Records
