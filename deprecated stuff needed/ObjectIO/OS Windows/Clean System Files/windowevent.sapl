|| ?module? windowevent


windowevent.windoweventFatalError !function_0 !error_1 = commondef.fatalError function_0 "windowevent" error_1
windowevent.isWindowOSEvent_10::B !_x_0::I = case _x_0 (106 -> True) (118 -> True) (105 -> True) (119 -> True) (107 -> True) (120 -> True) (121 -> True) (117 -> True) (108 -> True) (129 -> True) (135 -> True) (134 -> True) (109 -> True) (122 -> True) (100 -> True) (124 -> True) (130 -> True) (110 -> True) (133 -> True) (_ -> False)
windowevent.anon_12::B !cPtr_0::I !_x_1 = case _x_1 (windowhandle._RadioItemInfo radio_1_0 radio_1_1 radio_1_2 radio_1_3 -> <{StdInt.==_16}> radio_1_3 cPtr_0) 
windowevent.anon_13::B !cPtr_0::I !_x_1 = case _x_1 (windowhandle._CheckItemInfo check_1_0 check_1_1 check_1_2 check_1_3 -> <{StdInt.==_16}> check_1_3 cPtr_0) 
windowevent.getControlItemNr_14 !cPtr_0::I !_x_1 = case _x_1 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (<{StdInt.==_16}> cPtr_0 w_2_11) (True -> <{_Tuple3!7}> True (<{windowevent._if;143;47_94}> w_2_4 w_2_1) (windowhandle.WItemHandle itemH_1_0)) (False -> case (<{windowhandle.==_8}> w_2_2 windowhandle.IsRadioControl) (True -> <{_Tuple3!7}> (commondef.contains (windowevent.anon_12 cPtr_0) (select (windowaccess.getWItemRadioInfo w_2_5)::windowhandle._RadioInfo 0)) (<{windowevent._if;143;47_95}> w_2_4 w_2_1) (windowhandle.WItemHandle itemH_1_0)) (False -> case (<{windowhandle.==_8}> w_2_2 windowhandle.IsCheckControl) (True -> <{_Tuple3!7}> (commondef.contains (windowevent.anon_13 cPtr_0) (select (windowaccess.getWItemCheckInfo w_2_5)::windowhandle._CheckInfo 0)) (<{windowevent._if;143;47_96}> w_2_4 w_2_1) (windowhandle.WItemHandle itemH_1_0)) (False -> case (case w_2_4 (True -> w_2_3) (False -> False) ) (True -> let _x_7_0 = windowevent.getControlsItemNr_15 cPtr_0 w_2_7 in <{_Tuple3!7}> (select _x_7_0::_Tuple3 0) (select _x_7_0::_Tuple3 1) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_7_0::_Tuple3 2]))) (False -> <{_Tuple3!7}> False 0 (windowhandle.WItemHandle itemH_1_0)) ) ) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowevent.getControlsItemNr_15 cPtr_0 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 2))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getControlsItemNr_15 cPtr_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 2]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getControlsItemNr_15 cPtr_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 2]))) ) 
windowevent.getControlsItemNr_15 !cPtr_0::I !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowevent.getControlItemNr_14 cPtr_0 itemH_1_0, found_2_1 = select _x_2_0::_Tuple3 0 in case found_2_1 (True -> <{_Tuple3!7}> found_2_1 (select _x_2_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) itemHs_1_1)) (False -> let _x_4_0 = windowevent.getControlsItemNr_15 cPtr_0 itemHs_1_1 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) (_predefined._Nil -> <{_Tuple3!7}> False 0 _predefined._Nil) 
<{windowevent._if;143;47_96}>::I !w_0::B w_1::I = case w_0 (True -> w_1) (_ -> 0)
<{windowevent._if;143;47_95}>::I !w_0::B w_1::I = case w_0 (True -> w_1) (_ -> 0)
<{windowevent._if;143;47_94}>::I !w_0::B w_1::I = case w_0 (True -> w_1) (_ -> 0)
windowevent.getControlsItemNr_16 !cPtr_0::I !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowevent.getControlsItemNr_15 cPtr_0 wh_4_6 in <{_Tuple2!3}> (select _x_5_0::_Tuple3 1) (update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple3 2]])])) ) ) ) (_ -> windowevent.windoweventFatalError "getControlsItemNr" "window placeholder not expected")
windowevent.getPopUpControlItemNr_17 !cPtr_0::I !_x_1 = case _x_1 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (<{StdInt.==_16}> cPtr_0 w_2_11) (True -> <{_Tuple3!7}> True (<{windowevent._if;201;29_98}> (windowevent._f97_97 (<{windowhandle.==_8}> w_2_2 windowhandle.IsPopUpControl) w_2_4 w_2_3) w_2_1) (windowhandle.WItemHandle itemH_1_0)) (False -> case w_2_3 (True -> let _x_5_0 = windowevent.getPopUpControlsItemNr_18 cPtr_0 w_2_7 in <{_Tuple3!7}> (select _x_5_0::_Tuple3 0) (select _x_5_0::_Tuple3 1) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_0::_Tuple3 2]))) (False -> <{_Tuple3!7}> False 0 (windowhandle.WItemHandle itemH_1_0)) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowevent.getPopUpControlsItemNr_18 cPtr_0 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 2))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getPopUpControlsItemNr_18 cPtr_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 2]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getPopUpControlsItemNr_18 cPtr_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 2]))) ) 
windowevent.getPopUpControlsItemNr_18 !cPtr_0::I !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowevent.getPopUpControlItemNr_17 cPtr_0 itemH_1_0, found_2_1 = select _x_2_0::_Tuple3 0 in case found_2_1 (True -> <{_Tuple3!7}> found_2_1 (select _x_2_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) itemHs_1_1)) (False -> let _x_4_0 = windowevent.getPopUpControlsItemNr_18 cPtr_0 itemHs_1_1 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) (_predefined._Nil -> <{_Tuple3!7}> False 0 _predefined._Nil) 
<{windowevent._if;201;29_98}>::I !_x_0::B w_1::I = case _x_0 (True -> w_1) (_ -> 0)
windowevent._f97_97::B !_x_0::B w_1::B w_2::B = case _x_0 (True -> case w_1 (True -> w_2) (False -> False) ) (_ -> False)
windowevent.getPopUpControlItemNr_19 !cPtr_0::I !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowevent.getPopUpControlsItemNr_18 cPtr_0 wh_4_6 in <{_Tuple2!3}> (select _x_5_0::_Tuple3 1) (update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple3 2]])])) ) ) ) (_ -> windowevent.windoweventFatalError "getPopUpControlItemNr" "window placeholder not expected")
windowevent.getUpdateControl_20 !cPtr_0::I !parentPos_1 !clipRect_2 !_x_3 = case _x_3 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (<{StdInt.==_16}> cPtr_0 w_2_11) (True -> <{_Tuple3!7}> True (_predefined._Cons (deviceevents._ControlUpdateInfo w_2_1 w_2_11 (commondef.intersectRects clipRect_2 (commondef.posSizeToRect (StdIOBasic.movePoint w_2_9 parentPos_1) w_2_10))) _predefined._Nil) (windowhandle.WItemHandle itemH_1_0)) (False -> case w_2_3 (True -> let absolutePos_5_0 = StdIOBasic.movePoint w_2_9 parentPos_1, _x_5_1 = windowevent.getUpdateControls_21 cPtr_0 absolutePos_5_0 (commondef.intersectRects clipRect_2 (commondef.posSizeToRect absolutePos_5_0 w_2_10)) w_2_7 in <{_Tuple3!7}> (select _x_5_1::_Tuple3 0) (select _x_5_1::_Tuple3 1) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_1::_Tuple3 2]))) (False -> <{_Tuple3!7}> False _predefined._Nil (windowhandle.WItemHandle itemH_1_0)) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowevent.getUpdateControls_21 cPtr_0 parentPos_1 clipRect_2 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 2))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getUpdateControls_21 cPtr_0 parentPos_1 clipRect_2 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 2]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getUpdateControls_21 cPtr_0 parentPos_1 clipRect_2 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 2]))) ) 
windowevent.getUpdateControls_21 !cPtr_0::I !parentPos_1 !clipRect_2 !_x_3 = case _x_3 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowevent.getUpdateControl_20 cPtr_0 parentPos_1 clipRect_2 itemH_1_0, found_2_1 = select _x_2_0::_Tuple3 0 in case found_2_1 (True -> <{_Tuple3!7}> found_2_1 (select _x_2_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) itemHs_1_1)) (False -> let _x_4_0 = windowevent.getUpdateControls_21 cPtr_0 parentPos_1 clipRect_2 itemHs_1_1 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) (_predefined._Nil -> <{_Tuple3!7}> False _predefined._Nil _predefined._Nil) 
windowevent.getUpdateControls_22 !cPtr_0::I !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowevent.getUpdateControls_21 cPtr_0 StdIOBasic.zero_21 (commondef.sizeToRect whSize_4_12) wh_4_6 in <{_Tuple2!3}> (select _x_5_0::_Tuple3 1) (update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple3 2]])])) ) ) ) (_ -> windowevent.windoweventFatalError "getUpdateControls" "placeholder not expected")
windowevent.move_26 !action_0::I !min_1::I !max_2::I !view_3::I !osThumb_4::I = <{windowevent._c;450;11_99}> action_0 min_1 max_2 osThumb_4 view_3
<{windowevent._c;450;11_99}> !action_0::I min_1::I max_2::I osThumb_3::I view_4::I = case action_0 (0 -> StdIOCommon.SliderDecSmall) (1 -> StdIOCommon.SliderIncSmall) (2 -> StdIOCommon.SliderDecLarge) (3 -> StdIOCommon.SliderIncLarge) (4 -> StdIOCommon.SliderThumb (oswindow.fromOSscrollbarRange (_Tuple2 min_1 max_2) osThumb_3)) (5 -> StdIOCommon.SliderThumb (oswindow.fromOSscrollbarRange (_Tuple2 min_1 max_2) osThumb_3)) (6 -> StdIOCommon.SliderThumb min_1) (7 -> StdIOCommon.SliderThumb (<{StdInt.-_7}> max_2 view_4)) (8 -> StdIOCommon.SliderThumb (oswindow.fromOSscrollbarRange (_Tuple2 min_1 max_2) osThumb_3)) 
windowevent.getSliderEvent_23 action_0::I dummySlidersEvent_1 !wids_2 !iBar_3::I !osThumb_4::I !itemPtr_5::I !_x_6 = case _x_6 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (<{StdInt.==_16}> itemPtr_5 w_2_11)) (True -> case w_2_3 (True -> let _x_5_0 = windowevent.getSlidersEvent_24 action_0 dummySlidersEvent_1 wids_2 iBar_3 osThumb_4 itemPtr_5 w_2_7 in <{_Tuple3!7}> (select _x_5_0::_Tuple3 0) (select _x_5_0::_Tuple3 1) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_0::_Tuple3 2]))) (False -> <{_Tuple3!7}> False (deviceevents.ControlSliderAction dummySlidersEvent_1) (windowhandle.WItemHandle itemH_1_0)) ) (False -> case (<{windowhandle.==_8}> w_2_2 windowhandle.IsCompoundControl) (True -> let isHorizontal_5_0 = <{StdInt.==_16}> iBar_3 0, _x_5_1::B = <{windowevent._if;414;39_100}> isHorizontal_5_0 w_2_5 w_2_10 in <{_Tuple3!7}> True (deviceevents.CompoundScrollAction (deviceevents._CompoundScrollActionInfo wids_2 w_2_1 itemPtr_5 (windowevent.move_26 action_0 (select _x_5_1::_Tuple3 0) (select _x_5_1::_Tuple3 1) (select _x_5_1::_Tuple3 2) osThumb_4) (<{windowevent._if;409;59_101}> isHorizontal_5_0))) (windowhandle.WItemHandle itemH_1_0)) (False -> let sliderState_5_0 = select (windowaccess.getWItemSliderInfo w_2_5)::windowhandle._SliderInfo 2 in <{_Tuple3!7}> True (deviceevents.ControlSliderAction (deviceevents._ControlSliderInfo wids_2 w_2_1 itemPtr_5 (windowevent.move_26 action_0 (select sliderState_5_0::StdIOCommon._SliderState 0) (select sliderState_5_0::StdIOCommon._SliderState 1) 0 osThumb_4))) (windowhandle.WItemHandle itemH_1_0)) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowevent.getSlidersEvent_24 action_0 dummySlidersEvent_1 wids_2 iBar_3 osThumb_4 itemPtr_5 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 2))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getSlidersEvent_24 action_0 dummySlidersEvent_1 wids_2 iBar_3 osThumb_4 itemPtr_5 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 2]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getSlidersEvent_24 action_0 dummySlidersEvent_1 wids_2 iBar_3 osThumb_4 itemPtr_5 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 2]))) ) 
windowevent.getSlidersEvent_24 action_0::I dummySlidersEvent_1 !wids_2 !iBar_3::I !osThumb_4::I !itemPtr_5::I !_x_6 = case _x_6 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowevent.getSliderEvent_23 action_0 dummySlidersEvent_1 wids_2 iBar_3 osThumb_4 itemPtr_5 itemH_1_0, found_2_1 = select _x_2_0::_Tuple3 0 in case found_2_1 (True -> <{_Tuple3!7}> found_2_1 (select _x_2_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) itemHs_1_1)) (False -> let _x_4_0 = windowevent.getSlidersEvent_24 action_0 dummySlidersEvent_1 wids_2 iBar_3 osThumb_4 itemPtr_5 itemHs_1_1 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) (_predefined._Nil -> <{_Tuple3!7}> False (deviceevents.ControlSliderAction dummySlidersEvent_1) _predefined._Nil) 
<{windowevent._if;409;59_101}> !isHorizontal_0::B = case isHorizontal_0 (True -> StdIOCommon.Horizontal) (_ -> StdIOCommon.Vertical)
<{windowevent._if;414;39_100}> !isHorizontal_0::B w_1 w_2 = case isHorizontal_0 (True -> let domainRect_2_0 = select (windowaccess.getWItemCompoundInfo w_1)::windowhandle._CompoundInfo 0 in _Tuple3 (select domainRect_2_0::ostypes._OSRect 0) (select domainRect_2_0::ostypes._OSRect 2) (select w_2::StdIOBasic._Size 0)) (_ -> let domainRect_1_0 = select (windowaccess.getWItemCompoundInfo w_1)::windowhandle._CompoundInfo 0 in _Tuple3 (select domainRect_1_0::ostypes._OSRect 1) (select domainRect_1_0::ostypes._OSRect 3) (select w_2::StdIOBasic._Size 1))
windowevent.getSlidersEvent_25 action_0::I !wids_1 !iBar_2::I !osThumb_3::I !itemPtr_4::I !wsH_5 = case wsH_5 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> case whSize_4_12 (StdIOBasic._Size w_5_0 h_5_1 -> case (<{StdInt.==_16}> (select wids_1::windowhandle._WIDS 1) itemPtr_4) (True -> let isHorizontal_7_0 = <{StdInt.==_16}> iBar_2 0, _x_7_1::B = <{windowevent._if;376;35_102}> isHorizontal_7_0 whWindow_4_5 w_5_0 h_5_1 in <{_Tuple2!3}> (deviceevents.WindowScrollAction (deviceevents._WindowScrollActionInfo wids_1 (windowevent.move_26 action_0 (select _x_7_1::_Tuple3 0) (select _x_7_1::_Tuple3 1) (select _x_7_1::_Tuple3 2) osThumb_3) (<{windowevent._if;371;55_103}> isHorizontal_7_0))) wsH_5) (False -> let dummySlidersEvent_7_0 = deviceevents._ControlSliderInfo wids_1 0 0 StdIOCommon.SliderIncSmall, _x_7_1 = windowevent.getSlidersEvent_24 action_0 dummySlidersEvent_7_0 wids_1 iBar_2 osThumb_3 itemPtr_4 wh_4_6 in case (select _x_7_1::_Tuple3 0) (True -> <{_Tuple2!3}> (select _x_7_1::_Tuple3 1) (update wsH_5::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_7_1::_Tuple3 2]])])) (False -> windowevent.windoweventFatalError "getSlidersEvent" "SliderControl could not be located") ) ) ) ) ) ) (_ -> windowevent.windoweventFatalError "getSlidersEvent" "placeholder not expected")
<{windowevent._if;371;55_103}> !isHorizontal_0::B = case isHorizontal_0 (True -> StdIOCommon.Horizontal) (_ -> StdIOCommon.Vertical)
<{windowevent._if;376;35_102}> !isHorizontal_0::B whWindow_1 w_2::I h_3::I = case isHorizontal_0 (True -> let domainRect_2_0 = select (windowaccess.getWindowInfoWindowData whWindow_1)::windowhandle._WindowData 0 in _Tuple3 (select domainRect_2_0::ostypes._OSRect 0) (select domainRect_2_0::ostypes._OSRect 2) w_2) (_ -> let domainRect_1_0 = select (windowaccess.getWindowInfoWindowData whWindow_1)::windowhandle._WindowData 0 in _Tuple3 (select domainRect_1_0::ostypes._OSRect 1) (select domainRect_1_0::ostypes._OSRect 3) h_3)
windowevent.getSliderEvent_27 !wids_0 !dir_1::I !itemPtr_2::I !_x_3 = case _x_3 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (<{StdInt.==_16}> itemPtr_2 w_2_11)) (True -> case w_2_3 (True -> let _x_5_0 = windowevent.getScrollEvent_28 wids_0 dir_1 itemPtr_2 w_2_7 in <{_Tuple3!7}> (select _x_5_0::_Tuple3 0) (select _x_5_0::_Tuple3 1) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_0::_Tuple3 2]))) (False -> <{_Tuple3!7}> False Data.Maybe.Nothing (windowhandle.WItemHandle itemH_1_0)) ) (False -> case (<{windowhandle.==_8}> w_2_2 windowhandle.IsCompoundControl) (True -> case (Data.Maybe.isNothing (select (windowaccess.getWItemCompoundInfo w_2_5)::windowhandle._CompoundInfo 3)) (True -> <{_Tuple3!7}> True Data.Maybe.Nothing (windowhandle.WItemHandle itemH_1_0)) (False -> <{_Tuple3!7}> True (Data.Maybe.Just (deviceevents.CompoundScrollAction (deviceevents._CompoundScrollActionInfo wids_0 w_2_1 itemPtr_2 (<{windowevent._if;520;59_104}> (<{StdInt.==_16}> dir_1 0)) StdIOCommon.Vertical))) (windowhandle.WItemHandle itemH_1_0)) ) (False -> <{_Tuple3!7}> True (Data.Maybe.Just (deviceevents.ControlSliderAction (deviceevents._ControlSliderInfo wids_0 w_2_1 itemPtr_2 (<{windowevent._if;529;59_105}> (<{StdInt.==_16}> dir_1 0))))) (windowhandle.WItemHandle itemH_1_0)) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowevent.getScrollEvent_28 wids_0 dir_1 itemPtr_2 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 2))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getScrollEvent_28 wids_0 dir_1 itemPtr_2 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 2]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.getScrollEvent_28 wids_0 dir_1 itemPtr_2 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 2]))) ) 
windowevent.getScrollEvent_28 !wids_0 !dir_1::I !itemPtr_2::I !_x_3 = case _x_3 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowevent.getSliderEvent_27 wids_0 dir_1 itemPtr_2 itemH_1_0, found_2_1 = select _x_2_0::_Tuple3 0 in case found_2_1 (True -> <{_Tuple3!7}> found_2_1 (select _x_2_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) itemHs_1_1)) (False -> let _x_4_0 = windowevent.getScrollEvent_28 wids_0 dir_1 itemPtr_2 itemHs_1_1 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) (_predefined._Nil -> <{_Tuple3!7}> False Data.Maybe.Nothing _predefined._Nil) 
<{windowevent._if;529;59_105}> !_x_0::B = case _x_0 (True -> StdIOCommon.SliderDecSmall) (_ -> StdIOCommon.SliderIncSmall)
<{windowevent._if;520;59_104}> !_x_0::B = case _x_0 (True -> StdIOCommon.SliderDecSmall) (_ -> StdIOCommon.SliderIncSmall)
<{windowevent.getScrollEvent`_29}> !wids_0 !itemPtr_1::I !dir_2::I !wsH_3 = case wsH_3 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> case whSize_4_12 (StdIOBasic._Size w_5_0 h_5_1 -> case (<{StdInt.==_16}> (select wids_0::windowhandle._WIDS 1) itemPtr_1) (True -> case (Data.Maybe.isNothing (select (windowaccess.getWindowInfoWindowData whWindow_4_5)::windowhandle._WindowData 3)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing wsH_3) (False -> <{_Tuple2!3}> (Data.Maybe.Just (deviceevents.WindowScrollAction (deviceevents._WindowScrollActionInfo wids_0 (<{windowevent._if;484;51_106}> (<{StdInt.==_16}> dir_2 0)) StdIOCommon.Vertical))) wsH_3) ) (False -> let _x_7_0 = windowevent.getScrollEvent_28 wids_0 dir_2 itemPtr_1 wh_4_6 in case (select _x_7_0::_Tuple3 0) (True -> <{_Tuple2!3}> (select _x_7_0::_Tuple3 1) (update wsH_3::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_7_0::_Tuple3 2]])])) (False -> windowevent.windoweventFatalError "getScrollEvent" "SliderControl could not be located") ) ) ) ) ) ) (_ -> windowevent.windoweventFatalError "getScrollEvent`" "placeholder not expected")
<{windowevent._if;484;51_106}> !_x_0::B = case _x_0 (True -> StdIOCommon.SliderDecSmall) (_ -> StdIOCommon.SliderIncSmall)
windowevent.trackingKeyboard::B !wPtr_0::I !cPtr_1::I !_x_2 = case _x_2 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iostate._InputTrack itWindow_2_0 itControl_2_1 _x_2_2 -> case _x_2_2 (iostate._InputTrackKind itkMouse_3_0 itkKeyboard_3_1 itkChar_3_2 itkSlider_3_3 -> case (<{StdInt.==_16}> wPtr_0 itWindow_2_0) (True -> case (<{StdInt.==_16}> cPtr_1 itControl_2_1) (True -> itkKeyboard_3_1) (False -> False) ) (False -> False) ) ) ) (_ -> False)
windowevent.untrackKeyboard !_x_0 = case _x_0 (Data.Maybe.Just it_1_0 -> case it_1_0 (iostate._InputTrack itWindow_2_0 itControl_2_1 itk_2_2 -> case (select itk_2_2::iostate._InputTrackKind 0) (True -> Data.Maybe.Just (update it_1_0::iostate._InputTrack [2:update itk_2_2::iostate._InputTrackKind [1:False]])) (False -> Data.Maybe.Nothing) ) ) (_ -> _x_0)
windowevent.trackKeyboard !wPtr_0::I !cPtr_1::I !_x_2 = case _x_2 (Data.Maybe.Just it_1_0 -> case it_1_0 (iostate._InputTrack itWindow_2_0 itControl_2_1 itk_2_2 -> case (case (StdBool.not (<{StdInt.==_16}> wPtr_0 itWindow_2_0)) (True -> True) (False -> StdBool.not (<{StdInt.==_16}> cPtr_1 itControl_2_1)) ) (True -> windowevent.windoweventFatalError "trackKeyboard" "incorrect window/control parameters") (False -> Data.Maybe.Just (update it_1_0::iostate._InputTrack [2:update itk_2_2::iostate._InputTrackKind [1:True]])) ) ) (_ -> Data.Maybe.Just (iostate._InputTrack wPtr_0 cPtr_1 (iostate._InputTrackKind False True 0 Data.Maybe.Nothing)))
windowevent.keyState_34 !keycode_0::I !state_1::I !mods_2::I = let _x_1_0 = <{windowevent._c;712;31_107}> keycode_0 in case (select _x_1_0::_Tuple2 0) (True -> StdIOCommon.SpecialKey (select _x_1_0::_Tuple2 1) (<{windowevent._c;708;31_108}> state_1) (clCCall_12.toModifiers mods_2)) (False -> StdIOCommon.CharKey (StdChar.toChar_21 keycode_0) (<{windowevent._c;708;31_109}> state_1)) 
<{windowevent._c;708;31_109}> !state_0::I = case state_0 (1 -> StdIOCommon.KeyDown False) (4 -> StdIOCommon.KeyDown True) (2 -> StdIOCommon.KeyUp) 
<{windowevent._c;708;31_108}> !state_0::I = case state_0 (1 -> StdIOCommon.KeyDown False) (4 -> StdIOCommon.KeyDown True) (2 -> StdIOCommon.KeyUp) 
<{windowevent._c;712;31_107}> !keycode_0::I = case keycode_0 (8 -> _Tuple2 True oskey.backSpaceKey) (1 -> _Tuple2 True oskey.beginKey) (127 -> _Tuple2 True oskey.deleteKey) (31 -> _Tuple2 True oskey.downKey) (4 -> _Tuple2 True oskey.endKey) (27 -> _Tuple2 True oskey.escapeKey) (5 -> _Tuple2 True oskey.helpKey) (28 -> _Tuple2 True oskey.leftKey) (12 -> _Tuple2 True oskey.pgDownKey) (11 -> _Tuple2 True oskey.pgUpKey) (13 -> _Tuple2 True oskey.enterKey) (29 -> _Tuple2 True oskey.rightKey) (30 -> _Tuple2 True oskey.upKey) (1001 -> _Tuple2 True oskey.f1Key) (1002 -> _Tuple2 True oskey.f2Key) (1003 -> _Tuple2 True oskey.f3Key) (1004 -> _Tuple2 True oskey.f4Key) (1005 -> _Tuple2 True oskey.f5Key) (1006 -> _Tuple2 True oskey.f6Key) (1007 -> _Tuple2 True oskey.f7Key) (1008 -> _Tuple2 True oskey.f8Key) (1009 -> _Tuple2 True oskey.f9Key) (1010 -> _Tuple2 True oskey.f10Key) (1011 -> _Tuple2 True oskey.f11Key) (1012 -> _Tuple2 True oskey.f12Key) (_ -> _Tuple2 False StdMisc.undef)
windowevent.okWindowKeyboardState_30 wPtr_0::I !keycode_1::I !state_2::I !mods_3::I !wsH_4 !inputTrack_5 = case wsH_4 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> case (<{windowhandle.==_6}> whKind_4_1 windowhandle.IsDialog) (True -> <{_Tuple4!13}> False StdMisc.undef wsH_4 inputTrack_5) (False -> case (windowevent.trackingKeyboard wPtr_0 0 inputTrack_5) (True -> let keystate_7_0 = windowevent.keyState_34 keycode_1 state_2 mods_3, pressState_7_1 = StdIOCommon.getKeyboardStateKeyState keystate_7_0 in case (<{StdIOCommon.==_20}> pressState_7_1 (StdIOCommon.KeyDown False)) (True -> <{_Tuple4!13}> False StdMisc.undef wsH_4 inputTrack_5) (False -> case (<{StdIOCommon.==_20}> pressState_7_1 StdIOCommon.KeyUp) (True -> let _x_10_0 = StdWindowAttribute.getWindowKeyboardAtt (select (commondef.cselect StdWindowAttribute.isWindowKeyboard (StdWindowDef.WindowKeyboard (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) whAtts_4_9)::_Tuple2 1) in <{_Tuple4!13}> (windowevent._f110_110 (select _x_10_0::_Tuple3 0 keystate_7_0) _x_10_0) keystate_7_0 wsH_4 (windowevent.untrackKeyboard inputTrack_5)) (False -> let _x_10_0 = StdWindowAttribute.getWindowKeyboardAtt (select (commondef.cselect StdWindowAttribute.isWindowKeyboard (StdWindowDef.WindowKeyboard (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) whAtts_4_9)::_Tuple2 1) in <{_Tuple4!13}> (windowevent._f111_111 (select _x_10_0::_Tuple3 0 keystate_7_0) _x_10_0) keystate_7_0 wsH_4 inputTrack_5) ) ) (False -> let keystate_7_0 = windowevent.keyState_34 keycode_1 state_2 mods_3 in case (<{StdIOCommon.==_20}> (StdIOCommon.getKeyboardStateKeyState keystate_7_0) (StdIOCommon.KeyDown False)) (True -> let _x_9_0 = StdWindowAttribute.getWindowKeyboardAtt (select (commondef.cselect StdWindowAttribute.isWindowKeyboard (StdWindowDef.WindowKeyboard (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) whAtts_4_9)::_Tuple2 1) in <{_Tuple4!13}> (windowevent._f112_112 (select _x_9_0::_Tuple3 0 keystate_7_0) _x_9_0) keystate_7_0 wsH_4 (windowevent.trackKeyboard wPtr_0 0 inputTrack_5)) (False -> <{_Tuple4!13}> False StdMisc.undef wsH_4 inputTrack_5) ) ) ) ) ) ) (_ -> windowevent.windoweventFatalError "okWindowKeyboardState" "placeholder not expected")
windowevent._f112_112::B !_x_0::B _x_1 = case _x_0 (True -> <{StdIOCommon.==_13}> (select _x_1::_Tuple3 1) StdIOCommon.Able) (_ -> False)
windowevent._f111_111::B !_x_0::B _x_1 = case _x_0 (True -> <{StdIOCommon.==_13}> (select _x_1::_Tuple3 1) StdIOCommon.Able) (_ -> False)
windowevent._f110_110::B !_x_0::B _x_1 = case _x_0 (True -> <{StdIOCommon.==_13}> (select _x_1::_Tuple3 1) StdIOCommon.Able) (_ -> False)
windowevent.okControlItemNrKeyboardState_31 !wPtr_0::I !itemPtr_1::I !contextAble_2::B !keycode_3::I !state_4::I !mods_5::I !_x_6 !inputTrack_7 = case _x_6 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (<{StdInt.==_16}> itemPtr_1 w_2_11)) (True -> case (StdBool.not w_2_3) (True -> <{_Tuple6!55}> False False 0 StdMisc.undef (windowhandle.WItemHandle itemH_1_0) inputTrack_7) (False -> let _x_5_0 = windowevent.okControlsItemNrKeyboardState_32 wPtr_0 itemPtr_1 (windowevent._f113_113 contextAble_2 w_2_4) keycode_3 state_4 mods_5 (select itemH_1_0::windowhandle._WItemHandle 7) inputTrack_7 in <{_Tuple6!55}> (select _x_5_0::_Tuple6 0) (select _x_5_0::_Tuple6 1) (select _x_5_0::_Tuple6 2) (select _x_5_0::_Tuple6 3) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_0::_Tuple6 4])) (select _x_5_0::_Tuple6 5)) ) (False -> case (windowevent.trackingKeyboard wPtr_0 itemPtr_1 inputTrack_7) (True -> let keystate_5_0 = windowevent.keyState_34 keycode_3 state_4 mods_5, pressState_5_1 = StdIOCommon.getKeyboardStateKeyState keystate_5_0 in case (<{StdIOCommon.==_20}> pressState_5_1 (StdIOCommon.KeyDown False)) (True -> <{_Tuple6!55}> True False 0 StdMisc.undef (windowhandle.WItemHandle itemH_1_0) inputTrack_7) (False -> case (<{StdIOCommon.==_20}> pressState_5_1 StdIOCommon.KeyUp) (True -> <{_Tuple6!55}> True (windowevent._f115_115 (windowevent._f114_114 contextAble_2 w_2_4) w_2_6 keystate_5_0) w_2_1 keystate_5_0 (windowhandle.WItemHandle itemH_1_0) (windowevent.untrackKeyboard inputTrack_7)) (False -> <{_Tuple6!55}> True (windowevent._f117_117 (windowevent._f116_116 contextAble_2 w_2_4) w_2_6 keystate_5_0) w_2_1 keystate_5_0 (windowhandle.WItemHandle itemH_1_0) inputTrack_7) ) ) (False -> let keystate_5_0 = windowevent.keyState_34 keycode_3 state_4 mods_5 in case (<{StdIOCommon.==_20}> (StdIOCommon.getKeyboardStateKeyState keystate_5_0) (StdIOCommon.KeyDown False)) (True -> <{_Tuple6!55}> True (windowevent._f119_119 (windowevent._f118_118 contextAble_2 w_2_4) w_2_6 keystate_5_0) w_2_1 keystate_5_0 (windowhandle.WItemHandle itemH_1_0) (windowevent.trackKeyboard wPtr_0 itemPtr_1 inputTrack_7)) (False -> <{_Tuple6!55}> True False 0 StdMisc.undef (windowhandle.WItemHandle itemH_1_0) inputTrack_7) ) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowevent.okControlsItemNrKeyboardState_32 wPtr_0 itemPtr_1 contextAble_2 keycode_3 state_4 mods_5 itemHs_1_0 inputTrack_7 in <{_Tuple6!55}> (select _x_2_0::_Tuple6 0) (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (windowhandle.WListLSHandle (select _x_2_0::_Tuple6 4)) (select _x_2_0::_Tuple6 5)) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.okControlsItemNrKeyboardState_32 wPtr_0 itemPtr_1 contextAble_2 keycode_3 state_4 mods_5 itemHs_2_1 inputTrack_7 in <{_Tuple6!55}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple6 4])) (select _x_3_0::_Tuple6 5)) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.okControlsItemNrKeyboardState_32 wPtr_0 itemPtr_1 contextAble_2 keycode_3 state_4 mods_5 itemHs_2_1 inputTrack_7 in <{_Tuple6!55}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple6 4])) (select _x_3_0::_Tuple6 5)) ) 
windowevent.okControlsItemNrKeyboardState_32 !wPtr_0::I !itemPtr_1::I !contextAble_2::B !keycode_3::I !state_4::I !mods_5::I !_x_6 !inputTrack_7 = case _x_6 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowevent.okControlItemNrKeyboardState_31 wPtr_0 itemPtr_1 contextAble_2 keycode_3 state_4 mods_5 itemH_1_0 inputTrack_7, found_2_1 = select _x_2_0::_Tuple6 0 in case found_2_1 (True -> <{_Tuple6!55}> found_2_1 (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (_predefined._Cons (select _x_2_0::_Tuple6 4) itemHs_1_1) (select _x_2_0::_Tuple6 5)) (False -> let _x_4_0 = windowevent.okControlsItemNrKeyboardState_32 wPtr_0 itemPtr_1 contextAble_2 keycode_3 state_4 mods_5 itemHs_1_1 (select _x_2_0::_Tuple6 5) in <{_Tuple6!55}> (select _x_4_0::_Tuple6 0) (select _x_4_0::_Tuple6 1) (select _x_4_0::_Tuple6 2) (select _x_4_0::_Tuple6 3) (_predefined._Cons (select _x_2_0::_Tuple6 4) (select _x_4_0::_Tuple6 4)) (select _x_4_0::_Tuple6 5)) ) (_ -> <{_Tuple6!55}> False False 0 StdMisc.undef _x_6 inputTrack_7)
windowevent._f119_119::B !_x_0::B w_1 keystate_2 = case _x_0 (True -> let noKeyboardAtt_2_0 = StdControlDef.ControlKeyboard (StdFunc.const False) StdIOCommon.Unable StdMisc.undef, _x_2_1 = StdControlAttribute.getControlKeyboardAtt (select (commondef.cselect StdControlAttribute.isControlKeyboard noKeyboardAtt_2_0 w_1)::_Tuple2 1) in case (StdIOCommon.enabled (select _x_2_1::_Tuple3 1)) (True -> select _x_2_1::_Tuple3 0 keystate_2) (False -> False) ) (_ -> False)
windowevent._f118_118::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent._f117_117::B !_x_0::B w_1 keystate_2 = case _x_0 (True -> let noKeyboardAtt_2_0 = StdControlDef.ControlKeyboard (StdFunc.const False) StdIOCommon.Unable StdMisc.undef, _x_2_1 = StdControlAttribute.getControlKeyboardAtt (select (commondef.cselect StdControlAttribute.isControlKeyboard noKeyboardAtt_2_0 w_1)::_Tuple2 1) in case (StdIOCommon.enabled (select _x_2_1::_Tuple3 1)) (True -> select _x_2_1::_Tuple3 0 keystate_2) (False -> False) ) (_ -> False)
windowevent._f116_116::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent._f115_115::B !_x_0::B w_1 keystate_2 = case _x_0 (True -> let noKeyboardAtt_2_0 = StdControlDef.ControlKeyboard (StdFunc.const False) StdIOCommon.Unable StdMisc.undef, _x_2_1 = StdControlAttribute.getControlKeyboardAtt (select (commondef.cselect StdControlAttribute.isControlKeyboard noKeyboardAtt_2_0 w_1)::_Tuple2 1) in case (StdIOCommon.enabled (select _x_2_1::_Tuple3 1)) (True -> select _x_2_1::_Tuple3 0 keystate_2) (False -> False) ) (_ -> False)
windowevent._f114_114::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent._f113_113::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent.okControlItemsNrKeyboardState_33 !wPtr_0::I !itemPtr_1::I !keycode_2::I !state_3::I !mods_4::I !wsH_5 !inputTrack_6 = case wsH_5 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowevent.okControlsItemNrKeyboardState_32 wPtr_0 itemPtr_1 True keycode_2 state_3 mods_4 wh_4_6 inputTrack_6 in <{_Tuple5!27}> (select _x_5_0::_Tuple6 1) (select _x_5_0::_Tuple6 2) (select _x_5_0::_Tuple6 3) (update wsH_5::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple6 4]])]) (select _x_5_0::_Tuple6 5)) ) ) ) (_ -> windowevent.windoweventFatalError "okControlItemsNrKeyboardState" "window placeholder not expected")
<{windowevent.getControlKeyFocusItemNr`_49}> !activated_0::B !cPtr_1::I !_x_2 = case _x_2 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (<{StdInt.==_16}> cPtr_1 w_2_11) (True -> case (StdBool.not (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{windowhandle.==_8}>)) w_2_2 (_predefined._Cons windowhandle.IsCompoundControl (_predefined._Cons windowhandle.IsCustomControl (_predefined._Cons windowhandle.IsEditControl (_predefined._Cons windowhandle.IsPopUpControl _predefined._Nil)))))) (True -> <{_Tuple3!7}> True 0 (windowhandle.WItemHandle itemH_1_0)) (False -> <{_Tuple3!7}> True w_2_1 (windowhandle.WItemHandle itemH_1_0)) ) (False -> case (StdBool.not (windowhandle.isRecursiveControl w_2_2)) (True -> <{_Tuple3!7}> False 0 (windowhandle.WItemHandle itemH_1_0)) (False -> let _x_5_0 = <{windowevent.getControlsKeyFocusItemNr`_50}> activated_0 cPtr_1 w_2_7 in <{_Tuple3!7}> (select _x_5_0::_Tuple3 0) (select _x_5_0::_Tuple3 1) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_0::_Tuple3 2]))) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = <{windowevent.getControlsKeyFocusItemNr`_50}> activated_0 cPtr_1 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 2))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = <{windowevent.getControlsKeyFocusItemNr`_50}> activated_0 cPtr_1 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 2]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = <{windowevent.getControlsKeyFocusItemNr`_50}> activated_0 cPtr_1 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 2]))) ) 
<{windowevent.getControlsKeyFocusItemNr`_50}> !activated_0::B !cPtr_1::I !_x_2 = case _x_2 (_predefined._Nil -> <{_Tuple3!7}> False 0 _predefined._Nil) (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = <{windowevent.getControlKeyFocusItemNr`_49}> activated_0 cPtr_1 itemH_1_0, found_2_1 = select _x_2_0::_Tuple3 0 in case found_2_1 (True -> <{_Tuple3!7}> found_2_1 (select _x_2_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) itemHs_1_1)) (False -> let _x_4_0 = <{windowevent.getControlsKeyFocusItemNr`_50}> activated_0 cPtr_1 itemHs_1_1 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) 
windowevent.getControlKeyFocusItemNr !activated_0::B !cPtr_1::I !wsH_2 = case wsH_2 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> let _x_4_0 = <{windowevent.getControlsKeyFocusItemNr`_50}> activated_0 cPtr_1 (select wH_3_1::windowhandle._WindowHandle 6) in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_4_0::_Tuple3 2]])])) ) ) (_ -> windowevent.windoweventFatalError "getControlKeyFocusItemNr" "window placeholder not expected")
windowevent.okWindowKeyLost_35 !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> case (<{windowhandle.==_6}> whKind_4_1 windowhandle.IsDialog) (True -> <{_Tuple2!3}> False wsH_0) (False -> let _x_6_0 = StdWindowAttribute.getWindowKeyboardAtt (select (commondef.cselect StdWindowAttribute.isWindowKeyboard (StdWindowDef.WindowKeyboard (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) whAtts_4_9)::_Tuple2 1) in <{_Tuple2!3}> (windowevent._f120_120 (select _x_6_0::_Tuple3 0 StdIOCommon.KeyLost) _x_6_0) wsH_0) ) ) ) ) (_ -> windowevent.windoweventFatalError "okWindowKeyLost" "placeholder not expected")
windowevent._f120_120::B !_x_0::B _x_1 = case _x_0 (True -> <{StdIOCommon.==_13}> (select _x_1::_Tuple3 1) StdIOCommon.Able) (_ -> False)
windowevent.okControlItemNrKeyLost_36 !contextAble_0::B !itemPtr_1::I !_x_2 = case _x_2 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (<{StdInt.==_16}> itemPtr_1 w_2_11)) (True -> case w_2_3 (True -> let _x_5_0 = windowevent.okControlsItemNrKeyLost_37 (windowevent._f121_121 contextAble_0 w_2_4) itemPtr_1 w_2_7 in <{_Tuple4!15}> (select _x_5_0::_Tuple4 0) (select _x_5_0::_Tuple4 1) (select _x_5_0::_Tuple4 2) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_0::_Tuple4 3]))) (False -> <{_Tuple4!15}> False False 0 (windowhandle.WItemHandle itemH_1_0)) ) (False -> <{_Tuple4!15}> True (windowevent._f123_123 (windowevent._f122_122 contextAble_0 w_2_4) w_2_6) w_2_1 (windowhandle.WItemHandle itemH_1_0)) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowevent.okControlsItemNrKeyLost_37 contextAble_0 itemPtr_1 itemHs_1_0 in <{_Tuple4!15}> (select _x_2_0::_Tuple4 0) (select _x_2_0::_Tuple4 1) (select _x_2_0::_Tuple4 2) (windowhandle.WListLSHandle (select _x_2_0::_Tuple4 3))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.okControlsItemNrKeyLost_37 contextAble_0 itemPtr_1 itemHs_2_1 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (select _x_3_0::_Tuple4 1) (select _x_3_0::_Tuple4 2) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple4 3]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.okControlsItemNrKeyLost_37 contextAble_0 itemPtr_1 itemHs_2_1 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (select _x_3_0::_Tuple4 1) (select _x_3_0::_Tuple4 2) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple4 3]))) ) 
windowevent.okControlsItemNrKeyLost_37 !contextAble_0::B !itemPtr_1::I !_x_2 = case _x_2 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowevent.okControlItemNrKeyLost_36 contextAble_0 itemPtr_1 itemH_1_0, found_2_1 = select _x_2_0::_Tuple4 0 in case found_2_1 (True -> <{_Tuple4!15}> found_2_1 (select _x_2_0::_Tuple4 1) (select _x_2_0::_Tuple4 2) (_predefined._Cons (select _x_2_0::_Tuple4 3) itemHs_1_1)) (False -> let _x_4_0 = windowevent.okControlsItemNrKeyLost_37 contextAble_0 itemPtr_1 itemHs_1_1 in <{_Tuple4!15}> (select _x_4_0::_Tuple4 0) (select _x_4_0::_Tuple4 1) (select _x_4_0::_Tuple4 2) (_predefined._Cons (select _x_2_0::_Tuple4 3) (select _x_4_0::_Tuple4 3))) ) (_predefined._Nil -> <{_Tuple4!15}> False False 0 _predefined._Nil) 
windowevent._f123_123::B !_x_0::B w_1 = case _x_0 (True -> let _x_2_0 = StdControlAttribute.getControlKeyboardAtt (select (commondef.cselect StdControlAttribute.isControlKeyboard (StdControlDef.ControlKeyboard (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) w_1)::_Tuple2 1) in case (StdIOCommon.enabled (select _x_2_0::_Tuple3 1)) (True -> select _x_2_0::_Tuple3 0 StdIOCommon.KeyLost) (False -> False) ) (_ -> False)
windowevent._f122_122::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent._f121_121::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent.okControlItemNrsKeyLost_38 !itemPtr_0::I !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowevent.okControlsItemNrKeyLost_37 True itemPtr_0 wh_4_6 in <{_Tuple3!7}> (select _x_5_0::_Tuple4 1) (select _x_5_0::_Tuple4 2) (update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple4 3]])])) ) ) ) (_ -> windowevent.windoweventFatalError "okControlItemNrsKeyLost" "placeholder not expected")
windowevent.okWindowMouseLost_39 !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> case (<{windowhandle.==_6}> whKind_4_1 windowhandle.IsDialog) (True -> <{_Tuple2!3}> False wsH_0) (False -> let _x_6_0 = StdWindowAttribute.getWindowMouseAtt (select (commondef.cselect StdWindowAttribute.isWindowMouse (StdWindowDef.WindowMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) whAtts_4_9)::_Tuple2 1) in <{_Tuple2!3}> (windowevent._f124_124 (select _x_6_0::_Tuple3 0 StdIOCommon.MouseLost) _x_6_0) wsH_0) ) ) ) ) (_ -> windowevent.windoweventFatalError "okWindowMouseLost" "placeholder not expected")
windowevent._f124_124::B !_x_0::B _x_1 = case _x_0 (True -> <{StdIOCommon.==_13}> (select _x_1::_Tuple3 1) StdIOCommon.Able) (_ -> False)
windowevent.okControlItemNrMouseLost_40 !contextAble_0::B !itemPtr_1::I !_x_2 = case _x_2 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (<{StdInt.==_16}> itemPtr_1 w_2_11)) (True -> case w_2_3 (True -> let _x_5_0 = windowevent.okControlsItemNrMouseLost_41 (windowevent._f125_125 contextAble_0 w_2_4) itemPtr_1 w_2_7 in <{_Tuple4!15}> (select _x_5_0::_Tuple4 0) (select _x_5_0::_Tuple4 1) (select _x_5_0::_Tuple4 2) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_0::_Tuple4 3]))) (False -> <{_Tuple4!15}> False False 0 (windowhandle.WItemHandle itemH_1_0)) ) (False -> <{_Tuple4!15}> True (windowevent._f127_127 (windowevent._f126_126 contextAble_0 w_2_4) w_2_6) w_2_1 (windowhandle.WItemHandle itemH_1_0)) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowevent.okControlsItemNrMouseLost_41 contextAble_0 itemPtr_1 itemHs_1_0 in <{_Tuple4!15}> (select _x_2_0::_Tuple4 0) (select _x_2_0::_Tuple4 1) (select _x_2_0::_Tuple4 2) (windowhandle.WListLSHandle (select _x_2_0::_Tuple4 3))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.okControlsItemNrMouseLost_41 contextAble_0 itemPtr_1 itemHs_2_1 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (select _x_3_0::_Tuple4 1) (select _x_3_0::_Tuple4 2) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple4 3]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.okControlsItemNrMouseLost_41 contextAble_0 itemPtr_1 itemHs_2_1 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (select _x_3_0::_Tuple4 1) (select _x_3_0::_Tuple4 2) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple4 3]))) ) 
windowevent.okControlsItemNrMouseLost_41 !contextAble_0::B !itemPtr_1::I !_x_2 = case _x_2 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowevent.okControlItemNrMouseLost_40 contextAble_0 itemPtr_1 itemH_1_0, found_2_1 = select _x_2_0::_Tuple4 0 in case found_2_1 (True -> <{_Tuple4!15}> found_2_1 (select _x_2_0::_Tuple4 1) (select _x_2_0::_Tuple4 2) (_predefined._Cons (select _x_2_0::_Tuple4 3) itemHs_1_1)) (False -> let _x_4_0 = windowevent.okControlsItemNrMouseLost_41 contextAble_0 itemPtr_1 itemHs_1_1 in <{_Tuple4!15}> (select _x_4_0::_Tuple4 0) (select _x_4_0::_Tuple4 1) (select _x_4_0::_Tuple4 2) (_predefined._Cons (select _x_2_0::_Tuple4 3) (select _x_4_0::_Tuple4 3))) ) (_predefined._Nil -> <{_Tuple4!15}> False False 0 _predefined._Nil) 
windowevent._f127_127::B !_x_0::B w_1 = case _x_0 (True -> let _x_2_0 = StdControlAttribute.getControlMouseAtt (select (commondef.cselect StdControlAttribute.isControlMouse (StdControlDef.ControlMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) w_1)::_Tuple2 1) in case (StdIOCommon.enabled (select _x_2_0::_Tuple3 1)) (True -> select _x_2_0::_Tuple3 0 StdIOCommon.MouseLost) (False -> False) ) (_ -> False)
windowevent._f126_126::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent._f125_125::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent.okControlItemNrsMouseLost_42 !itemPtr_0::I !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowevent.okControlsItemNrMouseLost_41 True itemPtr_0 wh_4_6 in <{_Tuple3!7}> (select _x_5_0::_Tuple4 1) (select _x_5_0::_Tuple4 2) (update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple4 3]])])) ) ) ) (_ -> windowevent.windoweventFatalError "okControlItemNrsMouseLost" "placeholder not expected")
windowevent.trackingMouse::B !wPtr_0::I !cPtr_1::I !_x_2 = case _x_2 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (iostate._InputTrack itWindow_2_0 itControl_2_1 _x_2_2 -> case _x_2_2 (iostate._InputTrackKind itkMouse_3_0 itkKeyboard_3_1 itkChar_3_2 itkSlider_3_3 -> case (<{StdInt.==_16}> wPtr_0 itWindow_2_0) (True -> case (<{StdInt.==_16}> cPtr_1 itControl_2_1) (True -> itkMouse_3_0) (False -> False) ) (False -> False) ) ) ) (_ -> False)
windowevent.untrackMouse !_x_0 = case _x_0 (Data.Maybe.Just it_1_0 -> case it_1_0 (iostate._InputTrack itWindow_2_0 itControl_2_1 itk_2_2 -> case (select itk_2_2::iostate._InputTrackKind 1) (True -> Data.Maybe.Just (update it_1_0::iostate._InputTrack [2:update itk_2_2::iostate._InputTrackKind [0:False]])) (False -> Data.Maybe.Nothing) ) ) (_ -> _x_0)
windowevent.trackMouse !wPtr_0::I !cPtr_1::I !_x_2 = case _x_2 (Data.Maybe.Just it_1_0 -> case it_1_0 (iostate._InputTrack itWindow_2_0 itControl_2_1 itk_2_2 -> case (case (StdBool.not (<{StdInt.==_16}> wPtr_0 itWindow_2_0)) (True -> True) (False -> StdBool.not (<{StdInt.==_16}> cPtr_1 itControl_2_1)) ) (True -> windowevent.windoweventFatalError "trackMouse" "incorrect window/control parameters") (False -> Data.Maybe.Just (update it_1_0::iostate._InputTrack [2:update itk_2_2::iostate._InputTrackKind [0:True]])) ) ) (_ -> Data.Maybe.Just (iostate._InputTrack wPtr_0 cPtr_1 (iostate._InputTrackKind True False 0 Data.Maybe.Nothing)))
windowevent.mouseState_47 modifiers_0 nrDown_1::I !action_2::I pos_3 = <{windowevent._c;1050;31_128}> action_2 pos_3 modifiers_0 nrDown_1
<{windowevent._c;1050;31_128}> !action_0::I pos_1 modifiers_2 nrDown_3::I = case action_0 (0 -> StdIOCommon.MouseMove pos_1 modifiers_2) (50 -> StdIOCommon.MouseUp pos_1 modifiers_2) (40 -> StdIOCommon.MouseDrag pos_1 modifiers_2) (_ -> StdIOCommon.MouseDown pos_1 modifiers_2 nrDown_3)
windowevent.okWindowMouseState_43 wPtr_0::I modifiers_1 nrDown_2::I !action_3::I !eventPos_4 !wsH_5 !inputTrack_6 = case wsH_5 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> case (<{windowhandle.==_6}> whKind_4_1 windowhandle.IsDialog) (True -> <{_Tuple4!13}> False StdMisc.undef wsH_5 inputTrack_6) (False -> case (windowevent.trackingMouse wPtr_0 0 inputTrack_6) (True -> let origin_7_0 = select (windowaccess.getWindowInfoWindowData whWindow_4_5)::windowhandle._WindowData 1, mousestate_7_1 = windowevent.mouseState_47 modifiers_1 nrDown_2 action_3 (<{StdIOBasic.+_19}> eventPos_4 origin_7_0), buttonstate_7_2 = StdIOCommon.getMouseStateButtonState mousestate_7_1 in case (case (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdIOCommon.==_24}>)) buttonstate_7_2 (_predefined._Cons StdIOCommon.ButtonDown (_predefined._Cons StdIOCommon.ButtonDoubleDown (_predefined._Cons StdIOCommon.ButtonTripleDown _predefined._Nil)))) (True -> True) (False -> <{StdIOCommon.==_24}> buttonstate_7_2 StdIOCommon.ButtonStillUp) ) (True -> <{_Tuple4!13}> False StdMisc.undef wsH_5 inputTrack_6) (False -> case (<{StdIOCommon.==_24}> buttonstate_7_2 StdIOCommon.ButtonUp) (True -> let _x_10_0 = StdWindowAttribute.getWindowMouseAtt (select (commondef.cselect StdWindowAttribute.isWindowMouse (StdWindowDef.WindowMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) whAtts_4_9)::_Tuple2 1) in <{_Tuple4!13}> (windowevent._f129_129 (select _x_10_0::_Tuple3 0 mousestate_7_1) _x_10_0) mousestate_7_1 wsH_5 (windowevent.untrackMouse inputTrack_6)) (False -> let _x_10_0 = StdWindowAttribute.getWindowMouseAtt (select (commondef.cselect StdWindowAttribute.isWindowMouse (StdWindowDef.WindowMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) whAtts_4_9)::_Tuple2 1) in <{_Tuple4!13}> (windowevent._f130_130 (select _x_10_0::_Tuple3 0 mousestate_7_1) _x_10_0) mousestate_7_1 wsH_5 inputTrack_6) ) ) (False -> let origin_7_0 = select (windowaccess.getWindowInfoWindowData whWindow_4_5)::windowhandle._WindowData 1, mousestate_7_1 = windowevent.mouseState_47 modifiers_1 nrDown_2 action_3 (<{StdIOBasic.+_19}> eventPos_4 origin_7_0), buttonstate_7_2 = StdIOCommon.getMouseStateButtonState mousestate_7_1 in case (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdIOCommon.==_24}>)) buttonstate_7_2 (_predefined._Cons StdIOCommon.ButtonDown (_predefined._Cons StdIOCommon.ButtonDoubleDown (_predefined._Cons StdIOCommon.ButtonTripleDown _predefined._Nil)))) (True -> let _x_9_0 = StdWindowAttribute.getWindowMouseAtt (select (commondef.cselect StdWindowAttribute.isWindowMouse (StdWindowDef.WindowMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) whAtts_4_9)::_Tuple2 1) in <{_Tuple4!13}> (windowevent._f131_131 (select _x_9_0::_Tuple3 0 mousestate_7_1) _x_9_0) mousestate_7_1 wsH_5 (windowevent.trackMouse wPtr_0 0 inputTrack_6)) (False -> case (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdIOCommon.==_24}>)) buttonstate_7_2 (_predefined._Cons StdIOCommon.ButtonStillDown (_predefined._Cons StdIOCommon.ButtonUp _predefined._Nil))) (True -> <{_Tuple4!13}> False StdMisc.undef wsH_5 inputTrack_6) (False -> let _x_10_0 = StdWindowAttribute.getWindowMouseAtt (select (commondef.cselect StdWindowAttribute.isWindowMouse (StdWindowDef.WindowMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) whAtts_4_9)::_Tuple2 1) in <{_Tuple4!13}> (windowevent._f132_132 (select _x_10_0::_Tuple3 0 mousestate_7_1) _x_10_0) mousestate_7_1 wsH_5 inputTrack_6) ) ) ) ) ) ) ) (_ -> windowevent.windoweventFatalError "okWindowMouseState" "placeholder not expected")
windowevent._f132_132::B !_x_0::B _x_1 = case _x_0 (True -> <{StdIOCommon.==_13}> (select _x_1::_Tuple3 1) StdIOCommon.Able) (_ -> False)
windowevent._f131_131::B !_x_0::B _x_1 = case _x_0 (True -> <{StdIOCommon.==_13}> (select _x_1::_Tuple3 1) StdIOCommon.Able) (_ -> False)
windowevent._f130_130::B !_x_0::B _x_1 = case _x_0 (True -> <{StdIOCommon.==_13}> (select _x_1::_Tuple3 1) StdIOCommon.Able) (_ -> False)
windowevent._f129_129::B !_x_0::B _x_1 = case _x_0 (True -> <{StdIOCommon.==_13}> (select _x_1::_Tuple3 1) StdIOCommon.Able) (_ -> False)
windowevent.okControlItemNrMouseState_44 modifiers_0 nrDown_1::I !contextAble_2::B !wPtr_3::I !itemPtr_4::I !action_5::I !eventPos_6 !_x_7 !inputTrack_8 = case _x_7 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (<{StdInt.==_16}> itemPtr_4 w_2_11)) (True -> case w_2_3 (True -> let _x_5_0 = windowevent.okControlsItemNrMouseState_45 modifiers_0 nrDown_1 (windowevent._f133_133 contextAble_2 w_2_4) wPtr_3 itemPtr_4 action_5 eventPos_6 w_2_7 inputTrack_8 in <{_Tuple6!55}> (select _x_5_0::_Tuple6 0) (select _x_5_0::_Tuple6 1) (select _x_5_0::_Tuple6 2) (select _x_5_0::_Tuple6 3) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_0::_Tuple6 4])) (select _x_5_0::_Tuple6 5)) (False -> <{_Tuple6!55}> False False 0 StdMisc.undef (windowhandle.WItemHandle itemH_1_0) inputTrack_8) ) (False -> case (windowevent.trackingMouse wPtr_3 itemPtr_4 inputTrack_8) (True -> let origin_5_0 = <{windowevent._c;1021;35_134}> w_2_2 w_2_5, mousestate_5_1 = windowevent.mouseState_47 modifiers_0 nrDown_1 action_5 (<{StdIOBasic.+_19}> origin_5_0 eventPos_6), buttonstate_5_2 = StdIOCommon.getMouseStateButtonState mousestate_5_1 in case (case (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdIOCommon.==_24}>)) buttonstate_5_2 (_predefined._Cons StdIOCommon.ButtonDown (_predefined._Cons StdIOCommon.ButtonDoubleDown (_predefined._Cons StdIOCommon.ButtonTripleDown _predefined._Nil)))) (True -> True) (False -> <{StdIOCommon.==_24}> buttonstate_5_2 StdIOCommon.ButtonStillUp) ) (True -> <{_Tuple6!55}> True False 0 StdMisc.undef (windowhandle.WItemHandle itemH_1_0) inputTrack_8) (False -> case (<{StdIOCommon.==_24}> buttonstate_5_2 StdIOCommon.ButtonUp) (True -> <{_Tuple6!55}> True (windowevent._f136_136 (windowevent._f135_135 contextAble_2 w_2_4) w_2_6 mousestate_5_1) w_2_1 mousestate_5_1 (windowhandle.WItemHandle itemH_1_0) (windowevent.untrackMouse inputTrack_8)) (False -> <{_Tuple6!55}> True (windowevent._f138_138 (windowevent._f137_137 contextAble_2 w_2_4) w_2_6 mousestate_5_1) w_2_1 mousestate_5_1 (windowhandle.WItemHandle itemH_1_0) inputTrack_8) ) ) (False -> let origin_5_0 = <{windowevent._c;1021;35_139}> w_2_2 w_2_5, mousestate_5_1 = windowevent.mouseState_47 modifiers_0 nrDown_1 action_5 (<{StdIOBasic.+_19}> origin_5_0 eventPos_6), buttonstate_5_2 = StdIOCommon.getMouseStateButtonState mousestate_5_1 in case (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdIOCommon.==_24}>)) buttonstate_5_2 (_predefined._Cons StdIOCommon.ButtonDown (_predefined._Cons StdIOCommon.ButtonDoubleDown (_predefined._Cons StdIOCommon.ButtonTripleDown _predefined._Nil)))) (True -> <{_Tuple6!55}> True (windowevent._f141_141 (windowevent._f140_140 contextAble_2 w_2_4) w_2_6 mousestate_5_1) w_2_1 mousestate_5_1 (windowhandle.WItemHandle itemH_1_0) (windowevent.trackMouse wPtr_3 itemPtr_4 inputTrack_8)) (False -> case (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdIOCommon.==_24}>)) buttonstate_5_2 (_predefined._Cons StdIOCommon.ButtonStillDown (_predefined._Cons StdIOCommon.ButtonUp _predefined._Nil))) (True -> <{_Tuple6!55}> True False 0 StdMisc.undef (windowhandle.WItemHandle itemH_1_0) inputTrack_8) (False -> <{_Tuple6!55}> True (windowevent._f143_143 (windowevent._f142_142 contextAble_2 w_2_4) w_2_6 mousestate_5_1) w_2_1 mousestate_5_1 (windowhandle.WItemHandle itemH_1_0) inputTrack_8) ) ) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowevent.okControlsItemNrMouseState_45 modifiers_0 nrDown_1 contextAble_2 wPtr_3 itemPtr_4 action_5 eventPos_6 itemHs_1_0 inputTrack_8 in <{_Tuple6!55}> (select _x_2_0::_Tuple6 0) (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (windowhandle.WListLSHandle (select _x_2_0::_Tuple6 4)) (select _x_2_0::_Tuple6 5)) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.okControlsItemNrMouseState_45 modifiers_0 nrDown_1 contextAble_2 wPtr_3 itemPtr_4 action_5 eventPos_6 itemHs_2_1 inputTrack_8 in <{_Tuple6!55}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple6 4])) (select _x_3_0::_Tuple6 5)) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowevent.okControlsItemNrMouseState_45 modifiers_0 nrDown_1 contextAble_2 wPtr_3 itemPtr_4 action_5 eventPos_6 itemHs_2_1 inputTrack_8 in <{_Tuple6!55}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple6 4])) (select _x_3_0::_Tuple6 5)) ) 
windowevent.okControlsItemNrMouseState_45 modifiers_0 nrDown_1::I !contextAble_2::B !wPtr_3::I !itemPtr_4::I !action_5::I !eventPos_6 !_x_7 !inputTrack_8 = case _x_7 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowevent.okControlItemNrMouseState_44 modifiers_0 nrDown_1 contextAble_2 wPtr_3 itemPtr_4 action_5 eventPos_6 itemH_1_0 inputTrack_8, found_2_1 = select _x_2_0::_Tuple6 0 in case found_2_1 (True -> <{_Tuple6!55}> found_2_1 (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (_predefined._Cons (select _x_2_0::_Tuple6 4) itemHs_1_1) (select _x_2_0::_Tuple6 5)) (False -> let _x_4_0 = windowevent.okControlsItemNrMouseState_45 modifiers_0 nrDown_1 contextAble_2 wPtr_3 itemPtr_4 action_5 eventPos_6 itemHs_1_1 (select _x_2_0::_Tuple6 5) in <{_Tuple6!55}> (select _x_4_0::_Tuple6 0) (select _x_4_0::_Tuple6 1) (select _x_4_0::_Tuple6 2) (select _x_4_0::_Tuple6 3) (_predefined._Cons (select _x_2_0::_Tuple6 4) (select _x_4_0::_Tuple6 4)) (select _x_4_0::_Tuple6 5)) ) (_predefined._Nil -> <{_Tuple6!55}> False False 0 StdMisc.undef _predefined._Nil inputTrack_8) 
windowevent._f143_143::B !_x_0::B w_1 mousestate_2 = case _x_0 (True -> let _x_2_0 = StdControlAttribute.getControlMouseAtt (select (commondef.cselect StdControlAttribute.isControlMouse (StdControlDef.ControlMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) w_1)::_Tuple2 1) in case (StdIOCommon.enabled (select _x_2_0::_Tuple3 1)) (True -> select _x_2_0::_Tuple3 0 mousestate_2) (False -> False) ) (_ -> False)
windowevent._f142_142::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent._f141_141::B !_x_0::B w_1 mousestate_2 = case _x_0 (True -> let _x_2_0 = StdControlAttribute.getControlMouseAtt (select (commondef.cselect StdControlAttribute.isControlMouse (StdControlDef.ControlMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) w_1)::_Tuple2 1) in case (StdIOCommon.enabled (select _x_2_0::_Tuple3 1)) (True -> select _x_2_0::_Tuple3 0 mousestate_2) (False -> False) ) (_ -> False)
windowevent._f140_140::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
<{windowevent._c;1021;35_139}> !w_0 w_1 = case w_0 (windowhandle.IsCustomButtonControl -> StdIOBasic.zero_21) (windowhandle.IsCustomControl -> StdIOBasic.zero_21) (windowhandle.IsCompoundControl -> select (windowaccess.getWItemCompoundInfo w_1)::windowhandle._CompoundInfo 1) (_ -> windowevent.windoweventFatalError "okControlItemsNrMouseState" "mouse event generated for unexpected control")
windowevent._f138_138::B !_x_0::B w_1 mousestate_2 = case _x_0 (True -> let _x_2_0 = StdControlAttribute.getControlMouseAtt (select (commondef.cselect StdControlAttribute.isControlMouse (StdControlDef.ControlMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) w_1)::_Tuple2 1) in case (StdIOCommon.enabled (select _x_2_0::_Tuple3 1)) (True -> select _x_2_0::_Tuple3 0 mousestate_2) (False -> False) ) (_ -> False)
windowevent._f137_137::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent._f136_136::B !_x_0::B w_1 mousestate_2 = case _x_0 (True -> let _x_2_0 = StdControlAttribute.getControlMouseAtt (select (commondef.cselect StdControlAttribute.isControlMouse (StdControlDef.ControlMouse (StdFunc.const False) StdIOCommon.Unable StdMisc.undef) w_1)::_Tuple2 1) in case (StdIOCommon.enabled (select _x_2_0::_Tuple3 1)) (True -> select _x_2_0::_Tuple3 0 mousestate_2) (False -> False) ) (_ -> False)
windowevent._f135_135::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
<{windowevent._c;1021;35_134}> !w_0 w_1 = case w_0 (windowhandle.IsCustomButtonControl -> StdIOBasic.zero_21) (windowhandle.IsCustomControl -> StdIOBasic.zero_21) (windowhandle.IsCompoundControl -> select (windowaccess.getWItemCompoundInfo w_1)::windowhandle._CompoundInfo 1) (_ -> windowevent.windoweventFatalError "okControlItemsNrMouseState" "mouse event generated for unexpected control")
windowevent._f133_133::B !contextAble_0::B w_1::B = case contextAble_0 (True -> w_1) (_ -> False)
windowevent.okControlItemsNrMouseState_46 modifiers_0 nrDown_1::I !wPtr_2::I !itemPtr_3::I !action_4::I !eventPos_5 !wsH_6 !inputTrack_7 = case wsH_6 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowevent.okControlsItemNrMouseState_45 modifiers_0 nrDown_1 True wPtr_2 itemPtr_3 action_4 eventPos_5 wh_4_6 inputTrack_7 in <{_Tuple5!27}> (select _x_5_0::_Tuple6 1) (select _x_5_0::_Tuple6 2) (select _x_5_0::_Tuple6 3) (update wsH_6::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple6 4]])]) (select _x_5_0::_Tuple6 5)) ) ) ) (_ -> windowevent.windoweventFatalError "okControlItemsNrMouseState" "placeholder not expected")
windowevent.getWindowStateHandleSize_48 wMetrics_0 !wids_1 !newW_2::I !newH_3::I !usersizing_4::B !wsH_5 !tb_6::I = case wsH_5 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let window_5_0 = windowaccess.getWindowInfoWindowData whWindow_4_5, _x_5_1 = oswindow.osScrollbarsAreVisible wMetrics_0 (select window_5_0::windowhandle._WindowData 0) (commondef.toTuple_72 whSize_4_12) (_Tuple2 (Data.Maybe.isJust (select window_5_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select window_5_0::windowhandle._WindowData 3))) in <{_Tuple3!7}> (deviceevents._WindowSizeActionInfo wids_1 (StdIOBasic._Size (<{windowevent._if;1092;35_144}> (select _x_5_1::_Tuple2 1) newW_2 wMetrics_0) (<{windowevent._if;1093;35_145}> (select _x_5_1::_Tuple2 0) newH_3 wMetrics_0)) (StdBool.not usersizing_4)) wsH_5 tb_6) ) ) ) (_ -> windowevent.windoweventFatalError "getWindowStateHandleSize" "placeholder not expected")
<{windowevent._if;1093;35_145}>::I !_x_0::B !newH_1::I wMetrics_2 = case _x_0 (True -> <{StdInt.+_6}> newH_1 (select wMetrics_2::ossystem._OSWindowMetrics 7)) (_ -> newH_1)
<{windowevent._if;1092;35_144}>::I !_x_0::B !newW_1::I wMetrics_2 = case _x_0 (True -> <{StdInt.+_6}> newW_1 (select wMetrics_2::ossystem._OSWindowMetrics 8)) (_ -> newW_1)
windowevent.filterOSEvent !_x_0 !_x_1 !windows_2 !ioState_3 = case _x_1 (clCrossCall_12._CrossCallInfo _x_1_0 wPtr_1_1 cPtr_1_2 mods_1_3 toolbar_1_4 p5_1_5 p6_1_6 -> case _x_1_0 (118 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleSelect wsH_5_0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> let wsH_7_0 = select _x_5_1::_Tuple2 1, _x_7_1::I = windowaccess.getWindowStateHandleWIDS wsH_7_0, wsH_7_2 = select _x_7_1::_Tuple2 1, _x_7_3 = windowevent.getControlsItemNr_16 cPtr_1_2 wsH_7_2, itemNr_7_4 = select _x_7_3::_Tuple2 0, wids_7_5 = select _x_7_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;107;31_146}> (<{StdInt.==_16}> itemNr_7_4 0) wids_7_5 itemNr_7_4 cPtr_1_2 mods_1_3) (windowaccess.setWindowHandlesWindow (select _x_7_3::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) (119 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleSelect wsH_5_0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> let wsH_7_0 = select _x_5_1::_Tuple2 1, _x_7_1::I = windowaccess.getWindowStateHandleWIDS wsH_7_0, wsH_7_2 = select _x_7_1::_Tuple2 1, _x_7_3 = windowevent.getPopUpControlItemNr_19 cPtr_1_2 wsH_7_2, itemNr_7_4 = select _x_7_3::_Tuple2 0, wids_7_5 = select _x_7_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;173;31_147}> (<{StdInt.==_16}> itemNr_7_4 0) wids_7_5 itemNr_7_4 cPtr_1_2 mods_1_3) (windowaccess.setWindowHandlesWindow (select _x_7_3::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) (120 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWIDS wsH_5_0, wsH_5_2 = select _x_5_1::_Tuple2 1, _x_5_3 = windowevent.getUpdateControls_22 cPtr_1_2 wsH_5_2, controls_5_4 = select _x_5_3::_Tuple2 0, wids_5_5 = select _x_5_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;233;31_148}> (StdList.isEmpty controls_5_4) wids_5_5 controls_5_4 mods_1_3) (windowaccess.setWindowHandlesWindow (select _x_5_3::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) (121 -> let _x_3_0 = windowaccess.getWindowHandlesActiveModalDialog windows_2, maybeW_3_1 = select _x_3_0::_Tuple2 0 in case (Data.Maybe.isNothing maybeW_3_1) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple2 1) ioState_3) (False -> case (StdBool.not (<{StdInt.==_16}> wPtr_1_1 (select (Data.Maybe.fromJust maybeW_3_1)::windowhandle._WIDS 1))) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple2 1) ioState_3) (False -> <{_Tuple5!31}> True Data.Maybe.Nothing (Data.Maybe.Just (deviceevents.WindowInitialise (Data.Maybe.fromJust maybeW_3_1))) (select _x_3_0::_Tuple2 1) ioState_3) ) ) (117 -> let _x_3_0 = windowaccess.getWindowHandlesActiveWindow windows_2, maybeW_3_1 = select _x_3_0::_Tuple2 0 in case (Data.Maybe.isNothing maybeW_3_1) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple2 1) ioState_3) (False -> case (StdBool.not (<{StdInt.==_16}> (select (Data.Maybe.fromJust maybeW_3_1)::windowhandle._WIDS 1) 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple2 1) ioState_3) (False -> let windows_6_0 = select _x_3_0::_Tuple2 1, _x_6_1 = iostate.getIOToolbox ioState_3, tb_6_2 = select _x_6_1::_Tuple2 0, _x_6_3::I = windowcreate.createModalDialogControls _x_0 wPtr_1_1 windows_6_0 tb_6_2, windows_6_4 = select _x_6_3::_Tuple3 1, _x_6_5 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_6_4 in case (StdBool.not (select _x_6_5::_Tuple3 0)) (True -> windowevent.windoweventFatalError "filterOSEvent (CcWmINITDIALOG)" "could not retrieve window") (False -> let _x_8_0::I = windowaccess.getWindowStateHandleSize (select _x_6_5::_Tuple3 1), _x_8_1 = select _x_8_0::_Tuple2 0, itemPtr_8_2 = select _x_6_3::_Tuple3 0 in <{_Tuple5!31}> True (Data.Maybe.Just (_predefined._Cons -1 (_predefined._Cons -1 (_predefined._Cons (select _x_8_1::StdIOBasic._Size 0) (_predefined._Cons (select _x_8_1::StdIOBasic._Size 1) (_predefined._Cons (<{windowevent._if;350;33_149}> (<{StdInt.==_16}> itemPtr_8_2 -1) itemPtr_8_2) _predefined._Nil)))))) Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_8_0::_Tuple2 1) (select _x_6_5::_Tuple3 2)) (iostate.setIOToolbox (select _x_6_3::_Tuple3 2) (select _x_6_1::_Tuple2 1))) ) ) ) (124 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleSelect wsH_5_0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> let _x_7_0 = windowaccess.getWindowStateHandleWIDS (select _x_5_1::_Tuple2 1), _x_7_1 = windowevent.getSlidersEvent_25 toolbar_1_4 (select _x_7_0::_Tuple2 0) mods_1_3 p5_1_5 cPtr_1_2 (select _x_7_0::_Tuple2 1) in <{_Tuple5!31}> True Data.Maybe.Nothing (Data.Maybe.Just (select _x_7_1::_Tuple2 0)) (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) (122 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleSelect wsH_5_0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> let _x_7_0 = windowaccess.getWindowStateHandleWIDS (select _x_5_1::_Tuple2 1), _x_7_1 = <{windowevent.getScrollEvent`_29}> (select _x_7_0::_Tuple2 0) cPtr_1_2 mods_1_3 (select _x_7_0::_Tuple2 1) in <{_Tuple5!31}> True Data.Maybe.Nothing (select _x_7_1::_Tuple2 0) (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) (106 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleActive wsH_5_0 in case (select _x_5_1::_Tuple2 0) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> let _x_7_0 = windowaccess.getWindowStateHandleWIDS (select _x_5_1::_Tuple2 1) in <{_Tuple5!31}> True Data.Maybe.Nothing (Data.Maybe.Just (deviceevents.WindowActivation (select _x_7_0::_Tuple2 0))) (windowaccess.setWindowHandlesWindow (select _x_7_0::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) (105 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let _x_5_0 = windowaccess.getWindowStateHandleWIDS (select _x_3_0::_Tuple3 1) in <{_Tuple5!31}> True Data.Maybe.Nothing (Data.Maybe.Just (deviceevents.WindowRequestClose (select _x_5_0::_Tuple2 0))) (windowaccess.setWindowHandlesWindow (select _x_5_0::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) (107 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleActive wsH_5_0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> let _x_7_0 = windowaccess.getWindowStateHandleWIDS (select _x_5_1::_Tuple2 1) in <{_Tuple5!31}> True Data.Maybe.Nothing (Data.Maybe.Just (deviceevents.WindowDeactivation (select _x_7_0::_Tuple2 0))) (windowaccess.setWindowHandlesWindow (select _x_7_0::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) (108 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> case (<{StdInt.==_16}> wPtr_1_1 cPtr_1_2) (True -> let wsH_6_0 = select _x_3_0::_Tuple3 1, _x_6_1 = windowaccess.getWindowStateHandleWIDS wsH_6_0, wsH_6_2 = select _x_6_1::_Tuple2 1, _x_6_3 = iostate.ioStGetInputTrack ioState_3, inputTrack_6_4 = select _x_6_3::_Tuple2 0, _x_6_5 = windowevent.okWindowKeyboardState_30 wPtr_1_1 mods_1_3 toolbar_1_4 p5_1_5 wsH_6_2 inputTrack_6_4, key_6_6 = select _x_6_5::_Tuple4 1, wids_6_7 = select _x_6_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;598;39_150}> (select _x_6_5::_Tuple4 0) wids_6_7 key_6_6) (windowaccess.setWindowHandlesWindow (select _x_6_5::_Tuple4 2) (select _x_3_0::_Tuple3 2)) (iostate.ioStSetInputTrack (select _x_6_5::_Tuple4 3) (select _x_6_3::_Tuple2 1))) (False -> let wsH_6_0 = select _x_3_0::_Tuple3 1, _x_6_1::I = windowaccess.getWindowStateHandleWIDS wsH_6_0, wsH_6_2 = select _x_6_1::_Tuple2 1, _x_6_3 = iostate.ioStGetInputTrack ioState_3, inputTrack_6_4 = select _x_6_3::_Tuple2 0, _x_6_5 = windowevent.okControlItemsNrKeyboardState_33 wPtr_1_1 cPtr_1_2 mods_1_3 toolbar_1_4 p5_1_5 wsH_6_2 inputTrack_6_4, key_6_6 = select _x_6_5::_Tuple5 2, itemNr_6_7 = select _x_6_5::_Tuple5 1, wids_6_8 = select _x_6_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;634;43_151}> (select _x_6_5::_Tuple5 0) wids_6_8 itemNr_6_7 cPtr_1_2 key_6_6) (windowaccess.setWindowHandlesWindow (select _x_6_5::_Tuple5 3) (select _x_3_0::_Tuple3 2)) (iostate.ioStSetInputTrack (select _x_6_5::_Tuple5 4) (select _x_6_3::_Tuple2 1))) ) ) (129 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWIDS wsH_5_0, wsH_5_2 = select _x_5_1::_Tuple2 1, _x_5_3 = windowevent.getControlKeyFocusItemNr False cPtr_1_2 wsH_5_2 in case (StdBool.not (select _x_5_3::_Tuple3 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_3::_Tuple3 2) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> <{_Tuple5!31}> True Data.Maybe.Nothing (Data.Maybe.Just (deviceevents.ControlLooseKeyFocus (deviceevents._ControlKeyFocusInfo (select _x_5_1::_Tuple2 0) (select _x_5_3::_Tuple3 1) cPtr_1_2))) (windowaccess.setWindowHandlesWindow (select _x_5_3::_Tuple3 2) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) (135 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleSelect wsH_5_0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> case (<{StdInt.==_16}> wPtr_1_1 cPtr_1_2) (True -> let wsH_8_0 = select _x_5_1::_Tuple2 1, _x_8_1 = windowaccess.getWindowStateHandleWIDS wsH_8_0, _x_8_2 = windowevent.okWindowKeyLost_35 (select _x_8_1::_Tuple2 1), wids_8_3 = select _x_8_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;762;39_152}> (select _x_8_2::_Tuple2 0) wids_8_3) (windowaccess.setWindowHandlesWindow (select _x_8_2::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> let wsH_8_0 = select _x_5_1::_Tuple2 1, _x_8_1::I = windowaccess.getWindowStateHandleWIDS wsH_8_0, wsH_8_2 = select _x_8_1::_Tuple2 1, _x_8_3 = windowevent.okControlItemNrsKeyLost_38 cPtr_1_2 wsH_8_2, itemNr_8_4 = select _x_8_3::_Tuple3 1, wids_8_5 = select _x_8_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;783;39_154}> (windowevent._f153_153 (select _x_8_3::_Tuple3 0) itemNr_8_4) wids_8_5 itemNr_8_4 cPtr_1_2) (windowaccess.setWindowHandlesWindow (select _x_8_3::_Tuple3 2) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) ) (134 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleSelect wsH_5_0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> case (<{StdInt.==_16}> wPtr_1_1 cPtr_1_2) (True -> let wsH_8_0 = select _x_5_1::_Tuple2 1, _x_8_1 = windowaccess.getWindowStateHandleWIDS wsH_8_0, _x_8_2 = windowevent.okWindowMouseLost_39 (select _x_8_1::_Tuple2 1), wids_8_3 = select _x_8_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;844;39_155}> (select _x_8_2::_Tuple2 0) wids_8_3) (windowaccess.setWindowHandlesWindow (select _x_8_2::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> let wsH_8_0 = select _x_5_1::_Tuple2 1, _x_8_1::I = windowaccess.getWindowStateHandleWIDS wsH_8_0, wsH_8_2 = select _x_8_1::_Tuple2 1, _x_8_3 = windowevent.okControlItemNrsMouseLost_42 cPtr_1_2 wsH_8_2, itemNr_8_4 = select _x_8_3::_Tuple3 1, wids_8_5 = select _x_8_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;865;39_157}> (windowevent._f156_156 (select _x_8_3::_Tuple3 0) itemNr_8_4) wids_8_5 itemNr_8_4 cPtr_1_2) (windowaccess.setWindowHandlesWindow (select _x_8_3::_Tuple3 2) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) ) (109 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleSelect wsH_5_0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> case (<{StdInt.==_16}> wPtr_1_1 cPtr_1_2) (True -> let modifiers_8_0 = clCCall_12.toModifiers p6_1_6, nrDown_8_1 = <{windowevent._c;1046;31_158}> mods_1_3, wsH_8_2 = select _x_5_1::_Tuple2 1, _x_8_3 = windowaccess.getWindowStateHandleWIDS wsH_8_2, wsH_8_4 = select _x_8_3::_Tuple2 1, _x_8_5 = iostate.ioStGetInputTrack ioState_3, inputTrack_8_6 = select _x_8_5::_Tuple2 0, _x_8_7 = windowevent.okWindowMouseState_43 wPtr_1_1 modifiers_8_0 nrDown_8_1 mods_1_3 (StdIOBasic._Point2 toolbar_1_4 p5_1_5) wsH_8_4 inputTrack_8_6, mouse_8_8::I = select _x_8_7::_Tuple4 1, wids_8_9 = select _x_8_3::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;927;39_159}> (select _x_8_7::_Tuple4 0) wids_8_9 mouse_8_8) (windowaccess.setWindowHandlesWindow (select _x_8_7::_Tuple4 2) (select _x_3_0::_Tuple3 2)) (iostate.ioStSetInputTrack (select _x_8_7::_Tuple4 3) (select _x_8_5::_Tuple2 1))) (False -> let modifiers_8_0 = clCCall_12.toModifiers p6_1_6, nrDown_8_1::I = <{windowevent._c;1046;31_160}> mods_1_3, wsH_8_2 = select _x_5_1::_Tuple2 1, _x_8_3 = windowaccess.getWindowStateHandleWIDS wsH_8_2, wsH_8_4 = select _x_8_3::_Tuple2 1, _x_8_5 = iostate.ioStGetInputTrack ioState_3, inputTrack_8_6 = select _x_8_5::_Tuple2 0, _x_8_7 = windowevent.okControlItemsNrMouseState_46 modifiers_8_0 nrDown_8_1 wPtr_1_1 cPtr_1_2 mods_1_3 (StdIOBasic._Point2 toolbar_1_4 p5_1_5) wsH_8_4 inputTrack_8_6, mouse_8_8 = select _x_8_7::_Tuple5 2, itemNr_8_9::I = select _x_8_7::_Tuple5 1, wids_8_10 = select _x_8_3::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;968;39_161}> (select _x_8_7::_Tuple5 0) wids_8_10 itemNr_8_9 cPtr_1_2 mouse_8_8) (windowaccess.setWindowHandlesWindow (select _x_8_7::_Tuple5 3) (select _x_3_0::_Tuple3 2)) (iostate.ioStSetInputTrack (select _x_8_7::_Tuple5 4) (select _x_8_5::_Tuple2 1))) ) ) ) (130 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWIDS wsH_5_0, wsH_5_2 = select _x_5_1::_Tuple2 1, _x_5_3 = windowevent.getControlKeyFocusItemNr True cPtr_1_2 wsH_5_2 in case (StdBool.not (select _x_5_3::_Tuple3 0)) (True -> <{_Tuple5!31}> True Data.Maybe.Nothing Data.Maybe.Nothing (windowaccess.setWindowHandlesWindow (select _x_5_3::_Tuple3 2) (select _x_3_0::_Tuple3 2)) ioState_3) (False -> <{_Tuple5!31}> True Data.Maybe.Nothing (Data.Maybe.Just (deviceevents.ControlGetKeyFocus (deviceevents._ControlKeyFocusInfo (select _x_5_1::_Tuple2 0) (select _x_5_3::_Tuple3 1) cPtr_1_2))) (windowaccess.setWindowHandlesWindow (select _x_5_3::_Tuple3 2) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) (110 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsDialog) (True -> windowevent.windoweventFatalError "filterOSEvent" "WindowSizeAction event generated for Dialog") (False -> let _x_7_0 = windowaccess.getWindowStateHandleWIDS (select _x_5_1::_Tuple2 1), _x_7_1 = iostate.getIOToolbox ioState_3, _x_7_2 = windowevent.getWindowStateHandleSize_48 _x_0 (select _x_7_0::_Tuple2 0) cPtr_1_2 mods_1_3 (StdBool.not (<{StdInt.==_16}> toolbar_1_4 0)) (select _x_7_0::_Tuple2 1) (select _x_7_1::_Tuple2 0) in <{_Tuple5!31}> True Data.Maybe.Nothing (Data.Maybe.Just (deviceevents.WindowSizeAction (select _x_7_2::_Tuple3 0))) (windowaccess.setWindowHandlesWindow (select _x_7_2::_Tuple3 1) (select _x_3_0::_Tuple3 2)) (iostate.setIOToolbox (select _x_7_2::_Tuple3 2) (select _x_7_1::_Tuple2 1))) ) ) (133 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let wsH_5_0 = select _x_3_0::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWIDS wsH_5_0, wsH_5_2 = select _x_5_1::_Tuple2 1, _x_5_3 = windowaccess.getWindowStateHandleDefaultId wsH_5_2, wsH_5_4 = select _x_5_3::_Tuple2 1, _x_5_5 = windowaccess.getWindowStateHandleCancelId wsH_5_4, cancel_5_6 = select _x_5_5::_Tuple2 0, ok_5_7 = select _x_5_3::_Tuple2 0, wids_5_8 = select _x_5_1::_Tuple2 0 in <{_Tuple5!31}> True Data.Maybe.Nothing (<{windowevent._if;1105;31_162}> (<{StdInt.==_16}> cPtr_1_2 1) ok_5_7 wids_5_8 cPtr_1_2 cancel_5_6) (windowaccess.setWindowHandlesWindow (select _x_5_5::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) (100 -> let _x_3_0 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_72 wPtr_1_1) windows_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple5!31}> False Data.Maybe.Nothing Data.Maybe.Nothing (select _x_3_0::_Tuple3 2) ioState_3) (False -> let _x_5_0 = windowaccess.getWindowStateHandleWIDS (select _x_3_0::_Tuple3 1) in <{_Tuple5!31}> True Data.Maybe.Nothing (Data.Maybe.Just (deviceevents.WindowUpdate (deviceevents._UpdateInfo (select _x_5_0::_Tuple2 0) (commondef.fromTuple4_79 (_Tuple4 cPtr_1_2 mods_1_3 toolbar_1_4 p5_1_5)) _predefined._Nil (<{windowevent._if;1120;94_163}> (<{StdInt.==_16}> p6_1_6 0) p6_1_6)))) (windowaccess.setWindowHandlesWindow (select _x_5_0::_Tuple2 1) (select _x_3_0::_Tuple3 2)) ioState_3) ) ) (_ -> windowevent.windoweventFatalError "filterOSEvent" "unmatched OSEvent")
<{windowevent._if;1120;94_163}> !_x_0::B p6_1::I = case _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just p6_1)
<{windowevent._if;1105;31_162}> !_x_0::B ok_1 wids_2 cPtr_3::I cancel_4 = case _x_0 (True -> case (Data.Maybe.isJust ok_1) (True -> Data.Maybe.Just (deviceevents.WindowOK wids_2)) (False -> Data.Maybe.Nothing) ) (_ -> case (<{StdInt.==_16}> cPtr_3 2) (True -> case (Data.Maybe.isJust cancel_4) (True -> Data.Maybe.Just (deviceevents.WindowCANCEL wids_2)) (False -> Data.Maybe.Nothing) ) (False -> windowevent.windoweventFatalError "filterOSEvent (CcWmSPECIALBUTTON)" "incorrect argument") )
<{windowevent._if;968;39_161}> !_x_0::B wids_1 itemNr_2::I cPtr_3::I mouse_4 = case _x_0 (True -> Data.Maybe.Just (deviceevents.ControlMouseAction (deviceevents._ControlMouseActionInfo wids_1 itemNr_2 cPtr_3 mouse_4))) (_ -> Data.Maybe.Nothing)
<{windowevent._c;1046;31_160}>::I !mods_0::I = case mods_0 (1 -> 1) (2 -> 2) (_ -> 3)
<{windowevent._if;927;39_159}> !_x_0::B wids_1 mouse_2 = case _x_0 (True -> Data.Maybe.Just (deviceevents.WindowMouseAction (deviceevents._WindowMouseActionInfo wids_1 mouse_2))) (_ -> Data.Maybe.Nothing)
<{windowevent._c;1046;31_158}>::I !mods_0::I = case mods_0 (1 -> 1) (2 -> 2) (_ -> 3)
<{windowevent._if;865;39_157}> !_x_0::B wids_1 itemNr_2::I cPtr_3::I = case _x_0 (True -> Data.Maybe.Just (deviceevents.ControlMouseAction (deviceevents._ControlMouseActionInfo wids_1 itemNr_2 cPtr_3 StdIOCommon.MouseLost))) (_ -> Data.Maybe.Nothing)
windowevent._f156_156::B !_x_0::B itemNr_1::I = case _x_0 (True -> <{StdInt.<_17}> 0 itemNr_1) (_ -> False)
<{windowevent._if;844;39_155}> !_x_0::B wids_1 = case _x_0 (True -> Data.Maybe.Just (deviceevents.WindowMouseAction (deviceevents._WindowMouseActionInfo wids_1 StdIOCommon.MouseLost))) (_ -> Data.Maybe.Nothing)
<{windowevent._if;783;39_154}> !_x_0::B wids_1 itemNr_2::I cPtr_3::I = case _x_0 (True -> Data.Maybe.Just (deviceevents.ControlKeyboardAction (deviceevents._ControlKeyboardActionInfo wids_1 itemNr_2 cPtr_3 StdIOCommon.KeyLost))) (_ -> Data.Maybe.Nothing)
windowevent._f153_153::B !_x_0::B itemNr_1::I = case _x_0 (True -> <{StdInt.<_17}> 0 itemNr_1) (_ -> False)
<{windowevent._if;762;39_152}> !_x_0::B wids_1 = case _x_0 (True -> Data.Maybe.Just (deviceevents.WindowKeyboardAction (deviceevents._WindowKeyboardActionInfo wids_1 StdIOCommon.KeyLost))) (_ -> Data.Maybe.Nothing)
<{windowevent._if;634;43_151}> !_x_0::B wids_1 itemNr_2::I cPtr_3::I key_4 = case _x_0 (True -> Data.Maybe.Just (deviceevents.ControlKeyboardAction (deviceevents._ControlKeyboardActionInfo wids_1 itemNr_2 cPtr_3 key_4))) (_ -> Data.Maybe.Nothing)
<{windowevent._if;598;39_150}> !_x_0::B wids_1 key_2 = case _x_0 (True -> Data.Maybe.Just (deviceevents.WindowKeyboardAction (deviceevents._WindowKeyboardActionInfo wids_1 key_2))) (_ -> Data.Maybe.Nothing)
<{windowevent._if;350;33_149}>::I !_x_0::B itemPtr_1::I = case _x_0 (True -> 0) (_ -> itemPtr_1)
<{windowevent._if;233;31_148}> !_x_0::B wids_1 controls_2 mods_3::I = case _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just (deviceevents.WindowUpdate (deviceevents._UpdateInfo wids_1 commondef.zero_64 controls_2 (Data.Maybe.Just mods_3))))
<{windowevent._if;173;31_147}> !_x_0::B wids_1 itemNr_2::I cPtr_3::I mods_4::I = case _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just (deviceevents.ControlSelection (deviceevents._ControlSelectInfo wids_1 itemNr_2 cPtr_3 (<{StdInt.+_6}> mods_4 1) (StdIOCommon._Modifiers False False False False False))))
<{windowevent._if;107;31_146}> !_x_0::B wids_1 itemNr_2::I cPtr_3::I mods_4::I = case _x_0 (True -> Data.Maybe.Nothing) (_ -> Data.Maybe.Just (deviceevents.ControlSelection (deviceevents._ControlSelectInfo wids_1 itemNr_2 cPtr_3 0 (clCCall_12.toModifiers mods_4))))
windowevent.windowEvent_11 !schedulerEvent_0 !pState_1 = case schedulerEvent_0 (deviceevents.ScheduleOSEvent osEvent_1_0 _x_1_1 -> case pState_1 (iostate._PSt ls_2_0 ioState_2_1 -> case (StdBool.not (windowevent.isWindowOSEvent_10 (select osEvent_1_0::clCrossCall_12._CrossCallInfo 0))) (True -> <{_Tuple4!15}> False Data.Maybe.Nothing schedulerEvent_0 pState_1) (False -> let _x_4_0 = iostate.ioStGetDevice device.WindowDevice ioState_2_1, ioState_4_1 = select _x_4_0::_Tuple3 2, _x_4_2 = iostate.ioStGetOSWindowMetrics ioState_4_1, wMetrics_4_3 = select _x_4_2::_Tuple2 0, wDevice_4_4 = select _x_4_0::_Tuple3 1, windows_4_5 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_4_4, ioState_4_6 = select _x_4_2::_Tuple2 1, _x_4_7 = windowevent.filterOSEvent wMetrics_4_3 osEvent_1_0 windows_4_5 ioState_4_6, replyToOS_4_8 = select _x_4_7::_Tuple5 1 in <{_Tuple4!15}> (select _x_4_7::_Tuple5 0) (select _x_4_7::_Tuple5 2) (<{windowevent._if;48;39_164}> (Data.Maybe.isJust replyToOS_4_8) osEvent_1_0 replyToOS_4_8 schedulerEvent_0) (update pState_1::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_4_7::_Tuple5 3)) (select _x_4_7::_Tuple5 4)])) ) ) (deviceevents.ScheduleMsgEvent msgEvent_1_0 -> case pState_1 (iostate._PSt ls_2_0 ioState_2_1 -> let _x_3_0 = iostate.ioStGetIOId ioState_2_1, recLoc_3_1 = deviceevents.getMsgEventRecLoc msgEvent_1_0 in case (case (StdBool.not (<{systemid.==_5}> (select _x_3_0::_Tuple2 0) (select recLoc_3_1::receivertable._RecLoc 0))) (True -> True) (False -> StdBool.not (<{device.==_2}> (select recLoc_3_1::receivertable._RecLoc 1) device.WindowDevice)) ) (True -> <{_Tuple4!15}> False Data.Maybe.Nothing schedulerEvent_0 (update pState_1::iostate._PSt [1:select _x_3_0::_Tuple2 1])) (False -> let _x_5_0::B = iostate.ioStGetDevice device.WindowDevice (select _x_3_0::_Tuple2 1), _x_5_1 = windowaccess.hasWindowHandlesWindow (windowaccess.toWID_71 (select recLoc_3_1::receivertable._RecLoc 2)) (devicesystemstate.windowSystemStateGetWindowHandles (select _x_5_0::_Tuple3 1)), found_5_2 = select _x_5_1::_Tuple2 0 in <{_Tuple4!15}> found_5_2 (<{windowevent._if;81;39_165}> found_5_2 msgEvent_1_0) schedulerEvent_0 (update pState_1::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_5_1::_Tuple2 1)) (select _x_5_0::_Tuple3 2)])) ) ) (_ -> <{_Tuple4!15}> False Data.Maybe.Nothing schedulerEvent_0 pState_1)
<{windowevent._if;81;39_165}> !found_0::B msgEvent_1 = case found_0 (True -> Data.Maybe.Just (deviceevents.ReceiverEvent msgEvent_1)) (_ -> Data.Maybe.Nothing)
<{windowevent._if;48;39_164}> !_x_0::B osEvent_1 replyToOS_2 schedulerEvent_3 = case _x_0 (True -> deviceevents.ScheduleOSEvent osEvent_1 (Data.Maybe.fromJust replyToOS_2)) (_ -> schedulerEvent_3)
windowevent.windowEvent !schedulerEvent_0 !pState_1 = let _x_1_0 = StdPSt.accPIO (iostate.ioStHasDevice device.WindowDevice) pState_1 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> windowevent.windoweventFatalError "windowFunctions.dEvent" "could not retrieve WindowSystemState from IOSt") (False -> windowevent.windowEvent_11 schedulerEvent_0 (select _x_1_0::_Tuple2 1)) 


|| Converted Records
:: <{windowevent.gEq_s;}> = {!windowevent.gEq_s}

:: <{windowevent.gEq_ss;}> = {!windowevent.gEq_ss}

:: <{windowevent.gEq_sss;}> = {!windowevent.gEq_sss}

:: <{windowevent.gEq_ssss;}> = {!windowevent.gEq_ssss}

:: <{windowevent.gEq_sssss;}> = {!windowevent.gEq_sssss}

:: <{windowevent.gEq_ssssss;}> = {!windowevent.gEq_ssssss}

:: <{windowevent.gEq_sssssss;}> = {!windowevent.gEq_sssssss}

:: <{windowevent.gEq_ssssssss;}> = {!windowevent.gEq_ssssssss}

:: <{windowevent.gEq_sssssssss;}> = {!windowevent.gEq_sssssssss}

:: <{windowevent.bimap_s;}> = {windowevent.bimap_s}

:: <{windowevent.bimap_ss;}> = {windowevent.bimap_ss}

:: <{windowevent.bimap_sss;}> = {windowevent.bimap_sss}

