|| ?module? ospicture


ospicture.toRGBtriple !_x_0 = case _x_0 (StdPictureDef.RGB _x_1_0 -> case _x_1_0 (StdPictureDef._RGBColour r_2_0 g_2_1 b_2_2 -> <{_Tuple3!7}> (commondef.setBetween r_2_0 0 255) (commondef.setBetween g_2_1 0 255) (commondef.setBetween b_2_2 0 255)) ) (StdPictureDef.Black -> <{_Tuple3!7}> 0 0 0) (StdPictureDef.DarkGrey -> <{_Tuple3!7}> (<{StdInt.>>}> 255 2) (<{StdInt.>>}> 255 2) (<{StdInt.>>}> 255 2)) (StdPictureDef.Grey -> <{_Tuple3!7}> (<{StdInt.>>}> 255 1) (<{StdInt.>>}> 255 1) (<{StdInt.>>}> 255 1)) (StdPictureDef.LightGrey -> <{_Tuple3!7}> (<{StdInt.*_9}> (<{StdInt.>>}> 255 2) 3) (<{StdInt.*_9}> (<{StdInt.>>}> 255 2) 3) (<{StdInt.*_9}> (<{StdInt.>>}> 255 2) 3)) (StdPictureDef.White -> <{_Tuple3!7}> 255 255 255) (StdPictureDef.Red -> <{_Tuple3!7}> 255 0 0) (StdPictureDef.Green -> <{_Tuple3!7}> 0 255 0) (StdPictureDef.Blue -> <{_Tuple3!7}> 0 0 255) (StdPictureDef.Cyan -> <{_Tuple3!7}> 0 255 255) (StdPictureDef.Magenta -> <{_Tuple3!7}> 255 0 255) (StdPictureDef.Yellow -> <{_Tuple3!7}> 255 255 0) 
ospicture.packPicture !origin_0 !pen_1 !isScreenOutput_2::B !hdc_3::I !tb_4::I = case pen_1 (ospicture._Pen penSize_1_0 penForeColour_1_1 penBackColour_1_2 penPos_1_3 penFont_1_4 -> let !_x_2_0 = osfont.osFontgetimp penFont_1_4, !_x_2_1 = pictCCall_12.winInitPicture penSize_1_0 0 (ospicture.toRGBtriple penForeColour_1_1) (ospicture.toRGBtriple penBackColour_1_2) (commondef.toTuple_74 (<{StdIOBasic.-_20}> penPos_1_3 origin_0)) (_Tuple3 (select _x_2_0::osfont._OSFont 0) (select _x_2_0::osfont._OSFont 1) (select _x_2_0::osfont._OSFont 2)) (_Tuple2 0 0) (_Tuple2 hdc_3 tb_4) in ospicture._Picture (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1) origin_0 pen_1 isScreenOutput_2) 
ospicture.unpeekPicture !origin_0 !pen_1 !isScreenOutput_2::B !hdc_3::I !tb_4::I = ospicture._Picture hdc_3 tb_4 origin_0 pen_1 isScreenOutput_2
ospicture.unpackPicture !_x_0 = case _x_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = select (pictCCall_12.winDonePicture (_Tuple2 pictContext_1_0 pictToolbox_1_1))::_Tuple7 6 in <{_Tuple5!31}> pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1)) 
ospicture.peekPicture !_x_0 = case _x_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> <{_Tuple5!31}> pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 pictContext_1_0 pictToolbox_1_1) 
ospicture.peekOSPictContext !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> <{_Tuple2!3}> pictContext_1_0 picture_0) 
ospicture.sharePoint_74 !point_0 = case point_0 (StdIOBasic._Point2 x_1_0 y_1_1 -> <{_Tuple2!3}> (StdIOBasic._Point2 x_1_0 y_1_1) point_0) 
ospicture.sharePen !pen_0 = case pen_0 (ospicture._Pen penSize_1_0 penForeColour_1_1 penBackColour_1_2 penPos_1_3 penFont_1_4 -> let _x_2_0 = ospicture.sharePoint_74 penPos_1_3 in <{_Tuple2!3}> (ospicture._Pen penSize_1_0 penForeColour_1_1 penBackColour_1_2 (select _x_2_0::_Tuple2 0) penFont_1_4) (update pen_0::ospicture._Pen [3:select _x_2_0::_Tuple2 1])) 
ospicture.sharePicture !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = ospicture.sharePen pictPen_1_3 in <{_Tuple2!3}> (ospicture._Picture 0 0 pictOrigin_1_2 (select _x_2_0::_Tuple2 0) pictToScreen_1_4) (update picture_0::ospicture._Picture [3:select _x_2_0::_Tuple2 1])) 
ospicture.defaultPen = ospicture._Pen 1 StdPictureDef.Black StdPictureDef.White (StdIOBasic._Point2 0 0) (select (osfont.osDefaultfont 0)::_Tuple2 0)
ospicture.peekScreen !f_0 !tb_1::I = let _x_1_0 = pictCCall_12.winCreateScreenHDC tb_1, _x_1_1 = f_0 (ospicture.packPicture StdIOBasic.zero_21 ospicture.defaultPen True (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)), _x_1_2 = ospicture.unpackPicture (select _x_1_1::_Tuple2 1) in <{_Tuple2!3}> (select _x_1_1::_Tuple2 0) (pictCCall_12.winDestroyScreenHDC (_Tuple2 (select _x_1_2::_Tuple5 3) (select _x_1_2::_Tuple5 4)))
ospicture.dialogPen = ospicture._Pen 1 StdPictureDef.Black StdPictureDef.White (StdIOBasic._Point2 0 0) (select (osfont.osDialogfont 0)::_Tuple2 0)
ospicture.setPenAttribute !_x_0 !pen_1 = case _x_0 (StdPictureDef.PenSize size_1_0 -> let x_2_0::I = 1 in update pen_1::ospicture._Pen [0:<{ospicture._c;51;16_120}> (<{StdInt.<_17}> x_2_0 size_1_0) size_1_0 x_2_0]) (StdPictureDef.PenPos _x_1_0 -> case _x_1_0 (StdIOBasic._Point2 x_2_0 y_2_1 -> update pen_1::ospicture._Pen [3:StdIOBasic._Point2 x_2_0 y_2_1]) ) (StdPictureDef.PenColour colour_1_0 -> update pen_1::ospicture._Pen [1:colour_1_0]) (StdPictureDef.PenBack colour_1_0 -> update pen_1::ospicture._Pen [2:colour_1_0]) (StdPictureDef.PenFont font_1_0 -> update pen_1::ospicture._Pen [4:font_1_0]) 
<{ospicture._c;51;16_120}>::I !_x_0::B size_1::I x_2::I = case _x_0 (True -> size_1) (_ -> x_2)
ospicture.copyPen !_x_0 = case _x_0 (ospicture._Pen penSize_1_0 penForeColour_1_1 penBackColour_1_2 _x_1_3 penFont_1_4 -> case _x_1_3 (StdIOBasic._Point2 x_2_0 y_2_1 -> ospicture._Pen penSize_1_0 penForeColour_1_1 penBackColour_1_2 (StdIOBasic._Point2 x_2_0 y_2_1) penFont_1_4) ) 
ospicture.apppicttoolbox !f_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> update picture_1::ospicture._Picture [1:f_0 pictToolbox_1_1]) 
ospicture.accpicttoolbox !f_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = f_0 pictToolbox_1_1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update picture_1::ospicture._Picture [1:select _x_2_0::_Tuple2 1])) 
ospicture.setpictpensize !w_0::I !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let x_2_0::I = 1, <{w`_2_1}>::I = <{ospicture._c;51;16_121}> (<{StdInt.<_17}> x_2_0 w_0) w_0 x_2_0 in case (<{StdInt.==_16}> <{w`_2_1}> (select pictPen_1_3::ospicture._Pen 0)) (True -> picture_1) (False -> let _x_4_0 = pictCCall_12.winSetPenSize <{w`_2_1}> (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_1::ospicture._Picture [0:select _x_4_0::_Tuple2 0,1:select _x_4_0::_Tuple2 1,3:update pictPen_1_3::ospicture._Pen [0:<{w`_2_1}>]]) ) 
<{ospicture._c;51;16_121}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
ospicture.setpictpencolour !colour_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let reqRGB_2_0 = ospicture.toRGBtriple colour_0 in case (<{StdTuple.==_5}> (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdInt.==_16}>)) (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdInt.==_16}>)) (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdInt.==_16}>)) reqRGB_2_0 (ospicture.toRGBtriple (select pictPen_1_3::ospicture._Pen 1))) (True -> picture_1) (False -> let _x_4_0 = pictCCall_12.winSetPenColor reqRGB_2_0 (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_1::ospicture._Picture [0:select _x_4_0::_Tuple2 0,1:select _x_4_0::_Tuple2 1,3:update pictPen_1_3::ospicture._Pen [1:colour_0]]) ) 
ospicture.setpictbackcolour !colour_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case (<{StdTuple.==_5}> (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdInt.==_16}>)) (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdInt.==_16}>)) (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdInt.==_16}>)) (ospicture.toRGBtriple colour_0) (ospicture.toRGBtriple (select pictPen_1_3::ospicture._Pen 2))) (True -> picture_1) (False -> let _x_3_0 = pictCCall_12.winSetBackColor (ospicture.toRGBtriple colour_0) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_1::ospicture._Picture [0:select _x_3_0::_Tuple2 0,1:select _x_3_0::_Tuple2 1,3:update pictPen_1_3::ospicture._Pen [2:colour_0]]) ) 
ospicture.setpictpenpos !newpos_0 !picture_1 = case newpos_0 (StdIOBasic._Point2 x`_1_0 y`_1_1 -> case picture_1 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pen_2_3 pictToScreen_2_4 -> case pen_2_3 (ospicture._Pen penSize_3_0 penForeColour_3_1 penBackColour_3_2 penPos_3_3 penFont_3_4 -> case penPos_3_3 (StdIOBasic._Point2 x_4_0 y_4_1 -> case (case (<{StdInt.==_16}> x_4_0 <{x`_1_0}>) (True -> <{StdInt.==_16}> y_4_1 <{y`_1_1}>) (False -> False) ) (True -> picture_1) (False -> let _x_6_0 = pictCCall_12.winMovePenTo (commondef.toTuple_74 (<{StdIOBasic.-_20}> newpos_0 pictOrigin_2_2)) (_Tuple2 pictContext_2_0 pictToolbox_2_1) in update picture_1::ospicture._Picture [0:select _x_6_0::_Tuple2 0,1:select _x_6_0::_Tuple2 1,3:update pen_2_3::ospicture._Pen [3:StdIOBasic._Point2 <{x`_1_0}> <{y`_1_1}>]]) ) ) ) ) 
ospicture.setpictpenfont !font_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pen_1_3 pictToScreen_1_4 -> let imp_2_0 = osfont.osFontgetimp font_0 in case (<{osfont.==_17}> imp_2_0 (osfont.osFontgetimp (select pen_1_3::ospicture._Pen 4))) (True -> picture_1) (False -> let _x_4_0 = pictCCall_12.winSetFont (_Tuple3 (select imp_2_0::osfont._OSFont 0) (select imp_2_0::osfont._OSFont 1) (select imp_2_0::osfont._OSFont 2)) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_1::ospicture._Picture [0:select _x_4_0::_Tuple2 0,1:select _x_4_0::_Tuple2 1,3:update pen_1_3::ospicture._Pen [4:font_0]]) ) 
ospicture.setpictpen !_x_0 !picture_1 = case _x_0 (ospicture._Pen penSize_1_0 penForeColour_1_1 penBackColour_1_2 penPos_1_3 penFont_1_4 -> ospicture.setpictpenfont penFont_1_4 (ospicture.setpictpenpos penPos_1_3 (ospicture.setpictbackcolour penBackColour_1_2 (ospicture.setpictpencolour penForeColour_1_1 (ospicture.setpictpensize penSize_1_0 picture_1))))) 
ospicture.getpictpen !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = ospicture.sharePen pictPen_1_3 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update picture_0::ospicture._Picture [3:select _x_2_0::_Tuple2 1])) 
ospicture.setpictorigin !origin_0 !picture_1 = update picture_1::ospicture._Picture [2:origin_0]
ospicture.getpictorigin !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> <{_Tuple2!3}> pictOrigin_1_2 picture_0) 
ospicture.getpictpenpos !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictPen_1_3 (ospicture._Pen penSize_2_0 penForeColour_2_1 penBackColour_2_2 _x_2_3 penFont_2_4 -> case _x_2_3 (StdIOBasic._Point2 x_3_0 y_3_1 -> <{_Tuple2!3}> (StdIOBasic._Point2 x_3_0 y_3_1) picture_0) ) ) 
ospicture.movepictpenpos !v_0 !picture_1 = case v_0 (StdIOBasic._Vector2 vx_1_0 vy_1_1 -> case picture_1 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pen_2_3 pictToScreen_2_4 -> case pen_2_3 (ospicture._Pen penSize_3_0 penForeColour_3_1 penBackColour_3_2 penPos_3_3 penFont_3_4 -> case penPos_3_3 (StdIOBasic._Point2 x_4_0 y_4_1 -> let _x_5_0 = pictCCall_12.winMovePen (commondef.toTuple_76 v_0) (_Tuple2 pictContext_2_0 pictToolbox_2_1) in update picture_1::ospicture._Picture [0:select _x_5_0::_Tuple2 0,1:select _x_5_0::_Tuple2 1,3:update pen_2_3::ospicture._Pen [3:StdIOBasic._Point2 (<{StdInt.+_6}> x_4_0 vx_1_0) (<{StdInt.+_6}> y_4_1 vy_1_1)]]) ) ) ) 
ospicture.getpictpensize !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictPen_1_3 (ospicture._Pen penSize_2_0 penForeColour_2_1 penBackColour_2_2 penPos_2_3 penFont_2_4 -> <{_Tuple2!3}> penSize_2_0 picture_0) ) 
ospicture.getpictpencolour !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictPen_1_3 (ospicture._Pen penSize_2_0 penForeColour_2_1 penBackColour_2_2 penPos_2_3 penFont_2_4 -> <{_Tuple2!3}> penForeColour_2_1 picture_0) ) 
ospicture.getpictbackcolour !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictPen_1_3 (ospicture._Pen penSize_2_0 penForeColour_2_1 penBackColour_2_2 penPos_2_3 penFont_2_4 -> <{_Tuple2!3}> penBackColour_2_2 picture_0) ) 
ospicture.getpictpenfont !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictPen_1_3 (ospicture._Pen penSize_2_0 penForeColour_2_1 penBackColour_2_2 penPos_2_3 penFont_2_4 -> <{_Tuple2!3}> penFont_2_4 picture_0) ) 
ospicture.setpictpendefaultfont !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = osfont.osDefaultfont pictToolbox_1_1, font_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = osfont.osFontgetimp font_2_1, _x_2_3 = pictCCall_12.winSetFont (_Tuple3 (select _x_2_2::osfont._OSFont 0) (select _x_2_2::osfont._OSFont 1) (select _x_2_2::osfont._OSFont 2)) (_Tuple2 pictContext_1_0 (select _x_2_0::_Tuple2 1)) in update picture_0::ospicture._Picture [0:select _x_2_3::_Tuple2 0,1:select _x_2_3::_Tuple2 1,3:update pictPen_1_3::ospicture._Pen [4:font_2_1]]) 
ospicture.setpictxormode !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winSetMode 2 (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_0::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.setpicthilitemode !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winSetMode 2 (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_0::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.setpictnormalmode !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winSetMode 0 (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_0::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.pictdrawpoint !pos_0 !picture_1 = case pos_0 (StdIOBasic._Point2 x_1_0 y_1_1 -> case picture_1 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pictPen_2_3 pictToScreen_2_4 -> case pictOrigin_2_2 (StdIOBasic._Point2 ox_3_0 oy_3_1 -> case pictPen_2_3 (ospicture._Pen penSize_4_0 penForeColour_4_1 penBackColour_4_2 penPos_4_3 penFont_4_4 -> case (<{StdInt.==_16}> penSize_4_0 1) (True -> let _x_6_0 = _Tuple2 (<{StdInt.-_7}> x_1_0 ox_3_0) (<{StdInt.-_7}> y_1_1 oy_3_1), _x_6_1 = pictCCall_12.winDrawPoint (_Tuple2 (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1)) (_Tuple2 pictContext_2_0 pictToolbox_2_1) in update picture_1::ospicture._Picture [0:select _x_6_1::_Tuple2 0,1:select _x_6_1::_Tuple2 1]) (False -> let _x_6_0 = _Tuple2 (<{StdInt.-_7}> x_1_0 ox_3_0) (<{StdInt.-_7}> y_1_1 oy_3_1), <{x`_6_1}>::I = select _x_6_0::_Tuple2 0, <{y`_6_2}>::I = select _x_6_0::_Tuple2 1, _x_6_3 = pictCCall_12.winFillRectangle (ostypes._OSRect <{x`_6_1}> <{y`_6_2}> (<{StdInt.+_6}> <{x`_6_1}> penSize_4_0) (<{StdInt.+_6}> <{y`_6_2}> penSize_4_0)) (_Tuple2 pictContext_2_0 pictToolbox_2_1) in update picture_1::ospicture._Picture [0:select _x_6_3::_Tuple2 0,1:select _x_6_3::_Tuple2 1]) ) ) ) ) 
ospicture.pictdrawlineto !pos_0 !picture_1 = case pos_0 (StdIOBasic._Point2 x_1_0 y_1_1 -> case picture_1 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pictPen_2_3 pictToScreen_2_4 -> let _x_3_0 = pictCCall_12.winLinePenTo (commondef.toTuple_74 (<{StdIOBasic.-_20}> pos_0 pictOrigin_2_2)) (_Tuple2 pictContext_2_0 pictToolbox_2_1) in update picture_1::ospicture._Picture [0:select _x_3_0::_Tuple2 0,1:select _x_3_0::_Tuple2 1,3:update pictPen_2_3::ospicture._Pen [3:StdIOBasic._Point2 x_1_0 y_1_1]]) ) 
ospicture.pictdrawline !a_0 !b_1 !picture_2 = case picture_2 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winDrawLine (commondef.toTuple_74 (<{StdIOBasic.-_20}> a_0 pictOrigin_1_2)) (commondef.toTuple_74 (<{StdIOBasic.-_20}> b_1 pictOrigin_1_2)) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_2::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.pictundrawlineto !pos_0 !picture_1 = case pos_0 (StdIOBasic._Point2 x_1_0 y_1_1 -> case picture_1 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pen_2_3 pictToScreen_2_4 -> case pen_2_3 (ospicture._Pen penSize_3_0 penForeColour_3_1 penBackColour_3_2 penPos_3_3 penFont_3_4 -> let _x_4_0 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_3_2) (_Tuple2 pictContext_2_0 pictToolbox_2_1), _x_4_1 = pictCCall_12.winLinePenTo (commondef.toTuple_74 (<{StdIOBasic.-_20}> pos_0 pictOrigin_2_2)) (_Tuple2 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1)), _x_4_2 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_3_1) (_Tuple2 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)) in update picture_1::ospicture._Picture [0:select _x_4_2::_Tuple2 0,1:select _x_4_2::_Tuple2 1,3:update pen_2_3::ospicture._Pen [3:StdIOBasic._Point2 x_1_0 y_1_1]]) ) ) 
ospicture.pictundrawline !a_0 !b_1 !picture_2 = case picture_2 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictPen_1_3 (ospicture._Pen penSize_2_0 penForeColour_2_1 penBackColour_2_2 penPos_2_3 penFont_2_4 -> let _x_3_0 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_2_2) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_3_1 = pictCCall_12.winDrawLine (commondef.toTuple_74 (<{StdIOBasic.-_20}> a_0 pictOrigin_1_2)) (commondef.toTuple_74 (<{StdIOBasic.-_20}> b_1 pictOrigin_1_2)) (_Tuple2 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)), _x_3_2 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_2_1) (_Tuple2 (select _x_3_1::_Tuple2 0) (select _x_3_1::_Tuple2 1)) in update picture_2::ospicture._Picture [0:select _x_3_2::_Tuple2 0,1:select _x_3_2::_Tuple2 1]) ) 
ospicture.pictdrawchar !char_0::C !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let !_x_2_0 = _predefined._dummyForStrictAlias pictOrigin_1_2, !pen_2_1 = update pictPen_1_3::ospicture._Pen [3:StdIOBasic._Point2 (<{StdInt.+_6}> (select _x_2_0::StdIOBasic._Point2 0) (select _x_2_3::_Tuple4 0)) (<{StdInt.+_6}> (select _x_2_0::StdIOBasic._Point2 1) (select _x_2_3::_Tuple4 1))], _x_2_2 = pictCCall_12.winDrawChar (StdInt.toInt_20 char_0) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_2_3 = pictCCall_12.winGetPenPos (_Tuple2 (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1)) in update picture_1::ospicture._Picture [0:select _x_2_3::_Tuple4 2,1:select _x_2_3::_Tuple4 3,3:pen_2_1]) 
ospicture.pictundrawchar !char_0::C !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pen_1_3 pictToScreen_1_4 -> case pictOrigin_1_2 (StdIOBasic._Point2 ox_2_0 oy_2_1 -> case pen_1_3 (ospicture._Pen penSize_3_0 penForeColour_3_1 penBackColour_3_2 penPos_3_3 penFont_3_4 -> let _x_4_0 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_3_2) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_4_1 = pictCCall_12.winDrawChar (StdInt.toInt_20 char_0) (_Tuple2 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1)), _x_4_2 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_3_1) (_Tuple2 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)), _x_4_3 = pictCCall_12.winGetPenPos (_Tuple2 (select _x_4_2::_Tuple2 0) (select _x_4_2::_Tuple2 1)) in update picture_1::ospicture._Picture [0:select _x_4_3::_Tuple4 2,1:select _x_4_3::_Tuple4 3,3:update pen_1_3::ospicture._Pen [3:StdIOBasic._Point2 (<{StdInt.+_6}> (select _x_4_3::_Tuple4 0) ox_2_0) (<{StdInt.+_6}> (select _x_4_3::_Tuple4 1) oy_2_1)]]) ) ) 
ospicture.pictdrawstring !string_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictOrigin_1_2 (StdIOBasic._Point2 ox_2_0 oy_2_1 -> let _x_3_0 = pictCCall_12.winDrawString string_0 (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_3_1 = pictCCall_12.winGetPenPos (_Tuple2 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) in update picture_1::ospicture._Picture [0:select _x_3_1::_Tuple4 2,1:select _x_3_1::_Tuple4 3,3:update pictPen_1_3::ospicture._Pen [3:StdIOBasic._Point2 (<{StdInt.+_6}> (select _x_3_1::_Tuple4 0) ox_2_0) (<{StdInt.+_6}> (select _x_3_1::_Tuple4 1) oy_2_1)]]) ) 
ospicture.pictundrawstring !string_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pen_1_3 pictToScreen_1_4 -> case pictOrigin_1_2 (StdIOBasic._Point2 ox_2_0 oy_2_1 -> case pen_1_3 (ospicture._Pen penSize_3_0 penForeColour_3_1 penBackColour_3_2 penPos_3_3 penFont_3_4 -> let _x_4_0 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_3_2) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_4_1 = pictCCall_12.winDrawString string_0 (_Tuple2 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1)), _x_4_2 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_3_1) (_Tuple2 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)), _x_4_3 = pictCCall_12.winGetPenPos (_Tuple2 (select _x_4_2::_Tuple2 0) (select _x_4_2::_Tuple2 1)) in update picture_1::ospicture._Picture [0:select _x_4_3::_Tuple4 2,1:select _x_4_3::_Tuple4 3,3:update pen_1_3::ospicture._Pen [3:StdIOBasic._Point2 (<{StdInt.+_6}> (select _x_4_3::_Tuple4 0) ox_2_0) (<{StdInt.+_6}> (select _x_4_3::_Tuple4 1) oy_2_1)]]) ) ) 
ospicture.ovalToRect !_x_0 !_x_1 = case _x_0 (StdIOBasic._Point2 x_1_0 y_1_1 -> case _x_1 (StdPictureDef._Oval oval_rx_2_0 oval_ry_2_1 -> let rx_3_0::I = StdInt.abs_13 oval_rx_2_0, ry_3_1::I = StdInt.abs_13 oval_ry_2_1 in ostypes._OSRect (<{StdInt.-_7}> x_1_0 rx_3_0) (<{StdInt.-_7}> y_1_1 ry_3_1) (<{StdInt.+_6}> x_1_0 rx_3_0) (<{StdInt.+_6}> y_1_1 ry_3_1)) ) 
ospicture.pictdrawoval !center_0 !oval_1 !picture_2 = case picture_2 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winDrawOval (ospicture.ovalToRect (<{StdIOBasic.-_20}> center_0 pictOrigin_1_2) oval_1) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_2::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.pictfilloval !center_0 !oval_1 !picture_2 = case picture_2 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winFillOval (ospicture.ovalToRect (<{StdIOBasic.-_20}> center_0 pictOrigin_1_2) oval_1) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_2::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.pictundrawoval !center_0 !oval_1 !picture_2 = case picture_2 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictPen_1_3 (ospicture._Pen penSize_2_0 penForeColour_2_1 penBackColour_2_2 penPos_2_3 penFont_2_4 -> let _x_3_0 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_2_2) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_3_1 = pictCCall_12.winDrawOval (ospicture.ovalToRect (<{StdIOBasic.-_20}> center_0 pictOrigin_1_2) oval_1) (_Tuple2 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)), _x_3_2 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_2_1) (_Tuple2 (select _x_3_1::_Tuple2 0) (select _x_3_1::_Tuple2 1)) in update picture_2::ospicture._Picture [0:select _x_3_2::_Tuple2 0,1:select _x_3_2::_Tuple2 1]) ) 
ospicture.pictunfilloval !center_0 !oval_1 !picture_2 = case picture_2 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winEraseOval (ospicture.ovalToRect (<{StdIOBasic.-_20}> center_0 pictOrigin_1_2) oval_1) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_2::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.getcurve_rect_begin_end !start_0 !_x_1 = case start_0 (StdIOBasic._Point2 x_1_0 y_1_1 -> case _x_1 (StdPictureDef._Curve _x_2_0 curve_from_2_1 curve_to_2_2 curve_clockwise_2_3 -> case _x_2_0 (StdPictureDef._Oval oval_rx_3_0 oval_ry_3_1 -> case curve_clockwise_2_3 (True -> let <{rx`_5_0}>::I = StdReal.toReal_13 (StdInt.abs_13 oval_rx_3_0), cx_5_1::D = <{StdInt.-_7}> x_1_0 (StdInt.toInt_22 (<{StdReal.*_4}> (StdReal.cos_24 curve_from_2_1) <{rx`_5_0}>)), <{ry`_5_2}>::I = StdReal.toReal_13 (StdInt.abs_13 oval_ry_3_1), cy_5_3::D = <{StdInt.+_6}> y_1_1 (StdInt.toInt_22 (<{StdReal.*_4}> (StdReal.sin_23 curve_from_2_1) <{ry`_5_2}>)) in <{_Tuple3!7}> (ostypes._OSRect (<{StdInt.-_7}> cx_5_1 oval_rx_3_0) (<{StdInt.-_7}> cy_5_3 oval_ry_3_1) (<{StdInt.+_6}> cx_5_1 oval_rx_3_0) (<{StdInt.+_6}> cy_5_3 oval_ry_3_1)) (StdIOBasic._Point2 (<{StdInt.+_6}> cx_5_1 (StdInt.toInt_22 (<{StdReal.*_4}> (StdReal.cos_24 curve_to_2_2) <{rx`_5_0}>))) (<{StdInt.-_7}> cy_5_3 (StdInt.toInt_22 (<{StdReal.*_4}> (StdReal.sin_23 curve_to_2_2) <{ry`_5_2}>)))) start_0) (False -> let <{rx`_5_0}>::I = StdReal.toReal_13 (StdInt.abs_13 oval_rx_3_0), cx_5_1::D = <{StdInt.-_7}> x_1_0 (StdInt.toInt_22 (<{StdReal.*_4}> (StdReal.cos_24 curve_from_2_1) <{rx`_5_0}>)), <{ry`_5_2}>::I = StdReal.toReal_13 (StdInt.abs_13 oval_ry_3_1), cy_5_3::D = <{StdInt.+_6}> y_1_1 (StdInt.toInt_22 (<{StdReal.*_4}> (StdReal.sin_23 curve_from_2_1) <{ry`_5_2}>)) in <{_Tuple3!7}> (ostypes._OSRect (<{StdInt.-_7}> cx_5_1 oval_rx_3_0) (<{StdInt.-_7}> cy_5_3 oval_ry_3_1) (<{StdInt.+_6}> cx_5_1 oval_rx_3_0) (<{StdInt.+_6}> cy_5_3 oval_ry_3_1)) start_0 (StdIOBasic._Point2 (<{StdInt.+_6}> cx_5_1 (StdInt.toInt_22 (<{StdReal.*_4}> (StdReal.cos_24 curve_to_2_2) <{rx`_5_0}>))) (<{StdInt.-_7}> cy_5_3 (StdInt.toInt_22 (<{StdReal.*_4}> (StdReal.sin_23 curve_to_2_2) <{ry`_5_2}>))))) ) ) ) 
ospicture.pictdrawcurve !movePen_0::B !start_1 !curve_2 !picture_3 = case start_1 (StdIOBasic._Point2 x_1_0 y_1_1 -> case picture_3 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pictPen_2_3 pictToScreen_2_4 -> case (StdBool.not movePen_0) (True -> let _x_4_0 = ospicture.getcurve_rect_begin_end (<{StdIOBasic.-_20}> start_1 pictOrigin_2_2) curve_2, _x_4_1 = pictCCall_12.winDrawCurve (select _x_4_0::_Tuple3 0) (commondef.toTuple_74 (select _x_4_0::_Tuple3 1)) (commondef.toTuple_74 (select _x_4_0::_Tuple3 2)) (_Tuple2 pictContext_2_0 pictToolbox_2_1) in update picture_3::ospicture._Picture [0:select _x_4_1::_Tuple2 0,1:select _x_4_1::_Tuple2 1]) (False -> let _x_4_0 = ospicture.getcurve_rect_begin_end (<{StdIOBasic.-_20}> start_1 pictOrigin_2_2) curve_2, wend_4_1 = select _x_4_0::_Tuple3 2, _x_4_2 = pictCCall_12.winDrawCurve (select _x_4_0::_Tuple3 0) (commondef.toTuple_74 (select _x_4_0::_Tuple3 1)) (commondef.toTuple_74 wend_4_1) (_Tuple2 pictContext_2_0 pictToolbox_2_1) in ospicture.setpictpenpos (<{StdIOBasic.+_19}> wend_4_1 pictOrigin_2_2) (update picture_3::ospicture._Picture [0:select _x_4_2::_Tuple2 0,1:select _x_4_2::_Tuple2 1])) ) ) 
ospicture.pictundrawcurve !movePen_0::B !start_1 !curve_2 !picture_3 = case start_1 (StdIOBasic._Point2 x_1_0 y_1_1 -> case picture_3 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pictPen_2_3 pictToScreen_2_4 -> case pictPen_2_3 (ospicture._Pen penSize_3_0 penForeColour_3_1 penBackColour_3_2 penPos_3_3 penFont_3_4 -> case (StdBool.not movePen_0) (True -> let _x_5_0 = ospicture.getcurve_rect_begin_end (<{StdIOBasic.-_20}> start_1 pictOrigin_2_2) curve_2, _x_5_1 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_3_2) (_Tuple2 pictContext_2_0 pictToolbox_2_1), _x_5_2 = pictCCall_12.winDrawCurve (select _x_5_0::_Tuple3 0) (commondef.toTuple_74 (select _x_5_0::_Tuple3 1)) (commondef.toTuple_74 (select _x_5_0::_Tuple3 2)) (_Tuple2 (select _x_5_1::_Tuple2 0) (select _x_5_1::_Tuple2 1)), _x_5_3 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_3_1) (_Tuple2 (select _x_5_2::_Tuple2 0) (select _x_5_2::_Tuple2 1)) in update picture_3::ospicture._Picture [0:select _x_5_3::_Tuple2 0,1:select _x_5_3::_Tuple2 1]) (False -> let _x_5_0 = ospicture.getcurve_rect_begin_end (<{StdIOBasic.-_20}> start_1 pictOrigin_2_2) curve_2, wend_5_1 = select _x_5_0::_Tuple3 2, _x_5_2 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_3_2) (_Tuple2 pictContext_2_0 pictToolbox_2_1), _x_5_3 = pictCCall_12.winDrawCurve (select _x_5_0::_Tuple3 0) (commondef.toTuple_74 (select _x_5_0::_Tuple3 1)) (commondef.toTuple_74 wend_5_1) (_Tuple2 (select _x_5_2::_Tuple2 0) (select _x_5_2::_Tuple2 1)), _x_5_4 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_3_1) (_Tuple2 (select _x_5_3::_Tuple2 0) (select _x_5_3::_Tuple2 1)) in ospicture.setpictpenpos (<{StdIOBasic.+_19}> wend_5_1 pictOrigin_2_2) (update picture_3::ospicture._Picture [0:select _x_5_4::_Tuple2 0,1:select _x_5_4::_Tuple2 1])) ) ) ) 
ospicture.pictfillcurve !movePen_0::B !start_1 !curve_2 !picture_3 = case picture_3 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case (StdBool.not movePen_0) (True -> let _x_3_0 = ospicture.getcurve_rect_begin_end (<{StdIOBasic.-_20}> start_1 pictOrigin_1_2) curve_2, _x_3_1 = pictCCall_12.winFillWedge (select _x_3_0::_Tuple3 0) (commondef.toTuple_74 (select _x_3_0::_Tuple3 1)) (commondef.toTuple_74 (select _x_3_0::_Tuple3 2)) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_3::ospicture._Picture [0:select _x_3_1::_Tuple2 0,1:select _x_3_1::_Tuple2 1]) (False -> let _x_3_0 = ospicture.getcurve_rect_begin_end (<{StdIOBasic.-_20}> start_1 pictOrigin_1_2) curve_2, wend_3_1 = select _x_3_0::_Tuple3 2, _x_3_2 = pictCCall_12.winFillWedge (select _x_3_0::_Tuple3 0) (commondef.toTuple_74 (select _x_3_0::_Tuple3 1)) (commondef.toTuple_74 wend_3_1) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in ospicture.setpictpenpos (<{StdIOBasic.+_19}> wend_3_1 pictOrigin_1_2) (update picture_3::ospicture._Picture [0:select _x_3_2::_Tuple2 0,1:select _x_3_2::_Tuple2 1])) ) 
ospicture.pictunfillcurve !movePen_0::B !start_1 !curve_2 !picture_3 = case picture_3 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictPen_1_3 (ospicture._Pen penSize_2_0 penForeColour_2_1 penBackColour_2_2 penPos_2_3 penFont_2_4 -> case (StdBool.not movePen_0) (True -> let _x_4_0 = ospicture.getcurve_rect_begin_end (<{StdIOBasic.-_20}> start_1 pictOrigin_1_2) curve_2, _x_4_1 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_2_2) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_4_2 = pictCCall_12.winFillWedge (select _x_4_0::_Tuple3 0) (commondef.toTuple_74 (select _x_4_0::_Tuple3 1)) (commondef.toTuple_74 (select _x_4_0::_Tuple3 2)) (_Tuple2 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)), _x_4_3 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_2_1) (_Tuple2 (select _x_4_2::_Tuple2 0) (select _x_4_2::_Tuple2 1)) in update picture_3::ospicture._Picture [0:select _x_4_3::_Tuple2 0,1:select _x_4_3::_Tuple2 1]) (False -> let _x_4_0 = ospicture.getcurve_rect_begin_end (<{StdIOBasic.-_20}> start_1 pictOrigin_1_2) curve_2, wend_4_1 = select _x_4_0::_Tuple3 2, _x_4_2 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_2_2) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_4_3 = pictCCall_12.winFillWedge (select _x_4_0::_Tuple3 0) (commondef.toTuple_74 (select _x_4_0::_Tuple3 1)) (commondef.toTuple_74 wend_4_1) (_Tuple2 (select _x_4_2::_Tuple2 0) (select _x_4_2::_Tuple2 1)), _x_4_4 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_2_1) (_Tuple2 (select _x_4_3::_Tuple2 0) (select _x_4_3::_Tuple2 1)) in ospicture.setpictpenpos (<{StdIOBasic.+_19}> wend_4_1 pictOrigin_1_2) (update picture_3::ospicture._Picture [0:select _x_4_4::_Tuple2 0,1:select _x_4_4::_Tuple2 1])) ) ) 
ospicture.pictdrawrect !r_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winDrawRectangle (commondef.subVector_70 (StdIOBasic.toVector_23 pictOrigin_1_2) r_0) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_1::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.pictundrawrect !r_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> case pictPen_1_3 (ospicture._Pen penSize_2_0 penForeColour_2_1 penBackColour_2_2 penPos_2_3 penFont_2_4 -> let _x_3_0 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_2_2) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_3_1 = pictCCall_12.winDrawRectangle (commondef.subVector_70 (StdIOBasic.toVector_23 pictOrigin_1_2) r_0) (_Tuple2 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)), _x_3_2 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_2_1) (_Tuple2 (select _x_3_1::_Tuple2 0) (select _x_3_1::_Tuple2 1)) in update picture_1::ospicture._Picture [0:select _x_3_2::_Tuple2 0,1:select _x_3_2::_Tuple2 1]) ) 
ospicture.pictfillrect !r_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winFillRectangle (commondef.subVector_70 (StdIOBasic.toVector_23 pictOrigin_1_2) r_0) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_1::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.pictunfillrect !r_0 !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winEraseRectangle (commondef.subVector_70 (StdIOBasic.toVector_23 pictOrigin_1_2) r_0) (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_1::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.pictscroll !r_0 !v_1 !picture_2 = case picture_2 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winScrollRectangle (commondef.subVector_70 (StdIOBasic.toVector_23 pictOrigin_1_2) r_0) (commondef.toTuple_76 v_1) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_2_1 = select _x_2_0::_Tuple2 1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update picture_2::ospicture._Picture [0:select _x_2_1::_Tuple2 0,1:select _x_2_1::_Tuple2 1])) 
ospicture.pictscroll2 !r_0 !v_1 !picture_2 = case picture_2 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winScrollRectangle2 (commondef.subVector_70 (StdIOBasic.toVector_23 pictOrigin_1_2) r_0) (commondef.toTuple_76 v_1) (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_2_1 = select _x_2_0::_Tuple2 1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update picture_2::ospicture._Picture [0:select _x_2_1::_Tuple2 0,1:select _x_2_1::_Tuple2 1])) 
ospicture.transferShape_75::I !_x_0 !_x_1 !tb_2::I = case _x_0 (_Tuple2 x_1_0 y_1_1 -> case _x_1 (_predefined._Cons _x_2_0 vs_2_1 -> case _x_2_0 (StdIOBasic._Vector2 vx_3_0 vy_3_1 -> let newpos_4_0 = _Tuple2 (<{StdInt.+_6}> x_1_0 vx_3_0) (<{StdInt.+_6}> y_1_1 vy_3_1) in ospicture.transferShape_75 newpos_4_0 vs_2_1 (pictCCall_12.winAddPolygonPoint newpos_4_0 tb_2)) ) ) (_ -> tb_2)
ospicture.transferPolygon::I !start_0 !vs_1 !tb_2::I = let wstart_1_0 = commondef.toTuple_74 start_0 in ospicture.transferShape_75 wstart_1_0 vs_1 (pictCCall_12.winAddPolygonPoint wstart_1_0 (pictCCall_12.winStartPolygon (<{StdInt.+_6}> 1 (StdList.length_47 vs_1)) tb_2))
ospicture.pictdrawpolygon !start_0 !_x_1 !picture_2 = case _x_1 (StdPictureDef._Polygon polygon_shape_1_0 -> case picture_2 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pictPen_2_3 pictToScreen_2_4 -> let _x_3_0 = pictCCall_12.winDrawPolygon (_Tuple2 pictContext_2_0 (ospicture.transferPolygon (<{StdIOBasic.-_20}> start_0 pictOrigin_2_2) polygon_shape_1_0 pictToolbox_2_1)) in update picture_2::ospicture._Picture [0:select _x_3_0::_Tuple2 0,1:pictCCall_12.winEndPolygon (select _x_3_0::_Tuple2 1)]) ) 
ospicture.pictundrawpolygon !start_0 !_x_1 !picture_2 = case _x_1 (StdPictureDef._Polygon polygon_shape_1_0 -> case picture_2 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pictPen_2_3 pictToScreen_2_4 -> case pictPen_2_3 (ospicture._Pen penSize_3_0 penForeColour_3_1 penBackColour_3_2 penPos_3_3 penFont_3_4 -> let _x_4_0 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_3_2) (_Tuple2 pictContext_2_0 (ospicture.transferPolygon (<{StdIOBasic.-_20}> start_0 pictOrigin_2_2) polygon_shape_1_0 pictToolbox_2_1)), _x_4_1 = pictCCall_12.winDrawPolygon (_Tuple2 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1)), _x_4_2 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_3_1) (_Tuple2 (select _x_4_1::_Tuple2 0) (pictCCall_12.winEndPolygon (select _x_4_1::_Tuple2 1))) in update picture_2::ospicture._Picture [0:select _x_4_2::_Tuple2 0,1:select _x_4_2::_Tuple2 1]) ) ) 
ospicture.pictfillpolygon !start_0 !_x_1 !picture_2 = case _x_1 (StdPictureDef._Polygon polygon_shape_1_0 -> case picture_2 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pictPen_2_3 pictToScreen_2_4 -> case pictPen_2_3 (ospicture._Pen penSize_3_0 penForeColour_3_1 penBackColour_3_2 penPos_3_3 penFont_3_4 -> let _x_4_0 = pictCCall_12.winSetPenSize 1 (_Tuple2 pictContext_2_0 (ospicture.transferPolygon (<{StdIOBasic.-_20}> start_0 pictOrigin_2_2) polygon_shape_1_0 pictToolbox_2_1)), _x_4_1 = pictCCall_12.winFillPolygon (_Tuple2 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1)), _x_4_2 = pictCCall_12.winDrawPolygon (_Tuple2 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)), _x_4_3 = pictCCall_12.winSetPenSize penSize_3_0 (_Tuple2 (select _x_4_2::_Tuple2 0) (select _x_4_2::_Tuple2 1)) in update picture_2::ospicture._Picture [0:select _x_4_3::_Tuple2 0,1:pictCCall_12.winEndPolygon (select _x_4_3::_Tuple2 1)]) ) ) 
ospicture.pictunfillpolygon !start_0 !_x_1 !picture_2 = case _x_1 (StdPictureDef._Polygon polygon_shape_1_0 -> case picture_2 (ospicture._Picture pictContext_2_0 pictToolbox_2_1 pictOrigin_2_2 pictPen_2_3 pictToScreen_2_4 -> case pictPen_2_3 (ospicture._Pen penSize_3_0 penForeColour_3_1 penBackColour_3_2 penPos_3_3 penFont_3_4 -> let _x_4_0 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penBackColour_3_2) (_Tuple2 pictContext_2_0 (ospicture.transferPolygon (<{StdIOBasic.-_20}> start_0 pictOrigin_2_2) polygon_shape_1_0 pictToolbox_2_1)), _x_4_1 = pictCCall_12.winSetPenSize 1 (_Tuple2 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1)), _x_4_2 = pictCCall_12.winFillPolygon (_Tuple2 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)), _x_4_3 = pictCCall_12.winDrawPolygon (_Tuple2 (select _x_4_2::_Tuple2 0) (select _x_4_2::_Tuple2 1)), _x_4_4 = pictCCall_12.winSetPenSize penSize_3_0 (_Tuple2 (select _x_4_3::_Tuple2 0) (select _x_4_3::_Tuple2 1)), _x_4_5 = pictCCall_12.winSetPenColor (ospicture.toRGBtriple penForeColour_3_1) (_Tuple2 (select _x_4_4::_Tuple2 0) (pictCCall_12.winEndPolygon (select _x_4_4::_Tuple2 1))) in update picture_2::ospicture._Picture [0:select _x_4_5::_Tuple2 0,1:select _x_4_5::_Tuple2 1]) ) ) 
ospicture.pictgetcliprgn !picture_0 = case picture_0 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winGetClipRgnPicture (_Tuple2 pictContext_1_0 pictToolbox_1_1), _x_2_1 = select _x_2_0::_Tuple2 1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update picture_0::ospicture._Picture [0:select _x_2_1::_Tuple2 0,1:select _x_2_1::_Tuple2 1])) 
ospicture.pictsetcliprgn !cliprgn_0::I !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winSetClipRgnPicture cliprgn_0 (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_1::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.pictandcliprgn !cliprgn_0::I !picture_1 = case picture_1 (ospicture._Picture pictContext_1_0 pictToolbox_1_1 pictOrigin_1_2 pictPen_1_3 pictToScreen_1_4 -> let _x_2_0 = pictCCall_12.winClipRgnPicture cliprgn_0 (_Tuple2 pictContext_1_0 pictToolbox_1_1) in update picture_1::ospicture._Picture [0:select _x_2_0::_Tuple2 0,1:select _x_2_0::_Tuple2 1]) 
ospicture.getResolutionC !_x_0::I !_x_1::I = error "no AnyCodeExpr"
ospicture.getPictureScalingFactors !_x_0::I !_x_1::I = error "no AnyCodeExpr"
ospicture.getpenattribute_76 !_x_0 = case _x_0 (ospicture._Pen penSize_1_0 penForeColour_1_1 penBackColour_1_2 penPos_1_3 penFont_1_4 -> _predefined._Cons (StdPictureDef.PenSize penSize_1_0) (_predefined._Cons (StdPictureDef.PenPos penPos_1_3) (_predefined._Cons (StdPictureDef.PenColour penForeColour_1_1) (_predefined._Cons (StdPictureDef.PenBack penBackColour_1_2) (_predefined._Cons (StdPictureDef.PenFont penFont_1_4) _predefined._Nil))))) 
ospicture.getpictpenattributes !picture_0 = let _x_1_0 = ospicture.getpictpen picture_0 in <{_Tuple2!3}> (ospicture.getpenattribute_76 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
ospicture.getPenPenPos !pen_0 = case pen_0 (ospicture._Pen penSize_1_0 penForeColour_1_1 penBackColour_1_2 penPos_1_3 penFont_1_4 -> case penPos_1_3 (StdIOBasic._Point2 x_2_0 y_2_1 -> <{_Tuple2!3}> (StdIOBasic._Point2 x_2_0 y_2_1) pen_0) ) 
<{ospicture.TD;Picture}> _x_0::B = _predefined._Nil
<{ospicture.TD;Origin}> _x_0::B = _predefined._Nil
<{ospicture.TD;Pen}> _x_0::B = _predefined._Nil


|| Converted Records
:: ospicture._Picture = {!ospicture.pictContext, !ospicture.pictToolbox, !ospicture.pictOrigin, !ospicture.pictPen, !ospicture.pictToScreen::B}

:: ospicture._Pen = {!ospicture.penSize::I, !ospicture.penForeColour, !ospicture.penBackColour, !ospicture.penPos, !ospicture.penFont}

:: <{ospicture.gEq_s;}> = {!ospicture.gEq_s}

:: <{ospicture.gEq_ss;}> = {!ospicture.gEq_ss}

:: <{ospicture.gEq_sss;}> = {!ospicture.gEq_sss}

:: <{ospicture.gEq_ssss;}> = {!ospicture.gEq_ssss}

:: <{ospicture.gEq_sssss;}> = {!ospicture.gEq_sssss}

:: <{ospicture.gEq_ssssss;}> = {!ospicture.gEq_ssssss}

:: <{ospicture.gEq_sssssss;}> = {!ospicture.gEq_sssssss}

:: <{ospicture.gEq_ssssssss;}> = {!ospicture.gEq_ssssssss}

:: <{ospicture.gEq_sssssssss;}> = {!ospicture.gEq_sssssssss}

:: <{ospicture.bimap_s;}> = {ospicture.bimap_s}

:: <{ospicture.bimap_ss;}> = {ospicture.bimap_ss}

:: <{ospicture.bimap_sss;}> = {ospicture.bimap_sss}

