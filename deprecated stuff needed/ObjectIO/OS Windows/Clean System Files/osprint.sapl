|| ?module? osprint


osprint.os_getpagedimensionsC !_x_0 !_x_1 !_x_2 !_x_3::B = error "no AnyCodeExpr"
osprint.os_getpagedimensions !_x_0 !emulateScreenRes_1::B = case _x_0 (osprint._PrintSetup devmode_1_0 device_1_1 driver_1_2 output_1_3 -> osprint.os_getpagedimensionsC devmode_1_0 device_1_1 driver_1_2 emulateScreenRes_1) 
osprint.getDevmodeSizeC !_x_0 = error "no AnyCodeExpr"
osprint.getDefaultDevmodeC !_x_0 !_x_1::I !_x_2 !_x_3 = error "no AnyCodeExpr"
osprint.os_defaultprintsetup !env_0 = let _x_1_0::I = osprint.getDevmodeSizeC env_0, dmSize_1_1 = select _x_1_0::_Tuple6 0 in case (<{StdInt.==_16}> dmSize_1_1 0) (True -> <{_Tuple2!3}> (osprint._PrintSetup "\0" "\0" "\0" "\0") (select _x_1_0::_Tuple6 5)) (False -> let devmode_3_0 = _SystemArray.update_21 (_SystemArray.createArray_17 dmSize_1_1 ' ') (<{StdInt.-_7}> dmSize_1_1 StdInt.one_11) '\0', device_3_1 = select _x_1_0::_Tuple6 2 in <{_Tuple2!3}> (osprint._PrintSetup devmode_3_0 device_3_1 (select _x_1_0::_Tuple6 3) (select _x_1_0::_Tuple6 4)) (osprint.getDefaultDevmodeC devmode_3_0 (select _x_1_0::_Tuple6 1) device_3_1 (select _x_1_0::_Tuple6 5))) 
osprint.os_printsetupvalidC !_x_0 !_x_1 !_x_2 !_x_3 = error "no AnyCodeExpr"
osprint.os_printsetupvalid !_x_0 !env_1 = case _x_0 (osprint._PrintSetup devmode_1_0 device_1_1 driver_1_2 output_1_3 -> osprint.os_printsetupvalidC devmode_1_0 device_1_1 driver_1_2 env_1) 
osprint.os_printsetuptostring !_x_0 = case _x_0 (osprint._PrintSetup devmode_1_0 device_1_1 driver_1_2 output_1_3 -> <{StdString.+++_11}> (StdString.toString_5 (_SystemArray.size_20 devmode_1_0)) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_5 (_SystemArray.size_20 device_1_1)) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_5 (_SystemArray.size_20 driver_1_2)) (<{StdString.+++_11}> " " (<{StdString.+++_11}> devmode_1_0 (<{StdString.+++_11}> device_1_1 (<{StdString.+++_11}> driver_1_2 output_1_3))))))))) 
osprint.anon_55 !f_0 g_1 x_2 = f_0 (g_1 x_2)
<{osprint.c;472;23_45}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_3 g_i_1 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{osprint.c;472;23_45}> _vArray_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_2_0)) (False -> _predefined._Nil) 
osprint.splitInt_46 akku_0 !_x_1 = case _x_1 (_predefined._Nil -> _Tuple2 (StdList.reverse akku_0) _predefined._Nil) (_predefined._Cons ch_1_0 chs_1_1 -> case (StdChar.isDigit ch_1_0) (True -> osprint.splitInt_46 (_predefined._Cons ch_1_0 akku_0) chs_1_1) (False -> _Tuple2 (StdList.reverse akku_0) chs_1_1) ) 
osprint.listTo3Tuple_47 !_x_0 = case _x_0 (_predefined._Cons e1_1_0 _x_1_1 -> case _x_1_1 (_predefined._Cons e2_2_0 _x_2_1 -> case _x_2_1 (_predefined._Cons e3_3_0 _x_3_1 -> case _x_3_1 (_predefined._Nil -> _Tuple3 e1_1_0 e2_2_0 e3_3_0) ) ) ) 
<{osprint.c;472;23_100}> !g_i_0::I !g_s_1::I g_a_2 = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_22 g_a_2 g_i_0 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{osprint.c;472;23_100}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1 g_a_2_0)) (False -> _predefined._Nil) 
osprint.anon_101::I !g_0 x_1 = StdInt.toInt_23 (g_0 x_1)
osprint.anon_102::I !x_0 = StdInt.toInt_23 (StdList.toString_79 x_0)
osprint.os_stringtoprintsetup !string_0 = let !chList_1_0 = <{osprint.c;472;23_100}> 0 (<{StdInt.-_7}> (select _x_1_14::_Tuple2 0) 1) (select _x_1_14::_Tuple2 1), !_x_1_1 = StdFunc.seqList (StdList.repeatn 3 (osprint.splitInt_46 _predefined._Nil)) chList_1_0, !sizes_1_2 = StdList.map osprint.anon_102 (select _x_1_1::_Tuple2 0), !_x_1_3 = osprint.listTo3Tuple_47 sizes_1_2, !devmode_1_4 = StdList.toString_79 (<{StdList.%_48}> rest_1_11 (_Tuple2 0 (<{StdInt.-_7}> devmodeSize_1_10 1))), !driverStart_1_5::I = <{StdInt.+_6}> devmodeSize_1_10 deviceSize_1_13, !device_1_6 = StdList.toString_79 (<{StdList.%_48}> rest_1_11 (_Tuple2 devmodeSize_1_10 (<{StdInt.-_7}> driverStart_1_5 1))), !outputStart_1_7::I = <{StdInt.+_6}> driverStart_1_5 driverSize_1_12, !driver_1_8 = StdList.toString_79 (<{StdList.%_48}> rest_1_11 (_Tuple2 driverStart_1_5 (<{StdInt.-_7}> outputStart_1_7 1))), !output_1_9 = StdList.toString_79 (<{StdList.%_48}> rest_1_11 (_Tuple2 outputStart_1_7 (<{StdInt.-_7}> (_SystemArray.size_20 string_0) 1))), devmodeSize_1_10 = select _x_1_3::_Tuple3 0, rest_1_11::I = select _x_1_1::_Tuple2 1, driverSize_1_12::I = select _x_1_3::_Tuple3 2, deviceSize_1_13 = select _x_1_3::_Tuple3 1, _x_1_14::I = _SystemArray.usize_23 string_0 in case (case (<{StdInt.==_16}> (_SystemArray.size_20 devmode_1_4) devmodeSize_1_10) (True -> case (<{StdInt.==_16}> (_SystemArray.size_20 device_1_6) deviceSize_1_13) (True -> case (<{StdInt.==_16}> (_SystemArray.size_20 driver_1_8) driverSize_1_12) (True -> case (<{StdInt.==_16}> (_SystemArray.size_20 output_1_9) (<{StdInt.-_7}> (StdList.length_47 rest_1_11) outputStart_1_7)) (True -> case (<{StdInt.<_17}> 0 devmodeSize_1_10) (True -> case (<{StdInt.<_17}> 0 deviceSize_1_13) (True -> case (<{StdInt.<_17}> 0 driverSize_1_12) (True -> <{StdInt.<_17}> 0 (_SystemArray.size_20 output_1_9)) (False -> False) ) (False -> False) ) (False -> False) ) (False -> False) ) (False -> False) ) (False -> False) ) (False -> False) ) (True -> osprint._PrintSetup devmode_1_4 device_1_6 driver_1_8 output_1_9) (False -> osprint._PrintSetup "\0" "\0" "\0" "\0") 
osprint.os_installprinter::I !_x_0::I = error "no AnyCodeExpr"
osprint.EnvGetOS !env_0 = <{_Tuple2!3}> 42 env_0
osprint.printSetup !_x_0::I !_x_1::I !_x_2::I !_x_3::I !_x_4::I !_x_5::I !_x_6::I = error "no AnyCodeExpr"
<{osprint.handleContextOSEvent`}> !osEvent_0 !context_1 !tb_2::I = let _x_1_0 = scheduler.handleContextOSEvent osEvent_0 context_1 in <{_Tuple3!7}> (osevent.setReplyInOSEvent (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1) tb_2
osprint.CCPrintSetupDialog !nothing_0 !devmodeSize_1::I !devmodePtr_2::I !devicePtr_3::I !driverPtr_4::I !outputPtr_5::I !os_6::I = case nothing_0 (Data.Maybe.Nothing -> let _x_2_0 = osprint.printSetup 1 devmodeSize_1 devmodePtr_2 devicePtr_3 driverPtr_4 outputPtr_5 os_6 in <{_Tuple4!15}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) nothing_0 (select _x_2_0::_Tuple3 2)) (Data.Maybe.Just context_1_0 -> let _x_2_0 = clCrossCall_12.issueCleanRequest <{osprint.handleContextOSEvent`}> (clCrossCall_12._CrossCallInfo 1828 devmodeSize_1 devmodePtr_2 devicePtr_3 driverPtr_4 outputPtr_5 0) context_1_0 os_6, rcci_2_1 = select _x_2_0::_Tuple3 0 in <{_Tuple4!15}> (select rcci_2_1::clCrossCall_12._CrossCallInfo 1) (select rcci_2_1::clCrossCall_12._CrossCallInfo 2) (Data.Maybe.Just (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) 
osprint.release_memory_handles::I !_x_0::I !_x_1::I = error "no AnyCodeExpr"
osprint.EnvSetOS !os_0::I !env_1 = env_1
osprint.get_printSetup_with_PRINTDLG !_x_0::I !_x_1::I = error "no AnyCodeExpr"
osprint.printSetupDialogBoth !print_setup_0 !mb_context_1 = case print_setup_0 (osprint._PrintSetup devmode_1_0 device_1_1 driver_1_2 output_1_3 -> let _x_2_0 = osprint.EnvGetOS mb_context_1, mb_context_2_1::I = select _x_2_0::_Tuple2 1, os_2_2::I = select _x_2_0::_Tuple2 0, os_2_3 = osprint.os_installprinter os_2_2, _x_2_4::I = clCCall_12.winMakeCString devmode_1_0 os_2_3, devmodePtr_2_5::I = select _x_2_4::_Tuple2 0, os_2_6 = select _x_2_4::_Tuple2 1, _x_2_7::I = clCCall_12.winMakeCString device_1_1 os_2_6, devicePtr_2_8::I = select _x_2_7::_Tuple2 0, os_2_9 = select _x_2_7::_Tuple2 1, _x_2_10::I = clCCall_12.winMakeCString driver_1_2 os_2_9, driverPtr_2_11::I = select _x_2_10::_Tuple2 0, os_2_12 = select _x_2_10::_Tuple2 1, _x_2_13::I = clCCall_12.winMakeCString output_1_3 os_2_12, outputPtr_2_14::I = select _x_2_13::_Tuple2 0, os_2_15 = select _x_2_13::_Tuple2 1, _x_2_16 = osprint.CCPrintSetupDialog mb_context_2_1 (_SystemArray.size_20 devmode_1_0) devmodePtr_2_5 devicePtr_2_8 driverPtr_2_11 outputPtr_2_14 os_2_15 in case (<{StdInt.==_16}> (select _x_2_16::_Tuple4 0) 0) (True -> <{_Tuple2!3}> print_setup_0 (osprint.EnvSetOS (osprint.release_memory_handles (select _x_2_16::_Tuple4 1) (clCCall_12.winReleaseCString outputPtr_2_14 (clCCall_12.winReleaseCString driverPtr_2_11 (clCCall_12.winReleaseCString devicePtr_2_8 (clCCall_12.winReleaseCString devmodePtr_2_5 (select _x_2_16::_Tuple4 3)))))) (select _x_2_16::_Tuple4 2))) (False -> let pdPtr_4_0 = select _x_2_16::_Tuple4 1, _x_4_1 = osprint.get_printSetup_with_PRINTDLG pdPtr_4_0 (clCCall_12.winReleaseCString outputPtr_2_14 (clCCall_12.winReleaseCString driverPtr_2_11 (clCCall_12.winReleaseCString devicePtr_2_8 (clCCall_12.winReleaseCString devmodePtr_2_5 (select _x_2_16::_Tuple4 3))))), _x_4_2::I = select _x_4_1::_Tuple2 0 in <{_Tuple2!3}> (osprint._PrintSetup (select _x_4_2::_Tuple4 0) (select _x_4_2::_Tuple4 1) (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) (osprint.EnvSetOS (osprint.release_memory_handles pdPtr_4_0 (select _x_4_1::_Tuple2 1)) (select _x_2_16::_Tuple4 2))) ) 
osprint.addSemaphor !_x_0::I !_x_1::I = error "no AnyCodeExpr"
osprint.getDC !_x_0::I !_x_1::I !_x_2::I !_x_3::I !_x_4::I !_x_5::I !_x_6::I !_x_7::I !_x_8::I = error "no AnyCodeExpr"
osprint.CCgetDC !doDialog_0::I !emulateScreen_1::I !devmodeSize_2::I !devmodePtr_3::I !devicePtr_4::I !driverPtr_5::I !outputPtr_6::I !_x_7 !os_8::I = case _x_7 (Data.Maybe.Nothing -> let _x_2_0 = osprint.getDC doDialog_0 emulateScreen_1 1 devmodeSize_2 devmodePtr_3 devicePtr_4 driverPtr_5 outputPtr_6 os_8 in <{_Tuple5!31}> (select _x_2_0::_Tuple7 0) (_Tuple4 (select _x_2_0::_Tuple7 1) (select _x_2_0::_Tuple7 2) (select _x_2_0::_Tuple7 3) (select _x_2_0::_Tuple7 5)) (select _x_2_0::_Tuple7 4) Data.Maybe.Nothing (select _x_2_0::_Tuple7 6)) (Data.Maybe.Just context_1_0 -> let _x_2_0 = clCrossCall_12.issueCleanRequest <{osprint.handleContextOSEvent`}> (clCrossCall_12._CrossCallInfo 1824 (StdInt.bitor doDialog_0 emulateScreen_1) devmodeSize_2 devmodePtr_3 devicePtr_4 driverPtr_5 outputPtr_6) context_1_0 os_8, rcci_2_1 = select _x_2_0::_Tuple3 0 in <{_Tuple5!31}> (select rcci_2_1::clCrossCall_12._CrossCallInfo 1) (_Tuple4 (select rcci_2_1::clCrossCall_12._CrossCallInfo 2) (select rcci_2_1::clCrossCall_12._CrossCallInfo 3) (select rcci_2_1::clCrossCall_12._CrossCallInfo 4) (select rcci_2_1::clCrossCall_12._CrossCallInfo 6)) (select rcci_2_1::clCrossCall_12._CrossCallInfo 5) (Data.Maybe.Just (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) 
osprint.continuation_44 err_0 !_x_1 mb_context_2 !_x_3 = case _x_1 (_Tuple4 first_1_0 last_1_1 copies_1_2 hdc_1_3 -> case _x_3 (_Tuple2 _x_2_0 os_2_1 -> case _x_2_0 (_Tuple4 devmode_3_0 device_3_1 driver_3_2 output_3_3 -> let x_4_0::I = 1, <{first`_4_1}>::I = <{osprint._c;51;16_103}> (<{StdInt.<_17}> x_4_0 first_1_0) first_1_0 x_4_0, x_4_2::I = 1 in _Tuple5 err_0 hdc_1_3 (osprint._PrintInfo (osprint._PrintSetup devmode_3_0 device_3_1 driver_3_2 output_3_3) (osprint._JobInfo (_Tuple2 <{first`_4_1}> (<{osprint._c;51;16_104}> (<{StdInt.<_17}> <{first`_4_1}> last_1_1) last_1_1 <{first`_4_1}>)) (<{osprint._c;51;16_105}> (<{StdInt.<_17}> x_4_2 copies_1_2) copies_1_2 x_4_2))) mb_context_2 os_2_1) ) ) 
<{osprint._c;51;16_105}>::I !_x_0::B copies_1::I x_2::I = case _x_0 (True -> copies_1) (_ -> x_2)
<{osprint._c;51;16_104}>::I !_x_0::B last_1::I <{first`_2}>::I = case _x_0 (True -> last_1) (_ -> <{first`_2}>)
<{osprint._c;51;16_103}>::I !_x_0::B first_1::I x_2::I = case _x_0 (True -> first_1) (_ -> x_2)
osprint.getPrintInfo !doDialog_0::B !emulateScreen_1::B !_x_2 !mb_context_3 !os_4::I = case _x_2 (osprint._PrintSetup devmode_1_0 device_1_1 driver_1_2 output_1_3 -> let _x_2_0::I = clCCall_12.winMakeCString devmode_1_0 os_4, devmodePtr_2_1 = select _x_2_0::_Tuple2 0, os_2_2::I = select _x_2_0::_Tuple2 1, _x_2_3::I = clCCall_12.winMakeCString device_1_1 os_2_2, devicePtr_2_4 = select _x_2_3::_Tuple2 0, os_2_5::I = select _x_2_3::_Tuple2 1, _x_2_6::I = clCCall_12.winMakeCString driver_1_2 os_2_5, driverPtr_2_7 = select _x_2_6::_Tuple2 0, os_2_8::I = select _x_2_6::_Tuple2 1, _x_2_9::I = clCCall_12.winMakeCString output_1_3 os_2_8, outputPtr_2_10 = select _x_2_9::_Tuple2 0, os_2_11::I = select _x_2_9::_Tuple2 1, _x_2_12::I = osprint.CCgetDC (<{osprint._if;241;26_106}> doDialog_0) (<{osprint._if;241;44_107}> emulateScreen_1) (_SystemArray.size_20 devmode_1_0) devmodePtr_2_1 devicePtr_2_4 driverPtr_2_7 outputPtr_2_10 mb_context_3 os_2_11, err_2_13 = select _x_2_12::_Tuple5 0 in case (case doDialog_0 (True -> <{StdInt.==_16}> err_2_13 -1) (False -> False) ) (True -> let pdPtr_4_0 = select _x_2_12::_Tuple5 2, _x_4_1::I = osprint.get_printSetup_with_PRINTDLG pdPtr_4_0 (clCCall_12.winReleaseCString outputPtr_2_10 (clCCall_12.winReleaseCString driverPtr_2_7 (clCCall_12.winReleaseCString devicePtr_2_4 (clCCall_12.winReleaseCString devmodePtr_2_1 (select _x_2_12::_Tuple5 4))))) in osprint.continuation_44 err_2_13 (select _x_2_12::_Tuple5 1) (select _x_2_12::_Tuple5 3) (_Tuple2 (select _x_4_1::_Tuple2 0) (osprint.release_memory_handles pdPtr_4_0 (select _x_4_1::_Tuple2 1)))) (False -> osprint.continuation_44 err_2_13 (select _x_2_12::_Tuple5 1) (select _x_2_12::_Tuple5 3) (_Tuple2 (_Tuple4 devmode_1_0 device_1_1 driver_1_2 output_1_3) (clCCall_12.winReleaseCString outputPtr_2_10 (clCCall_12.winReleaseCString driverPtr_2_7 (clCCall_12.winReleaseCString devicePtr_2_4 (clCCall_12.winReleaseCString devmodePtr_2_1 (select _x_2_12::_Tuple5 4))))))) ) 
<{osprint._if;241;44_107}>::I !emulateScreen_0::B = case emulateScreen_0 (True -> 2) (_ -> 0)
<{osprint._if;241;26_106}>::I !doDialog_0::B = case doDialog_0 (True -> 1) (_ -> 0)
osprint.startDoc !_x_0::I !_x_1::I = error "no AnyCodeExpr"
osprint.CCstartDoc !hdc_0::I !_x_1 !os_2::I = case _x_1 (Data.Maybe.Nothing -> let _x_2_0 = osprint.startDoc hdc_0 os_2 in <{_Tuple3!7}> (select _x_2_0::_Tuple2 0) Data.Maybe.Nothing (select _x_2_0::_Tuple2 1)) (Data.Maybe.Just context_1_0 -> let _x_2_0 = clCrossCall_12.issueCleanRequest <{osprint.handleContextOSEvent`}> (clCrossCall_12._CrossCallInfo 1821 hdc_0 0 0 0 0 0) context_1_0 os_2 in <{_Tuple3!7}> (select (select _x_2_0::_Tuple3 0)::clCrossCall_12._CrossCallInfo 1) (Data.Maybe.Just (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) 
osprint.deleteDC::I !_x_0::I !_x_1::I = error "no AnyCodeExpr"
osprint.initPicture !origin_0 !intPict_1 = ospicture.packPicture origin_0 ospicture.defaultPen False (select intPict_1::_Tuple2 0) (select intPict_1::_Tuple2 1)
osprint.evtlSwitchToOS !_x_0::I !_x_1::I !_x_2 !os_3::I = case _x_2 (Data.Maybe.Nothing -> <{_Tuple2!3}> Data.Maybe.Nothing os_3) (Data.Maybe.Just context_1_0 -> let _x_2_0 = clCCall_12.winMakeCString (<{osprint._if;331;21_109}> (<{StdInt.==_16}> _x_0 0) _x_0) os_3, textPtr_2_1::I = select _x_2_0::_Tuple2 0, _x_2_2 = clCrossCall_12.issueCleanRequest <{osprint.handleContextOSEvent`}> (clCrossCall_12._CrossCallInfo 1823 textPtr_2_1 0 0 0 0 0) context_1_0 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (Data.Maybe.Just (select _x_2_2::_Tuple3 1)) (clCCall_12.winReleaseCString textPtr_2_1 (select _x_2_2::_Tuple3 2))) 
<{osprint._if;331;21_109}> !_x_0::B _x_1::I = case _x_0 (True -> "") (_ -> <{StdString.+++_11}> (StdString.toString_5 _x_1) (<{StdString.+++_11}> " page" (<{StdString.+++_11}> (<{osprint._if;332;57_108}> (<{StdInt.==_16}> _x_1 1)) " printed")))
<{osprint._if;332;57_108}> !_x_0::B = case _x_0 (True -> "") (_ -> "s")
osprint.startPage !_x_0::I !_x_1::I = error "no AnyCodeExpr"
osprint.endPage !_x_0::I !_x_1::I = error "no AnyCodeExpr"
osprint.wasCanceled !_x_0::I = error "no AnyCodeExpr"
osprint.printPages _x_0::I _x_1 !_x_2 state_3 hdc_4::I mb_context_5 !os_6::I = case _x_2 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_0 (True -> <{_Tuple4!8}> state_3 hdc_4 mb_context_5 os_6) (False -> let _x_3_0 = osprint.evtlSwitchToOS _x_0 hdc_4 mb_context_5 os_6, os_3_1::I = select _x_3_0::_Tuple2 1, _x_3_2 = osprint.startPage hdc_4 os_3_1 in case (<{StdInt.==_16}> (select _x_3_2::_Tuple2 0) 0) (True -> StdMisc.abort "\nPrint08: Failed in \"StartPage\". Probably not enough memory.") (False -> let os_5_0 = select _x_3_2::_Tuple2 1, picture_5_1::I = osprint.initPicture _x_1_1 (_Tuple2 hdc_4 os_5_0), _x_5_2 = _x_1 (_Tuple2 state_3 picture_5_1), _x_5_3::I = select _x_5_2::_Tuple2 0, _x_5_4::I = select _x_5_2::_Tuple2 1, picture_5_5 = select _x_5_4::_Tuple2 1, _x_5_6 = ospicture.unpackPicture picture_5_5, hdc_5_7 = select _x_5_6::_Tuple5 3, os_5_8 = select _x_5_6::_Tuple5 4, _x_5_9 = osprint.endPage hdc_5_7 os_5_8, os_5_10 = select _x_5_9::_Tuple2 1, _x_5_11::I = osprint.wasCanceled os_5_10 in osprint.printPages (<{StdInt.+_6}> _x_0 StdInt.one_11) _x_1 (_Tuple2 (osprint._f110_110 (select _x_5_3::_Tuple2 0) _x_5_11 _x_5_9) (select _x_5_3::_Tuple2 1)) (select _x_5_4::_Tuple2 0) hdc_5_7 (select _x_3_0::_Tuple2 0) (select _x_5_11::_Tuple2 1)) ) ) 
osprint._f110_110::B !_x_0::B _x_1 _x_2 = case _x_0 (True -> True) (_ -> case (select _x_1::_Tuple2 0) (True -> True) (False -> <{StdInt.==_16}> (select _x_2::_Tuple2 0) 0) )
osprint.endDoc::I !_x_0::I !_x_1::I = error "no AnyCodeExpr"
osprint.CCendDoc !hdc_0::I !_x_1 !os_2::I = case _x_1 (Data.Maybe.Nothing -> <{_Tuple2!3}> Data.Maybe.Nothing (osprint.endDoc hdc_0 os_2)) (Data.Maybe.Just context_1_0 -> let _x_2_0 = clCrossCall_12.issueCleanRequest <{osprint.handleContextOSEvent`}> (clCrossCall_12._CrossCallInfo 1822 hdc_0 0 0 0 0 0) context_1_0 os_2 in <{_Tuple2!3}> (Data.Maybe.Just (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) 
osprint.printPagePerPageBoth !doDialog_0::B !emulateScreen_1::B x_2 initFun_3 transFun_4 !printSetup_5 !mb_context_6 !os_7::I = let _x_1_0::I = osprint.getPrintInfo doDialog_0 emulateScreen_1 printSetup_5 mb_context_6 os_7, err_1_1 = select _x_1_0::_Tuple5 0 in case (<{StdInt.==_16}> err_1_1 4107) (True -> let _x_3_0 = osprint.os_defaultprintsetup (select _x_1_0::_Tuple5 4) in osprint.printPagePerPageBoth doDialog_0 emulateScreen_1 x_2 initFun_3 transFun_4 (select _x_3_0::_Tuple2 0) (select _x_1_0::_Tuple5 3) (select _x_3_0::_Tuple2 1)) (False -> case (StdBool.not (<{StdInt.<_17}> err_1_1 0)) (True -> <{_Tuple3!4}> (osprint.Cancelled x_2) (select _x_1_0::_Tuple5 3) (select _x_1_0::_Tuple5 4)) (False -> let hdc_4_0 = select _x_1_0::_Tuple5 1, mb_context_4_1::I = select _x_1_0::_Tuple5 3, os_4_2 = select _x_1_0::_Tuple5 4, _x_4_3::I = osprint.CCstartDoc hdc_4_0 mb_context_4_1 os_4_2 in case (StdBool.not (<{StdInt.<_17}> 0 (select _x_4_3::_Tuple3 0))) (True -> <{_Tuple3!4}> (osprint.Cancelled x_2) (select _x_4_3::_Tuple3 1) (osprint.deleteDC hdc_4_0 (select _x_4_3::_Tuple3 2))) (False -> let _x_6_0 = initFun_3 x_2 (select _x_1_0::_Tuple5 2) (osprint.initPicture StdIOBasic.zero_21 (_Tuple2 hdc_4_0 (select _x_4_3::_Tuple3 2))), _x_6_1::I = select _x_6_0::_Tuple2 1, _x_6_2 = ospicture.unpackPicture (select _x_6_1::_Tuple2 1), _x_6_3 = osprint.printPages 0 transFun_4 (select _x_6_0::_Tuple2 0) (select _x_6_1::_Tuple2 0) (select _x_6_2::_Tuple5 3) (select _x_4_3::_Tuple3 1) (select _x_6_2::_Tuple5 4), hdc_6_4 = select _x_6_3::_Tuple4 1, _x_6_5 = osprint.CCendDoc hdc_6_4 (select _x_6_3::_Tuple4 2) (select _x_6_3::_Tuple4 3) in <{_Tuple3!4}> (osprint.StartedPrinting (select _x_6_3::_Tuple4 0)) (select _x_6_5::_Tuple2 0) (osprint.deleteDC hdc_6_4 (select _x_6_5::_Tuple2 1))) ) ) 
osprint.printPagePerPageBothSemaphor !p1_0::B !p2_1::B x_2 p4_3 p5_4 !printSetup_5 mb_context_6 !os_7::I = let _x_1_0 = osprint.addSemaphor 1 os_7 in case (<{StdInt.<_17}> 0 (select _x_1_0::_Tuple2 0)) (True -> <{_Tuple3!4}> (osprint.Cancelled x_2) mb_context_6 (select (osprint.addSemaphor -1 (select _x_1_0::_Tuple2 1))::_Tuple2 1)) (False -> let _x_3_0 = osprint.printPagePerPageBoth p1_0 p2_1 x_2 p4_3 p5_4 printSetup_5 mb_context_6 (select _x_1_0::_Tuple2 1) in <{_Tuple3!4}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (select (osprint.addSemaphor -1 (select _x_3_0::_Tuple3 2))::_Tuple2 1)) 
osprint.os_printpageperpage_5 !doDialog_0::B !emulateScreen_1::B !x_2 initFun_3 transFun_4 !printSetup_5 !files_6 = let _x_1_0 = osprint.EnvGetOS files_6, _x_1_1 = osprint.printPagePerPageBothSemaphor doDialog_0 emulateScreen_1 x_2 initFun_3 transFun_4 printSetup_5 Data.Maybe.Nothing (osprint.os_installprinter (select _x_1_0::_Tuple2 0)) in <{_Tuple2!2}> (select _x_1_1::_Tuple3 0) (osprint.EnvSetOS (select _x_1_1::_Tuple3 2) (select _x_1_0::_Tuple2 1))
osprint.os_printsetupdialog_6 !printSetup_0 !files_1 = <{_Tuple2!3}> (select (osprint.printSetupDialogBoth printSetup_0 Data.Maybe.Nothing)::_Tuple2 0) files_1
osprint.fst_56 !tuple_0 = select tuple_0::_Tuple2 0
osprint.zipWithSelectState_50 !id_0 !io_1 = let !_x_1_0 = StdWindow.getWindowSelectState id_0 io_1 in _Tuple2 (_Tuple2 (select _x_1_0::_Tuple2 0) id_0) (select _x_1_0::_Tuple2 1)
osprint.isEnabled_51::B !_x_0 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (StdIOCommon.Able -> True) ) (_ -> False)
<{osprint.c;101;48_48}> !g_l_0 = <{osprint.g_c1;101;71_112}> g_l_0
<{osprint.g_c1;101;71_112}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{osprint.g_c2;101;71_111}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{osprint.g_c2;101;71_111}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 mbSelectState_1_0 id_1_1 -> case (osprint.isEnabled_51 mbSelectState_1_0) (True -> _predefined._Cons id_1_1 (<{osprint.c;101;48_48}> g_t_1)) ) (_ -> <{osprint.c;101;48_48}> g_t_1)
osprint.accFun_49 doDialog_0::B emulateScreen_1::B x_2 initFun_3 transFun_4 printSetup_5 context_6 = let _x_1_0 = osprint.EnvGetOS context_6, _x_1_1 = osprint.printPagePerPageBothSemaphor doDialog_0 emulateScreen_1 x_2 initFun_3 transFun_4 printSetup_5 (Data.Maybe.Just (select _x_1_0::_Tuple2 1)) (osprint.os_installprinter (select _x_1_0::_Tuple2 0)) in _Tuple2 (select _x_1_1::_Tuple3 0) (osprint.EnvSetOS (select _x_1_1::_Tuple3 2) (Data.Maybe.fromJust (select _x_1_1::_Tuple3 1)))
osprint.os_printpageperpage_7 !doDialog_0::B !emulateScreen_1::B !x_2 initFun_3 transFun_4 !printSetup_5 !pSt_6 = case pSt_6 (iostate._PSt ls_1_0 io_1_1 -> let !_x_2_0 = StdWindow.getWindowStack io_1_1, !windowStack_2_1 = StdList.map osprint.fst_56 (select _x_2_0::_Tuple2 0), !_x_2_2 = StdFunc.seqList (StdList.map osprint.zipWithSelectState_50 windowStack_2_1) (select _x_2_0::_Tuple2 1), !activeWindow_2_3 = <{osprint.c;101;48_48}> (select _x_2_2::_Tuple2 0), !io_2_4 = StdFunc.seq (StdList.map StdWindow.disableWindow activeWindow_2_3) (select _x_2_2::_Tuple2 1), !_x_2_5 = scheduler.accContext (osprint.accFun_49 doDialog_0 emulateScreen_1 x_2 initFun_3 transFun_4 printSetup_5) (update pSt_6::iostate._PSt [1:io_2_4]), !pSt_2_6 = StdPSt.appPIO (StdFunc.seq (StdList.map StdWindow.enableWindow activeWindow_2_3)) (select _x_2_5::_Tuple2 1) in <{_Tuple2!2}> (select _x_2_5::_Tuple2 0) pSt_2_6) 
osprint.accFun_52 printSetup_0 context_1 = let _x_1_0 = osprint.printSetupDialogBoth printSetup_0 (Data.Maybe.Just context_1) in _Tuple2 (select _x_1_0::_Tuple2 0) (select (select _x_1_0::_Tuple2 1)::_Tuple1 0)
osprint.os_printsetupdialog_8 !printSetup_0 !pSt_1 = scheduler.accContext (osprint.accFun_52 printSetup_0) pSt_1
<{osprint.TD;PrintSetup}> _x_0::B = _predefined._Nil
<{osprint.TD;JobInfo}> _x_0::B = _predefined._Nil
<{osprint.TD;PrintInfo}> _x_0::B = _predefined._Nil
<{osprint.TD;Alternative}> _x_0::B = _predefined._Nil
<{osprint.TD;PrintEnvironments;}> _x_0::B = _predefined._Nil
<{osprint.TD;OkReturn}> _x_0::B = _predefined._Nil

:: osprint.Alternative = osprint.Cancelled a1 | osprint.StartedPrinting a1

|| Converted Records
:: osprint._PrintSetup = {!osprint.devmode, !osprint.device, !osprint.driver, !osprint.output}

:: osprint._JobInfo = {!osprint.range, !osprint.copies::I}

:: osprint._PrintInfo = {osprint.printSetup, osprint.jobInfo}

:: <{osprint.PrintEnvironments;}> = {!osprint.os_printpageperpage, !osprint.os_printsetupdialog}

:: <{osprint.gEq_s;}> = {!osprint.gEq_s}

:: <{osprint.gEq_ss;}> = {!osprint.gEq_ss}

:: <{osprint.gEq_sss;}> = {!osprint.gEq_sss}

:: <{osprint.gEq_ssss;}> = {!osprint.gEq_ssss}

:: <{osprint.gEq_sssss;}> = {!osprint.gEq_sssss}

:: <{osprint.gEq_ssssss;}> = {!osprint.gEq_ssssss}

:: <{osprint.gEq_sssssss;}> = {!osprint.gEq_sssssss}

:: <{osprint.gEq_ssssssss;}> = {!osprint.gEq_ssssssss}

:: <{osprint.gEq_sssssssss;}> = {!osprint.gEq_sssssssss}

:: <{osprint.bimap_s;}> = {osprint.bimap_s}

:: <{osprint.bimap_ss;}> = {osprint.bimap_ss}

:: <{osprint.bimap_sss;}> = {osprint.bimap_sss}

