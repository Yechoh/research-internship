.comp 920 000111010001
.start _nostart_
.depend "clCCall_12" "20161223204044"
.depend "StdMisc" "20170313110416"
.depend "clCrossCall_12" "20161223204044"
.depend "systemid" "20161223204044"
.depend "device" "20161223204042"
.depend "id" "20161223204042"
.depend "oskey" "20161223204044"
.depend "StdKey" "20161223204043"
.depend "StdPicture" "20161223204043"
.depend "StdIOBasic" "20161223204043"
.depend "StdPictureDef" "20161223204043"
.depend "osfont" "20161223204044"
.depend "ostypes" "20161223204044"
.depend "ostoolbox" "20161223204044"
.depend "osrgn" "20161223204044"
.depend "ospicture" "20161223204044"
.depend "osbitmap" "20161223204044"
.depend "StdBitmap" "20161223204043"
.depend "StdIOCommon" "20161223204043"
.depend "StdMaybe" "20170313110414"
.depend "StdFunc" "20170313110416"
.depend "StdFile" "20170313110416"
.depend "StdString" "20170313110416"
.depend "StdGeneric" "20170313110416"
.depend "GenEq" "20170313110405"
.depend "Data.Monoid" "20170313110413"
.depend "Control.Monad" "20170313110412"
.depend "Control.Applicative" "20170313110412"
.depend "System.IO" "20170313110415"
.depend "Data.Functor" "20170313110413"
.depend "Data.Maybe" "20170313110413"
.depend "StdInt" "20170313110416"
.depend "StdBool" "20170313110416"
.depend "StdClass" "20170313110416"
.depend "StdOverloaded" "20170313110416"
.depend "_SystemDynamic" "20170313110405"
.depend "clipboardCrossCall_12" "20161223204044"
.impobj "cCrossCallClipboard_121."
.module m_clipboardCrossCall_12 "clipboardCrossCall_12" "20161223204044"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod clCCall_12
.implab e_clCCall_12_swinReleaseCString
.implab e_clCCall_12_swinGetCStringAndFree
.implab e_clCCall_12_swinMakeCString
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod clCrossCall_12
.impdesc e_clCrossCall_12_derrorCallback2
.implab e_clCrossCall_12_sissueCleanRequest2
.impdesc e_clCrossCall_12_rCrossCallInfo
.impmod StdInt
.implab e_StdInt_s==;16
.impmod StdBool
.implab e_StdBool_snot
.export e_clipboardCrossCall_12_swinGetClipboardCount
.descexp e_clipboardCrossCall_12_dwinGetClipboardCount e_clipboardCrossCall_12_nwinGetClipboardCount e_clipboardCrossCall_12_lwinGetClipboardCount 1 0 "winGetClipboardCount"
.o 2 0
e_clipboardCrossCall_12_lwinGetClipboardCount
	pop_a 1
.d 1 0
	jsr ea5
.o 0 2 ii
	buildI_b 1
	buildI_b 0
	buildh _Tuple 2
	pop_b 2
.d 1 0
	rtn
.n 1 e_clipboardCrossCall_12_dwinGetClipboardCount
.o 1 0
e_clipboardCrossCall_12_nwinGetClipboardCount
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea5
.o 0 2 ii
	buildI_b 1
	buildI_b 0
	fillh _Tuple 2 2
	pop_b 2
.d 1 0
	rtn
.o 1 0
ea5
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_clipboardCrossCall_12_swinGetClipboardCount
.o 0 1 i
s5
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 1809
	buildAC "winGetClipboardCount"
	buildh ARRAY 1
	buildh e_clCrossCall_12_derrorCallback2 1
	push_b 7
	push_b 7
	update_b 1 8
	update_b 2 1
	update_b 3 2
	update_b 4 3
	update_b 5 4
	update_b 6 5
	update_b 7 6
	update_b 0 7
	pop_b 1
	update_b 7 8
	update_b 6 7
	update_b 5 6
	update_b 4 5
	update_b 3 4
	update_b 2 3
	update_b 1 2
	updatepop_b 0 1
.d 1 8 iiiiiiii
	jsr e_clCrossCall_12_sissueCleanRequest2
.o 0 8 iiiiiiii
	push_b 0
	pushI 11
	push_b 1
	eqI
	jmp_false else.1
	push_b 2
	push_b 9
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 10
	updatepop_b 0 9
.d 0 2 ii
	rtn
else.1
	pushI 1
	push_b 1
	eqI
	jmp_false else.2
	push_b 8
	pushI 0
	update_b 1 10
	updatepop_b 0 9
.d 0 2 ii
	rtn
else.2
	buildAC "[winGetClipboardCount] expected CcRETURN1 value.\n"
	pop_b 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushI_a 0
	pop_a 2
.d 0 2 ii
	rtn
.export e_clipboardCrossCall_12_swinHasClipboardText
.descexp e_clipboardCrossCall_12_dwinHasClipboardText e_clipboardCrossCall_12_nwinHasClipboardText e_clipboardCrossCall_12_lwinHasClipboardText 1 0 "winHasClipboardText"
.o 2 0
e_clipboardCrossCall_12_lwinHasClipboardText
	pop_a 1
.d 1 0
	jsr ea4
.o 0 2 bi
	buildI_b 1
	buildB_b 0
	buildh _Tuple 2
	pop_b 2
.d 1 0
	rtn
.n 1 e_clipboardCrossCall_12_dwinHasClipboardText
.o 1 0
e_clipboardCrossCall_12_nwinHasClipboardText
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea4
.o 0 2 bi
	buildI_b 1
	buildB_b 0
	fillh _Tuple 2 2
	pop_b 2
.d 1 0
	rtn
.o 1 0
ea4
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_clipboardCrossCall_12_swinHasClipboardText
.o 0 1 i
s4
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 1812
	buildAC "winHasClipboardText"
	buildh ARRAY 1
	buildh e_clCrossCall_12_derrorCallback2 1
	push_b 7
	push_b 7
	update_b 1 8
	update_b 2 1
	update_b 3 2
	update_b 4 3
	update_b 5 4
	update_b 6 5
	update_b 7 6
	update_b 0 7
	pop_b 1
	update_b 7 8
	update_b 6 7
	update_b 5 6
	update_b 4 5
	update_b 3 4
	update_b 2 3
	update_b 1 2
	updatepop_b 0 1
.d 1 8 iiiiiiii
	jsr e_clCrossCall_12_sissueCleanRequest2
.o 0 8 iiiiiiii
	push_b 0
	pushI 11
	push_b 1
	eqI
	jmp_false else.3
	push_b 2
	pushI 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	notB
	push_b 9
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 10
	updatepop_b 0 9
.d 0 2 bi
	rtn
else.3
	pushI 1
	push_b 1
	eqI
	jmp_false else.4
	push_b 8
	pushB FALSE
	update_b 1 10
	updatepop_b 0 9
.d 0 2 bi
	rtn
else.4
	buildAC "[winHasClipboardText] expected CcRETURN1 value."
	pop_b 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	pushB_a 0
	pop_a 2
.d 0 2 bi
	rtn
.export e_clipboardCrossCall_12_swinSetClipboardText
.descexp e_clipboardCrossCall_12_dwinSetClipboardText e_clipboardCrossCall_12_nwinSetClipboardText e_clipboardCrossCall_12_lwinSetClipboardText 2 0 "winSetClipboardText"
.a 0 a3
.o 2 0
e_clipboardCrossCall_12_lwinSetClipboardText
	repl_args 1 1
.o 2 0
a3
.d 2 0
	jsr ea3
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_clipboardCrossCall_12_dwinSetClipboardText
.o 1 0
e_clipboardCrossCall_12_nwinSetClipboardText
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea3
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
ea3
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	push_array 0
	update_a 0 2
	pop_a 2
.o 1 1 i
e_clipboardCrossCall_12_swinSetClipboardText
.o 1 1 i
s3
	push_b 0
	push_a 0
	updatepop_b 0 1
	updatepop_a 0 1
.d 1 1 i
	jsr e_clCCall_12_swinMakeCString
.o 0 2 ii
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	push_b 5
	pushI 1810
	buildAC "winSetClipboardText"
	buildh ARRAY 1
	buildh e_clCrossCall_12_derrorCallback2 1
	push_b 8
	push_b 7
	update_b 1 8
	update_b 2 1
	update_b 3 2
	update_b 4 3
	update_b 5 4
	update_b 6 5
	update_b 7 6
	update_b 0 7
	pop_b 1
.d 1 8 iiiiiiii
	jsr e_clCrossCall_12_sissueCleanRequest2
.o 0 8 iiiiiiii
	pop_b 7
	push_b 1
	update_b 1 3
	updatepop_b 0 2
.d 0 2 ii
	jmp e_clCCall_12_swinReleaseCString
.export e_clipboardCrossCall_12_swinGetClipboardText
.descexp e_clipboardCrossCall_12_dwinGetClipboardText e_clipboardCrossCall_12_nwinGetClipboardText e_clipboardCrossCall_12_lwinGetClipboardText 1 0 "winGetClipboardText"
.o 2 0
e_clipboardCrossCall_12_lwinGetClipboardText
	pop_a 1
.d 1 0
	jsr ea2
.o 1 1 i
	buildI_b 0
	push_a 1
	buildh ARRAY 1
	buildh _Tuple 2
	updatepop_a 0 1
	pop_b 1
.d 1 0
	rtn
.n 1 e_clipboardCrossCall_12_dwinGetClipboardText
.o 1 0
e_clipboardCrossCall_12_nwinGetClipboardText
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea2
.o 1 1 i
	buildI_b 0
	push_a 1
	buildh ARRAY 1
	fillh _Tuple 2 3
	pop_a 1
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea2
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_clipboardCrossCall_12_swinGetClipboardText
.o 0 1 i
s2
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 0
	pushI 1811
	buildAC "winGetClipboardText"
	buildh ARRAY 1
	buildh e_clCrossCall_12_derrorCallback2 1
	push_b 7
	push_b 7
	update_b 1 8
	update_b 2 1
	update_b 3 2
	update_b 4 3
	update_b 5 4
	update_b 6 5
	update_b 7 6
	update_b 0 7
	pop_b 1
	update_b 7 8
	update_b 6 7
	update_b 5 6
	update_b 4 5
	update_b 3 4
	update_b 2 3
	update_b 1 2
	updatepop_b 0 1
.d 1 8 iiiiiiii
	jsr e_clCrossCall_12_sissueCleanRequest2
.o 0 8 iiiiiiii
	push_b 0
	pushI 11
	push_b 1
	eqI
	jmp_false else.5
	push_b 2
	push_b 9
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 10
	updatepop_b 0 9
.d 0 2 ii
	jmp e_clCCall_12_swinGetCStringAndFree
else.5
	pushI 1
	push_b 1
	eqI
	jmp_false else.6
	push_b 8
	buildAC ""
	updatepop_b 0 9
.d 1 1 i
	rtn
else.6
	buildAC "[winGetClipboardText] expected CcRETURN1 value.\n"
	pop_b 9
.d 1 0
	jsr print_string_
.o 0 0
	halt
	repl_args 2 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 1
	push_array 0
	update_a 0 2
	pop_a 2
.d 1 1 i
	rtn
.export e_clipboardCrossCall_12_swinInitialiseClipboard
.descexp e_clipboardCrossCall_12_dwinInitialiseClipboard e_clipboardCrossCall_12_nwinInitialiseClipboard e_clipboardCrossCall_12_lwinInitialiseClipboard 1 0 "winInitialiseClipboard"
.o 2 0
e_clipboardCrossCall_12_lwinInitialiseClipboard
	pop_a 1
.d 1 0
	jsr ea1
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.n 1 e_clipboardCrossCall_12_dwinInitialiseClipboard
.o 1 0
e_clipboardCrossCall_12_nwinInitialiseClipboard
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea1
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea1
	jsr_eval 0
	pushI_a 0
	pop_a 1
.o 0 1 i
e_clipboardCrossCall_12_swinInitialiseClipboard
.o 0 1 i
s1
.inline InstallCrossCallClipboard
	ccall InstallCrossCallClipboard "I-I"
.end

.d 0 1 i
	rtn
