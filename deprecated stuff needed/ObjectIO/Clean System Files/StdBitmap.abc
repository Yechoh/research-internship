.comp 920 000111010001
.start _nostart_
.depend "commondef" "20161223204042"
.depend "systemid" "20161223204044"
.depend "device" "20161223204042"
.depend "id" "20161223204042"
.depend "oskey" "20161223204044"
.depend "StdKey" "20161223204043"
.depend "StdPicture" "20161223204043"
.depend "StdIOBasic" "20161223204043"
.depend "StdPictureDef" "20161223204043"
.depend "osfont" "20161223204044"
.depend "ostypes" "20161223204044"
.depend "ostoolbox" "20161223204044"
.depend "osrgn" "20161223204044"
.depend "ospicture" "20161223204044"
.depend "osbitmap" "20161223204044"
.depend "StdIOCommon" "20161223204043"
.depend "StdMaybe" "20170313110414"
.depend "StdFunc" "20170313110416"
.depend "StdFile" "20170313110416"
.depend "StdString" "20170313110416"
.depend "StdGeneric" "20170313110416"
.depend "GenEq" "20170313110405"
.depend "Data.Monoid" "20170313110413"
.depend "Control.Monad" "20170313110412"
.depend "Control.Applicative" "20170313110412"
.depend "System.IO" "20170313110415"
.depend "Data.Functor" "20170313110413"
.depend "Data.Maybe" "20170313110413"
.depend "StdInt" "20170313110416"
.depend "StdBool" "20170313110416"
.depend "StdClass" "20170313110416"
.depend "StdOverloaded" "20170313110416"
.depend "_SystemDynamic" "20170313110405"
.depend "StdBitmap" "20161223204043"
.module m_StdBitmap "StdBitmap" "20161223204043"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod commondef
.implab e_commondef_serror
.implab e_commondef_sfromTuple;73
.implab e_commondef_stoTuple;74
.impmod StdPicture
.implab e_StdPicture_sunfill;95
.implab e_StdPicture_sunfillAt;96
.impmod StdPictureDef
.impdesc e_StdPictureDef_rBox
.impmod ospicture
.implab e_ospicture_sunpeekPicture
.implab e_ospicture_speekPicture
.implab e_ospicture_sgetPenPenPos
.impmod osbitmap
.impdesc e_osbitmap_dtoBitmap
.implab e_osbitmap_stoBitmap
.implab e_osbitmap_ntoBitmap e_osbitmap_eatoBitmap
.implab e_osbitmap_sfromBitmap
.implab e_osbitmap_sosReadBitmap
.implab e_osbitmap_sosGetBitmapSize
.implab e_osbitmap_sosResizeBitmap
.implab e_osbitmap_sosDrawBitmap
.impmod Data.Maybe
.impdesc e_Data.Maybe_dNothing
.impdesc e_Data.Maybe_dJust
.impmod StdInt
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.export e_StdBitmap_sundrawAt;6
.export e_StdBitmap_eaundrawAt;6
.descexp e_StdBitmap_dundrawAt;6 e_StdBitmap_nundrawAt;6 e_StdBitmap_lundrawAt;6 3 0 "undrawAt;6"
.a 3 e_StdBitmap_eaundrawAt;6
.o 2 0
e_StdBitmap_lundrawAt;6
	push_args 0 2 2
	update_a 3 2
	create
	update_a 0 4
	pop_a 1
.d 4 0
	jmp e_StdBitmap_eaundrawAt;6
.n 3 e_StdBitmap_dundrawAt;6 e_StdBitmap_eaundrawAt;6
.o 1 0
e_StdBitmap_nundrawAt;6
	push_node _cycle_in_spine 3
.o 4 0
e_StdBitmap_eaundrawAt;6
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	repl_r_args 0 2
.o 3 2 ii
e_StdBitmap_sundrawAt;6
.o 3 2 ii
s7
	create
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr e_osbitmap_sfromBitmap
.o 1 0
.d 1 0
	jsr e_osbitmap_sosGetBitmapSize
.o 0 2 ii
	push_b 1
	push_b 1
	push_a 0
	push_b 5
	push_b 5
	updatepop_a 0 1
	update_b 3 7
	update_b 2 6
	update_b 1 5
	updatepop_b 0 4
.d 2 4 iiii
	jmp e_StdPicture_sunfillAt;96
.export e_StdBitmap_sundraw;5
.export e_StdBitmap_eaundraw;5
.descexp e_StdBitmap_dundraw;5 e_StdBitmap_nundraw;5 e_StdBitmap_lundraw;5 2 0 "undraw;5"
.a 2 e_StdBitmap_eaundraw;5
.o 2 0
e_StdBitmap_lundraw;5
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.d 3 0
	jmp e_StdBitmap_eaundraw;5
.n 2 e_StdBitmap_dundraw;5 e_StdBitmap_eaundraw;5
.o 1 0
e_StdBitmap_nundraw;5
	push_node _cycle_in_spine 2
.o 3 0
e_StdBitmap_eaundraw;5
	jsr_eval 1
	jsr_eval 0
.o 3 0
e_StdBitmap_sundraw;5
.o 3 0
s6
	create
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr e_osbitmap_sfromBitmap
.o 1 0
.d 1 0
	jsr e_osbitmap_sosGetBitmapSize
.o 0 2 ii
	push_b 1
	push_b 1
	push_a 0
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp e_StdPicture_sunfill;95
.export e_StdBitmap_sdrawAt;4
.export e_StdBitmap_eadrawAt;4
.descexp e_StdBitmap_ddrawAt;4 e_StdBitmap_ndrawAt;4 e_StdBitmap_ldrawAt;4 3 0 "drawAt;4"
.a 3 e_StdBitmap_eadrawAt;4
.o 2 0
e_StdBitmap_ldrawAt;4
	push_args 0 2 2
	update_a 3 2
	create
	update_a 0 4
	pop_a 1
.d 4 0
	jmp e_StdBitmap_eadrawAt;4
.n 3 e_StdBitmap_ddrawAt;4 e_StdBitmap_eadrawAt;4
.o 1 0
e_StdBitmap_ndrawAt;4
	push_node _cycle_in_spine 3
.o 4 0
e_StdBitmap_eadrawAt;4
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	repl_r_args 0 2
.o 3 2 ii
e_StdBitmap_sdrawAt;4
.o 3 2 ii
s5
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 1 0
	jsr e_ospicture_speekPicture
.o 4 6 iiibii
	push_b 1
	push_b 1
.d 0 2 ii
	jsr e_commondef_stoTuple;74
.o 0 2 ii
	push_b 9
	push_b 9
.d 0 2 ii
	jsr e_commondef_stoTuple;74
.o 0 2 ii
	create
	push_a 5
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr e_osbitmap_sfromBitmap
.o 1 0
	push_b 9
	push_b 9
	push_b 9
	push_b 6
	update_b 3 7
	update_b 6 3
	update_b 2 6
	update_b 5 2
	update_b 1 5
	update_b 4 1
	update_b 0 4
	pop_b 1
.d 1 7 iiiibii
	jsr e_osbitmap_sosDrawBitmap
.o 0 2 ii
	push_b 1
	push_b 1
	push_b 7
	push_a 3
	push_a 3
	push_a 3
	push_a 3
	push_b 7
	push_b 7
	push_b 7
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	update_b 5 15
	update_b 4 14
	update_b 3 13
	update_b 2 12
	update_b 1 11
	updatepop_b 0 10
.d 5 6 iiibii
	jmp e_ospicture_sunpeekPicture
.export e_StdBitmap_sdraw;3
.export e_StdBitmap_eadraw;3
.descexp e_StdBitmap_ddraw;3 e_StdBitmap_ndraw;3 e_StdBitmap_ldraw;3 2 0 "draw;3"
.a 2 e_StdBitmap_eadraw;3
.o 2 0
e_StdBitmap_ldraw;3
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.d 3 0
	jmp e_StdBitmap_eadraw;3
.n 2 e_StdBitmap_ddraw;3 e_StdBitmap_eadraw;3
.o 1 0
e_StdBitmap_ndraw;3
	push_node _cycle_in_spine 2
.o 3 0
e_StdBitmap_eadraw;3
	jsr_eval 1
	jsr_eval 0
.o 3 0
e_StdBitmap_sdraw;3
.o 3 0
s4
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 1 0
	jsr e_ospicture_speekPicture
.o 4 6 iiibii
	push_a 3
	push_a 3
	push_a 3
	push_a 3
	push_b 2
	update_a 3 7
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 4 1 i
	jsr e_ospicture_sgetPenPenPos
.o 4 3 iii
	push_b 4
	push_b 4
.d 0 2 ii
	jsr e_commondef_stoTuple;74
.o 0 2 ii
	push_b 3
	push_b 3
.d 0 2 ii
	jsr e_commondef_stoTuple;74
.o 0 2 ii
	create
	push_a 5
	buildh _Nil 0
	update_a 0 7
	pop_a 1
.d 2 0
	jsr e_osbitmap_sfromBitmap
.o 1 0
	push_b 12
	push_b 12
	push_b 12
	push_b 6
	update_b 3 7
	update_b 6 3
	update_b 2 6
	update_b 5 2
	update_b 1 5
	update_b 4 1
	update_b 0 4
	pop_b 1
	update_b 6 8
	update_b 5 7
	update_b 4 6
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 1 7 iiiibii
	jsr e_osbitmap_sosDrawBitmap
.o 0 2 ii
	push_b 1
	push_b 1
	push_b 8
	push_a 3
	push_a 3
	push_a 3
	push_a 3
	push_b 5
	push_b 8
	push_b 8
	update_a 3 8
	update_a 2 7
	update_a 1 6
	updatepop_a 0 5
	update_b 5 14
	update_b 4 13
	update_b 3 12
	update_b 2 11
	update_b 1 10
	updatepop_b 0 9
.d 5 6 iiibii
	jmp e_ospicture_sunpeekPicture
.export e_StdBitmap_sresizeBitmap
.export e_StdBitmap_earesizeBitmap
.descexp e_StdBitmap_dresizeBitmap e_StdBitmap_nresizeBitmap e_StdBitmap_lresizeBitmap 2 0 "resizeBitmap"
.a 2 e_StdBitmap_earesizeBitmap
.o 2 0
e_StdBitmap_lresizeBitmap
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.d 3 0
	jmp e_StdBitmap_earesizeBitmap
.n 2 e_StdBitmap_dresizeBitmap e_StdBitmap_earesizeBitmap
.o 1 0
e_StdBitmap_nresizeBitmap
	push_node _cycle_in_spine 2
.o 3 0
e_StdBitmap_earesizeBitmap
	jsr_eval 1
	jsr_eval 0
	repl_r_args 0 2
.o 2 2 ii
e_StdBitmap_sresizeBitmap
.o 2 2 ii
s3
	pushI 0
	push_b 1
	ltI
	jmp_true then.1
	pushI 0
	push_b 2
	ltI
	jmp_false else.1
then.1
	buildAC "a Size record with negative components was passed"
	buildAC "StdBitmap"
	buildAC "resizeBitmap"
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	pop_b 2
.d 3 0
	jsr e_commondef_serror
.o 1 0
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
else.1
	create
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr e_osbitmap_sfromBitmap
.o 1 0
	push_b 1
	push_b 1
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jsr e_osbitmap_sosResizeBitmap
.o 1 0
.d 2 0
	jmp e_osbitmap_stoBitmap
.export e_StdBitmap_sgetBitmapSize
.descexp e_StdBitmap_dgetBitmapSize e_StdBitmap_ngetBitmapSize e_StdBitmap_lgetBitmapSize 1 0 "getBitmapSize"
.o 2 0
e_StdBitmap_lgetBitmapSize
	pop_a 1
.d 1 0
	jsr ea2
.o 0 2 ii
.impmod StdIOBasic
.impdesc e_StdIOBasic_rSize
	build_r e_StdIOBasic_rSize 0 2 0 0
	pop_b 2
.d 1 0
	rtn
.n 1 e_StdBitmap_dgetBitmapSize
.o 1 0
e_StdBitmap_ngetBitmapSize
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea2
.o 0 2 ii
	fill_r e_StdIOBasic_rSize 0 2 0 0 0
	pop_b 2
.d 1 0
	rtn
.o 1 0
ea2
	jsr_eval 0
.o 1 0
e_StdBitmap_sgetBitmapSize
.o 1 0
s2
	create
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr e_osbitmap_sfromBitmap
.o 1 0
.d 1 0
	jsr e_osbitmap_sosGetBitmapSize
.o 0 2 ii
.d 0 2 ii
	jmp e_commondef_sfromTuple;73
.export e_StdBitmap_sopenBitmap
.descexp e_StdBitmap_dopenBitmap e_StdBitmap_nopenBitmap e_StdBitmap_lopenBitmap 3 0 "openBitmap"
.a 0 a1
.o 2 0
e_StdBitmap_lopenBitmap
	repl_args 2 2
.o 3 0
a1
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	buildh _Tuple 2
	updatepop_a 0 2
.d 1 0
	rtn
.n 3 e_StdBitmap_dopenBitmap
.o 1 0
e_StdBitmap_nopenBitmap
	push_node _cycle_in_spine 3
.d 3 0
	jsr ea1
.o 2 0
	push_a 1
	push_a 1
	fillh _Tuple 2 4
	pop_a 2
.d 1 0
	rtn
.o 3 0
ea1
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	push_array 1
	push_r_args 1 4 0
	update_a 4 6
	update_a 2 4
	update_a 0 2
	update_a 3 5
	update_a 1 3
	pop_a 2
.o 6 0
e_StdBitmap_sopenBitmap
.o 6 0
s1
	push_a 5
	buildI 3
	push_a 3
	push_a 7
	buildh ARRAY 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	buildh _Nil 0
	update_a 0 9
	update_a 0 10
	pop_a 1
	jsr_ap 3
	push_arg 0 3 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_false else.3
	push_arg 0 3 3
	jsr_eval 0
	buildh e_Data.Maybe_dNothing 0
	update_a 1 8
	updatepop_a 0 7
.d 2 0
	rtn
else.3
	push_arg 0 3 2
	jsr_eval 0
	pushF_a 0
	pop_a 1
.d 0 2 f
	jsr e_osbitmap_sosReadBitmap
.o 1 3 bf
	push_b 0
	notB
	jmp_false else.4
	push_arg 1 3 3
	push_a 3
	buildF_b 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 3
	update_a 2 10
	update_a 1 9
	updatepop_a 0 8
	jsr_ap 2
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	buildh e_Data.Maybe_dNothing 0
.d 2 0
	rtn
else.4
	push_arg 1 3 3
	push_a 3
	buildF_b 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	pop_b 3
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	jsr_ap 2
	repl_args 2 2
	jsr_eval 1
	pop_a 1
	push_a 1
	build e_osbitmap_dtoBitmap 1 e_osbitmap_ntoBitmap
	buildh e_Data.Maybe_dJust 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	rtn
