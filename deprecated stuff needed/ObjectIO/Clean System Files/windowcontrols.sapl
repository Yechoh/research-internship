|| ?module? windowcontrols


windowcontrols.windowcontrolsFatalError !function_0 !error_1 = commondef.fatalError function_0 "windowcontrols" error_1
windowcontrols.opencontrols !wMetrics_0 ls_1 !new_2 !wsH_3 !tb_4::I = case wsH_3 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 cur_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowaccess.genWElementItemNrs wh_4_3 new_2, _x_5_1 = commondef.ulength cur_4_6, hMargins_5_2 = windowaccess.getWindowHMargins whKind_4_1 wMetrics_0 whAtts_4_9, vMargins_5_3 = windowaccess.getWindowVMargins whKind_4_1 wMetrics_0 whAtts_4_9, _x_5_4 = <{windowcontrols._c;49;35_78}> whWindow_4_5 whSize_4_12, domainRect_5_5 = select _x_5_4::_Tuple4 3, _x_5_6 = oswindow.osGetWindowContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 domainRect_5_5 (commondef.toTuple_72 whSize_4_12) (_Tuple2 (select _x_5_4::_Tuple4 1) (select _x_5_4::_Tuple4 2))) (commondef.sizeToRect whSize_4_12), _x_5_7 = controllayout.layoutControls wMetrics_0 hMargins_5_2 vMargins_5_3 (windowaccess.getWindowItemSpaces whKind_4_1 wMetrics_0 whAtts_4_9) (StdIOBasic._Size (<{StdInt.-_7}> (<{StdInt.-_7}> (select _x_5_6::ostypes._OSRect 2) (select hMargins_5_2::_Tuple2 0)) (select hMargins_5_2::_Tuple2 1)) (<{StdInt.-_7}> (<{StdInt.-_7}> (select _x_5_6::ostypes._OSRect 3) (select vMargins_5_3::_Tuple2 0)) (select vMargins_5_3::_Tuple2 1))) StdIOBasic.zero_15 (_predefined._Cons (_Tuple2 (commondef.rectToRectangle domainRect_5_5) (select _x_5_4::_Tuple4 0)) _predefined._Nil) (<{StdList.++}> (select _x_5_1::_Tuple2 1) (_predefined._Cons (windowhandle.WChangeLSHandle (windowhandle._WChangeLSHandle ls_1 (select _x_5_0::_Tuple2 1))) _predefined._Nil)) tb_4, _x_5_8 = commondef.split (select _x_5_1::_Tuple2 0) (select _x_5_7::_Tuple3 1), _x_5_9 = controlcreate.createControls wMetrics_0 whDefault_4_10 whCancel_4_11 whSelect_4_8 (select wsh_1_0::windowhandle._WIDS 1) (select _x_5_8::_Tuple2 1) (select _x_5_7::_Tuple3 2) in <{_Tuple2!3}> (update wsH_3::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:windowclipstate.invalidateWindowClipState (update wH_3_1::windowhandle._WindowHandle [3:select _x_5_0::_Tuple2 0,6:<{StdList.++}> (select _x_5_8::_Tuple2 0) (select _x_5_9::_Tuple2 0)])])]) (select _x_5_9::_Tuple2 1)) ) ) ) (_ -> windowcontrols.windowcontrolsFatalError "opencontrols" "unexpected window placeholder argument")
<{windowcontrols._c;49;35_78}> !whWindow_0 whSize_1 = case whWindow_0 (windowhandle.WindowInfo info_1_0 -> _Tuple4 (select info_1_0::windowhandle._WindowData 1) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3)) (select info_1_0::windowhandle._WindowData 0)) (_ -> _Tuple4 StdIOBasic.zero_21 False False (commondef.sizeToRect whSize_1))
<{windowcontrols.addControlsToCompound``_7}> !compound_0 ls_1 !new_2 itemNrs_3 !itemH_4 = case itemH_4 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case (StdBool.not (windowhandle.isRecursiveControl w_1_2)) (True -> <{_Tuple6!43}> False 0 ls_1 new_2 itemNrs_3 itemH_4) (False -> case (<{windowhandle.==_8}> w_1_2 windowhandle.IsLayoutControl) (True -> let _x_4_0 = windowcontrols.addControlsToCompound_9 compound_0 ls_1 new_2 itemNrs_3 (select itemH_4::windowhandle._WItemHandle 7) in <{_Tuple6!43}> (select _x_4_0::_Tuple6 0) (select _x_4_0::_Tuple6 1) (select _x_4_0::_Tuple6 2) (select _x_4_0::_Tuple6 3) (select _x_4_0::_Tuple6 4) (update itemH_4::windowhandle._WItemHandle [7:select _x_4_0::_Tuple6 5])) (False -> case (StdBool.not (windowaccess.identifyMaybeId compound_0 w_1_0)) (True -> let _x_5_0::B = windowcontrols.addControlsToCompound_9 compound_0 ls_1 new_2 itemNrs_3 (select itemH_4::windowhandle._WItemHandle 7), found_5_1 = select _x_5_0::_Tuple6 0 in case found_5_1 (True -> <{_Tuple6!43}> found_5_1 (select _x_5_0::_Tuple6 1) (select _x_5_0::_Tuple6 2) (select _x_5_0::_Tuple6 3) (select _x_5_0::_Tuple6 4) (windowclipstate.invalidateCompoundClipState (update itemH_4::windowhandle._WItemHandle [7:select _x_5_0::_Tuple6 5]))) (False -> <{_Tuple6!43}> found_5_1 (select _x_5_0::_Tuple6 1) (select _x_5_0::_Tuple6 2) (select _x_5_0::_Tuple6 3) (select _x_5_0::_Tuple6 4) (update itemH_4::windowhandle._WItemHandle [7:select _x_5_0::_Tuple6 5])) ) (False -> let _x_5_0 = commondef.ulength (select itemH_4::windowhandle._WItemHandle 7), _x_5_1 = windowaccess.genWElementItemNrs itemNrs_3 new_2 in <{_Tuple6!43}> True (select _x_5_0::_Tuple2 0) StdMisc.undef _predefined._Nil (select _x_5_1::_Tuple2 0) (windowclipstate.invalidateCompoundClipState (update itemH_4::windowhandle._WItemHandle [7:<{StdList.++}> (select _x_5_0::_Tuple2 1) (_predefined._Cons (windowhandle.WChangeLSHandle (windowhandle._WChangeLSHandle ls_1 (select _x_5_1::_Tuple2 1))) _predefined._Nil)]))) ) ) ) 
<{windowcontrols.addControlsToCompound`_8}> !compound_0 ls_1 !new_2 itemNrs_3 !_x_4 = case _x_4 (windowhandle.WItemHandle itemH_1_0 -> let _x_2_0 = <{windowcontrols.addControlsToCompound``_7}> compound_0 ls_1 new_2 itemNrs_3 itemH_1_0 in <{_Tuple6!43}> (select _x_2_0::_Tuple6 0) (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (select _x_2_0::_Tuple6 4) (windowhandle.WItemHandle (select _x_2_0::_Tuple6 5))) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowcontrols.addControlsToCompound_9 compound_0 ls_1 new_2 itemNrs_3 itemHs_1_0 in <{_Tuple6!43}> (select _x_2_0::_Tuple6 0) (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (select _x_2_0::_Tuple6 4) (windowhandle.WListLSHandle (select _x_2_0::_Tuple6 5))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.addControlsToCompound_9 compound_0 ls_1 new_2 itemNrs_3 itemHs_2_1 in <{_Tuple6!43}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (select _x_3_0::_Tuple6 4) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple6 5]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.addControlsToCompound_9 compound_0 ls_1 new_2 itemNrs_3 itemHs_2_1 in <{_Tuple6!43}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (select _x_3_0::_Tuple6 4) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple6 5]))) ) 
windowcontrols.addControlsToCompound_9 !_x_0 ls_1 !new_2 itemNrs_3 !_x_4 = case _x_4 (_predefined._Nil -> <{_Tuple6!43}> False 0 ls_1 new_2 itemNrs_3 _predefined._Nil) (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = <{windowcontrols.addControlsToCompound`_8}> _x_0 ls_1 new_2 itemNrs_3 itemH_1_0, found_2_1 = select _x_2_0::_Tuple6 0 in case found_2_1 (True -> <{_Tuple6!43}> found_2_1 (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (select _x_2_0::_Tuple6 4) (_predefined._Cons (select _x_2_0::_Tuple6 5) itemHs_1_1)) (False -> let _x_4_0 = windowcontrols.addControlsToCompound_9 _x_0 (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (select _x_2_0::_Tuple6 4) itemHs_1_1 in <{_Tuple6!43}> (select _x_4_0::_Tuple6 0) (select _x_4_0::_Tuple6 1) (select _x_4_0::_Tuple6 2) (select _x_4_0::_Tuple6 3) (select _x_4_0::_Tuple6 4) (_predefined._Cons (select _x_2_0::_Tuple6 5) (select _x_4_0::_Tuple6 5))) ) 
windowcontrols.opencompoundcontrols !osd_0 !wMetrics_1 !compound_2 ls_3 !new_4 !wsH_5 !tb_6::I = case wsH_5 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowcontrols.addControlsToCompound_9 compound_2 ls_3 new_4 wh_4_3 wh_4_6 in case (StdBool.not (select _x_5_0::_Tuple6 0)) (True -> <{_Tuple3!7}> False (update wsH_5::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple6 5]])]) tb_6) (False -> let wPtr_7_0 = select wsh_1_0::windowhandle._WIDS 1, _x_7_1 = <{windowcontrols._c;90;39_81}> whWindow_4_5 whSize_4_12, domainRect_7_2 = select _x_7_1::_Tuple4 1, _x_7_3 = oswindow.osScrollbarsAreVisible wMetrics_1 domainRect_7_2 (commondef.toTuple_72 whSize_4_12) (_Tuple2 (select _x_7_1::_Tuple4 2) (select _x_7_1::_Tuple4 3)), _x_7_4 = _Tuple2 (<{StdInt.-_7}> (select whSize_4_12::StdIOBasic._Size 0) (<{windowcontrols._if;70;50_79}> (select _x_7_3::_Tuple2 1) wMetrics_1)) (<{StdInt.-_7}> (select whSize_4_12::StdIOBasic._Size 1) (<{windowcontrols._if;70;102_80}> (select _x_7_3::_Tuple2 0) wMetrics_1)), curw_7_5 = select _x_7_4::_Tuple2 0, curh_7_6 = select _x_7_4::_Tuple2 1, wFrame_7_7 = commondef.sizeToRect (StdIOBasic._Size curw_7_5 curh_7_6), _x_7_8 = <{wstate.getWElementHandles`}> wPtr_7_0 (select _x_5_0::_Tuple6 5) tb_6, hMargins_7_9 = windowaccess.getWindowHMargins whKind_4_1 wMetrics_1 whAtts_4_9, vMargins_7_10::I = windowaccess.getWindowVMargins whKind_4_1 wMetrics_1 whAtts_4_9, _x_7_11::I = controllayout.layoutControls wMetrics_1 hMargins_7_9 vMargins_7_10 (windowaccess.getWindowItemSpaces whKind_4_1 wMetrics_1 whAtts_4_9) (StdIOBasic._Size (<{StdInt.-_7}> (<{StdInt.-_7}> curw_7_5 (select hMargins_7_9::_Tuple2 0)) (select hMargins_7_9::_Tuple2 1)) (<{StdInt.-_7}> (<{StdInt.-_7}> curh_7_6 (select vMargins_7_10::_Tuple2 0)) (select vMargins_7_10::_Tuple2 1))) StdIOBasic.zero_15 (_predefined._Cons (_Tuple2 (commondef.rectToRectangle domainRect_7_2) (select _x_7_1::_Tuple4 0)) _predefined._Nil) (select _x_7_8::_Tuple3 1) (select _x_7_8::_Tuple3 2), _x_7_12 = controlcreate.createCompoundControls wMetrics_1 compound_2 (select _x_5_0::_Tuple6 1) whDefault_4_10 whCancel_4_11 whSelect_4_8 wPtr_7_0 (select _x_7_11::_Tuple3 1) (select _x_7_11::_Tuple3 2), _x_7_13 = windowclipstate.forceValidWindowClipState wMetrics_1 True wPtr_7_0 (update wH_3_1::windowhandle._WindowHandle [3:select _x_5_0::_Tuple6 4,6:select _x_7_12::_Tuple2 0]) (select _x_7_12::_Tuple2 1), wH_7_14 = select _x_7_13::_Tuple2 0, _x_7_15 = controlrelayout.relayoutControls wMetrics_1 wPtr_7_0 whDefault_4_10 False whSelect_4_8 whShow_4_7 (_Tuple4 wFrame_7_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select _x_7_8::_Tuple3 0)) (_Tuple4 wFrame_7_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select wH_7_14::windowhandle._WindowHandle 6)) (select _x_7_13::_Tuple2 1), _x_7_16::I = windowupdate.updatewindowbackgrounds wMetrics_1 (select _x_7_15::_Tuple3 0) wsh_1_0 (update wH_7_14::windowhandle._WindowHandle [6:select _x_7_15::_Tuple3 1]) (select _x_7_15::_Tuple3 2) in <{_Tuple3!7}> True (update wsH_5::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:select _x_7_16::_Tuple2 0])]) (select _x_7_16::_Tuple2 1)) ) ) ) ) (_ -> windowcontrols.windowcontrolsFatalError "opencompoundcontrols" "unexpected window placeholder argument")
<{windowcontrols._c;90;39_81}> !whWindow_0 whSize_1 = case whWindow_0 (windowhandle.WindowInfo info_1_0 -> _Tuple4 (select info_1_0::windowhandle._WindowData 1) (select info_1_0::windowhandle._WindowData 0) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3))) (_ -> _Tuple4 StdIOBasic.zero_21 (commondef.sizeToRect whSize_1) False False)
<{windowcontrols._if;70;102_80}>::I !_x_0::B wMetrics_1 = case _x_0 (True -> select wMetrics_1::ossystem._OSWindowMetrics 7) (_ -> 0)
<{windowcontrols._if;70;50_79}>::I !_x_0::B wMetrics_1 = case _x_0 (True -> select wMetrics_1::ossystem._OSWindowMetrics 8) (_ -> 0)
<{windowcontrols.addControlsToRecursiveControl``_10}> !control_0 ls_1 !new_2 itemNrs_3 !itemH_4 = case itemH_4 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case (StdBool.not (windowhandle.isRecursiveControl w_1_2)) (True -> <{_Tuple6!43}> False 0 ls_1 new_2 itemNrs_3 itemH_4) (False -> case (StdBool.not (windowaccess.identifyMaybeId control_0 w_1_0)) (True -> let _x_4_0::B = windowcontrols.addControlsToRecursiveControl_12 control_0 ls_1 new_2 itemNrs_3 (select itemH_4::windowhandle._WItemHandle 7), found_4_1 = select _x_4_0::_Tuple6 0 in case (case found_4_1 (True -> <{windowhandle.==_8}> w_1_2 windowhandle.IsCompoundControl) (False -> False) ) (True -> <{_Tuple6!43}> found_4_1 (select _x_4_0::_Tuple6 1) (select _x_4_0::_Tuple6 2) (select _x_4_0::_Tuple6 3) (select _x_4_0::_Tuple6 4) (windowclipstate.invalidateCompoundClipState (update itemH_4::windowhandle._WItemHandle [7:select _x_4_0::_Tuple6 5]))) (False -> <{_Tuple6!43}> found_4_1 (select _x_4_0::_Tuple6 1) (select _x_4_0::_Tuple6 2) (select _x_4_0::_Tuple6 3) (select _x_4_0::_Tuple6 4) (update itemH_4::windowhandle._WItemHandle [7:select _x_4_0::_Tuple6 5])) ) (False -> case (<{windowhandle.==_8}> w_1_2 windowhandle.IsCompoundControl) (True -> let _x_5_0 = commondef.ulength (select itemH_4::windowhandle._WItemHandle 7), _x_5_1 = windowaccess.genWElementItemNrs itemNrs_3 new_2 in <{_Tuple6!43}> True (select _x_5_0::_Tuple2 0) StdMisc.undef _predefined._Nil (select _x_5_1::_Tuple2 0) (windowclipstate.invalidateCompoundClipState (update itemH_4::windowhandle._WItemHandle [7:<{StdList.++}> (select _x_5_0::_Tuple2 1) (_predefined._Cons (windowhandle.WChangeLSHandle (windowhandle._WChangeLSHandle ls_1 (select _x_5_1::_Tuple2 1))) _predefined._Nil)]))) (False -> let _x_5_0 = commondef.ulength (select itemH_4::windowhandle._WItemHandle 7), _x_5_1 = windowaccess.genWElementItemNrs itemNrs_3 new_2 in <{_Tuple6!43}> True (select _x_5_0::_Tuple2 0) StdMisc.undef _predefined._Nil (select _x_5_1::_Tuple2 0) (update itemH_4::windowhandle._WItemHandle [7:<{StdList.++}> (select _x_5_0::_Tuple2 1) (_predefined._Cons (windowhandle.WChangeLSHandle (windowhandle._WChangeLSHandle ls_1 (select _x_5_1::_Tuple2 1))) _predefined._Nil)])) ) ) ) 
<{windowcontrols.addControlsToRecursiveControl`_11}> !control_0 ls_1 !new_2 itemNrs_3 !_x_4 = case _x_4 (windowhandle.WItemHandle itemH_1_0 -> let _x_2_0 = <{windowcontrols.addControlsToRecursiveControl``_10}> control_0 ls_1 new_2 itemNrs_3 itemH_1_0 in <{_Tuple6!43}> (select _x_2_0::_Tuple6 0) (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (select _x_2_0::_Tuple6 4) (windowhandle.WItemHandle (select _x_2_0::_Tuple6 5))) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowcontrols.addControlsToRecursiveControl_12 control_0 ls_1 new_2 itemNrs_3 itemHs_1_0 in <{_Tuple6!43}> (select _x_2_0::_Tuple6 0) (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (select _x_2_0::_Tuple6 4) (windowhandle.WListLSHandle (select _x_2_0::_Tuple6 5))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.addControlsToRecursiveControl_12 control_0 ls_1 new_2 itemNrs_3 itemHs_2_1 in <{_Tuple6!43}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (select _x_3_0::_Tuple6 4) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple6 5]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.addControlsToRecursiveControl_12 control_0 ls_1 new_2 itemNrs_3 itemHs_2_1 in <{_Tuple6!43}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (select _x_3_0::_Tuple6 4) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple6 5]))) ) 
windowcontrols.addControlsToRecursiveControl_12 !_x_0 ls_1 !new_2 itemNrs_3 !_x_4 = case _x_4 (_predefined._Nil -> <{_Tuple6!43}> False 0 ls_1 new_2 itemNrs_3 _predefined._Nil) (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = <{windowcontrols.addControlsToRecursiveControl`_11}> _x_0 ls_1 new_2 itemNrs_3 itemH_1_0, found_2_1 = select _x_2_0::_Tuple6 0 in case found_2_1 (True -> <{_Tuple6!43}> found_2_1 (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (select _x_2_0::_Tuple6 4) (_predefined._Cons (select _x_2_0::_Tuple6 5) itemHs_1_1)) (False -> let _x_4_0 = windowcontrols.addControlsToRecursiveControl_12 _x_0 (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (select _x_2_0::_Tuple6 4) itemHs_1_1 in <{_Tuple6!43}> (select _x_4_0::_Tuple6 0) (select _x_4_0::_Tuple6 1) (select _x_4_0::_Tuple6 2) (select _x_4_0::_Tuple6 3) (select _x_4_0::_Tuple6 4) (_predefined._Cons (select _x_2_0::_Tuple6 5) (select _x_4_0::_Tuple6 5))) ) 
windowcontrols.openrecursivecontrols !osd_0 !wMetrics_1 !control_2 ls_3 !new_4 !wsH_5 !tb_6::I = case wsH_5 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowcontrols.addControlsToRecursiveControl_12 control_2 ls_3 new_4 wh_4_3 wh_4_6 in case (StdBool.not (select _x_5_0::_Tuple6 0)) (True -> <{_Tuple3!7}> False (update wsH_5::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple6 5]])]) tb_6) (False -> let wPtr_7_0 = select wsh_1_0::windowhandle._WIDS 1, _x_7_1 = <{windowcontrols._c;184;39_84}> whWindow_4_5 whSize_4_12, domainRect_7_2 = select _x_7_1::_Tuple4 1, _x_7_3 = oswindow.osScrollbarsAreVisible wMetrics_1 domainRect_7_2 (commondef.toTuple_72 whSize_4_12) (_Tuple2 (select _x_7_1::_Tuple4 2) (select _x_7_1::_Tuple4 3)), _x_7_4 = _Tuple2 (<{StdInt.-_7}> (select whSize_4_12::StdIOBasic._Size 0) (<{windowcontrols._if;164;50_82}> (select _x_7_3::_Tuple2 1) wMetrics_1)) (<{StdInt.-_7}> (select whSize_4_12::StdIOBasic._Size 1) (<{windowcontrols._if;164;102_83}> (select _x_7_3::_Tuple2 0) wMetrics_1)), curw_7_5 = select _x_7_4::_Tuple2 0, curh_7_6 = select _x_7_4::_Tuple2 1, wFrame_7_7 = commondef.sizeToRect (StdIOBasic._Size curw_7_5 curh_7_6), _x_7_8 = <{wstate.getWElementHandles`}> wPtr_7_0 (select _x_5_0::_Tuple6 5) tb_6, hMargins_7_9 = windowaccess.getWindowHMargins whKind_4_1 wMetrics_1 whAtts_4_9, vMargins_7_10::I = windowaccess.getWindowVMargins whKind_4_1 wMetrics_1 whAtts_4_9, _x_7_11::I = controllayout.layoutControls wMetrics_1 hMargins_7_9 vMargins_7_10 (windowaccess.getWindowItemSpaces whKind_4_1 wMetrics_1 whAtts_4_9) (StdIOBasic._Size (<{StdInt.-_7}> (<{StdInt.-_7}> curw_7_5 (select hMargins_7_9::_Tuple2 0)) (select hMargins_7_9::_Tuple2 1)) (<{StdInt.-_7}> (<{StdInt.-_7}> curh_7_6 (select vMargins_7_10::_Tuple2 0)) (select vMargins_7_10::_Tuple2 1))) StdIOBasic.zero_15 (_predefined._Cons (_Tuple2 (commondef.rectToRectangle domainRect_7_2) (select _x_7_1::_Tuple4 0)) _predefined._Nil) (select _x_7_8::_Tuple3 1) (select _x_7_8::_Tuple3 2), _x_7_12 = controlcreate.createRecursiveControls wMetrics_1 control_2 (select _x_5_0::_Tuple6 1) whDefault_4_10 whCancel_4_11 whSelect_4_8 wPtr_7_0 (select _x_7_11::_Tuple3 1) (select _x_7_11::_Tuple3 2), _x_7_13 = windowclipstate.forceValidWindowClipState wMetrics_1 True wPtr_7_0 (update wH_3_1::windowhandle._WindowHandle [3:select _x_5_0::_Tuple6 4,6:select _x_7_12::_Tuple2 0]) (select _x_7_12::_Tuple2 1), wH_7_14 = select _x_7_13::_Tuple2 0, _x_7_15 = controlrelayout.relayoutControls wMetrics_1 wPtr_7_0 whDefault_4_10 False whSelect_4_8 whShow_4_7 (_Tuple4 wFrame_7_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select _x_7_8::_Tuple3 0)) (_Tuple4 wFrame_7_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select wH_7_14::windowhandle._WindowHandle 6)) (select _x_7_13::_Tuple2 1), _x_7_16::I = windowupdate.updatewindowbackgrounds wMetrics_1 (select _x_7_15::_Tuple3 0) wsh_1_0 (update wH_7_14::windowhandle._WindowHandle [6:select _x_7_15::_Tuple3 1]) (select _x_7_15::_Tuple3 2) in <{_Tuple3!7}> True (update wsH_5::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:select _x_7_16::_Tuple2 0])]) (select _x_7_16::_Tuple2 1)) ) ) ) ) (_ -> windowcontrols.windowcontrolsFatalError "openrecursivecontrols" "unexpected window placeholder argument")
<{windowcontrols._c;184;39_84}> !whWindow_0 whSize_1 = case whWindow_0 (windowhandle.WindowInfo info_1_0 -> _Tuple4 (select info_1_0::windowhandle._WindowData 1) (select info_1_0::windowhandle._WindowData 0) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3))) (_ -> _Tuple4 StdIOBasic.zero_21 (commondef.sizeToRect whSize_1) False False)
<{windowcontrols._if;164;102_83}>::I !_x_0::B wMetrics_1 = case _x_0 (True -> select wMetrics_1::ossystem._OSWindowMetrics 7) (_ -> 0)
<{windowcontrols._if;164;50_82}>::I !_x_0::B wMetrics_1 = case _x_0 (True -> select wMetrics_1::ossystem._OSWindowMetrics 8) (_ -> 0)
windowcontrols.anon_27 !f_0 g_1 x_2 = f_0 (g_1 x_2)
windowcontrols.anon_28 !f_0 g_1 x_2 = f_0 (g_1 x_2)
windowcontrols.closeWItemHandle_13 !parentPtr_0::I !parentPos_1 !ids_2 itemNrs_3 !itemH_4 !tb_5::I = case itemH_4 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case (windowhandle.isRecursiveControl w_1_2) (True -> let _x_3_0::B = <{windowcontrols._c;308;71_85}> w_1_0 ids_2, close_3_1 = select _x_3_0::_Tuple2 0 in case (StdBool.not close_3_1) (True -> case (<{windowhandle.==_8}> w_1_2 windowhandle.IsCompoundControl) (True -> let _x_6_0 = windowcontrols.closeWElementHandles_15 parentPtr_0 (StdIOBasic.movePoint w_1_9 parentPos_1) (select _x_3_0::_Tuple2 1) itemNrs_3 w_1_7 tb_5 in <{_Tuple8!255}> close_3_1 (select _x_6_0::_Tuple7 0) (select _x_6_0::_Tuple7 1) (select _x_6_0::_Tuple7 2) (select _x_6_0::_Tuple7 3) (select _x_6_0::_Tuple7 4) (windowclipstate.invalidateCompoundClipState (update itemH_4::windowhandle._WItemHandle [7:select _x_6_0::_Tuple7 5])) (select _x_6_0::_Tuple7 6)) (False -> let _x_6_0 = windowcontrols.closeWElementHandles_15 parentPtr_0 (StdIOBasic.movePoint w_1_9 parentPos_1) (select _x_3_0::_Tuple2 1) itemNrs_3 w_1_7 tb_5 in <{_Tuple8!255}> close_3_1 (select _x_6_0::_Tuple7 0) (select _x_6_0::_Tuple7 1) (select _x_6_0::_Tuple7 2) (select _x_6_0::_Tuple7 3) (select _x_6_0::_Tuple7 4) (update itemH_4::windowhandle._WItemHandle [7:select _x_6_0::_Tuple7 5]) (select _x_6_0::_Tuple7 6)) ) (False -> let absolutePos_5_0 = StdIOBasic.movePoint w_1_9 parentPos_1, _x_5_1 = windowcontrols.closeWElementHandles_15 parentPtr_0 absolutePos_5_0 (select _x_3_0::_Tuple2 1) itemNrs_3 w_1_7 tb_5, _x_5_2 = windowdispose.disposeWItemHandle parentPtr_0 parentPos_1 (update itemH_4::windowhandle._WItemHandle [7:select _x_5_1::_Tuple7 5]) (select _x_5_1::_Tuple7 6) in <{_Tuple8!255}> close_3_1 (<{StdList.++}> (select _x_5_2::_Tuple5 0) (select _x_5_1::_Tuple7 0)) (<{StdList.++}> (select _x_5_2::_Tuple5 1) (select _x_5_1::_Tuple7 1)) (windowcontrols.anon_28 (select _x_5_2::_Tuple5 2) (select _x_5_1::_Tuple7 2)) (select _x_5_1::_Tuple7 3) (select _x_5_1::_Tuple7 4) (select _x_5_2::_Tuple5 3) (oswindow.osInvalidateWindowRect parentPtr_0 (commondef.posSizeToRect absolutePos_5_0 w_1_10) (select _x_5_2::_Tuple5 4))) ) (False -> let _x_3_0::B = <{windowcontrols._c;308;71_86}> w_1_0 ids_2, close_3_1 = select _x_3_0::_Tuple2 0 in case (StdBool.not close_3_1) (True -> <{_Tuple8!255}> close_3_1 _predefined._Nil _predefined._Nil StdFunc.id (select _x_3_0::_Tuple2 1) itemNrs_3 itemH_4 tb_5) (False -> let _x_5_0 = windowdispose.disposeWItemHandle parentPtr_0 parentPos_1 itemH_4 tb_5 in <{_Tuple8!255}> close_3_1 (select _x_5_0::_Tuple5 0) (select _x_5_0::_Tuple5 1) (select _x_5_0::_Tuple5 2) (select _x_3_0::_Tuple2 1) (_predefined._Cons w_1_1 itemNrs_3) (select _x_5_0::_Tuple5 3) (oswindow.osInvalidateWindowRect parentPtr_0 (commondef.posSizeToRect (StdIOBasic.movePoint w_1_9 parentPos_1) w_1_10) (select _x_5_0::_Tuple5 4))) ) ) 
windowcontrols.closeWElementHandle_14 !parentPtr_0::I !parentPos_1 !ids_2 itemNrs_3 !_x_4 !tb_5::I = case _x_4 (windowhandle.WItemHandle itemH_1_0 -> let _x_2_0 = windowcontrols.closeWItemHandle_13 parentPtr_0 parentPos_1 ids_2 itemNrs_3 itemH_1_0 tb_5 in <{_Tuple8!255}> (select _x_2_0::_Tuple8 0) (select _x_2_0::_Tuple8 1) (select _x_2_0::_Tuple8 2) (select _x_2_0::_Tuple8 3) (select _x_2_0::_Tuple8 4) (select _x_2_0::_Tuple8 5) (windowhandle.WItemHandle (select _x_2_0::_Tuple8 6)) (select _x_2_0::_Tuple8 7)) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowcontrols.closeWElementHandles_15 parentPtr_0 parentPos_1 ids_2 itemNrs_3 itemHs_1_0 tb_5, _x_2_1 = commondef.uisEmpty (select _x_2_0::_Tuple7 5) in <{_Tuple8!255}> (select _x_2_1::_Tuple2 0) (select _x_2_0::_Tuple7 0) (select _x_2_0::_Tuple7 1) (select _x_2_0::_Tuple7 2) (select _x_2_0::_Tuple7 3) (select _x_2_0::_Tuple7 4) (windowhandle.WListLSHandle (select _x_2_1::_Tuple2 1)) (select _x_2_0::_Tuple7 6)) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.closeWElementHandles_15 parentPtr_0 parentPos_1 ids_2 itemNrs_3 itemHs_2_1 tb_5, _x_3_1 = commondef.uisEmpty (select _x_3_0::_Tuple7 5) in <{_Tuple8!255}> (select _x_3_1::_Tuple2 0) (select _x_3_0::_Tuple7 0) (select _x_3_0::_Tuple7 1) (select _x_3_0::_Tuple7 2) (select _x_3_0::_Tuple7 3) (select _x_3_0::_Tuple7 4) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_1::_Tuple2 1])) (select _x_3_0::_Tuple7 6)) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.closeWElementHandles_15 parentPtr_0 parentPos_1 ids_2 itemNrs_3 itemHs_2_1 tb_5, _x_3_1 = commondef.uisEmpty (select _x_3_0::_Tuple7 5) in <{_Tuple8!255}> (select _x_3_1::_Tuple2 0) (select _x_3_0::_Tuple7 0) (select _x_3_0::_Tuple7 1) (select _x_3_0::_Tuple7 2) (select _x_3_0::_Tuple7 3) (select _x_3_0::_Tuple7 4) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_1::_Tuple2 1])) (select _x_3_0::_Tuple7 6)) ) 
windowcontrols.closeWElementHandles_15 !_x_0::I !_x_1 !ids_2 itemNrs_3 !_x_4 !tb_5::I = case _x_4 (_predefined._Nil -> <{_Tuple7!127}> _predefined._Nil _predefined._Nil StdFunc.id ids_2 itemNrs_3 _predefined._Nil tb_5) (_predefined._Cons itemH_1_0 itemHs_1_1 -> case (StdList.isEmpty ids_2) (True -> <{_Tuple7!127}> _predefined._Nil _predefined._Nil StdFunc.id ids_2 itemNrs_3 (_predefined._Cons itemH_1_0 itemHs_1_1) tb_5) (False -> let _x_3_0 = windowcontrols.closeWElementHandle_14 _x_0 _x_1 ids_2 itemNrs_3 itemH_1_0 tb_5 in case (select _x_3_0::_Tuple8 0) (True -> let _x_5_0 = windowcontrols.closeWElementHandles_15 _x_0 _x_1 (select _x_3_0::_Tuple8 4) (select _x_3_0::_Tuple8 5) itemHs_1_1 (select _x_3_0::_Tuple8 7) in <{_Tuple7!127}> (<{StdList.++}> (select _x_3_0::_Tuple8 1) (select _x_5_0::_Tuple7 0)) (<{StdList.++}> (select _x_3_0::_Tuple8 2) (select _x_5_0::_Tuple7 1)) (windowcontrols.anon_27 (select _x_5_0::_Tuple7 2) (select _x_3_0::_Tuple8 3)) (select _x_5_0::_Tuple7 3) (select _x_5_0::_Tuple7 4) (select _x_5_0::_Tuple7 5) (select _x_5_0::_Tuple7 6)) (False -> let _x_5_0 = windowcontrols.closeWElementHandles_15 _x_0 _x_1 (select _x_3_0::_Tuple8 4) (select _x_3_0::_Tuple8 5) itemHs_1_1 (select _x_3_0::_Tuple8 7) in <{_Tuple7!127}> (<{StdList.++}> (select _x_3_0::_Tuple8 1) (select _x_5_0::_Tuple7 0)) (<{StdList.++}> (select _x_3_0::_Tuple8 2) (select _x_5_0::_Tuple7 1)) (windowcontrols.anon_27 (select _x_5_0::_Tuple7 2) (select _x_3_0::_Tuple8 3)) (select _x_5_0::_Tuple7 3) (select _x_5_0::_Tuple7 4) (_predefined._Cons (select _x_3_0::_Tuple8 6) (select _x_5_0::_Tuple7 5)) (select _x_5_0::_Tuple7 6)) ) ) 
<{windowcontrols._c;308;71_86}> !w_0 ids_1 = case w_0 (Data.Maybe.Just id_1_0 -> commondef.removeCheck (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) id_1_0 ids_1) (_ -> _Tuple2 False ids_1)
<{windowcontrols._c;308;71_85}> !w_0 ids_1 = case w_0 (Data.Maybe.Just id_1_0 -> commondef.removeCheck (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) id_1_0 ids_1) (_ -> _Tuple2 False ids_1)
windowcontrols.closecontrols !wMetrics_0 !close_1 !relayout_2::B !wsH_3 !tb_4::I = case wsH_3 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wsh_1_0 (windowhandle._WIDS w_2_0 wPtr_2_1 wActive_2_2 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_3_0 -> case wlsH_3_0 (windowhandle._WindowLSHandle wlsState_4_0 wH_4_1 -> case wH_4_1 (windowhandle._WindowHandle whMode_5_0 whKind_5_1 whTitle_5_2 wh_5_3 whKeyFocus_5_4 whWindow_5_5 cur_5_6 whShow_5_7 whSelect_5_8 whAtts_5_9 whDefault_5_10 whCancel_5_11 whSize_5_12 whClosing_5_13 -> case (StdBool.not relayout_2) (True -> let _x_7_0 = windowcontrols.closeWElementHandles_15 wPtr_2_1 StdIOBasic.zero_21 close_1 wh_5_3 cur_5_6 tb_4 in <{_Tuple5!31}> (select _x_7_0::_Tuple7 0) (select _x_7_0::_Tuple7 1) (select _x_7_0::_Tuple7 2) (update wsH_3::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_3_0::windowhandle._WindowLSHandle [1:windowclipstate.invalidateWindowClipState (update wH_4_1::windowhandle._WindowHandle [3:select _x_7_0::_Tuple7 4,6:select _x_7_0::_Tuple7 5])])]) (select _x_7_0::_Tuple7 6)) (False -> let _x_7_0 = windowcontrols.closeWElementHandles_15 wPtr_2_1 StdIOBasic.zero_21 close_1 wh_5_3 cur_5_6 tb_4, _x_7_1 = <{windowcontrols._c;276;39_89}> whWindow_5_5 whSize_5_12, domainRect_7_2 = select _x_7_1::_Tuple4 1, _x_7_3 = oswindow.osScrollbarsAreVisible wMetrics_0 domainRect_7_2 (commondef.toTuple_72 whSize_5_12) (_Tuple2 (select _x_7_1::_Tuple4 2) (select _x_7_1::_Tuple4 3)), _x_7_4 = _Tuple2 (<{StdInt.-_7}> (select whSize_5_12::StdIOBasic._Size 0) (<{windowcontrols._if;260;50_87}> (select _x_7_3::_Tuple2 1) wMetrics_0)) (<{StdInt.-_7}> (select whSize_5_12::StdIOBasic._Size 1) (<{windowcontrols._if;260;102_88}> (select _x_7_3::_Tuple2 0) wMetrics_0)), curw_7_5 = select _x_7_4::_Tuple2 0, curh_7_6 = select _x_7_4::_Tuple2 1, wFrame_7_7 = commondef.sizeToRect (StdIOBasic._Size curw_7_5 curh_7_6), _x_7_8 = <{wstate.getWElementHandles`}> wPtr_2_1 (select _x_7_0::_Tuple7 5) (select _x_7_0::_Tuple7 6), hMargins_7_9::I = windowaccess.getWindowHMargins whKind_5_1 wMetrics_0 whAtts_5_9, vMargins_7_10::I = windowaccess.getWindowVMargins whKind_5_1 wMetrics_0 whAtts_5_9, _x_7_11 = controllayout.layoutControls wMetrics_0 hMargins_7_9 vMargins_7_10 (windowaccess.getWindowItemSpaces whKind_5_1 wMetrics_0 whAtts_5_9) (StdIOBasic._Size (<{StdInt.-_7}> (<{StdInt.-_7}> curw_7_5 (select hMargins_7_9::_Tuple2 0)) (select hMargins_7_9::_Tuple2 1)) (<{StdInt.-_7}> (<{StdInt.-_7}> curh_7_6 (select vMargins_7_10::_Tuple2 0)) (select vMargins_7_10::_Tuple2 1))) StdIOBasic.zero_15 (_predefined._Cons (_Tuple2 (commondef.rectToRectangle domainRect_7_2) (select _x_7_1::_Tuple4 0)) _predefined._Nil) (select _x_7_8::_Tuple3 1) (select _x_7_8::_Tuple3 2), _x_7_12 = windowclipstate.forceValidWindowClipState wMetrics_0 True wPtr_2_1 (update wH_4_1::windowhandle._WindowHandle [3:select _x_7_0::_Tuple7 4,6:select _x_7_11::_Tuple3 1]) (select _x_7_11::_Tuple3 2), wH_7_13 = select _x_7_12::_Tuple2 0, _x_7_14 = controlrelayout.relayoutControls wMetrics_0 wPtr_2_1 whDefault_5_10 False whSelect_5_8 whShow_5_7 (_Tuple4 wFrame_7_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select _x_7_8::_Tuple3 0)) (_Tuple4 wFrame_7_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select wH_7_13::windowhandle._WindowHandle 6)) (select _x_7_12::_Tuple2 1), _x_7_15 = windowupdate.updatewindowbackgrounds wMetrics_0 (select _x_7_14::_Tuple3 0) wsh_1_0 (update wH_7_13::windowhandle._WindowHandle [6:select _x_7_14::_Tuple3 1]) (select _x_7_14::_Tuple3 2) in <{_Tuple5!31}> (select _x_7_0::_Tuple7 0) (select _x_7_0::_Tuple7 1) (select _x_7_0::_Tuple7 2) (update wsH_3::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_3_0::windowhandle._WindowLSHandle [1:select _x_7_15::_Tuple2 0])]) (select _x_7_15::_Tuple2 1)) ) ) ) ) ) (_ -> windowcontrols.windowcontrolsFatalError "closecontrols" "unexpected window placeholder argument")
<{windowcontrols._c;276;39_89}> !whWindow_0 whSize_1 = case whWindow_0 (windowhandle.WindowInfo info_1_0 -> _Tuple4 (select info_1_0::windowhandle._WindowData 1) (select info_1_0::windowhandle._WindowData 0) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3))) (_ -> _Tuple4 StdIOBasic.zero_21 (commondef.sizeToRect whSize_1) False False)
<{windowcontrols._if;260;102_88}>::I !_x_0::B wMetrics_1 = case _x_0 (True -> select wMetrics_1::ossystem._OSWindowMetrics 7) (_ -> 0)
<{windowcontrols._if;260;50_87}>::I !_x_0::B wMetrics_1 = case _x_0 (True -> select wMetrics_1::ossystem._OSWindowMetrics 8) (_ -> 0)
windowcontrols.anon_29 !f_0 g_1 x_2 = f_0 (g_1 x_2)
windowcontrols.anon_30 !f_0 g_1 x_2 = f_0 (g_1 x_2)
windowcontrols.closeWItemHandle_16 !parentPtr_0::I !parentPos_1 !itemH_2 !itemNrs_3 !tb_4::I = case itemH_2 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case (windowhandle.isRecursiveControl w_1_2) (True -> let absolutePos_3_0 = StdIOBasic.movePoint w_1_9 parentPos_1, _x_3_1 = windowcontrols.closeWElementHandles_18 parentPtr_0 absolutePos_3_0 w_1_7 itemNrs_3 tb_4, _x_3_2 = windowdispose.disposeWItemHandle parentPtr_0 parentPos_1 (update itemH_2::windowhandle._WItemHandle [7:_predefined._Nil]) (select _x_3_1::_Tuple5 4) in <{_Tuple5!31}> (<{StdList.++}> (select _x_3_2::_Tuple5 0) (select _x_3_1::_Tuple5 0)) (<{StdList.++}> (select _x_3_2::_Tuple5 1) (select _x_3_1::_Tuple5 1)) (windowcontrols.anon_30 (select _x_3_2::_Tuple5 2) (select _x_3_1::_Tuple5 2)) (select _x_3_1::_Tuple5 3) (oswindow.osInvalidateWindowRect parentPtr_0 (commondef.posSizeToRect absolutePos_3_0 w_1_10) (select _x_3_2::_Tuple5 4))) (False -> let _x_3_0 = windowdispose.disposeWItemHandle parentPtr_0 parentPos_1 itemH_2 tb_4 in <{_Tuple5!31}> (select _x_3_0::_Tuple5 0) (select _x_3_0::_Tuple5 1) (select _x_3_0::_Tuple5 2) (_predefined._Cons w_1_1 itemNrs_3) (oswindow.osInvalidateWindowRect parentPtr_0 (commondef.posSizeToRect (StdIOBasic.movePoint w_1_9 parentPos_1) w_1_10) (select _x_3_0::_Tuple5 4))) ) 
windowcontrols.closeWElementHandle_17 !parentPtr_0::I !parentPos_1 !_x_2 !itemNrs_3 !tb_4::I = case _x_2 (windowhandle.WItemHandle itemH_1_0 -> windowcontrols.closeWItemHandle_16 parentPtr_0 parentPos_1 itemH_1_0 itemNrs_3 tb_4) (windowhandle.WListLSHandle itemHs_1_0 -> windowcontrols.closeWElementHandles_18 parentPtr_0 parentPos_1 itemHs_1_0 itemNrs_3 tb_4) (windowhandle.WExtendLSHandle _x_1_0 -> case _x_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> windowcontrols.closeWElementHandles_18 parentPtr_0 parentPos_1 itemHs_2_1 itemNrs_3 tb_4) ) (windowhandle.WChangeLSHandle _x_1_0 -> case _x_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> windowcontrols.closeWElementHandles_18 parentPtr_0 parentPos_1 itemHs_2_1 itemNrs_3 tb_4) ) 
windowcontrols.closeWElementHandles_18 !_x_0::I !_x_1 !_x_2 !itemNrs_3 !tb_4::I = case _x_2 (_predefined._Nil -> <{_Tuple5!31}> _predefined._Nil _predefined._Nil StdFunc.id itemNrs_3 tb_4) (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = windowcontrols.closeWElementHandle_17 _x_0 _x_1 itemH_1_0 itemNrs_3 tb_4, _x_2_1 = windowcontrols.closeWElementHandles_18 _x_0 _x_1 itemHs_1_1 (select _x_2_0::_Tuple5 3) (select _x_2_0::_Tuple5 4) in <{_Tuple5!31}> (<{StdList.++}> (select _x_2_0::_Tuple5 0) (select _x_2_1::_Tuple5 0)) (<{StdList.++}> (select _x_2_0::_Tuple5 1) (select _x_2_1::_Tuple5 1)) (windowcontrols.anon_29 (select _x_2_1::_Tuple5 2) (select _x_2_0::_Tuple5 2)) (select _x_2_1::_Tuple5 3) (select _x_2_1::_Tuple5 4)) 
windowcontrols.closeallcontrols !wsH_0 !tb_1::I = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wsh_1_0 (windowhandle._WIDS w_2_0 wPtr_2_1 wActive_2_2 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_3_0 -> case wlsH_3_0 (windowhandle._WindowLSHandle wlsState_4_0 wH_4_1 -> case wH_4_1 (windowhandle._WindowHandle whMode_5_0 whKind_5_1 whTitle_5_2 wh_5_3 whKeyFocus_5_4 whWindow_5_5 cur_5_6 whShow_5_7 whSelect_5_8 whAtts_5_9 whDefault_5_10 whCancel_5_11 whSize_5_12 whClosing_5_13 -> let _x_6_0 = windowcontrols.closeWElementHandles_18 wPtr_2_1 StdIOBasic.zero_21 cur_5_6 wh_5_3 tb_1 in <{_Tuple5!31}> (select _x_6_0::_Tuple5 0) (select _x_6_0::_Tuple5 1) (select _x_6_0::_Tuple5 2) (update wsH_0::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_3_0::windowhandle._WindowLSHandle [1:windowclipstate.invalidateWindowClipState (update wH_4_1::windowhandle._WindowHandle [3:select _x_6_0::_Tuple5 3,6:_predefined._Nil])])]) (select _x_6_0::_Tuple5 4)) ) ) ) ) (_ -> windowcontrols.windowcontrolsFatalError "closeallcontrols" "unexpected window placeholder argument")
windowcontrols.getids_21 !_x_0 = case _x_0 (_predefined._Cons _x_1_0 idPoss_1_1 -> case _x_1_0 (_Tuple2 control_2_0 _x_2_1 -> case _x_2_1 (_Tuple2 itemLoc_3_0 _x_3_1 -> <{windowcontrols._c;448;15_90}> itemLoc_3_0 control_2_0 idPoss_1_1) ) ) (_ -> _predefined._Nil)
<{windowcontrols._c;448;15_90}> !itemLoc_0 control_1 idPoss_2 = case itemLoc_0 (StdIOCommon.LeftOf id_1_0 -> _predefined._Cons id_1_0 (_predefined._Cons control_1 (windowcontrols.getids_21 idPoss_2))) (StdIOCommon.RightTo id_1_0 -> _predefined._Cons id_1_0 (_predefined._Cons control_1 (windowcontrols.getids_21 idPoss_2))) (StdIOCommon.Above id_1_0 -> _predefined._Cons id_1_0 (_predefined._Cons control_1 (windowcontrols.getids_21 idPoss_2))) (StdIOCommon.Below id_1_0 -> _predefined._Cons id_1_0 (_predefined._Cons control_1 (windowcontrols.getids_21 idPoss_2))) (_ -> _predefined._Cons control_1 (windowcontrols.getids_21 idPoss_2))
<{windowcontrols.controlsExist`_20}> !ids_0 !_x_1 = case _x_1 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> let _x_3_0 = windowcontrols.controlsExist_22 (<{windowcontrols._if;472;35_91}> (Data.Maybe.isJust w_2_0) w_2_0 ids_0) w_2_7 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_3_0::_Tuple2 1]))) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowcontrols.controlsExist_22 ids_0 itemHs_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WListLSHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.controlsExist_22 ids_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple2 1]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.controlsExist_22 ids_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple2 1]))) ) 
windowcontrols.controlsExist_22 !ids_0 !_x_1 = case _x_1 (_predefined._Nil -> <{_Tuple2!3}> ids_0 _predefined._Nil) (_predefined._Cons itemH_1_0 itemHs_1_1 -> case (StdList.isEmpty ids_0) (True -> <{_Tuple2!3}> ids_0 (_predefined._Cons itemH_1_0 itemHs_1_1)) (False -> let _x_3_0 = <{windowcontrols.controlsExist`_20}> ids_0 itemH_1_0, _x_3_1 = windowcontrols.controlsExist_22 (select _x_3_0::_Tuple2 0) itemHs_1_1 in <{_Tuple2!3}> (select _x_3_1::_Tuple2 0) (_predefined._Cons (select _x_3_0::_Tuple2 1) (select _x_3_1::_Tuple2 1))) ) 
<{windowcontrols._if;472;35_91}> !_x_0::B w_1 !ids_2 = case _x_0 (True -> StdList.removeMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) (Data.Maybe.fromJust w_1) ids_2) (_ -> ids_2)
windowcontrols.validateNewItemPoss_25 !idPoss_0 !itemHs_1 = let _x_1_0 = windowcontrols.controlsExist_22 (windowcontrols.getids_21 idPoss_0) itemHs_1 in <{_Tuple2!3}> (StdList.isEmpty (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
windowcontrols.anon_32 !f_0 g_1 x_2 = f_0 (g_1 x_2)
windowcontrols.fst_31 !tuple_0 = select tuple_0::_Tuple2 0
windowcontrols.anon_76::B !_x_0 !g_1 x_2 = <{id.==_27}> _x_0 (g_1 x_2)
windowcontrols.anon_77::B !_x_0 !x_1 = <{id.==_27}> _x_0 (windowcontrols.fst_31 x_1)
<{windowcontrols.setNewItemPos``_23}> !idPoss_0 !itemH_1 = case itemH_1 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case (Data.Maybe.isNothing w_1_0) (True -> case (windowhandle.isRecursiveControl w_1_2) (True -> let _x_4_0 = windowcontrols.setNewItemPoss_26 idPoss_0 w_1_7 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (update itemH_1::windowhandle._WItemHandle [7:select _x_4_0::_Tuple2 1])) (False -> <{_Tuple2!3}> idPoss_0 itemH_1) ) (False -> case (windowhandle.isRecursiveControl w_1_2) (True -> let item_4_0::B = Data.Maybe.fromJust w_1_0, _x_4_1 = commondef.remove (windowcontrols.anon_77 item_4_0) StdMisc.undef idPoss_0, found_4_2 = select _x_4_1::_Tuple3 0 in case (case found_4_2 (True -> <{windowhandle.==_8}> w_1_2 windowhandle.IsCompoundControl) (False -> False) ) (True -> let _x_6_0 = windowcontrols.setNewItemPoss_26 (select _x_4_1::_Tuple3 2) w_1_7, idPos_6_1 = select _x_4_1::_Tuple3 1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (windowclipstate.invalidateCompoundClipState (update itemH_1::windowhandle._WItemHandle [6:<{windowcontrols._if;510;43_92}> found_4_2 idPos_6_1 w_1_6,7:select _x_6_0::_Tuple2 1]))) (False -> let _x_6_0 = windowcontrols.setNewItemPoss_26 (select _x_4_1::_Tuple3 2) w_1_7, idPos_6_1 = select _x_4_1::_Tuple3 1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (update itemH_1::windowhandle._WItemHandle [6:<{windowcontrols._if;510;43_93}> found_4_2 idPos_6_1 w_1_6,7:select _x_6_0::_Tuple2 1])) ) (False -> let item_4_0 = Data.Maybe.fromJust w_1_0, _x_4_1 = commondef.remove (windowcontrols.anon_77 item_4_0) StdMisc.undef idPoss_0, idPos_4_2 = select _x_4_1::_Tuple3 1 in <{_Tuple2!3}> (select _x_4_1::_Tuple3 2) (update itemH_1::windowhandle._WItemHandle [6:<{windowcontrols._if;510;43_94}> (select _x_4_1::_Tuple3 0) idPos_4_2 w_1_6])) ) ) 
<{windowcontrols.setNewItemPos`_24}> !idPoss_0 !_x_1 = case _x_1 (windowhandle.WItemHandle itemH_1_0 -> let _x_2_0 = <{windowcontrols.setNewItemPos``_23}> idPoss_0 itemH_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WItemHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowcontrols.setNewItemPoss_26 idPoss_0 itemHs_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WListLSHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.setNewItemPoss_26 idPoss_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple2 1]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowcontrols.setNewItemPoss_26 idPoss_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple2 1]))) ) 
windowcontrols.setNewItemPoss_26 !idPoss_0 !_x_1 = case _x_1 (_predefined._Nil -> <{_Tuple2!3}> idPoss_0 _predefined._Nil) (_predefined._Cons itemH_1_0 itemHs_1_1 -> case (StdList.isEmpty idPoss_0) (True -> <{_Tuple2!3}> idPoss_0 (_predefined._Cons itemH_1_0 itemHs_1_1)) (False -> let _x_3_0 = <{windowcontrols.setNewItemPos`_24}> idPoss_0 itemH_1_0, _x_3_1 = windowcontrols.setNewItemPoss_26 (select _x_3_0::_Tuple2 0) itemHs_1_1 in <{_Tuple2!3}> (select _x_3_1::_Tuple2 0) (_predefined._Cons (select _x_3_0::_Tuple2 1) (select _x_3_1::_Tuple2 1))) ) 
<{windowcontrols._if;510;43_94}> !_x_0::B idPos_1 !w_2 = case _x_0 (True -> select (commondef.creplace StdControlAttribute.isControlPos (StdControlDef.ControlPos (select idPos_1::_Tuple2 1)) w_2)::_Tuple2 1) (_ -> w_2)
<{windowcontrols._if;510;43_93}> !found_0::B idPos_1 !w_2 = case found_0 (True -> select (commondef.creplace StdControlAttribute.isControlPos (StdControlDef.ControlPos (select idPos_1::_Tuple2 1)) w_2)::_Tuple2 1) (_ -> w_2)
<{windowcontrols._if;510;43_92}> !found_0::B idPos_1 !w_2 = case found_0 (True -> select (commondef.creplace StdControlAttribute.isControlPos (StdControlDef.ControlPos (select idPos_1::_Tuple2 1)) w_2)::_Tuple2 1) (_ -> w_2)
windowcontrols.anon_19 x_0 y_1 = _Tuple2 x_0 y_1
windowcontrols.setcontrolpositions !wMetrics_0 !newPoss_1 !wsH_2 !tb_3::I = case wsH_2 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 old_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = windowcontrols.validateNewItemPoss_25 newPoss_1 old_4_6 in case (StdBool.not (select _x_5_0::_Tuple2 0)) (True -> <{_Tuple3!7}> False (update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple2 1]])]) tb_3) (False -> let wPtr_7_0 = select wsh_1_0::windowhandle._WIDS 1, _x_7_1 = <{windowcontrols._c;436;39_98}> whWindow_4_5 whSize_4_12, domainRect_7_2 = select _x_7_1::_Tuple4 1, hasHScroll_7_3 = select _x_7_1::_Tuple4 2, hasVScroll_7_4 = select _x_7_1::_Tuple4 3, _x_7_5 = oswindow.osScrollbarsAreVisible wMetrics_0 domainRect_7_2 (commondef.toTuple_72 whSize_4_12) (_Tuple2 hasHScroll_7_3 hasVScroll_7_4), visVScroll_7_6 = select _x_7_5::_Tuple2 1, visHScroll_7_7 = select _x_7_5::_Tuple2 0, _x_7_8 = _Tuple2 (<{StdInt.-_7}> (select whSize_4_12::StdIOBasic._Size 0) (<{windowcontrols._if;412;50_96}> visVScroll_7_6 wMetrics_0)) (<{StdInt.-_7}> (select whSize_4_12::StdIOBasic._Size 1) (<{windowcontrols._if;412;102_97}> visHScroll_7_7 wMetrics_0)), curw_7_9 = select _x_7_8::_Tuple2 0, curh_7_10 = select _x_7_8::_Tuple2 1, wFrame_7_11::I = commondef.sizeToRect (StdIOBasic._Size curw_7_9 curh_7_10), _x_7_12::I = <{wstate.getWElementHandles`}> wPtr_7_0 (select _x_5_0::_Tuple2 1) tb_3, hMargins_7_13 = windowaccess.getWindowHMargins whKind_4_1 wMetrics_0 whAtts_4_9, vMargins_7_14::B = windowaccess.getWindowVMargins whKind_4_1 wMetrics_0 whAtts_4_9, origin_7_15::B = select _x_7_1::_Tuple4 0, _x_7_16 = controllayout.layoutControls wMetrics_0 hMargins_7_13 vMargins_7_14 (windowaccess.getWindowItemSpaces whKind_4_1 wMetrics_0 whAtts_4_9) (StdIOBasic._Size (<{StdInt.-_7}> (<{StdInt.-_7}> curw_7_9 (select hMargins_7_13::_Tuple2 0)) (select hMargins_7_13::_Tuple2 1)) (<{StdInt.-_7}> (<{StdInt.-_7}> curh_7_10 (select vMargins_7_14::_Tuple2 0)) (select vMargins_7_14::_Tuple2 1))) StdIOBasic.zero_15 (_predefined._Cons (_Tuple2 (commondef.rectToRectangle domainRect_7_2) origin_7_15) _predefined._Nil) (select (windowcontrols.setNewItemPoss_26 newPoss_1 (select _x_7_12::_Tuple3 1))::_Tuple2 1) (select _x_7_12::_Tuple3 2), _x_7_17::B = windowclipstate.forceValidWindowClipState wMetrics_0 True wPtr_7_0 (update wH_3_1::windowhandle._WindowHandle [6:select _x_7_16::_Tuple3 1]) (select _x_7_16::_Tuple3 2), _x_7_18::B = <{windowcontrols._if;425;39_95}> (<{windowhandle.==_6}> whKind_4_1 windowhandle.IsDialog) wMetrics_0 wPtr_7_0 origin_7_15 curw_7_9 curh_7_10 (select _x_7_17::_Tuple2 0) (select _x_7_17::_Tuple2 1), wH_7_19 = select _x_7_18::_Tuple2 0, _x_7_20 = controlrelayout.relayoutControls wMetrics_0 wPtr_7_0 whDefault_4_10 False whSelect_4_8 whShow_4_7 (_Tuple4 wFrame_7_11 StdIOBasic.zero_21 StdIOBasic.zero_11 (select _x_7_12::_Tuple3 0)) (_Tuple4 wFrame_7_11 StdIOBasic.zero_21 StdIOBasic.zero_11 (select wH_7_19::windowhandle._WindowHandle 6)) (select _x_7_18::_Tuple2 1), _x_7_21::I = windowupdate.updatewindowbackgrounds wMetrics_0 (select _x_7_20::_Tuple3 0) wsh_1_0 (update wH_7_19::windowhandle._WindowHandle [6:select _x_7_20::_Tuple3 1]) (select _x_7_20::_Tuple3 2) in <{_Tuple3!7}> True (update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:select _x_7_21::_Tuple2 0])]) (oswindow.osValidateWindowRect wPtr_7_0 (commondef.sizeToRect whSize_4_12) (select _x_7_21::_Tuple2 1))) ) ) ) ) (_ -> windowcontrols.windowcontrolsFatalError "setcontrolpositions" "unexpected window placeholder argument")
<{windowcontrols._c;436;39_98}> !whWindow_0 whSize_1 = case whWindow_0 (windowhandle.WindowInfo info_1_0 -> _Tuple4 (select info_1_0::windowhandle._WindowData 1) (select info_1_0::windowhandle._WindowData 0) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3))) (_ -> _Tuple4 StdIOBasic.zero_21 (commondef.sizeToRect whSize_1) False False)
<{windowcontrols._if;412;102_97}>::I !visHScroll_0::B wMetrics_1 = case visHScroll_0 (True -> select wMetrics_1::ossystem._OSWindowMetrics 7) (_ -> 0)
<{windowcontrols._if;412;50_96}>::I !visVScroll_0::B wMetrics_1 = case visVScroll_0 (True -> select wMetrics_1::ossystem._OSWindowMetrics 8) (_ -> 0)
<{windowcontrols._if;425;39_95}> !_x_0::B wMetrics_1 wPtr_2::I origin_3 curw_4::I curh_5::I = case _x_0 (True -> windowcontrols.anon_19) (_ -> windowdraw.drawwindowlook wMetrics_1 wPtr_2 StdFunc.id (StdIOCommon.rectangleToUpdateState (commondef.posSizeToRectangle origin_3 (StdIOBasic._Size curw_4 curh_5))))


|| Converted Records
:: <{windowcontrols.gEq_s;}> = {!windowcontrols.gEq_s}

:: <{windowcontrols.gEq_ss;}> = {!windowcontrols.gEq_ss}

:: <{windowcontrols.gEq_sss;}> = {!windowcontrols.gEq_sss}

:: <{windowcontrols.gEq_ssss;}> = {!windowcontrols.gEq_ssss}

:: <{windowcontrols.gEq_sssss;}> = {!windowcontrols.gEq_sssss}

:: <{windowcontrols.gEq_ssssss;}> = {!windowcontrols.gEq_ssssss}

:: <{windowcontrols.gEq_sssssss;}> = {!windowcontrols.gEq_sssssss}

:: <{windowcontrols.gEq_ssssssss;}> = {!windowcontrols.gEq_ssssssss}

:: <{windowcontrols.gEq_sssssssss;}> = {!windowcontrols.gEq_sssssssss}

:: <{windowcontrols.bimap_s;}> = {windowcontrols.bimap_s}

:: <{windowcontrols.bimap_ss;}> = {windowcontrols.bimap_ss}

:: <{windowcontrols.bimap_sss;}> = {windowcontrols.bimap_sss}

