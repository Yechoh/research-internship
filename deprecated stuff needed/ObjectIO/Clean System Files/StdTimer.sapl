|| ?module? StdTimer


StdTimer.ioStGetTimerHandles !ioState_0 = let _x_1_0 = iostate.ioStGetDevice device.TimerDevice ioState_0 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple3!5}> False StdMisc.undef (select _x_1_0::_Tuple3 2)) (False -> <{_Tuple3!5}> True (devicesystemstate.timerSystemStateGetTimerHandles (select _x_1_0::_Tuple3 1)) (select _x_1_0::_Tuple3 2)) 
StdTimer.eqTimerStateHandleId !id_0 !tsH_1 = case tsH_1 (timerhandle.TimerLSHandle _x_1_0 -> case _x_1_0 (timerhandle._TimerLSHandle tState_2_0 _x_2_1 -> case _x_2_1 (timerhandle._TimerHandle t_3_0 tSelect_3_1 tPeriod_3_2 tFun_3_3 t_3_4 -> <{_Tuple2!3}> (<{id.==_27}> id_0 t_3_0) tsH_1) ) ) 
StdTimer.disposeElementIds_14 !pid_0 !_x_1 !tt_2 !rt_3 !it_4 = case _x_1 (timerhandle.TimerLSHandle _x_1_0 -> case _x_1_0 (timerhandle._TimerLSHandle tState_2_0 _x_2_1 -> case _x_2_1 (timerhandle._TimerHandle t_3_0 tSelect_3_1 tPeriod_3_2 tFun_3_3 t_3_4 -> let _x_4_0 = timeraccess.unbindTimerElementIds pid_0 t_3_4 (_Tuple3 tt_2 rt_3 it_4) in <{_Tuple3!7}> (select (timertable.removeTimerFromTimerTable (timertable._TimerLoc pid_0 device.TimerDevice t_3_0 t_3_0) (select _x_4_0::_Tuple3 0))::_Tuple2 1) (select _x_4_0::_Tuple3 1) (select (id.removeIdFromIdTable t_3_0 (select _x_4_0::_Tuple3 2))::_Tuple2 1)) ) ) 
StdTimer.closetimer_15 !id_0 !pid_1 !rt_2 !tt_3 !it_4 !_x_5 = case _x_5 (_predefined._Cons tsH_1_0 tsHs_1_1 -> let _x_2_0 = StdTimer.eqTimerStateHandleId id_0 tsH_1_0 in case (select _x_2_0::_Tuple2 0) (True -> let _x_4_0 = StdTimer.disposeElementIds_14 pid_1 (select _x_2_0::_Tuple2 1) tt_3 rt_2 it_4 in <{_Tuple4!15}> (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 2) tsHs_1_1) (False -> let _x_4_0 = StdTimer.closetimer_15 id_0 pid_1 rt_2 tt_3 it_4 tsHs_1_1 in <{_Tuple4!15}> (select _x_4_0::_Tuple4 0) (select _x_4_0::_Tuple4 1) (select _x_4_0::_Tuple4 2) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_4_0::_Tuple4 3))) ) (_ -> <{_Tuple4!15}> rt_2 tt_3 it_4 _predefined._Nil)
StdTimer.closeTimer !id_0 !ioState_1 = let _x_1_0 = StdTimer.ioStGetTimerHandles ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let tHs_3_0 = select _x_1_0::_Tuple3 1, _x_3_1 = iostate.ioStGetIOId (select _x_1_0::_Tuple3 2), _x_3_2 = iostate.ioStGetReceiverTable (select _x_3_1::_Tuple2 1), _x_3_3 = iostate.ioStGetTimerTable (select _x_3_2::_Tuple2 1), _x_3_4 = iostate.ioStGetIdTable (select _x_3_3::_Tuple2 1), _x_3_5 = StdTimer.closetimer_15 id_0 (select _x_3_1::_Tuple2 0) (select _x_3_2::_Tuple2 0) (select _x_3_3::_Tuple2 0) (select _x_3_4::_Tuple2 0) (select tHs_3_0::timerhandle._TimerHandles 0) in iostate.ioStSetDevice (devicesystemstate.TimerSystemState (update tHs_3_0::timerhandle._TimerHandles [0:select _x_3_5::_Tuple4 3])) (iostate.ioStSetTimerTable (select _x_3_5::_Tuple4 1) (iostate.ioStSetReceiverTable (select _x_3_5::_Tuple4 0) (iostate.ioStSetIdTable (select _x_3_5::_Tuple4 2) (select _x_3_4::_Tuple2 1))))) 
StdTimer.getidtype_16 !tH_0 = case tH_0 (timerhandle._TimerHandle t_1_0 tSelect_1_1 tPeriod_1_2 tFun_1_3 t_1_4 -> <{_Tuple2!2}> (_Tuple2 t_1_0 "Timer") tH_0) 
StdTimer.getidtypes_17 !_x_0 = case _x_0 (_predefined._Cons _x_1_0 tsHs_1_1 -> case _x_1_0 (timerhandle.TimerLSHandle tlsH_2_0 -> case tlsH_2_0 (timerhandle._TimerLSHandle tState_3_0 tH_3_1 -> let _x_4_0 = StdTimer.getidtype_16 tH_3_1, _x_4_1 = StdTimer.getidtypes_17 tsHs_1_1 in <{_Tuple2!3}> (_predefined._Cons (select _x_4_0::_Tuple2 0) (select _x_4_1::_Tuple2 0)) (_predefined._Cons (timerhandle.TimerLSHandle (update tlsH_2_0::timerhandle._TimerLSHandle [1:select _x_4_0::_Tuple2 1])) (select _x_4_1::_Tuple2 1))) ) ) (_ -> <{_Tuple2!3}> _predefined._Nil _predefined._Nil)
StdTimer.getTimers !ioState_0 = let _x_1_0 = StdTimer.ioStGetTimerHandles ioState_0 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> _predefined._Nil (select _x_1_0::_Tuple3 2)) (False -> let tHs_3_0 = select _x_1_0::_Tuple3 1, _x_3_1 = StdTimer.getidtypes_17 (select tHs_3_0::timerhandle._TimerHandles 0) in <{_Tuple2!3}> (select _x_3_1::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.TimerSystemState (update tHs_3_0::timerhandle._TimerHandles [0:select _x_3_1::_Tuple2 1])) (select _x_1_0::_Tuple3 2))) 
StdTimer.enabletimer_18 teLoc_0 !tt_1 !tlsH_2 = case tlsH_2 (timerhandle.TimerLSHandle tsH_1_0 -> case tsH_1_0 (timerhandle._TimerLSHandle tState_2_0 tH_2_1 -> case tH_2_1 (timerhandle._TimerHandle t_3_0 tSelect_3_1 tPeriod_3_2 tFun_3_3 t_3_4 -> case tSelect_3_1 (True -> <{_Tuple2!3}> tt_1 tlsH_2) (False -> <{_Tuple2!3}> (select (timertable.addTimerToTimerTable teLoc_0 tPeriod_3_2 tt_1)::_Tuple2 1) (timerhandle.TimerLSHandle (update tsH_1_0::timerhandle._TimerLSHandle [1:update tH_2_1::timerhandle._TimerHandle [1:True]]))) ) ) ) 
StdTimer.changetimerstatehandles_23 ioid_0 !id_1 f_2 !tt_3 !_x_4 = case _x_4 (_predefined._Cons tsH_1_0 tsHs_1_1 -> case tsH_1_0 (timerhandle.TimerLSHandle _x_2_0 -> case _x_2_0 (timerhandle._TimerLSHandle tState_3_0 _x_3_1 -> case _x_3_1 (timerhandle._TimerHandle t_4_0 tSelect_4_1 tPeriod_4_2 tFun_4_3 t_4_4 -> case (<{id.==_27}> id_1 t_4_0) (True -> let _x_6_0 = f_2 (timertable._TimerLoc ioid_0 device.TimerDevice id_1 id_1) tt_3 tsH_1_0 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (_predefined._Cons (select _x_6_0::_Tuple2 1) tsHs_1_1)) (False -> let _x_6_0 = StdTimer.changetimerstatehandles_23 ioid_0 id_1 f_2 tt_3 tsHs_1_1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (_predefined._Cons tsH_1_0 (select _x_6_0::_Tuple2 1))) ) ) ) ) (_predefined._Nil -> <{_Tuple2!3}> tt_3 _predefined._Nil) 
StdTimer.changetimerdevice_24 ioid_0 !id_1 f_2 !tt_3 !timers_4 = case timers_4 (timerhandle._TimerHandles tsHs_1_0 -> let _x_2_0 = StdTimer.changetimerstatehandles_23 ioid_0 id_1 f_2 tt_3 tsHs_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update timers_4::timerhandle._TimerHandles [0:select _x_2_0::_Tuple2 1])) 
StdTimer.changeTimer !id_0 !f_1 !ioState_2 = let _x_1_0 = StdTimer.ioStGetTimerHandles ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let _x_3_0 = iostate.ioStGetTimerTable (select _x_1_0::_Tuple3 2), _x_3_1 = iostate.ioStGetIOId (select _x_3_0::_Tuple2 1), _x_3_2 = StdTimer.changetimerdevice_24 (select _x_3_1::_Tuple2 0) id_0 f_1 (select _x_3_0::_Tuple2 0) (select _x_1_0::_Tuple3 1) in iostate.ioStSetTimerTable (select _x_3_2::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.TimerSystemState (select _x_3_2::_Tuple2 1)) (select _x_3_1::_Tuple2 1))) 
StdTimer.enableTimer !id_0 !ioState_1 = StdTimer.changeTimer id_0 StdTimer.enabletimer_18 ioState_1
StdTimer.disabletimer_19 teLoc_0 !tt_1 !tlsH_2 = case tlsH_2 (timerhandle.TimerLSHandle tsH_1_0 -> case tsH_1_0 (timerhandle._TimerLSHandle tState_2_0 tH_2_1 -> case tH_2_1 (timerhandle._TimerHandle t_3_0 tSelect_3_1 tPeriod_3_2 tFun_3_3 t_3_4 -> case (StdBool.not tSelect_3_1) (True -> <{_Tuple2!3}> tt_1 tlsH_2) (False -> <{_Tuple2!3}> (select (timertable.removeTimerFromTimerTable teLoc_0 tt_1)::_Tuple2 1) (timerhandle.TimerLSHandle (update tsH_1_0::timerhandle._TimerLSHandle [1:update tH_2_1::timerhandle._TimerHandle [1:False]]))) ) ) ) 
StdTimer.disableTimer !id_0 !ioState_1 = StdTimer.changeTimer id_0 StdTimer.disabletimer_19 ioState_1
StdTimer.gettimerselect_20 !id_0 !_x_1 = case _x_1 (_predefined._Cons tsH_1_0 tsHs_1_1 -> case tsH_1_0 (timerhandle.TimerLSHandle _x_2_0 -> case _x_2_0 (timerhandle._TimerLSHandle tState_3_0 _x_3_1 -> case _x_3_1 (timerhandle._TimerHandle t_4_0 tSelect_4_1 tPeriod_4_2 tFun_4_3 t_4_4 -> case (<{id.==_27}> id_0 t_4_0) (True -> <{_Tuple2!3}> (Data.Maybe.Just (<{StdTimer._if;209;22_72}> tSelect_4_1)) (_predefined._Cons tsH_1_0 tsHs_1_1)) (False -> let _x_6_0 = StdTimer.gettimerselect_20 id_0 tsHs_1_1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (_predefined._Cons tsH_1_0 (select _x_6_0::_Tuple2 1))) ) ) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _predefined._Nil)
<{StdTimer._if;209;22_72}> !tSelect_0::B = case tSelect_0 (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
StdTimer.getTimerSelectState !id_0 !ioState_1 = let _x_1_0 = StdTimer.ioStGetTimerHandles ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let tHs_3_0 = select _x_1_0::_Tuple3 1, _x_3_1 = StdTimer.gettimerselect_20 id_0 (select tHs_3_0::timerhandle._TimerHandles 0) in <{_Tuple2!3}> (select _x_3_1::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.TimerSystemState (update tHs_3_0::timerhandle._TimerHandles [0:select _x_3_1::_Tuple2 1])) (select _x_1_0::_Tuple3 2))) 
StdTimer.settimerinterval_21 !period_0::I !teLoc_1 !tt_2 !tlsH_3 = case tlsH_3 (timerhandle.TimerLSHandle tsH_1_0 -> case tsH_1_0 (timerhandle._TimerLSHandle tState_2_0 tH_2_1 -> case tH_2_1 (timerhandle._TimerHandle t_3_0 tSelect_3_1 tPeriod_3_2 tFun_3_3 t_3_4 -> let x_4_0::I = 0, period_4_1::I = <{StdTimer._c;51;16_73}> (<{StdInt.<_17}> x_4_0 period_0) period_0 x_4_0 in case (<{StdInt.==_16}> period_4_1 tPeriod_3_2) (True -> <{_Tuple2!3}> tt_2 tlsH_3) (False -> case (StdBool.not tSelect_3_1) (True -> <{_Tuple2!3}> tt_2 (timerhandle.TimerLSHandle (update tsH_1_0::timerhandle._TimerLSHandle [1:update tH_2_1::timerhandle._TimerHandle [2:period_4_1]]))) (False -> <{_Tuple2!3}> (select (timertable.setIntervalInTimerTable teLoc_1 period_4_1 tt_2)::_Tuple2 1) (timerhandle.TimerLSHandle (update tsH_1_0::timerhandle._TimerLSHandle [1:update tH_2_1::timerhandle._TimerHandle [2:period_4_1]]))) ) ) ) ) 
<{StdTimer._c;51;16_73}>::I !_x_0::B period_1::I x_2::I = case _x_0 (True -> period_1) (_ -> x_2)
StdTimer.setTimerInterval !id_0 !interval_1::I !ioState_2 = StdTimer.changeTimer id_0 (StdTimer.settimerinterval_21 interval_1) ioState_2
StdTimer.gettimerinterval_22 !id_0 !_x_1 = case _x_1 (_predefined._Cons tsH_1_0 tsHs_1_1 -> case tsH_1_0 (timerhandle.TimerLSHandle _x_2_0 -> case _x_2_0 (timerhandle._TimerLSHandle tState_3_0 _x_3_1 -> case _x_3_1 (timerhandle._TimerHandle t_4_0 tSelect_4_1 tPeriod_4_2 tFun_4_3 t_4_4 -> case (<{id.==_27}> id_0 t_4_0) (True -> <{_Tuple2!3}> (Data.Maybe.Just tPeriod_4_2) (_predefined._Cons tsH_1_0 tsHs_1_1)) (False -> let _x_6_0 = StdTimer.gettimerinterval_22 id_0 tsHs_1_1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (_predefined._Cons tsH_1_0 (select _x_6_0::_Tuple2 1))) ) ) ) ) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _predefined._Nil)
StdTimer.getTimerInterval !id_0 !ioState_1 = let _x_1_0 = StdTimer.ioStGetTimerHandles ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let tHs_3_0 = select _x_1_0::_Tuple3 1, _x_3_1 = StdTimer.gettimerinterval_22 id_0 (select tHs_3_0::timerhandle._TimerHandles 0) in <{_Tuple2!3}> (select _x_3_1::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.TimerSystemState (update tHs_3_0::timerhandle._TimerHandles [0:select _x_3_1::_Tuple2 1])) (select _x_1_0::_Tuple3 2))) 
StdTimer.stdTimerFatalError !function_0 !error_1 = commondef.fatalError function_0 "StdTimer" error_1
StdTimer.getTimerType_7 !_vTimerElements_0 _x_1 = "Timer"
StdTimer.validateTimerId_26 !_x_0 !ioState_1 = case _x_0 (Data.Maybe.Nothing -> let _x_2_0 = StdId.openId_7 ioState_1 in <{_Tuple2!3}> (Data.Maybe.Just (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (Data.Maybe.Just id_1_0 -> let _x_2_0 = iostate.ioStGetIdTable ioState_1, it_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = id.memberIdTable id_1_0 it_2_1 in case (select _x_2_2::_Tuple2 0) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetIdTable (select _x_2_2::_Tuple2 1) (select _x_2_0::_Tuple2 1))) (False -> <{_Tuple2!3}> (Data.Maybe.Just id_1_0) (iostate.ioStSetIdTable (select _x_2_2::_Tuple2 1) (select _x_2_0::_Tuple2 1))) ) 
StdTimer.addAbleTimerToTimerTable_27 !_x_0::B !tLoc_1 !period_2::I !ioState_3 = case _x_0 (True -> let _x_2_0 = iostate.ioStGetTimerTable ioState_3 in iostate.ioStSetTimerTable (select (timertable.addTimerToTimerTable tLoc_1 period_2 (select _x_2_0::_Tuple2 0))::_Tuple2 1) (select _x_2_0::_Tuple2 1)) (False -> ioState_3) 
StdTimer.anon_25 _x_0 !st_1 = st_1
StdTimer.openTimer_8 !_vTimerElements_0 ls_1 !_x_2 !pState_3 = case _x_2 (StdTimerDef.Timer period_1_0 items_1_1 atts_1_2 -> let _x_2_0 = commondef.cselect StdTimerAttribute.isTimerId StdMisc.undef atts_1_2, has_2_1 = select _x_2_0::_Tuple2 0, maybe_2_2 = <{StdTimer._if;67;35_74}> has_2_1 idAtt_2_6, pState_2_3 = select timerdevice.timerFunctions::devicefunctions._DeviceFunctions 5 pState_3, _x_2_4 = StdPSt.accPIO (StdTimer.validateTimerId_26 maybe_2_2) pState_2_3, maybe_ok_2_5::B = select _x_2_4::_Tuple2 0, idAtt_2_6 = select _x_2_0::_Tuple2 1 in case (Data.Maybe.isNothing maybe_ok_2_5) (True -> <{_Tuple2!3}> StdIOCommon.ErrorIdsInUse (select _x_2_4::_Tuple2 1)) (False -> let pState_4_0 = select _x_2_4::_Tuple2 1, _x_4_1 = StdTimer.ioStGetTimerHandles (select pState_4_0::iostate._PSt 1) in case (StdBool.not (select _x_4_1::_Tuple3 0)) (True -> StdTimer.stdTimerFatalError "openTimer (Timer)" "could not retrieve TimerSystemState from IOSt") (False -> let ioState_6_0 = select _x_4_1::_Tuple3 2, _x_6_1 = iostate.ioStGetIOId ioState_6_0, pid_6_2 = select _x_6_1::_Tuple2 0, id_6_3 = Data.Maybe.fromJust maybe_ok_2_5, ioState_6_4 = select _x_6_1::_Tuple2 1, pState_6_5 = update pState_4_0::iostate._PSt [1:ioState_6_4], _x_6_6 = select _vTimerElements_0::<{StdTimerElementClass.TimerElements;}> 1 items_1_1 pState_6_5, ts_6_7 = select _x_6_6::_Tuple2 0, itemHs_6_8 = StdList.map timerhandle.timerElementStateToTimerElementHandle ts_6_7, pState_6_9 = select _x_6_6::_Tuple2 1, _x_6_10 = iostate.ioStGetIdTable (select pState_6_9::iostate._PSt 1), ioState_6_11 = select _x_6_10::_Tuple2 1, _x_6_12 = iostate.ioStGetReceiverTable ioState_6_11, rt_6_13 = select _x_6_12::_Tuple2 0, it_6_14 = select _x_6_10::_Tuple2 0, _x_6_15 = timeraccess.bindTimerElementIds pid_6_2 id_6_3 itemHs_6_8 rt_6_13 it_6_14 in case (StdBool.not (select _x_6_15::_Tuple4 0)) (True -> <{_Tuple2!3}> StdIOCommon.ErrorIdsInUse (update pState_6_9::iostate._PSt [1:iostate.ioStSetReceiverTable (select _x_6_15::_Tuple4 2) (iostate.ioStSetIdTable (select _x_6_15::_Tuple4 3) (iostate.ioStSetDevice (devicesystemstate.TimerSystemState (select _x_4_1::_Tuple3 1)) (select _x_6_12::_Tuple2 1)))])) (False -> let timers_8_0 = select _x_4_1::_Tuple3 1, ableTimer_8_1::I = StdIOCommon.enabled (StdTimerAttribute.getTimerSelectStateAtt (select (commondef.cselect StdTimerAttribute.isTimerSelectState (StdTimerDef.TimerSelectState StdIOCommon.Able) atts_1_2)::_Tuple2 1)), x_8_2::B = 0, _x_8_3 = StdTimerAttribute.getTimerInitFun (select (commondef.cselect StdTimerAttribute.isTimerInit (StdTimerDef.TimerInit StdFunc.id) atts_1_2)::_Tuple2 1) (_Tuple2 ls_1 (update pState_6_9::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.TimerSystemState (update timers_8_0::timerhandle._TimerHandles [0:_predefined._Cons (timerhandle.TimerLSHandle (timerhandle._TimerLSHandle (select _x_8_3::_Tuple2 0) (timerhandle._TimerHandle id_6_3 ableTimer_8_1 (<{StdTimer._c;51;16_75}> (<{StdInt.<_17}> x_8_2 period_1_0) period_1_0 x_8_2) (StdTimerAttribute.getTimerFun (select (commondef.cselect StdTimerAttribute.isTimerFunction (StdTimerDef.TimerFunction StdTimer.anon_25) atts_1_2)::_Tuple2 1)) (select _x_6_15::_Tuple4 1)))) (select timers_8_0::timerhandle._TimerHandles 0)])) (iostate.ioStSetIdTable (select (id.addIdToIdTable id_6_3 (id._IdParent pid_6_2 device.TimerDevice id_6_3) (select _x_6_15::_Tuple4 3))::_Tuple2 1) (iostate.ioStSetReceiverTable (select _x_6_15::_Tuple4 2) (StdTimer.addAbleTimerToTimerTable_27 ableTimer_8_1 (timertable._TimerLoc pid_6_2 device.TimerDevice id_6_3 id_6_3) period_1_0 (select _x_6_12::_Tuple2 1))))])) in <{_Tuple2!3}> StdIOCommon.NoError (select _x_8_3::_Tuple2 1)) ) ) ) 
<{StdTimer._c;51;16_75}>::I !_x_0::B period_1::I x_2::I = case _x_0 (True -> period_1) (_ -> x_2)
<{StdTimer._if;67;35_74}> !has_0::B idAtt_1 = case has_0 (True -> Data.Maybe.Just (StdTimerAttribute.getTimerIdAtt idAtt_1)) (_ -> Data.Maybe.Nothing)
<{StdTimer.TD;Timers;}> _x_0::B = _predefined._Nil
<{StdTimer.TD;DeltaTimerStateHandle}> _x_0::B = _predefined._Nil


|| Converted Records
:: <{StdTimer.Timers;}> = {!StdTimer.getTimerType, !StdTimer.openTimer}

:: <{StdTimer.gEq_s;}> = {!StdTimer.gEq_s}

:: <{StdTimer.gEq_ss;}> = {!StdTimer.gEq_ss}

:: <{StdTimer.gEq_sss;}> = {!StdTimer.gEq_sss}

:: <{StdTimer.gEq_ssss;}> = {!StdTimer.gEq_ssss}

:: <{StdTimer.gEq_sssss;}> = {!StdTimer.gEq_sssss}

:: <{StdTimer.gEq_ssssss;}> = {!StdTimer.gEq_ssssss}

:: <{StdTimer.gEq_sssssss;}> = {!StdTimer.gEq_sssssss}

:: <{StdTimer.gEq_ssssssss;}> = {!StdTimer.gEq_ssssssss}

:: <{StdTimer.gEq_sssssssss;}> = {!StdTimer.gEq_sssssssss}

:: <{StdTimer.bimap_s;}> = {StdTimer.bimap_s}

:: <{StdTimer.bimap_ss;}> = {StdTimer.bimap_ss}

:: <{StdTimer.bimap_sss;}> = {StdTimer.bimap_sss}

