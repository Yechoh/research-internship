|| ?module? wstateaccess


<{wstateaccess.setWElements`_49}> f_0 !_x_1 !args_s_2 = case _x_1 (<{wstate.WItemHandle`}> itemH_1_0 -> let _x_2_0 = f_0 itemH_1_0 args_s_2 in <{_Tuple2!3}> (<{wstate.WItemHandle`}> (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (<{wstate.WRecursiveHandle`}> itemHs_1_0 dRecKind_1_1 -> let _x_2_0 = wstateaccess.setWElements f_0 itemHs_1_0 args_s_2 in <{_Tuple2!3}> (<{wstate.WRecursiveHandle`}> (select _x_2_0::_Tuple2 0) dRecKind_1_1) (select _x_2_0::_Tuple2 1)) 
wstateaccess.setWElements f_0 !itemHs_1 !_x_2 = case _x_2 (_Tuple2 args_1_0 s_1_1 -> case (case (StdList.isEmpty args_1_0) (True -> True) (False -> StdList.isEmpty itemHs_1) ) (True -> <{_Tuple2!3}> itemHs_1 (_Tuple2 args_1_0 s_1_1)) (False -> let _x_3_0 = commondef.hdtl itemHs_1, _x_3_1 = <{wstateaccess.setWElements`_49}> f_0 (select _x_3_0::_Tuple2 0) (_Tuple2 args_1_0 s_1_1), _x_3_2 = wstateaccess.setWElements f_0 (select _x_3_0::_Tuple2 1) (select _x_3_1::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (select _x_3_1::_Tuple2 0) (select _x_3_2::_Tuple2 0)) (select _x_3_2::_Tuple2 1)) ) 
wstateaccess.setWElement_50 f_0 !_x_1 !s_2 = case _x_1 (<{wstate.WItemHandle`}> itemH_1_0 -> let _x_2_0 = f_0 itemH_1_0 s_2 in <{_Tuple2!3}> (<{wstate.WItemHandle`}> (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (<{wstate.WRecursiveHandle`}> itemHs_1_0 wRecKind_1_1 -> let _x_2_0 = wstateaccess.setAllWElements f_0 itemHs_1_0 s_2 in <{_Tuple2!3}> (<{wstate.WRecursiveHandle`}> (select _x_2_0::_Tuple2 0) wRecKind_1_1) (select _x_2_0::_Tuple2 1)) 
wstateaccess.setAllWElements f_0 !_x_1 !s_2 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = wstateaccess.setWElement_50 f_0 itemH_1_0 s_2, _x_2_1 = wstateaccess.setAllWElements f_0 itemHs_1_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (_ -> <{_Tuple2!3}> _predefined._Nil s_2)
<{wstateaccess.setWElement`_51}> f_0 !id_1 !_x_2 !s_3 = case _x_2 (<{wstate.WItemHandle`}> itemH_1_0 -> let _x_2_0 = f_0 id_1 itemH_1_0 s_3 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (<{wstate.WItemHandle`}> (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) (<{wstate.WRecursiveHandle`}> itemHs_1_0 dRecKind_1_1 -> let _x_2_0 = wstateaccess.setWElement f_0 id_1 itemHs_1_0 s_3 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (<{wstate.WRecursiveHandle`}> (select _x_2_0::_Tuple3 1) dRecKind_1_1) (select _x_2_0::_Tuple3 2)) 
wstateaccess.setWElement f_0 !id_1 !itemHs_2 !s_3 = case (StdList.isEmpty itemHs_2) (True -> <{_Tuple3!7}> False itemHs_2 s_3) (False -> let _x_2_0::B = commondef.hdtl itemHs_2, itemH_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = <{wstateaccess.setWElement`_51}> f_0 id_1 itemH_2_1 s_3, done_2_3 = select _x_2_2::_Tuple3 0 in case done_2_3 (True -> <{_Tuple3!7}> done_2_3 (_predefined._Cons (select _x_2_2::_Tuple3 1) (select _x_2_0::_Tuple2 1)) (select _x_2_2::_Tuple3 2)) (False -> let _x_4_0 = wstateaccess.setWElement f_0 id_1 (select _x_2_0::_Tuple2 1) (select _x_2_2::_Tuple3 2) in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (_predefined._Cons (select _x_2_2::_Tuple3 1) (select _x_4_0::_Tuple3 1)) (select _x_4_0::_Tuple3 2)) ) 
<{wstateaccess.setWItemHandle`_52}> f_0 !_x_1 !s_2 = case _x_1 (<{wstate.WItemHandle`}> itemH_1_0 -> let _x_2_0 = f_0 itemH_1_0 s_2 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (<{wstate.WItemHandle`}> (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) (<{wstate.WRecursiveHandle`}> itemHs_1_0 dRecKind_1_1 -> let _x_2_0 = wstateaccess.setWItemHandle f_0 itemHs_1_0 s_2 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (<{wstate.WRecursiveHandle`}> (select _x_2_0::_Tuple3 1) dRecKind_1_1) (select _x_2_0::_Tuple3 2)) 
wstateaccess.setWItemHandle f_0 !itemHs_1 !s_2 = case (StdList.isEmpty itemHs_1) (True -> <{_Tuple3!7}> False itemHs_1 s_2) (False -> let _x_2_0::B = commondef.hdtl itemHs_1, itemH_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = <{wstateaccess.setWItemHandle`_52}> f_0 itemH_2_1 s_2, done_2_3 = select _x_2_2::_Tuple3 0 in case done_2_3 (True -> <{_Tuple3!7}> done_2_3 (_predefined._Cons (select _x_2_2::_Tuple3 1) (select _x_2_0::_Tuple2 1)) (select _x_2_2::_Tuple3 2)) (False -> let _x_4_0 = wstateaccess.setWItemHandle f_0 (select _x_2_0::_Tuple2 1) (select _x_2_2::_Tuple3 2) in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (_predefined._Cons (select _x_2_2::_Tuple3 1) (select _x_4_0::_Tuple3 1)) (select _x_4_0::_Tuple3 2)) ) 
<{wstateaccess.getWItemRadioInfo`}> !_x_0 = case _x_0 (<{wstate.RadioInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.getWItemCheckInfo`}> !_x_0 = case _x_0 (<{wstate.CheckInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.getWItemPopUpInfo`}> !_x_0 = case _x_0 (<{wstate.PopUpInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.getWItemSliderInfo`}> !_x_0 = case _x_0 (<{wstate.SliderInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.getWItemTextInfo`}> !_x_0 = case _x_0 (<{wstate.TextInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.getWItemEditInfo`}> !_x_0 = case _x_0 (<{wstate.EditInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.getWItemButtonInfo`}> !_x_0 = case _x_0 (<{wstate.ButtonInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.getWItemCustomButtonInfo`}> !_x_0 = case _x_0 (<{wstate.CustomButtonInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.getWItemCustomInfo`}> !_x_0 = case _x_0 (<{wstate.CustomInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.getWItemCompoundInfo`}> !_x_0 = case _x_0 (<{wstate.CompoundInfo`}> info_1_0 -> info_1_0) 
<{wstateaccess.iswindowitemspace`}>::B !_x_0 = case _x_0 (<{wstate.WindowItemSpace`}> _x_1_0 _x_1_1 -> True) (_ -> False)
<{wstateaccess.iswindowhmargin`}>::B !_x_0 = case _x_0 (<{wstate.WindowHMargin`}> _x_1_0 _x_1_1 -> True) (_ -> False)
<{wstateaccess.iswindowvmargin`}>::B !_x_0 = case _x_0 (<{wstate.WindowVMargin`}> _x_1_0 _x_1_1 -> True) (_ -> False)
<{wstateaccess.getwindowhmargin`}> !_x_0 = case _x_0 (<{wstate.WindowHMargin`}> l_1_0 r_1_1 -> _Tuple2 l_1_0 r_1_1) 
<{wstateaccess.getwindowvmargin`}> !_x_0 = case _x_0 (<{wstate.WindowVMargin`}> t_1_0 b_1_1 -> _Tuple2 t_1_0 b_1_1) 
<{wstateaccess.getwindowitemspace`}> !_x_0 = case _x_0 (<{wstate.WindowItemSpace`}> hspace_1_0 vspace_1_1 -> _Tuple2 hspace_1_0 vspace_1_1) 
<{wstateaccess.iscontrolid`}>::B !_x_0 = case _x_0 (<{wstate.ControlId`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.iscontrolpos`}>::B !_x_0 = case _x_0 (<{wstate.ControlPos`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.iscontrolviewsize`}>::B !_x_0 = case _x_0 (<{wstate.ControlViewSize`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.iscontroloutersize`}>::B !_x_0 = case _x_0 (<{wstate.ControlOuterSize`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.iscontrolminimumsize`}>::B !_x_0 = case _x_0 (<{wstate.ControlMinimumSize`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.iscontrolresize`}>::B !_x_0 = case _x_0 (<{wstate.ControlResize`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.iscontrolselectstate`}>::B !_x_0 = case _x_0 (<{wstate.ControlSelectState`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.iscontrolkeyboard`}>::B !_x_0 = case _x_0 (<{wstate.ControlKeyboard`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.iscontrolitemspace`}>::B !_x_0 = case _x_0 (<{wstate.ControlItemSpace`}> _x_1_0 _x_1_1 -> True) (_ -> False)
<{wstateaccess.iscontrolhmargin`}>::B !_x_0 = case _x_0 (<{wstate.ControlHMargin`}> _x_1_0 _x_1_1 -> True) (_ -> False)
<{wstateaccess.iscontrolvmargin`}>::B !_x_0 = case _x_0 (<{wstate.ControlVMargin`}> _x_1_0 _x_1_1 -> True) (_ -> False)
<{wstateaccess.iscontrolhscroll`}>::B !_x_0 = case _x_0 (<{wstate.ControlHScroll`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.iscontrolvscroll`}>::B !_x_0 = case _x_0 (<{wstate.ControlVScroll`}> _x_1_0 -> True) (_ -> False)
<{wstateaccess.getcontrolid`}> !_x_0 = case _x_0 (<{wstate.ControlId`}> id_1_0 -> id_1_0) 
<{wstateaccess.getcontrolpos`}> !_x_0 = case _x_0 (<{wstate.ControlPos`}> pos_1_0 -> pos_1_0) 
<{wstateaccess.getcontrolviewsize`}> !_x_0 = case _x_0 (<{wstate.ControlViewSize`}> size_1_0 -> size_1_0) 
<{wstateaccess.getcontroloutersize`}> !_x_0 = case _x_0 (<{wstate.ControlOuterSize`}> size_1_0 -> size_1_0) 
<{wstateaccess.getcontrolminimumsize`}> !_x_0 = case _x_0 (<{wstate.ControlMinimumSize`}> size_1_0 -> size_1_0) 
<{wstateaccess.getcontrolresize`}> !_x_0 = case _x_0 (<{wstate.ControlResize`}> f_1_0 -> f_1_0) 
<{wstateaccess.getcontrolselectstate`}> !_x_0 = case _x_0 (<{wstate.ControlSelectState`}> select_1_0 -> select_1_0) 
<{wstateaccess.getcontrolitemspace`}> !_x_0 = case _x_0 (<{wstate.ControlItemSpace`}> hspace_1_0 vspace_1_1 -> _Tuple2 hspace_1_0 vspace_1_1) 
<{wstateaccess.getcontrolhmargin`}> !_x_0 = case _x_0 (<{wstate.ControlHMargin`}> l_1_0 r_1_1 -> _Tuple2 l_1_0 r_1_1) 
<{wstateaccess.getcontrolvmargin`}> !_x_0 = case _x_0 (<{wstate.ControlVMargin`}> t_1_0 b_1_1 -> _Tuple2 t_1_0 b_1_1) 
<{wstateaccess.getcontrolhscrollfunction`}> !_x_0 = case _x_0 (<{wstate.ControlHScroll`}> f_1_0 -> f_1_0) 
<{wstateaccess.getcontrolvscrollfunction`}> !_x_0 = case _x_0 (<{wstate.ControlVScroll`}> f_1_0 -> f_1_0) 
<{wstateaccess.getWindowHMargins`}> !type_0 !wMetrics_1 !atts_2 = let _x_1_0 = <{wstateaccess._c;280;35_96}> type_0 wMetrics_1 in <{wstateaccess.getwindowhmargin`}> (select (commondef.cselect <{wstateaccess.iswindowhmargin`}> (<{wstate.WindowHMargin`}> (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)) atts_2)::_Tuple2 1)
<{wstateaccess._c;280;35_96}> !type_0 wMetrics_1 = case type_0 (windowhandle.IsDialog -> _Tuple2 (select wMetrics_1::ossystem._OSWindowMetrics 3) (select wMetrics_1::ossystem._OSWindowMetrics 3)) (_ -> _Tuple2 0 0)
<{wstateaccess.getWindowVMargins`}> !type_0 !wMetrics_1 !atts_2 = let _x_1_0 = <{wstateaccess._c;288;35_97}> type_0 wMetrics_1 in <{wstateaccess.getwindowvmargin`}> (select (commondef.cselect <{wstateaccess.iswindowvmargin`}> (<{wstate.WindowVMargin`}> (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)) atts_2)::_Tuple2 1)
<{wstateaccess._c;288;35_97}> !type_0 wMetrics_1 = case type_0 (windowhandle.IsDialog -> _Tuple2 (select wMetrics_1::ossystem._OSWindowMetrics 4) (select wMetrics_1::ossystem._OSWindowMetrics 4)) (_ -> _Tuple2 0 0)
<{wstateaccess.getWindowItemSpaces`}> !type_0 !wMetrics_1 !atts_2 = let _x_1_0 = <{wstateaccess._c;296;35_98}> type_0 wMetrics_1 in <{wstateaccess.getwindowitemspace`}> (select (commondef.cselect <{wstateaccess.iswindowitemspace`}> (<{wstate.WindowItemSpace`}> (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)) atts_2)::_Tuple2 1)
<{wstateaccess._c;296;35_98}> !type_0 wMetrics_1 = case type_0 (windowhandle.IsDialog -> _Tuple2 (select wMetrics_1::ossystem._OSWindowMetrics 5) (select wMetrics_1::ossystem._OSWindowMetrics 6)) (_ -> _Tuple2 0 0)
<{wstateaccess.==_48}>::B !_x_0 !wRecKind_1 = case _x_0 (wstate.IsWListLSHandle -> <{wstateaccess._c;113;43_99}> wRecKind_1) (wstate.IsWExtendLSHandle -> <{wstateaccess._c;116;43_100}> wRecKind_1) (wstate.IsWChangeLSHandle -> <{wstateaccess._c;119;43_101}> wRecKind_1) 
<{wstateaccess._c;119;43_101}>::B !wRecKind_0 = case wRecKind_0 (wstate.IsWChangeLSHandle -> True) (_ -> False)
<{wstateaccess._c;116;43_100}>::B !wRecKind_0 = case wRecKind_0 (wstate.IsWExtendLSHandle -> True) (_ -> False)
<{wstateaccess._c;113;43_99}>::B !wRecKind_0 = case wRecKind_0 (wstate.IsWListLSHandle -> True) (_ -> False)


|| Converted Records
:: <{wstateaccess.gEq_s;}> = {!wstateaccess.gEq_s}

:: <{wstateaccess.gEq_ss;}> = {!wstateaccess.gEq_ss}

:: <{wstateaccess.gEq_sss;}> = {!wstateaccess.gEq_sss}

:: <{wstateaccess.gEq_ssss;}> = {!wstateaccess.gEq_ssss}

:: <{wstateaccess.gEq_sssss;}> = {!wstateaccess.gEq_sssss}

:: <{wstateaccess.gEq_ssssss;}> = {!wstateaccess.gEq_ssssss}

:: <{wstateaccess.gEq_sssssss;}> = {!wstateaccess.gEq_sssssss}

:: <{wstateaccess.gEq_ssssssss;}> = {!wstateaccess.gEq_ssssssss}

:: <{wstateaccess.gEq_sssssssss;}> = {!wstateaccess.gEq_sssssssss}

:: <{wstateaccess.bimap_s;}> = {wstateaccess.bimap_s}

:: <{wstateaccess.bimap_ss;}> = {wstateaccess.bimap_ss}

:: <{wstateaccess.bimap_sss;}> = {wstateaccess.bimap_sss}

