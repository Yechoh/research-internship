|| ?module? controllayout


controllayout.validateFirstWElementPos_24 !fix_corner_item_found_0::B !_x_1 = case _x_1 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case w_2_8 (True -> <{_Tuple3!7}> False fix_corner_item_found_0 (windowhandle.WItemHandle itemH_1_0)) (False -> let _x_4_0 = commondef.cselect StdControlAttribute.isControlPos (StdControlDef.ControlPos (_Tuple2 StdIOCommon.Left StdIOCommon.NoOffset)) w_2_6 in case (StdBool.not (select _x_4_0::_Tuple2 0)) (True -> case fix_corner_item_found_0 (True -> <{_Tuple3!7}> True fix_corner_item_found_0 (windowhandle.WItemHandle itemH_1_0)) (False -> <{_Tuple3!7}> True fix_corner_item_found_0 (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [6:_predefined._Cons (select _x_4_0::_Tuple2 1) w_2_6]))) ) (False -> let pos_6_0 = select (StdControlAttribute.getControlPosAtt (select _x_4_0::_Tuple2 1))::_Tuple2 0 in <{_Tuple3!7}> (<{controllayout._c;79;39_118}> pos_6_0) (<{controllayout._c;72;39_119}> pos_6_0 fix_corner_item_found_0) (windowhandle.WItemHandle itemH_1_0)) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = controllayout.validateFirstWElementsPos fix_corner_item_found_0 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 2))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = controllayout.validateFirstWElementsPos fix_corner_item_found_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 2]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = controllayout.validateFirstWElementsPos fix_corner_item_found_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 2]))) ) 
controllayout.validateFirstWElementsPos !fix_corner_item_found_0::B !_x_1 = case _x_1 (_predefined._Nil -> <{_Tuple3!7}> False fix_corner_item_found_0 _predefined._Nil) (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = controllayout.validateFirstWElementPos_24 fix_corner_item_found_0 itemH_1_0, done_2_1 = select _x_2_0::_Tuple3 0 in case done_2_1 (True -> <{_Tuple3!7}> done_2_1 (select _x_2_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) itemHs_1_1)) (False -> let _x_4_0 = controllayout.validateFirstWElementsPos (select _x_2_0::_Tuple3 1) itemHs_1_1 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) 
<{controllayout._c;72;39_119}>::B !pos_0 fix_corner_item_found_1::B = case pos_0 (StdIOCommon.Fix -> True) (StdIOCommon.LeftTop -> True) (StdIOCommon.RightTop -> True) (StdIOCommon.LeftBottom -> True) (StdIOCommon.RightBottom -> True) (_ -> fix_corner_item_found_1)
<{controllayout._c;79;39_118}>::B !pos_0 = case pos_0 (StdIOCommon.Left -> True) (StdIOCommon.Right -> True) (StdIOCommon.Center -> True) (_ -> False)
controllayout.newLayoutItem !id_0 !pos_1 !size_2 = layout._LayoutItem id_0 pos_1 size_2
controllayout.isRelativeToPrev::B !itemLoc_0 = case (<{StdIOCommon.==_33}> itemLoc_0 StdIOCommon.LeftOfPrev) (True -> True) (False -> case (<{StdIOCommon.==_33}> itemLoc_0 StdIOCommon.RightToPrev) (True -> True) (False -> case (<{StdIOCommon.==_33}> itemLoc_0 StdIOCommon.AbovePrev) (True -> True) (False -> <{StdIOCommon.==_33}> itemLoc_0 StdIOCommon.BelowPrev) ) ) 
controllayout.setRelativeTo !id_0 !_x_1 = case _x_1 (StdIOCommon.LeftOfPrev -> StdIOCommon.LeftOf id_0) (StdIOCommon.RightToPrev -> StdIOCommon.RightTo id_0) (StdIOCommon.AbovePrev -> StdIOCommon.Above id_0) (StdIOCommon.BelowPrev -> StdIOCommon.Below id_0) 
controllayout.getLayoutItemPos_41 prev_0 !atts_1 = let _x_1_0 = StdControlAttribute.getControlPosAtt (select (commondef.cselect StdControlAttribute.isControlPos (StdControlDef.ControlPos (_Tuple2 (StdIOCommon.RightTo prev_0) StdIOCommon.NoOffset)) atts_1)::_Tuple2 1), itemLoc_1_1 = select _x_1_0::_Tuple2 0 in _Tuple2 (<{controllayout._if;432;35_120}> (controllayout.isRelativeToPrev itemLoc_1_1) prev_0 itemLoc_1_1) (select _x_1_0::_Tuple2 1)
<{controllayout._if;432;35_120}> !_x_0::B prev_1 !itemLoc_2 = case _x_0 (True -> controllayout.setRelativeTo prev_1 itemLoc_2) (_ -> itemLoc_2)
controllayout.getLayoutItemId !c_0::I !maybe_1 prev_2 = case (Data.Maybe.isNothing maybe_1) (True -> _Tuple3 (id.sysId c_0) (<{StdInt.-_7}> c_0 1) prev_2) (False -> let id_2_0 = Data.Maybe.fromJust maybe_1 in case (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) id_2_0 prev_2) (True -> _Tuple3 (id.sysId c_0) (<{StdInt.-_7}> c_0 1) prev_2) (False -> _Tuple3 id_2_0 c_0 (_predefined._Cons id_2_0 prev_2)) ) 
controllayout.checkCustomSize !_x_0 = case _x_0 (StdIOBasic._Size w_1_0 h_1_1 -> let x_2_0::I = 0, x_2_1::I = 0 in StdIOBasic._Size (<{controllayout._c;51;16_121}> (<{StdInt.<_17}> x_2_0 w_1_0) w_1_0 x_2_0) (<{controllayout._c;51;16_122}> (<{StdInt.<_17}> x_2_1 h_1_1) h_1_1 x_2_1)) 
<{controllayout._c;51;16_122}>::I !_x_0::B h_1::I x_2::I = case _x_0 (True -> h_1) (_ -> x_2)
<{controllayout._c;51;16_121}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
controllayout.controllayoutError !rule_0 !message_1 = commondef.error rule_0 "controllayout" message_1
controllayout.repeat_splitting_62 !n_0::I !items_1 = let _x_1_0 = commondef.split n_0 items_1, after_1_1 = select _x_1_0::_Tuple2 1 in case (StdList.isEmpty after_1_1) (True -> _predefined._Cons (select _x_1_0::_Tuple2 0) _predefined._Nil) (False -> _predefined._Cons (select _x_1_0::_Tuple2 0) (controllayout.repeat_splitting_62 n_0 after_1_1)) 
controllayout.spread_63 !_x_0 !_x_1 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case _x_1 (_predefined._Cons ys_2_0 zs_2_1 -> _predefined._Cons (_predefined._Cons x_1_0 ys_2_0) (controllayout.spread_63 xs_1_1 zs_2_1)) ) (_predefined._Nil -> _x_1) 
controllayout.repeat_spreading_64 !n_0::I !items_1 !cols_2 = let _x_1_0 = commondef.split n_0 items_1, after_1_1 = select _x_1_0::_Tuple2 1 in case (StdList.isEmpty after_1_1) (True -> controllayout.spread_63 (select _x_1_0::_Tuple2 0) cols_2) (False -> controllayout.spread_63 (select _x_1_0::_Tuple2 0) (controllayout.repeat_spreading_64 n_0 after_1_1 cols_2)) 
controllayout.toColumns !_x_0 !items_1 = case _x_0 (StdControlDef.Columns n_1_0 -> let nr_2_0::I = StdList.length_47 items_1, x_2_1::I = 1, <{n`_2_2}>::I = <{controllayout._c;51;16_123}> (<{StdInt.<_17}> x_2_1 n_1_0) n_1_0 x_2_1 in controllayout.repeat_splitting_62 (<{controllayout._if;780;19_124}> (<{StdInt.==_16}> (StdInt.rem_28 nr_2_0 <{n`_2_2}>) 0) nr_2_0 <{n`_2_2}>) items_1) (StdControlDef.Rows n_1_0 -> let nr_2_0::I = StdList.length_47 items_1, <{n`_2_1}>::I = commondef.setBetween n_1_0 1 nr_2_0, nrColumns_2_2::I = <{controllayout._if;792;19_125}> (<{StdInt.==_16}> (StdInt.rem_28 nr_2_0 <{n`_2_1}>) 0) nr_2_0 <{n`_2_1}> in controllayout.repeat_spreading_64 nrColumns_2_2 items_1 (StdList.repeatn nrColumns_2_2 _predefined._Nil)) 
<{controllayout._if;792;19_125}>::I !_x_0::B !nr_1::I !<{n`_2}>::I = case _x_0 (True -> <{StdInt./_10}> nr_1 <{n`_2}>) (_ -> <{StdInt.+_6}> (<{StdInt./_10}> nr_1 <{n`_2}>) 1)
<{controllayout._if;780;19_124}>::I !_x_0::B !nr_1::I !<{n`_2}>::I = case _x_0 (True -> <{StdInt./_10}> nr_1 <{n`_2}>) (_ -> <{StdInt.+_6}> (<{StdInt./_10}> nr_1 <{n`_2}>) 1)
<{controllayout._c;51;16_123}>::I !_x_0::B n_1::I x_2::I = case _x_0 (True -> n_1) (_ -> x_2)
controllayout.anon_26::I !_x_0 = case _x_0 (windowhandle._RadioItemInfo radio_1_0 radio_1_1 _x_1_2 radio_1_3 -> case _x_1_2 (StdIOBasic._Size w_2_0 h_2_1 -> w_2_0) ) 
controllayout.foldr_72 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> op_0 a_1_0 (controllayout.foldr_72 op_0 r_1 x_1_1)) 
controllayout.max_71 !_vOrd_0 !x_1 !y_2 = case (select (select _vOrd_0::<{StdClass.Ord;}> 0)::<{StdOverloaded.<;}> 0 x_1 y_2) (True -> y_2) (False -> x_1) 
controllayout.max_116::I !x_0::I !y_1::I = case (<{StdInt.<_17}> x_0 y_1) (True -> y_1) (False -> x_0) 
controllayout.foldr_117::I !r_0::I !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> controllayout.max_116 a_1_0 (controllayout.foldr_117 r_0 x_1_1)) 
controllayout.listmax::I !_x_0 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> controllayout.foldr_117 x_1_0 xs_1_1) (_ -> 0)
controllayout.anon_27 !pos_0 !item_1 = update item_1::windowhandle._RadioItemInfo [1:pos_0]
<{controllayout.position_items`_61}> !setPosition_0 !itemHeight_1::I !pos_2 !_x_3 = case _x_3 (_predefined._Cons item_1_0 items_1_1 -> _predefined._Cons (setPosition_0 pos_2 item_1_0) (<{controllayout.position_items`_61}> setPosition_0 itemHeight_1 (update pos_2::StdIOBasic._Vector2 [1:<{StdInt.+_6}> (select pos_2::StdIOBasic._Vector2 1) itemHeight_1]) items_1_1)) (_ -> _predefined._Nil)
controllayout.position_items !setPosition_0 !itemHeight_1::I !left_2::I !_x_3 !_x_4 = case _x_3 (_predefined._Cons maxwidth_1_0 maxwidths_1_1 -> case _x_4 (_predefined._Cons col_2_0 cols_2_1 -> _predefined._Cons (<{controllayout.position_items`_61}> setPosition_0 itemHeight_1 (StdIOBasic._Vector2 left_2 0) col_2_0) (controllayout.position_items setPosition_0 itemHeight_1 (<{StdInt.+_6}> left_2 maxwidth_1_0) maxwidths_1_1 cols_2_1)) ) (_ -> _predefined._Nil)
controllayout.collect_65 !_x_0 = case _x_0 (_predefined._Cons _x_1_0 ys_1_1 -> case _x_1_0 (_predefined._Cons x_2_0 xs_2_1 -> let _x_3_0 = controllayout.collect_65 ys_1_1 in <{_Tuple2!3}> (_predefined._Cons x_2_0 (select _x_3_0::_Tuple2 0)) (_predefined._Cons xs_2_1 (select _x_3_0::_Tuple2 1))) ) (_ -> <{_Tuple2!3}> _predefined._Nil _predefined._Nil)
controllayout.repeat_collecting_66 !items_0 = let _x_1_0 = controllayout.collect_65 items_0, after_1_1 = select _x_1_0::_Tuple2 1 in case (StdList.isEmpty after_1_1) (True -> select _x_1_0::_Tuple2 0) (False -> <{StdList.++}> (select _x_1_0::_Tuple2 0) (controllayout.repeat_collecting_66 after_1_1)) 
controllayout.fromColumns !_x_0 !items_1 = case _x_0 (StdControlDef.Columns _x_1_0 -> StdList.flatten items_1) (StdControlDef.Rows _x_1_0 -> controllayout.repeat_collecting_66 items_1) 
controllayout.anon_28::I !_x_0 = case _x_0 (windowhandle._CheckItemInfo check_1_0 check_1_1 _x_1_2 check_1_3 -> case _x_1_2 (StdIOBasic._Size w_2_0 h_2_1 -> w_2_0) ) 
controllayout.anon_29 !pos_0 !item_1 = update item_1::windowhandle._CheckItemInfo [1:pos_0]
controllayout.validateMinSize_32 !atts_0 = let _x_1_0 = oswindow.osMinCompoundSize, defMinW_1_1 = select _x_1_0::_Tuple2 0, defMinH_1_2::I = select _x_1_0::_Tuple2 1, _x_1_3::I = commondef.remove StdControlAttribute.isControlMinimumSize (StdControlDef.ControlMinimumSize (StdIOBasic._Size defMinW_1_1 defMinH_1_2)) atts_0, minAtt_1_4 = select _x_1_3::_Tuple3 1, minSize_1_5 = StdControlAttribute.getControlMinimumSizeAtt minAtt_1_4, y_1_6 = select minSize_1_5::StdIOBasic._Size 0, y_1_7::I = select minSize_1_5::StdIOBasic._Size 1, okMinSize_1_8::I = StdIOBasic._Size (<{controllayout._c;51;16_126}> (<{StdInt.<_17}> defMinW_1_1 y_1_6) y_1_6 defMinW_1_1) (<{controllayout._c;51;16_127}> (<{StdInt.<_17}> defMinH_1_2 y_1_7) y_1_7 defMinH_1_2), atts1_1_9 = select _x_1_3::_Tuple3 2 in <{_Tuple2!3}> okMinSize_1_8 (<{controllayout._if;317;34_128}> (select _x_1_3::_Tuple3 0) okMinSize_1_8 atts1_1_9)
<{controllayout._if;317;34_128}> !_x_0::B okMinSize_1 atts1_2 = case _x_0 (True -> _predefined._Cons (StdControlDef.ControlMinimumSize okMinSize_1) atts1_2) (_ -> atts1_2)
<{controllayout._c;51;16_127}>::I !_x_0::B y_1::I defMinH_2::I = case _x_0 (True -> y_1) (_ -> defMinH_2)
<{controllayout._c;51;16_126}>::I !_x_0::B y_1::I defMinW_2::I = case _x_0 (True -> y_1) (_ -> defMinW_2)
controllayout.anon_30::B !att_0 = case (StdControlAttribute.isControlViewSize att_0) (True -> True) (False -> StdControlAttribute.isControlOuterSize att_0) 
controllayout.validateCompoundSize_33 !wMetrics_0 !domain_1 !hasScrolls_2 !atts_3 = let _x_1_0 = commondef.cselect controllayout.anon_30 StdMisc.undef atts_3 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> <{_Tuple3!7}> False StdIOBasic.zero_15 atts_3) (False -> let sizeAtt_3_0 = select _x_1_0::_Tuple2 1 in case (StdControlAttribute.isControlViewSize sizeAtt_3_0) (True -> let size_5_0 = StdControlAttribute.getControlViewSizeAtt sizeAtt_3_0, x_5_1::I = select size_5_0::StdIOBasic._Size 0, minSize_5_2::I = oswindow.osMinCompoundSize, y_5_3::I = select minSize_5_2::_Tuple2 0, x_5_4 = select size_5_0::StdIOBasic._Size 1, y_5_5::I = select minSize_5_2::_Tuple2 1, size1_5_6 = StdIOBasic._Size (<{controllayout._c;51;16_129}> (<{StdInt.<_17}> x_5_1 y_5_3) y_5_3 x_5_1) (<{controllayout._c;51;16_130}> (<{StdInt.<_17}> x_5_4 y_5_5) y_5_5 x_5_4) in <{_Tuple3!7}> True size1_5_6 (select (commondef.creplace StdControlAttribute.isControlViewSize (StdControlDef.ControlViewSize size1_5_6) atts_3)::_Tuple2 1)) (False -> let _x_5_0 = commondef.toTuple_72 (StdControlAttribute.getControlOuterSizeAtt sizeAtt_3_0), w_5_1::I = select _x_5_0::_Tuple2 0, h_5_2::I = select _x_5_0::_Tuple2 1, viewSize_5_3 = commondef.rectSize (oswindow.osGetCompoundContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (commondef.rectangleToRect domain_1) (_Tuple2 w_5_1 h_5_2) hasScrolls_2) (commondef.sizeToRect (StdIOBasic._Size w_5_1 h_5_2))) in <{_Tuple3!7}> True viewSize_5_3 (_predefined._Cons (StdControlDef.ControlViewSize viewSize_5_3) (select (commondef.remove StdControlAttribute.isControlViewSize StdMisc.undef (select (commondef.remove StdControlAttribute.isControlOuterSize StdMisc.undef atts_3)::_Tuple3 2))::_Tuple3 2))) ) 
<{controllayout._c;51;16_130}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{controllayout._c;51;16_129}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
controllayout.validateControlMargin !_x_0 = case _x_0 (_Tuple2 a_1_0 b_1_1 -> let x_2_0::I = 0, x_2_1::I = 0 in <{_Tuple2!3}> (<{controllayout._c;51;16_131}> (<{StdInt.<_17}> x_2_0 a_1_0) a_1_0 x_2_0) (<{controllayout._c;51;16_132}> (<{StdInt.<_17}> x_2_1 b_1_1) b_1_1 x_2_1)) 
<{controllayout._c;51;16_132}>::I !_x_0::B b_1::I x_2::I = case _x_0 (True -> b_1) (_ -> x_2)
<{controllayout._c;51;16_131}>::I !_x_0::B a_1::I x_2::I = case _x_0 (True -> a_1) (_ -> x_2)
controllayout.validateControlItemSpace !_x_0 = case _x_0 (_Tuple2 hspace_1_0 vspace_1_1 -> let x_2_0::I = 0, x_2_1::I = 0 in <{_Tuple2!3}> (<{controllayout._c;51;16_133}> (<{StdInt.<_17}> x_2_0 hspace_1_0) hspace_1_0 x_2_0) (<{controllayout._c;51;16_134}> (<{StdInt.<_17}> x_2_1 vspace_1_1) vspace_1_1 x_2_1)) 
<{controllayout._c;51;16_134}>::I !_x_0::B vspace_1::I x_2::I = case _x_0 (True -> vspace_1) (_ -> x_2)
<{controllayout._c;51;16_133}>::I !_x_0::B hspace_1::I x_2::I = case _x_0 (True -> hspace_1) (_ -> x_2)
controllayout.validateScrollbarSize_31 !wMetrics_0 !domainRect_1 !_x_2 !size_3 = case _x_2 (_Tuple2 hasHScroll_1_0 hasVScroll_1_1 -> case size_3 (StdIOBasic._Size w_2_0 h_2_1 -> case (<{StdIOBasic.==_14}> (commondef.rectSize domainRect_1) StdIOBasic.zero_15) (True -> size_3) (False -> let visHScroll_4_0::B = controllayout._f136_136 hasHScroll_1_0 domainRect_1 w_2_0, visVScroll_4_1::B = controllayout._f135_135 hasVScroll_1_1 domainRect_1 h_2_1 in case (case visHScroll_4_0 (True -> visVScroll_4_1) (False -> False) ) (True -> let _x_6_0 = _Tuple2 (<{StdInt.+_6}> w_2_0 (select wMetrics_0::ossystem._OSWindowMetrics 8)) (<{StdInt.+_6}> h_2_1 (select wMetrics_0::ossystem._OSWindowMetrics 7)) in StdIOBasic._Size (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1)) (False -> case visHScroll_4_0 (True -> update size_3::StdIOBasic._Size [1:select (_Tuple2 (<{StdInt.+_6}> w_2_0 (select wMetrics_0::ossystem._OSWindowMetrics 8)) (<{StdInt.+_6}> h_2_1 (select wMetrics_0::ossystem._OSWindowMetrics 7)))::_Tuple2 1]) (False -> case visVScroll_4_1 (True -> update size_3::StdIOBasic._Size [0:select (_Tuple2 (<{StdInt.+_6}> w_2_0 (select wMetrics_0::ossystem._OSWindowMetrics 8)) (<{StdInt.+_6}> h_2_1 (select wMetrics_0::ossystem._OSWindowMetrics 7)))::_Tuple2 0]) (False -> size_3) ) ) ) ) ) 
controllayout._f136_136::B !hasHScroll_0::B domainRect_1 w_2::I = case hasHScroll_0 (True -> oswindow.osScrollbarIsVisible (_Tuple2 (select domainRect_1::ostypes._OSRect 0) (select domainRect_1::ostypes._OSRect 2)) w_2) (_ -> False)
controllayout._f135_135::B !hasVScroll_0::B domainRect_1 h_2::I = case hasVScroll_0 (True -> oswindow.osScrollbarIsVisible (_Tuple2 (select domainRect_1::ostypes._OSRect 1) (select domainRect_1::ostypes._OSRect 3)) h_2) (_ -> False)
controllayout.validateDerivedCompoundSize_34 !wMetrics_0 !domain_1 !hasScrolls_2 derSize_3 !reqSize_4 = case (<{StdIOBasic.==_14}> reqSize_4 StdIOBasic.zero_15) (True -> controllayout.validateScrollbarSize_31 wMetrics_0 domain_1 hasScrolls_2 derSize_3) (False -> controllayout.validateScrollbarSize_31 wMetrics_0 domain_1 hasScrolls_2 reqSize_4) 
controllayout.layoutScrollbar_60 !r_0 !scroll_1 = case r_0 (ostypes._OSRect rleft_1_0 rtop_1_1 rright_1_2 rbottom_1_3 -> update scroll_1::windowhandle._ScrollInfo [1:StdIOBasic._Point2 rleft_1_0 rtop_1_1,2:commondef.rectSize r_0]) 
controllayout.layoutScrollbars !wMetrics_0 !size_1 !info_2 = case info_2 (windowhandle._CompoundInfo compoundDomain_1_0 compoundOrigin_1_1 compoundHScroll_1_2 compoundVScroll_1_3 compoundLook_1_4 -> let hasScrolls_2_0 = _Tuple2 (Data.Maybe.isJust compoundHScroll_1_2) (Data.Maybe.isJust compoundVScroll_1_3), rect_2_1 = commondef.sizeToRect size_1 in update info_2::windowhandle._CompoundInfo [2:StdMaybe.mapMaybe (controllayout.layoutScrollbar_60 (oswindow.osGetCompoundHScrollRect wMetrics_0 hasScrolls_2_0 rect_2_1)) compoundHScroll_1_2,3:StdMaybe.mapMaybe (controllayout.layoutScrollbar_60 (oswindow.osGetCompoundVScrollRect wMetrics_0 hasScrolls_2_0 rect_2_1)) compoundVScroll_1_3]) 
controllayout.validateMinSize_37 !atts_0 = let x_1_0 = 0, _x_1_1 = commondef.remove StdControlAttribute.isControlMinimumSize (StdControlDef.ControlMinimumSize StdIOBasic.zero_15) atts_0, minAtt_1_2::I = select _x_1_1::_Tuple3 1, minSize_1_3::I = StdControlAttribute.getControlMinimumSizeAtt minAtt_1_2, y_1_4::I = select minSize_1_3::StdIOBasic._Size 0, x_1_5 = 0, y_1_6 = select minSize_1_3::StdIOBasic._Size 1, okMinSize_1_7 = StdIOBasic._Size (<{controllayout._c;51;16_137}> (<{StdInt.<_17}> x_1_0 y_1_4) y_1_4 x_1_0) (<{controllayout._c;51;16_138}> (<{StdInt.<_17}> x_1_5 y_1_6) y_1_6 x_1_5), atts1_1_8::I = select _x_1_1::_Tuple3 2 in <{_Tuple2!3}> okMinSize_1_7 (<{controllayout._if;400;34_139}> (select _x_1_1::_Tuple3 0) okMinSize_1_7 atts1_1_8)
<{controllayout._if;400;34_139}> !_x_0::B okMinSize_1 atts1_2 = case _x_0 (True -> _predefined._Cons (StdControlDef.ControlMinimumSize okMinSize_1) atts1_2) (_ -> atts1_2)
<{controllayout._c;51;16_138}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{controllayout._c;51;16_137}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
controllayout.anon_36::B !att_0 = case (StdControlAttribute.isControlViewSize att_0) (True -> True) (False -> StdControlAttribute.isControlOuterSize att_0) 
controllayout.validateLayoutSize_38 !wMetrics_0 !atts_1 = let _x_1_0 = commondef.cselect controllayout.anon_36 StdMisc.undef atts_1 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> <{_Tuple3!7}> False StdIOBasic.zero_15 atts_1) (False -> let sizeAtt_3_0 = select _x_1_0::_Tuple2 1, size_3_1::I = <{controllayout._if;422;43_142}> (StdControlAttribute.isControlViewSize sizeAtt_3_0) sizeAtt_3_0, x_3_2::I = select size_3_1::StdIOBasic._Size 0, y_3_3::I = 0, x_3_4::I = select size_3_1::StdIOBasic._Size 1, y_3_5 = 0, size1_3_6 = StdIOBasic._Size (<{controllayout._c;51;16_140}> (<{StdInt.<_17}> x_3_2 y_3_3) y_3_3 x_3_2) (<{controllayout._c;51;16_141}> (<{StdInt.<_17}> x_3_4 y_3_5) y_3_5 x_3_4) in <{_Tuple3!7}> True size1_3_6 (_predefined._Cons (StdControlDef.ControlViewSize size1_3_6) (select (commondef.remove StdControlAttribute.isControlViewSize StdMisc.undef (select (commondef.remove StdControlAttribute.isControlOuterSize StdMisc.undef atts_1)::_Tuple3 2))::_Tuple3 2))) 
<{controllayout._if;422;43_142}> !_x_0::B !sizeAtt_1 = case _x_0 (True -> StdControlAttribute.getControlViewSizeAtt sizeAtt_1) (_ -> StdControlAttribute.getControlOuterSizeAtt sizeAtt_1)
<{controllayout._c;51;16_141}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{controllayout._c;51;16_140}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
controllayout.validateDerivedLayoutSize !wMetrics_0 derSize_1 !reqSize_2 = case (<{StdIOBasic.==_14}> reqSize_2 StdIOBasic.zero_15) (True -> derSize_1) (False -> reqSize_2) 
controllayout.controllayoutFatalError !rule_0 !message_1 = commondef.fatalError rule_0 "controllayout" message_1
controllayout.setLayoutWItem_67 !roots_0 !itemH_1 = case itemH_1 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_6 (_predefined._Cons _x_2_0 atts_2_1 -> case _x_2_0 (StdControlDef.ControlId id_3_0 -> let !_x_4_0 = layout.getLayoutItem id_3_0 roots_0 in <{_Tuple2!3}> (select _x_4_0::_Tuple4 3) (update itemH_1::windowhandle._WItemHandle [6:atts_2_1,9:select _x_4_0::_Tuple4 1,10:select _x_4_0::_Tuple4 2,12:select _x_4_0::_Tuple4 0])) ) ) (_ -> controllayout.controllayoutFatalError "setLayoutWItem" "WElementHandle has no ControlId")
controllayout.setLayoutItem_68 !roots_0 !_x_1 = case _x_1 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case w_2_8 (True -> <{_Tuple2!3}> roots_0 (windowhandle.WItemHandle itemH_1_0)) (False -> let _x_4_0 = controllayout.setLayoutWItem_67 roots_0 itemH_1_0 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (windowhandle.WItemHandle (select _x_4_0::_Tuple2 1))) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = controllayout.setLayoutItems roots_0 itemHs_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WListLSHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = controllayout.setLayoutItems roots_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple2 1]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = controllayout.setLayoutItems roots_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple2 1]))) ) 
controllayout.setLayoutItems !roots_0 !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = controllayout.setLayoutItem_68 roots_0 itemH_1_0, _x_2_1 = controllayout.setLayoutItems (select _x_2_0::_Tuple2 0) itemHs_1_1 in <{_Tuple2!3}> (select _x_2_1::_Tuple2 0) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_2_1::_Tuple2 1))) (_ -> <{_Tuple2!3}> roots_0 _x_1)
controllayout.calcLayoutSize_39 !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !orientations_4 !itemHs_5 !atts_6 !tb_7::I = case hMargins_1 (_Tuple2 lMargin_1_0 rMargin_1_1 -> case vMargins_2 (_Tuple2 tMargin_2_0 bMargin_2_1 -> let _x_3_0 = controllayout.validateMinSize_37 atts_6, _x_3_1 = controllayout.validateLayoutSize_38 wMetrics_0 (select _x_3_0::_Tuple2 1), atts2_3_2 = select _x_3_1::_Tuple3 2, reqSize_3_3 = select _x_3_1::_Tuple3 1, _x_3_4 = controllayout.layoutControls wMetrics_0 (controllayout.validateControlMargin (StdControlAttribute.getControlHMarginAtt (select (commondef.cselect StdControlAttribute.isControlHMargin (StdControlDef.ControlHMargin lMargin_1_0 rMargin_1_1) atts2_3_2)::_Tuple2 1))) (controllayout.validateControlMargin (StdControlAttribute.getControlVMarginAtt (select (commondef.cselect StdControlAttribute.isControlVMargin (StdControlDef.ControlVMargin tMargin_2_0 bMargin_2_1) atts2_3_2)::_Tuple2 1))) (controllayout.validateControlItemSpace (StdControlAttribute.getControlItemSpaceAtt (select (commondef.cselect StdControlAttribute.isControlItemSpace (StdControlDef.ControlItemSpace (select spaces_3::_Tuple2 0) (select spaces_3::_Tuple2 1)) atts2_3_2)::_Tuple2 1))) reqSize_3_3 (select _x_3_0::_Tuple2 0) orientations_4 itemHs_5 tb_7 in <{_Tuple4!15}> (controllayout.validateDerivedLayoutSize wMetrics_0 (select _x_3_4::_Tuple3 0) reqSize_3_3) (select _x_3_4::_Tuple3 1) atts2_3_2 (select _x_3_4::_Tuple3 2)) ) 
controllayout.calcCompoundSize_35 !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !orientations_4 !info_5 !itemHs_6 !atts_7 !tb_8::I = case hMargins_1 (_Tuple2 lMargin_1_0 rMargin_1_1 -> case vMargins_2 (_Tuple2 tMargin_2_0 bMargin_2_1 -> let domainRect_3_0 = select info_5::windowhandle._CompoundInfo 0, hasHScroll_3_1 = Data.Maybe.isJust (select info_5::windowhandle._CompoundInfo 2), hasVScroll_3_2 = Data.Maybe.isJust (select info_5::windowhandle._CompoundInfo 3), _x_3_3 = controllayout.validateMinSize_32 atts_7, atts1_3_4 = select _x_3_3::_Tuple2 1, _x_3_5 = controllayout.validateCompoundSize_33 wMetrics_0 (commondef.rectToRectangle domainRect_3_0) (_Tuple2 hasHScroll_3_1 hasVScroll_3_2) atts1_3_4, atts2_3_6 = select _x_3_5::_Tuple3 2, _x_3_7 = commondef.cselect StdControlAttribute.isControlHMargin (StdControlDef.ControlHMargin lMargin_1_0 rMargin_1_1) atts2_3_6, hMarginAtt_3_8 = select _x_3_7::_Tuple2 1, newHMargins_3_9 = controllayout.validateControlMargin (StdControlAttribute.getControlHMarginAtt hMarginAtt_3_8), _x_3_10 = commondef.cselect StdControlAttribute.isControlVMargin (StdControlDef.ControlVMargin tMargin_2_0 bMargin_2_1) atts2_3_6, vMarginAtt_3_11 = select _x_3_10::_Tuple2 1, newVMargins_3_12 = controllayout.validateControlMargin (StdControlAttribute.getControlVMarginAtt vMarginAtt_3_11), _x_3_13 = commondef.cselect StdControlAttribute.isControlItemSpace (StdControlDef.ControlItemSpace (select spaces_3::_Tuple2 0) (select spaces_3::_Tuple2 1)) atts2_3_6, spaceAtt_3_14 = select _x_3_13::_Tuple2 1, new_3_15 = controllayout.validateControlItemSpace (StdControlAttribute.getControlItemSpaceAtt spaceAtt_3_14), reqSize_3_16 = select _x_3_5::_Tuple3 1, minSize_3_17 = select _x_3_3::_Tuple2 0, domain_3_18 = commondef.rectToRectangle domainRect_3_0, origin_3_19 = select info_5::windowhandle._CompoundInfo 1, newOrientations_3_20 = _predefined._Cons (_Tuple2 domain_3_18 origin_3_19) orientations_4, _x_3_21::B = controllayout.layoutControls wMetrics_0 newHMargins_3_9 newVMargins_3_12 new_3_15 reqSize_3_16 minSize_3_17 newOrientations_3_20 itemHs_6 tb_8, derSize_3_22::B = select _x_3_21::_Tuple3 0, okDerivedSize_3_23 = controllayout.validateDerivedCompoundSize_34 wMetrics_0 domainRect_3_0 (_Tuple2 hasHScroll_3_1 hasVScroll_3_2) derSize_3_22 reqSize_3_16 in <{_Tuple5!31}> okDerivedSize_3_23 (controllayout.layoutScrollbars wMetrics_0 okDerivedSize_3_23 info_5) (select _x_3_21::_Tuple3 1) (<{controllayout._if;295;48_143}> (select _x_3_5::_Tuple3 0) atts2_3_6 okDerivedSize_3_23) (select _x_3_21::_Tuple3 2)) ) 
controllayout.getLayoutWItem_40 !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !_x_4 prev_5 prev_6 !c_7::I !itemH_8 !tb_9::I = case itemH_8 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsButtonControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [6:_predefined._Cons (StdControlDef.ControlId id_3_1) w_1_6]) tb_9) (windowhandle.IsCustomButtonControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) (controllayout.checkCustomSize w_1_10)) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [6:_predefined._Cons (StdControlDef.ControlId id_3_1) w_1_6]) tb_9) (windowhandle.IsTextControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [6:_predefined._Cons (StdControlDef.ControlId id_3_1) w_1_6]) tb_9) (windowhandle.IsEditControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [6:_predefined._Cons (StdControlDef.ControlId id_3_1) w_1_6]) tb_9) (windowhandle.IsPopUpControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [6:_predefined._Cons (StdControlDef.ControlId id_3_1) w_1_6]) tb_9) (windowhandle.IsRadioControl -> let info_3_0 = windowaccess.getWItemRadioInfo w_1_5, items_3_1 = select info_3_0::windowhandle._RadioInfo 0 in case (StdList.isEmpty items_3_1) (True -> controllayout.controllayoutError "RadioControl definition" "Empty list of RadioItem-s") (False -> let _x_5_0::I = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_5_1 = select _x_5_0::_Tuple3 0, layout_5_2 = select info_3_0::windowhandle._RadioInfo 1, colitemsizes_5_3 = controllayout.toColumns layout_5_2 items_3_1, colwidths_5_4 = StdList.map (StdList.map controllayout.anon_26) colitemsizes_5_3, colmaxwidths_5_5 = StdList.map controllayout.listmax colwidths_5_4, itemHeight_5_6 = oswindow.osGetRadioControlItemHeight wMetrics_0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_5_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) (StdIOBasic._Size (StdList.sum_72 colmaxwidths_5_5) (<{StdInt.*_9}> itemHeight_5_6 (StdList.length_47 (StdList.hd colwidths_5_4))))) (select _x_5_0::_Tuple3 2) id_5_1 (select _x_5_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [5:windowhandle.RadioInfo (update info_3_0::windowhandle._RadioInfo [0:controllayout.fromColumns layout_5_2 (controllayout.position_items controllayout.anon_27 itemHeight_5_6 0 colmaxwidths_5_5 colitemsizes_5_3)]),6:_predefined._Cons (StdControlDef.ControlId id_5_1) w_1_6]) tb_9) ) (windowhandle.IsCheckControl -> let info_3_0 = windowaccess.getWItemCheckInfo w_1_5, items_3_1 = select info_3_0::windowhandle._CheckInfo 0 in case (StdList.isEmpty items_3_1) (True -> controllayout.controllayoutError "CheckControl definition" "Empty list of CheckItem-s") (False -> let _x_5_0::I = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_5_1 = select _x_5_0::_Tuple3 0, layout_5_2 = select info_3_0::windowhandle._CheckInfo 1, colitemsizes_5_3 = controllayout.toColumns layout_5_2 items_3_1, colwidths_5_4 = StdList.map (StdList.map controllayout.anon_28) colitemsizes_5_3, colmaxwidths_5_5 = StdList.map controllayout.listmax colwidths_5_4, itemHeight_5_6 = oswindow.osGetCheckControlItemHeight wMetrics_0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_5_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) (StdIOBasic._Size (StdList.sum_72 colmaxwidths_5_5) (<{StdInt.*_9}> itemHeight_5_6 (StdList.length_47 (StdList.hd colwidths_5_4))))) (select _x_5_0::_Tuple3 2) id_5_1 (select _x_5_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [5:windowhandle.CheckInfo (update info_3_0::windowhandle._CheckInfo [0:controllayout.fromColumns layout_5_2 (controllayout.position_items controllayout.anon_29 itemHeight_5_6 0 colmaxwidths_5_5 colitemsizes_5_3)]),6:_predefined._Cons (StdControlDef.ControlId id_5_1) w_1_6]) tb_9) ) (windowhandle.IsCustomControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) (controllayout.checkCustomSize w_1_10)) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [6:_predefined._Cons (StdControlDef.ControlId id_3_1) w_1_6]) tb_9) (windowhandle.IsSliderControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [6:_predefined._Cons (StdControlDef.ControlId id_3_1) w_1_6]) tb_9) (windowhandle.IsOtherControl _x_2_0 -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [6:_predefined._Cons (StdControlDef.ControlId id_3_1) w_1_6]) tb_9) (windowhandle.IsCompoundControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0, _x_3_2 = controllayout.calcCompoundSize_35 wMetrics_0 hMargins_1 vMargins_2 spaces_3 _x_4 (windowaccess.getWItemCompoundInfo w_1_5) w_1_7 w_1_6 tb_9 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) (select _x_3_2::_Tuple5 0)) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [5:windowhandle.CompoundInfo (select _x_3_2::_Tuple5 1),6:_predefined._Cons (StdControlDef.ControlId id_3_1) (select _x_3_2::_Tuple5 3),7:select _x_3_2::_Tuple5 2]) (select _x_3_2::_Tuple5 4)) (windowhandle.IsLayoutControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::windowhandle._WItemHandle 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0, _x_3_2 = controllayout.calcLayoutSize_39 wMetrics_0 hMargins_1 vMargins_2 spaces_3 _x_4 w_1_7 w_1_6 tb_9 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_41 prev_6 w_1_6) (select _x_3_2::_Tuple4 0)) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::windowhandle._WItemHandle [6:_predefined._Cons (StdControlDef.ControlId id_3_1) (select _x_3_2::_Tuple4 2),7:select _x_3_2::_Tuple4 1]) (select _x_3_2::_Tuple4 3)) ) (_ -> controllayout.controllayoutFatalError "getLayoutWItem" "unmatched control implementation alternative")
controllayout.getLayoutItem_42 !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !orientations_4 prev_5 prev_6 !c_7::I !_x_8 !tb_9::I = case _x_8 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case w_2_8 (True -> <{_Tuple6!57}> _predefined._Nil prev_5 prev_6 c_7 (windowhandle.WItemHandle itemH_1_0) tb_9) (False -> let _x_4_0 = controllayout.getLayoutWItem_40 wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 prev_5 prev_6 c_7 itemH_1_0 tb_9 in <{_Tuple6!57}> (_predefined._Cons (select _x_4_0::_Tuple6 0) _predefined._Nil) (select _x_4_0::_Tuple6 1) (select _x_4_0::_Tuple6 2) (select _x_4_0::_Tuple6 3) (windowhandle.WItemHandle (select _x_4_0::_Tuple6 4)) (select _x_4_0::_Tuple6 5)) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = controllayout.getLayoutItems wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 prev_5 prev_6 c_7 itemHs_1_0 tb_9 in <{_Tuple6!57}> (select _x_2_0::_Tuple6 0) (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (windowhandle.WListLSHandle (select _x_2_0::_Tuple6 4)) (select _x_2_0::_Tuple6 5)) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = controllayout.getLayoutItems wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 prev_5 prev_6 c_7 itemHs_2_1 tb_9 in <{_Tuple6!57}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple6 4])) (select _x_3_0::_Tuple6 5)) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = controllayout.getLayoutItems wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 prev_5 prev_6 c_7 itemHs_2_1 tb_9 in <{_Tuple6!57}> (select _x_3_0::_Tuple6 0) (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 2) (select _x_3_0::_Tuple6 3) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple6 4])) (select _x_3_0::_Tuple6 5)) ) 
controllayout.getLayoutItems !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !orientations_4 prev_5 prev_6 !c_7::I !_x_8 !tb_9::I = case _x_8 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = controllayout.getLayoutItem_42 wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 prev_5 prev_6 c_7 itemH_1_0 tb_9, _x_2_1 = controllayout.getLayoutItems wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) itemHs_1_1 (select _x_2_0::_Tuple6 5) in <{_Tuple6!57}> (<{StdList.++}> (select _x_2_0::_Tuple6 0) (select _x_2_1::_Tuple6 0)) (select _x_2_1::_Tuple6 1) (select _x_2_1::_Tuple6 2) (select _x_2_1::_Tuple6 3) (_predefined._Cons (select _x_2_0::_Tuple6 4) (select _x_2_1::_Tuple6 4)) (select _x_2_1::_Tuple6 5)) (_predefined._Nil -> <{_Tuple6!57}> _predefined._Nil prev_5 prev_6 c_7 _predefined._Nil tb_9) 
controllayout.layoutControls !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !reqSize_4 !minSize_5 !orientations_6 !itemHs_7 !tb_8::I = let _x_1_0 = controllayout.getLayoutItems wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_6 _predefined._Nil (id.sysId -1) -2 (select (controllayout.validateFirstWElementsPos False itemHs_7)::_Tuple3 2) tb_8, _x_1_1 = layout.layoutItems hMargins_1 vMargins_2 spaces_3 reqSize_4 minSize_5 orientations_6 (select _x_1_0::_Tuple6 0) in <{_Tuple3!7}> (select _x_1_1::_Tuple2 0) (select (controllayout.setLayoutItems (select _x_1_1::_Tuple2 1) (select _x_1_0::_Tuple6 4))::_Tuple2 1) (select _x_1_0::_Tuple6 5)
<{controllayout._if;295;48_143}> !_x_0::B atts2_1 okDerivedSize_2 = case _x_0 (True -> atts2_1) (_ -> _predefined._Cons (StdControlDef.ControlViewSize okDerivedSize_2) atts2_1)
<{controllayout.validateFirstWElementPos`_25}> !fix_corner_item_found_0::B !_x_1 = case _x_1 (<{wstate.WItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{wstate._WItemHandle`}> w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case w_2_8 (True -> <{_Tuple3!7}> False fix_corner_item_found_0 (<{wstate.WItemHandle`}> itemH_1_0)) (False -> let _x_4_0 = commondef.cselect <{wstateaccess.iscontrolpos`}> (<{wstate.ControlPos`}> (_Tuple2 StdIOCommon.Left StdIOCommon.NoOffset)) w_2_6 in case (StdBool.not (select _x_4_0::_Tuple2 0)) (True -> case fix_corner_item_found_0 (True -> <{_Tuple3!7}> True fix_corner_item_found_0 (<{wstate.WItemHandle`}> itemH_1_0)) (False -> <{_Tuple3!7}> True fix_corner_item_found_0 (<{wstate.WItemHandle`}> (update itemH_1_0::<{wstate._WItemHandle`}> [6:_predefined._Cons (select _x_4_0::_Tuple2 1) w_2_6]))) ) (False -> let pos_6_0 = select (<{wstateaccess.getcontrolpos`}> (select _x_4_0::_Tuple2 1))::_Tuple2 0 in <{_Tuple3!7}> (<{controllayout._c;131;39_144}> pos_6_0) (<{controllayout._c;124;39_145}> pos_6_0 fix_corner_item_found_0) (<{wstate.WItemHandle`}> itemH_1_0)) ) ) ) (<{wstate.WRecursiveHandle`}> itemHs_1_0 kind_1_1 -> let _x_2_0 = <{controllayout.validateFirstWElementsPos`}> fix_corner_item_found_0 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (<{wstate.WRecursiveHandle`}> (select _x_2_0::_Tuple3 2) kind_1_1)) 
<{controllayout.validateFirstWElementsPos`}> !fix_corner_item_found_0::B !itemHs_1 = case (StdList.isEmpty itemHs_1) (True -> <{_Tuple3!7}> False fix_corner_item_found_0 itemHs_1) (False -> let _x_2_0::B = commondef.hdtl itemHs_1, itemH_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = <{controllayout.validateFirstWElementPos`_25}> fix_corner_item_found_0 itemH_2_1, done_2_3 = select _x_2_2::_Tuple3 0 in case done_2_3 (True -> <{_Tuple3!7}> done_2_3 (select _x_2_2::_Tuple3 1) (_predefined._Cons (select _x_2_2::_Tuple3 2) (select _x_2_0::_Tuple2 1))) (False -> let _x_4_0 = <{controllayout.validateFirstWElementsPos`}> (select _x_2_2::_Tuple3 1) (select _x_2_0::_Tuple2 1) in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_2::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) 
<{controllayout._c;124;39_145}>::B !pos_0 fix_corner_item_found_1::B = case pos_0 (StdIOCommon.Fix -> True) (StdIOCommon.LeftTop -> True) (StdIOCommon.RightTop -> True) (StdIOCommon.LeftBottom -> True) (StdIOCommon.RightBottom -> True) (_ -> fix_corner_item_found_1)
<{controllayout._c;131;39_144}>::B !pos_0 = case pos_0 (StdIOCommon.Left -> True) (StdIOCommon.Right -> True) (StdIOCommon.Center -> True) (_ -> False)
controllayout.getLayoutItemPos_58 prev_0 !atts_1 = let _x_1_0 = <{wstateaccess.getcontrolpos`}> (select (commondef.cselect <{wstateaccess.iscontrolpos`}> (<{wstate.ControlPos`}> (_Tuple2 (StdIOCommon.RightTo prev_0) StdIOCommon.NoOffset)) atts_1)::_Tuple2 1), itemLoc_1_1 = select _x_1_0::_Tuple2 0 in _Tuple2 (<{controllayout._if;722;35_146}> (controllayout.isRelativeToPrev itemLoc_1_1) prev_0 itemLoc_1_1) (select _x_1_0::_Tuple2 1)
<{controllayout._if;722;35_146}> !_x_0::B prev_1 !itemLoc_2 = case _x_0 (True -> controllayout.setRelativeTo prev_1 itemLoc_2) (_ -> itemLoc_2)
controllayout.anon_43::I !_x_0 = case _x_0 (<{wstate._RadioItemInfo`}> radio_1_0 radio_1_1 _x_1_2 radio_1_3 -> case _x_1_2 (StdIOBasic._Size w_2_0 h_2_1 -> w_2_0) ) 
controllayout.anon_44 !pos_0 !item_1 = update item_1::<{wstate._RadioItemInfo`}> [1:pos_0]
controllayout.anon_45::I !_x_0 = case _x_0 (<{wstate._CheckItemInfo`}> check_1_0 check_1_1 _x_1_2 check_1_3 -> case _x_1_2 (StdIOBasic._Size w_2_0 h_2_1 -> w_2_0) ) 
controllayout.anon_46 !pos_0 !item_1 = update item_1::<{wstate._CheckItemInfo`}> [1:pos_0]
controllayout.validateMinSize_49 !atts_0 = let _x_1_0 = oswindow.osMinCompoundSize, defMinW_1_1 = select _x_1_0::_Tuple2 0, defMinH_1_2::I = select _x_1_0::_Tuple2 1, _x_1_3::I = commondef.remove <{wstateaccess.iscontrolminimumsize`}> (<{wstate.ControlMinimumSize`}> (StdIOBasic._Size defMinW_1_1 defMinH_1_2)) atts_0, minAtt_1_4 = select _x_1_3::_Tuple3 1, minSize_1_5 = <{wstateaccess.getcontrolminimumsize`}> minAtt_1_4, y_1_6 = select minSize_1_5::StdIOBasic._Size 0, y_1_7::I = select minSize_1_5::StdIOBasic._Size 1, okMinSize_1_8::I = StdIOBasic._Size (<{controllayout._c;51;16_147}> (<{StdInt.<_17}> defMinW_1_1 y_1_6) y_1_6 defMinW_1_1) (<{controllayout._c;51;16_148}> (<{StdInt.<_17}> defMinH_1_2 y_1_7) y_1_7 defMinH_1_2), atts1_1_9 = select _x_1_3::_Tuple3 2 in <{_Tuple2!3}> okMinSize_1_8 (<{controllayout._if;608;34_149}> (select _x_1_3::_Tuple3 0) okMinSize_1_8 atts1_1_9)
<{controllayout._if;608;34_149}> !_x_0::B okMinSize_1 atts1_2 = case _x_0 (True -> _predefined._Cons (<{wstate.ControlMinimumSize`}> okMinSize_1) atts1_2) (_ -> atts1_2)
<{controllayout._c;51;16_148}>::I !_x_0::B y_1::I defMinH_2::I = case _x_0 (True -> y_1) (_ -> defMinH_2)
<{controllayout._c;51;16_147}>::I !_x_0::B y_1::I defMinW_2::I = case _x_0 (True -> y_1) (_ -> defMinW_2)
controllayout.anon_47::B !att_0 = case (<{wstateaccess.iscontrolviewsize`}> att_0) (True -> True) (False -> <{wstateaccess.iscontroloutersize`}> att_0) 
controllayout.validateCompoundSize_50 !wMetrics_0 !domain_1 !hasScrolls_2 !atts_3 = let _x_1_0 = commondef.cselect controllayout.anon_47 StdMisc.undef atts_3 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> <{_Tuple3!7}> False StdIOBasic.zero_15 atts_3) (False -> let sizeAtt_3_0 = select _x_1_0::_Tuple2 1 in case (<{wstateaccess.iscontrolviewsize`}> sizeAtt_3_0) (True -> let size_5_0 = <{wstateaccess.getcontrolviewsize`}> sizeAtt_3_0, x_5_1::I = select size_5_0::StdIOBasic._Size 0, minSize_5_2::I = oswindow.osMinCompoundSize, y_5_3::I = select minSize_5_2::_Tuple2 0, x_5_4 = select size_5_0::StdIOBasic._Size 1, y_5_5::I = select minSize_5_2::_Tuple2 1, size1_5_6 = StdIOBasic._Size (<{controllayout._c;51;16_150}> (<{StdInt.<_17}> x_5_1 y_5_3) y_5_3 x_5_1) (<{controllayout._c;51;16_151}> (<{StdInt.<_17}> x_5_4 y_5_5) y_5_5 x_5_4) in <{_Tuple3!7}> True size1_5_6 (select (commondef.creplace <{wstateaccess.iscontrolviewsize`}> (<{wstate.ControlViewSize`}> size1_5_6) atts_3)::_Tuple2 1)) (False -> let _x_5_0 = commondef.toTuple_72 (<{wstateaccess.getcontroloutersize`}> sizeAtt_3_0), w_5_1::I = select _x_5_0::_Tuple2 0, h_5_2::I = select _x_5_0::_Tuple2 1, viewSize_5_3 = commondef.rectSize (oswindow.osGetCompoundContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (commondef.rectangleToRect domain_1) (_Tuple2 w_5_1 h_5_2) hasScrolls_2) (commondef.sizeToRect (StdIOBasic._Size w_5_1 h_5_2))) in <{_Tuple3!7}> True viewSize_5_3 (_predefined._Cons (<{wstate.ControlViewSize`}> viewSize_5_3) (select (commondef.remove <{wstateaccess.iscontrolviewsize`}> StdMisc.undef (select (commondef.remove <{wstateaccess.iscontroloutersize`}> StdMisc.undef atts_3)::_Tuple3 2))::_Tuple3 2))) ) 
<{controllayout._c;51;16_151}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{controllayout._c;51;16_150}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
controllayout.validateScrollbarSize_48 !wMetrics_0 !domainRect_1 !_x_2 !size_3 = case _x_2 (_Tuple2 hasHScroll_1_0 hasVScroll_1_1 -> case size_3 (StdIOBasic._Size w_2_0 h_2_1 -> case (<{StdIOBasic.==_14}> (commondef.rectSize domainRect_1) StdIOBasic.zero_15) (True -> size_3) (False -> let _x_4_0::B = oswindow.osScrollbarsAreVisible wMetrics_0 domainRect_1 (_Tuple2 w_2_0 h_2_1) (_Tuple2 hasHScroll_1_0 hasVScroll_1_1), visHScroll_4_1::B = select _x_4_0::_Tuple2 0, visVScroll_4_2 = select _x_4_0::_Tuple2 1 in case (case visHScroll_4_1 (True -> visVScroll_4_2) (False -> False) ) (True -> StdIOBasic._Size (<{StdInt.+_6}> w_2_0 (select wMetrics_0::ossystem._OSWindowMetrics 8)) (<{StdInt.+_6}> h_2_1 (select wMetrics_0::ossystem._OSWindowMetrics 7))) (False -> case visHScroll_4_1 (True -> update size_3::StdIOBasic._Size [1:<{StdInt.+_6}> h_2_1 (select wMetrics_0::ossystem._OSWindowMetrics 7)]) (False -> case visVScroll_4_2 (True -> update size_3::StdIOBasic._Size [0:<{StdInt.+_6}> w_2_0 (select wMetrics_0::ossystem._OSWindowMetrics 8)]) (False -> size_3) ) ) ) ) ) 
<{controllayout.validateDerivedCompoundSize`_51}> !wMetrics_0 !domain_1 !hasScrolls_2 derSize_3 !reqSize_4 = case (<{StdIOBasic.==_14}> reqSize_4 StdIOBasic.zero_15) (True -> controllayout.validateScrollbarSize_48 wMetrics_0 domain_1 hasScrolls_2 derSize_3) (False -> controllayout.validateScrollbarSize_48 wMetrics_0 domain_1 hasScrolls_2 reqSize_4) 
controllayout.validateMinSize_54 !atts_0 = let x_1_0 = 0, _x_1_1 = commondef.remove <{wstateaccess.iscontrolminimumsize`}> (<{wstate.ControlMinimumSize`}> StdIOBasic.zero_15) atts_0, minAtt_1_2::I = select _x_1_1::_Tuple3 1, minSize_1_3::I = <{wstateaccess.getcontrolminimumsize`}> minAtt_1_2, y_1_4::I = select minSize_1_3::StdIOBasic._Size 0, x_1_5 = 0, y_1_6 = select minSize_1_3::StdIOBasic._Size 1, okMinSize_1_7 = StdIOBasic._Size (<{controllayout._c;51;16_152}> (<{StdInt.<_17}> x_1_0 y_1_4) y_1_4 x_1_0) (<{controllayout._c;51;16_153}> (<{StdInt.<_17}> x_1_5 y_1_6) y_1_6 x_1_5), atts1_1_8::I = select _x_1_1::_Tuple3 2 in <{_Tuple2!3}> okMinSize_1_7 (<{controllayout._if;690;34_154}> (select _x_1_1::_Tuple3 0) okMinSize_1_7 atts1_1_8)
<{controllayout._if;690;34_154}> !_x_0::B okMinSize_1 atts1_2 = case _x_0 (True -> _predefined._Cons (<{wstate.ControlMinimumSize`}> okMinSize_1) atts1_2) (_ -> atts1_2)
<{controllayout._c;51;16_153}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{controllayout._c;51;16_152}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
controllayout.anon_53::B !att_0 = case (<{wstateaccess.iscontrolviewsize`}> att_0) (True -> True) (False -> <{wstateaccess.iscontroloutersize`}> att_0) 
controllayout.validateLayoutSize_55 !wMetrics_0 !atts_1 = let _x_1_0 = commondef.cselect controllayout.anon_53 StdMisc.undef atts_1 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> <{_Tuple3!7}> False StdIOBasic.zero_15 atts_1) (False -> let sizeAtt_3_0 = select _x_1_0::_Tuple2 1, size_3_1::I = <{controllayout._if;712;43_157}> (<{wstateaccess.iscontrolviewsize`}> sizeAtt_3_0) sizeAtt_3_0, x_3_2::I = select size_3_1::StdIOBasic._Size 0, y_3_3::I = 0, x_3_4::I = select size_3_1::StdIOBasic._Size 1, y_3_5 = 0, size1_3_6 = StdIOBasic._Size (<{controllayout._c;51;16_155}> (<{StdInt.<_17}> x_3_2 y_3_3) y_3_3 x_3_2) (<{controllayout._c;51;16_156}> (<{StdInt.<_17}> x_3_4 y_3_5) y_3_5 x_3_4) in <{_Tuple3!7}> True size1_3_6 (_predefined._Cons (<{wstate.ControlViewSize`}> size1_3_6) (select (commondef.remove <{wstateaccess.iscontrolviewsize`}> StdMisc.undef (select (commondef.remove <{wstateaccess.iscontroloutersize`}> StdMisc.undef atts_1)::_Tuple3 2))::_Tuple3 2))) 
<{controllayout._if;712;43_157}> !_x_0::B !sizeAtt_1 = case _x_0 (True -> <{wstateaccess.getcontrolviewsize`}> sizeAtt_1) (_ -> <{wstateaccess.getcontroloutersize`}> sizeAtt_1)
<{controllayout._c;51;16_156}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{controllayout._c;51;16_155}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{controllayout.setLayoutWItem`_69}> !roots_0 !itemH_1 = case itemH_1 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_6 (_predefined._Cons _x_2_0 atts_2_1 -> case _x_2_0 (<{wstate.ControlId`}> id_3_0 -> let _x_4_0 = layout.getLayoutItem id_3_0 roots_0 in <{_Tuple2!3}> (select _x_4_0::_Tuple4 3) (update itemH_1::<{wstate._WItemHandle`}> [6:atts_2_1,9:select _x_4_0::_Tuple4 1,10:select _x_4_0::_Tuple4 2,12:select _x_4_0::_Tuple4 0])) ) ) (_ -> controllayout.controllayoutFatalError "setLayoutWItem`" "WElementHandle` has no ControlId`")
<{controllayout.setLayoutItem`_70}> !roots_0 !_x_1 = case _x_1 (<{wstate.WItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{wstate._WItemHandle`}> w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case w_2_8 (True -> <{_Tuple2!3}> roots_0 (<{wstate.WItemHandle`}> itemH_1_0)) (False -> let _x_4_0 = <{controllayout.setLayoutWItem`_69}> roots_0 itemH_1_0 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (<{wstate.WItemHandle`}> (select _x_4_0::_Tuple2 1))) ) ) (<{wstate.WRecursiveHandle`}> itemHs_1_0 kind_1_1 -> let _x_2_0 = <{controllayout.setLayoutItems`}> roots_0 itemHs_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (<{wstate.WRecursiveHandle`}> (select _x_2_0::_Tuple2 1) kind_1_1)) 
<{controllayout.setLayoutItems`}> !roots_0 !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = <{controllayout.setLayoutItem`_70}> roots_0 itemH_1_0, _x_2_1 = <{controllayout.setLayoutItems`}> (select _x_2_0::_Tuple2 0) itemHs_1_1 in <{_Tuple2!3}> (select _x_2_1::_Tuple2 0) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_2_1::_Tuple2 1))) (_ -> <{_Tuple2!3}> roots_0 _x_1)
controllayout.calcLayoutSize_56 !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !orientations_4 !itemHs_5 !atts_6 !tb_7::I = case hMargins_1 (_Tuple2 lMargin_1_0 rMargin_1_1 -> case vMargins_2 (_Tuple2 tMargin_2_0 bMargin_2_1 -> let _x_3_0 = controllayout.validateMinSize_54 atts_6, atts1_3_1 = select _x_3_0::_Tuple2 1, _x_3_2 = controllayout.validateLayoutSize_55 wMetrics_0 atts1_3_1, atts2_3_3 = select _x_3_2::_Tuple3 2, _x_3_4 = commondef.cselect <{wstateaccess.iscontrolhmargin`}> (<{wstate.ControlHMargin`}> lMargin_1_0 rMargin_1_1) atts2_3_3, hMarginAtt_3_5 = select _x_3_4::_Tuple2 1, newHMargins_3_6 = controllayout.validateControlMargin (<{wstateaccess.getcontrolhmargin`}> hMarginAtt_3_5), _x_3_7 = commondef.cselect <{wstateaccess.iscontrolvmargin`}> (<{wstate.ControlVMargin`}> tMargin_2_0 bMargin_2_1) atts2_3_3, vMarginAtt_3_8 = select _x_3_7::_Tuple2 1, newVMargins_3_9 = controllayout.validateControlMargin (<{wstateaccess.getcontrolvmargin`}> vMarginAtt_3_8), _x_3_10 = commondef.cselect <{wstateaccess.iscontrolitemspace`}> (<{wstate.ControlItemSpace`}> (select spaces_3::_Tuple2 0) (select spaces_3::_Tuple2 1)) atts2_3_3, spaceAtt_3_11 = select _x_3_10::_Tuple2 1, new_3_12 = controllayout.validateControlItemSpace (<{wstateaccess.getcontrolitemspace`}> spaceAtt_3_11), reqSize_3_13 = select _x_3_2::_Tuple3 1, minSize_3_14 = select _x_3_0::_Tuple2 0, _x_3_15 = <{controllayout.layoutControls`}> wMetrics_0 newHMargins_3_6 newVMargins_3_9 new_3_12 reqSize_3_13 minSize_3_14 orientations_4 itemHs_5 tb_7, derSize_3_16 = select _x_3_15::_Tuple3 0, okDerivedSize_3_17 = controllayout.validateDerivedLayoutSize wMetrics_0 derSize_3_16 reqSize_3_13 in <{_Tuple4!15}> okDerivedSize_3_17 (select _x_3_15::_Tuple3 1) (<{controllayout._if;675;42_159}> (select _x_3_2::_Tuple3 0) atts2_3_3 okDerivedSize_3_17) (select _x_3_15::_Tuple3 2)) ) 
controllayout.calcCompoundSize_52 !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !orientations_4 !info_5 !itemHs_6 !atts_7 !tb_8::I = case hMargins_1 (_Tuple2 lMargin_1_0 rMargin_1_1 -> case vMargins_2 (_Tuple2 tMargin_2_0 bMargin_2_1 -> let domainRect_3_0 = select info_5::windowhandle._CompoundInfo 0, hasHScroll_3_1 = Data.Maybe.isJust (select info_5::windowhandle._CompoundInfo 2), hasVScroll_3_2 = Data.Maybe.isJust (select info_5::windowhandle._CompoundInfo 3), _x_3_3 = controllayout.validateMinSize_49 atts_7, atts1_3_4 = select _x_3_3::_Tuple2 1, _x_3_5 = controllayout.validateCompoundSize_50 wMetrics_0 (commondef.rectToRectangle domainRect_3_0) (_Tuple2 hasHScroll_3_1 hasVScroll_3_2) atts1_3_4, atts2_3_6 = select _x_3_5::_Tuple3 2, _x_3_7 = commondef.cselect <{wstateaccess.iscontrolhmargin`}> (<{wstate.ControlHMargin`}> lMargin_1_0 rMargin_1_1) atts2_3_6, hMarginAtt_3_8 = select _x_3_7::_Tuple2 1, newHMargins_3_9 = controllayout.validateControlMargin (<{wstateaccess.getcontrolhmargin`}> hMarginAtt_3_8), _x_3_10 = commondef.cselect <{wstateaccess.iscontrolvmargin`}> (<{wstate.ControlVMargin`}> tMargin_2_0 bMargin_2_1) atts2_3_6, vMarginAtt_3_11 = select _x_3_10::_Tuple2 1, newVMargins_3_12 = controllayout.validateControlMargin (<{wstateaccess.getcontrolvmargin`}> vMarginAtt_3_11), _x_3_13 = commondef.cselect <{wstateaccess.iscontrolitemspace`}> (<{wstate.ControlItemSpace`}> (select spaces_3::_Tuple2 0) (select spaces_3::_Tuple2 1)) atts2_3_6, spaceAtt_3_14 = select _x_3_13::_Tuple2 1, new_3_15 = controllayout.validateControlItemSpace (<{wstateaccess.getcontrolitemspace`}> spaceAtt_3_14), reqSize_3_16 = select _x_3_5::_Tuple3 1, minSize_3_17 = select _x_3_3::_Tuple2 0, domain_3_18 = commondef.rectToRectangle domainRect_3_0, origin_3_19 = select info_5::windowhandle._CompoundInfo 1, newOrientations_3_20 = _predefined._Cons (_Tuple2 domain_3_18 origin_3_19) orientations_4, _x_3_21::B = <{controllayout.layoutControls`}> wMetrics_0 newHMargins_3_9 newVMargins_3_12 new_3_15 reqSize_3_16 minSize_3_17 newOrientations_3_20 itemHs_6 tb_8, derSize_3_22::B = select _x_3_21::_Tuple3 0, okDerivedSize_3_23 = <{controllayout.validateDerivedCompoundSize`_51}> wMetrics_0 domainRect_3_0 (_Tuple2 hasHScroll_3_1 hasVScroll_3_2) derSize_3_22 reqSize_3_16 in <{_Tuple5!31}> okDerivedSize_3_23 (controllayout.layoutScrollbars wMetrics_0 okDerivedSize_3_23 info_5) (select _x_3_21::_Tuple3 1) (<{controllayout._if;586;48_158}> (select _x_3_5::_Tuple3 0) atts2_3_6 okDerivedSize_3_23) (select _x_3_21::_Tuple3 2)) ) 
<{controllayout.getLayoutWItem`_57}> !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !_x_4 prev_5 prev_6 !c_7::I !itemH_8 !tb_9::I = case itemH_8 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsButtonControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) w_1_6]) tb_9) (windowhandle.IsCustomButtonControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) (controllayout.checkCustomSize w_1_10)) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) w_1_6]) tb_9) (windowhandle.IsTextControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) w_1_6]) tb_9) (windowhandle.IsEditControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) w_1_6]) tb_9) (windowhandle.IsPopUpControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) w_1_6]) tb_9) (windowhandle.IsRadioControl -> let info_3_0 = <{wstateaccess.getWItemRadioInfo`}> w_1_5, items_3_1 = select info_3_0::<{wstate._RadioInfo`}> 0 in case (StdList.isEmpty items_3_1) (True -> controllayout.controllayoutError "RadioControl definition" "Empty list of RadioItem-s") (False -> let _x_5_0::I = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_5_1 = select _x_5_0::_Tuple3 0, layout_5_2 = select info_3_0::<{wstate._RadioInfo`}> 1, colitemsizes_5_3 = controllayout.toColumns layout_5_2 items_3_1, colwidths_5_4 = StdList.map (StdList.map controllayout.anon_43) colitemsizes_5_3, colmaxwidths_5_5 = StdList.map controllayout.listmax colwidths_5_4, itemHeight_5_6 = oswindow.osGetRadioControlItemHeight wMetrics_0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_5_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) (StdIOBasic._Size (StdList.sum_72 colmaxwidths_5_5) (<{StdInt.*_9}> itemHeight_5_6 (StdList.length_47 (StdList.hd colwidths_5_4))))) (select _x_5_0::_Tuple3 2) id_5_1 (select _x_5_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [5:<{wstate.RadioInfo`}> (update info_3_0::<{wstate._RadioInfo`}> [0:controllayout.fromColumns layout_5_2 (controllayout.position_items controllayout.anon_44 itemHeight_5_6 0 colmaxwidths_5_5 colitemsizes_5_3)]),6:_predefined._Cons (<{wstate.ControlId`}> id_5_1) w_1_6]) tb_9) ) (windowhandle.IsCheckControl -> let info_3_0 = <{wstateaccess.getWItemCheckInfo`}> w_1_5, items_3_1 = select info_3_0::<{wstate._CheckInfo`}> 0 in case (StdList.isEmpty items_3_1) (True -> controllayout.controllayoutError "CheckControl definition" "Empty list of CheckItem-s") (False -> let _x_5_0::I = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_5_1 = select _x_5_0::_Tuple3 0, layout_5_2 = select info_3_0::<{wstate._CheckInfo`}> 1, colitemsizes_5_3 = controllayout.toColumns layout_5_2 items_3_1, colwidths_5_4 = StdList.map (StdList.map controllayout.anon_45) colitemsizes_5_3, colmaxwidths_5_5 = StdList.map controllayout.listmax colwidths_5_4, itemHeight_5_6 = oswindow.osGetCheckControlItemHeight wMetrics_0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_5_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) (StdIOBasic._Size (StdList.sum_72 colmaxwidths_5_5) (<{StdInt.*_9}> itemHeight_5_6 (StdList.length_47 (StdList.hd colwidths_5_4))))) (select _x_5_0::_Tuple3 2) id_5_1 (select _x_5_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [5:<{wstate.CheckInfo`}> (update info_3_0::<{wstate._CheckInfo`}> [0:controllayout.fromColumns layout_5_2 (controllayout.position_items controllayout.anon_46 itemHeight_5_6 0 colmaxwidths_5_5 colitemsizes_5_3)]),6:_predefined._Cons (<{wstate.ControlId`}> id_5_1) w_1_6]) tb_9) ) (windowhandle.IsCustomControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) (controllayout.checkCustomSize w_1_10)) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) w_1_6]) tb_9) (windowhandle.IsSliderControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) w_1_6]) tb_9) (windowhandle.IsOtherControl _x_2_0 -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) w_1_10) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) w_1_6]) tb_9) (windowhandle.IsCompoundControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0, _x_3_2 = controllayout.calcCompoundSize_52 wMetrics_0 hMargins_1 vMargins_2 spaces_3 _x_4 (<{wstateaccess.getWItemCompoundInfo`}> w_1_5) w_1_7 w_1_6 tb_9 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) (select _x_3_2::_Tuple5 0)) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (select _x_3_2::_Tuple5 1),6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) (select _x_3_2::_Tuple5 3),7:select _x_3_2::_Tuple5 2]) (select _x_3_2::_Tuple5 4)) (windowhandle.IsLayoutControl -> let _x_3_0 = controllayout.getLayoutItemId c_7 (select itemH_8::<{wstate._WItemHandle`}> 0) prev_5, id_3_1 = select _x_3_0::_Tuple3 0, _x_3_2 = controllayout.calcLayoutSize_56 wMetrics_0 hMargins_1 vMargins_2 spaces_3 _x_4 w_1_7 w_1_6 tb_9 in <{_Tuple6!57}> (controllayout.newLayoutItem id_3_1 (controllayout.getLayoutItemPos_58 prev_6 w_1_6) (select _x_3_2::_Tuple4 0)) (select _x_3_0::_Tuple3 2) id_3_1 (select _x_3_0::_Tuple3 1) (update itemH_8::<{wstate._WItemHandle`}> [6:_predefined._Cons (<{wstate.ControlId`}> id_3_1) (select _x_3_2::_Tuple4 2),7:select _x_3_2::_Tuple4 1]) (select _x_3_2::_Tuple4 3)) ) (_ -> controllayout.controllayoutFatalError "getLayoutWItem`" "unmatched control implementation alternative")
<{controllayout.getLayoutItem`_59}> !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !orientations_4 prev_5 prev_6 !c_7::I !_x_8 !tb_9::I = case _x_8 (<{wstate.WItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{wstate._WItemHandle`}> w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case w_2_8 (True -> <{_Tuple6!57}> _predefined._Nil prev_5 prev_6 c_7 (<{wstate.WItemHandle`}> itemH_1_0) tb_9) (False -> let _x_4_0 = <{controllayout.getLayoutWItem`_57}> wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 prev_5 prev_6 c_7 itemH_1_0 tb_9 in <{_Tuple6!57}> (_predefined._Cons (select _x_4_0::_Tuple6 0) _predefined._Nil) (select _x_4_0::_Tuple6 1) (select _x_4_0::_Tuple6 2) (select _x_4_0::_Tuple6 3) (<{wstate.WItemHandle`}> (select _x_4_0::_Tuple6 4)) (select _x_4_0::_Tuple6 5)) ) ) (<{wstate.WRecursiveHandle`}> itemHs_1_0 kind_1_1 -> let _x_2_0 = <{controllayout.getLayoutItems`}> wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 prev_5 prev_6 c_7 itemHs_1_0 tb_9 in <{_Tuple6!57}> (select _x_2_0::_Tuple6 0) (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) (<{wstate.WRecursiveHandle`}> (select _x_2_0::_Tuple6 4) kind_1_1) (select _x_2_0::_Tuple6 5)) 
<{controllayout.getLayoutItems`}> !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !orientations_4 prev_5 prev_6 !c_7::I !_x_8 !tb_9::I = case _x_8 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = <{controllayout.getLayoutItem`_59}> wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 prev_5 prev_6 c_7 itemH_1_0 tb_9, _x_2_1 = <{controllayout.getLayoutItems`}> wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_4 (select _x_2_0::_Tuple6 1) (select _x_2_0::_Tuple6 2) (select _x_2_0::_Tuple6 3) itemHs_1_1 (select _x_2_0::_Tuple6 5) in <{_Tuple6!57}> (<{StdList.++}> (select _x_2_0::_Tuple6 0) (select _x_2_1::_Tuple6 0)) (select _x_2_1::_Tuple6 1) (select _x_2_1::_Tuple6 2) (select _x_2_1::_Tuple6 3) (_predefined._Cons (select _x_2_0::_Tuple6 4) (select _x_2_1::_Tuple6 4)) (select _x_2_1::_Tuple6 5)) (_predefined._Nil -> <{_Tuple6!57}> _predefined._Nil prev_5 prev_6 c_7 _predefined._Nil tb_9) 
<{controllayout.layoutControls`}> !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !reqSize_4 !minSize_5 !orientations_6 !itemHs_7 !tb_8::I = let _x_1_0 = <{controllayout.getLayoutItems`}> wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_6 _predefined._Nil (id.sysId -1) -2 (select (<{controllayout.validateFirstWElementsPos`}> False itemHs_7)::_Tuple3 2) tb_8, _x_1_1 = layout.layoutItems hMargins_1 vMargins_2 spaces_3 reqSize_4 minSize_5 orientations_6 (select _x_1_0::_Tuple6 0) in <{_Tuple3!7}> (select _x_1_1::_Tuple2 0) (select (<{controllayout.setLayoutItems`}> (select _x_1_1::_Tuple2 1) (select _x_1_0::_Tuple6 4))::_Tuple2 1) (select _x_1_0::_Tuple6 5)
<{controllayout._if;675;42_159}> !_x_0::B atts2_1 okDerivedSize_2 = case _x_0 (True -> atts2_1) (_ -> _predefined._Cons (<{wstate.ControlViewSize`}> okDerivedSize_2) atts2_1)
<{controllayout._if;586;48_158}> !_x_0::B atts2_1 okDerivedSize_2 = case _x_0 (True -> atts2_1) (_ -> _predefined._Cons (<{wstate.ControlViewSize`}> okDerivedSize_2) atts2_1)
controllayout.calcControlsSize !wMetrics_0 !hMargins_1 !vMargins_2 !spaces_3 !reqSize_4 !minSize_5 !orientations_6 !itemHs_7 !tb_8::I = let _x_1_0 = controllayout.getLayoutItems wMetrics_0 hMargins_1 vMargins_2 spaces_3 orientations_6 _predefined._Nil (id.sysId -1) -2 (select (controllayout.validateFirstWElementsPos False itemHs_7)::_Tuple3 2) tb_8 in <{_Tuple2!3}> (select (layout.layoutItems hMargins_1 vMargins_2 spaces_3 reqSize_4 minSize_5 orientations_6 (select _x_1_0::_Tuple6 0))::_Tuple2 0) (select _x_1_0::_Tuple6 5)


|| Converted Records
:: <{controllayout.gEq_s;}> = {!controllayout.gEq_s}

:: <{controllayout.gEq_ss;}> = {!controllayout.gEq_ss}

:: <{controllayout.gEq_sss;}> = {!controllayout.gEq_sss}

:: <{controllayout.gEq_ssss;}> = {!controllayout.gEq_ssss}

:: <{controllayout.gEq_sssss;}> = {!controllayout.gEq_sssss}

:: <{controllayout.gEq_ssssss;}> = {!controllayout.gEq_ssssss}

:: <{controllayout.gEq_sssssss;}> = {!controllayout.gEq_sssssss}

:: <{controllayout.gEq_ssssssss;}> = {!controllayout.gEq_ssssssss}

:: <{controllayout.gEq_sssssssss;}> = {!controllayout.gEq_sssssssss}

:: <{controllayout.bimap_s;}> = {controllayout.bimap_s}

:: <{controllayout.bimap_ss;}> = {controllayout.bimap_ss}

:: <{controllayout.bimap_sss;}> = {controllayout.bimap_sss}

