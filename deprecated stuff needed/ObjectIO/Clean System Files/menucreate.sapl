|| ?module? menucreate


menucreate.menucreateFatalError !rule_0 !error_1 = commondef.fatalError rule_0 "menucreate" error_1
menucreate.isMenuWithThisId !id_0 !msH_1 = let _x_1_0 = menuaccess.menuStateHandleGetMenuId msH_1 in <{_Tuple2!3}> (<{id.==_27}> id_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
menucreate.NewMenuHandle !title_0 !atts_1 !index_2::I !menu_3 !menuBar_4 !tb_5::I = let _x_1_0 = osmenu.osNewMenuNr tb_5 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> menucreate.menucreateFatalError "NewMenuHandle" "To many Menus created for one interactive process") (False -> let select_3_0 = StdMenuAttribute.getMenuSelectStateAtt (select (commondef.cselect StdMenuAttribute.isMenuSelectState (StdMenuDef.MenuSelectState StdIOCommon.Able) atts_1)::_Tuple2 1) in case (StdIOCommon.enabled select_3_0) (True -> let osMenuNr_5_0 = select _x_1_0::_Tuple3 1, _x_5_1::I = osmenu.osMenuInsert index_2 osMenuNr_5_0 title_0 menuBar_4 (select _x_1_0::_Tuple3 2), menu_5_2 = select _x_5_1::_Tuple3 0, menuBar_5_3::I = select _x_5_1::_Tuple3 1 in <{_Tuple4!15}> menu_5_2 (menuhandle._MenuHandle menu_5_2 menu_3 osMenuNr_5_0 title_0 (StdIOCommon.enabled select_3_0) _predefined._Nil) menuBar_5_3 (osmenu.osEnableMenu index_2 menuBar_5_3 (select _x_5_1::_Tuple3 2))) (False -> let osMenuNr_5_0 = select _x_1_0::_Tuple3 1, _x_5_1::I = osmenu.osMenuInsert index_2 osMenuNr_5_0 title_0 menuBar_4 (select _x_1_0::_Tuple3 2), menu_5_2 = select _x_5_1::_Tuple3 0, menuBar_5_3::I = select _x_5_1::_Tuple3 1 in <{_Tuple4!15}> menu_5_2 (menuhandle._MenuHandle menu_5_2 menu_3 osMenuNr_5_0 title_0 (StdIOCommon.enabled select_3_0) _predefined._Nil) menuBar_5_3 (osmenu.osDisableMenu index_2 menuBar_5_3 (select _x_5_1::_Tuple3 2))) ) 
menucreate.NewSubMenuHandle !mH_0 !index_1::I !menu_2::I !tb_3::I = case mH_0 (menuhandle._SubMenuHandle mSubHandle_1_0 mSubMenu_1_1 mSubOSMenuNr_1_2 mSub_1_3 mSubTitle_1_4 mSubSelect_1_5 mSubAtts_1_6 -> let _x_2_0 = osmenu.osNewSubMenuNr tb_3 in case (StdBool.not (select _x_2_0::_Tuple3 0)) (True -> menucreate.menucreateFatalError "NewSubMenuHandle" "To many SubMenus created for one interactive process") (False -> case mSubSelect_1_5 (True -> let osMenuNr_5_0::I = select _x_2_0::_Tuple3 1, _x_5_1 = osmenu.osSubMenuInsert index_1 osMenuNr_5_0 mSubTitle_1_4 menu_2 (select _x_2_0::_Tuple3 2), osH_5_2::I = select _x_5_1::_Tuple3 0 in <{_Tuple2!3}> (update mH_0::menuhandle._SubMenuHandle [0:osH_5_2,2:osMenuNr_5_0]) (osmenu.osEnableMenuItem menu_2 osH_5_2 index_1 (select _x_5_1::_Tuple3 2))) (False -> let osMenuNr_5_0::I = select _x_2_0::_Tuple3 1, _x_5_1 = osmenu.osSubMenuInsert index_1 osMenuNr_5_0 mSubTitle_1_4 menu_2 (select _x_2_0::_Tuple3 2), osH_5_2::I = select _x_5_1::_Tuple3 0 in <{_Tuple2!3}> (update mH_0::menuhandle._SubMenuHandle [0:osH_5_2,2:osMenuNr_5_0]) (osmenu.osDisableMenuItem menu_2 osH_5_2 index_1 (select _x_5_1::_Tuple3 2))) ) ) 
menucreate.checkshortcutkey !m_0 !cs_1 = case m_0 (menuhandle._MenuItemHandle m_1_0 m_1_1 m_1_2 m_1_3 m_1_4 m_1_5 mOSMenu_1_6 -> case (Data.Maybe.isNothing m_1_1) (True -> <{_Tuple2!3}> m_0 cs_1) (False -> let c_3_0::C = Data.Maybe.fromJust m_1_1 in case (StdList.isMember_52 c_3_0 cs_1) (True -> <{_Tuple2!3}> (update m_0::menuhandle._MenuItemHandle [1:Data.Maybe.Nothing]) cs_1) (False -> <{_Tuple2!3}> m_0 (_predefined._Cons c_3_0 cs_1)) ) ) 
menucreate.insertMenu !osmenubar_0 !menu_1::I !iNr_2::I !itemH_3 !tb_4::I = case itemH_3 (menuhandle._MenuItemHandle m_1_0 m_1_1 m_1_2 m_1_3 m_1_4 m_1_5 mOSMenu_1_6 -> let _x_2_0 = osmenu.osAppendMenuItem osmenubar_0 iNr_2 menu_1 m_1_2 m_1_3 m_1_4 (<{menucreate._c;286;27_72}> m_1_1) tb_4 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) itemH_3 (select _x_2_0::_Tuple3 2)) 
<{menucreate._c;286;27_72}>::C !m_0 = case m_0 (Data.Maybe.Just key_1_0 -> key_1_0) (_ -> '\0')
menucreate.createMenuElement_23 !osmenubar_0 !menu_1::I !iNr_2::I !_x_3 !keys_4 !tb_5::I = case _x_3 (menuhandle.SubMenuHandle subH_1_0 -> let _x_2_0 = menucreate.NewSubMenuHandle subH_1_0 iNr_2 menu_1 tb_5, subH_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = menucreate.createMenuElements osmenubar_0 (select subH_2_1::menuhandle._SubMenuHandle 0) 1 (select subH_2_1::menuhandle._SubMenuHandle 3) keys_4 (select _x_2_0::_Tuple2 1) in <{_Tuple4!15}> (<{StdInt.+_6}> iNr_2 1) (menuhandle.SubMenuHandle (update subH_2_1::menuhandle._SubMenuHandle [3:select _x_2_2::_Tuple4 1])) (select _x_2_2::_Tuple4 2) (select _x_2_2::_Tuple4 3)) (menuhandle.RadioMenuHandle itemH_1_0 -> case itemH_1_0 (menuhandle._RadioMenuHandle mRadio_2_0 mRadio_2_1 itemHs_2_2 mRadioSelect_2_3 mRadioAtts_2_4 -> let _x_3_0 = menucreate.createMenuElements osmenubar_0 menu_1 iNr_2 itemHs_2_2 keys_4 tb_5 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (menuhandle.RadioMenuHandle (update itemH_1_0::menuhandle._RadioMenuHandle [2:select _x_3_0::_Tuple4 1])) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) ) (menuhandle.MenuItemHandle itemH_1_0 -> let _x_2_0 = menucreate.checkshortcutkey itemH_1_0 keys_4, _x_2_1 = menucreate.insertMenu osmenubar_0 menu_1 iNr_2 (select _x_2_0::_Tuple2 0) tb_5 in <{_Tuple4!15}> (<{StdInt.+_6}> iNr_2 1) (menuhandle.MenuItemHandle (update (select _x_2_1::_Tuple3 1)::menuhandle._MenuItemHandle [6:select _x_2_1::_Tuple3 0])) (select _x_2_0::_Tuple2 1) (select _x_2_1::_Tuple3 2)) (menuhandle.MenuSeparatorHandle itemH_1_0 -> let _x_2_0 = osmenu.osAppendMenuSeparator iNr_2 menu_1 tb_5 in <{_Tuple4!15}> (<{StdInt.+_6}> iNr_2 1) (menuhandle.MenuSeparatorHandle (update itemH_1_0::menuhandle._MenuSeparatorHandle [1:select _x_2_0::_Tuple3 0])) keys_4 (select _x_2_0::_Tuple3 2)) (menuhandle.MenuReceiverHandle _x_1_0 -> <{_Tuple4!15}> iNr_2 _x_3 keys_4 tb_5) (menuhandle.MenuListLSHandle itemHs_1_0 -> let _x_2_0 = menucreate.createMenuElements osmenubar_0 menu_1 iNr_2 itemHs_1_0 keys_4 tb_5 in <{_Tuple4!15}> (select _x_2_0::_Tuple4 0) (menuhandle.MenuListLSHandle (select _x_2_0::_Tuple4 1)) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (menuhandle.MenuExtendLSHandle exH_1_0 -> case exH_1_0 (menuhandle._MenuExtendLSHandle mExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = menucreate.createMenuElements osmenubar_0 menu_1 iNr_2 itemHs_2_1 keys_4 tb_5 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (menuhandle.MenuExtendLSHandle (update exH_1_0::menuhandle._MenuExtendLSHandle [1:select _x_3_0::_Tuple4 1])) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) ) (menuhandle.MenuChangeLSHandle chH_1_0 -> case chH_1_0 (menuhandle._MenuChangeLSHandle mChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = menucreate.createMenuElements osmenubar_0 menu_1 iNr_2 itemHs_2_1 keys_4 tb_5 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (menuhandle.MenuChangeLSHandle (update chH_1_0::menuhandle._MenuChangeLSHandle [1:select _x_3_0::_Tuple4 1])) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) ) (_ -> menucreate.menucreateFatalError "createMenuElements" "unmatched MenuElementHandle")
menucreate.createMenuElements !osmenubar_0 !menu_1::I !iNr_2::I !itemHs_3 !keys_4 !tb_5::I = let _x_1_0 = commondef.uisEmpty itemHs_3 in case (select _x_1_0::_Tuple2 0) (True -> <{_Tuple4!15}> iNr_2 (select _x_1_0::_Tuple2 1) keys_4 tb_5) (False -> let _x_3_0 = commondef.hdtl (select _x_1_0::_Tuple2 1), _x_3_1 = menucreate.createMenuElement_23 osmenubar_0 menu_1 iNr_2 (select _x_3_0::_Tuple2 0) keys_4 tb_5, _x_3_2 = menucreate.createMenuElements osmenubar_0 menu_1 (select _x_3_1::_Tuple4 0) (select _x_3_0::_Tuple2 1) (select _x_3_1::_Tuple4 2) (select _x_3_1::_Tuple4 3) in <{_Tuple4!15}> (select _x_3_2::_Tuple4 0) (_predefined._Cons (select _x_3_1::_Tuple4 1) (select _x_3_2::_Tuple4 1)) (select _x_3_2::_Tuple4 2) (select _x_3_2::_Tuple4 3)) 
menucreate.createMenu_17 !_vMenuElements_0 !index_1::I !io_2 !menu_3 !_x_4 !keys_5 !rt_6 !it_7 !osMenuBar_8 !pState_9 = case _x_4 (StdMenuDef.Menu title_1_0 items_1_1 atts_1_2 -> let _x_2_0 = select _vMenuElements_0::<{StdMenuElementClass.MenuElements;}> 1 items_1_1 pState_9, ms_2_1 = select _x_2_0::_Tuple2 0, itemHs_2_2 = StdList.map menuhandle.menuElementStateToMenuElementHandle ms_2_1, _x_2_3 = menuaccess.menuIdsAreConsistent io_2 menu_3 itemHs_2_2 rt_6 it_7 in case (StdBool.not (select _x_2_3::_Tuple4 0)) (True -> <{_Tuple7!125}> False StdMisc.undef keys_5 (select _x_2_3::_Tuple4 2) (select _x_2_3::_Tuple4 3) osMenuBar_8 (select _x_2_0::_Tuple2 1)) (False -> let pState_4_0 = select _x_2_0::_Tuple2 1, _x_4_1 = iostate.getIOToolbox (select pState_4_0::iostate._PSt 1), _x_4_2 = menucreate.NewMenuHandle title_1_0 atts_1_2 index_1 menu_3 osMenuBar_8 (select _x_4_1::_Tuple2 0), osMenuBar_4_3 = select _x_4_2::_Tuple4 2, _x_4_4 = menucreate.createMenuElements osMenuBar_4_3 (select _x_4_2::_Tuple4 0) 1 (select _x_2_3::_Tuple4 1) keys_5 (select _x_4_2::_Tuple4 3) in <{_Tuple7!125}> True (update (select _x_4_2::_Tuple4 1)::menuhandle._MenuHandle [5:select _x_4_4::_Tuple4 1]) (select _x_4_4::_Tuple4 2) (select _x_2_3::_Tuple4 2) (select (id.addIdToIdTable menu_3 (id._IdParent io_2 device.MenuDevice menu_3) (select _x_2_3::_Tuple4 3))::_Tuple2 1) osMenuBar_4_3 (update pState_4_0::iostate._PSt [1:iostate.setIOToolbox (select _x_4_4::_Tuple4 3) (select _x_4_1::_Tuple2 1)])) ) 
menucreate.checkSDISize_16 !sdiPtr_0::I !sdiSize1_1 !ioState_2 = let _x_1_0 = sdisize.getSDIWindowSize ioState_2, sdiSize2_1_1 = select _x_1_0::_Tuple3 0 in case (<{StdIOBasic.==_14}> sdiSize1_1 sdiSize2_1_1) (True -> select _x_1_0::_Tuple3 2) (False -> sdisize.resizeSDIWindow sdiPtr_0 sdiSize1_1 sdiSize2_1_1 (select _x_1_0::_Tuple3 2)) 
<{menucreate.openMenu`}> !_vMenuElements_0 !menu_1 ls_2 !_x_3 !pState_4 = case _x_3 (StdMenuDef.Menu title_1_0 items_1_1 atts_1_2 -> case pState_4 (iostate._PSt ls_2_0 ioState_2_1 -> let _x_3_0 = iostate.ioStGetOSDInfo ioState_2_1, osd_3_1 = select _x_3_0::_Tuple2 0, maybeOSMenuBar_3_2 = osdocumentinterface.getOSDInfoOSMenuBar osd_3_1 in case (Data.Maybe.isNothing maybeOSMenuBar_3_2) (True -> menucreate.menucreateFatalError "openMenu (Menu)" "could not retrieve OSMenuBar from IOSt") (False -> let ioState_5_0 = select _x_3_0::_Tuple2 1, _x_5_1 = iostate.ioStGetIdTable ioState_5_0, ioState_5_2 = select _x_5_1::_Tuple2 1, _x_5_3 = iostate.ioStGetDevice device.MenuDevice ioState_5_2 in case (StdBool.not (select _x_5_3::_Tuple3 0)) (True -> menucreate.menucreateFatalError "openMenu (Menu)" "MenuDevice not found") (False -> let mDevice_7_0 = select _x_5_3::_Tuple3 1, mHs_7_1 = devicesystemstate.menuSystemStateGetMenuHandles mDevice_7_0, _x_7_2 = menuaccess.menuHandlesGetMenus mHs_7_1, menus_7_3 = select _x_7_2::_Tuple2 0, _x_7_4 = commondef.ucontains (menucreate.isMenuWithThisId menu_1) menus_7_3 in case (select _x_7_4::_Tuple2 0) (True -> menucreate.menucreateFatalError "openMenu (Menu)" "inconsistency detected between IdTable and ReceiverTable") (False -> let menus_9_0 = select _x_7_4::_Tuple2 1, _x_9_1 = commondef.ulength menus_9_0, nrmenus_9_2 = select _x_9_1::_Tuple2 0, index_9_3 = StdMenuAttribute.getMenuIndexAtt (select (commondef.cselect StdMenuAttribute.isMenuIndex (StdMenuDef.MenuIndex nrmenus_9_2) atts_1_2)::_Tuple2 1), x_9_4 = 0, menus_9_5 = select _x_9_1::_Tuple2 1, _x_9_6 = commondef.ucontains (menucreate.isMenuWithThisId id.windowMenuId) menus_9_5, hasMenuWindowMenu_9_7 = select _x_9_6::_Tuple2 0, y_9_8 = <{menucreate._if;40;62_74}> hasMenuWindowMenu_9_7 nrmenus_9_2, <{index`_9_9}> = commondef.setBetween index_9_3 0 (<{menucreate._c;51;16_73}> (<{StdInt.<_17}> x_9_4 y_9_8) y_9_8 x_9_4), ioState_9_10 = select _x_5_3::_Tuple3 2, _x_9_11 = iostate.ioStGetReceiverTable ioState_9_10, ioState_9_12 = select _x_9_11::_Tuple2 1, _x_9_13 = iostate.ioStGetIOId ioState_9_12, ioid_9_14 = select _x_9_13::_Tuple2 0, mHs_9_15 = select _x_7_2::_Tuple2 1, _x_9_16::I = menuaccess.menuHandlesGetKeys mHs_9_15, mKeys_9_17::I = select _x_9_16::_Tuple2 0, rt_9_18::B = select _x_9_11::_Tuple2 0, idtable_9_19 = select _x_5_1::_Tuple2 0, osMenuBar_9_20 = Data.Maybe.fromJust maybeOSMenuBar_3_2, ioState_9_21::I = select _x_9_13::_Tuple2 1, _x_9_22::I = sdisize.getSDIWindowSize ioState_9_21, ioState_9_23::I = select _x_9_22::_Tuple3 2, pState_9_24 = update pState_4::iostate._PSt [1:ioState_9_23], _x_9_25 = menucreate.createMenu_17 _vMenuElements_0 <{index`_9_9}> ioid_9_14 menu_1 (StdMenuDef.Menu title_1_0 items_1_1 atts_1_2) mKeys_9_17 rt_9_18 idtable_9_19 osMenuBar_9_20 pState_9_24 in case (StdBool.not (select _x_9_25::_Tuple7 0)) (True -> let pState_11_0 = select _x_9_25::_Tuple7 6 in <{_Tuple2!3}> StdIOCommon.ErrorIdsInUse (update pState_11_0::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.MenuSystemState (menuaccess.menuHandlesSetMenus (select _x_9_6::_Tuple2 1) (menuaccess.menuHandlesSetKeys (select _x_9_25::_Tuple7 2) (select _x_9_16::_Tuple2 1)))) (iostate.ioStSetOSDInfo (osdocumentinterface.setOSDInfoOSMenuBar (select _x_9_25::_Tuple7 5) osd_3_1) (iostate.ioStSetIdTable (select _x_9_25::_Tuple7 4) (iostate.ioStSetReceiverTable (select _x_9_25::_Tuple7 3) (select pState_11_0::iostate._PSt 1))))])) (False -> let pState_11_0 = select _x_9_25::_Tuple7 6, _x_11_1 = StdList.splitAt <{index`_9_9}> (select _x_9_6::_Tuple2 1), osMenuBar_11_2 = select _x_9_25::_Tuple7 5, _x_11_3 = StdMenuAttribute.getMenuInitFun (select (commondef.cselect StdMenuAttribute.isMenuInit (StdMenuDef.MenuInit StdFunc.id) atts_1_2)::_Tuple2 1) (_Tuple2 ls_2 (update pState_11_0::iostate._PSt [1:menucreate.checkSDISize_16 (select _x_9_22::_Tuple3 1) (select _x_9_22::_Tuple3 0) (iostate.ioStSetDevice (devicesystemstate.MenuSystemState (update (menuaccess.menuHandlesSetKeys (select _x_9_25::_Tuple7 2) (select _x_9_16::_Tuple2 1))::menuhandle._MenuHandles [0:<{StdList.++}> (select _x_11_1::_Tuple2 0) (_predefined._Cons (menuhandle.MenuLSHandle (menuhandle._MenuLSHandle (select _x_11_3::_Tuple2 0) (select _x_9_25::_Tuple7 1))) (select _x_11_1::_Tuple2 1))])) (iostate.appIOToolbox (osmenu.osDrawMenuBar osMenuBar_11_2) (iostate.ioStSetOSDInfo (osdocumentinterface.setOSDInfoOSMenuBar osMenuBar_11_2 osd_3_1) (iostate.ioStSetIdTable (select _x_9_25::_Tuple7 4) (iostate.ioStSetReceiverTable (select _x_9_25::_Tuple7 3) (select pState_11_0::iostate._PSt 1))))))])) in <{_Tuple2!3}> StdIOCommon.NoError (select _x_11_3::_Tuple2 1)) ) ) ) ) ) 
<{menucreate._if;40;62_74}>::I !hasMenuWindowMenu_0::B !nrmenus_1::I = case hasMenuWindowMenu_0 (True -> <{StdInt.-_7}> nrmenus_1 1) (_ -> nrmenus_1)
<{menucreate._c;51;16_73}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
menucreate.closepopupmenu !mHs_0 = case mHs_0 (menuhandle._MenuHandles mMenus_1_0 mKeys_1_1 mEnabled_1_2 mNrMenuBound_1_3 mPopUp_1_4 -> case (Data.Maybe.isJust mPopUp_1_4) (True -> mHs_0) (False -> let _x_3_0 = commondef.hdtl mMenus_1_0 in update mHs_0::menuhandle._MenuHandles [0:select _x_3_0::_Tuple2 1,4:Data.Maybe.Just (select (menuaccess.menuStateHandleGetMenuId (select _x_3_0::_Tuple2 0))::_Tuple2 0)]) ) 
menucreate.closePopUpMenu_22 !pState_0 = case pState_0 (iostate._PSt ls_1_0 io_1_1 -> let _x_2_0 = iostate.ioStGetDevice device.MenuDevice io_1_1 in case (StdBool.not (select _x_2_0::_Tuple3 0)) (True -> menucreate.menucreateFatalError "closePopUpMenu" "could not retrieve MenuSystemState from IOSt") (False -> update pState_0::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.MenuSystemState (menucreate.closepopupmenu (devicesystemstate.menuSystemStateGetMenuHandles (select _x_2_0::_Tuple3 1)))) (select _x_2_0::_Tuple3 2)]) ) 
<{menucreate.f`_18}> f_0 !_x_1 = case _x_1 (_Tuple2 ls_1_0 pst_1_1 -> let _x_2_0 = f_0 (_Tuple2 ls_1_0 pst_1_1) in _Tuple2 (select _x_2_0::_Tuple2 0) (menucreate.closePopUpMenu_22 (select _x_2_0::_Tuple2 1))) 
<{menucreate.f`_19}> f_0 !modifiers_1 !_x_2 = case _x_2 (_Tuple2 ls_1_0 pst_1_1 -> let _x_2_0 = f_0 modifiers_1 (_Tuple2 ls_1_0 pst_1_1) in _Tuple2 (select _x_2_0::_Tuple2 0) (menucreate.closePopUpMenu_22 (select _x_2_0::_Tuple2 1))) 
menucreate.validateMenuFunction_20 !_x_0 = case _x_0 (StdMenuDef.MenuFunction f_1_0 -> StdMenuDef.MenuFunction (<{menucreate.f`_18}> f_1_0)) (StdMenuDef.MenuModsFunction f_1_0 -> StdMenuDef.MenuModsFunction (<{menucreate.f`_19}> f_1_0)) (_ -> _x_0)
menucreate.validatePopUpMenuFunction_21 !_x_0 = case _x_0 (menuhandle.MenuItemHandle itemH_1_0 -> case itemH_1_0 (menuhandle._MenuItemHandle m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> menuhandle.MenuItemHandle (update itemH_1_0::menuhandle._MenuItemHandle [5:StdList.map menucreate.validateMenuFunction_20 m_2_5])) ) (menuhandle.MenuReceiverHandle _x_1_0 -> menucreate.menucreateFatalError "validatePopUpMenuFunction" "Receiver(2) should not be an element of PopUpMenus") (menuhandle.SubMenuHandle submH_1_0 -> case submH_1_0 (menuhandle._SubMenuHandle mSubHandle_2_0 mSubMenu_2_1 mSubOSMenuNr_2_2 mSub_2_3 mSubTitle_2_4 mSubSelect_2_5 mSubAtts_2_6 -> menuhandle.SubMenuHandle (update submH_1_0::menuhandle._SubMenuHandle [3:StdList.map menucreate.validatePopUpMenuFunction_21 mSub_2_3])) ) (menuhandle.RadioMenuHandle radioH_1_0 -> case radioH_1_0 (menuhandle._RadioMenuHandle mRadio_2_0 mRadio_2_1 mRadio_2_2 mRadioSelect_2_3 mRadioAtts_2_4 -> menuhandle.RadioMenuHandle (update radioH_1_0::menuhandle._RadioMenuHandle [2:StdList.map menucreate.validatePopUpMenuFunction_21 mRadio_2_2])) ) (menuhandle.MenuSeparatorHandle separatorH_1_0 -> menuhandle.MenuSeparatorHandle separatorH_1_0) (menuhandle.MenuListLSHandle itemHs_1_0 -> menuhandle.MenuListLSHandle (StdList.map menucreate.validatePopUpMenuFunction_21 itemHs_1_0)) (menuhandle.MenuExtendLSHandle mExH_1_0 -> case mExH_1_0 (menuhandle._MenuExtendLSHandle mExtendLS_2_0 mExtend_2_1 -> menuhandle.MenuExtendLSHandle (update mExH_1_0::menuhandle._MenuExtendLSHandle [1:StdList.map menucreate.validatePopUpMenuFunction_21 mExtend_2_1])) ) (menuhandle.MenuChangeLSHandle mChH_1_0 -> case mChH_1_0 (menuhandle._MenuChangeLSHandle mChangeLS_2_0 mChange_2_1 -> menuhandle.MenuChangeLSHandle (update mChH_1_0::menuhandle._MenuChangeLSHandle [1:StdList.map menucreate.validatePopUpMenuFunction_21 mChange_2_1])) ) 
menucreate.createPopUpMenu !_vPopUpMenuElements_0 !io_1 ls_2 !_x_3 !mHs_4 !rt_5 !it_6 !osMenuBar_7 !pState_8 = case _x_3 (StdMenuDef.PopUpMenu items_1_0 -> case mHs_4 (menuhandle._MenuHandles mMenus_2_0 keys_2_1 mEnabled_2_2 mNrMenuBound_2_3 mPopUp_2_4 -> let menu_3_0 = Data.Maybe.fromJust mPopUp_2_4, _x_3_1 = select _vPopUpMenuElements_0::<{StdMenuElementClass.PopUpMenuElements;}> 1 items_1_0 pState_8, ms_3_2 = select _x_3_1::_Tuple2 0, itemHs_3_3 = StdList.map menuhandle.menuElementStateToMenuElementHandle ms_3_2, _x_3_4 = menuaccess.menuIdsAreConsistent io_1 menu_3_0 itemHs_3_3 rt_5 it_6 in case (StdBool.not (select _x_3_4::_Tuple4 0)) (True -> <{_Tuple6!63}> False mHs_4 (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) osMenuBar_7 (select _x_3_1::_Tuple2 1)) (False -> let pState_5_0 = select _x_3_1::_Tuple2 1, _x_5_1::I = iostate.getIOToolbox (select pState_5_0::iostate._PSt 1), _x_5_2 = osmenu.osCreatePopUpMenu (select _x_5_1::_Tuple2 0), menu_5_3 = select _x_5_2::_Tuple2 0, _x_5_4 = menucreate.createMenuElements osMenuBar_7 menu_5_3 1 (select _x_3_4::_Tuple4 1) keys_2_1 (select _x_5_2::_Tuple2 1) in <{_Tuple6!63}> True (update mHs_4::menuhandle._MenuHandles [0:_predefined._Cons (menuhandle.MenuLSHandle (menuhandle._MenuLSHandle ls_2 (menuhandle._MenuHandle menu_5_3 menu_3_0 0 "" True (StdList.map menucreate.validatePopUpMenuFunction_21 (select _x_5_4::_Tuple4 1))))) mMenus_2_0,1:select _x_5_4::_Tuple4 2,4:Data.Maybe.Nothing]) (select _x_3_4::_Tuple4 2) (select _x_3_4::_Tuple4 3) osMenuBar_7 (update pState_5_0::iostate._PSt [1:iostate.setIOToolbox (select _x_5_4::_Tuple4 3) (select _x_5_1::_Tuple2 1)])) ) ) 
<{menucreate.extendMenu`_24}> !osmenubar_0 !menu_1::I !iNr_2::I !_x_3 !keys_4 !tb_5::I = case _x_3 (menuhandle.SubMenuHandle subH_1_0 -> let _x_2_0 = menucreate.NewSubMenuHandle subH_1_0 iNr_2 menu_1 tb_5, subH_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = menucreate.createMenuElements osmenubar_0 (select subH_2_1::menuhandle._SubMenuHandle 0) 1 (select subH_2_1::menuhandle._SubMenuHandle 3) keys_4 (select _x_2_0::_Tuple2 1) in <{_Tuple3!7}> (menuhandle.SubMenuHandle (update subH_2_1::menuhandle._SubMenuHandle [3:select _x_2_2::_Tuple4 1])) (select _x_2_2::_Tuple4 2) (select _x_2_2::_Tuple4 3)) (menuhandle.RadioMenuHandle itemH_1_0 -> case itemH_1_0 (menuhandle._RadioMenuHandle mRadio_2_0 mRadio_2_1 itemHs_2_2 mRadioSelect_2_3 mRadioAtts_2_4 -> let _x_3_0 = menucreate.createMenuElements osmenubar_0 menu_1 iNr_2 itemHs_2_2 keys_4 tb_5 in <{_Tuple3!7}> (menuhandle.RadioMenuHandle (update itemH_1_0::menuhandle._RadioMenuHandle [2:select _x_3_0::_Tuple4 1])) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) ) (menuhandle.MenuItemHandle itemH_1_0 -> let _x_2_0 = menucreate.checkshortcutkey itemH_1_0 keys_4, _x_2_1 = menucreate.insertMenu osmenubar_0 menu_1 iNr_2 (select _x_2_0::_Tuple2 0) tb_5 in <{_Tuple3!7}> (menuhandle.MenuItemHandle (update (select _x_2_1::_Tuple3 1)::menuhandle._MenuItemHandle [6:select _x_2_1::_Tuple3 0])) (select _x_2_0::_Tuple2 1) (select _x_2_1::_Tuple3 2)) (menuhandle.MenuSeparatorHandle itemH_1_0 -> let _x_2_0 = osmenu.osAppendMenuSeparator iNr_2 menu_1 tb_5 in <{_Tuple3!7}> (menuhandle.MenuSeparatorHandle (update itemH_1_0::menuhandle._MenuSeparatorHandle [1:select _x_2_0::_Tuple3 0])) keys_4 (select _x_2_0::_Tuple3 2)) (menuhandle.MenuReceiverHandle _x_1_0 -> <{_Tuple3!7}> _x_3 keys_4 tb_5) (menuhandle.MenuListLSHandle itemHs_1_0 -> let _x_2_0 = menucreate.extendMenu osmenubar_0 menu_1 iNr_2 itemHs_1_0 _predefined._Nil keys_4 tb_5 in <{_Tuple3!7}> (menuhandle.MenuListLSHandle (select _x_2_0::_Tuple3 0)) (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) (menuhandle.MenuExtendLSHandle mExH_1_0 -> case mExH_1_0 (menuhandle._MenuExtendLSHandle mExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = menucreate.extendMenu osmenubar_0 menu_1 iNr_2 itemHs_2_1 _predefined._Nil keys_4 tb_5 in <{_Tuple3!7}> (menuhandle.MenuExtendLSHandle (update mExH_1_0::menuhandle._MenuExtendLSHandle [1:select _x_3_0::_Tuple3 0])) (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) ) (menuhandle.MenuChangeLSHandle mChH_1_0 -> case mChH_1_0 (menuhandle._MenuChangeLSHandle mChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = menucreate.extendMenu osmenubar_0 menu_1 iNr_2 itemHs_2_1 _predefined._Nil keys_4 tb_5 in <{_Tuple3!7}> (menuhandle.MenuChangeLSHandle (update mChH_1_0::menuhandle._MenuChangeLSHandle [1:select _x_3_0::_Tuple3 0])) (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) ) (_ -> menucreate.menucreateFatalError "extendMenu" "unmatched MenuElementHandle")
menucreate.extendMenu !osmenubar_0 !menu_1::I !iNr_2::I !itemHs_3 !items_4 !keys_5 !tb_6::I = let _x_1_0 = commondef.uisEmpty itemHs_3 in case (select _x_1_0::_Tuple2 0) (True -> <{_Tuple3!7}> items_4 keys_5 tb_6) (False -> let _x_3_0 = commondef.hdtl (select _x_1_0::_Tuple2 1), _x_3_1 = menucreate.extendMenu osmenubar_0 menu_1 iNr_2 (select _x_3_0::_Tuple2 1) items_4 keys_5 tb_6, _x_3_2 = <{menucreate.extendMenu`_24}> osmenubar_0 menu_1 iNr_2 (select _x_3_0::_Tuple2 0) (select _x_3_1::_Tuple3 1) (select _x_3_1::_Tuple3 2) in <{_Tuple3!7}> (_predefined._Cons (select _x_3_2::_Tuple3 0) (select _x_3_1::_Tuple3 0)) (select _x_3_2::_Tuple3 1) (select _x_3_2::_Tuple3 2)) 
menucreate.disposeMenuItemHandle !menu_0::I !iNr_1::I !itemH_2 !_x_3 = case itemH_2 (menuhandle._MenuItemHandle m_1_0 m_1_1 m_1_2 m_1_3 m_1_4 m_1_5 mOSMenu_1_6 -> case _x_3 (_Tuple3 keys_2_0 it_2_1 tb_2_2 -> case (Data.Maybe.isJust m_1_0) (True -> <{_Tuple2!3}> itemH_2 (_Tuple3 (<{menucreate._if;358;19_75}> (Data.Maybe.isJust m_1_1) m_1_1 keys_2_0) (select (id.removeIdFromIdTable (Data.Maybe.fromJust m_1_0) it_2_1)::_Tuple2 1) (select (osmenu.osMenuRemoveItem mOSMenu_1_6 iNr_1 menu_0 tb_2_2)::_Tuple2 1))) (False -> <{_Tuple2!3}> itemH_2 (_Tuple3 (<{menucreate._if;358;19_76}> (Data.Maybe.isJust m_1_1) m_1_1 keys_2_0) it_2_1 (select (osmenu.osMenuRemoveItem mOSMenu_1_6 iNr_1 menu_0 tb_2_2)::_Tuple2 1))) ) ) 
<{menucreate._if;358;19_76}> !_x_0::B m_1 keys_2 = case _x_0 (True -> _predefined._Cons (Data.Maybe.fromJust m_1) keys_2) (_ -> keys_2)
<{menucreate._if;358;19_75}> !_x_0::B m_1 keys_2 = case _x_0 (True -> _predefined._Cons (Data.Maybe.fromJust m_1) keys_2) (_ -> keys_2)
<{menucreate.disposeSubMenuHandles`_25}> !_x_0 !_x_1 = case _x_0 (menuhandle.SubMenuHandle subH_1_0 -> case subH_1_0 (menuhandle._SubMenuHandle mSubH_2_0 mSubMenu_2_1 mSubNr_2_2 itemHs_2_3 mSubTitle_2_4 mSubSelect_2_5 mSubAtts_2_6 -> case _x_1 (_Tuple3 parentH_3_0 iNr_3_1 tb_3_2 -> let _x_4_0 = commondef.stateMap <{menucreate.disposeSubMenuHandles`_25}> itemHs_2_3 (_Tuple3 mSubH_2_0 1 tb_3_2), _x_4_1::I = select _x_4_0::_Tuple2 1, mSubH_4_2 = select _x_4_1::_Tuple3 0, _x_4_3 = osmenu.osSubMenuRemove mSubH_4_2 parentH_3_0 mSubNr_2_2 iNr_3_1 (select _x_4_1::_Tuple3 2) in <{_Tuple2!3}> (menuhandle.SubMenuHandle (update subH_1_0::menuhandle._SubMenuHandle [0:mSubH_4_2,3:select _x_4_0::_Tuple2 0])) (_Tuple3 (select _x_4_3::_Tuple2 0) (<{StdInt.+_6}> iNr_3_1 1) (select _x_4_3::_Tuple2 1))) ) ) (menuhandle.MenuListLSHandle mList_1_0 -> let _x_2_0 = commondef.stateMap <{menucreate.disposeSubMenuHandles`_25}> mList_1_0 _x_1 in <{_Tuple2!3}> (menuhandle.MenuListLSHandle (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (menuhandle.MenuExtendLSHandle mExH_1_0 -> case mExH_1_0 (menuhandle._MenuExtendLSHandle mExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = commondef.stateMap <{menucreate.disposeSubMenuHandles`_25}> itemHs_2_1 _x_1 in <{_Tuple2!3}> (menuhandle.MenuExtendLSHandle (update mExH_1_0::menuhandle._MenuExtendLSHandle [1:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (menuhandle.MenuChangeLSHandle mChH_1_0 -> case mChH_1_0 (menuhandle._MenuChangeLSHandle mChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = commondef.stateMap <{menucreate.disposeSubMenuHandles`_25}> itemHs_2_1 _x_1 in <{_Tuple2!3}> (menuhandle.MenuChangeLSHandle (update mChH_1_0::menuhandle._MenuChangeLSHandle [1:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (menuhandle.MenuItemHandle _x_1_0 -> case _x_1 (_Tuple3 parentH_2_0 iNr_2_1 tb_2_2 -> <{_Tuple2!3}> _x_0 (_Tuple3 parentH_2_0 (<{StdInt.+_6}> iNr_2_1 1) tb_2_2)) ) (menuhandle.RadioMenuHandle radioH_1_0 -> case radioH_1_0 (menuhandle._RadioMenuHandle mRadio_2_0 mRadio_2_1 itemHs_2_2 mRadioSelect_2_3 mRadioAtts_2_4 -> case _x_1 (_Tuple3 parentH_3_0 iNr_3_1 tb_3_2 -> let _x_4_0 = commondef.ulength itemHs_2_2 in <{_Tuple2!3}> (menuhandle.RadioMenuHandle (update radioH_1_0::menuhandle._RadioMenuHandle [2:select _x_4_0::_Tuple2 1])) (_Tuple3 parentH_3_0 (<{StdInt.+_6}> iNr_3_1 (select _x_4_0::_Tuple2 0)) tb_3_2)) ) ) (_ -> <{_Tuple2!3}> _x_0 _x_1)
menucreate.disposeSubMenuHandles !itemH_0 !_x_1 = case _x_1 (_Tuple2 parentH_1_0 tb_1_1 -> let _x_2_0 = <{menucreate.disposeSubMenuHandles`_25}> itemH_0 (_Tuple3 parentH_1_0 1 tb_1_1), _x_2_1 = select _x_2_0::_Tuple2 1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (_Tuple2 (select _x_2_1::_Tuple3 0) (select _x_2_1::_Tuple3 2))) 
menucreate.dispose_26 !msH_0 !_x_1 = case _x_1 (_Tuple2 osMenuBar_1_0 tb_1_1 -> let _x_2_0 = menuaccess.menuStateHandleGetHandle msH_0 in <{_Tuple2!1}> (select _x_2_0::_Tuple2 1) (osmenu.osMenuRemove (select _x_2_0::_Tuple2 0) osMenuBar_1_0 tb_1_1)) 
menucreate.disposeMenuHandles !_x_0::B !menus_1 !_x_2 = case menus_1 (menuhandle._MenuHandles mMenus_1_0 mKeys_1_1 mEnabled_1_2 mNrMenuBound_1_3 mPopUp_1_4 -> case _x_2 (_Tuple2 osMenuBar_2_0 tb_2_1 -> let _x_3_0 = commondef.stateMap menucreate.dispose_26 mMenus_1_0 (_Tuple2 osMenuBar_2_0 tb_2_1), _x_3_1 = select _x_3_0::_Tuple2 1 in <{_Tuple2!3}> (update menus_1::menuhandle._MenuHandles [0:select _x_3_0::_Tuple2 0]) (_Tuple2 (select _x_3_1::_Tuple2 0) (select _x_3_1::_Tuple2 1))) ) 
menucreate.disposeShortcutkeys !framePtr_0::I !_x_1 !_x_2 = case _x_1 (menuhandle.MenuItemHandle itemH_1_0 -> case itemH_1_0 (menuhandle._MenuItemHandle m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> case _x_2 (_Tuple2 keys_3_0 tb_3_1 -> case (Data.Maybe.isJust m_2_1) (True -> let key_5_0::C = Data.Maybe.fromJust m_2_1 in <{_Tuple2!3}> (menuhandle.MenuItemHandle itemH_1_0) (_Tuple2 (select (commondef.remove (<{StdChar.==_18}> key_5_0) key_5_0 keys_3_0)::_Tuple3 2) (osmenu.osRemoveMenuShortKey framePtr_0 mOSMenu_2_6 tb_3_1))) (False -> <{_Tuple2!3}> (menuhandle.MenuItemHandle itemH_1_0) (_Tuple2 keys_3_0 tb_3_1)) ) ) ) (menuhandle.SubMenuHandle itemH_1_0 -> case itemH_1_0 (menuhandle._SubMenuHandle mSubHandle_2_0 mSubMenu_2_1 mSubOSMenuNr_2_2 itemHs_2_3 mSubTitle_2_4 mSubSelect_2_5 mSubAtts_2_6 -> let _x_3_0 = commondef.stateMap (menucreate.disposeShortcutkeys framePtr_0) itemHs_2_3 _x_2 in <{_Tuple2!3}> (menuhandle.SubMenuHandle (update itemH_1_0::menuhandle._SubMenuHandle [3:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (menuhandle.RadioMenuHandle itemH_1_0 -> case itemH_1_0 (menuhandle._RadioMenuHandle mRadio_2_0 mRadio_2_1 itemHs_2_2 mRadioSelect_2_3 mRadioAtts_2_4 -> let _x_3_0 = commondef.stateMap (menucreate.disposeShortcutkeys framePtr_0) itemHs_2_2 _x_2 in <{_Tuple2!3}> (menuhandle.RadioMenuHandle (update itemH_1_0::menuhandle._RadioMenuHandle [2:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (menuhandle.MenuListLSHandle itemHs_1_0 -> let _x_2_0 = commondef.stateMap (menucreate.disposeShortcutkeys framePtr_0) itemHs_1_0 _x_2 in <{_Tuple2!3}> (menuhandle.MenuListLSHandle (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (menuhandle.MenuExtendLSHandle mExH_1_0 -> case mExH_1_0 (menuhandle._MenuExtendLSHandle mExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = commondef.stateMap (menucreate.disposeShortcutkeys framePtr_0) itemHs_2_1 _x_2 in <{_Tuple2!3}> (menuhandle.MenuExtendLSHandle (update mExH_1_0::menuhandle._MenuExtendLSHandle [1:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (menuhandle.MenuChangeLSHandle mChH_1_0 -> case mChH_1_0 (menuhandle._MenuChangeLSHandle mChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = commondef.stateMap (menucreate.disposeShortcutkeys framePtr_0) itemHs_2_1 _x_2 in <{_Tuple2!3}> (menuhandle.MenuChangeLSHandle (update mChH_1_0::menuhandle._MenuChangeLSHandle [1:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (_ -> <{_Tuple2!3}> _x_1 _x_2)
menucreate.disposeMenuIds !pid_0 !_x_1 !_x_2 = case _x_1 (menuhandle.MenuItemHandle itemH_1_0 -> case itemH_1_0 (menuhandle._MenuItemHandle m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> case _x_2 (_Tuple2 rt_3_0 it_3_1 -> case (Data.Maybe.isNothing m_2_0) (True -> <{_Tuple2!3}> (menuhandle.MenuItemHandle itemH_1_0) (_Tuple2 rt_3_0 it_3_1)) (False -> <{_Tuple2!3}> (menuhandle.MenuItemHandle itemH_1_0) (_Tuple2 rt_3_0 (select (id.removeIdFromIdTable (Data.Maybe.fromJust m_2_0) it_3_1)::_Tuple2 1))) ) ) ) (menuhandle.MenuReceiverHandle itemH_1_0 -> case itemH_1_0 (menuhandle._MenuReceiverHandle mReceiverHandle_2_0 mReceiverAtts_2_1 -> case mReceiverHandle_2_0 (receiverhandle._ReceiverHandle r_3_0 rASMQ_3_1 rSelect_3_2 rOneWay_3_3 rFun_3_4 r_3_5 rConnected_3_6 -> case _x_2 (_Tuple2 rt_4_0 it_4_1 -> <{_Tuple2!3}> (menuhandle.MenuReceiverHandle itemH_1_0) (_Tuple2 (select (receivertable.removeReceiverFromReceiverTable r_3_0 rt_4_0)::_Tuple2 1) (select (id.removeIdFromIdTable r_3_0 it_4_1)::_Tuple2 1))) ) ) ) (menuhandle.SubMenuHandle itemH_1_0 -> case itemH_1_0 (menuhandle._SubMenuHandle mSubHandle_2_0 mSubMenu_2_1 mSubOSMenuNr_2_2 itemHs_2_3 mSubTitle_2_4 mSubSelect_2_5 mSubAtts_2_6 -> let _x_3_0 = commondef.stateMap (menucreate.disposeMenuIds pid_0) itemHs_2_3 _x_2 in <{_Tuple2!3}> (menuhandle.SubMenuHandle (update itemH_1_0::menuhandle._SubMenuHandle [3:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (menuhandle.RadioMenuHandle itemH_1_0 -> case itemH_1_0 (menuhandle._RadioMenuHandle mRadio_2_0 mRadio_2_1 itemHs_2_2 mRadioSelect_2_3 mRadioAtts_2_4 -> case (Data.Maybe.isNothing mRadio_2_0) (True -> let _x_4_0 = commondef.stateMap (menucreate.disposeMenuIds pid_0) itemHs_2_2 _x_2, _x_4_1 = select _x_4_0::_Tuple2 1 in <{_Tuple2!3}> (menuhandle.RadioMenuHandle (update itemH_1_0::menuhandle._RadioMenuHandle [2:select _x_4_0::_Tuple2 0])) (_Tuple2 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1))) (False -> let _x_4_0 = commondef.stateMap (menucreate.disposeMenuIds pid_0) itemHs_2_2 _x_2, _x_4_1 = select _x_4_0::_Tuple2 1 in <{_Tuple2!3}> (menuhandle.RadioMenuHandle (update itemH_1_0::menuhandle._RadioMenuHandle [2:select _x_4_0::_Tuple2 0])) (_Tuple2 (select _x_4_1::_Tuple2 0) (select (id.removeIdFromIdTable (Data.Maybe.fromJust mRadio_2_0) (select _x_4_1::_Tuple2 1))::_Tuple2 1))) ) ) (menuhandle.MenuSeparatorHandle itemH_1_0 -> case itemH_1_0 (menuhandle._MenuSeparatorHandle mSep_2_0 mOSMenuSeparator_2_1 -> case _x_2 (_Tuple2 rt_3_0 it_3_1 -> case (Data.Maybe.isNothing mSep_2_0) (True -> <{_Tuple2!3}> (menuhandle.MenuSeparatorHandle itemH_1_0) (_Tuple2 rt_3_0 it_3_1)) (False -> <{_Tuple2!3}> (menuhandle.MenuSeparatorHandle itemH_1_0) (_Tuple2 rt_3_0 (select (id.removeIdFromIdTable (Data.Maybe.fromJust mSep_2_0) it_3_1)::_Tuple2 1))) ) ) ) (menuhandle.MenuListLSHandle itemHs_1_0 -> let _x_2_0 = commondef.stateMap (menucreate.disposeMenuIds pid_0) itemHs_1_0 _x_2 in <{_Tuple2!3}> (menuhandle.MenuListLSHandle (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (menuhandle.MenuExtendLSHandle itemH_1_0 -> case itemH_1_0 (menuhandle._MenuExtendLSHandle mExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = commondef.stateMap (menucreate.disposeMenuIds pid_0) itemHs_2_1 _x_2 in <{_Tuple2!3}> (menuhandle.MenuExtendLSHandle (update itemH_1_0::menuhandle._MenuExtendLSHandle [1:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (menuhandle.MenuChangeLSHandle itemH_1_0 -> case itemH_1_0 (menuhandle._MenuChangeLSHandle mChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = commondef.stateMap (menucreate.disposeMenuIds pid_0) itemHs_2_1 _x_2 in <{_Tuple2!3}> (menuhandle.MenuChangeLSHandle (update itemH_1_0::menuhandle._MenuChangeLSHandle [1:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) 


|| Converted Records
:: <{menucreate.gEq_s;}> = {!menucreate.gEq_s}

:: <{menucreate.gEq_ss;}> = {!menucreate.gEq_ss}

:: <{menucreate.gEq_sss;}> = {!menucreate.gEq_sss}

:: <{menucreate.gEq_ssss;}> = {!menucreate.gEq_ssss}

:: <{menucreate.gEq_sssss;}> = {!menucreate.gEq_sssss}

:: <{menucreate.gEq_ssssss;}> = {!menucreate.gEq_ssssss}

:: <{menucreate.gEq_sssssss;}> = {!menucreate.gEq_sssssss}

:: <{menucreate.gEq_ssssssss;}> = {!menucreate.gEq_ssssssss}

:: <{menucreate.gEq_sssssssss;}> = {!menucreate.gEq_sssssssss}

:: <{menucreate.bimap_s;}> = {menucreate.bimap_s}

:: <{menucreate.bimap_ss;}> = {menucreate.bimap_ss}

:: <{menucreate.bimap_sss;}> = {menucreate.bimap_sss}

