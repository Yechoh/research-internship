|| ?module? controlinternal


controlinternal.maybeRemoveCheck !_vEq_0 !_x_1 !ids_2 = case _x_1 (Data.Maybe.Just id_1_0 -> commondef.removeCheck _vEq_0 id_1_0 ids_2) (_ -> <{_Tuple2!3}> False ids_2)
controlinternal.anon_31 !wPtr_0::I !clipRect_1 !able_2::B !_x_3 = case _x_3 (<{wstate._CheckItemInfo`}> check_1_0 check_1_1 check_1_2 check_1_3 -> oswindow.osSetCheckControlSelect wPtr_0 check_1_3 clipRect_1 able_2) 
controlinternal.anon_32 wPtr_0::I clipRect_1 !check_2 able_3::B = commondef.stateMap2 (controlinternal.anon_31 wPtr_0 clipRect_1 able_3) check_2
controlinternal.anon_29 !wPtr_0::I !clipRect_1 !able_2::B !_x_3 = case _x_3 (<{wstate._RadioItemInfo`}> radio_1_0 radio_1_1 radio_1_2 radio_1_3 -> oswindow.osSetRadioControlSelect wPtr_0 radio_1_3 clipRect_1 able_2) 
controlinternal.anon_30 wPtr_0::I clipRect_1 !radio_2 able_3::B = commondef.stateMap2 (controlinternal.anon_29 wPtr_0 clipRect_1 able_3) radio_2
controlinternal.hPtr_33::I info_0 !scroll_1 = case (select scroll_1::_Tuple2 0) (True -> select (Data.Maybe.fromJust (select info_0::windowhandle._CompoundInfo 2))::windowhandle._ScrollInfo 3) (False -> -1) 
controlinternal.vPtr_34::I info_0 !scroll_1 = case (select scroll_1::_Tuple2 1) (True -> select (Data.Maybe.fromJust (select info_0::windowhandle._CompoundInfo 3))::windowhandle._ScrollInfo 3) (False -> -1) 
controlinternal.intersectRectContent !wMetrics_0 !clipRect_1 !info_2 !itemPos_3 !itemSize_4 = commondef.intersectRects clipRect_1 (oswindow.osGetCompoundContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select info_2::windowhandle._CompoundInfo 0) (commondef.toTuple_72 itemSize_4) (_Tuple2 (Data.Maybe.isJust (select info_2::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_2::windowhandle._CompoundInfo 3)))) (commondef.posSizeToRect itemPos_3 itemSize_4))
controlinternal.maybeRemoveCheck_130 !_x_0 !ids_1 = case _x_0 (Data.Maybe.Just id_1_0 -> commondef.removeCheck (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) id_1_0 ids_1) (_ -> <{_Tuple2!3}> False ids_1)
<{controlinternal.enableWItemHandle`_35}> !wMetrics_0 !wPtr_1::I !def_2 !overrule_3::B !contextSelect_4::B !contextShow_5::B !clipRect_6 !_x_7 !itemH_8 !_x_9 = case itemH_8 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case _x_9 (_Tuple2 ids_2_0 tb_2_1 -> let _x_3_0 = <{controlinternal._c;101;23_136}> w_1_2 wPtr_1 clipRect_6 radio_3_2 check_3_3 itemPtr_3_1, itemPtr_3_1 = select itemH_8::<{wstate._WItemHandle`}> 11, radio_3_2::I = select (<{wstateaccess.getWItemRadioInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5))::<{wstate._RadioInfo`}> 0, check_3_3 = select (<{wstateaccess.getWItemCheckInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5))::<{wstate._CheckInfo`}> 0 in case (select _x_3_0::_Tuple2 0) (True -> let _x_5_0 = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0 in case (select _x_5_0::_Tuple2 0) (True -> <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [4:True]) (_Tuple2 (select _x_5_0::_Tuple2 1) (select _x_3_0::_Tuple2 1 contextSelect_4 tb_2_1))) (False -> case overrule_3 (True -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_5_0::_Tuple2 1) (select _x_3_0::_Tuple2 1 (controlinternal._f137_137 contextSelect_4 itemH_8) tb_2_1))) (False -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_5_0::_Tuple2 1) tb_2_1)) ) ) (False -> let _x_5_0::I = <{controlinternal._c;129;31_138}> w_1_2 wPtr_1 itemPtr_5_1 clipRect_6, itemPtr_5_1 = select itemH_8::<{wstate._WItemHandle`}> 11 in case (select _x_5_0::_Tuple3 0) (True -> let _x_7_0 = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0 in case (select _x_7_0::_Tuple2 0) (True -> let _x_9_0 = select _x_5_0::_Tuple3 1 contextSelect_4 wPtr_1 _x_7 clipRect_6 (update itemH_8::<{wstate._WItemHandle`}> [4:True]) (select _x_5_0::_Tuple3 2 contextSelect_4 tb_2_1) in <{_Tuple2!3}> (select _x_9_0::_Tuple2 0) (_Tuple2 (select _x_7_0::_Tuple2 1) (select _x_9_0::_Tuple2 1))) (False -> case overrule_3 (True -> let select_10_0 = controlinternal._f139_139 contextSelect_4 itemH_8, _x_10_1::B = select _x_5_0::_Tuple3 1 select_10_0 wPtr_1 _x_7 clipRect_6 itemH_8 tb_2_1 in <{_Tuple2!3}> (select _x_10_1::_Tuple2 0) (_Tuple2 (select _x_7_0::_Tuple2 1) (select _x_5_0::_Tuple3 2 select_10_0 (select _x_10_1::_Tuple2 1)))) (False -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_7_0::_Tuple2 1) tb_2_1)) ) ) (False -> case w_1_2 (windowhandle.IsCompoundControl -> let _x_8_0 = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0 in case (select _x_8_0::_Tuple2 0) (True -> let info_10_0 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), absolutePos_10_1 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, clipRect1_10_2 = controlinternal.intersectRectContent wMetrics_0 clipRect_6 info_10_0 absolutePos_10_1 (select itemH_8::<{wstate._WItemHandle`}> 10), _x_10_3 = <{windowclipstate.validateCompoundClipState`}> wMetrics_0 False wPtr_1 _x_7 def_2 contextShow_5 itemH_8 tb_2_1, _x_10_4 = <{controldraw.drawCompoundLook`}> wMetrics_0 contextSelect_4 wPtr_1 _x_7 clipRect1_10_2 (select _x_10_3::_Tuple2 0) (select _x_10_3::_Tuple2 1), itemH_10_5 = select _x_10_4::_Tuple2 0, _x_10_6 = wstateaccess.setAllWElements (<{controlinternal.enableWItemHandle`_35}> wMetrics_0 wPtr_1 def_2 True contextSelect_4 (controlinternal._f140_140 contextShow_5 itemH_8) clipRect1_10_2 absolutePos_10_1) (select itemH_10_5::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) (select _x_10_4::_Tuple2 1)), _x_10_7 = select _x_10_6::_Tuple2 1, scroll_10_8 = _Tuple2 (Data.Maybe.isJust (select info_10_0::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_10_0::windowhandle._CompoundInfo 3)) in <{_Tuple2!3}> (update itemH_10_5::<{wstate._WItemHandle`}> [4:True,7:select _x_10_6::_Tuple2 0]) (_Tuple2 (select _x_10_7::_Tuple2 0) (oswindow.osSetCompoundSelect wPtr_1 (select itemH_8::<{wstate._WItemHandle`}> 11) clipRect_6 scroll_10_8 (_Tuple2 (controlinternal.hPtr_33 info_10_0 scroll_10_8) (controlinternal.vPtr_34 info_10_0 scroll_10_8)) contextSelect_4 (select _x_10_7::_Tuple2 1)))) (False -> case overrule_3 (True -> let contextSelect1_11_0 = controlinternal._f142_142 contextSelect_4 itemH_8, info_11_1 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), absolutePos_11_2 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, clipRect1_11_3 = controlinternal.intersectRectContent wMetrics_0 clipRect_6 info_11_1 absolutePos_11_2 (select itemH_8::<{wstate._WItemHandle`}> 10), _x_11_4 = <{windowclipstate.validateCompoundClipState`}> wMetrics_0 False wPtr_1 _x_7 def_2 contextShow_5 itemH_8 tb_2_1, _x_11_5 = <{controldraw.drawCompoundLook`}> wMetrics_0 contextSelect1_11_0 wPtr_1 _x_7 clipRect1_11_3 (select _x_11_4::_Tuple2 0) (select _x_11_4::_Tuple2 1), itemH_11_6 = select _x_11_5::_Tuple2 0, _x_11_7 = wstateaccess.setAllWElements (<{controlinternal.enableWItemHandle`_35}> wMetrics_0 wPtr_1 def_2 overrule_3 contextSelect1_11_0 (controlinternal._f141_141 contextShow_5 itemH_8) clipRect1_11_3 absolutePos_11_2) (select itemH_11_6::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) (select _x_11_5::_Tuple2 1)), _x_11_8 = select _x_11_7::_Tuple2 1, scroll_11_9::B = _Tuple2 (Data.Maybe.isJust (select info_11_1::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_11_1::windowhandle._CompoundInfo 3)) in <{_Tuple2!3}> (update itemH_11_6::<{wstate._WItemHandle`}> [7:select _x_11_7::_Tuple2 0]) (_Tuple2 (select _x_11_8::_Tuple2 0) (oswindow.osSetCompoundSelect wPtr_1 (select itemH_8::<{wstate._WItemHandle`}> 11) clipRect_6 scroll_11_9 (_Tuple2 (controlinternal.hPtr_33 info_11_1 scroll_11_9) (controlinternal.vPtr_34 info_11_1 scroll_11_9)) contextSelect1_11_0 (select _x_11_8::_Tuple2 1)))) (False -> let absolutePos_11_0 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, _x_11_1 = wstateaccess.setAllWElements (<{controlinternal.enableWItemHandle`_35}> wMetrics_0 wPtr_1 def_2 overrule_3 (controlinternal._f143_143 contextSelect_4 itemH_8) (controlinternal._f144_144 contextShow_5 itemH_8) (controlinternal.intersectRectContent wMetrics_0 clipRect_6 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5)) absolutePos_11_0 (select itemH_8::<{wstate._WItemHandle`}> 10)) absolutePos_11_0) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1), _x_11_2 = select _x_11_1::_Tuple2 1 in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_11_1::_Tuple2 0]) (_Tuple2 (select _x_11_2::_Tuple2 0) (select _x_11_2::_Tuple2 1))) ) ) (windowhandle.IsLayoutControl -> let _x_8_0::B = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0, found_8_1 = select _x_8_0::_Tuple2 0, absolutePos_8_2 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, _x_8_3 = wstateaccess.setAllWElements (<{controlinternal.enableWItemHandle`_35}> wMetrics_0 wPtr_1 def_2 (controlinternal._f145_145 overrule_3 found_8_1) (<{controlinternal._if;172;35_146}> found_8_1 contextSelect_4 itemSelect_8_5) (controlinternal._f147_147 contextShow_5 itemH_8) (commondef.intersectRects clipRect_6 (commondef.posSizeToRect absolutePos_8_2 (select itemH_8::<{wstate._WItemHandle`}> 10))) absolutePos_8_2) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1), _x_8_4::B = select _x_8_3::_Tuple2 1, itemSelect_8_5 = select itemH_8::<{wstate._WItemHandle`}> 4 in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [4:controlinternal._f148_148 found_8_1 itemSelect_8_5,7:select _x_8_3::_Tuple2 0]) (_Tuple2 (select _x_8_4::_Tuple2 0) (select _x_8_4::_Tuple2 1))) (windowhandle.IsOtherControl _x_7_0 -> let _x_8_0 = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0 in case (select _x_8_0::_Tuple2 0) (True -> <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [4:True]) (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1)) (False -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1)) ) ) ) ) ) 
controlinternal._f148_148::B !found_0::B itemSelect_1::B = case found_0 (True -> True) (_ -> itemSelect_1)
controlinternal._f147_147::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
<{controlinternal._if;172;35_146}>::B !found_0::B !contextSelect_1::B itemSelect_2::B = case found_0 (True -> contextSelect_1) (_ -> case contextSelect_1 (True -> itemSelect_2) (False -> False) )
controlinternal._f145_145::B !overrule_0::B found_1::B = case overrule_0 (True -> True) (_ -> found_1)
controlinternal._f144_144::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f143_143::B !contextSelect_0::B itemH_1 = case contextSelect_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f142_142::B !contextSelect_0::B itemH_1 = case contextSelect_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f141_141::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f140_140::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f139_139::B !contextSelect_0::B itemH_1 = case contextSelect_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
<{controlinternal._c;129;31_138}> !w_0 wPtr_1::I itemPtr_2::I clipRect_3 = case w_0 (windowhandle.IsCustomButtonControl -> _Tuple3 True <{controldraw.drawCustomButtonLook`}> (oswindow.osSetCustomButtonControlSelect wPtr_1 itemPtr_2 clipRect_3)) (windowhandle.IsCustomControl -> _Tuple3 True <{controldraw.drawCustomLook`}> (oswindow.osSetCustomControlSelect wPtr_1 itemPtr_2 clipRect_3)) (_ -> _Tuple3 False StdMisc.undef StdMisc.undef)
controlinternal._f137_137::B !contextSelect_0::B itemH_1 = case contextSelect_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
<{controlinternal._c;101;23_136}> !w_0 wPtr_1::I clipRect_2 radio_3 check_4 itemPtr_5::I = case w_0 (windowhandle.IsRadioControl -> _Tuple2 True (controlinternal.anon_30 wPtr_1 clipRect_2 radio_3)) (windowhandle.IsCheckControl -> _Tuple2 True (controlinternal.anon_32 wPtr_1 clipRect_2 check_4)) (windowhandle.IsPopUpControl -> _Tuple2 True (oswindow.osSetPopUpControlSelect wPtr_1 itemPtr_5 clipRect_2)) (windowhandle.IsSliderControl -> _Tuple2 True (oswindow.osSetSliderControlSelect wPtr_1 itemPtr_5 clipRect_2)) (windowhandle.IsTextControl -> _Tuple2 True (oswindow.osSetTextControlSelect wPtr_1 itemPtr_5 clipRect_2)) (windowhandle.IsEditControl -> _Tuple2 True (oswindow.osSetEditControlSelect wPtr_1 itemPtr_5 clipRect_2)) (windowhandle.IsButtonControl -> _Tuple2 True (oswindow.osSetButtonControlSelect wPtr_1 itemPtr_5 clipRect_2)) (_ -> _Tuple2 False StdMisc.undef)
controlinternal.getContentRect !wMetrics_0 !_x_1 !size_2 = case _x_1 (windowhandle.WindowInfo w_1_0 -> oswindow.osGetWindowContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select w_1_0::windowhandle._WindowData 0) (commondef.toTuple_72 size_2) (_Tuple2 (Data.Maybe.isJust (select w_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select w_1_0::windowhandle._WindowData 3)))) (commondef.sizeToRect size_2)) (windowhandle.GameWindowInfo gw_1_0 -> commondef.sizeToRect (select gw_1_0::windowhandle._GameWindowData 1)) (windowhandle.NoWindowInfo -> commondef.sizeToRect size_2) 
controlinternal.enablecontrols !ids_0 !overrule_1::B !wMetrics_2 !wPtr_3::I !wH_4 !tb_5::I = case wH_4 (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setAllWElements (<{controlinternal.enableWItemHandle`_35}> wMetrics_2 wPtr_3 whDefault_1_10 overrule_1 <{whSelect`_1_8}> <{whShow`_1_7}> (controlinternal.getContentRect wMetrics_2 (select wH_4::<{wstate._WindowHandle`}> 5) <{whSize`_1_12}>) StdIOBasic.zero_21) wh_1_6 (_Tuple2 ids_0 tb_5) in <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple2 0]) (select (select _x_2_0::_Tuple2 1)::_Tuple2 1)) 
controlinternal.anon_38 !wPtr_0::I !clipRect_1 !able_2::B !_x_3 = case _x_3 (<{wstate._CheckItemInfo`}> check_1_0 check_1_1 check_1_2 check_1_3 -> oswindow.osSetCheckControlSelect wPtr_0 check_1_3 clipRect_1 able_2) 
controlinternal.anon_39 wPtr_0::I clipRect_1 !check_2 able_3::B = commondef.stateMap2 (controlinternal.anon_38 wPtr_0 clipRect_1 able_3) check_2
controlinternal.anon_36 !wPtr_0::I !clipRect_1 !able_2::B !_x_3 = case _x_3 (<{wstate._RadioItemInfo`}> radio_1_0 radio_1_1 radio_1_2 radio_1_3 -> oswindow.osSetRadioControlSelect wPtr_0 radio_1_3 clipRect_1 able_2) 
controlinternal.anon_37 wPtr_0::I clipRect_1 !radio_2 able_3::B = commondef.stateMap2 (controlinternal.anon_36 wPtr_0 clipRect_1 able_3) radio_2
controlinternal.hPtr_40::I info_0 !scroll_1 = case (select scroll_1::_Tuple2 0) (True -> select (Data.Maybe.fromJust (select info_0::windowhandle._CompoundInfo 2))::windowhandle._ScrollInfo 3) (False -> -1) 
controlinternal.vPtr_41::I info_0 !scroll_1 = case (select scroll_1::_Tuple2 1) (True -> select (Data.Maybe.fromJust (select info_0::windowhandle._CompoundInfo 3))::windowhandle._ScrollInfo 3) (False -> -1) 
<{controlinternal.disableWItemHandle`_42}> !wMetrics_0 !wPtr_1::I !def_2 !overrule_3::B !contextSelect_4::B !contextShow_5::B !clipRect_6 !_x_7 !itemH_8 !_x_9 = case itemH_8 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case _x_9 (_Tuple2 ids_2_0 tb_2_1 -> let _x_3_0 = <{controlinternal._c;220;23_149}> w_1_2 wPtr_1 clipRect_6 radio_3_2 check_3_3 itemPtr_3_1, itemPtr_3_1 = select itemH_8::<{wstate._WItemHandle`}> 11, radio_3_2::I = select (<{wstateaccess.getWItemRadioInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5))::<{wstate._RadioInfo`}> 0, check_3_3 = select (<{wstateaccess.getWItemCheckInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5))::<{wstate._CheckInfo`}> 0 in case (select _x_3_0::_Tuple2 0) (True -> let _x_5_0 = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0 in case (select _x_5_0::_Tuple2 0) (True -> <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [4:False]) (_Tuple2 (select _x_5_0::_Tuple2 1) (select _x_3_0::_Tuple2 1 False tb_2_1))) (False -> case overrule_3 (True -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_5_0::_Tuple2 1) (select _x_3_0::_Tuple2 1 (controlinternal._f150_150 contextSelect_4 itemH_8) tb_2_1))) (False -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_5_0::_Tuple2 1) tb_2_1)) ) ) (False -> let _x_5_0::I = <{controlinternal._c;248;31_151}> w_1_2 wPtr_1 itemPtr_5_1 clipRect_6, itemPtr_5_1 = select itemH_8::<{wstate._WItemHandle`}> 11 in case (select _x_5_0::_Tuple3 0) (True -> let _x_7_0 = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0 in case (select _x_7_0::_Tuple2 0) (True -> let _x_9_0 = select _x_5_0::_Tuple3 1 False wPtr_1 _x_7 clipRect_6 (update itemH_8::<{wstate._WItemHandle`}> [4:False]) (select _x_5_0::_Tuple3 2 False tb_2_1) in <{_Tuple2!3}> (select _x_9_0::_Tuple2 0) (_Tuple2 (select _x_7_0::_Tuple2 1) (select _x_9_0::_Tuple2 1))) (False -> case overrule_3 (True -> let select_10_0 = controlinternal._f152_152 contextSelect_4 itemH_8, _x_10_1::B = select _x_5_0::_Tuple3 1 select_10_0 wPtr_1 _x_7 clipRect_6 itemH_8 tb_2_1 in <{_Tuple2!3}> (select _x_10_1::_Tuple2 0) (_Tuple2 (select _x_7_0::_Tuple2 1) (select _x_5_0::_Tuple3 2 select_10_0 (select _x_10_1::_Tuple2 1)))) (False -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_7_0::_Tuple2 1) tb_2_1)) ) ) (False -> case w_1_2 (windowhandle.IsCompoundControl -> let _x_8_0 = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0 in case (select _x_8_0::_Tuple2 0) (True -> let info_10_0 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), absolutePos_10_1 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, clipRect1_10_2 = controlinternal.intersectRectContent wMetrics_0 clipRect_6 info_10_0 absolutePos_10_1 (select itemH_8::<{wstate._WItemHandle`}> 10), _x_10_3 = <{windowclipstate.validateCompoundClipState`}> wMetrics_0 False wPtr_1 _x_7 def_2 contextShow_5 (update itemH_8::<{wstate._WItemHandle`}> [4:False]) tb_2_1, _x_10_4 = <{controldraw.drawCompoundLook`}> wMetrics_0 False wPtr_1 _x_7 clipRect1_10_2 (select _x_10_3::_Tuple2 0) (select _x_10_3::_Tuple2 1), itemH_10_5 = select _x_10_4::_Tuple2 0, _x_10_6 = wstateaccess.setAllWElements (<{controlinternal.disableWItemHandle`_42}> wMetrics_0 wPtr_1 def_2 True False (controlinternal._f153_153 contextShow_5 itemH_8) clipRect1_10_2 absolutePos_10_1) (select itemH_10_5::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) (select _x_10_4::_Tuple2 1)), _x_10_7 = select _x_10_6::_Tuple2 1, scroll_10_8 = _Tuple2 (Data.Maybe.isJust (select info_10_0::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_10_0::windowhandle._CompoundInfo 3)) in <{_Tuple2!3}> (update itemH_10_5::<{wstate._WItemHandle`}> [7:select _x_10_6::_Tuple2 0]) (_Tuple2 (select _x_10_7::_Tuple2 0) (oswindow.osSetCompoundSelect wPtr_1 (select itemH_8::<{wstate._WItemHandle`}> 11) clipRect_6 scroll_10_8 (_Tuple2 (controlinternal.hPtr_40 info_10_0 scroll_10_8) (controlinternal.vPtr_41 info_10_0 scroll_10_8)) False (select _x_10_7::_Tuple2 1)))) (False -> case overrule_3 (True -> let contextSelect1_11_0 = controlinternal._f155_155 contextSelect_4 itemH_8, info_11_1 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), absolutePos_11_2 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, clipRect1_11_3 = controlinternal.intersectRectContent wMetrics_0 clipRect_6 info_11_1 absolutePos_11_2 (select itemH_8::<{wstate._WItemHandle`}> 10), _x_11_4 = <{windowclipstate.validateCompoundClipState`}> wMetrics_0 False wPtr_1 _x_7 def_2 contextShow_5 itemH_8 tb_2_1, _x_11_5 = <{controldraw.drawCompoundLook`}> wMetrics_0 contextSelect1_11_0 wPtr_1 _x_7 clipRect1_11_3 (select _x_11_4::_Tuple2 0) (select _x_11_4::_Tuple2 1), itemH_11_6 = select _x_11_5::_Tuple2 0, _x_11_7 = wstateaccess.setAllWElements (<{controlinternal.disableWItemHandle`_42}> wMetrics_0 wPtr_1 def_2 overrule_3 contextSelect1_11_0 (controlinternal._f154_154 contextShow_5 itemH_8) clipRect1_11_3 absolutePos_11_2) (select itemH_11_6::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) (select _x_11_5::_Tuple2 1)), _x_11_8 = select _x_11_7::_Tuple2 1, scroll_11_9::B = _Tuple2 (Data.Maybe.isJust (select info_11_1::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_11_1::windowhandle._CompoundInfo 3)) in <{_Tuple2!3}> (update itemH_11_6::<{wstate._WItemHandle`}> [7:select _x_11_7::_Tuple2 0]) (_Tuple2 (select _x_11_8::_Tuple2 0) (oswindow.osSetCompoundSelect wPtr_1 (select itemH_8::<{wstate._WItemHandle`}> 11) clipRect_6 scroll_11_9 (_Tuple2 (controlinternal.hPtr_40 info_11_1 scroll_11_9) (controlinternal.vPtr_41 info_11_1 scroll_11_9)) contextSelect1_11_0 (select _x_11_8::_Tuple2 1)))) (False -> let absolutePos_11_0 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, _x_11_1 = wstateaccess.setAllWElements (<{controlinternal.disableWItemHandle`_42}> wMetrics_0 wPtr_1 def_2 overrule_3 (controlinternal._f156_156 contextSelect_4 itemH_8) (controlinternal._f157_157 contextShow_5 itemH_8) (controlinternal.intersectRectContent wMetrics_0 clipRect_6 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5)) absolutePos_11_0 (select itemH_8::<{wstate._WItemHandle`}> 10)) absolutePos_11_0) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1), _x_11_2 = select _x_11_1::_Tuple2 1 in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_11_1::_Tuple2 0]) (_Tuple2 (select _x_11_2::_Tuple2 0) (select _x_11_2::_Tuple2 1))) ) ) (windowhandle.IsLayoutControl -> let _x_8_0::B = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0, found_8_1 = select _x_8_0::_Tuple2 0, absolutePos_8_2 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, _x_8_3 = wstateaccess.setAllWElements (<{controlinternal.disableWItemHandle`_42}> wMetrics_0 wPtr_1 def_2 (controlinternal._f158_158 found_8_1 overrule_3) (<{controlinternal._if;292;35_159}> found_8_1 contextSelect_4 itemSelect_8_5) (controlinternal._f160_160 contextShow_5 itemH_8) (commondef.intersectRects clipRect_6 (commondef.posSizeToRect absolutePos_8_2 (select itemH_8::<{wstate._WItemHandle`}> 10))) absolutePos_8_2) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1), _x_8_4::B = select _x_8_3::_Tuple2 1, itemSelect_8_5 = select itemH_8::<{wstate._WItemHandle`}> 4 in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [4:<{controlinternal._if;294;57_161}> found_8_1 itemSelect_8_5,7:select _x_8_3::_Tuple2 0]) (_Tuple2 (select _x_8_4::_Tuple2 0) (select _x_8_4::_Tuple2 1))) (windowhandle.IsOtherControl _x_7_0 -> let _x_8_0 = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0 in case (select _x_8_0::_Tuple2 0) (True -> <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [4:False]) (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1)) (False -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1)) ) ) ) ) ) 
<{controlinternal._if;294;57_161}>::B !found_0::B itemSelect_1::B = case found_0 (True -> False) (_ -> itemSelect_1)
controlinternal._f160_160::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
<{controlinternal._if;292;35_159}>::B !found_0::B contextSelect_1::B itemSelect_2::B = case found_0 (True -> False) (_ -> case contextSelect_1 (True -> itemSelect_2) (False -> False) )
controlinternal._f158_158::B !found_0::B overrule_1::B = case found_0 (True -> True) (_ -> overrule_1)
controlinternal._f157_157::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f156_156::B !contextSelect_0::B itemH_1 = case contextSelect_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f155_155::B !contextSelect_0::B itemH_1 = case contextSelect_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f154_154::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f153_153::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f152_152::B !contextSelect_0::B itemH_1 = case contextSelect_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
<{controlinternal._c;248;31_151}> !w_0 wPtr_1::I itemPtr_2::I clipRect_3 = case w_0 (windowhandle.IsCustomButtonControl -> _Tuple3 True <{controldraw.drawCustomButtonLook`}> (oswindow.osSetCustomButtonControlSelect wPtr_1 itemPtr_2 clipRect_3)) (windowhandle.IsCustomControl -> _Tuple3 True <{controldraw.drawCustomLook`}> (oswindow.osSetCustomControlSelect wPtr_1 itemPtr_2 clipRect_3)) (_ -> _Tuple3 False StdMisc.undef StdMisc.undef)
controlinternal._f150_150::B !contextSelect_0::B itemH_1 = case contextSelect_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
<{controlinternal._c;220;23_149}> !w_0 wPtr_1::I clipRect_2 radio_3 check_4 itemPtr_5::I = case w_0 (windowhandle.IsRadioControl -> _Tuple2 True (controlinternal.anon_37 wPtr_1 clipRect_2 radio_3)) (windowhandle.IsCheckControl -> _Tuple2 True (controlinternal.anon_39 wPtr_1 clipRect_2 check_4)) (windowhandle.IsPopUpControl -> _Tuple2 True (oswindow.osSetPopUpControlSelect wPtr_1 itemPtr_5 clipRect_2)) (windowhandle.IsSliderControl -> _Tuple2 True (oswindow.osSetSliderControlSelect wPtr_1 itemPtr_5 clipRect_2)) (windowhandle.IsTextControl -> _Tuple2 True (oswindow.osSetTextControlSelect wPtr_1 itemPtr_5 clipRect_2)) (windowhandle.IsEditControl -> _Tuple2 True (oswindow.osSetEditControlSelect wPtr_1 itemPtr_5 clipRect_2)) (windowhandle.IsButtonControl -> _Tuple2 True (oswindow.osSetButtonControlSelect wPtr_1 itemPtr_5 clipRect_2)) (_ -> _Tuple2 False StdMisc.undef)
controlinternal.disablecontrols !ids_0 !overrule_1::B !wMetrics_2 !wPtr_3::I !wH_4 !tb_5::I = case wH_4 (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setAllWElements (<{controlinternal.disableWItemHandle`_42}> wMetrics_2 wPtr_3 whDefault_1_10 overrule_1 <{whSelect`_1_8}> <{whShow`_1_7}> (controlinternal.getContentRect wMetrics_2 (select wH_4::<{wstate._WindowHandle`}> 5) <{whSize`_1_12}>) StdIOBasic.zero_21) wh_1_6 (_Tuple2 ids_0 tb_5) in <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple2 0]) (select (select _x_2_0::_Tuple2 1)::_Tuple2 1)) 
controlinternal.setradio_43::I !wPtr_0::I !osShow_1::B !clipRect_2 !_x_3 !tb_4::I = case _x_3 (<{wstate._RadioItemInfo`}> radio_1_0 radio_1_1 radio_1_2 radio_1_3 -> oswindow.osSetRadioControlShow wPtr_0 radio_1_3 clipRect_2 osShow_1 tb_4) 
controlinternal.setcheck_44::I !wPtr_0::I !osShow_1::B !clipRect_2 !_x_3 !tb_4::I = case _x_3 (<{wstate._CheckItemInfo`}> check_1_0 check_1_1 check_1_2 check_1_3 -> oswindow.osSetCheckControlShow wPtr_0 check_1_3 clipRect_2 osShow_1 tb_4) 
controlinternal.anon_45 _x_0 _x_1 _x_2 _x_3 itemH_4 tb_5 = _Tuple2 itemH_4 tb_5
controlinternal.anon_46 _x_0 _x_1 _x_2 _x_3 itemH_4 tb_5 = _Tuple2 itemH_4 tb_5
controlinternal.setWItemShowStates_47 !wMetrics_0 !wPtr_1::I !overrule_2::B !itemsShow_3::B !contextShow_4::B !contextSelect_5 !clipRect_6 !_x_7 !itemH_8 !_x_9 = case itemH_8 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsRadioControl -> case _x_9 (_Tuple2 ids_3_0 tb_3_1 -> let _x_4_0::B = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_3_0, found_4_1 = select _x_4_0::_Tuple2 0 in case (case (StdBool.not found_4_1) (True -> StdBool.not overrule_2) (False -> False) ) (True -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_4_0::_Tuple2 1) tb_3_1)) (False -> let itemH_6_0 = <{controlinternal._if;329;35_162}> found_4_1 itemH_8 itemsShow_3 in <{_Tuple2!3}> itemH_6_0 (_Tuple2 (select _x_4_0::_Tuple2 1) (commondef.stateMap2 (controlinternal.setradio_43 wPtr_1 (<{controlinternal._if;328;35_163}> overrule_2 contextShow_4 itemsShow_3) clipRect_6) (select (<{wstateaccess.getWItemRadioInfo`}> (select itemH_6_0::<{wstate._WItemHandle`}> 5))::<{wstate._RadioInfo`}> 0) tb_3_1))) ) ) (windowhandle.IsCheckControl -> case _x_9 (_Tuple2 ids_3_0 tb_3_1 -> let _x_4_0::B = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_3_0, found_4_1 = select _x_4_0::_Tuple2 0 in case (case (StdBool.not found_4_1) (True -> StdBool.not overrule_2) (False -> False) ) (True -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_4_0::_Tuple2 1) tb_3_1)) (False -> let itemH_6_0 = <{controlinternal._if;344;35_164}> found_4_1 itemH_8 itemsShow_3 in <{_Tuple2!3}> itemH_6_0 (_Tuple2 (select _x_4_0::_Tuple2 1) (commondef.stateMap2 (controlinternal.setcheck_44 wPtr_1 (<{controlinternal._if;343;35_165}> overrule_2 contextShow_4 itemsShow_3) clipRect_6) (select (<{wstateaccess.getWItemCheckInfo`}> (select itemH_6_0::<{wstate._WItemHandle`}> 5))::<{wstate._CheckInfo`}> 0) tb_3_1))) ) ) (windowhandle.IsTextControl -> case _x_9 (_Tuple2 ids_3_0 tb_3_1 -> let _x_4_0::B = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_3_0, found_4_1 = select _x_4_0::_Tuple2 0 in case (case (StdBool.not found_4_1) (True -> StdBool.not overrule_2) (False -> False) ) (True -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_4_0::_Tuple2 1) tb_3_1)) (False -> let itemH_6_0 = <{controlinternal._if;359;35_166}> found_4_1 itemH_8 itemsShow_3 in <{_Tuple2!3}> itemH_6_0 (_Tuple2 (select _x_4_0::_Tuple2 1) (oswindow.osSetTextControlShow wPtr_1 (select itemH_6_0::<{wstate._WItemHandle`}> 11) clipRect_6 (commondef.posSizeToRect (StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7) (select itemH_6_0::<{wstate._WItemHandle`}> 10)) (<{controlinternal._if;358;35_167}> overrule_2 contextShow_4 itemsShow_3) (select (<{wstateaccess.getWItemTextInfo`}> (select itemH_6_0::<{wstate._WItemHandle`}> 5))::windowhandle._TextInfo 0) tb_3_1))) ) ) (_ -> case _x_9 (_Tuple2 ids_2_0 tb_2_1 -> let _x_3_0 = <{controlinternal._c;379;35_168}> w_1_2 in case (select _x_3_0::_Tuple2 0) (True -> let _x_5_0::B = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0, found_5_1 = select _x_5_0::_Tuple2 0 in case (case (StdBool.not found_5_1) (True -> StdBool.not overrule_2) (False -> False) ) (True -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_5_0::_Tuple2 1) tb_2_1)) (False -> let itemH_7_0 = <{controlinternal._if;375;35_169}> found_5_1 itemH_8 itemsShow_3 in <{_Tuple2!3}> itemH_7_0 (_Tuple2 (select _x_5_0::_Tuple2 1) (select _x_3_0::_Tuple2 1 wPtr_1 (select itemH_7_0::<{wstate._WItemHandle`}> 11) clipRect_6 (<{controlinternal._if;374;35_170}> overrule_2 contextShow_4 itemsShow_3) tb_2_1))) ) (False -> let _x_5_0 = <{controlinternal._c;402;35_171}> w_1_2 in case (select _x_5_0::_Tuple3 0) (True -> let _x_7_0::B = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0, found_7_1 = select _x_7_0::_Tuple2 0 in case (case (StdBool.not found_7_1) (True -> StdBool.not overrule_2) (False -> False) ) (True -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_7_0::_Tuple2 1) tb_2_1)) (False -> let osShow_9_0 = <{controlinternal._if;392;35_174}> overrule_2 contextShow_4 itemsShow_3, itemH_9_1 = <{controlinternal._if;393;35_173}> found_7_1 itemH_8 itemsShow_3, _x_9_2 = <{controlinternal._if;394;35_172}> osShow_9_0 customDraw_9_3 (select itemH_9_1::<{wstate._WItemHandle`}> 4) wPtr_1 _x_7 clipRect_6 itemH_9_1 (select _x_5_0::_Tuple3 2 wPtr_1 (select itemH_9_1::<{wstate._WItemHandle`}> 11) (commondef.posSizeToRect (StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7) (select itemH_9_1::<{wstate._WItemHandle`}> 10)) clipRect_6 osShow_9_0 tb_2_1), customDraw_9_3::B = select _x_5_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_9_2::_Tuple2 0) (_Tuple2 (select _x_7_0::_Tuple2 1) (select _x_9_2::_Tuple2 1))) ) (False -> case w_1_2 (windowhandle.IsCompoundControl -> let _x_8_0::B = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0, found_8_1 = select _x_8_0::_Tuple2 0 in case (case (StdBool.not found_8_1) (True -> StdBool.not overrule_2) (False -> False) ) (True -> let absolutePos_10_0::B = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, _x_10_1 = wstateaccess.setAllWElements (controlinternal.setWItemShowStates_47 wMetrics_0 wPtr_1 (controlinternal._f175_175 overrule_2 found_8_1 itemShow_10_3 itemsShow_3) itemsShow_3 (controlinternal._f176_176 contextShow_4 found_8_1 itemsShow_3 itemShow_10_3) (<{controlinternal._if;427;35_177}> (StdIOCommon.enabled contextSelect_5) itemH_8 contextSelect_5) (controlinternal.intersectRectContent wMetrics_0 clipRect_6 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5)) absolutePos_10_0 (select itemH_8::<{wstate._WItemHandle`}> 10)) absolutePos_10_0) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1), _x_10_2 = select _x_10_1::_Tuple2 1, itemShow_10_3 = select itemH_8::<{wstate._WItemHandle`}> 3 in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_10_1::_Tuple2 0]) (_Tuple2 (select _x_10_2::_Tuple2 0) (select _x_10_2::_Tuple2 1))) (False -> let osShow_10_0::B = <{controlinternal._if;418;35_183}> overrule_2 contextShow_4 itemsShow_3, itemH_10_1 = <{controlinternal._if;416;35_182}> found_8_1 itemH_8 itemHs_10_13 itemsShow_3, absolutePos_10_2 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7, itemSize_10_3 = select itemH_8::<{wstate._WItemHandle`}> 10, overrule1_10_4 = controlinternal._f181_181 overrule_2 found_8_1 itemShow_10_14 itemsShow_3, contextShow1_10_5 = controlinternal._f180_180 contextShow_4 found_8_1 itemsShow_3 itemShow_10_14, contextSelect1_10_6 = <{controlinternal._if;427;35_179}> (StdIOCommon.enabled contextSelect_5) itemH_8 contextSelect_5, info_10_7 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), clipRect1_10_8 = controlinternal.intersectRectContent wMetrics_0 clipRect_6 info_10_7 absolutePos_10_2 itemSize_10_3, ids_10_9::B = select _x_8_0::_Tuple2 1, _x_10_10::B = wstateaccess.setAllWElements (controlinternal.setWItemShowStates_47 wMetrics_0 wPtr_1 overrule1_10_4 itemsShow_3 contextShow1_10_5 contextSelect1_10_6 clipRect1_10_8 absolutePos_10_2) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 ids_10_9 tb_2_1), _x_10_11 = select _x_10_10::_Tuple2 1, _x_10_12 = <{controlinternal._if;419;35_178}> osShow_10_0 wMetrics_0 (select itemH_10_1::<{wstate._WItemHandle`}> 4) wPtr_1 _x_7 clipRect_6 itemH_10_1 (oswindow.osSetCompoundShow wPtr_1 (select itemH_10_1::<{wstate._WItemHandle`}> 11) (commondef.posSizeToRect absolutePos_10_2 itemSize_10_3) clipRect_6 osShow_10_0 (select _x_10_11::_Tuple2 1)), itemHs_10_13 = select _x_10_10::_Tuple2 0, itemShow_10_14::B = select itemH_8::<{wstate._WItemHandle`}> 3 in <{_Tuple2!3}> (select _x_10_12::_Tuple2 0) (_Tuple2 (select _x_10_11::_Tuple2 0) (select _x_10_12::_Tuple2 1))) ) (windowhandle.IsLayoutControl -> let _x_8_0::B = controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0, found_8_1 = select _x_8_0::_Tuple2 0, _x_8_2 = wstateaccess.setAllWElements (controlinternal.setWItemShowStates_47 wMetrics_0 wPtr_1 (controlinternal._f184_184 overrule_2 found_8_1 itemShow_8_4 itemsShow_3) itemsShow_3 (controlinternal._f185_185 contextShow_4 found_8_1 itemsShow_3 itemShow_8_4) (<{controlinternal._if;442;35_186}> (StdIOCommon.enabled contextSelect_5) itemH_8 contextSelect_5) clipRect_6 (StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) _x_7)) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_8_0::_Tuple2 1) tb_2_1), _x_8_3::B = select _x_8_2::_Tuple2 1, itemShow_8_4 = select itemH_8::<{wstate._WItemHandle`}> 3 in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [3:<{controlinternal._if;437;55_187}> found_8_1 itemsShow_3 itemShow_8_4,7:select _x_8_2::_Tuple2 0]) (_Tuple2 (select _x_8_3::_Tuple2 0) (select _x_8_3::_Tuple2 1))) (windowhandle.IsOtherControl _x_7_0 -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select (controlinternal.maybeRemoveCheck_130 (select itemH_8::<{wstate._WItemHandle`}> 0) ids_2_0)::_Tuple2 1) tb_2_1)) ) ) ) )) 
<{controlinternal._if;437;55_187}>::B !found_0::B itemsShow_1::B itemShow_2::B = case found_0 (True -> itemsShow_1) (_ -> itemShow_2)
<{controlinternal._if;442;35_186}> !_x_0::B itemH_1 contextSelect_2 = case _x_0 (True -> case (select itemH_1::<{wstate._WItemHandle`}> 4) (True -> StdIOCommon.Able) (False -> StdIOCommon.Unable) ) (_ -> contextSelect_2)
controlinternal._f185_185::B !contextShow_0::B found_1::B itemsShow_2::B itemShow_3::B = case contextShow_0 (True -> case found_1 (True -> itemsShow_2) (False -> itemShow_3) ) (_ -> False)
controlinternal._f184_184::B !overrule_0::B found_1::B itemShow_2::B itemsShow_3::B = case overrule_0 (True -> True) (_ -> case found_1 (True -> StdBool.not (<{StdBool.==_3}> itemShow_2 itemsShow_3)) (False -> False) )
<{controlinternal._if;418;35_183}>::B !overrule_0::B !contextShow_1::B itemsShow_2::B = case overrule_0 (True -> contextShow_1) (_ -> case contextShow_1 (True -> itemsShow_2) (False -> False) )
<{controlinternal._if;416;35_182}> !found_0::B !itemH_1 itemHs_2 itemsShow_3::B = case found_0 (True -> update (update itemH_1::<{wstate._WItemHandle`}> [7:itemHs_2])::<{wstate._WItemHandle`}> [3:itemsShow_3]) (_ -> update itemH_1::<{wstate._WItemHandle`}> [7:itemHs_2])
controlinternal._f181_181::B !overrule_0::B found_1::B itemShow_2::B itemsShow_3::B = case overrule_0 (True -> True) (_ -> case found_1 (True -> StdBool.not (<{StdBool.==_3}> itemShow_2 itemsShow_3)) (False -> False) )
controlinternal._f180_180::B !contextShow_0::B found_1::B itemsShow_2::B itemShow_3::B = case contextShow_0 (True -> case found_1 (True -> itemsShow_2) (False -> itemShow_3) ) (_ -> False)
<{controlinternal._if;427;35_179}> !_x_0::B itemH_1 contextSelect_2 = case _x_0 (True -> case (select itemH_1::<{wstate._WItemHandle`}> 4) (True -> StdIOCommon.Able) (False -> StdIOCommon.Unable) ) (_ -> contextSelect_2)
<{controlinternal._if;419;35_178}> !osShow_0::B wMetrics_1 = case osShow_0 (True -> <{controldraw.drawCompoundLook`}> wMetrics_1) (_ -> controlinternal.anon_46)
<{controlinternal._if;427;35_177}> !_x_0::B itemH_1 contextSelect_2 = case _x_0 (True -> case (select itemH_1::<{wstate._WItemHandle`}> 4) (True -> StdIOCommon.Able) (False -> StdIOCommon.Unable) ) (_ -> contextSelect_2)
controlinternal._f176_176::B !contextShow_0::B found_1::B itemsShow_2::B itemShow_3::B = case contextShow_0 (True -> case found_1 (True -> itemsShow_2) (False -> itemShow_3) ) (_ -> False)
controlinternal._f175_175::B !overrule_0::B found_1::B itemShow_2::B itemsShow_3::B = case overrule_0 (True -> True) (_ -> case found_1 (True -> StdBool.not (<{StdBool.==_3}> itemShow_2 itemsShow_3)) (False -> False) )
<{controlinternal._if;392;35_174}>::B !overrule_0::B !contextShow_1::B itemsShow_2::B = case overrule_0 (True -> contextShow_1) (_ -> case contextShow_1 (True -> itemsShow_2) (False -> False) )
<{controlinternal._if;393;35_173}> !found_0::B !itemH_1 itemsShow_2::B = case found_0 (True -> update itemH_1::<{wstate._WItemHandle`}> [3:itemsShow_2]) (_ -> itemH_1)
<{controlinternal._if;394;35_172}> !osShow_0::B customDraw_1 = case osShow_0 (True -> customDraw_1) (_ -> controlinternal.anon_45)
<{controlinternal._c;402;35_171}> !w_0 = case w_0 (windowhandle.IsCustomButtonControl -> _Tuple3 True <{controldraw.drawCustomButtonLook`}> oswindow.osSetCustomButtonControlShow) (windowhandle.IsCustomControl -> _Tuple3 True <{controldraw.drawCustomLook`}> oswindow.osSetCustomControlShow) (_ -> _Tuple3 False StdMisc.undef StdMisc.undef)
<{controlinternal._if;374;35_170}>::B !overrule_0::B !contextShow_1::B itemsShow_2::B = case overrule_0 (True -> contextShow_1) (_ -> case contextShow_1 (True -> itemsShow_2) (False -> False) )
<{controlinternal._if;375;35_169}> !found_0::B !itemH_1 itemsShow_2::B = case found_0 (True -> update itemH_1::<{wstate._WItemHandle`}> [3:itemsShow_2]) (_ -> itemH_1)
<{controlinternal._c;379;35_168}> !w_0 = case w_0 (windowhandle.IsPopUpControl -> _Tuple2 True oswindow.osSetPopUpControlShow) (windowhandle.IsSliderControl -> _Tuple2 True oswindow.osSetSliderControlShow) (windowhandle.IsEditControl -> _Tuple2 True oswindow.osSetEditControlShow) (windowhandle.IsButtonControl -> _Tuple2 True oswindow.osSetButtonControlShow) (_ -> _Tuple2 False StdMisc.undef)
<{controlinternal._if;358;35_167}>::B !overrule_0::B !contextShow_1::B itemsShow_2::B = case overrule_0 (True -> contextShow_1) (_ -> case contextShow_1 (True -> itemsShow_2) (False -> False) )
<{controlinternal._if;359;35_166}> !found_0::B !itemH_1 itemsShow_2::B = case found_0 (True -> update itemH_1::<{wstate._WItemHandle`}> [3:itemsShow_2]) (_ -> itemH_1)
<{controlinternal._if;343;35_165}>::B !overrule_0::B !contextShow_1::B itemsShow_2::B = case overrule_0 (True -> contextShow_1) (_ -> case contextShow_1 (True -> itemsShow_2) (False -> False) )
<{controlinternal._if;344;35_164}> !found_0::B !itemH_1 itemsShow_2::B = case found_0 (True -> update itemH_1::<{wstate._WItemHandle`}> [3:itemsShow_2]) (_ -> itemH_1)
<{controlinternal._if;328;35_163}>::B !overrule_0::B !contextShow_1::B itemsShow_2::B = case overrule_0 (True -> contextShow_1) (_ -> case contextShow_1 (True -> itemsShow_2) (False -> False) )
<{controlinternal._if;329;35_162}> !found_0::B !itemH_1 itemsShow_2::B = case found_0 (True -> update itemH_1::<{wstate._WItemHandle`}> [3:itemsShow_2]) (_ -> itemH_1)
controlinternal.setcontrolsshowstate !ids_0 !itemsShow_1::B !wMetrics_2 !wids_3 !wH_4 !tb_5::I = case wids_3 (windowhandle._WIDS w_1_0 wPtr_1_1 wActive_1_2 -> case wH_4 (<{wstate._WindowHandle`}> whMode`_2_0 whKind`_2_1 whTitle`_2_2 wh_2_3 whKeyFocus`_2_4 whWindow_2_5 wh_2_6 whShow`_2_7 whSelect`_2_8 whAtts`_2_9 whDefault_2_10 whCancel_2_11 whSize`_2_12 whClosing`_2_13 -> let _x_3_0 = wstateaccess.setWElements (controlinternal.setWItemShowStates_47 wMetrics_2 wPtr_1_1 False itemsShow_1 True (<{controlinternal._if;318;27_188}> <{whSelect`_2_8}>) (controlinternal.getContentRect wMetrics_2 whWindow_2_5 <{whSize`_2_12}>) StdIOBasic.zero_21) wh_2_6 (_Tuple2 ids_0 tb_5) in <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [6:select _x_3_0::_Tuple2 0]) (select (select _x_3_0::_Tuple2 1)::_Tuple2 1)) ) 
<{controlinternal._if;318;27_188}> !<{whSelect`_0}>::B = case <{whSelect`_0}> (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
controlinternal.anon_48::B !nrCheck_0::I !index_1::I = commondef.isBetween index_1 1 nrCheck_0
controlinternal.setCheckMark_49 !wPtr_0::I !clipRect_1 !mark_2 !index_3::I !_x_4 = case _x_4 (_Tuple2 check_1_0 tb_1_1 -> let _x_2_0 = commondef.split (<{StdInt.-_7}> index_3 1) check_1_0, _x_2_1 = select _x_2_0::_Tuple2 1, item_2_2 = select _x_2_1::_Tuple2 0, _x_2_3 = select item_2_2::<{wstate._CheckItemInfo`}> 0 in <{_Tuple2!3}> (<{StdList.++}> (select _x_2_0::_Tuple2 0) (_predefined._Cons (update item_2_2::<{wstate._CheckItemInfo`}> [0:_Tuple3 (select _x_2_3::_Tuple3 0) (select _x_2_3::_Tuple3 1) mark_2]) (select _x_2_1::_Tuple2 1))) (oswindow.osSetCheckControl wPtr_0 (select item_2_2::<{wstate._CheckItemInfo`}> 3) clipRect_1 (StdIOCommon.marked mark_2) tb_1_1)) 
controlinternal.setWItemMarks_50 !wMetrics_0 !wPtr_1::I !mark_2 !_x_3 !clipRect_4 !indexs_5 !id_6 !itemH_7 !tb_8::I = case itemH_7 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsCheckControl -> case (windowaccess.identifyMaybeId id_6 (select itemH_7::<{wstate._WItemHandle`}> 0)) (True -> let info_4_0 = <{wstateaccess.getWItemCheckInfo`}> (select itemH_7::<{wstate._WItemHandle`}> 5), check_4_1::I = select info_4_0::<{wstate._CheckInfo`}> 0, nrCheck_4_2 = StdList.length_47 check_4_1, indexs_4_3 = StdList.filter (controlinternal.anon_48 nrCheck_4_2) indexs_5 in case (StdList.isEmpty indexs_4_3) (True -> <{_Tuple3!7}> True itemH_7 tb_8) (False -> let _x_6_0 = commondef.stateMap2 (controlinternal.setCheckMark_49 wPtr_1 clipRect_4 mark_2) indexs_4_3 (_Tuple2 check_4_1 tb_8) in <{_Tuple3!7}> True (update itemH_7::<{wstate._WItemHandle`}> [5:<{wstate.CheckInfo`}> (update info_4_0::<{wstate._CheckInfo`}> [0:select _x_6_0::_Tuple2 0])]) (select _x_6_0::_Tuple2 1)) ) (False -> <{_Tuple3!7}> False itemH_7 tb_8) ) (_ -> case (<{windowhandle.==_8}> w_1_2 windowhandle.IsCompoundControl) (True -> let absolutePos_3_0 = StdIOBasic.movePoint (select itemH_7::<{wstate._WItemHandle`}> 9) _x_3, _x_3_1 = wstateaccess.setWElement (controlinternal.setWItemMarks_50 wMetrics_0 wPtr_1 mark_2 absolutePos_3_0 (controlinternal.intersectRectContent wMetrics_0 clipRect_4 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_7::<{wstate._WItemHandle`}> 5)) absolutePos_3_0 (select itemH_7::<{wstate._WItemHandle`}> 10)) indexs_5) id_6 (select itemH_7::<{wstate._WItemHandle`}> 7) tb_8 in <{_Tuple3!7}> (select _x_3_1::_Tuple3 0) (update itemH_7::<{wstate._WItemHandle`}> [7:select _x_3_1::_Tuple3 1]) (select _x_3_1::_Tuple3 2)) (False -> case (<{windowhandle.==_8}> w_1_2 windowhandle.IsLayoutControl) (True -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_7::<{wstate._WItemHandle`}> 9) _x_3, _x_4_1 = wstateaccess.setWElement (controlinternal.setWItemMarks_50 wMetrics_0 wPtr_1 mark_2 absolutePos_4_0 (commondef.intersectRects clipRect_4 (commondef.posSizeToRect absolutePos_4_0 (select itemH_7::<{wstate._WItemHandle`}> 10))) indexs_5) id_6 (select itemH_7::<{wstate._WItemHandle`}> 7) tb_8 in <{_Tuple3!7}> (select _x_4_1::_Tuple3 0) (update itemH_7::<{wstate._WItemHandle`}> [7:select _x_4_1::_Tuple3 1]) (select _x_4_1::_Tuple3 2)) (False -> <{_Tuple3!7}> False itemH_7 tb_8) ) )) 
controlinternal.setcontrolsmarkstate !id_0 !mark_1 !indexs_2 !wMetrics_3 !wPtr_4::I !wH_5 !tb_6::I = case wH_5 (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setWElement (controlinternal.setWItemMarks_50 wMetrics_3 wPtr_4 mark_1 StdIOBasic.zero_21 (controlinternal.getContentRect wMetrics_3 whWindow_1_5 <{whSize`_1_12}>) indexs_2) id_0 wh_1_6 tb_6 in <{_Tuple2!3}> (update wH_5::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple3 1]) (select _x_2_0::_Tuple3 2)) 
controlinternal.anon_27::B !<{_v==_0}> id_1 !_x_2 = case _x_2 (_Tuple2 id`_1_0 _x_1_1 -> select <{_v==_0}>::<{StdOverloaded.==;}> 0 <{id`_1_0}> id_1) 
controlinternal.anon_131::B !id_0 !_x_1 = case _x_1 (_Tuple2 id`_1_0 _x_1_1 -> <{id.==_27}> <{id`_1_0}> id_0) 
controlinternal.removeOnIdOfPair !_x_0 !id_args_1 = case _x_0 (Data.Maybe.Just id_1_0 -> commondef.remove (controlinternal.anon_131 id_1_0) StdMisc.undef id_args_1) (_ -> <{_Tuple3!5}> False StdMisc.undef id_args_1)
controlinternal.setControlText_53 wMetrics_0 wPtr_1::I !wMetrics_2 !wPtr_3::I !shownContext_4::B !clipRect_5 !parentPos_6 !weh_7 !_x_8 = case weh_7 (wstate.WItemHandle2 itemH_1_0 -> case itemH_1_0 (wstate._WItemHandle2 w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 -> case w_2_1 (windowhandle.IsEditControl -> case _x_8 (_Tuple2 id_texts_4_0 tb_4_1 -> let _x_5_0 = controlinternal.removeOnIdOfPair (select itemH_1_0::wstate._WItemHandle2 0) id_texts_4_0 in case (StdBool.not (select _x_5_0::_Tuple3 0)) (True -> <{_Tuple2!3}> weh_7 (_Tuple2 (select _x_5_0::_Tuple3 2) tb_4_1)) (False -> let text_7_0 = select (select _x_5_0::_Tuple3 1)::_Tuple2 1, itemH_7_1 = update itemH_1_0::wstate._WItemHandle2 [3:<{wstate.EditInfo`}> (update (<{wstateaccess.getWItemEditInfo`}> (select itemH_1_0::wstate._WItemHandle2 3))::windowhandle._EditInfo [0:text_7_0])] in <{_Tuple2!3}> (wstate.WItemHandle2 itemH_7_1) (_Tuple2 (select _x_5_0::_Tuple3 2) (oswindow.osSetEditControlText wPtr_3 (select itemH_7_1::wstate._WItemHandle2 7) clipRect_5 (commondef.posSizeToRect (StdIOBasic.movePoint (select itemH_1_0::wstate._WItemHandle2 5) parentPos_6) (select itemH_7_1::wstate._WItemHandle2 6)) (controlinternal._f189_189 shownContext_4 itemH_1_0) text_7_0 tb_4_1))) ) ) (windowhandle.IsTextControl -> case _x_8 (_Tuple2 id_texts_4_0 tb_4_1 -> let _x_5_0 = controlinternal.removeOnIdOfPair (select itemH_1_0::wstate._WItemHandle2 0) id_texts_4_0 in case (StdBool.not (select _x_5_0::_Tuple3 0)) (True -> <{_Tuple2!3}> weh_7 (_Tuple2 (select _x_5_0::_Tuple3 2) tb_4_1)) (False -> let !text_7_0 = <{wstateaccess.getWItemTextInfo`}> (select itemH_1_0::wstate._WItemHandle2 3), text_7_1 = select (select _x_5_0::_Tuple3 1)::_Tuple2 1, itemH_7_2 = update itemH_1_0::wstate._WItemHandle2 [3:<{wstate.TextInfo`}> (update text_7_0::windowhandle._TextInfo [0:text_7_1])] in <{_Tuple2!3}> (wstate.WItemHandle2 itemH_7_2) (_Tuple2 (select _x_5_0::_Tuple3 2) (oswindow.osSetTextControlText wPtr_3 (select itemH_7_2::wstate._WItemHandle2 7) clipRect_5 (commondef.posSizeToRect (StdIOBasic.movePoint (select itemH_1_0::wstate._WItemHandle2 5) parentPos_6) (select itemH_7_2::wstate._WItemHandle2 6)) (controlinternal._f190_190 shownContext_4 itemH_1_0) text_7_1 tb_4_1))) ) ) (windowhandle.IsButtonControl -> case _x_8 (_Tuple2 id_texts_4_0 tb_4_1 -> let _x_5_0 = controlinternal.removeOnIdOfPair (select itemH_1_0::wstate._WItemHandle2 0) id_texts_4_0 in case (StdBool.not (select _x_5_0::_Tuple3 0)) (True -> <{_Tuple2!3}> weh_7 (_Tuple2 (select _x_5_0::_Tuple3 2) tb_4_1)) (False -> let text_7_0 = select (select _x_5_0::_Tuple3 1)::_Tuple2 1, itemH_7_1 = update itemH_1_0::wstate._WItemHandle2 [3:<{wstate.ButtonInfo`}> (update (<{wstateaccess.getWItemButtonInfo`}> (select itemH_1_0::wstate._WItemHandle2 3))::windowhandle._ButtonInfo [0:text_7_0])] in <{_Tuple2!3}> (wstate.WItemHandle2 itemH_7_1) (_Tuple2 (select _x_5_0::_Tuple3 2) (oswindow.osSetButtonControlText wPtr_3 (select itemH_7_1::wstate._WItemHandle2 7) clipRect_5 (controlvalidate.validateControlTitle text_7_0) tb_4_1))) ) ) (windowhandle.IsCompoundControl -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_1_0::wstate._WItemHandle2 5) parentPos_6, _x_4_1 = controlinternal.setWElementsControlText_51 wMetrics_0 wPtr_1 (select itemH_1_0::wstate._WItemHandle2 4) (controlinternal._f191_191 shownContext_4 itemH_1_0) (controlinternal.intersectRectContent wMetrics_2 clipRect_5 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_1_0::wstate._WItemHandle2 3)) absolutePos_4_0 (select itemH_1_0::wstate._WItemHandle2 6)) absolutePos_4_0 _x_8 in <{_Tuple2!3}> (wstate.WItemHandle2 (update itemH_1_0::wstate._WItemHandle2 [4:select _x_4_1::_Tuple2 0])) (select _x_4_1::_Tuple2 1)) (windowhandle.IsLayoutControl -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_1_0::wstate._WItemHandle2 5) parentPos_6, _x_4_1 = controlinternal.setWElementsControlText_51 wMetrics_0 wPtr_1 (select itemH_1_0::wstate._WItemHandle2 4) (controlinternal._f192_192 shownContext_4 itemH_1_0) (commondef.intersectRects clipRect_5 (commondef.posSizeToRect absolutePos_4_0 (select itemH_1_0::wstate._WItemHandle2 6))) absolutePos_4_0 _x_8 in <{_Tuple2!3}> (wstate.WItemHandle2 (update itemH_1_0::wstate._WItemHandle2 [4:select _x_4_1::_Tuple2 0])) (select _x_4_1::_Tuple2 1)) ) ) (_ -> <{_Tuple2!3}> weh_7 _x_8)
<{controlinternal.setWElementsControlText`_52}> wMetrics_0 wPtr_1::I !weh_2 shownContext_3::B clipRect_4 absolutePos_5 !args_s_6 = case weh_2 (wstate.WItemHandle2 itemH_1_0 -> controlinternal.setControlText_53 wMetrics_0 wPtr_1 wMetrics_0 wPtr_1 shownContext_3 clipRect_4 absolutePos_5 weh_2 args_s_6) (wstate.WRecursiveHandle2 itemHs_1_0 dRecKind_1_1 -> let _x_2_0 = controlinternal.setWElementsControlText_51 wMetrics_0 wPtr_1 itemHs_1_0 shownContext_3 clipRect_4 absolutePos_5 args_s_6 in <{_Tuple2!3}> (wstate.WRecursiveHandle2 (select _x_2_0::_Tuple2 0) dRecKind_1_1) (select _x_2_0::_Tuple2 1)) 
controlinternal.setWElementsControlText_51 wMetrics_0 wPtr_1::I !_x_2 shownContext_3::B clipRect_4 absolutePos_5 !_x_6 = case _x_2 (_predefined._Cons itemH_1_0 itemHs_1_1 -> case _x_6 (_Tuple2 args_2_0 s_2_1 -> case args_2_0 (_predefined._Cons _x_3_0 _x_3_1 -> let _x_4_0 = <{controlinternal.setWElementsControlText`_52}> wMetrics_0 wPtr_1 itemH_1_0 shownContext_3 clipRect_4 absolutePos_5 (_Tuple2 args_2_0 s_2_1), _x_4_1 = controlinternal.setWElementsControlText_51 wMetrics_0 wPtr_1 itemHs_1_1 shownContext_3 clipRect_4 absolutePos_5 (select _x_4_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (select _x_4_0::_Tuple2 0) (select _x_4_1::_Tuple2 0)) (select _x_4_1::_Tuple2 1)) ) ) (_ -> case _x_6 (_Tuple2 args_1_0 s_1_1 -> <{_Tuple2!3}> _x_2 (_Tuple2 args_1_0 s_1_1)) )
controlinternal._f192_192::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::wstate._WItemHandle2 2) (_ -> False)
controlinternal._f191_191::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::wstate._WItemHandle2 2) (_ -> False)
controlinternal._f190_190::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::wstate._WItemHandle2 2) (_ -> False)
controlinternal._f189_189::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::wstate._WItemHandle2 2) (_ -> False)
controlinternal.setcontroltexts !id_texts_0 !wMetrics_1 !wPtr_2::I !<{wH`_3}> !tb_4::I = case <{wH`_3}> (wstate._WindowHandle2 whWindow_1_0 wh_1_1 whSize2_1_2 -> let _x_2_0 = controlinternal.setWElementsControlText_51 wMetrics_1 wPtr_2 wh_1_1 True (controlinternal.getContentRect wMetrics_1 whWindow_1_0 whSize2_1_2) StdIOBasic.zero_21 (_Tuple2 id_texts_0 tb_4) in <{_Tuple2!3}> (update <{wH`_3}>::wstate._WindowHandle2 [1:select _x_2_0::_Tuple2 0]) (select (select _x_2_0::_Tuple2 1)::_Tuple2 1)) 
controlinternal.setEditCursor_54 !wMetrics_0 !wPtr_1::I !shownContext_2::B !clipRect_3 !parentPos_4 !pos_5::I !id_6 !itemH_7 !tb_8::I = case itemH_7 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsEditControl -> case (StdBool.not (windowaccess.identifyMaybeId id_6 (select itemH_7::<{wstate._WItemHandle`}> 0))) (True -> <{_Tuple3!7}> False itemH_7 tb_8) (False -> <{_Tuple3!7}> True itemH_7 (oswindow.osSetEditControlCursor wPtr_1 (select itemH_7::<{wstate._WItemHandle`}> 11) clipRect_3 (commondef.posSizeToRect (StdIOBasic.movePoint (select itemH_7::<{wstate._WItemHandle`}> 9) parentPos_4) (select itemH_7::<{wstate._WItemHandle`}> 10)) pos_5 tb_8)) ) (windowhandle.IsCompoundControl -> let absolutePos_3_0 = StdIOBasic.movePoint (select itemH_7::<{wstate._WItemHandle`}> 9) parentPos_4, _x_3_1 = wstateaccess.setWElement (controlinternal.setEditCursor_54 wMetrics_0 wPtr_1 (controlinternal._f193_193 shownContext_2 itemH_7) (controlinternal.intersectRectContent wMetrics_0 clipRect_3 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_7::<{wstate._WItemHandle`}> 5)) absolutePos_3_0 (select itemH_7::<{wstate._WItemHandle`}> 10)) absolutePos_3_0 pos_5) id_6 (select itemH_7::<{wstate._WItemHandle`}> 7) tb_8 in <{_Tuple3!7}> (select _x_3_1::_Tuple3 0) (update itemH_7::<{wstate._WItemHandle`}> [7:select _x_3_1::_Tuple3 1]) (select _x_3_1::_Tuple3 2)) (windowhandle.IsLayoutControl -> let absolutePos_3_0 = StdIOBasic.movePoint (select itemH_7::<{wstate._WItemHandle`}> 9) parentPos_4, _x_3_1 = wstateaccess.setWElement (controlinternal.setEditCursor_54 wMetrics_0 wPtr_1 (controlinternal._f194_194 shownContext_2 itemH_7) (commondef.intersectRects clipRect_3 (commondef.posSizeToRect absolutePos_3_0 (select itemH_7::<{wstate._WItemHandle`}> 10))) absolutePos_3_0 pos_5) id_6 (select itemH_7::<{wstate._WItemHandle`}> 7) tb_8 in <{_Tuple3!7}> (select _x_3_1::_Tuple3 0) (update itemH_7::<{wstate._WItemHandle`}> [7:select _x_3_1::_Tuple3 1]) (select _x_3_1::_Tuple3 2)) ) (_ -> <{_Tuple3!7}> False itemH_7 tb_8)
controlinternal._f194_194::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f193_193::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal.seteditcontrolcursor !id_0 !pos_1::I !wMetrics_2 !wPtr_3::I !<{wH`_4}> !tb_5::I = case <{wH`_4}> (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setWElement (controlinternal.setEditCursor_54 wMetrics_2 wPtr_3 True (controlinternal.getContentRect wMetrics_2 whWindow_1_5 <{whSize`_1_12}>) StdIOBasic.zero_21 pos_1) id_0 wh_1_6 tb_5 in <{_Tuple2!3}> (update <{wH`_4}>::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple3 1]) (select _x_2_0::_Tuple3 2)) 
controlinternal.setEditSelection_55 !wMetrics_0 !wPtr_1::I !shownContext_2::B !clipRect_3 !parentPos_4 !begin_5::I !end_6::I !id_7 !itemH_8 !tb_9::I = case itemH_8 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsEditControl -> case (StdBool.not (windowaccess.identifyMaybeId id_7 (select itemH_8::<{wstate._WItemHandle`}> 0))) (True -> <{_Tuple3!7}> False itemH_8 tb_9) (False -> <{_Tuple3!7}> True itemH_8 (oswindow.osSetEditControlSelection wPtr_1 (select itemH_8::<{wstate._WItemHandle`}> 11) clipRect_3 (commondef.posSizeToRect (StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_4) (select itemH_8::<{wstate._WItemHandle`}> 10)) begin_5 end_6 tb_9)) ) (windowhandle.IsCompoundControl -> let absolutePos_3_0 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_4, _x_3_1 = wstateaccess.setWElement (controlinternal.setEditSelection_55 wMetrics_0 wPtr_1 (controlinternal._f195_195 shownContext_2 itemH_8) (controlinternal.intersectRectContent wMetrics_0 clipRect_3 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5)) absolutePos_3_0 (select itemH_8::<{wstate._WItemHandle`}> 10)) absolutePos_3_0 begin_5 end_6) id_7 (select itemH_8::<{wstate._WItemHandle`}> 7) tb_9 in <{_Tuple3!7}> (select _x_3_1::_Tuple3 0) (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_3_1::_Tuple3 1]) (select _x_3_1::_Tuple3 2)) (windowhandle.IsLayoutControl -> let absolutePos_3_0 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_4, _x_3_1 = wstateaccess.setWElement (controlinternal.setEditSelection_55 wMetrics_0 wPtr_1 (controlinternal._f196_196 shownContext_2 itemH_8) (commondef.intersectRects clipRect_3 (commondef.posSizeToRect absolutePos_3_0 (select itemH_8::<{wstate._WItemHandle`}> 10))) absolutePos_3_0 begin_5 end_6) id_7 (select itemH_8::<{wstate._WItemHandle`}> 7) tb_9 in <{_Tuple3!7}> (select _x_3_1::_Tuple3 0) (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_3_1::_Tuple3 1]) (select _x_3_1::_Tuple3 2)) ) (_ -> <{_Tuple3!7}> False itemH_8 tb_9)
controlinternal._f196_196::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f195_195::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal.seteditcontrolselection !id_0 !begin_1::I !end_2::I !wMetrics_3 !wPtr_4::I !<{wH`_5}> !tb_6::I = case <{wH`_5}> (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setWElement (controlinternal.setEditSelection_55 wMetrics_3 wPtr_4 True (controlinternal.getContentRect wMetrics_3 whWindow_1_5 <{whSize`_1_12}>) StdIOBasic.zero_21 begin_1 end_2) id_0 wh_1_6 tb_6 in <{_Tuple2!3}> (update <{wH`_5}>::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple3 1]) (select _x_2_0::_Tuple3 2)) 
controlinternal.anon_28::B !<{_v==_0}> id_1 !_x_2 = case _x_2 (_Tuple3 id`_1_0 _x_1_1 _x_1_2 -> select <{_v==_0}>::<{StdOverloaded.==;}> 0 <{id`_1_0}> id_1) 
controlinternal.anon_132::B !id_0 !_x_1 = case _x_1 (_Tuple3 id`_1_0 _x_1_1 _x_1_2 -> <{id.==_27}> <{id`_1_0}> id_0) 
controlinternal.removeOnIdOfTriple !_x_0 !id_args_1 = case _x_0 (Data.Maybe.Just id_1_0 -> commondef.remove (controlinternal.anon_132 id_1_0) StdMisc.undef id_args_1) (_ -> <{_Tuple3!5}> False StdMisc.undef id_args_1)
controlinternal.setWItemLook_56 !wMetrics_0 !wPtr_1::I !ableContext_2::B !shownContext_3::B !resizeable_4::B def_5 !clipRect_6 !parentPos_7 !itemH_8 !_x_9 = case itemH_8 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsCompoundControl -> case _x_9 (_Tuple2 looks_3_0 tb_3_1 -> let _x_4_0 = controlinternal.removeOnIdOfTriple w_1_0 looks_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> let info_6_0 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), absolutePos_6_1 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_7, _x_6_2 = wstateaccess.setWElements (controlinternal.setWItemLook_56 wMetrics_0 wPtr_1 (controlinternal._f197_197 ableContext_2 itemH_8) (controlinternal._f198_198 shownContext_3 itemH_8) resizeable_4 def_5 (commondef.intersectRects clipRect_6 (oswindow.osGetCompoundContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select info_6_0::windowhandle._CompoundInfo 0) (commondef.toTuple_72 w_1_10) (_Tuple2 (Data.Maybe.isJust (select info_6_0::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_6_0::windowhandle._CompoundInfo 3)))) (commondef.posSizeToRect absolutePos_6_1 w_1_10))) absolutePos_6_1) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_4_0::_Tuple3 2) tb_3_1) in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_6_2::_Tuple2 0]) (select _x_6_2::_Tuple2 1)) (False -> let look_6_0::B = select _x_4_0::_Tuple3 1, shownContext1_6_1 = controlinternal._f199_199 shownContext_3 itemH_8 in case (case (StdBool.not (select look_6_0::_Tuple3 1)) (True -> True) (False -> StdBool.not shownContext1_6_1) ) (True -> let info_8_0 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), absolutePos_8_1 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_7, _x_8_2 = wstateaccess.setWElements (controlinternal.setWItemLook_56 wMetrics_0 wPtr_1 (controlinternal._f200_200 ableContext_2 itemH_8) shownContext1_6_1 resizeable_4 def_5 (commondef.intersectRects clipRect_6 (oswindow.osGetCompoundContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select info_8_0::windowhandle._CompoundInfo 0) (commondef.toTuple_72 w_1_10) (_Tuple2 (Data.Maybe.isJust (select info_8_0::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_8_0::windowhandle._CompoundInfo 3)))) (commondef.posSizeToRect absolutePos_8_1 w_1_10))) absolutePos_8_1) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_4_0::_Tuple3 2) tb_3_1), compoundLook_8_3 = select info_8_0::windowhandle._CompoundInfo 4, _x_8_4 = select look_6_0::_Tuple3 2 in <{_Tuple2!3}> (update (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_8_2::_Tuple2 0])::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_8_0::windowhandle._CompoundInfo [4:update compoundLook_8_3::windowhandle._CompoundLookInfo [0:windowhandle._LookInfo (select _x_8_4::_Tuple2 1) (select (select compoundLook_8_3::windowhandle._CompoundLookInfo 0)::windowhandle._LookInfo 1) (select _x_8_4::_Tuple2 0)]])]) (select _x_8_2::_Tuple2 1)) (False -> let ableContext1_8_0 = controlinternal._f201_201 ableContext_2 itemH_8, info_8_1 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), absolutePos_8_2 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_7, clipRect1_8_3 = commondef.intersectRects clipRect_6 (oswindow.osGetCompoundContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select info_8_1::windowhandle._CompoundInfo 0) (commondef.toTuple_72 w_1_10) (_Tuple2 (Data.Maybe.isJust (select info_8_1::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_8_1::windowhandle._CompoundInfo 3)))) (commondef.posSizeToRect absolutePos_8_2 w_1_10)), _x_8_4 = wstateaccess.setWElements (controlinternal.setWItemLook_56 wMetrics_0 wPtr_1 ableContext1_8_0 shownContext1_6_1 resizeable_4 def_5 clipRect1_8_3 absolutePos_8_2) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select _x_4_0::_Tuple3 2) tb_3_1), compoundLook_8_5 = select info_8_1::windowhandle._CompoundInfo 4, _x_8_6 = select look_6_0::_Tuple3 2, looks_tb_8_7 = select _x_8_4::_Tuple2 1, _x_8_8 = <{windowclipstate.validateCompoundClipState`}> wMetrics_0 False wPtr_1 parentPos_7 def_5 shownContext_3 (update (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_8_4::_Tuple2 0])::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_8_1::windowhandle._CompoundInfo [4:update compoundLook_8_5::windowhandle._CompoundLookInfo [0:windowhandle._LookInfo (select _x_8_6::_Tuple2 1) (select (select compoundLook_8_5::windowhandle._CompoundLookInfo 0)::windowhandle._LookInfo 1) (select _x_8_6::_Tuple2 0)]])]) (select looks_tb_8_7::_Tuple2 1), _x_8_9::B = <{controldraw.drawCompoundLook`}> wMetrics_0 ableContext1_8_0 wPtr_1 parentPos_7 clipRect1_8_3 (select _x_8_8::_Tuple2 0) (select _x_8_8::_Tuple2 1) in <{_Tuple2!3}> (select _x_8_9::_Tuple2 0) (_Tuple2 (select looks_tb_8_7::_Tuple2 0) (select _x_8_9::_Tuple2 1))) ) ) ) (windowhandle.IsCustomButtonControl -> case _x_9 (_Tuple2 looks_3_0 tb_3_1 -> let _x_4_0 = controlinternal.removeOnIdOfTriple w_1_0 looks_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_4_0::_Tuple3 2) tb_3_1)) (False -> let look_6_0 = select _x_4_0::_Tuple3 1 in case (case (StdBool.not (select look_6_0::_Tuple3 1)) (True -> True) (False -> StdBool.not (controlinternal._f202_202 shownContext_3 itemH_8)) ) (True -> let info_8_0 = <{wstateaccess.getWItemCustomButtonInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), _x_8_1 = select look_6_0::_Tuple3 2 in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [5:<{wstate.CustomButtonInfo`}> (update info_8_0::windowhandle._CustomButtonInfo [0:update (select info_8_0::windowhandle._CustomButtonInfo 0)::windowhandle._LookInfo [0:select _x_8_1::_Tuple2 1,2:select _x_8_1::_Tuple2 0]])]) (_Tuple2 (select _x_4_0::_Tuple3 2) tb_3_1)) (False -> let info_8_0 = <{wstateaccess.getWItemCustomButtonInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), _x_8_1 = select look_6_0::_Tuple3 2, _x_8_2 = <{controldraw.drawCustomButtonLook`}> (controlinternal._f203_203 ableContext_2 itemH_8) wPtr_1 parentPos_7 clipRect_6 (update itemH_8::<{wstate._WItemHandle`}> [5:<{wstate.CustomButtonInfo`}> (update info_8_0::windowhandle._CustomButtonInfo [0:update (select info_8_0::windowhandle._CustomButtonInfo 0)::windowhandle._LookInfo [0:select _x_8_1::_Tuple2 1,2:select _x_8_1::_Tuple2 0]])]) tb_3_1 in <{_Tuple2!3}> (select _x_8_2::_Tuple2 0) (_Tuple2 (select _x_4_0::_Tuple3 2) (select _x_8_2::_Tuple2 1))) ) ) ) (windowhandle.IsCustomControl -> case _x_9 (_Tuple2 looks_3_0 tb_3_1 -> let _x_4_0 = controlinternal.removeOnIdOfTriple w_1_0 looks_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select _x_4_0::_Tuple3 2) tb_3_1)) (False -> let look_6_0 = select _x_4_0::_Tuple3 1 in case (case (StdBool.not (select look_6_0::_Tuple3 1)) (True -> True) (False -> StdBool.not (controlinternal._f204_204 shownContext_3 itemH_8)) ) (True -> let info_8_0 = <{wstateaccess.getWItemCustomInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), _x_8_1 = select look_6_0::_Tuple3 2 in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [5:<{wstate.CustomInfo`}> (update info_8_0::windowhandle._CustomInfo [0:update (select info_8_0::windowhandle._CustomInfo 0)::windowhandle._LookInfo [0:select _x_8_1::_Tuple2 1,2:select _x_8_1::_Tuple2 0]])]) (_Tuple2 (select _x_4_0::_Tuple3 2) tb_3_1)) (False -> let info_8_0 = <{wstateaccess.getWItemCustomInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), _x_8_1 = select look_6_0::_Tuple3 2, _x_8_2 = <{controldraw.drawCustomLook`}> (controlinternal._f205_205 ableContext_2 itemH_8) wPtr_1 parentPos_7 clipRect_6 (update itemH_8::<{wstate._WItemHandle`}> [5:<{wstate.CustomInfo`}> (update info_8_0::windowhandle._CustomInfo [0:update (select info_8_0::windowhandle._CustomInfo 0)::windowhandle._LookInfo [0:select _x_8_1::_Tuple2 1,2:select _x_8_1::_Tuple2 0]])]) tb_3_1 in <{_Tuple2!3}> (select _x_8_2::_Tuple2 0) (_Tuple2 (select _x_4_0::_Tuple3 2) (select _x_8_2::_Tuple2 1))) ) ) ) (windowhandle.IsLayoutControl -> case _x_9 (_Tuple2 looks_3_0 tb_3_1 -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_7, _x_4_1 = wstateaccess.setWElements (controlinternal.setWItemLook_56 wMetrics_0 wPtr_1 (controlinternal._f206_206 ableContext_2 itemH_8) (controlinternal._f207_207 shownContext_3 itemH_8) resizeable_4 def_5 (commondef.intersectRects clipRect_6 (commondef.posSizeToRect absolutePos_4_0 (select itemH_8::<{wstate._WItemHandle`}> 10))) absolutePos_4_0) (select itemH_8::<{wstate._WItemHandle`}> 7) (_Tuple2 (select (controlinternal.removeOnIdOfTriple w_1_0 looks_3_0)::_Tuple3 2) tb_3_1) in <{_Tuple2!3}> (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_4_1::_Tuple2 0]) (select _x_4_1::_Tuple2 1)) ) (_ -> case _x_9 (_Tuple2 looks_2_0 tb_2_1 -> <{_Tuple2!3}> itemH_8 (_Tuple2 (select (controlinternal.removeOnIdOfTriple w_1_0 looks_2_0)::_Tuple3 2) tb_2_1)) )) 
controlinternal._f207_207::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f206_206::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f205_205::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f204_204::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f203_203::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f202_202::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f201_201::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f200_200::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f199_199::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f198_198::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f197_197::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal.setcontrolslook !looks_0 !wMetrics_1 !wPtr_2::I !wH_3 !tb_4::I = case wH_3 (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setWElements (controlinternal.setWItemLook_56 wMetrics_1 wPtr_2 <{whSelect`_1_8}> True True whDefault_1_10 (controlinternal.getContentRect wMetrics_1 whWindow_1_5 <{whSize`_1_12}>) StdIOBasic.zero_21) wh_1_6 (_Tuple2 looks_0 tb_4) in <{_Tuple2!3}> (update wH_3::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple2 0]) (select (select _x_2_0::_Tuple2 1)::_Tuple2 1)) 
controlinternal.drawInWItem_57 !wMetrics_0 !wPtr_1::I resizeable_2::B def_3 !contextShow_4::B !clipRect_5 !parentPos_6 !id_7 !itemH_8 !x_tb_9 = case itemH_8 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsCompoundControl -> case (StdBool.not (windowaccess.identifyMaybeId id_7 w_1_0)) (True -> let info_4_0 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), itemSize_4_1 = select itemH_8::<{wstate._WItemHandle`}> 10, absolutePos_4_2 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_6, _x_4_3 = wstateaccess.setWElement (controlinternal.drawInWItem_57 wMetrics_0 wPtr_1 resizeable_2 def_3 (controlinternal._f208_208 contextShow_4 itemH_8) (commondef.intersectRects clipRect_5 (oswindow.osGetCompoundContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select info_4_0::windowhandle._CompoundInfo 0) (commondef.toTuple_72 itemSize_4_1) (_Tuple2 (Data.Maybe.isJust (select info_4_0::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_4_0::windowhandle._CompoundInfo 3)))) (commondef.posSizeToRect absolutePos_4_2 itemSize_4_1))) absolutePos_4_2) id_7 (select itemH_8::<{wstate._WItemHandle`}> 7) x_tb_9 in <{_Tuple3!7}> (select _x_4_3::_Tuple3 0) (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_4_3::_Tuple3 1]) (select _x_4_3::_Tuple3 2)) (False -> let info_4_0 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_8::<{wstate._WItemHandle`}> 5), itemSize_4_1 = select itemH_8::<{wstate._WItemHandle`}> 10, _x_4_2 = <{windowclipstate.validateCompoundClipState`}> wMetrics_0 False wPtr_1 parentPos_6 def_3 contextShow_4 itemH_8 (select x_tb_9::_Tuple3 2), _x_4_3 = <{controldraw.drawInCompound`}> (select x_tb_9::_Tuple3 1) wPtr_1 parentPos_6 (commondef.intersectRects clipRect_5 (oswindow.osGetCompoundContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select info_4_0::windowhandle._CompoundInfo 0) (commondef.toTuple_72 itemSize_4_1) (_Tuple2 (Data.Maybe.isJust (select info_4_0::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_4_0::windowhandle._CompoundInfo 3)))) (commondef.posSizeToRect (StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_6) itemSize_4_1))) (select _x_4_2::_Tuple2 0) (select _x_4_2::_Tuple2 1) in <{_Tuple3!7}> True (select _x_4_3::_Tuple3 1) (_Tuple3 (Data.Maybe.Just (select _x_4_3::_Tuple3 0)) StdMisc.undef (select _x_4_3::_Tuple3 2))) ) (windowhandle.IsCustomButtonControl -> case (StdBool.not (windowaccess.identifyMaybeId id_7 w_1_0)) (True -> <{_Tuple3!7}> False itemH_8 x_tb_9) (False -> let _x_4_0 = <{controldraw.drawInCustomButton`}> (select x_tb_9::_Tuple3 1) wPtr_1 parentPos_6 clipRect_5 itemH_8 (select x_tb_9::_Tuple3 2) in <{_Tuple3!7}> True (select _x_4_0::_Tuple3 1) (_Tuple3 (Data.Maybe.Just (select _x_4_0::_Tuple3 0)) StdMisc.undef (select _x_4_0::_Tuple3 2))) ) (windowhandle.IsCustomControl -> case (StdBool.not (windowaccess.identifyMaybeId id_7 w_1_0)) (True -> <{_Tuple3!7}> False itemH_8 x_tb_9) (False -> let _x_4_0 = <{controldraw.drawInCustom`}> (select x_tb_9::_Tuple3 1) wPtr_1 parentPos_6 clipRect_5 itemH_8 (select x_tb_9::_Tuple3 2) in <{_Tuple3!7}> True (select _x_4_0::_Tuple3 1) (_Tuple3 (Data.Maybe.Just (select _x_4_0::_Tuple3 0)) StdMisc.undef (select _x_4_0::_Tuple3 2))) ) (windowhandle.IsLayoutControl -> case (windowaccess.identifyMaybeId id_7 w_1_0) (True -> <{_Tuple3!7}> True itemH_8 x_tb_9) (False -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_8::<{wstate._WItemHandle`}> 9) parentPos_6, _x_4_1 = wstateaccess.setWElement (controlinternal.drawInWItem_57 wMetrics_0 wPtr_1 resizeable_2 def_3 (controlinternal._f209_209 contextShow_4 itemH_8) (commondef.intersectRects clipRect_5 (commondef.posSizeToRect absolutePos_4_0 (select itemH_8::<{wstate._WItemHandle`}> 10))) absolutePos_4_0) id_7 (select itemH_8::<{wstate._WItemHandle`}> 7) x_tb_9 in <{_Tuple3!7}> (select _x_4_1::_Tuple3 0) (update itemH_8::<{wstate._WItemHandle`}> [7:select _x_4_1::_Tuple3 1]) (select _x_4_1::_Tuple3 2)) ) (_ -> <{_Tuple3!7}> (windowaccess.identifyMaybeId id_7 w_1_0) itemH_8 x_tb_9)) 
controlinternal._f209_209::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f208_208::B !contextShow_0::B itemH_1 = case contextShow_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal.drawincontrol !control_0 !drawfun_1 !wMetrics_2 !wPtr_3::I !wH_4 !tb_5::I = case wH_4 (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setWElement (controlinternal.drawInWItem_57 wMetrics_2 wPtr_3 True whDefault_1_10 <{whShow`_1_7}> (controlinternal.getContentRect wMetrics_2 whWindow_1_5 <{whSize`_1_12}>) StdIOBasic.zero_21) control_0 wh_1_6 (_Tuple3 Data.Maybe.Nothing drawfun_1 tb_5), _x_2_1 = select _x_2_0::_Tuple3 2 in <{_Tuple3!7}> (select _x_2_1::_Tuple3 0) (update wH_4::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple3 1]) (select _x_2_1::_Tuple3 2)) 
controlinternal.setSliderState_58 !wMetrics_0 !wPtr_1::I !clipRect_2 !_x_3 !itemH_4 !_x_5 = case itemH_4 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsSliderControl -> case _x_5 (_Tuple2 id_fs_3_0 tb_3_1 -> let _x_4_0 = controlinternal.removeOnIdOfPair w_1_0 id_fs_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> <{_Tuple2!3}> itemH_4 (_Tuple2 (select _x_4_0::_Tuple3 2) tb_3_1)) (False -> let info_6_0 = <{wstateaccess.getWItemSliderInfo`}> (select itemH_4::<{wstate._WItemHandle`}> 5), newState_6_1 = controlvalidate.validateSliderState (select (select _x_4_0::_Tuple3 1)::_Tuple2 1 (select info_6_0::<{wstate._SliderInfo`}> 2)) in <{_Tuple2!3}> (update itemH_4::<{wstate._WItemHandle`}> [5:<{wstate.SliderInfo`}> (update info_6_0::<{wstate._SliderInfo`}> [2:newState_6_1])]) (_Tuple2 (select _x_4_0::_Tuple3 2) (oswindow.osSetSliderControlThumb wPtr_1 w_1_11 clipRect_2 (StdBool.not (commondef.isEmptyRect clipRect_2)) (oswindow.toOSscrollbarRange (_Tuple3 (select newState_6_1::StdIOCommon._SliderState 0) (select newState_6_1::StdIOCommon._SliderState 2) (select newState_6_1::StdIOCommon._SliderState 1)) 0) tb_3_1))) ) ) (windowhandle.IsCompoundControl -> case _x_5 (_Tuple2 id_fs_3_0 tb_3_1 -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_4::<{wstate._WItemHandle`}> 9) _x_3, _x_4_1 = wstateaccess.setWElements (controlinternal.setSliderState_58 wMetrics_0 wPtr_1 (controlinternal.intersectRectContent wMetrics_0 clipRect_2 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_4::<{wstate._WItemHandle`}> 5)) absolutePos_4_0 (select itemH_4::<{wstate._WItemHandle`}> 10)) absolutePos_4_0) (select itemH_4::<{wstate._WItemHandle`}> 7) (_Tuple2 (select (controlinternal.removeOnIdOfPair (select itemH_4::<{wstate._WItemHandle`}> 0) id_fs_3_0)::_Tuple3 2) tb_3_1) in <{_Tuple2!3}> (update itemH_4::<{wstate._WItemHandle`}> [7:select _x_4_1::_Tuple2 0]) (select _x_4_1::_Tuple2 1)) ) (windowhandle.IsLayoutControl -> case _x_5 (_Tuple2 id_fs_3_0 tb_3_1 -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_4::<{wstate._WItemHandle`}> 9) _x_3, _x_4_1 = wstateaccess.setWElements (controlinternal.setSliderState_58 wMetrics_0 wPtr_1 (commondef.intersectRects clipRect_2 (commondef.posSizeToRect absolutePos_4_0 (select itemH_4::<{wstate._WItemHandle`}> 10))) absolutePos_4_0) (select itemH_4::<{wstate._WItemHandle`}> 7) (_Tuple2 (select (controlinternal.removeOnIdOfPair (select itemH_4::<{wstate._WItemHandle`}> 0) id_fs_3_0)::_Tuple3 2) tb_3_1) in <{_Tuple2!3}> (update itemH_4::<{wstate._WItemHandle`}> [7:select _x_4_1::_Tuple2 0]) (select _x_4_1::_Tuple2 1)) ) ) (_ -> case _x_5 (_Tuple2 id_fs_1_0 tb_1_1 -> <{_Tuple2!3}> itemH_4 (_Tuple2 (select (controlinternal.removeOnIdOfPair (select itemH_4::<{wstate._WItemHandle`}> 0) id_fs_1_0)::_Tuple3 2) tb_1_1)) )
controlinternal.setslidercontrolstates !id_fs_0 !wMetrics_1 !wPtr_2::I !<{wH`_3}> !tb_4::I = case <{wH`_3}> (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setWElements (controlinternal.setSliderState_58 wMetrics_1 wPtr_2 (controlinternal.getContentRect wMetrics_1 whWindow_1_5 <{whSize`_1_12}>) StdIOBasic.zero_21) wh_1_6 (_Tuple2 id_fs_0 tb_4) in <{_Tuple2!3}> (update <{wH`_3}>::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple2 0]) (select (select _x_2_0::_Tuple2 1)::_Tuple2 1)) 
controlinternal.selectWItemRadioControl_59 !wMetrics_0 !wPtr_1::I !clipRect_2 !_x_3 !index_4::I !id_5 !itemH_6 !tb_7::I = case itemH_6 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsRadioControl -> case (StdBool.not (windowaccess.identifyMaybeId id_5 w_1_0)) (True -> <{_Tuple3!7}> False itemH_6 tb_7) (False -> let info_4_0::I = <{wstateaccess.getWItemRadioInfo`}> (select itemH_6::<{wstate._WItemHandle`}> 5), items_4_1::I = select info_4_0::<{wstate._RadioInfo`}> 0, nr_4_2::I = StdList.length_47 items_4_1, index_4_3 = commondef.setBetween index_4 1 nr_4_2, cur_4_4 = select info_4_0::<{wstate._RadioInfo`}> 2 in case (<{StdInt.==_16}> index_4_3 cur_4_4) (True -> <{_Tuple3!7}> True (update itemH_6::<{wstate._WItemHandle`}> [5:<{wstate.RadioInfo`}> (update info_4_0::<{wstate._RadioInfo`}> [2:index_4_3])]) tb_7) (False -> <{_Tuple3!7}> True (update itemH_6::<{wstate._WItemHandle`}> [5:<{wstate.RadioInfo`}> (update info_4_0::<{wstate._RadioInfo`}> [2:index_4_3])]) (oswindow.osSetRadioControl wPtr_1 (select (<{StdList.!!}> items_4_1 (<{StdInt.-_7}> cur_4_4 1))::<{wstate._RadioItemInfo`}> 3) (select (<{StdList.!!}> items_4_1 (<{StdInt.-_7}> index_4_3 1))::<{wstate._RadioItemInfo`}> 3) clipRect_2 tb_7)) ) ) (windowhandle.IsCompoundControl -> case (windowaccess.identifyMaybeId id_5 (select itemH_6::<{wstate._WItemHandle`}> 0)) (True -> <{_Tuple3!7}> True itemH_6 tb_7) (False -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_6::<{wstate._WItemHandle`}> 9) _x_3, _x_4_1 = wstateaccess.setWElement (controlinternal.selectWItemRadioControl_59 wMetrics_0 wPtr_1 (controlinternal.intersectRectContent wMetrics_0 clipRect_2 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_6::<{wstate._WItemHandle`}> 5)) absolutePos_4_0 (select itemH_6::<{wstate._WItemHandle`}> 10)) absolutePos_4_0 index_4) id_5 (select itemH_6::<{wstate._WItemHandle`}> 7) tb_7 in <{_Tuple3!7}> (select _x_4_1::_Tuple3 0) (update itemH_6::<{wstate._WItemHandle`}> [7:select _x_4_1::_Tuple3 1]) (select _x_4_1::_Tuple3 2)) ) (windowhandle.IsLayoutControl -> case (windowaccess.identifyMaybeId id_5 (select itemH_6::<{wstate._WItemHandle`}> 0)) (True -> <{_Tuple3!7}> True itemH_6 tb_7) (False -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_6::<{wstate._WItemHandle`}> 9) _x_3, _x_4_1 = wstateaccess.setWElement (controlinternal.selectWItemRadioControl_59 wMetrics_0 wPtr_1 (commondef.intersectRects clipRect_2 (commondef.posSizeToRect absolutePos_4_0 (select itemH_6::<{wstate._WItemHandle`}> 10))) absolutePos_4_0 index_4) id_5 (select itemH_6::<{wstate._WItemHandle`}> 7) tb_7 in <{_Tuple3!7}> (select _x_4_1::_Tuple3 0) (update itemH_6::<{wstate._WItemHandle`}> [7:select _x_4_1::_Tuple3 1]) (select _x_4_1::_Tuple3 2)) ) ) (_ -> <{_Tuple3!7}> (windowaccess.identifyMaybeId id_5 (select itemH_6::<{wstate._WItemHandle`}> 0)) itemH_6 tb_7)
controlinternal.selectradiocontrol !id_0 !index_1::I !wMetrics_2 !wPtr_3::I !wH_4 !tb_5::I = case wH_4 (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setWElement (controlinternal.selectWItemRadioControl_59 wMetrics_2 wPtr_3 (controlinternal.getContentRect wMetrics_2 whWindow_1_5 <{whSize`_1_12}>) StdIOBasic.zero_21 index_1) id_0 wh_1_6 tb_5 in <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple3 1]) (select _x_2_0::_Tuple3 2)) 
controlinternal.anon_60::I !_x_0 = case _x_0 (windowhandle._PopUpEditInfo popUpEditText_1_0 popUpEditPtr_1_1 -> popUpEditPtr_1_1) 
controlinternal.selectWItemPopUp_61 !wMetrics_0 !wPtr_1::I !shownContext_2::B !index_3::I !clipRect_4 !parentPos_5 !id_6 !itemH_7 !tb_8::I = case itemH_7 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsPopUpControl -> case (StdBool.not (windowaccess.identifyMaybeId id_6 w_1_0)) (True -> <{_Tuple3!7}> False itemH_7 tb_8) (False -> let info_4_0::I = <{wstateaccess.getWItemPopUpInfo`}> (select itemH_7::<{wstate._WItemHandle`}> 5), curindex_4_1::I = select info_4_0::<{wstate._PopUpInfo`}> 1, popUps_4_2 = select info_4_0::<{wstate._PopUpInfo`}> 0, nrPopUps_4_3::I = StdList.length_47 popUps_4_2, index_4_4 = commondef.setBetween index_3 1 nrPopUps_4_3 in case (<{StdInt.==_16}> curindex_4_1 index_4_4) (True -> <{_Tuple3!7}> True itemH_7 tb_8) (False -> let itemH_6_0 = update itemH_7::<{wstate._WItemHandle`}> [5:<{wstate.PopUpInfo`}> (update info_4_0::<{wstate._PopUpInfo`}> [1:index_4_4])] in <{_Tuple3!7}> True itemH_6_0 (oswindow.osSetPopUpControl wPtr_1 (select itemH_6_0::<{wstate._WItemHandle`}> 11) (StdMaybe.mapMaybe controlinternal.anon_60 (select info_4_0::<{wstate._PopUpInfo`}> 2)) clipRect_4 (commondef.posSizeToRect (StdIOBasic.movePoint (select itemH_7::<{wstate._WItemHandle`}> 9) parentPos_5) (select itemH_6_0::<{wstate._WItemHandle`}> 10)) curindex_4_1 index_4_4 (<{StdList.!!}> popUps_4_2 (<{StdInt.-_7}> index_4_4 1)) (controlinternal._f210_210 shownContext_2 itemH_7) tb_8)) ) ) (windowhandle.IsCompoundControl -> case (windowaccess.identifyMaybeId id_6 (select itemH_7::<{wstate._WItemHandle`}> 0)) (True -> <{_Tuple3!7}> True itemH_7 tb_8) (False -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_7::<{wstate._WItemHandle`}> 9) parentPos_5, _x_4_1 = wstateaccess.setWElement (controlinternal.selectWItemPopUp_61 wMetrics_0 wPtr_1 (controlinternal._f211_211 shownContext_2 itemH_7) index_3 (controlinternal.intersectRectContent wMetrics_0 clipRect_4 (<{wstateaccess.getWItemCompoundInfo`}> (select itemH_7::<{wstate._WItemHandle`}> 5)) absolutePos_4_0 (select itemH_7::<{wstate._WItemHandle`}> 10)) absolutePos_4_0) id_6 (select itemH_7::<{wstate._WItemHandle`}> 7) tb_8 in <{_Tuple3!7}> (select _x_4_1::_Tuple3 0) (update itemH_7::<{wstate._WItemHandle`}> [7:select _x_4_1::_Tuple3 1]) (select _x_4_1::_Tuple3 2)) ) (windowhandle.IsLayoutControl -> case (windowaccess.identifyMaybeId id_6 (select itemH_7::<{wstate._WItemHandle`}> 0)) (True -> <{_Tuple3!7}> True itemH_7 tb_8) (False -> let absolutePos_4_0 = StdIOBasic.movePoint (select itemH_7::<{wstate._WItemHandle`}> 9) parentPos_5, _x_4_1 = wstateaccess.setWElement (controlinternal.selectWItemPopUp_61 wMetrics_0 wPtr_1 (controlinternal._f212_212 shownContext_2 itemH_7) index_3 (commondef.intersectRects clipRect_4 (commondef.posSizeToRect absolutePos_4_0 (select itemH_7::<{wstate._WItemHandle`}> 10))) absolutePos_4_0) id_6 (select itemH_7::<{wstate._WItemHandle`}> 7) tb_8 in <{_Tuple3!7}> (select _x_4_1::_Tuple3 0) (update itemH_7::<{wstate._WItemHandle`}> [7:select _x_4_1::_Tuple3 1]) (select _x_4_1::_Tuple3 2)) ) ) (_ -> <{_Tuple3!7}> (windowaccess.identifyMaybeId id_6 (select itemH_7::<{wstate._WItemHandle`}> 0)) itemH_7 tb_8)
controlinternal._f212_212::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f211_211::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal._f210_210::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> False)
controlinternal.selectpopupitem !id_0 !index_1::I !wMetrics_2 !wPtr_3::I !wH_4 !tb_5::I = case wH_4 (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let _x_2_0 = wstateaccess.setWElement (controlinternal.selectWItemPopUp_61 wMetrics_2 wPtr_3 True index_1 (controlinternal.getContentRect wMetrics_2 whWindow_1_5 <{whSize`_1_12}>) StdIOBasic.zero_21) id_0 wh_1_6 tb_5 in <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [6:select _x_2_0::_Tuple3 1]) (select _x_2_0::_Tuple3 2)) 
controlinternal.fst_83 !tuple_0 = select tuple_0::_Tuple2 0
controlinternal.anon_62::I !_x_0 = case _x_0 (windowhandle._PopUpEditInfo popUpEditText_1_0 popUpEditPtr_1_1 -> popUpEditPtr_1_1) 
<{controlinternal.c;1054;58_63}> !g_l_0 = <{controlinternal.g_c1;1054;69_214}> g_l_0
<{controlinternal.g_c1;1054;69_214}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{controlinternal.g_c2;1054;69_213}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{controlinternal.g_c2;1054;69_213}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 title_1_0 f_1_1 -> _predefined._Cons (_Tuple2 title_1_0 (StdIOBasic.noLS f_1_1)) (<{controlinternal.c;1054;58_63}> g_t_1)) (_ -> <{controlinternal.c;1054;58_63}> g_t_1)
controlinternal.openWItemPopUpItems_64 !wPtr_0::I !index_1::I !items_2 !id_3 !itemH_4 !tb_5::I = case itemH_4 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsPopUpControl -> case (StdBool.not (windowaccess.identifyMaybeId id_3 (select itemH_4::windowhandle._WItemHandle 0))) (True -> <{_Tuple3!7}> False itemH_4 tb_5) (False -> let _x_4_0 = commondef.cselect StdControlAttribute.isControlTip StdMisc.undef (select itemH_4::windowhandle._WItemHandle 6) in case (StdBool.not (select _x_4_0::_Tuple2 0)) (True -> let popUp_6_0::I = windowaccess.getWItemPopUpInfo (select itemH_4::windowhandle._WItemHandle 5), cur_6_1::I = select popUp_6_0::windowhandle._PopUpInfo 0, _x_6_2 = commondef.split index_1 cur_6_1, before_6_3 = select _x_6_2::_Tuple2 0, after_6_4 = select _x_6_2::_Tuple2 1, new_6_5::B = <{StdList.++}> before_6_3 (<{StdList.++}> (<{controlinternal.c;1054;58_63}> items_2) after_6_4), cur_6_6::B = select popUp_6_0::windowhandle._PopUpInfo 1, new_6_7::I = <{controlinternal._if;1055;35_215}> (StdBool.not (<{StdInt.<_17}> index_1 cur_6_6)) cur_6_6 index_1, isEditable_6_8::I = commondef.contains StdControlAttribute.isControlKeyboard (select itemH_4::windowhandle._WItemHandle 6), ableContext_6_9 = select itemH_4::windowhandle._WItemHandle 4, popUpPos_6_10 = select itemH_4::windowhandle._WItemHandle 9, popUpSize_6_11 = select itemH_4::windowhandle._WItemHandle 10, _x_6_12 = oswindow.osCreateEmptyPopUpControl wPtr_0 (_Tuple2 0 0) (select itemH_4::windowhandle._WItemHandle 3) ableContext_6_9 (commondef.toTuple_76 popUpPos_6_10) (commondef.toTuple_72 popUpSize_6_11) (StdList.length_47 new_6_5) isEditable_6_8 tb_5, newPopUpPtr_6_13 = select _x_6_12::_Tuple3 0, editPtr_6_14 = select _x_6_12::_Tuple3 1 in <{_Tuple3!7}> True (update itemH_4::windowhandle._WItemHandle [5:windowhandle.PopUpInfo (windowhandle._PopUpInfo new_6_5 new_6_7 (<{controlinternal._if;1035;58_216}> isEditable_6_8 popUp_6_0 editPtr_6_14)),11:newPopUpPtr_6_13]) (oswindow.osDestroyPopUpControl (select itemH_4::windowhandle._WItemHandle 11) (StdMaybe.mapMaybe controlinternal.anon_62 (select popUp_6_0::windowhandle._PopUpInfo 2)) (oswindow.osCreatePopUpControlItems newPopUpPtr_6_13 (<{controlinternal._if;1030;39_217}> isEditable_6_8 editPtr_6_14) ableContext_6_9 (StdList.map controlinternal.fst_83 new_6_5) new_6_7 (select _x_6_12::_Tuple3 2)))) (False -> let popUp_6_0::I = windowaccess.getWItemPopUpInfo (select itemH_4::windowhandle._WItemHandle 5), cur_6_1::I = select popUp_6_0::windowhandle._PopUpInfo 0, _x_6_2 = commondef.split index_1 cur_6_1, before_6_3 = select _x_6_2::_Tuple2 0, after_6_4 = select _x_6_2::_Tuple2 1, new_6_5::B = <{StdList.++}> before_6_3 (<{StdList.++}> (<{controlinternal.c;1054;58_63}> items_2) after_6_4), cur_6_6::B = select popUp_6_0::windowhandle._PopUpInfo 1, new_6_7::I = <{controlinternal._if;1055;35_218}> (StdBool.not (<{StdInt.<_17}> index_1 cur_6_6)) cur_6_6 index_1, isEditable_6_8::I = commondef.contains StdControlAttribute.isControlKeyboard (select itemH_4::windowhandle._WItemHandle 6), ableContext_6_9 = select itemH_4::windowhandle._WItemHandle 4, popUpPos_6_10 = select itemH_4::windowhandle._WItemHandle 9, popUpSize_6_11 = select itemH_4::windowhandle._WItemHandle 10, _x_6_12 = oswindow.osCreateEmptyPopUpControl wPtr_0 (_Tuple2 0 0) (select itemH_4::windowhandle._WItemHandle 3) ableContext_6_9 (commondef.toTuple_76 popUpPos_6_10) (commondef.toTuple_72 popUpSize_6_11) (StdList.length_47 new_6_5) isEditable_6_8 tb_5, newPopUpPtr_6_13 = select _x_6_12::_Tuple3 0, editPtr_6_14 = select _x_6_12::_Tuple3 1 in <{_Tuple3!7}> True (update itemH_4::windowhandle._WItemHandle [5:windowhandle.PopUpInfo (windowhandle._PopUpInfo new_6_5 new_6_7 (<{controlinternal._if;1035;58_219}> isEditable_6_8 popUp_6_0 editPtr_6_14)),11:newPopUpPtr_6_13]) (ostooltip.osAddControlToolTip wPtr_0 newPopUpPtr_6_13 (StdControlAttribute.getControlTipAtt (select _x_4_0::_Tuple2 1)) (oswindow.osDestroyPopUpControl (select itemH_4::windowhandle._WItemHandle 11) (StdMaybe.mapMaybe controlinternal.anon_62 (select popUp_6_0::windowhandle._PopUpInfo 2)) (oswindow.osCreatePopUpControlItems newPopUpPtr_6_13 (<{controlinternal._if;1030;39_220}> isEditable_6_8 editPtr_6_14) ableContext_6_9 (StdList.map controlinternal.fst_83 new_6_5) new_6_7 (select _x_6_12::_Tuple3 2))))) ) ) (_ -> case (windowaccess.identifyMaybeId id_3 w_1_0) (True -> <{_Tuple3!7}> True itemH_4 tb_5) (False -> let _x_3_0 = controlinternal.openWElementsPopUpItems_66 wPtr_0 index_1 items_2 id_3 w_1_7 tb_5 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (update itemH_4::windowhandle._WItemHandle [7:select _x_3_0::_Tuple3 1]) (select _x_3_0::_Tuple3 2)) )) 
controlinternal.openWElementPopUpItems_65 !wPtr_0::I !id_1::I !index_2 !new_3 !_x_4 !tb_5::I = case _x_4 (windowhandle.WItemHandle itemH_1_0 -> let _x_2_0 = controlinternal.openWItemPopUpItems_64 wPtr_0 id_1 index_2 new_3 itemH_1_0 tb_5 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (windowhandle.WItemHandle (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = controlinternal.openWElementsPopUpItems_66 wPtr_0 id_1 index_2 new_3 itemHs_1_0 tb_5 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = controlinternal.openWElementsPopUpItems_66 wPtr_0 id_1 index_2 new_3 itemHs_2_1 tb_5 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 1])) (select _x_3_0::_Tuple3 2)) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = controlinternal.openWElementsPopUpItems_66 wPtr_0 id_1 index_2 new_3 itemHs_2_1 tb_5 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 1])) (select _x_3_0::_Tuple3 2)) ) 
controlinternal.openWElementsPopUpItems_66 !_x_0::I !_x_1::I !_x_2 !_x_3 !_x_4 !tb_5::I = case _x_4 (_predefined._Nil -> <{_Tuple3!7}> False _predefined._Nil tb_5) (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = controlinternal.openWElementPopUpItems_65 _x_0 _x_1 _x_2 _x_3 itemH_1_0 tb_5, done_2_1 = select _x_2_0::_Tuple3 0 in case done_2_1 (True -> <{_Tuple3!7}> done_2_1 (_predefined._Cons (select _x_2_0::_Tuple3 1) itemHs_1_1) (select _x_2_0::_Tuple3 2)) (False -> let _x_4_0 = controlinternal.openWElementsPopUpItems_66 _x_0 _x_1 _x_2 _x_3 itemHs_1_1 (select _x_2_0::_Tuple3 2) in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (_predefined._Cons (select _x_2_0::_Tuple3 1) (select _x_4_0::_Tuple3 1)) (select _x_4_0::_Tuple3 2)) ) 
<{controlinternal._if;1030;39_220}> !isEditable_0::B editPtr_1::I = case isEditable_0 (True -> Data.Maybe.Just editPtr_1) (_ -> Data.Maybe.Nothing)
<{controlinternal._if;1035;58_219}> !isEditable_0::B popUp_1 editPtr_2::I = case isEditable_0 (True -> Data.Maybe.Just (update (Data.Maybe.fromJust (select popUp_1::windowhandle._PopUpInfo 2))::windowhandle._PopUpEditInfo [1:editPtr_2])) (_ -> Data.Maybe.Nothing)
<{controlinternal._if;1055;35_218}>::I !_x_0::B !cur_1::I index_2::I = case _x_0 (True -> cur_1) (_ -> <{StdInt.+_6}> cur_1 index_2)
<{controlinternal._if;1030;39_217}> !isEditable_0::B editPtr_1::I = case isEditable_0 (True -> Data.Maybe.Just editPtr_1) (_ -> Data.Maybe.Nothing)
<{controlinternal._if;1035;58_216}> !isEditable_0::B popUp_1 editPtr_2::I = case isEditable_0 (True -> Data.Maybe.Just (update (Data.Maybe.fromJust (select popUp_1::windowhandle._PopUpInfo 2))::windowhandle._PopUpEditInfo [1:editPtr_2])) (_ -> Data.Maybe.Nothing)
<{controlinternal._if;1055;35_215}>::I !_x_0::B !cur_1::I index_2::I = case _x_0 (True -> cur_1) (_ -> <{StdInt.+_6}> cur_1 index_2)
controlinternal.openpopupitems !id_0 !index_1::I !new_2 !wPtr_3::I !wH_4 !tb_5::I = case wH_4 (windowhandle._WindowHandle whMode_1_0 whKind_1_1 whTitle_1_2 wh_1_3 whKeyFocus_1_4 whWindow_1_5 wh_1_6 whShow_1_7 whSelect_1_8 whAtts_1_9 whDefault_1_10 whCancel_1_11 whSize_1_12 whClosing_1_13 -> let _x_2_0 = controlinternal.openWElementsPopUpItems_66 wPtr_3 index_1 new_2 id_0 wh_1_6 tb_5 in <{_Tuple2!3}> (update wH_4::windowhandle._WindowHandle [6:select _x_2_0::_Tuple3 1]) (select _x_2_0::_Tuple3 2)) 
controlinternal.fst_85 !tuple_0 = select tuple_0::_Tuple2 0
controlinternal.snd_84 !tuple_0 = select tuple_0::_Tuple2 1
controlinternal.anon_67::B !_vEq_0 !indexs_1 !_x_2 = case _x_2 (_Tuple2 i_1_0 _x_1_1 -> StdBool.not (StdList.isMember _vEq_0 i_1_0 indexs_1)) 
controlinternal.anon_133::B !indexs_0 !_x_1 = case _x_1 (_Tuple2 i_1_0 _x_1_1 -> StdBool.not (StdList.isMember_51 i_1_0 indexs_0)) 
controlinternal.closeWItemPopUpItems_68 !wPtr_0::I !indexs_1 !id_2 !itemH_3 !tb_4::I = case itemH_3 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsPopUpControl -> case (StdBool.not (windowaccess.identifyMaybeId id_2 (select itemH_3::windowhandle._WItemHandle 0))) (True -> <{_Tuple3!7}> False itemH_3 tb_4) (False -> let _x_4_0 = commondef.cselect StdControlAttribute.isControlTip StdMisc.undef (select itemH_3::windowhandle._WItemHandle 6) in case (StdBool.not (select _x_4_0::_Tuple2 0)) (True -> let popUp_6_0::I = windowaccess.getWItemPopUpInfo (select itemH_3::windowhandle._WItemHandle 5), cur_6_1 = select popUp_6_0::windowhandle._PopUpInfo 0, new_6_2::I = StdList.map controlinternal.snd_84 (StdList.filter (controlinternal.anon_133 indexs_1) (StdList.zip2 (_SystemEnum._from_4 1) cur_6_1)), cur_6_3 = select popUp_6_0::windowhandle._PopUpInfo 1, new_6_4 = <{controlinternal._if;1137;39_222}> (StdList.isMember_51 cur_6_3 indexs_1) new_6_2 cur_6_3, isEditable_6_5 = commondef.contains StdControlAttribute.isControlKeyboard (select itemH_3::windowhandle._WItemHandle 6), ableContext_6_6::B = select itemH_3::windowhandle._WItemHandle 4, popUpPos_6_7::B = select itemH_3::windowhandle._WItemHandle 9, popUpSize_6_8::I = select itemH_3::windowhandle._WItemHandle 10, _x_6_9::I = oswindow.osCreateEmptyPopUpControl wPtr_0 (_Tuple2 0 0) (select itemH_3::windowhandle._WItemHandle 3) ableContext_6_6 (commondef.toTuple_76 popUpPos_6_7) (commondef.toTuple_72 popUpSize_6_8) (StdList.length_47 new_6_2) isEditable_6_5 tb_4, newPopUpPtr_6_10 = select _x_6_9::_Tuple3 0, maybeEditPtr_6_11 = <{controlinternal._if;1112;39_221}> isEditable_6_5 editPtr_6_12, editPtr_6_12 = select _x_6_9::_Tuple3 1 in <{_Tuple3!7}> True (update itemH_3::windowhandle._WItemHandle [5:windowhandle.PopUpInfo (windowhandle._PopUpInfo new_6_2 new_6_4 (<{controlinternal._if;1117;58_223}> isEditable_6_5 popUp_6_0 editPtr_6_12)),11:newPopUpPtr_6_10]) (oswindow.osDestroyPopUpControl (select itemH_3::windowhandle._WItemHandle 11) maybeEditPtr_6_11 (oswindow.osCreatePopUpControlItems newPopUpPtr_6_10 maybeEditPtr_6_11 ableContext_6_6 (StdList.map controlinternal.fst_85 new_6_2) new_6_4 (select _x_6_9::_Tuple3 2)))) (False -> let popUp_6_0::I = windowaccess.getWItemPopUpInfo (select itemH_3::windowhandle._WItemHandle 5), cur_6_1 = select popUp_6_0::windowhandle._PopUpInfo 0, new_6_2::I = StdList.map controlinternal.snd_84 (StdList.filter (controlinternal.anon_133 indexs_1) (StdList.zip2 (_SystemEnum._from_4 1) cur_6_1)), cur_6_3 = select popUp_6_0::windowhandle._PopUpInfo 1, new_6_4 = <{controlinternal._if;1137;39_225}> (StdList.isMember_51 cur_6_3 indexs_1) new_6_2 cur_6_3, isEditable_6_5 = commondef.contains StdControlAttribute.isControlKeyboard (select itemH_3::windowhandle._WItemHandle 6), ableContext_6_6::B = select itemH_3::windowhandle._WItemHandle 4, popUpPos_6_7::B = select itemH_3::windowhandle._WItemHandle 9, popUpSize_6_8::I = select itemH_3::windowhandle._WItemHandle 10, _x_6_9::I = oswindow.osCreateEmptyPopUpControl wPtr_0 (_Tuple2 0 0) (select itemH_3::windowhandle._WItemHandle 3) ableContext_6_6 (commondef.toTuple_76 popUpPos_6_7) (commondef.toTuple_72 popUpSize_6_8) (StdList.length_47 new_6_2) isEditable_6_5 tb_4, newPopUpPtr_6_10 = select _x_6_9::_Tuple3 0, maybeEditPtr_6_11 = <{controlinternal._if;1112;39_224}> isEditable_6_5 editPtr_6_12, editPtr_6_12 = select _x_6_9::_Tuple3 1 in <{_Tuple3!7}> True (update itemH_3::windowhandle._WItemHandle [5:windowhandle.PopUpInfo (windowhandle._PopUpInfo new_6_2 new_6_4 (<{controlinternal._if;1117;58_226}> isEditable_6_5 popUp_6_0 editPtr_6_12)),11:newPopUpPtr_6_10]) (ostooltip.osAddControlToolTip wPtr_0 newPopUpPtr_6_10 (StdControlAttribute.getControlTipAtt (select _x_4_0::_Tuple2 1)) (oswindow.osDestroyPopUpControl (select itemH_3::windowhandle._WItemHandle 11) maybeEditPtr_6_11 (oswindow.osCreatePopUpControlItems newPopUpPtr_6_10 maybeEditPtr_6_11 ableContext_6_6 (StdList.map controlinternal.fst_85 new_6_2) new_6_4 (select _x_6_9::_Tuple3 2))))) ) ) (_ -> case (windowaccess.identifyMaybeId id_2 w_1_0) (True -> <{_Tuple3!7}> True itemH_3 tb_4) (False -> let _x_3_0 = controlinternal.closeWElementsPopUpItems_70 wPtr_0 indexs_1 id_2 w_1_7 tb_4 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (update itemH_3::windowhandle._WItemHandle [7:select _x_3_0::_Tuple3 1]) (select _x_3_0::_Tuple3 2)) )) 
controlinternal.closeWElementPopUpItems_69 !wPtr_0::I !indexs_1 !id_2 !_x_3 !tb_4::I = case _x_3 (windowhandle.WItemHandle itemH_1_0 -> let _x_2_0 = controlinternal.closeWItemPopUpItems_68 wPtr_0 indexs_1 id_2 itemH_1_0 tb_4 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (windowhandle.WItemHandle (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = controlinternal.closeWElementsPopUpItems_70 wPtr_0 indexs_1 id_2 itemHs_1_0 tb_4 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = controlinternal.closeWElementsPopUpItems_70 wPtr_0 indexs_1 id_2 itemHs_2_1 tb_4 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 1])) (select _x_3_0::_Tuple3 2)) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = controlinternal.closeWElementsPopUpItems_70 wPtr_0 indexs_1 id_2 itemHs_2_1 tb_4 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 1])) (select _x_3_0::_Tuple3 2)) ) 
controlinternal.closeWElementsPopUpItems_70 !_x_0::I !_x_1 !_x_2 !_x_3 !tb_4::I = case _x_3 (_predefined._Nil -> <{_Tuple3!7}> False _predefined._Nil tb_4) (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = controlinternal.closeWElementPopUpItems_69 _x_0 _x_1 _x_2 itemH_1_0 tb_4, done_2_1 = select _x_2_0::_Tuple3 0 in case done_2_1 (True -> <{_Tuple3!7}> done_2_1 (_predefined._Cons (select _x_2_0::_Tuple3 1) itemHs_1_1) (select _x_2_0::_Tuple3 2)) (False -> let _x_4_0 = controlinternal.closeWElementsPopUpItems_70 _x_0 _x_1 _x_2 itemHs_1_1 (select _x_2_0::_Tuple3 2) in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (_predefined._Cons (select _x_2_0::_Tuple3 1) (select _x_4_0::_Tuple3 1)) (select _x_4_0::_Tuple3 2)) ) 
<{controlinternal._if;1117;58_226}> !isEditable_0::B popUp_1 editPtr_2::I = case isEditable_0 (True -> Data.Maybe.Just (update (Data.Maybe.fromJust (select popUp_1::windowhandle._PopUpInfo 2))::windowhandle._PopUpEditInfo [1:editPtr_2])) (_ -> Data.Maybe.Nothing)
<{controlinternal._if;1137;39_225}>::I !_x_0::B new_1 cur_2::I = case _x_0 (True -> 1) (_ -> let nrNew_1_0::I = StdList.length_47 new_1 in case (<{StdInt.<_17}> nrNew_1_0 cur_2) (True -> nrNew_1_0) (False -> cur_2) )
<{controlinternal._if;1112;39_224}> !isEditable_0::B editPtr_1::I = case isEditable_0 (True -> Data.Maybe.Just editPtr_1) (_ -> Data.Maybe.Nothing)
<{controlinternal._if;1117;58_223}> !isEditable_0::B popUp_1 editPtr_2::I = case isEditable_0 (True -> Data.Maybe.Just (update (Data.Maybe.fromJust (select popUp_1::windowhandle._PopUpInfo 2))::windowhandle._PopUpEditInfo [1:editPtr_2])) (_ -> Data.Maybe.Nothing)
<{controlinternal._if;1137;39_222}>::I !_x_0::B new_1 cur_2::I = case _x_0 (True -> 1) (_ -> let nrNew_1_0::I = StdList.length_47 new_1 in case (<{StdInt.<_17}> nrNew_1_0 cur_2) (True -> nrNew_1_0) (False -> cur_2) )
<{controlinternal._if;1112;39_221}> !isEditable_0::B editPtr_1::I = case isEditable_0 (True -> Data.Maybe.Just editPtr_1) (_ -> Data.Maybe.Nothing)
controlinternal.closepopupitems !id_0 !indexs_1 !wPtr_2::I !wH_3 !tb_4::I = case wH_3 (windowhandle._WindowHandle whMode_1_0 whKind_1_1 whTitle_1_2 wh_1_3 whKeyFocus_1_4 whWindow_1_5 wh_1_6 whShow_1_7 whSelect_1_8 whAtts_1_9 whDefault_1_10 whCancel_1_11 whSize_1_12 whClosing_1_13 -> let _x_2_0 = controlinternal.closeWElementsPopUpItems_70 wPtr_2 indexs_1 id_0 wh_1_6 tb_4 in <{_Tuple2!3}> (update wH_3::windowhandle._WindowHandle [6:select _x_2_0::_Tuple3 1]) (select _x_2_0::_Tuple3 2)) 
controlinternal.makeMetricsInfo !wMetrics_0 <{whKind`_1}> <{whSize`_2}> !<{whAtts`_3}> whWindow_4 = case wMetrics_0 (ossystem._OSWindowMetrics osmFont_1_0 osmFontMetrics_1_1 osmHeight_1_2 osmHorMargin_1_3 osmVerMargin_1_4 osmHor_1_5 osmVer_1_6 osmHSliderHeight_1_7 osmVSliderWidth_1_8 -> let _x_2_0::I = <{controlinternal._if;1210;31_227}> (<{windowhandle.==_6}> <{whKind`_1}> windowhandle.IsDialog) <{whSize`_2}> osmHorMargin_1_3 osmVerMargin_1_4 whWindow_4, defHMargin_2_1::I = select _x_2_0::_Tuple4 2, defVMargin_2_2 = select _x_2_0::_Tuple4 3 in controlinternal._MetricsInfo wMetrics_0 (<{wstateaccess.getwindowhmargin`}> (select (commondef.cselect <{wstateaccess.iswindowhmargin`}> (<{wstate.WindowHMargin`}> defHMargin_2_1 defHMargin_2_1) <{whAtts`_3}>)::_Tuple2 1)) (<{wstateaccess.getwindowvmargin`}> (select (commondef.cselect <{wstateaccess.iswindowvmargin`}> (<{wstate.WindowVMargin`}> defVMargin_2_2 defVMargin_2_2) <{whAtts`_3}>)::_Tuple2 1)) (<{wstateaccess.getwindowitemspace`}> (select (commondef.cselect <{wstateaccess.iswindowitemspace`}> (<{wstate.WindowItemSpace`}> osmHor_1_5 osmVer_1_6) <{whAtts`_3}>)::_Tuple2 1)) (_predefined._Cons (_Tuple2 (commondef.rectToRectangle (select _x_2_0::_Tuple4 0)) (select _x_2_0::_Tuple4 1)) _predefined._Nil)) 
<{controlinternal._if;1210;31_227}> !_x_0::B <{whSize`_1}> osmHorMargin_2::I osmVerMargin_3::I whWindow_4 = case _x_0 (True -> _Tuple4 (commondef.sizeToRect <{whSize`_1}>) StdIOBasic.zero_21 osmHorMargin_2 osmVerMargin_3) (_ -> let window_1_0 = windowaccess.getWindowInfoWindowData whWindow_4 in _Tuple4 (select window_1_0::windowhandle._WindowData 0) (select window_1_0::windowhandle._WindowData 1) 0 0)
controlinternal.hPtr_73::I info_0 !hasHScroll_1::B = case hasHScroll_1 (True -> select (Data.Maybe.fromJust (select info_0::windowhandle._CompoundInfo 2))::windowhandle._ScrollInfo 3) (False -> -1) 
controlinternal.scrollRect_72 vRect_0 hRect_1 !isHScroll_2::B = case isHScroll_2 (True -> hRect_1) (False -> vRect_0) 
controlinternal.setcompoundsliderthumb::I !hasScroll_0::B able_1::B wMetrics_2 windPtr_3::I compPtr_4::I itemPtr_5::I isHScroll_6::B scrollValues_7 viewSize_8::I maxcoords_9 !_x_10 !tb_11::I = case _x_10 (_Tuple2 hRect_1_0 vRect_1_1 -> case (StdBool.not hasScroll_0) (True -> tb_11) (False -> let _x_3_0 = oswindow.toOSscrollbarRange scrollValues_7 viewSize_8 in oswindow.osSetCompoundSliderThumb wMetrics_2 windPtr_3 compPtr_4 itemPtr_5 (controlinternal.scrollRect_72 vRect_1_1 hRect_1_0 isHScroll_6) isHScroll_6 (select _x_3_0::_Tuple4 1) maxcoords_9 True (oswindow.osUpdateCompoundScroll windPtr_3 itemPtr_5 (controlinternal.scrollRect_72 vRect_1_1 hRect_1_0 isHScroll_6) (oswindow.osSetCompoundSliderThumbSize wMetrics_2 windPtr_3 compPtr_4 itemPtr_5 (select _x_3_0::_Tuple4 0) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3) (controlinternal.scrollRect_72 vRect_1_1 hRect_1_0 isHScroll_6) isHScroll_6 able_1 False tb_11))) ) 
controlinternal.vPtr_74::I info_0 !hasVScroll_1::B = case hasVScroll_1 (True -> select (Data.Maybe.fromJust (select info_0::windowhandle._CompoundInfo 3))::windowhandle._ScrollInfo 3) (False -> -1) 
<{controlinternal.shiftControl`_71}> !v_0 !_x_1 = case _x_1 (<{wstate.WItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{wstate._WItemHandle`}> w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> <{wstate.WItemHandle`}> (update itemH_1_0::<{wstate._WItemHandle`}> [9:<{StdIOBasic.+_9}> v_0 w_2_9])) ) (<{wstate.WRecursiveHandle`}> itemHs_1_0 kind_1_1 -> <{wstate.WRecursiveHandle`}> (<{controlinternal.shiftControls`}> v_0 itemHs_1_0) kind_1_1) 
<{controlinternal.shiftControls`}> !v_0 !itemHs_1 = StdList.map (<{controlinternal.shiftControl`_71}> v_0) itemHs_1
controlinternal.moveWItemFrame_75 !metrics_0 !wPtr_1::I !default_2 !withinCompound_3::B !shownContext_4::B !ableContext_5::B !clipRect_6 !parentPos_7 !compoundPos_8 !v_9 !id_10 !itemH_11 !updRgn_tb_12 = case metrics_0 (controlinternal._MetricsInfo miOSMetrics_1_0 miHMargins_1_1 miVMargins_1_2 mi_1_3 miOrientation_1_4 -> case itemH_11 (<{wstate._WItemHandle`}> w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (windowhandle.isRecursiveControl w_2_2)) (True -> <{_Tuple3!7}> (windowaccess.identifyMaybeId id_10 w_2_0) itemH_11 updRgn_tb_12) (False -> case (<{windowhandle.==_8}> w_2_2 windowhandle.IsLayoutControl) (True -> case (windowaccess.identifyMaybeId id_10 w_2_0) (True -> <{_Tuple3!7}> True itemH_11 updRgn_tb_12) (False -> let itemAtts_6_0 = select itemH_11::<{wstate._WItemHandle`}> 6, absolutePos_6_1 = StdIOBasic.movePoint (select itemH_11::<{wstate._WItemHandle`}> 9) parentPos_7, _x_6_2 = wstateaccess.setWElement (controlinternal.moveWItemFrame_75 (update metrics_0::controlinternal._MetricsInfo [1:<{wstateaccess.getcontrolhmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolhmargin`}> (<{wstate.ControlHMargin`}> (select miHMargins_1_1::_Tuple2 0) (select miHMargins_1_1::_Tuple2 1)) itemAtts_6_0)::_Tuple2 1),2:<{wstateaccess.getcontrolvmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolvmargin`}> (<{wstate.ControlVMargin`}> (select miVMargins_1_2::_Tuple2 0) (select miVMargins_1_2::_Tuple2 1)) itemAtts_6_0)::_Tuple2 1),3:<{wstateaccess.getcontrolitemspace`}> (select (commondef.cselect <{wstateaccess.iscontrolitemspace`}> (<{wstate.ControlItemSpace`}> (select mi_1_3::_Tuple2 0) (select mi_1_3::_Tuple2 1)) itemAtts_6_0)::_Tuple2 1)]) wPtr_1 default_2 withinCompound_3 (<{controlinternal._if;1313;35_228}> shownContext_4 itemH_11) (controlinternal._f229_229 ableContext_5 itemH_11) (commondef.intersectRects clipRect_6 (commondef.posSizeToRect absolutePos_6_1 (select itemH_11::<{wstate._WItemHandle`}> 10))) absolutePos_6_1 compoundPos_8 v_9) id_10 (select itemH_11::<{wstate._WItemHandle`}> 7) updRgn_tb_12 in <{_Tuple3!7}> (select _x_6_2::_Tuple3 0) (update itemH_11::<{wstate._WItemHandle`}> [7:select _x_6_2::_Tuple3 1]) (select _x_6_2::_Tuple3 2)) ) (False -> case (StdBool.not (windowaccess.identifyMaybeId id_10 (select itemH_11::<{wstate._WItemHandle`}> 0))) (True -> let itemAtts_6_0 = select itemH_11::<{wstate._WItemHandle`}> 6, info_6_1 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_11::<{wstate._WItemHandle`}> 5), domainRect_6_2 = select info_6_1::windowhandle._CompoundInfo 0, itemSize_6_3 = select itemH_11::<{wstate._WItemHandle`}> 10, _x_6_4 = _Tuple2 (Data.Maybe.isJust (select info_6_1::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_6_1::windowhandle._CompoundInfo 3)), itemPos_6_5 = select itemH_11::<{wstate._WItemHandle`}> 9, absolutePos_6_6 = StdIOBasic.movePoint itemPos_6_5 parentPos_7, _x_6_7 = wstateaccess.setWElement (controlinternal.moveWItemFrame_75 (update metrics_0::controlinternal._MetricsInfo [1:<{wstateaccess.getcontrolhmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolhmargin`}> (<{wstate.ControlHMargin`}> (select miHMargins_1_1::_Tuple2 0) (select miHMargins_1_1::_Tuple2 1)) itemAtts_6_0)::_Tuple2 1),2:<{wstateaccess.getcontrolvmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolvmargin`}> (<{wstate.ControlVMargin`}> (select miVMargins_1_2::_Tuple2 0) (select miVMargins_1_2::_Tuple2 1)) itemAtts_6_0)::_Tuple2 1),3:<{wstateaccess.getcontrolitemspace`}> (select (commondef.cselect <{wstateaccess.iscontrolitemspace`}> (<{wstate.ControlItemSpace`}> (select mi_1_3::_Tuple2 0) (select mi_1_3::_Tuple2 1)) itemAtts_6_0)::_Tuple2 1),4:_predefined._Cons (_Tuple2 (commondef.rectToRectangle domainRect_6_2) (select info_6_1::windowhandle._CompoundInfo 1)) miOrientation_1_4]) wPtr_1 default_2 True (<{controlinternal._if;1313;35_230}> shownContext_4 itemH_11) (controlinternal._f231_231 ableContext_5 itemH_11) (commondef.intersectRects (oswindow.osGetCompoundContentRect miOSMetrics_1_0 (oswindow.osScrollbarsAreVisible miOSMetrics_1_0 domainRect_6_2 (commondef.toTuple_72 itemSize_6_3) (_Tuple2 (select _x_6_4::_Tuple2 0) (select _x_6_4::_Tuple2 1))) (commondef.posSizeToRect absolutePos_6_6 itemSize_6_3)) clipRect_6) absolutePos_6_6 (<{StdIOBasic.+_9}> compoundPos_8 itemPos_6_5) v_9) id_10 (select itemH_11::<{wstate._WItemHandle`}> 7) updRgn_tb_12 in <{_Tuple3!7}> (select _x_6_7::_Tuple3 0) (update itemH_11::<{wstate._WItemHandle`}> [7:select _x_6_7::_Tuple3 1]) (select _x_6_7::_Tuple3 2)) (False -> let info_6_0 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_11::<{wstate._WItemHandle`}> 5), oldOrigin_6_1::I = select info_6_0::windowhandle._CompoundInfo 1, domainRect_6_2::I = select info_6_0::windowhandle._CompoundInfo 0, itemSize_6_3::I = select itemH_11::<{wstate._WItemHandle`}> 10, _x_6_4 = _Tuple2 (Data.Maybe.isJust (select info_6_0::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_6_0::windowhandle._CompoundInfo 3)), hasHScroll_6_5::I = select _x_6_4::_Tuple2 0, hasVScroll_6_6::I = select _x_6_4::_Tuple2 1, visScrolls_6_7::I = oswindow.osScrollbarsAreVisible miOSMetrics_1_0 domainRect_6_2 (commondef.toTuple_72 itemSize_6_3) (_Tuple2 hasHScroll_6_5 hasVScroll_6_6), itemPos_6_8 = select itemH_11::<{wstate._WItemHandle`}> 9, absolutePos_6_9 = StdIOBasic.movePoint itemPos_6_8 parentPos_7, contentRect_6_10 = oswindow.osGetCompoundContentRect miOSMetrics_1_0 visScrolls_6_7 (commondef.posSizeToRect absolutePos_6_9 itemSize_6_3), contentSize_6_11 = commondef.rectSize contentRect_6_10, _x_6_12 = _Tuple3 (select domainRect_6_2::ostypes._OSRect 0) (select domainRect_6_2::ostypes._OSRect 2) (select contentSize_6_11::StdIOBasic._Size 0), minx_6_13 = select _x_6_12::_Tuple3 0, maxx_6_14::B = select _x_6_12::_Tuple3 1, viewx_6_15::B = select _x_6_12::_Tuple3 2, _x_6_16 = _Tuple3 (select domainRect_6_2::ostypes._OSRect 1) (select domainRect_6_2::ostypes._OSRect 3) (select contentSize_6_11::StdIOBasic._Size 1), miny_6_17 = select _x_6_16::_Tuple3 0, maxy_6_18 = select _x_6_16::_Tuple3 1, viewy_6_19 = select _x_6_16::_Tuple3 2, newOrigin_6_20 = StdIOBasic._Point2 (commondef.setBetweenCheckBounds (<{StdInt.+_6}> (select oldOrigin_6_1::StdIOBasic._Point2 0) (select v_9::StdIOBasic._Vector2 0)) minx_6_13 (<{StdInt.-_7}> maxx_6_14 viewx_6_15)) (commondef.setBetweenCheckBounds (<{StdInt.+_6}> (select oldOrigin_6_1::StdIOBasic._Point2 1) (select v_9::StdIOBasic._Vector2 1)) miny_6_17 (<{StdInt.-_7}> maxy_6_18 viewy_6_19)) in case (<{StdIOBasic.==_18}> newOrigin_6_20 oldOrigin_6_1) (True -> <{_Tuple3!7}> True itemH_11 updRgn_tb_12) (False -> case (StdList.isEmpty (select itemH_11::<{wstate._WItemHandle`}> 7)) (True -> let ableContext1_9_0 = controlinternal._f234_234 ableContext_5 itemH_11, itemPtr_9_1 = select itemH_11::<{wstate._WItemHandle`}> 11, hRect_9_2 = oswindow.osGetCompoundHScrollRect miOSMetrics_1_0 visScrolls_6_7 (commondef.posSizeToRect absolutePos_6_9 itemSize_6_3), vRect_9_3::I = oswindow.osGetCompoundVScrollRect miOSMetrics_1_0 visScrolls_6_7 (commondef.posSizeToRect absolutePos_6_9 itemSize_6_3), _x_9_4::B = <{controldraw.drawCompoundLook`}> miOSMetrics_1_0 ableContext1_9_0 wPtr_1 parentPos_7 (commondef.intersectRects contentRect_6_10 clipRect_6) (update itemH_11::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_6_0::windowhandle._CompoundInfo [1:newOrigin_6_20])]) (controlinternal.setcompoundsliderthumb (controlinternal._f232_232 hasVScroll_6_6 newOrigin_6_20 oldOrigin_6_1) ableContext1_9_0 miOSMetrics_1_0 wPtr_1 itemPtr_9_1 (controlinternal.vPtr_74 info_6_0 hasVScroll_6_6) False (_Tuple3 miny_6_17 (select newOrigin_6_20::StdIOBasic._Point2 1) maxy_6_18) viewy_6_19 (commondef.toTuple_72 itemSize_6_3) (_Tuple2 hRect_9_2 vRect_9_3) (controlinternal.setcompoundsliderthumb (controlinternal._f233_233 hasHScroll_6_5 newOrigin_6_20 oldOrigin_6_1) ableContext1_9_0 miOSMetrics_1_0 wPtr_1 itemPtr_9_1 (controlinternal.hPtr_73 info_6_0 hasHScroll_6_5) True (_Tuple3 minx_6_13 (select newOrigin_6_20::StdIOBasic._Point2 0) maxx_6_14) viewx_6_15 (commondef.toTuple_72 itemSize_6_3) (_Tuple2 hRect_9_2 vRect_9_3) (select updRgn_tb_12::_Tuple2 1))) in <{_Tuple3!7}> True (select _x_9_4::_Tuple2 0) (_Tuple2 (select updRgn_tb_12::_Tuple2 0) (select _x_9_4::_Tuple2 1))) (False -> let ableContext1_9_0::I = controlinternal._f239_239 ableContext_5 itemH_11, itemAtts_9_1 = select itemH_11::<{wstate._WItemHandle`}> 6, <{hMargins`_9_2}> = <{wstateaccess.getcontrolhmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolhmargin`}> (<{wstate.ControlHMargin`}> (select miHMargins_1_1::_Tuple2 0) (select miHMargins_1_1::_Tuple2 1)) itemAtts_9_1)::_Tuple2 1), <{vMargins`_9_3}> = <{wstateaccess.getcontrolvmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolvmargin`}> (<{wstate.ControlVMargin`}> (select miVMargins_1_2::_Tuple2 0) (select miVMargins_1_2::_Tuple2 1)) itemAtts_9_1)::_Tuple2 1), <{spaces`_9_4}> = <{wstateaccess.getcontrolitemspace`}> (select (commondef.cselect <{wstateaccess.iscontrolitemspace`}> (<{wstate.ControlItemSpace`}> (select mi_1_3::_Tuple2 0) (select mi_1_3::_Tuple2 1)) itemAtts_9_1)::_Tuple2 1), domain_9_5 = commondef.rectToRectangle domainRect_6_2, <{orientation`_9_6}>::I = _predefined._Cons (_Tuple2 domain_9_5 newOrigin_6_20) miOrientation_1_4, old_9_7::I = select itemH_11::<{wstate._WItemHandle`}> 7, itemPtr_9_8::I = select itemH_11::<{wstate._WItemHandle`}> 11, hRect_9_9 = oswindow.osGetCompoundHScrollRect miOSMetrics_1_0 visScrolls_6_7 (commondef.posSizeToRect absolutePos_6_9 itemSize_6_3), vRect_9_10 = oswindow.osGetCompoundVScrollRect miOSMetrics_1_0 visScrolls_6_7 (commondef.posSizeToRect absolutePos_6_9 itemSize_6_3), tb_9_11::I = select updRgn_tb_12::_Tuple2 1, tb_9_12 = controlinternal.setcompoundsliderthumb (controlinternal._f238_238 hasHScroll_6_5 newOrigin_6_20 oldOrigin_6_1) ableContext1_9_0 miOSMetrics_1_0 wPtr_1 itemPtr_9_8 (controlinternal.hPtr_73 info_6_0 hasHScroll_6_5) True (_Tuple3 minx_6_13 (select newOrigin_6_20::StdIOBasic._Point2 0) maxx_6_14) viewx_6_15 (commondef.toTuple_72 itemSize_6_3) (_Tuple2 hRect_9_9 vRect_9_10) tb_9_11, tb_9_13 = controlinternal.setcompoundsliderthumb (controlinternal._f237_237 hasVScroll_6_6 newOrigin_6_20 oldOrigin_6_1) ableContext1_9_0 miOSMetrics_1_0 wPtr_1 itemPtr_9_8 (controlinternal.vPtr_74 info_6_0 hasVScroll_6_6) False (_Tuple3 miny_6_17 (select newOrigin_6_20::StdIOBasic._Point2 1) maxy_6_18) viewy_6_19 (commondef.toTuple_72 itemSize_6_3) (_Tuple2 hRect_9_9 vRect_9_10) tb_9_12, _x_9_14 = <{controllayout.layoutControls`}> miOSMetrics_1_0 <{hMargins`_9_2}> <{vMargins`_9_3}> <{spaces`_9_4}> itemSize_6_3 itemSize_6_3 <{orientation`_9_6}> old_9_7 tb_9_13, _x_9_15 = <{windowclipstate.forceValidCompoundClipState`}> miOSMetrics_1_0 True wPtr_1 parentPos_7 default_2 shownContext_4 (update itemH_11::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_6_0::windowhandle._CompoundInfo [1:newOrigin_6_20]),7:<{controlinternal.shiftControls`}> itemPos_6_8 (select _x_9_14::_Tuple3 1)]) (<{controlinternal._c;1284;35_236}> (select updRgn_tb_12::_Tuple2 0) tb_9_19), itemH_9_16 = select _x_9_15::_Tuple2 0, _x_9_17 = <{controlrelayout.relayoutControls`}> miOSMetrics_1_0 itemPtr_9_8 default_2 True ableContext1_9_0 (<{controlinternal._if;1313;35_235}> shownContext_4 itemH_11) (_Tuple4 contentRect_6_10 absolutePos_6_9 compoundPos_8 old_9_7) (_Tuple4 contentRect_6_10 absolutePos_6_9 compoundPos_8 (select itemH_9_16::<{wstate._WItemHandle`}> 7)) (select _x_9_15::_Tuple2 1), _x_9_18 = <{controldraw.drawCompoundLook`}> miOSMetrics_1_0 ableContext1_9_0 wPtr_1 parentPos_7 (commondef.intersectRects contentRect_6_10 clipRect_6) itemH_9_16 (select _x_9_17::_Tuple2 1), tb_9_19::B = select _x_9_14::_Tuple3 2 in <{_Tuple3!7}> True (select _x_9_18::_Tuple2 0) (_Tuple2 (Data.Maybe.Just (select _x_9_17::_Tuple2 0)) (select _x_9_18::_Tuple2 1))) ) ) ) ) ) ) 
controlinternal._f239_239::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f238_238::B !hasHScroll_0::B newOrigin_1 oldOrigin_2 = case hasHScroll_0 (True -> StdBool.not (<{StdInt.==_16}> (select newOrigin_1::StdIOBasic._Point2 0) (select oldOrigin_2::StdIOBasic._Point2 0))) (_ -> False)
controlinternal._f237_237::B !hasVScroll_0::B newOrigin_1 oldOrigin_2 = case hasVScroll_0 (True -> StdBool.not (<{StdInt.==_16}> (select newOrigin_1::StdIOBasic._Point2 1) (select oldOrigin_2::StdIOBasic._Point2 1))) (_ -> False)
<{controlinternal._c;1284;35_236}>::I !_x_0 !tb_1::I = case _x_0 (Data.Maybe.Just rgn_1_0 -> osrgn.osdisposergn rgn_1_0 tb_1) (_ -> tb_1)
<{controlinternal._if;1313;35_235}>::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> shownContext_0)
controlinternal._f234_234::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f233_233::B !hasHScroll_0::B newOrigin_1 oldOrigin_2 = case hasHScroll_0 (True -> StdBool.not (<{StdInt.==_16}> (select newOrigin_1::StdIOBasic._Point2 0) (select oldOrigin_2::StdIOBasic._Point2 0))) (_ -> False)
controlinternal._f232_232::B !hasVScroll_0::B newOrigin_1 oldOrigin_2 = case hasVScroll_0 (True -> StdBool.not (<{StdInt.==_16}> (select newOrigin_1::StdIOBasic._Point2 1) (select oldOrigin_2::StdIOBasic._Point2 1))) (_ -> False)
controlinternal._f231_231::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
<{controlinternal._if;1313;35_230}>::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> shownContext_0)
controlinternal._f229_229::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
<{controlinternal._if;1313;35_228}>::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> shownContext_0)
controlinternal.movecontrolviewframe !id_0 !v_1 !wMetrics_2 !wids_3 !wH_4 !tb_5::I = case wids_3 (windowhandle._WIDS w_1_0 wPtr_1_1 wActive_1_2 -> case wH_4 (<{wstate._WindowHandle`}> whMode`_2_0 whKind`_2_1 whTitle`_2_2 wh_2_3 whKeyFocus`_2_4 whWindow_2_5 wh_2_6 whShow`_2_7 whSelect`_2_8 whAtts`_2_9 whDefault_2_10 whCancel_2_11 whSize`_2_12 whClosing`_2_13 -> case (<{windowhandle.==_6}> <{whKind`_2_1}> windowhandle.IsGameWindow) (True -> <{_Tuple2!3}> wH_4 tb_5) (False -> let metrics_4_0 = controlinternal.makeMetricsInfo wMetrics_2 <{whKind`_2_1}> <{whSize`_2_12}> <{whAtts`_2_9}> whWindow_2_5, clipRect_4_1 = controlinternal.getContentRect wMetrics_2 whWindow_2_5 <{whSize`_2_12}>, _x_4_2 = wstateaccess.setWElement (controlinternal.moveWItemFrame_75 metrics_4_0 wPtr_1_1 whDefault_2_10 False True <{whSelect`_2_8}> clipRect_4_1 StdIOBasic.zero_21 StdIOBasic.zero_11 v_1) id_0 wh_2_6 (_Tuple2 Data.Maybe.Nothing tb_5), _x_4_3 = select _x_4_2::_Tuple3 2, updRgn_4_4 = select _x_4_3::_Tuple2 0 in case (Data.Maybe.isNothing updRgn_4_4) (True -> <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [6:select _x_4_2::_Tuple3 1]) (select _x_4_3::_Tuple2 1)) (False -> let updRgn_6_0 = Data.Maybe.fromJust updRgn_4_4, tb_6_1::I = select _x_4_3::_Tuple2 1, _x_6_2::I = osrgn.osisemptyrgn updRgn_6_0 tb_6_1 in case (select _x_6_2::_Tuple2 0) (True -> <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [6:select _x_4_2::_Tuple3 1]) (osrgn.osdisposergn updRgn_6_0 (select _x_6_2::_Tuple2 1))) (False -> <{windowupdate.updatewindowbackgrounds`}> wMetrics_2 updRgn_6_0 wids_3 (update wH_4::<{wstate._WindowHandle`}> [6:select _x_4_2::_Tuple3 1]) (select _x_6_2::_Tuple2 1)) ) ) ) ) 
controlinternal.hPtr_76::I info_0 !hasHScroll_1::B = case hasHScroll_1 (True -> select (Data.Maybe.fromJust (select info_0::windowhandle._CompoundInfo 2))::windowhandle._ScrollInfo 3) (False -> -1) 
controlinternal.vPtr_77::I info_0 !hasVScroll_1::B = case hasVScroll_1 (True -> select (Data.Maybe.fromJust (select info_0::windowhandle._CompoundInfo 3))::windowhandle._ScrollInfo 3) (False -> -1) 
controlinternal.anon_86 !f_0 g_1 x_2 = f_0 (g_1 x_2)
controlinternal.anon_134::B !g_0 x_1 = StdBool.not (g_0 x_1)
controlinternal.anon_135::B !x_0 = StdBool.not (<{wstateaccess.iscontroloutersize`}> x_0)
controlinternal.replaceControlSizeAtt_78 !size_0 !atts_1 = commondef.replaceOrAppend <{wstateaccess.iscontrolviewsize`}> (<{wstate.ControlViewSize`}> size_0) (StdList.filter controlinternal.anon_135 atts_1)
controlinternal.setWItemDomain_79 !metrics_0 !wPtr_1::I !default_2 !withinCompound_3::B !shownContext_4::B !ableContext_5::B !clipRect_6 !parentPos_7 !compoundPos_8 !newDomain_9 !id_10 !itemH_11 !updRgn_tb_12 = case metrics_0 (controlinternal._MetricsInfo miOSMetrics_1_0 miHMargins_1_1 miVMargins_1_2 mi_1_3 miOrientation_1_4 -> case itemH_11 (<{wstate._WItemHandle`}> w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case updRgn_tb_12 (_Tuple2 updRgn_3_0 tb_3_1 -> case (StdBool.not (windowhandle.isRecursiveControl w_2_2)) (True -> <{_Tuple3!7}> (windowaccess.identifyMaybeId id_10 w_2_0) itemH_11 updRgn_tb_12) (False -> case (<{windowhandle.==_8}> w_2_2 windowhandle.IsLayoutControl) (True -> case (windowaccess.identifyMaybeId id_10 w_2_0) (True -> <{_Tuple3!7}> True itemH_11 updRgn_tb_12) (False -> let itemAtts_7_0 = select itemH_11::<{wstate._WItemHandle`}> 6, absolutePos_7_1 = StdIOBasic.movePoint (select itemH_11::<{wstate._WItemHandle`}> 9) parentPos_7, _x_7_2 = wstateaccess.setWElement (controlinternal.setWItemDomain_79 (update metrics_0::controlinternal._MetricsInfo [1:<{wstateaccess.getcontrolhmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolhmargin`}> (<{wstate.ControlHMargin`}> (select miHMargins_1_1::_Tuple2 0) (select miHMargins_1_1::_Tuple2 1)) itemAtts_7_0)::_Tuple2 1),2:<{wstateaccess.getcontrolvmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolvmargin`}> (<{wstate.ControlVMargin`}> (select miVMargins_1_2::_Tuple2 0) (select miVMargins_1_2::_Tuple2 1)) itemAtts_7_0)::_Tuple2 1),3:<{wstateaccess.getcontrolitemspace`}> (select (commondef.cselect <{wstateaccess.iscontrolitemspace`}> (<{wstate.ControlItemSpace`}> (select mi_1_3::_Tuple2 0) (select mi_1_3::_Tuple2 1)) itemAtts_7_0)::_Tuple2 1)]) wPtr_1 default_2 withinCompound_3 (<{controlinternal._if;1439;35_240}> shownContext_4 itemH_11) (controlinternal._f241_241 ableContext_5 itemH_11) (commondef.intersectRects clipRect_6 (commondef.posSizeToRect absolutePos_7_1 (select itemH_11::<{wstate._WItemHandle`}> 10))) absolutePos_7_1 compoundPos_8 newDomain_9) id_10 (select itemH_11::<{wstate._WItemHandle`}> 7) updRgn_tb_12 in <{_Tuple3!7}> (select _x_7_2::_Tuple3 0) (update itemH_11::<{wstate._WItemHandle`}> [7:select _x_7_2::_Tuple3 1]) (select _x_7_2::_Tuple3 2)) ) (False -> case (StdBool.not (windowaccess.identifyMaybeId id_10 (select itemH_11::<{wstate._WItemHandle`}> 0))) (True -> let itemAtts_7_0 = select itemH_11::<{wstate._WItemHandle`}> 6, info_7_1 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_11::<{wstate._WItemHandle`}> 5), oldDomainRect_7_2 = select info_7_1::windowhandle._CompoundInfo 0, itemSize_7_3 = select itemH_11::<{wstate._WItemHandle`}> 10, _x_7_4 = _Tuple2 (Data.Maybe.isJust (select info_7_1::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_7_1::windowhandle._CompoundInfo 3)), itemPos_7_5 = select itemH_11::<{wstate._WItemHandle`}> 9, absolutePos_7_6 = StdIOBasic.movePoint itemPos_7_5 parentPos_7, _x_7_7 = wstateaccess.setWElement (controlinternal.setWItemDomain_79 (update metrics_0::controlinternal._MetricsInfo [1:<{wstateaccess.getcontrolhmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolhmargin`}> (<{wstate.ControlHMargin`}> (select miHMargins_1_1::_Tuple2 0) (select miHMargins_1_1::_Tuple2 1)) itemAtts_7_0)::_Tuple2 1),2:<{wstateaccess.getcontrolvmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolvmargin`}> (<{wstate.ControlVMargin`}> (select miVMargins_1_2::_Tuple2 0) (select miVMargins_1_2::_Tuple2 1)) itemAtts_7_0)::_Tuple2 1),3:<{wstateaccess.getcontrolitemspace`}> (select (commondef.cselect <{wstateaccess.iscontrolitemspace`}> (<{wstate.ControlItemSpace`}> (select mi_1_3::_Tuple2 0) (select mi_1_3::_Tuple2 1)) itemAtts_7_0)::_Tuple2 1),4:_predefined._Cons (_Tuple2 (commondef.rectToRectangle oldDomainRect_7_2) (select info_7_1::windowhandle._CompoundInfo 1)) miOrientation_1_4]) wPtr_1 default_2 True (<{controlinternal._if;1439;35_242}> shownContext_4 itemH_11) (controlinternal._f243_243 ableContext_5 itemH_11) (commondef.intersectRects (oswindow.osGetCompoundContentRect miOSMetrics_1_0 (oswindow.osScrollbarsAreVisible miOSMetrics_1_0 oldDomainRect_7_2 (commondef.toTuple_72 itemSize_7_3) (_Tuple2 (select _x_7_4::_Tuple2 0) (select _x_7_4::_Tuple2 1))) (commondef.posSizeToRect absolutePos_7_6 itemSize_7_3)) clipRect_6) absolutePos_7_6 (<{StdIOBasic.+_9}> compoundPos_8 itemPos_7_5) newDomain_9) id_10 (select itemH_11::<{wstate._WItemHandle`}> 7) updRgn_tb_12 in <{_Tuple3!7}> (select _x_7_7::_Tuple3 0) (update itemH_11::<{wstate._WItemHandle`}> [7:select _x_7_7::_Tuple3 1]) (select _x_7_7::_Tuple3 2)) (False -> let info_7_0 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_11::<{wstate._WItemHandle`}> 5), oldDomainRect_7_1 = select info_7_0::windowhandle._CompoundInfo 0 in case (<{StdIOBasic.==_25}> newDomain_9 (commondef.rectToRectangle oldDomainRect_7_1)) (True -> <{_Tuple3!7}> True itemH_11 updRgn_tb_12) (False -> let !no_update_necessary_9_0::B = controlinternal._f244_244 (<{StdIOBasic.==_18}> newOrigin_9_25 oldOrigin_9_2) absolutePos_9_11 newDomainRect_9_3 clipRect_6 oldDomainRect_7_1 newContentSize_9_14 miOSMetrics_1_0 <{itemSize`_9_5}> hasHScroll_9_7 hasVScroll_9_8 itemRect_9_12, _x_9_1::I = <{controlinternal._if;1383;35_248}> no_update_necessary_9_0 wPtr_1 tb_9_32, oldOrigin_9_2::I = select info_7_0::windowhandle._CompoundInfo 1, newDomainRect_9_3::I = commondef.rectangleToRect newDomain_9, itemSize_9_4 = select itemH_11::<{wstate._WItemHandle`}> 10, <{itemSize`_9_5}> = commondef.toTuple_72 itemSize_9_4, _x_9_6::I = _Tuple2 (Data.Maybe.isJust (select info_7_0::windowhandle._CompoundInfo 2)) (Data.Maybe.isJust (select info_7_0::windowhandle._CompoundInfo 3)), hasHScroll_9_7::B = select _x_9_6::_Tuple2 0, hasVScroll_9_8 = select _x_9_6::_Tuple2 1, newVisScrolls_9_9::I = oswindow.osScrollbarsAreVisible miOSMetrics_1_0 newDomainRect_9_3 <{itemSize`_9_5}> (_Tuple2 hasHScroll_9_7 hasVScroll_9_8), itemPos_9_10::I = select itemH_11::<{wstate._WItemHandle`}> 9, absolutePos_9_11::I = StdIOBasic.movePoint itemPos_9_10 parentPos_7, itemRect_9_12::I = commondef.posSizeToRect absolutePos_9_11 itemSize_9_4, newContentRect_9_13 = oswindow.osGetCompoundContentRect miOSMetrics_1_0 newVisScrolls_9_9 itemRect_9_12, newContentSize_9_14::I = commondef.rectSize newContentRect_9_13, _x_9_15::I = _Tuple3 (select newDomainRect_9_3::ostypes._OSRect 0) (select newDomainRect_9_3::ostypes._OSRect 2) (select newContentSize_9_14::StdIOBasic._Size 0), minx_9_16::I = select _x_9_15::_Tuple3 0, maxx_9_17::I = select _x_9_15::_Tuple3 1, viewx_9_18 = select _x_9_15::_Tuple3 2, y_9_19 = <{StdInt.-_7}> maxx_9_17 viewx_9_18, _x_9_20 = _Tuple3 (select newDomainRect_9_3::ostypes._OSRect 1) (select newDomainRect_9_3::ostypes._OSRect 3) (select newContentSize_9_14::StdIOBasic._Size 1), miny_9_21 = select _x_9_20::_Tuple3 0, maxy_9_22 = select _x_9_20::_Tuple3 1, viewy_9_23 = select _x_9_20::_Tuple3 2, y_9_24 = <{StdInt.-_7}> maxy_9_22 viewy_9_23, newOrigin_9_25::B = StdIOBasic._Point2 (commondef.setBetween (select oldOrigin_9_2::StdIOBasic._Point2 0) minx_9_16 (<{controlinternal._c;51;16_246}> (<{StdInt.<_17}> minx_9_16 y_9_19) y_9_19 minx_9_16)) (commondef.setBetween (select oldOrigin_9_2::StdIOBasic._Point2 1) miny_9_21 (<{controlinternal._c;51;16_247}> (<{StdInt.<_17}> miny_9_21 y_9_24) y_9_24 miny_9_21)), ableContext1_9_26::B = controlinternal._f245_245 ableContext_5 itemH_11, itemPtr_9_27 = select itemH_11::<{wstate._WItemHandle`}> 11, hRect_9_28 = oswindow.osGetCompoundHScrollRect miOSMetrics_1_0 newVisScrolls_9_9 itemRect_9_12, vRect_9_29 = oswindow.osGetCompoundVScrollRect miOSMetrics_1_0 newVisScrolls_9_9 itemRect_9_12, tb_9_30 = select updRgn_tb_12::_Tuple2 1, tb_9_31 = controlinternal.setcompoundsliderthumb hasHScroll_9_7 ableContext1_9_26 miOSMetrics_1_0 wPtr_1 itemPtr_9_27 (controlinternal.hPtr_76 info_7_0 hasHScroll_9_7) True (_Tuple3 minx_9_16 (select newOrigin_9_25::StdIOBasic._Point2 0) maxx_9_17) viewx_9_18 <{itemSize`_9_5}> (_Tuple2 hRect_9_28 vRect_9_29) tb_9_30, tb_9_32 = controlinternal.setcompoundsliderthumb hasVScroll_9_8 ableContext1_9_26 miOSMetrics_1_0 wPtr_1 itemPtr_9_27 (controlinternal.vPtr_77 info_7_0 hasVScroll_9_8) False (_Tuple3 miny_9_21 (select newOrigin_9_25::StdIOBasic._Point2 1) maxy_9_22) viewy_9_23 <{itemSize`_9_5}> (_Tuple2 hRect_9_28 vRect_9_29) tb_9_31 in case (StdBool.not (select _x_9_1::_Tuple2 0)) (True -> <{_Tuple3!7}> True (update itemH_11::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_7_0::windowhandle._CompoundInfo [0:newDomainRect_9_3,1:newOrigin_9_25])]) (_Tuple2 (select updRgn_tb_12::_Tuple2 0) (select _x_9_1::_Tuple2 1))) (False -> let old_11_0 = select itemH_11::<{wstate._WItemHandle`}> 7 in case (StdList.isEmpty old_11_0) (True -> case (case shownContext_4 (True -> select itemH_11::<{wstate._WItemHandle`}> 3) (False -> shownContext_4) ) (True -> let _x_14_0 = <{controldraw.drawCompoundLook`}> miOSMetrics_1_0 ableContext1_9_26 wPtr_1 parentPos_7 (commondef.intersectRects newContentRect_9_13 clipRect_6) (update itemH_11::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_7_0::windowhandle._CompoundInfo [0:newDomainRect_9_3,1:newOrigin_9_25])]) (select _x_9_1::_Tuple2 1) in <{_Tuple3!7}> True (select _x_14_0::_Tuple2 0) (_Tuple2 (select updRgn_tb_12::_Tuple2 0) (select _x_14_0::_Tuple2 1))) (False -> <{_Tuple3!7}> True (update itemH_11::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_7_0::windowhandle._CompoundInfo [0:newDomainRect_9_3,1:newOrigin_9_25])]) (_Tuple2 (select updRgn_tb_12::_Tuple2 0) (select _x_9_1::_Tuple2 1))) ) (False -> let shownContext1_13_0::B = <{controlinternal._if;1439;35_249}> shownContext_4 itemH_11 in case shownContext1_13_0 (True -> let itemAtts_15_0::I = select itemH_11::<{wstate._WItemHandle`}> 6, <{hMargins`_15_1}> = <{wstateaccess.getcontrolhmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolhmargin`}> (<{wstate.ControlHMargin`}> (select miHMargins_1_1::_Tuple2 0) (select miHMargins_1_1::_Tuple2 1)) itemAtts_15_0)::_Tuple2 1), <{vMargins`_15_2}> = <{wstateaccess.getcontrolvmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolvmargin`}> (<{wstate.ControlVMargin`}> (select miVMargins_1_2::_Tuple2 0) (select miVMargins_1_2::_Tuple2 1)) itemAtts_15_0)::_Tuple2 1), <{spaces`_15_3}> = <{wstateaccess.getcontrolitemspace`}> (select (commondef.cselect <{wstateaccess.iscontrolitemspace`}> (<{wstate.ControlItemSpace`}> (select mi_1_3::_Tuple2 0) (select mi_1_3::_Tuple2 1)) itemAtts_15_0)::_Tuple2 1), <{orientation`_15_4}> = _predefined._Cons (_Tuple2 newDomain_9 newOrigin_9_25) miOrientation_1_4, tb_15_5 = select _x_9_1::_Tuple2 1, _x_15_6 = <{controllayout.layoutControls`}> miOSMetrics_1_0 <{hMargins`_15_1}> <{vMargins`_15_2}> <{spaces`_15_3}> itemSize_9_4 itemSize_9_4 <{orientation`_15_4}> old_11_0 tb_15_5, _x_15_7::I = <{windowclipstate.forceValidCompoundClipState`}> miOSMetrics_1_0 True wPtr_1 parentPos_7 default_2 shownContext_4 (update itemH_11::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_7_0::windowhandle._CompoundInfo [0:newDomainRect_9_3,1:newOrigin_9_25]),7:<{controlinternal.shiftControls`}> itemPos_9_10 (select _x_15_6::_Tuple3 1)]) (<{controlinternal._c;1401;35_250}> (select updRgn_tb_12::_Tuple2 0) tb_15_12), itemH_15_8 = select _x_15_7::_Tuple2 0, itemH_15_9 = update itemH_15_8::<{wstate._WItemHandle`}> [6:controlinternal.replaceControlSizeAtt_78 newContentSize_9_14 (select itemH_15_8::<{wstate._WItemHandle`}> 6)], _x_15_10 = <{controlrelayout.relayoutControls`}> miOSMetrics_1_0 itemPtr_9_27 default_2 True ableContext1_9_26 shownContext1_13_0 (_Tuple4 newContentRect_9_13 absolutePos_9_11 compoundPos_8 old_11_0) (_Tuple4 newContentRect_9_13 absolutePos_9_11 compoundPos_8 (select itemH_15_9::<{wstate._WItemHandle`}> 7)) (select _x_15_7::_Tuple2 1), _x_15_11 = <{controldraw.drawCompoundLook`}> miOSMetrics_1_0 ableContext1_9_26 wPtr_1 parentPos_7 (commondef.intersectRects newContentRect_9_13 clipRect_6) itemH_15_9 (select _x_15_10::_Tuple2 1), tb_15_12 = select _x_15_6::_Tuple3 2 in <{_Tuple3!7}> True (select _x_15_11::_Tuple2 0) (_Tuple2 (Data.Maybe.Just (select _x_15_10::_Tuple2 0)) (select _x_15_11::_Tuple2 1))) (False -> let itemAtts_15_0::I = select itemH_11::<{wstate._WItemHandle`}> 6, <{hMargins`_15_1}> = <{wstateaccess.getcontrolhmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolhmargin`}> (<{wstate.ControlHMargin`}> (select miHMargins_1_1::_Tuple2 0) (select miHMargins_1_1::_Tuple2 1)) itemAtts_15_0)::_Tuple2 1), <{vMargins`_15_2}> = <{wstateaccess.getcontrolvmargin`}> (select (commondef.cselect <{wstateaccess.iscontrolvmargin`}> (<{wstate.ControlVMargin`}> (select miVMargins_1_2::_Tuple2 0) (select miVMargins_1_2::_Tuple2 1)) itemAtts_15_0)::_Tuple2 1), <{spaces`_15_3}> = <{wstateaccess.getcontrolitemspace`}> (select (commondef.cselect <{wstateaccess.iscontrolitemspace`}> (<{wstate.ControlItemSpace`}> (select mi_1_3::_Tuple2 0) (select mi_1_3::_Tuple2 1)) itemAtts_15_0)::_Tuple2 1), <{orientation`_15_4}> = _predefined._Cons (_Tuple2 newDomain_9 newOrigin_9_25) miOrientation_1_4, tb_15_5 = select _x_9_1::_Tuple2 1, _x_15_6::I = <{controllayout.layoutControls`}> miOSMetrics_1_0 <{hMargins`_15_1}> <{vMargins`_15_2}> <{spaces`_15_3}> itemSize_9_4 itemSize_9_4 <{orientation`_15_4}> old_11_0 tb_15_5, _x_15_7 = <{windowclipstate.forceValidCompoundClipState`}> miOSMetrics_1_0 True wPtr_1 parentPos_7 default_2 shownContext_4 (update itemH_11::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_7_0::windowhandle._CompoundInfo [0:newDomainRect_9_3,1:newOrigin_9_25]),7:<{controlinternal.shiftControls`}> itemPos_9_10 (select _x_15_6::_Tuple3 1)]) (<{controlinternal._c;1401;35_251}> (select updRgn_tb_12::_Tuple2 0) tb_15_11), itemH_15_8 = select _x_15_7::_Tuple2 0, itemH_15_9 = update itemH_15_8::<{wstate._WItemHandle`}> [6:controlinternal.replaceControlSizeAtt_78 newContentSize_9_14 (select itemH_15_8::<{wstate._WItemHandle`}> 6)], _x_15_10 = <{controlrelayout.relayoutControls`}> miOSMetrics_1_0 itemPtr_9_27 default_2 True ableContext1_9_26 shownContext1_13_0 (_Tuple4 newContentRect_9_13 absolutePos_9_11 compoundPos_8 old_11_0) (_Tuple4 newContentRect_9_13 absolutePos_9_11 compoundPos_8 (select itemH_15_9::<{wstate._WItemHandle`}> 7)) (select _x_15_7::_Tuple2 1), tb_15_11 = select _x_15_6::_Tuple3 2 in <{_Tuple3!7}> True itemH_15_9 (_Tuple2 (Data.Maybe.Just (select _x_15_10::_Tuple2 0)) (select _x_15_10::_Tuple2 1))) ) ) ) ) ) ) ) ) ) 
<{controlinternal._c;1401;35_251}>::I !_x_0 !tb_1::I = case _x_0 (Data.Maybe.Just rgn_1_0 -> osrgn.osdisposergn rgn_1_0 tb_1) (_ -> tb_1)
<{controlinternal._c;1401;35_250}>::I !_x_0 !tb_1::I = case _x_0 (Data.Maybe.Just rgn_1_0 -> osrgn.osdisposergn rgn_1_0 tb_1) (_ -> tb_1)
<{controlinternal._if;1439;35_249}>::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> shownContext_0)
<{controlinternal._if;1383;35_248}> !no_update_necessary_0::B wPtr_1::I tb_2::I = case no_update_necessary_0 (True -> oswindow.osWindowHasUpdateRect wPtr_1 tb_2) (_ -> _Tuple2 True tb_2)
<{controlinternal._c;51;16_247}>::I !_x_0::B y_1::I miny_2::I = case _x_0 (True -> y_1) (_ -> miny_2)
<{controlinternal._c;51;16_246}>::I !_x_0::B y_1::I minx_2::I = case _x_0 (True -> y_1) (_ -> minx_2)
controlinternal._f245_245::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
controlinternal._f244_244::B !_x_0::B absolutePos_1 newDomainRect_2 clipRect_3 oldDomainRect_4 newContentSize_5 miOSMetrics_6 <{itemSize`_7}> hasHScroll_8::B hasVScroll_9::B itemRect_10 = case _x_0 (True -> case (<{commondef.==_65}> (commondef.intersectRects (commondef.addVector_67 (StdIOBasic.toVector_23 absolutePos_1) newDomainRect_2) clipRect_3) (commondef.intersectRects (commondef.addVector_67 (StdIOBasic.toVector_23 absolutePos_1) oldDomainRect_4) clipRect_3)) (True -> <{StdIOBasic.==_14}> newContentSize_5 (commondef.rectSize (oswindow.osGetCompoundContentRect miOSMetrics_6 (oswindow.osScrollbarsAreVisible miOSMetrics_6 oldDomainRect_4 <{itemSize`_7}> (_Tuple2 hasHScroll_8 hasVScroll_9)) itemRect_10))) (False -> False) ) (_ -> False)
controlinternal._f243_243::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
<{controlinternal._if;1439;35_242}>::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> shownContext_0)
controlinternal._f241_241::B !ableContext_0::B itemH_1 = case ableContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 4) (_ -> False)
<{controlinternal._if;1439;35_240}>::B !shownContext_0::B itemH_1 = case shownContext_0 (True -> select itemH_1::<{wstate._WItemHandle`}> 3) (_ -> shownContext_0)
controlinternal.setcontrolviewdomain !id_0 !newDomain_1 !wMetrics_2 !wids_3 !wH_4 !tb_5::I = case wids_3 (windowhandle._WIDS w_1_0 wPtr_1_1 wActive_1_2 -> case wH_4 (<{wstate._WindowHandle`}> whMode`_2_0 whKind`_2_1 whTitle`_2_2 wh_2_3 whKeyFocus`_2_4 whWindow_2_5 wh_2_6 whShow`_2_7 whSelect`_2_8 whAtts`_2_9 whDefault_2_10 whCancel_2_11 whSize`_2_12 whClosing`_2_13 -> case (<{windowhandle.==_6}> <{whKind`_2_1}> windowhandle.IsGameWindow) (True -> <{_Tuple2!3}> wH_4 tb_5) (False -> let metrics_4_0 = controlinternal.makeMetricsInfo wMetrics_2 <{whKind`_2_1}> <{whSize`_2_12}> <{whAtts`_2_9}> whWindow_2_5, clipRect_4_1 = controlinternal.getContentRect wMetrics_2 whWindow_2_5 <{whSize`_2_12}>, _x_4_2 = wstateaccess.setWElement (controlinternal.setWItemDomain_79 metrics_4_0 wPtr_1_1 whDefault_2_10 False True <{whSelect`_2_8}> clipRect_4_1 StdIOBasic.zero_21 StdIOBasic.zero_11 (windowvalidate.validateViewDomain newDomain_1)) id_0 wh_2_6 (_Tuple2 Data.Maybe.Nothing tb_5), _x_4_3 = select _x_4_2::_Tuple3 2, updRgn_4_4 = select _x_4_3::_Tuple2 0 in case (Data.Maybe.isNothing updRgn_4_4) (True -> <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [6:select _x_4_2::_Tuple3 1]) (select _x_4_3::_Tuple2 1)) (False -> let updRgn_6_0 = Data.Maybe.fromJust updRgn_4_4, tb_6_1::I = select _x_4_3::_Tuple2 1, _x_6_2::I = osrgn.osisemptyrgn updRgn_6_0 tb_6_1 in case (select _x_6_2::_Tuple2 0) (True -> <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [6:select _x_4_2::_Tuple3 1]) (osrgn.osdisposergn updRgn_6_0 (select _x_6_2::_Tuple2 1))) (False -> <{windowupdate.updatewindowbackgrounds`}> wMetrics_2 updRgn_6_0 wids_3 (update wH_4::<{wstate._WindowHandle`}> [6:select _x_4_2::_Tuple3 1]) (select _x_6_2::_Tuple2 1)) ) ) ) ) 
controlinternal.setScrollFun_80 !f_0 !scroll_1 = update scroll_1::windowhandle._ScrollInfo [0:f_0]
controlinternal.setCompoundScrollFun_81 !direction_0 scrollFun_1 !id_2 !itemH_3 s_4 = case itemH_3 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case w_1_2 (windowhandle.IsCompoundControl -> case (StdBool.not (windowaccess.identifyMaybeId id_2 w_1_0)) (True -> let _x_4_0 = wstateaccess.setWElement (controlinternal.setCompoundScrollFun_81 direction_0 scrollFun_1) id_2 (select itemH_3::<{wstate._WItemHandle`}> 7) s_4 in <{_Tuple3!3}> (select _x_4_0::_Tuple3 0) (update itemH_3::<{wstate._WItemHandle`}> [7:select _x_4_0::_Tuple3 1]) (select _x_4_0::_Tuple3 2)) (False -> let info_4_0 = <{wstateaccess.getWItemCompoundInfo`}> (select itemH_3::<{wstate._WItemHandle`}> 5), hScroll_4_1 = select info_4_0::windowhandle._CompoundInfo 2 in case (case (<{StdIOCommon.==_35}> direction_0 StdIOCommon.Horizontal) (True -> Data.Maybe.isJust hScroll_4_1) (False -> False) ) (True -> <{_Tuple3!3}> True (update itemH_3::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_4_0::windowhandle._CompoundInfo [2:StdMaybe.mapMaybe (controlinternal.setScrollFun_80 scrollFun_1) hScroll_4_1])]) s_4) (False -> let vScroll_6_0 = select info_4_0::windowhandle._CompoundInfo 3 in case (case (<{StdIOCommon.==_35}> direction_0 StdIOCommon.Vertical) (True -> Data.Maybe.isJust vScroll_6_0) (False -> False) ) (True -> <{_Tuple3!3}> True (update itemH_3::<{wstate._WItemHandle`}> [5:<{wstate.CompoundInfo`}> (update info_4_0::windowhandle._CompoundInfo [3:StdMaybe.mapMaybe (controlinternal.setScrollFun_80 scrollFun_1) vScroll_6_0])]) s_4) (False -> <{_Tuple3!3}> True itemH_3 s_4) ) ) ) (_ -> case (windowaccess.identifyMaybeId id_2 w_1_0) (True -> <{_Tuple3!3}> True itemH_3 s_4) (False -> let _x_3_0 = wstateaccess.setWElement (controlinternal.setCompoundScrollFun_81 direction_0 scrollFun_1) id_2 w_1_7 s_4 in <{_Tuple3!3}> (select _x_3_0::_Tuple3 0) (update itemH_3::<{wstate._WItemHandle`}> [7:select _x_3_0::_Tuple3 1]) (select _x_3_0::_Tuple3 2)) )) 
controlinternal.setcontrolscrollfun !id_0 !direction_1 scrollFun_2 !<{wH`_3}> = case <{wH`_3}> (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> update <{wH`_3}>::<{wstate._WindowHandle`}> [6:select (wstateaccess.setWElement (controlinternal.setCompoundScrollFun_81 direction_1 scrollFun_2) id_0 wh_1_6 0)::_Tuple3 1]) 
controlinternal.setcontroloutersize !id_0 !newCSize_1 !relayout_2::B !wMetrics_3 !wids_4 !wH_5 !tb_6::I = controlresize.resizeControl wMetrics_3 relayout_2 wids_4 id_0 newCSize_1 wH_5 tb_6
controlinternal.setcontrolwidth !id_0 !newWidth_1 !relayout_2::B !wMetrics_3 !wids_4 !wH_5 !tb_6::I = StdMisc.abort "setcontrolwidth not yet implemented."
<{controlinternal.TD;MetricsInfo}> _x_0::B = _predefined._Nil


|| Converted Records
:: controlinternal._MetricsInfo = {!controlinternal.miOSMetrics, !controlinternal.miHMargins, !controlinternal.miVMargins, !controlinternal.miItemSpaces, !controlinternal.miOrientation}

:: <{controlinternal.gEq_s;}> = {!controlinternal.gEq_s}

:: <{controlinternal.gEq_ss;}> = {!controlinternal.gEq_ss}

:: <{controlinternal.gEq_sss;}> = {!controlinternal.gEq_sss}

:: <{controlinternal.gEq_ssss;}> = {!controlinternal.gEq_ssss}

:: <{controlinternal.gEq_sssss;}> = {!controlinternal.gEq_sssss}

:: <{controlinternal.gEq_ssssss;}> = {!controlinternal.gEq_ssssss}

:: <{controlinternal.gEq_sssssss;}> = {!controlinternal.gEq_sssssss}

:: <{controlinternal.gEq_ssssssss;}> = {!controlinternal.gEq_ssssssss}

:: <{controlinternal.gEq_sssssssss;}> = {!controlinternal.gEq_sssssssss}

:: <{controlinternal.bimap_s;}> = {controlinternal.bimap_s}

:: <{controlinternal.bimap_ss;}> = {controlinternal.bimap_ss}

:: <{controlinternal.bimap_sss;}> = {controlinternal.bimap_sss}

