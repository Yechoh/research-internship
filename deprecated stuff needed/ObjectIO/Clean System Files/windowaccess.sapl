|| ?module? windowaccess


windowaccess.initWindowHandle !title_0 !mode_1 !kind_2 !info_3 !itemHs_4 !atts_5 = windowhandle._WindowHandle mode_1 kind_2 title_0 (_SystemEnum._from_4 1) (keyfocus._KeyFocus Data.Maybe.Nothing _predefined._Nil) info_3 itemHs_4 True True atts_5 Data.Maybe.Nothing Data.Maybe.Nothing StdIOBasic.zero_15 False
windowaccess.getWindowInfoWindowData !_x_0 = case _x_0 (windowhandle.WindowInfo wData_1_0 -> wData_1_0) 
windowaccess.getWindowInfoGameWindowData !_x_0 = case _x_0 (windowhandle.GameWindowInfo gwData_1_0 -> gwData_1_0) 
windowaccess.getWItemRadioInfo !_x_0 = case _x_0 (windowhandle.RadioInfo info_1_0 -> info_1_0) 
windowaccess.getWItemCheckInfo !_x_0 = case _x_0 (windowhandle.CheckInfo info_1_0 -> info_1_0) 
windowaccess.getWItemPopUpInfo !_x_0 = case _x_0 (windowhandle.PopUpInfo info_1_0 -> info_1_0) 
windowaccess.getWItemSliderInfo !_x_0 = case _x_0 (windowhandle.SliderInfo info_1_0 -> info_1_0) 
windowaccess.getWItemTextInfo !_x_0 = case _x_0 (windowhandle.TextInfo info_1_0 -> info_1_0) 
windowaccess.getWItemEditInfo !_x_0 = case _x_0 (windowhandle.EditInfo info_1_0 -> info_1_0) 
windowaccess.getWItemButtonInfo !_x_0 = case _x_0 (windowhandle.ButtonInfo info_1_0 -> info_1_0) 
windowaccess.getWItemCustomButtonInfo !_x_0 = case _x_0 (windowhandle.CustomButtonInfo info_1_0 -> info_1_0) 
windowaccess.getWItemCustomInfo !_x_0 = case _x_0 (windowhandle.CustomInfo info_1_0 -> info_1_0) 
windowaccess.getWItemCompoundInfo !_x_0 = case _x_0 (windowhandle.CompoundInfo info_1_0 -> info_1_0) 
windowaccess.getWItemReceiverInfo !_x_0 = case _x_0 (windowhandle.ReceiverInfo info_1_0 -> info_1_0) 
windowaccess.widById::B !_x_0 = case _x_0 (windowaccess.ById _x_1_0 -> True) (_ -> False)
windowaccess.widByPtr::B !_x_0 = case _x_0 (windowaccess.ByPtr _x_1_0 -> True) (_ -> False)
windowaccess.widGetId !_x_0 = case _x_0 (windowaccess.ById id_1_0 -> id_1_0) 
windowaccess.widGetPtr::I !_x_0 = case _x_0 (windowaccess.ByPtr ptr_1_0 -> ptr_1_0) 
windowaccess.identifyWIDS::B !_x_0 !_x_1 = case _x_0 (windowaccess.ById id_1_0 -> case _x_1 (windowhandle._WIDS w_2_0 wPtr_2_1 wActive_2_2 -> <{id.==_27}> id_1_0 w_2_0) ) (windowaccess.ByPtr ptr_1_0 -> case _x_1 (windowhandle._WIDS w_2_0 wPtr_2_1 wActive_2_2 -> <{StdInt.==_16}> ptr_1_0 wPtr_2_1) ) 
windowaccess.identifyMaybeId::B !id_0 !_x_1 = case _x_1 (Data.Maybe.Just id`_1_0 -> <{id.==_27}> id_0 <{id`_1_0}>) (_ -> False)
windowaccess.getWindowStateHandleWIDS !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> <{_Tuple2!3}> wsh_1_0 wsH_0) 
windowaccess.getWindowStateHandleWindowMode !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whMode_4_0 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleWindowKind !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whKind_4_1 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleWindowTitle !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whTitle_4_2 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleItemNrs !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> wh_4_3 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleKeyFocus !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whKeyFocus_4_4 (update wsH_0::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [4:keyfocus.newFocusItems _predefined._Nil]])])) ) ) ) 
windowaccess.getWindowStateHandleWindowInfo !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whWindow_4_5 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleShow !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whShow_4_7 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleSelect !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whSelect_4_8 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleActive !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wsh_1_0 (windowhandle._WIDS w_2_0 wPtr_2_1 wActive_2_2 -> <{_Tuple2!3}> wActive_2_2 wsH_0) ) 
windowaccess.getWindowStateHandleDefaultId !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whDefault_4_10 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleCancelId !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whCancel_4_11 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleSize !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whSize_4_12 wsH_0) ) ) ) 
windowaccess.getWindowStateHandleClosing !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!3}> whClosing_4_13 wsH_0) ) ) ) 
windowaccess.isWindowStateHandlePlaceHolder !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Nothing -> <{_Tuple2!3}> True wsH_0) ) (_ -> <{_Tuple2!3}> False wsH_0)
windowaccess.identifyWindowStateHandle !wid_0 !wsH_1 = let _x_1_0 = windowaccess.getWindowStateHandleWIDS wsH_1 in <{_Tuple2!3}> (windowaccess.identifyWIDS wid_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
windowaccess.setWindowStateHandleWindowTitle !title_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [2:title_0]])]) ) ) 
windowaccess.setWindowStateHandleItemNrs !itemNrs_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [3:itemNrs_0]])]) ) ) 
windowaccess.setWindowStateHandleKeyFocus !keyFocus_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [4:keyFocus_0]])]) ) ) 
windowaccess.setWindowStateHandleWindowInfo !window_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [5:window_0]])]) ) ) 
windowaccess.setWindowStateHandleShow !show_0::B !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [7:show_0]])]) ) ) 
windowaccess.setWindowStateHandleSelect !select_0::B !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [8:select_0]])]) ) ) 
windowaccess.setWindowStateHandleActive !active_0::B !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wids_1_0 wshHandle_1_1 -> update wsH_1::windowhandle._WindowStateHandle [0:update wids_1_0::windowhandle._WIDS [2:active_0]]) 
windowaccess.setWindowStateHandleDefaultId !default_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [10:default_0]])]) ) ) 
windowaccess.setWindowStateHandleCancelId !cancel_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [11:cancel_0]])]) ) ) 
windowaccess.setWindowStateHandleSize !size_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [12:size_0]])]) ) ) 
windowaccess.setWindowStateHandleClosing !closing_0::B !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [13:closing_0]])]) ) ) 
windowaccess.getWindowHMargins !type_0 !wMetrics_1 !atts_2 = let _x_1_0 = <{windowaccess._c;317;35_137}> type_0 wMetrics_1 in StdWindowAttribute.getWindowHMarginAtt (select (commondef.cselect StdWindowAttribute.isWindowHMargin (StdWindowDef.WindowHMargin (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)) atts_2)::_Tuple2 1)
<{windowaccess._c;317;35_137}> !type_0 wMetrics_1 = case type_0 (windowhandle.IsDialog -> _Tuple2 (select wMetrics_1::ossystem._OSWindowMetrics 3) (select wMetrics_1::ossystem._OSWindowMetrics 3)) (_ -> _Tuple2 0 0)
windowaccess.getWindowVMargins !type_0 !wMetrics_1 !atts_2 = let _x_1_0 = <{windowaccess._c;325;35_138}> type_0 wMetrics_1 in StdWindowAttribute.getWindowVMarginAtt (select (commondef.cselect StdWindowAttribute.isWindowVMargin (StdWindowDef.WindowVMargin (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)) atts_2)::_Tuple2 1)
<{windowaccess._c;325;35_138}> !type_0 wMetrics_1 = case type_0 (windowhandle.IsDialog -> _Tuple2 (select wMetrics_1::ossystem._OSWindowMetrics 4) (select wMetrics_1::ossystem._OSWindowMetrics 4)) (_ -> _Tuple2 0 0)
windowaccess.getWindowItemSpaces !type_0 !wMetrics_1 !atts_2 = let _x_1_0 = <{windowaccess._c;333;35_139}> type_0 wMetrics_1 in StdWindowAttribute.getWindowItemSpaceAtt (select (commondef.cselect StdWindowAttribute.isWindowItemSpace (StdWindowDef.WindowItemSpace (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)) atts_2)::_Tuple2 1)
<{windowaccess._c;333;35_139}> !type_0 wMetrics_1 = case type_0 (windowhandle.IsDialog -> _Tuple2 (select wMetrics_1::ossystem._OSWindowMetrics 5) (select wMetrics_1::ossystem._OSWindowMetrics 6)) (_ -> _Tuple2 0 0)
windowaccess.getWindowHandlesWindows !wHs_0 = case wHs_0 (windowhandle._WindowHandles wsHs_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> <{_Tuple2!3}> wsHs_1_0 (update wHs_0::windowhandle._WindowHandles [0:_predefined._Nil])) 
windowaccess.setWindowHandlesWindows !wsHs_0 !wHs_1 = update wHs_1::windowhandle._WindowHandles [0:wsHs_0]
windowaccess.get_active_wids_77 !wsH_0 = let _x_1_0 = windowaccess.getWindowStateHandleWIDS wsH_0, wids_1_1 = select _x_1_0::_Tuple2 0 in <{_Tuple2!3}> (_Tuple2 (select wids_1_1::windowhandle._WIDS 2) wids_1_1) (select _x_1_0::_Tuple2 1)
windowaccess.getWindowHandlesActiveWindow !wHs_0 = case wHs_0 (windowhandle._WindowHandles wsHs_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> let _x_2_0 = commondef.access windowaccess.get_active_wids_77 StdMisc.undef wsHs_1_0 in case (select _x_2_0::_Tuple3 0) (True -> <{_Tuple2!3}> (Data.Maybe.Just (select _x_2_0::_Tuple3 1)) (update wHs_0::windowhandle._WindowHandles [0:select _x_2_0::_Tuple3 2])) (False -> <{_Tuple2!3}> Data.Maybe.Nothing (update wHs_0::windowhandle._WindowHandles [0:select _x_2_0::_Tuple3 2])) ) 
windowaccess.getWindowHandlesActiveModalDialog !wHs_0 = case wHs_0 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> case whsWindows_1_0 (_predefined._Nil -> <{_Tuple2!3}> Data.Maybe.Nothing wHs_0) (_predefined._Cons wsH_2_0 wsHs_2_1 -> let _x_3_0 = windowaccess.getWindowStateHandleWindowMode wsH_2_0 in case (StdBool.not (<{windowhandle.==_5}> (select _x_3_0::_Tuple2 0) windowhandle.Modal)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (update wHs_0::windowhandle._WindowHandles [0:_predefined._Cons (select _x_3_0::_Tuple2 1) wsHs_2_1])) (False -> let _x_5_0 = windowaccess.getWindowStateHandleWIDS (select _x_3_0::_Tuple2 1) in <{_Tuple2!3}> (Data.Maybe.Just (select _x_5_0::_Tuple2 0)) (update wHs_0::windowhandle._WindowHandles [0:_predefined._Cons (select _x_5_0::_Tuple2 1) wsHs_2_1])) ) ) 
windowaccess.haswindow_78 !wid_0 !_x_1 = case _x_1 (_predefined._Cons wsH_1_0 wsHs_1_1 -> let _x_2_0 = windowaccess.getWindowStateHandleWIDS wsH_1_0 in case (windowaccess.identifyWIDS wid_0 (select _x_2_0::_Tuple2 0)) (True -> <{_Tuple2!3}> True (_predefined._Cons (select _x_2_0::_Tuple2 1) wsHs_1_1)) (False -> let _x_4_0 = windowaccess.haswindow_78 wid_0 wsHs_1_1 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_4_0::_Tuple2 1))) ) (_ -> <{_Tuple2!3}> False _predefined._Nil)
windowaccess.hasWindowHandlesWindow !wid_0 !wHs_1 = case wHs_1 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> let _x_2_0 = windowaccess.haswindow_78 wid_0 whsWindows_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update wHs_1::windowhandle._WindowHandles [0:select _x_2_0::_Tuple2 1])) 
windowaccess.getwindow_79 !wid_0 !_x_1 = case _x_1 (_predefined._Cons wsH_1_0 wsHs_1_1 -> let _x_2_0 = windowaccess.getWindowStateHandleWIDS wsH_1_0, w_2_1 = select _x_2_0::_Tuple2 0 in case (windowaccess.identifyWIDS wid_0 w_2_1) (True -> <{_Tuple3!5}> True (select _x_2_0::_Tuple2 1) (_predefined._Cons (windowhandle._WindowStateHandle w_2_1 Data.Maybe.Nothing) wsHs_1_1)) (False -> let _x_4_0 = windowaccess.getwindow_79 wid_0 wsHs_1_1 in <{_Tuple3!5}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_4_0::_Tuple3 2))) ) (_ -> <{_Tuple3!5}> False StdMisc.undef _predefined._Nil)
windowaccess.getWindowHandlesWindow !wid_0 !wHs_1 = case wHs_1 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> let _x_2_0 = windowaccess.getwindow_79 wid_0 whsWindows_1_0 in <{_Tuple3!5}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (update wHs_1::windowhandle._WindowHandles [0:select _x_2_0::_Tuple3 2])) 
windowaccess.identifyWindowStateHandle_80 !wid_0 !wsH_1 = let _x_1_0 = windowaccess.getWindowStateHandleWIDS wsH_1 in <{_Tuple2!3}> (windowaccess.identifyWIDS wid_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
windowaccess.removeWindowHandlesWindow !wid_0 !wHs_1 = case wHs_1 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> let _x_2_0 = commondef.uremove (windowaccess.identifyWindowStateHandle_80 wid_0) StdMisc.undef whsWindows_1_0 in <{_Tuple3!5}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (update wHs_1::windowhandle._WindowHandles [0:select _x_2_0::_Tuple3 2])) 
windowaccess.windowaccessFatalError !function_0 !error_1 = commondef.fatalError function_0 "windowaccess" error_1
windowaccess.setwindow_81 !wids_0 !wsH_1 !_x_2 = case _x_2 (_predefined._Cons wsH`_1_0 wsHs_1_1 -> let _x_2_0 = windowaccess.getWindowStateHandleWIDS <{wsH`_1_0}> in case (StdBool.not (<{windowhandle.==_4}> wids_0 (select _x_2_0::_Tuple2 0))) (True -> let !wsHs_4_0 = windowaccess.setwindow_81 wids_0 wsH_1 wsHs_1_1 in _predefined._Cons (select _x_2_0::_Tuple2 1) wsHs_4_0) (False -> case (select (windowaccess.isWindowStateHandlePlaceHolder (select _x_2_0::_Tuple2 1))::_Tuple2 0) (True -> _predefined._Cons wsH_1 wsHs_1_1) (False -> windowaccess.windowaccessFatalError "setWindowHandlesWindow" "place holder expected instead of WindowStateHandle") ) ) (_ -> windowaccess.windowaccessFatalError "setWindowHandlesWindow" "place holder not found")
windowaccess.setWindowHandlesWindow !wsH_0 !wHs_1 = case wHs_1 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> let _x_2_0 = windowaccess.isWindowStateHandlePlaceHolder wsH_0 in case (select _x_2_0::_Tuple2 0) (True -> windowaccess.windowaccessFatalError "setWindowHandlesWindow" "WindowStateHandle argument should not be a place holder") (False -> let !wsHs_4_0 = windowaccess.setwindow_81 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1) whsWindows_1_0, _x_4_1 = windowaccess.getWindowStateHandleWIDS (select _x_2_0::_Tuple2 1) in update wHs_1::windowhandle._WindowHandles [0:wsHs_4_0]) ) 
windowaccess.stackBehindLastModal_82 !wsH_0 !behindModal_1 !_x_2 = case _x_2 (_predefined._Cons wsH`_1_0 wsHs_1_1 -> let _x_2_0 = windowaccess.getWindowStateHandleWIDS <{wsH`_1_0}>, <{wsH`_2_1}> = select _x_2_0::_Tuple2 1, _x_2_2 = windowaccess.getWindowStateHandleWindowMode <{wsH`_2_1}> in case (<{windowhandle.==_5}> (select _x_2_2::_Tuple2 0) windowhandle.Modal) (True -> let _x_4_0 = windowaccess.stackBehindLastModal_82 wsH_0 (select _x_2_0::_Tuple2 0) wsHs_1_1 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (_predefined._Cons (select _x_2_2::_Tuple2 1) (select _x_4_0::_Tuple2 1))) (False -> <{_Tuple2!3}> behindModal_1 (_predefined._Cons wsH_0 (_predefined._Cons (select _x_2_2::_Tuple2 1) wsHs_1_1))) ) (_ -> <{_Tuple2!3}> behindModal_1 (_predefined._Cons wsH_0 _predefined._Nil))
windowaccess.stackBehind_83 !behindW_0 !wsH_1 !_x_2 = case _x_2 (_predefined._Cons wsH`_1_0 wsHs_1_1 -> let _x_2_0 = windowaccess.getWindowStateHandleWIDS <{wsH`_1_0}>, <{wids`_2_1}> = select _x_2_0::_Tuple2 0 in case (StdBool.not (windowaccess.identifyWIDS behindW_0 <{wids`_2_1}>)) (True -> let _x_4_0 = windowaccess.stackBehind_83 behindW_0 wsH_1 wsHs_1_1 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_4_0::_Tuple2 1))) (False -> let <{wsH`_4_0}> = select _x_2_0::_Tuple2 1, _x_4_1 = windowaccess.getWindowStateHandleWindowMode <{wsH`_4_0}> in case (<{windowhandle.==_5}> (select _x_4_1::_Tuple2 0) windowhandle.Modal) (True -> let _x_6_0 = windowaccess.stackBehindLastModal_82 wsH_1 <{wids`_2_1}> wsHs_1_1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (_predefined._Cons (select _x_4_1::_Tuple2 1) (select _x_6_0::_Tuple2 1))) (False -> <{_Tuple2!3}> <{wids`_2_1}> (_predefined._Cons (select _x_4_1::_Tuple2 1) (_predefined._Cons wsH_1 wsHs_1_1))) ) ) (_ -> windowaccess.windowaccessFatalError "addBehindWindowHandlesWindow" "behind window could not be found")
windowaccess.addBehindWindowHandlesWindow !behindW_0 !wsH_1 !wHs_2 = case wHs_2 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> let _x_2_0 = windowaccess.isWindowStateHandlePlaceHolder wsH_1 in case (select _x_2_0::_Tuple2 0) (True -> windowaccess.windowaccessFatalError "addBehindWindowHandlesWindow" "WindowStateHandle argument should not be a place holder") (False -> let _x_4_0 = windowaccess.stackBehind_83 behindW_0 (select _x_2_0::_Tuple2 1) whsWindows_1_0 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (update wHs_2::windowhandle._WindowHandles [0:select _x_4_0::_Tuple2 1])) ) 
windowaccess.insert_84 !_x_0::I !x_1 !ys_2 = case _x_0 (0 -> _predefined._Cons x_1 ys_2) (_ -> case ys_2 (_predefined._Cons y_1_0 ys_1_1 -> let !ys_2_0 = windowaccess.insert_84 (<{StdInt.-_7}> _x_0 1) x_1 ys_1_1 in _predefined._Cons y_1_0 ys_2_0) (_ -> _predefined._Cons x_1 _predefined._Nil))
windowaccess.addWindowHandlesWindow !index_0::I !wsH_1 !wHs_2 = case wHs_2 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> let !wsHs_2_0 = windowaccess.insert_84 (<{windowaccess._c;51;16_140}> (<{StdInt.<_17}> x_2_1 index_0) index_0 x_2_1) wsH_1 whsWindows_1_0, x_2_1::I = 0 in update wHs_2::windowhandle._WindowHandles [0:wsHs_2_0]) 
<{windowaccess._c;51;16_140}>::I !_x_0::B index_1::I x_2::I = case _x_0 (True -> index_1) (_ -> x_2)
windowaccess.addBehindLastModal_85 widsActive_0 !modalsExist_1::B !wsH_2 !_x_3 = case _x_3 (_predefined._Cons wsH`_1_0 wsHs_1_1 -> let _x_2_0::B = windowaccess.getWindowStateHandleWindowMode <{wsH`_1_0}>, <{mode`_2_1}> = select _x_2_0::_Tuple2 0, isModal_2_2 = <{windowhandle.==_5}> <{mode`_2_1}> windowhandle.Modal in case isModal_2_2 (True -> let !wsHs_4_0 = windowaccess.addBehindLastModal_85 widsActive_0 (windowaccess._f141_141 isModal_2_2 modalsExist_1) wsH_2 wsHs_1_1 in _predefined._Cons (select _x_2_0::_Tuple2 1) wsHs_4_0) (False -> case modalsExist_1 (True -> _predefined._Cons wsH_2 (_predefined._Cons (select _x_2_0::_Tuple2 1) wsHs_1_1)) (False -> _predefined._Cons (update wsH_2::windowhandle._WindowStateHandle [0:widsActive_0]) (_predefined._Cons (select _x_2_0::_Tuple2 1) wsHs_1_1)) ) ) (_ -> case modalsExist_1 (True -> _predefined._Cons wsH_2 _predefined._Nil) (False -> _predefined._Cons (update wsH_2::windowhandle._WindowStateHandle [0:widsActive_0]) _predefined._Nil) )
windowaccess._f141_141::B !isModal_0::B modalsExist_1::B = case isModal_0 (True -> True) (_ -> modalsExist_1)
windowaccess.addWindowHandlesActiveWindow !wsH_0 !wHs_1 = case wsH_0 (windowhandle._WindowStateHandle wids_1_0 wshHandle_1_1 -> case wHs_1 (windowhandle._WindowHandles whsWindows_2_0 whsCursor_2_1 whsNrWindowBound_2_2 whsModal_2_3 whsFinalModalLS_2_4 -> let _x_3_0 = windowaccess.getWindowStateHandleWindowMode wsH_0 in case (<{windowhandle.==_5}> (select _x_3_0::_Tuple2 0) windowhandle.Modal) (True -> update wHs_1::windowhandle._WindowHandles [0:_predefined._Cons (update (select _x_3_0::_Tuple2 1)::windowhandle._WindowStateHandle [0:update wids_1_0::windowhandle._WIDS [2:True]]) whsWindows_2_0]) (False -> let !wsHs_5_0 = windowaccess.addBehindLastModal_85 (update wids_1_0::windowhandle._WIDS [2:True]) False (select _x_3_0::_Tuple2 1) whsWindows_2_0 in update wHs_1::windowhandle._WindowHandles [0:wsHs_5_0]) ) ) 
windowaccess.disablewindow_86 !wsH_0 !tb_1::I = let _x_1_0 = windowaccess.getWindowStateHandleWIDS wsH_0, _x_1_1 = windowaccess.getWindowStateHandleWindowInfo (select _x_1_0::_Tuple2 1) in <{_Tuple2!3}> (select _x_1_1::_Tuple2 1) (oswindow.osDisableWindow (select (select _x_1_0::_Tuple2 0)::windowhandle._WIDS 1) (<{windowaccess._c;534;31_142}> (select _x_1_1::_Tuple2 0)) True tb_1)
<{windowaccess._c;534;31_142}> !_x_0 = case _x_0 (windowhandle.WindowInfo info_1_0 -> <{_Tuple2!3}> (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3))) (_ -> <{_Tuple2!3}> False False)
windowaccess.disableWindowSystem !windows_0 !tb_1::I = case windows_0 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> case (StdBool.not whsModal_1_3) (True -> let _x_3_0 = commondef.stateMap windowaccess.disablewindow_86 whsWindows_1_0 tb_1 in <{_Tuple2!3}> (_Tuple2 Data.Maybe.Nothing (update windows_0::windowhandle._WindowHandles [0:select _x_3_0::_Tuple2 0,3:True])) (select _x_3_0::_Tuple2 1)) (False -> let _x_3_0 = windowaccess.getWindowHandlesActiveWindow windows_0, activeW_3_1 = select _x_3_0::_Tuple2 0 in case (Data.Maybe.isNothing activeW_3_1) (True -> windowaccess.windowaccessFatalError "disableWindowSystem" "no active window found") (False -> <{_Tuple2!3}> (_Tuple2 activeW_3_1 (select _x_3_0::_Tuple2 1)) (oswindow.osDisableWindow (select (Data.Maybe.fromJust activeW_3_1)::windowhandle._WIDS 1) (_Tuple2 False False) True tb_1)) ) ) 
windowaccess.enablewindow_87 !wsH_0 !tb_1::I = let _x_1_0 = windowaccess.getWindowStateHandleSelect wsH_0 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> <{_Tuple2!3}> (select _x_1_0::_Tuple2 1) tb_1) (False -> let _x_3_0 = windowaccess.getWindowStateHandleWIDS (select _x_1_0::_Tuple2 1), _x_3_1 = windowaccess.getWindowStateHandleWindowInfo (select _x_3_0::_Tuple2 1) in <{_Tuple2!3}> (select _x_3_1::_Tuple2 1) (oswindow.osEnableWindow (select (select _x_3_0::_Tuple2 0)::windowhandle._WIDS 1) (<{windowaccess._c;555;35_143}> (select _x_3_1::_Tuple2 0)) True tb_1)) 
<{windowaccess._c;555;35_143}> !_x_0 = case _x_0 (windowhandle.WindowInfo info_1_0 -> <{_Tuple2!3}> (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3))) (_ -> <{_Tuple2!3}> False False)
windowaccess.enableWindowSystem !_x_0 !windows_1 !tb_2::I = case _x_0 (Data.Maybe.Nothing -> case windows_1 (windowhandle._WindowHandles whsWindows_2_0 whsCursor_2_1 whsNrWindowBound_2_2 whsModal_2_3 whsFinalModalLS_2_4 -> let _x_3_0 = commondef.stateMap windowaccess.enablewindow_87 whsWindows_2_0 tb_2 in <{_Tuple2!3}> (update windows_1::windowhandle._WindowHandles [0:select _x_3_0::_Tuple2 0,3:False]) (select _x_3_0::_Tuple2 1)) ) (Data.Maybe.Just wids_1_0 -> <{_Tuple2!3}> windows_1 (oswindow.osEnableWindow (select wids_1_0::windowhandle._WIDS 1) (_Tuple2 False False) True tb_2)) 
windowaccess.checkZeroWindowHandlesBound !wHs_0 = case wHs_0 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> <{_Tuple2!3}> (commondef.zeroBound whsNrWindowBound_1_2) wHs_0) 
windowaccess.decreaseWindowHandlesBound !wHs_0 = case wHs_0 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> update wHs_0::windowhandle._WindowHandles [2:commondef.decBound whsNrWindowBound_1_2]) 
windowaccess.getWindowHandlesCursorInfo !wHs_0 = case wHs_0 (windowhandle._WindowHandles whsWindows_1_0 whsCursor_1_1 whsNrWindowBound_1_2 whsModal_1_3 whsFinalModalLS_1_4 -> <{_Tuple2!3}> whsCursor_1_1 wHs_0) 
windowaccess.setWindowHandlesCursorInfo !ci_0 !wHs_1 = update wHs_1::windowhandle._WindowHandles [1:ci_0]
windowaccess.getWItemKeyFocusIds_90 shownContext_0::B !itemH_1 = case itemH_1 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> let !focus_2_0 = _predefined._dummyForStrictAlias (_predefined._Cons (keyfocus._FocusItem w_1_1 shownContext_0) _predefined._Nil) in case (<{windowhandle.==_8}> w_1_2 windowhandle.IsEditControl) (True -> <{_Tuple2!3}> focus_2_0 itemH_1) (False -> let hasKeyAtt_4_0::B = commondef.contains StdControlAttribute.isControlKeyboard w_1_6 in case (case (<{windowhandle.==_8}> w_1_2 windowhandle.IsPopUpControl) (True -> hasKeyAtt_4_0) (False -> False) ) (True -> <{_Tuple2!3}> focus_2_0 itemH_1) (False -> case (case (case (<{windowhandle.==_8}> w_1_2 windowhandle.IsCustomControl) (True -> True) (False -> <{windowhandle.==_8}> w_1_2 windowhandle.IsCompoundControl) ) (True -> hasKeyAtt_4_0) (False -> False) ) (True -> <{_Tuple2!3}> focus_2_0 itemH_1) (False -> let !w_7_0 = _predefined._dummyForStrictAlias w_1_7, _x_7_1 = windowaccess.getWElementKeyFocusIds shownContext_0 w_7_0 in <{_Tuple2!3}> (select _x_7_1::_Tuple2 0) (update itemH_1::windowhandle._WItemHandle [7:select _x_7_1::_Tuple2 1])) ) ) ) 
<{windowaccess.getWElementKeyFocusIds`_91}> !shownContext_0::B !_x_1 = case _x_1 (windowhandle.WItemHandle itemH_1_0 -> let _x_2_0 = windowaccess.getWItemKeyFocusIds_90 shownContext_0 itemH_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WItemHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowaccess.getWElementKeyFocusIds shownContext_0 itemHs_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WListLSHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowaccess.getWElementKeyFocusIds shownContext_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple2 1]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowaccess.getWElementKeyFocusIds shownContext_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple2 1]))) ) 
windowaccess.getWElementKeyFocusIds !shownContext_0::B !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = <{windowaccess.getWElementKeyFocusIds`_91}> shownContext_0 itemH_1_0, _x_2_1 = windowaccess.getWElementKeyFocusIds shownContext_0 itemHs_1_1 in <{_Tuple2!3}> (<{StdList.++}> (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_2_1::_Tuple2 1))) (_ -> <{_Tuple2!3}> _predefined._Nil _predefined._Nil)
windowaccess.getFocusWElementHandle_88 !initActive_0 !_x_1 = case _x_1 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (case (Data.Maybe.isJust initActive_0) (True -> <{Data.Maybe.==_11}> (<{StdOverloaded.==;}> <{id.==_27}>) initActive_0 w_2_0) (False -> False) ) (True -> <{_Tuple3!7}> True w_2_11 (windowhandle.WItemHandle itemH_1_0)) (False -> case (case (<{windowhandle.==_8}> w_2_2 windowhandle.IsEditControl) (True -> Data.Maybe.isNothing initActive_0) (False -> False) ) (True -> <{_Tuple3!7}> True w_2_11 (windowhandle.WItemHandle itemH_1_0)) (False -> let _x_5_0 = windowaccess.getFocusWElementHandles_89 initActive_0 w_2_7 in <{_Tuple3!7}> (select _x_5_0::_Tuple3 0) (select _x_5_0::_Tuple3 1) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_5_0::_Tuple3 2]))) ) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowaccess.getFocusWElementHandles_89 initActive_0 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 2))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowaccess.getFocusWElementHandles_89 initActive_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 2]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowaccess.getFocusWElementHandles_89 initActive_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 2]))) ) 
windowaccess.getFocusWElementHandles_89 !initActive_0 !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = windowaccess.getFocusWElementHandle_88 initActive_0 itemH_1_0, found_2_1 = select _x_2_0::_Tuple3 0 in case found_2_1 (True -> <{_Tuple3!7}> found_2_1 (select _x_2_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) itemHs_1_1)) (False -> let _x_4_0 = windowaccess.getFocusWElementHandles_89 initActive_0 itemHs_1_1 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) (_ -> <{_Tuple3!7}> False -1 _predefined._Nil)
windowaccess.getInitActiveControl !wH_0 = case wH_0 (windowhandle._WindowHandle whMode_1_0 whKind_1_1 whTitle_1_2 wh_1_3 whKeyFocus_1_4 whWindow_1_5 itemHs_1_6 whShow_1_7 whSelect_1_8 whAtts_1_9 whDefault_1_10 whCancel_1_11 whSize_1_12 whClosing_1_13 -> let _x_2_0 = commondef.cselect StdWindowAttribute.isWindowInitActive StdMisc.undef whAtts_1_9, has_2_1::I = select _x_2_0::_Tuple2 0, initActive_2_2 = <{windowaccess._if;592;43_144}> has_2_1 initActiveAtt_2_5, _x_2_3 = windowaccess.getFocusWElementHandles_89 initActive_2_2 itemHs_1_6, itemPtr_2_4::B = select _x_2_3::_Tuple3 1, initActiveAtt_2_5 = select _x_2_0::_Tuple2 1 in <{_Tuple2!3}> (<{windowaccess._if;589;8_145}> (select _x_2_3::_Tuple3 0) itemPtr_2_4) (update wH_0::windowhandle._WindowHandle [6:select _x_2_3::_Tuple3 2])) 
<{windowaccess._if;589;8_145}>::I !_x_0::B itemPtr_1::I = case _x_0 (True -> itemPtr_1) (_ -> -1)
<{windowaccess._if;592;43_144}> !has_0::B initActiveAtt_1 = case has_0 (True -> Data.Maybe.Just (StdWindowAttribute.getWindowInitActiveAtt initActiveAtt_1)) (_ -> Data.Maybe.Nothing)
windowaccess.genWElementNrs_92 !nrs_0 !w_1 = case w_1 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (<{StdInt.==_16}> w_2_1 0)) (True -> let _x_4_0 = windowaccess.genWElementItemNrs nrs_0 w_2_7 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_4_0::_Tuple2 1]))) (False -> let _x_4_0 = windowaccess.genWElementItemNrs nrs_0 w_2_7, _x_4_1 = commondef.hdtl (select _x_4_0::_Tuple2 0) in <{_Tuple2!3}> (select _x_4_1::_Tuple2 1) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [1:select _x_4_1::_Tuple2 0,7:select _x_4_0::_Tuple2 1]))) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = windowaccess.genWElementItemNrs nrs_0 itemHs_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WListLSHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = windowaccess.genWElementItemNrs nrs_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple2 1]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = windowaccess.genWElementItemNrs nrs_0 itemHs_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple2 1]))) ) 
windowaccess.genWElementItemNrs !nrs_0 !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = windowaccess.genWElementNrs_92 nrs_0 itemH_1_0, _x_2_1 = windowaccess.genWElementItemNrs (select _x_2_0::_Tuple2 0) itemHs_1_1 in <{_Tuple2!3}> (select _x_2_1::_Tuple2 0) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_2_1::_Tuple2 1))) (_ -> <{_Tuple2!3}> nrs_0 _predefined._Nil)
windowaccess.getFinalModalLS !wid_0 !_x_1 = case _x_1 (windowhandle._FinalModalLS fmW_1_0 fmLS_1_1 -> case (windowaccess.identifyWIDS wid_0 fmW_1_0) (True -> Data.Maybe.Just (cast.cast fmLS_1_1)) (False -> Data.Maybe.Nothing) ) 
windowaccess.toWID_71 !id_0 = windowaccess.ById id_0
windowaccess.toWID_72 !wPtr_0::I = windowaccess.ByPtr wPtr_0
windowaccess.toWID_73 !_x_0 = case _x_0 (windowhandle._WIDS w_1_0 wPtr_1_1 wActive_1_2 -> windowaccess.ByPtr wPtr_1_1) 
<{windowaccess.TD;WID}> _x_0::B = _predefined._Nil
<{windowaccess.TD;toWID;}> _x_0::B = _predefined._Nil

:: windowaccess.WID = windowaccess.ById !a1 | windowaccess.ByPtr !a1

|| Converted Records
:: <{windowaccess.toWID;}> = {!windowaccess.toWID}

:: <{windowaccess.gEq_s;}> = {!windowaccess.gEq_s}

:: <{windowaccess.gEq_ss;}> = {!windowaccess.gEq_ss}

:: <{windowaccess.gEq_sss;}> = {!windowaccess.gEq_sss}

:: <{windowaccess.gEq_ssss;}> = {!windowaccess.gEq_ssss}

:: <{windowaccess.gEq_sssss;}> = {!windowaccess.gEq_sssss}

:: <{windowaccess.gEq_ssssss;}> = {!windowaccess.gEq_ssssss}

:: <{windowaccess.gEq_sssssss;}> = {!windowaccess.gEq_sssssss}

:: <{windowaccess.gEq_ssssssss;}> = {!windowaccess.gEq_ssssssss}

:: <{windowaccess.gEq_sssssssss;}> = {!windowaccess.gEq_sssssssss}

:: <{windowaccess.bimap_s;}> = {windowaccess.bimap_s}

:: <{windowaccess.bimap_ss;}> = {windowaccess.bimap_ss}

:: <{windowaccess.bimap_sss;}> = {windowaccess.bimap_sss}

