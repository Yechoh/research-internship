|| ?module? timerdefaccess


timerdefaccess.timerDefGetAttributes !_x_0 = case _x_0 (StdTimerDef.Timer _x_1_0 _x_1_1 atts_1_2 -> atts_1_2) 
timerdefaccess.setAbility_4 !select_0 !atts_1 = let att_1_0 = StdTimerDef.TimerSelectState select_0, _x_1_1 = commondef.creplace StdTimerAttribute.isTimerSelectState att_1_0 atts_1 in case (select _x_1_1::_Tuple2 0) (True -> select _x_1_1::_Tuple2 1) (False -> _predefined._Cons att_1_0 atts_1) 
timerdefaccess.timerDefSetAbility !select_0 !_x_1 = case _x_1 (StdTimerDef.Timer interval_1_0 items_1_1 atts_1_2 -> StdTimerDef.Timer interval_1_0 items_1_1 (timerdefaccess.setAbility_4 select_0 atts_1_2)) 
timerdefaccess.timerDefSetInterval !interval_0::I !_x_1 = case _x_1 (StdTimerDef.Timer _x_1_0 items_1_1 atts_1_2 -> StdTimerDef.Timer interval_0 items_1_1 atts_1_2) 
timerdefaccess.setFunction_5 !f_0 !atts_1 = let att_1_0 = StdTimerDef.TimerFunction f_0, _x_1_1 = commondef.creplace StdTimerAttribute.isTimerFunction att_1_0 atts_1 in case (select _x_1_1::_Tuple2 0) (True -> select _x_1_1::_Tuple2 1) (False -> _predefined._Cons att_1_0 atts_1) 
timerdefaccess.timerDefSetFunction !f_0 !_x_1 = case _x_1 (StdTimerDef.Timer interval_1_0 items_1_1 atts_1_2 -> StdTimerDef.Timer interval_1_0 items_1_1 (timerdefaccess.setFunction_5 f_0 atts_1_2)) 


|| Converted Records
:: <{timerdefaccess.gEq_s;}> = {!timerdefaccess.gEq_s}

:: <{timerdefaccess.gEq_ss;}> = {!timerdefaccess.gEq_ss}

:: <{timerdefaccess.gEq_sss;}> = {!timerdefaccess.gEq_sss}

:: <{timerdefaccess.gEq_ssss;}> = {!timerdefaccess.gEq_ssss}

:: <{timerdefaccess.gEq_sssss;}> = {!timerdefaccess.gEq_sssss}

:: <{timerdefaccess.gEq_ssssss;}> = {!timerdefaccess.gEq_ssssss}

:: <{timerdefaccess.gEq_sssssss;}> = {!timerdefaccess.gEq_sssssss}

:: <{timerdefaccess.gEq_ssssssss;}> = {!timerdefaccess.gEq_ssssssss}

:: <{timerdefaccess.gEq_sssssssss;}> = {!timerdefaccess.gEq_sssssssss}

:: <{timerdefaccess.bimap_s;}> = {timerdefaccess.bimap_s}

:: <{timerdefaccess.bimap_ss;}> = {timerdefaccess.bimap_ss}

:: <{timerdefaccess.bimap_sss;}> = {timerdefaccess.bimap_sss}

