|| ?module? StdPSt


StdPSt.beep !ioState_0 = iostate.appIOToolbox osbeep.osBeep ioState_0
StdPSt.getDocumentInterface !ioState_0 = iostate.ioStGetDocumentInterface ioState_0
StdPSt.setProcessAttribute !cond_0 !<{pAtt`_1}> !_x_2 = case _x_2 (_predefined._Cons pAtt_1_0 pAtts_1_1 -> case (cond_0 pAtt_1_0) (True -> _predefined._Cons <{pAtt`_1}> pAtts_1_1) (False -> _predefined._Cons pAtt_1_0 (StdPSt.setProcessAttribute cond_0 <{pAtt`_1}> pAtts_1_1)) ) (_ -> _predefined._Cons <{pAtt`_1}> _predefined._Nil)
StdPSt.setProcessActivate !activateF_0 !ioState_1 = let _x_1_0 = iostate.ioStGetProcessAttributes ioState_1 in iostate.ioStSetProcessAttributes (StdPSt.setProcessAttribute StdProcessAttribute.isProcessActivate (StdIOCommon.ProcessActivate activateF_0) (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
StdPSt.setProcessDeactivate !deactivateF_0 !ioState_1 = let _x_1_0 = iostate.ioStGetProcessAttributes ioState_1 in iostate.ioStSetProcessAttributes (StdPSt.setProcessAttribute StdProcessAttribute.isProcessDeactivate (StdIOCommon.ProcessDeactivate deactivateF_0) (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
StdPSt.appListPIO !fs_0 !pState_1 = case pState_1 (iostate._PSt ls_1_0 io_1_1 -> update pState_1::iostate._PSt [1:commondef.strictSeq fs_0 io_1_1]) 
StdPSt.appListPLoc !fs_0 !pState_1 = case pState_1 (iostate._PSt ls_1_0 io_1_1 -> update pState_1::iostate._PSt [0:commondef.strictSeq fs_0 ls_1_0]) 
StdPSt.appPIO !f_0 !pState_1 = case pState_1 (iostate._PSt ls_1_0 io_1_1 -> update pState_1::iostate._PSt [1:f_0 io_1_1]) 
StdPSt.appPLoc !f_0 !pState_1 = case pState_1 (iostate._PSt ls_1_0 io_1_1 -> update pState_1::iostate._PSt [0:f_0 ls_1_0]) 
StdPSt.accListPIO !fs_0 !pState_1 = case pState_1 (iostate._PSt ls_1_0 io_1_1 -> let _x_2_0 = commondef.strictSeqList fs_0 io_1_1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update pState_1::iostate._PSt [1:select _x_2_0::_Tuple2 1])) 
StdPSt.accListPLoc !fs_0 !pState_1 = case pState_1 (iostate._PSt ls_1_0 io_1_1 -> let _x_2_0 = commondef.strictSeqList fs_0 ls_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update pState_1::iostate._PSt [0:select _x_2_0::_Tuple2 1])) 
StdPSt.accPIO !f_0 !pState_1 = case pState_1 (iostate._PSt ls_1_0 io_1_1 -> let _x_2_0 = f_0 io_1_1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update pState_1::iostate._PSt [1:select _x_2_0::_Tuple2 1])) 
StdPSt.accPLoc !f_0 !pState_1 = case pState_1 (iostate._PSt ls_1_0 io_1_1 -> let _x_2_0 = f_0 ls_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update pState_1::iostate._PSt [0:select _x_2_0::_Tuple2 1])) 
StdPSt.accScreenPicture_12 !fun_0 !world_1 = let _x_1_0 = ostoolbox.worldGetToolbox world_1, _x_1_1 = ospicture.peekScreen fun_0 (select _x_1_0::_Tuple2 0) in <{_Tuple2!3}> (select _x_1_1::_Tuple2 0) (ostoolbox.worldSetToolbox (select _x_1_1::_Tuple2 1) (select _x_1_0::_Tuple2 1))
StdPSt.accScreenPicture_13 !fun_0 !ioState_1 = iostate.accIOToolbox (ospicture.peekScreen fun_0) ioState_1
<{StdPSt.TD;accScreenPicture;}> _x_0::B = _predefined._Nil


|| Converted Records
:: <{StdPSt.accScreenPicture;}> = {!StdPSt.accScreenPicture}

:: <{StdPSt.gEq_s;}> = {!StdPSt.gEq_s}

:: <{StdPSt.gEq_ss;}> = {!StdPSt.gEq_ss}

:: <{StdPSt.gEq_sss;}> = {!StdPSt.gEq_sss}

:: <{StdPSt.gEq_ssss;}> = {!StdPSt.gEq_ssss}

:: <{StdPSt.gEq_sssss;}> = {!StdPSt.gEq_sssss}

:: <{StdPSt.gEq_ssssss;}> = {!StdPSt.gEq_ssssss}

:: <{StdPSt.gEq_sssssss;}> = {!StdPSt.gEq_sssssss}

:: <{StdPSt.gEq_ssssssss;}> = {!StdPSt.gEq_ssssssss}

:: <{StdPSt.gEq_sssssssss;}> = {!StdPSt.gEq_sssssssss}

:: <{StdPSt.bimap_s;}> = {StdPSt.bimap_s}

:: <{StdPSt.bimap_ss;}> = {StdPSt.bimap_ss}

:: <{StdPSt.bimap_sss;}> = {StdPSt.bimap_sss}

