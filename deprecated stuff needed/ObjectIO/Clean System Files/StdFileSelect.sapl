|| ?module? StdFileSelect


StdFileSelect.handleOSEvent !osEvent_0 !context_1 = select (scheduler.handleContextOSEvent osEvent_0 context_1)::_Tuple2 1
StdFileSelect.selectDirectory_0 !world_0 = let _x_1_0 = <{scheduler.initContext`}> world_0, initContext_1_1 = select _x_1_0::_Tuple2 0, tb_1_2::I = select _x_1_0::_Tuple2 1, tb_1_3::I = osfileselect.osInitialiseFileSelectors tb_1_2, _x_1_4 = osfileselect.osSelectdirectory StdFileSelect.handleOSEvent initContext_1_1 tb_1_3, name_1_5 = select _x_1_4::_Tuple4 1 in <{_Tuple2!3}> (<{StdFileSelect._if;32;12_48}> (select _x_1_4::_Tuple4 0) name_1_5) (scheduler.closeContext (select _x_1_4::_Tuple4 2) (select _x_1_4::_Tuple4 3))
<{StdFileSelect._if;32;12_48}> !_x_0::B name_1 = case _x_0 (True -> Data.Maybe.Just name_1) (_ -> Data.Maybe.Nothing)
StdFileSelect.selectInputFile_1 !world_0 = let _x_1_0 = <{scheduler.initContext`}> world_0, initContext_1_1 = select _x_1_0::_Tuple2 0, tb_1_2::I = select _x_1_0::_Tuple2 1, tb_1_3::I = osfileselect.osInitialiseFileSelectors tb_1_2, _x_1_4 = osfileselect.osSelectinputfile StdFileSelect.handleOSEvent initContext_1_1 tb_1_3, name_1_5 = select _x_1_4::_Tuple4 1 in <{_Tuple2!3}> (<{StdFileSelect._if;18;12_49}> (select _x_1_4::_Tuple4 0) name_1_5) (scheduler.closeContext (select _x_1_4::_Tuple4 2) (select _x_1_4::_Tuple4 3))
<{StdFileSelect._if;18;12_49}> !_x_0::B name_1 = case _x_0 (True -> Data.Maybe.Just name_1) (_ -> Data.Maybe.Nothing)
StdFileSelect.selectOutputFile_2 !prompt_0 !filename_1 !world_2 = let _x_1_0 = <{scheduler.initContext`}> world_2, initContext_1_1 = select _x_1_0::_Tuple2 0, tb_1_2::I = select _x_1_0::_Tuple2 1, tb_1_3::I = osfileselect.osInitialiseFileSelectors tb_1_2, _x_1_4 = osfileselect.osSelectoutputfile StdFileSelect.handleOSEvent initContext_1_1 prompt_0 filename_1 tb_1_3, name_1_5 = select _x_1_4::_Tuple4 1 in <{_Tuple2!3}> (<{StdFileSelect._if;25;12_50}> (select _x_1_4::_Tuple4 0) name_1_5) (scheduler.closeContext (select _x_1_4::_Tuple4 2) (select _x_1_4::_Tuple4 3))
<{StdFileSelect._if;25;12_50}> !_x_0::B name_1 = case _x_0 (True -> Data.Maybe.Just name_1) (_ -> Data.Maybe.Nothing)
<{StdFileSelect.TD;FileSelectEnv;}> _x_0::B = _predefined._Nil


|| Converted Records
:: <{StdFileSelect.FileSelectEnv;}> = {!StdFileSelect.selectDirectory, !StdFileSelect.selectInputFile, !StdFileSelect.selectOutputFile}

:: <{StdFileSelect.gEq_s;}> = {!StdFileSelect.gEq_s}

:: <{StdFileSelect.gEq_ss;}> = {!StdFileSelect.gEq_ss}

:: <{StdFileSelect.gEq_sss;}> = {!StdFileSelect.gEq_sss}

:: <{StdFileSelect.gEq_ssss;}> = {!StdFileSelect.gEq_ssss}

:: <{StdFileSelect.gEq_sssss;}> = {!StdFileSelect.gEq_sssss}

:: <{StdFileSelect.gEq_ssssss;}> = {!StdFileSelect.gEq_ssssss}

:: <{StdFileSelect.gEq_sssssss;}> = {!StdFileSelect.gEq_sssssss}

:: <{StdFileSelect.gEq_ssssssss;}> = {!StdFileSelect.gEq_ssssssss}

:: <{StdFileSelect.gEq_sssssssss;}> = {!StdFileSelect.gEq_sssssssss}

:: <{StdFileSelect.bimap_s;}> = {StdFileSelect.bimap_s}

:: <{StdFileSelect.bimap_ss;}> = {StdFileSelect.bimap_ss}

:: <{StdFileSelect.bimap_sss;}> = {StdFileSelect.bimap_sss}

