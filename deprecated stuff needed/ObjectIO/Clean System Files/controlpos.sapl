|| ?module? controlpos


controlpos.anon_9 r_0 s_1 = _Tuple2 r_0 s_1
controlpos.anon_8 r_0 s_1 = _Tuple2 r_0 s_1
controlpos.setsliderthumb_5::I hScroll_0 vScroll_1 hRect_2 vRect_3 !hasScroll_4::B !wMetrics_5 !wPtr_6::I !isHScroll_7::B !scrollValues_8 !viewSize_9::I !maxcoords_10 !tb_11::I = case hasScroll_4 (True -> oswindow.osSetWindowSliderThumb wMetrics_5 wPtr_6 isHScroll_7 (select (oswindow.toOSscrollbarRange scrollValues_8 viewSize_9)::_Tuple4 1) hScroll_0 vScroll_1 hRect_2 vRect_3 maxcoords_10 True tb_11) (False -> tb_11) 
controlpos.myisEmptyItem_7 !_x_0 = case _x_0 (windowhandle.WItemHandle wiH_1_0 -> <{_Tuple2!3}> False (windowhandle.WItemHandle wiH_1_0)) (windowhandle.WListLSHandle wHs_1_0 -> let _x_2_0 = controlpos.myisEmpty wHs_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WListLSHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WExtendLSHandle _x_1_0 -> case _x_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 wExtend_2_1 -> let _x_3_0 = controlpos.myisEmpty wExtend_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WExtendLSHandle (windowhandle._WExtendLSHandle wExtendLS_2_0 (select _x_3_0::_Tuple2 1)))) ) (windowhandle.WChangeLSHandle _x_1_0 -> case _x_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 wChange_2_1 -> let !_x_3_0 = controlpos.myisEmpty wChange_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WChangeLSHandle (windowhandle._WChangeLSHandle wChangeLS_2_0 (select _x_3_0::_Tuple2 1)))) ) 
controlpos.myisEmpty !_x_0 = case _x_0 (_predefined._Nil -> <{_Tuple2!3}> True _predefined._Nil) (_predefined._Cons wH_1_0 wHs_1_1 -> let _x_2_0::B = controlpos.myisEmptyItem_7 wH_1_0, isEmpty_2_1 = select _x_2_0::_Tuple2 0 in case isEmpty_2_1 (True -> let _x_4_0 = controlpos.myisEmpty wHs_1_1 in <{_Tuple2!3}> (select _x_4_0::_Tuple2 0) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_4_0::_Tuple2 1))) (False -> <{_Tuple2!3}> isEmpty_2_1 (_predefined._Cons (select _x_2_0::_Tuple2 1) wHs_1_1)) ) 
controlpos.scroll_4 !scrollRect_0 !restRect_1 !v_2 !picture_3 = let _x_1_0 = ospicture.pictscroll2 scrollRect_0 v_2 picture_3 in case (<{commondef.==_65}> (select _x_1_0::_Tuple2 0) commondef.zero_64) (True -> <{_Tuple2!3}> _predefined._Nil (select _x_1_0::_Tuple2 1)) (False -> <{_Tuple2!3}> (_predefined._Cons restRect_1 _predefined._Nil) (select _x_1_0::_Tuple2 1)) 
controlpos.calcScrollUpdateArea_6 !oldOrigin_0 !newOrigin_1 !areaRect_2 = let v_1_0::I = StdIOBasic.toVector_23 (<{StdIOBasic.-_20}> oldOrigin_0 newOrigin_1), vx_1_1::I = select v_1_0::StdIOBasic._Vector2 0, _x_1_2::I = <{controlpos._if;101;39_54}> (controlpos._f53_53 (<{StdInt.<_17}> vx_1_1 0) vy_1_8) newOriginAreaRect_1_3 rright_1_4 vx_1_1 rbottom_1_5 vy_1_8 rtop_1_6 rleft_1_7, newOriginAreaRect_1_3::I = commondef.addVector_67 (StdIOBasic.toVector_23 newOrigin_1) areaRect_2, rright_1_4::I = select newOriginAreaRect_1_3::ostypes._OSRect 2, rbottom_1_5 = select newOriginAreaRect_1_3::ostypes._OSRect 3, rtop_1_6 = select newOriginAreaRect_1_3::ostypes._OSRect 1, rleft_1_7::I = select newOriginAreaRect_1_3::ostypes._OSRect 0, vy_1_8 = select v_1_0::StdIOBasic._Vector2 1 in <{_Tuple2!3}> (StdList.map commondef.rectToRectangle (select _x_1_2::_Tuple2 0)) (controlpos.scroll_4 (update newOriginAreaRect_1_3::ostypes._OSRect [2:<{StdInt.+_6}> rright_1_4 1,3:<{StdInt.+_6}> rbottom_1_5 1]) (select _x_1_2::_Tuple2 1) v_1_0)
<{controlpos._if;101;39_54}> !_x_0::B newOriginAreaRect_1 rright_2::I vx_3::I rbottom_4::I vy_5::I rtop_6::I rleft_7::I = case _x_0 (True -> _Tuple2 (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [0:<{StdInt.+_6}> rright_2 vx_3,3:<{StdInt.+_6}> rbottom_4 vy_5]) (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [1:<{StdInt.+_6}> rbottom_4 vy_5]) _predefined._Nil)) (update newOriginAreaRect_1::ostypes._OSRect [2:<{StdInt.+_6}> rright_2 vx_3,3:<{StdInt.+_6}> rbottom_4 vy_5])) (_ -> case (case (<{StdInt.<_17}> vx_3 0) (True -> <{StdInt.<_17}> 0 vy_5) (False -> False) ) (True -> _Tuple2 (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [0:<{StdInt.+_6}> rright_2 vx_3,1:<{StdInt.+_6}> rtop_6 vy_5]) (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [3:<{StdInt.+_6}> rtop_6 vy_5]) _predefined._Nil)) (update newOriginAreaRect_1::ostypes._OSRect [1:<{StdInt.+_6}> rtop_6 vy_5,2:<{StdInt.+_6}> rright_2 vx_3])) (False -> case (<{StdInt.<_17}> vx_3 0) (True -> _Tuple2 (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [0:<{StdInt.+_6}> rright_2 vx_3]) _predefined._Nil) (update newOriginAreaRect_1::ostypes._OSRect [2:<{StdInt.+_6}> rright_2 vx_3])) (False -> case (case (<{StdInt.<_17}> 0 vx_3) (True -> <{StdInt.<_17}> vy_5 0) (False -> False) ) (True -> _Tuple2 (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [2:<{StdInt.+_6}> rleft_7 vx_3,3:<{StdInt.+_6}> rbottom_4 vy_5]) (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [1:<{StdInt.+_6}> rbottom_4 vy_5]) _predefined._Nil)) (update newOriginAreaRect_1::ostypes._OSRect [0:<{StdInt.+_6}> rleft_7 vx_3,3:<{StdInt.+_6}> rbottom_4 vy_5])) (False -> case (case (<{StdInt.<_17}> 0 vx_3) (True -> <{StdInt.<_17}> 0 vy_5) (False -> False) ) (True -> _Tuple2 (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [1:<{StdInt.+_6}> rtop_6 vy_5,2:<{StdInt.+_6}> rleft_7 vx_3]) (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [3:<{StdInt.+_6}> rtop_6 vy_5]) _predefined._Nil)) (update newOriginAreaRect_1::ostypes._OSRect [0:<{StdInt.+_6}> rleft_7 vx_3,1:<{StdInt.+_6}> rtop_6 vy_5])) (False -> case (<{StdInt.<_17}> 0 vx_3) (True -> _Tuple2 (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [2:<{StdInt.+_6}> rleft_7 vx_3]) _predefined._Nil) (update newOriginAreaRect_1::ostypes._OSRect [0:<{StdInt.+_6}> rleft_7 vx_3])) (False -> case (<{StdInt.<_17}> vy_5 0) (True -> _Tuple2 (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [1:<{StdInt.+_6}> rbottom_4 vy_5]) _predefined._Nil) (update newOriginAreaRect_1::ostypes._OSRect [3:<{StdInt.+_6}> rbottom_4 vy_5])) (False -> case (<{StdInt.<_17}> 0 vy_5) (True -> _Tuple2 (_predefined._Cons (update newOriginAreaRect_1::ostypes._OSRect [3:<{StdInt.+_6}> rtop_6 vy_5]) _predefined._Nil) (update newOriginAreaRect_1::ostypes._OSRect [1:<{StdInt.+_6}> rtop_6 vy_5])) (False -> _Tuple2 (_predefined._Cons commondef.zero_64 _predefined._Nil) newOriginAreaRect_1) ) ) ) ) ) ) )
controlpos._f53_53::B !_x_0::B vy_1::I = case _x_0 (True -> <{StdInt.<_17}> vy_1 0) (_ -> False)
controlpos.anon_3 !wH_0 = case wH_0 (windowhandle._WindowHandle whMode_1_0 whKind_1_1 whTitle_1_2 wh_1_3 whKeyFocus_1_4 whWindow_1_5 wh_1_6 whShow_1_7 whSelect_1_8 whAtts_1_9 whDefault_1_10 whCancel_1_11 whSize_1_12 whClosing_1_13 -> _Tuple2 whWindow_1_5 wH_0) 
controlpos.controlposFatalError !function_0 !error_1 = commondef.fatalError function_0 "controlpos" error_1
controlpos.movewindowviewframe !wMetrics_0 !v_1 !wids_2 !wH_3 !tb_4::I = case wids_2 (windowhandle._WIDS w_1_0 wPtr_1_1 wActive_1_2 -> case wH_3 (windowhandle._WindowHandle whMode_2_0 whKind_2_1 whTitle_2_2 wh_2_3 whKeyFocus_2_4 whWindow_2_5 old_2_6 whShow_2_7 whSelect_2_8 whAtts_2_9 whDefault_2_10 whCancel_2_11 whSize_2_12 whClosing_2_13 -> let window_3_0 = windowaccess.getWindowInfoWindowData whWindow_2_5, _x_3_1::I = _Tuple5 (select window_3_0::windowhandle._WindowData 1) (select window_3_0::windowhandle._WindowData 0) (Data.Maybe.isJust (select window_3_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select window_3_0::windowhandle._WindowData 3)) (select window_3_0::windowhandle._WindowData 4), oldOrigin_3_2::I = select _x_3_1::_Tuple5 0, domainRect_3_3::I = select _x_3_1::_Tuple5 1, hasHScroll_3_4::I = select _x_3_1::_Tuple5 2, hasVScroll_3_5 = select _x_3_1::_Tuple5 3, visScrolls_3_6::I = oswindow.osScrollbarsAreVisible wMetrics_0 domainRect_3_3 (commondef.toTuple_72 whSize_2_12) (_Tuple2 hasHScroll_3_4 hasVScroll_3_5), contentRect_3_7::I = oswindow.osGetWindowContentRect wMetrics_0 visScrolls_3_6 (commondef.sizeToRect whSize_2_12), contentSize_3_8::I = commondef.rectSize contentRect_3_7, _x_3_9::I = _Tuple3 (select domainRect_3_3::ostypes._OSRect 0) (select domainRect_3_3::ostypes._OSRect 2) (select contentSize_3_8::StdIOBasic._Size 0), minx_3_10 = select _x_3_9::_Tuple3 0, maxx_3_11 = select _x_3_9::_Tuple3 1, vieww_3_12 = select _x_3_9::_Tuple3 2, y_3_13 = <{StdInt.-_7}> maxx_3_11 vieww_3_12, _x_3_14::B = _Tuple3 (select domainRect_3_3::ostypes._OSRect 1) (select domainRect_3_3::ostypes._OSRect 3) (select contentSize_3_8::StdIOBasic._Size 1), miny_3_15::B = select _x_3_14::_Tuple3 0, maxy_3_16 = select _x_3_14::_Tuple3 1, viewh_3_17 = select _x_3_14::_Tuple3 2, y_3_18 = <{StdInt.-_7}> maxy_3_16 viewh_3_17, newOrigin_3_19 = StdIOBasic._Point2 (commondef.setBetween (<{StdInt.+_6}> (select oldOrigin_3_2::StdIOBasic._Point2 0) (select v_1::StdIOBasic._Vector2 0)) minx_3_10 (<{controlpos._c;51;16_55}> (<{StdInt.<_17}> minx_3_10 y_3_13) y_3_13 minx_3_10)) (commondef.setBetween (<{StdInt.+_6}> (select oldOrigin_3_2::StdIOBasic._Point2 1) (select v_1::StdIOBasic._Vector2 1)) miny_3_15 (<{controlpos._c;51;16_56}> (<{StdInt.<_17}> miny_3_15 y_3_18) y_3_18 miny_3_15)) in case (<{StdIOBasic.==_18}> newOrigin_3_19 oldOrigin_3_2) (True -> <{_Tuple2!3}> wH_3 tb_4) (False -> let _x_5_0 = controlpos.myisEmpty old_2_6 in case (select _x_5_0::_Tuple2 0) (True -> let _x_7_0 = <{controlpos._if;31;39_62}> (controlpos._f61_61 (StdBool.not (select (select _x_3_1::_Tuple5 4)::windowhandle._LookInfo 2)) newOrigin_3_19 oldOrigin_3_2 contentSize_3_8 _x_7_6) newFrame_7_1 oldOrigin_3_2 newOrigin_3_19 contentRect_3_7, newFrame_7_1 = commondef.posSizeToRectangle newOrigin_3_19 contentSize_3_8, hScroll_7_2 = <{controlpos._if;59;39_60}> hasHScroll_3_4 window_3_0, vScroll_7_3 = <{controlpos._if;60;39_59}> hasVScroll_3_5 window_3_0, hRect_7_4 = oswindow.osGetWindowHScrollRect wMetrics_0 visScrolls_3_6 (commondef.sizeToRect whSize_2_12), vRect_7_5 = oswindow.osGetWindowVScrollRect wMetrics_0 visScrolls_3_6 (commondef.sizeToRect whSize_2_12), _x_7_6 = oswindow.osWindowHasUpdateRect wPtr_1_1 tb_4, _x_7_7 = <{windowdraw.drawwindowlook`}> wMetrics_0 wPtr_1_1 (select _x_7_0::_Tuple2 1) (StdIOCommon._UpdateState (commondef.posSizeToRectangle oldOrigin_3_2 contentSize_3_8) newFrame_7_1 (select _x_7_0::_Tuple2 0)) (update wH_3::windowhandle._WindowHandle [5:windowhandle.WindowInfo (update window_3_0::windowhandle._WindowData [1:newOrigin_3_19]),6:select _x_5_0::_Tuple2 1]) (controlpos.setsliderthumb_5 hScroll_7_2 vScroll_7_3 hRect_7_4 vRect_7_5 (controlpos._f57_57 hasVScroll_3_5 newOrigin_3_19 oldOrigin_3_2) wMetrics_0 wPtr_1_1 False (_Tuple3 miny_3_15 (select newOrigin_3_19::StdIOBasic._Point2 1) maxy_3_16) viewh_3_17 (commondef.toTuple_72 whSize_2_12) (controlpos.setsliderthumb_5 hScroll_7_2 vScroll_7_3 hRect_7_4 vRect_7_5 (controlpos._f58_58 hasHScroll_3_4 newOrigin_3_19 oldOrigin_3_2) wMetrics_0 wPtr_1_1 True (_Tuple3 minx_3_10 (select newOrigin_3_19::StdIOBasic._Point2 0) maxx_3_11) vieww_3_12 (commondef.toTuple_72 whSize_2_12) (select _x_7_6::_Tuple2 1))) in <{_Tuple2!3}> (select _x_7_7::_Tuple2 0) (select _x_7_7::_Tuple2 1)) (False -> let _x_7_0::I = <{controlpos._if;50;39_69}> (controlpos._f68_68 (StdBool.not (select (select _x_3_1::_Tuple5 4)::windowhandle._LookInfo 2)) newOrigin_3_19 oldOrigin_3_2 contentSize_3_8 _x_7_33 _x_7_17) newFrame_7_1 oldOrigin_3_2 newOrigin_3_19 areaRect_7_37, newFrame_7_1 = commondef.posSizeToRectangle newOrigin_3_19 contentSize_3_8, window_7_2 = update window_3_0::windowhandle._WindowData [1:newOrigin_3_19], hMargins_7_3 = windowaccess.getWindowHMargins windowhandle.IsWindow wMetrics_0 whAtts_2_9, vMargins_7_4 = windowaccess.getWindowVMargins windowhandle.IsWindow wMetrics_0 whAtts_2_9, spaces_7_5 = windowaccess.getWindowItemSpaces windowhandle.IsWindow wMetrics_0 whAtts_2_9, reqSize_7_6 = StdIOBasic._Size (<{StdInt.-_7}> (<{StdInt.-_7}> (select contentSize_3_8::StdIOBasic._Size 0) (select hMargins_7_3::_Tuple2 0)) (select hMargins_7_3::_Tuple2 1)) (<{StdInt.-_7}> (<{StdInt.-_7}> (select contentSize_3_8::StdIOBasic._Size 1) (select vMargins_7_4::_Tuple2 0)) (select vMargins_7_4::_Tuple2 1)), _x_7_7 = oswindow.osMinWindowSize, defMinW_7_8 = select _x_7_7::_Tuple2 0, defMinH_7_9 = select _x_7_7::_Tuple2 1, minSize_7_10 = StdIOBasic._Size defMinW_7_8 defMinH_7_9, domain_7_11::I = commondef.rectToRectangle domainRect_3_3, old_7_12 = select _x_5_0::_Tuple2 1, hScroll_7_13 = <{controlpos._if;59;39_67}> hasHScroll_3_4 window_3_0, vScroll_7_14 = <{controlpos._if;60;39_66}> hasVScroll_3_5 window_3_0, hRect_7_15::I = oswindow.osGetWindowHScrollRect wMetrics_0 visScrolls_3_6 (commondef.sizeToRect whSize_2_12), vRect_7_16 = oswindow.osGetWindowVScrollRect wMetrics_0 visScrolls_3_6 (commondef.sizeToRect whSize_2_12), _x_7_17 = oswindow.osWindowHasUpdateRect wPtr_1_1 tb_4, tb_7_18::I = select _x_7_17::_Tuple2 1, tb_7_19::I = controlpos.setsliderthumb_5 hScroll_7_13 vScroll_7_14 hRect_7_15 vRect_7_16 (controlpos._f65_65 hasHScroll_3_4 newOrigin_3_19 oldOrigin_3_2) wMetrics_0 wPtr_1_1 True (_Tuple3 minx_3_10 (select newOrigin_3_19::StdIOBasic._Point2 0) maxx_3_11) vieww_3_12 (commondef.toTuple_72 whSize_2_12) tb_7_18, tb_7_20::I = controlpos.setsliderthumb_5 hScroll_7_13 vScroll_7_14 hRect_7_15 vRect_7_16 (controlpos._f64_64 hasVScroll_3_5 newOrigin_3_19 oldOrigin_3_2) wMetrics_0 wPtr_1_1 False (_Tuple3 miny_3_15 (select newOrigin_3_19::StdIOBasic._Point2 1) maxy_3_16) viewh_3_17 (commondef.toTuple_72 whSize_2_12) tb_7_19, _x_7_21 = <{wstate.getWElementHandles`}> wPtr_1_1 old_7_12 tb_7_20, old_7_22 = select _x_7_21::_Tuple3 1, tb_7_23 = select _x_7_21::_Tuple3 2, _x_7_24 = controllayout.layoutControls wMetrics_0 hMargins_7_3 vMargins_7_4 spaces_7_5 reqSize_7_6 minSize_7_10 (_predefined._Cons (_Tuple2 domain_7_11 newOrigin_3_19) _predefined._Nil) old_7_22 tb_7_23, new_7_25 = select _x_7_24::_Tuple3 1, wH_7_26 = update wH_3::windowhandle._WindowHandle [5:windowhandle.WindowInfo window_7_2,6:new_7_25], tb_7_27 = select _x_7_24::_Tuple3 2, _x_7_28 = windowclipstate.forceValidWindowClipState wMetrics_0 True wPtr_1_1 wH_7_26 tb_7_27, wH_7_29::I = select _x_7_28::_Tuple2 0, _x_7_30::I = controlpos.anon_3 wH_7_29, wH_7_31 = select _x_7_30::_Tuple2 1, whWindow_7_32 = select _x_7_30::_Tuple2 0, _x_7_33 = <{controlpos._c;44;39_63}> whWindow_7_32 tb_7_38, _x_7_34 = controlrelayout.relayoutControls wMetrics_0 wPtr_1_1 (select wH_7_31::windowhandle._WindowHandle 10) False whSelect_2_8 whShow_2_7 (_Tuple4 contentRect_3_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select _x_7_21::_Tuple3 0)) (_Tuple4 contentRect_3_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select wH_7_31::windowhandle._WindowHandle 6)) (select _x_7_33::_Tuple3 2), _x_7_35 = windowupdate.updatewindowbackgrounds wMetrics_0 (select _x_7_34::_Tuple3 0) wids_2 (update wH_7_31::windowhandle._WindowHandle [6:select _x_7_34::_Tuple3 1]) (select _x_7_34::_Tuple3 2), _x_7_36 = <{windowdraw.drawwindowlook`}> wMetrics_0 wPtr_1_1 (select _x_7_0::_Tuple2 1) (StdIOCommon._UpdateState (commondef.posSizeToRectangle oldOrigin_3_2 contentSize_3_8) newFrame_7_1 (select _x_7_0::_Tuple2 0)) (select _x_7_35::_Tuple2 0) (select _x_7_35::_Tuple2 1), areaRect_7_37 = select _x_7_33::_Tuple3 1, tb_7_38 = select _x_7_28::_Tuple2 1 in <{_Tuple2!3}> (select _x_7_36::_Tuple2 0) (select _x_7_36::_Tuple2 1)) ) ) ) 
<{controlpos._if;50;39_69}> !_x_0::B newFrame_1 oldOrigin_2 newOrigin_3 areaRect_4 = case _x_0 (True -> _Tuple2 (_predefined._Cons newFrame_1 _predefined._Nil) (controlpos.anon_9 _predefined._Nil)) (_ -> controlpos.calcScrollUpdateArea_6 oldOrigin_2 newOrigin_3 areaRect_4)
controlpos._f68_68::B !_x_0::B newOrigin_1 oldOrigin_2 contentSize_3 _x_4 _x_5 = case _x_0 (True -> True) (_ -> case (case (StdBool.not (<{StdInt.<_17}> (StdInt.abs_13 (<{StdInt.-_7}> (select newOrigin_1::StdIOBasic._Point2 0) (select oldOrigin_2::StdIOBasic._Point2 0))) (select contentSize_3::StdIOBasic._Size 0))) (True -> True) (False -> StdBool.not (<{StdInt.<_17}> (StdInt.abs_13 (<{StdInt.-_7}> (select newOrigin_1::StdIOBasic._Point2 1) (select oldOrigin_2::StdIOBasic._Point2 1))) (select contentSize_3::StdIOBasic._Size 1))) ) (True -> True) (False -> case (StdBool.not (select _x_4::_Tuple3 0)) (True -> True) (False -> select _x_5::_Tuple2 0) ) )
<{controlpos._if;59;39_67}> !hasHScroll_0::B window_1 = case hasHScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 2))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
<{controlpos._if;60;39_66}> !hasVScroll_0::B window_1 = case hasVScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 3))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
controlpos._f65_65::B !hasHScroll_0::B newOrigin_1 oldOrigin_2 = case hasHScroll_0 (True -> StdBool.not (<{StdInt.==_16}> (select newOrigin_1::StdIOBasic._Point2 0) (select oldOrigin_2::StdIOBasic._Point2 0))) (_ -> False)
controlpos._f64_64::B !hasVScroll_0::B newOrigin_1 oldOrigin_2 = case hasVScroll_0 (True -> StdBool.not (<{StdInt.==_16}> (select newOrigin_1::StdIOBasic._Point2 1) (select oldOrigin_2::StdIOBasic._Point2 1))) (_ -> False)
<{controlpos._c;44;39_63}> !whWindow_0 tb_1::I = case whWindow_0 (windowhandle.WindowInfo _x_1_0 -> case _x_1_0 (windowhandle._WindowData windowDomain_2_0 windowOrigin_2_1 windowHScroll_2_2 windowVScroll_2_3 windowLook_2_4 _x_2_5 -> case _x_2_5 (windowhandle._ClipState clipRgn_3_0 clipOk_3_1 -> osrgn.osgetrgnbox clipRgn_3_0 tb_1) ) ) (_ -> controlpos.controlposFatalError "movewindowviewframe" "unexpected whWindowInfo field")
<{controlpos._if;31;39_62}> !_x_0::B newFrame_1 oldOrigin_2 newOrigin_3 contentRect_4 = case _x_0 (True -> _Tuple2 (_predefined._Cons newFrame_1 _predefined._Nil) (controlpos.anon_8 _predefined._Nil)) (_ -> controlpos.calcScrollUpdateArea_6 oldOrigin_2 newOrigin_3 contentRect_4)
controlpos._f61_61::B !_x_0::B newOrigin_1 oldOrigin_2 contentSize_3 _x_4 = case _x_0 (True -> True) (_ -> case (case (StdBool.not (<{StdInt.<_17}> (StdInt.abs_13 (<{StdInt.-_7}> (select newOrigin_1::StdIOBasic._Point2 0) (select oldOrigin_2::StdIOBasic._Point2 0))) (select contentSize_3::StdIOBasic._Size 0))) (True -> True) (False -> StdBool.not (<{StdInt.<_17}> (StdInt.abs_13 (<{StdInt.-_7}> (select newOrigin_1::StdIOBasic._Point2 1) (select oldOrigin_2::StdIOBasic._Point2 1))) (select contentSize_3::StdIOBasic._Size 1))) ) (True -> True) (False -> select _x_4::_Tuple2 0) )
<{controlpos._if;59;39_60}> !hasHScroll_0::B window_1 = case hasHScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 2))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
<{controlpos._if;60;39_59}> !hasVScroll_0::B window_1 = case hasVScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 3))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
controlpos._f58_58::B !hasHScroll_0::B newOrigin_1 oldOrigin_2 = case hasHScroll_0 (True -> StdBool.not (<{StdInt.==_16}> (select newOrigin_1::StdIOBasic._Point2 0) (select oldOrigin_2::StdIOBasic._Point2 0))) (_ -> False)
controlpos._f57_57::B !hasVScroll_0::B newOrigin_1 oldOrigin_2 = case hasVScroll_0 (True -> StdBool.not (<{StdInt.==_16}> (select newOrigin_1::StdIOBasic._Point2 1) (select oldOrigin_2::StdIOBasic._Point2 1))) (_ -> False)
<{controlpos._c;51;16_56}>::I !_x_0::B y_1::I miny_2::I = case _x_0 (True -> y_1) (_ -> miny_2)
<{controlpos._c;51;16_55}>::I !_x_0::B y_1::I minx_2::I = case _x_0 (True -> y_1) (_ -> minx_2)


|| Converted Records
:: <{controlpos.gEq_s;}> = {!controlpos.gEq_s}

:: <{controlpos.gEq_ss;}> = {!controlpos.gEq_ss}

:: <{controlpos.gEq_sss;}> = {!controlpos.gEq_sss}

:: <{controlpos.gEq_ssss;}> = {!controlpos.gEq_ssss}

:: <{controlpos.gEq_sssss;}> = {!controlpos.gEq_sssss}

:: <{controlpos.gEq_ssssss;}> = {!controlpos.gEq_ssssss}

:: <{controlpos.gEq_sssssss;}> = {!controlpos.gEq_sssssss}

:: <{controlpos.gEq_ssssssss;}> = {!controlpos.gEq_ssssssss}

:: <{controlpos.gEq_sssssssss;}> = {!controlpos.gEq_sssssssss}

:: <{controlpos.bimap_s;}> = {controlpos.bimap_s}

:: <{controlpos.bimap_ss;}> = {controlpos.bimap_ss}

:: <{controlpos.bimap_sss;}> = {controlpos.bimap_sss}

