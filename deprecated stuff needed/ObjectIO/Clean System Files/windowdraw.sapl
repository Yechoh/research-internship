|| ?module? windowdraw


windowdraw.drawwindowlook !wMetrics_0 !wPtr_1::I !drawFirst_2 !updState_3 !wH_4 !tb_5::I = case wH_4 (windowhandle._WindowHandle whMode_1_0 whKind_1_1 whTitle_1_2 wh_1_3 whKeyFocus_1_4 whWindow_1_5 wh_1_6 whShow_1_7 whSelect_1_8 whAtts_1_9 whDefault_1_10 whCancel_1_11 whSize_1_12 whClosing_1_13 -> let !_x_2_0 = oswindow.osGrabWindowPictContext wPtr_1 tb_5, !picture_2_1 = ospicture.packPicture origin_2_13 (ospicture.copyPen (select look_2_11::windowhandle._LookInfo 1)) True (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1), !picture_2_2 = ospicture.pictsetcliprgn clipRgn_2_12 picture_2_1, !picture_2_3 = drawFirst_2 picture_2_2, !picture_2_4 = StdPicture.appClipPicture (StdPicture.toRegion_51 (<{StdPicture.toRegion;}> StdPicture.toRegion_49) (<{windowdraw._if;22;57_48}> (select look_2_11::windowhandle._LookInfo 2) updState_3 wMetrics_0 domainRect_2_14 whSize_1_12 info_2_10 origin_2_13)) (select look_2_11::windowhandle._LookInfo 0 (<{windowdraw._if;30;31_49}> whSelect_1_8) updState_3) picture_2_3, !_x_2_5 = ospicture.unpackPicture picture_2_4, !tb_2_6::I = oswindow.osReleaseWindowPictContext wPtr_1 (select _x_2_5::_Tuple5 3) (select _x_2_5::_Tuple5 4), !tb_2_7::I = oswindow.osValidateWindowRgn wPtr_1 clipRgn_2_12 tb_2_6, !look_2_8 = update look_2_11::windowhandle._LookInfo [1:select _x_2_5::_Tuple5 1], !info_2_9 = update info_2_10::windowhandle._WindowData [4:look_2_8], info_2_10 = windowaccess.getWindowInfoWindowData whWindow_1_5, look_2_11 = select info_2_10::windowhandle._WindowData 4, clipRgn_2_12::I = select (select info_2_10::windowhandle._WindowData 5)::windowhandle._ClipState 0, origin_2_13 = select info_2_10::windowhandle._WindowData 1, domainRect_2_14 = select info_2_10::windowhandle._WindowData 0 in <{_Tuple2!3}> (update wH_4::windowhandle._WindowHandle [5:windowhandle.WindowInfo info_2_9]) tb_2_7) 
<{windowdraw._if;30;31_49}> !whSelect_0::B = case whSelect_0 (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
<{windowdraw._if;22;57_48}> !_x_0::B updState_1 wMetrics_2 domainRect_3 whSize_4 info_5 origin_6 = case _x_0 (True -> select updState_1::StdIOCommon._UpdateState 2) (_ -> let _x_1_0 = commondef.rectSize (oswindow.osGetWindowContentRect wMetrics_2 (oswindow.osScrollbarsAreVisible wMetrics_2 domainRect_3 (commondef.toTuple_72 whSize_4) (_Tuple2 (Data.Maybe.isJust (select info_5::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_5::windowhandle._WindowData 3)))) (commondef.sizeToRect whSize_4)) in _predefined._Cons (StdIOBasic._Rectangle origin_6 (StdIOBasic._Point2 (<{StdInt.+_6}> (select origin_6::StdIOBasic._Point2 0) (select _x_1_0::StdIOBasic._Size 0)) (<{StdInt.+_6}> (select origin_6::StdIOBasic._Point2 1) (select _x_1_0::StdIOBasic._Size 1)))) _predefined._Nil)
<{windowdraw.drawwindow`look}> !wMetrics_0 !wPtr_1::I !drawFirst_2 !updState_3 !wH_4 !tb_5::I = case wH_4 (<{wstate._WindowHandle`}> whMode`_1_0 whKind`_1_1 whTitle`_1_2 wh_1_3 whKeyFocus`_1_4 whWindow_1_5 wh_1_6 whShow`_1_7 whSelect`_1_8 whAtts`_1_9 whDefault_1_10 whCancel_1_11 whSize`_1_12 whClosing`_1_13 -> let !_x_2_0 = oswindow.osGrabWindowPictContext wPtr_1 tb_5, !picture_2_1 = ospicture.packPicture origin_2_13 (ospicture.copyPen (select look_2_11::windowhandle._LookInfo 1)) True (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1), !picture_2_2 = ospicture.pictsetcliprgn clipRgn_2_12 picture_2_1, !picture_2_3 = drawFirst_2 picture_2_2, !picture_2_4 = StdPicture.appClipPicture (StdPicture.toRegion_51 (<{StdPicture.toRegion;}> StdPicture.toRegion_49) (<{windowdraw._if;49;57_50}> (select look_2_11::windowhandle._LookInfo 2) updState_3 wMetrics_0 domainRect_2_14 <{whSize`_1_12}> info_2_10 origin_2_13)) (select look_2_11::windowhandle._LookInfo 0 (<{windowdraw._if;57;31_51}> <{whSelect`_1_8}>) updState_3) picture_2_3, !_x_2_5 = ospicture.unpackPicture picture_2_4, !tb_2_6::I = oswindow.osReleaseWindowPictContext wPtr_1 (select _x_2_5::_Tuple5 3) (select _x_2_5::_Tuple5 4), !tb_2_7::I = oswindow.osValidateWindowRgn wPtr_1 clipRgn_2_12 tb_2_6, !look_2_8 = update look_2_11::windowhandle._LookInfo [1:select _x_2_5::_Tuple5 1], !info_2_9 = update info_2_10::windowhandle._WindowData [4:look_2_8], info_2_10 = windowaccess.getWindowInfoWindowData whWindow_1_5, look_2_11 = select info_2_10::windowhandle._WindowData 4, clipRgn_2_12::I = select (select info_2_10::windowhandle._WindowData 5)::windowhandle._ClipState 0, origin_2_13 = select info_2_10::windowhandle._WindowData 1, domainRect_2_14 = select info_2_10::windowhandle._WindowData 0 in <{_Tuple2!3}> (update wH_4::<{wstate._WindowHandle`}> [5:windowhandle.WindowInfo info_2_9]) tb_2_7) 
<{windowdraw._if;57;31_51}> !<{whSelect`_0}>::B = case <{whSelect`_0}> (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
<{windowdraw._if;49;57_50}> !_x_0::B updState_1 wMetrics_2 domainRect_3 <{whSize`_4}> info_5 origin_6 = case _x_0 (True -> select updState_1::StdIOCommon._UpdateState 2) (_ -> let _x_1_0 = commondef.rectSize (oswindow.osGetWindowContentRect wMetrics_2 (oswindow.osScrollbarsAreVisible wMetrics_2 domainRect_3 (commondef.toTuple_72 <{whSize`_4}>) (_Tuple2 (Data.Maybe.isJust (select info_5::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_5::windowhandle._WindowData 3)))) (commondef.sizeToRect <{whSize`_4}>)) in _predefined._Cons (StdIOBasic._Rectangle origin_6 (StdIOBasic._Point2 (<{StdInt.+_6}> (select origin_6::StdIOBasic._Point2 0) (select _x_1_0::StdIOBasic._Size 0)) (<{StdInt.+_6}> (select origin_6::StdIOBasic._Point2 1) (select _x_1_0::StdIOBasic._Size 1)))) _predefined._Nil)
<{windowdraw.c;77;72_4}> !g_l_0 = <{windowdraw.g_c1;77;76_52}> g_l_0
<{windowdraw.g_c1;77;76_52}> !g_l_0 = case g_l_0 (_predefined._Cons r_1_0 g_t_1_1 -> case (StdBool.not (commondef.isEmptyRect r_1_0)) (True -> _predefined._Cons (commondef.rectToRectangle r_1_0) (<{windowdraw.c;77;72_4}> g_t_1_1)) (False -> <{windowdraw.c;77;72_4}> g_t_1_1) ) (_ -> _predefined._Nil)
<{windowdraw.drawwindowlook`}> !wMetrics_0 !wPtr_1::I !drawFirst_2 !updState_3 !wH_4 !tb_5::I = case wH_4 (windowhandle._WindowHandle whMode_1_0 whKind_1_1 whTitle_1_2 wh_1_3 whKeyFocus_1_4 whWindow_1_5 wh_1_6 whShow_1_7 whSelect_1_8 whAtts_1_9 whDefault_1_10 whCancel_1_11 whSize_1_12 whClosing_1_13 -> let !_x_2_0 = oswindow.osGrabWindowPictContext wPtr_1 tb_5, !picture_2_1 = ospicture.packPicture origin_2_14 (ospicture.copyPen (select look_2_12::windowhandle._LookInfo 1)) True (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1), !picture_2_2 = ospicture.pictsetcliprgn clipRgn_2_13 picture_2_1, !_x_2_3 = drawFirst_2 picture_2_2, !updState_2_4 = update updState_3::StdIOCommon._UpdateState [2:<{StdList.++}> (<{windowdraw.c;77;72_4}> (select _x_2_3::_Tuple2 0)) (select updState_3::StdIOCommon._UpdateState 2)], !picture_2_5 = StdPicture.appClipPicture (StdPicture.toRegion_51 (<{StdPicture.toRegion;}> StdPicture.toRegion_49) (<{windowdraw._if;78;57_53}> (select look_2_12::windowhandle._LookInfo 2) updState_2_4 wMetrics_0 domainRect_2_15 whSize_1_12 info_2_11 origin_2_14)) (select look_2_12::windowhandle._LookInfo 0 (<{windowdraw._if;87;31_54}> whSelect_1_8) updState_2_4) (select _x_2_3::_Tuple2 1), !_x_2_6 = ospicture.unpackPicture picture_2_5, !tb_2_7::I = oswindow.osReleaseWindowPictContext wPtr_1 (select _x_2_6::_Tuple5 3) (select _x_2_6::_Tuple5 4), !tb_2_8::I = oswindow.osValidateWindowRgn wPtr_1 clipRgn_2_13 tb_2_7, !look_2_9 = update look_2_12::windowhandle._LookInfo [1:select _x_2_6::_Tuple5 1], !info_2_10 = update info_2_11::windowhandle._WindowData [4:look_2_9], info_2_11 = windowaccess.getWindowInfoWindowData whWindow_1_5, look_2_12 = select info_2_11::windowhandle._WindowData 4, clipRgn_2_13::I = select (select info_2_11::windowhandle._WindowData 5)::windowhandle._ClipState 0, origin_2_14 = select info_2_11::windowhandle._WindowData 1, domainRect_2_15 = select info_2_11::windowhandle._WindowData 0 in <{_Tuple2!3}> (update wH_4::windowhandle._WindowHandle [5:windowhandle.WindowInfo info_2_10]) tb_2_8) 
<{windowdraw._if;87;31_54}> !whSelect_0::B = case whSelect_0 (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
<{windowdraw._if;78;57_53}> !_x_0::B updState_1 wMetrics_2 domainRect_3 whSize_4 info_5 origin_6 = case _x_0 (True -> select updState_1::StdIOCommon._UpdateState 2) (_ -> let _x_1_0 = commondef.rectSize (oswindow.osGetWindowContentRect wMetrics_2 (oswindow.osScrollbarsAreVisible wMetrics_2 domainRect_3 (commondef.toTuple_72 whSize_4) (_Tuple2 (Data.Maybe.isJust (select info_5::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_5::windowhandle._WindowData 3)))) (commondef.sizeToRect whSize_4)) in _predefined._Cons (StdIOBasic._Rectangle origin_6 (StdIOBasic._Point2 (<{StdInt.+_6}> (select origin_6::StdIOBasic._Point2 0) (select _x_1_0::StdIOBasic._Size 0)) (<{StdInt.+_6}> (select origin_6::StdIOBasic._Point2 1) (select _x_1_0::StdIOBasic._Size 1)))) _predefined._Nil)
windowdraw.drawinwindow !wMetrics_0 !wPtr_1::I !drawfun_2 !wH_3 !tb_4::I = case wH_3 (windowhandle._WindowHandle whMode_1_0 whKind_1_1 whTitle_1_2 wh_1_3 whKeyFocus_1_4 whWindow_1_5 wh_1_6 whShow_1_7 whSelect_1_8 whAtts_1_9 whDefault_1_10 whCancel_1_11 whSize_1_12 whClosing_1_13 -> let !_x_2_0 = osrgn.osnewrectrgn (oswindow.osGetWindowContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select info_2_10::windowhandle._WindowData 0) (commondef.toTuple_72 whSize_1_12) (_Tuple2 (Data.Maybe.isJust (select info_2_10::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_2_10::windowhandle._WindowData 3)))) (commondef.sizeToRect whSize_1_12)) tb_4, !_x_2_1 = osrgn.ossectrgn domainRgn_2_12 (select (select info_2_10::windowhandle._WindowData 5)::windowhandle._ClipState 0) (select _x_2_0::_Tuple2 1), !_x_2_2 = oswindow.osGrabWindowPictContext wPtr_1 (select _x_2_1::_Tuple2 1), !picture_2_3 = ospicture.packPicture (select info_2_10::windowhandle._WindowData 1) (ospicture.copyPen (select windowLook_2_11::windowhandle._LookInfo 1)) True (select _x_2_2::_Tuple2 0) (select _x_2_2::_Tuple2 1), !picture_2_4 = ospicture.pictsetcliprgn clip_2_13 picture_2_3, !_x_2_5 = drawfun_2 picture_2_4, !_x_2_6 = ospicture.unpackPicture (select _x_2_5::_Tuple2 1), !tb_2_7::I = oswindow.osReleaseWindowPictContext wPtr_1 (select _x_2_6::_Tuple5 3) (select _x_2_6::_Tuple5 4), !tb_2_8::I = commondef.stateMap2 osrgn.osdisposergn (_predefined._Cons domainRgn_2_12 (_predefined._Cons clip_2_13 _predefined._Nil)) tb_2_7, !info_2_9 = update info_2_10::windowhandle._WindowData [4:update windowLook_2_11::windowhandle._LookInfo [1:select _x_2_6::_Tuple5 1]], info_2_10::I = windowaccess.getWindowInfoWindowData whWindow_1_5, windowLook_2_11::I = select info_2_10::windowhandle._WindowData 4, domainRgn_2_12 = select _x_2_0::_Tuple2 0, clip_2_13 = select _x_2_1::_Tuple2 0 in <{_Tuple3!6}> (select _x_2_5::_Tuple2 0) (update wH_3::windowhandle._WindowHandle [5:windowhandle.WindowInfo info_2_9]) tb_2_8) 


|| Converted Records
:: <{windowdraw.gEq_s;}> = {!windowdraw.gEq_s}

:: <{windowdraw.gEq_ss;}> = {!windowdraw.gEq_ss}

:: <{windowdraw.gEq_sss;}> = {!windowdraw.gEq_sss}

:: <{windowdraw.gEq_ssss;}> = {!windowdraw.gEq_ssss}

:: <{windowdraw.gEq_sssss;}> = {!windowdraw.gEq_sssss}

:: <{windowdraw.gEq_ssssss;}> = {!windowdraw.gEq_ssssss}

:: <{windowdraw.gEq_sssssss;}> = {!windowdraw.gEq_sssssss}

:: <{windowdraw.gEq_ssssssss;}> = {!windowdraw.gEq_ssssssss}

:: <{windowdraw.gEq_sssssssss;}> = {!windowdraw.gEq_sssssssss}

:: <{windowdraw.bimap_s;}> = {windowdraw.bimap_s}

:: <{windowdraw.bimap_ss;}> = {windowdraw.bimap_ss}

:: <{windowdraw.bimap_sss;}> = {windowdraw.bimap_sss}

