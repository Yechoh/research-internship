|| ?module? mstate


mstate.getMenuAttribute_12 !att_0 = case att_0 (StdMenuDef.MenuId id_1_0 -> <{_Tuple3!7}> True (<{mstate.MenuId`}> id_1_0) att_0) (StdMenuDef.MenuSelectState select_1_0 -> <{_Tuple3!7}> True (<{mstate.MenuSelectState`}> select_1_0) att_0) (StdMenuDef.MenuShortKey keycode_1_0 -> <{_Tuple3!7}> True (<{mstate.MenuShortKey`}> keycode_1_0) att_0) (StdMenuDef.MenuMarkState mark_1_0 -> <{_Tuple3!7}> True (<{mstate.MenuMarkState`}> mark_1_0) att_0) (_ -> <{_Tuple3!7}> False (<{mstate.MenuShortKey`}> '0') att_0)
mstate.getMenuAttributes_14 !_x_0 = case _x_0 (_predefined._Cons att_1_0 atts_1_1 -> let !_x_2_0 = mstate.getMenuAttribute_12 att_1_0, !_x_2_1 = mstate.getMenuAttributes_14 atts_1_1 in case (select _x_2_0::_Tuple3 0) (True -> <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple3 1) (select _x_2_1::_Tuple2 0)) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_2_1::_Tuple2 1))) (False -> <{_Tuple2!3}> (select _x_2_1::_Tuple2 0) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_2_1::_Tuple2 1))) ) (_ -> <{_Tuple2!3}> _predefined._Nil _predefined._Nil)
mstate.getMenuElementHandle_13 !_x_0 = case _x_0 (menuhandle.MenuItemHandle itemH_1_0 -> case itemH_1_0 (menuhandle._MenuItemHandle m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 atts_2_5 mOSMenu_2_6 -> let _x_3_0 = mstate.getMenuAttributes_14 atts_2_5 in <{_Tuple2!3}> (<{mstate.MenuItemHandle`}> (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 (select _x_3_0::_Tuple2 0) mOSMenu_2_6)) (menuhandle.MenuItemHandle (update itemH_1_0::menuhandle._MenuItemHandle [5:select _x_3_0::_Tuple2 1]))) ) (menuhandle.MenuReceiverHandle recH_1_0 -> case recH_1_0 (menuhandle._MenuReceiverHandle mReceiverHandle_2_0 mReceiverAtts_2_1 -> case mReceiverHandle_2_0 (receiverhandle._ReceiverHandle r_3_0 rASMQ_3_1 rSelect_3_2 rOneWay_3_3 rFun_3_4 r_3_5 rConnected_3_6 -> <{_Tuple2!3}> (<{mstate.MenuReceiverHandle`}> (<{mstate._MenuReceiverHandle`}> r_3_0 (<{StdIOCommon.==_13}> rSelect_3_2 StdIOCommon.Able))) (menuhandle.MenuReceiverHandle recH_1_0)) ) ) (menuhandle.SubMenuHandle subH_1_0 -> case subH_1_0 (menuhandle._SubMenuHandle mSubHandle_2_0 mSubMenu_2_1 mSubOSMenuNr_2_2 items_2_3 mSubTitle_2_4 mSubSelect_2_5 atts_2_6 -> let _x_3_0 = mstate.getMenuElementHandles_15 items_2_3, _x_3_1 = mstate.getMenuAttributes_14 atts_2_6 in <{_Tuple2!3}> (<{mstate.SubMenuHandle`}> (<{mstate._SubMenuHandle`}> mSubHandle_2_0 mSubMenu_2_1 mSubOSMenuNr_2_2 (select _x_3_0::_Tuple2 0) mSubTitle_2_4 mSubSelect_2_5 (select _x_3_1::_Tuple2 0))) (menuhandle.SubMenuHandle (update subH_1_0::menuhandle._SubMenuHandle [3:select _x_3_0::_Tuple2 1,6:select _x_3_1::_Tuple2 1]))) ) (menuhandle.RadioMenuHandle radioH_1_0 -> case radioH_1_0 (menuhandle._RadioMenuHandle mRadio_2_0 mRadio_2_1 items_2_2 mRadioSelect_2_3 atts_2_4 -> let _x_3_0 = mstate.getMenuElementHandles_15 items_2_2, _x_3_1 = mstate.getMenuAttributes_14 atts_2_4 in <{_Tuple2!3}> (<{mstate.RadioMenuHandle`}> (<{mstate._RadioMenuHandle`}> mRadio_2_0 mRadio_2_1 (select _x_3_0::_Tuple2 0) mRadioSelect_2_3 (select _x_3_1::_Tuple2 0))) (menuhandle.RadioMenuHandle (update radioH_1_0::menuhandle._RadioMenuHandle [2:select _x_3_0::_Tuple2 1,4:select _x_3_1::_Tuple2 1]))) ) (menuhandle.MenuSeparatorHandle sepH_1_0 -> case sepH_1_0 (menuhandle._MenuSeparatorHandle mSep_2_0 mOSMenuSeparator_2_1 -> <{_Tuple2!3}> (<{mstate.MenuSeparatorHandle`}> (<{mstate._MenuSeparatorHandle`}> mSep_2_0)) (menuhandle.MenuSeparatorHandle sepH_1_0)) ) (menuhandle.MenuListLSHandle items_1_0 -> let _x_2_0 = mstate.getMenuElementHandles_15 items_1_0 in <{_Tuple2!3}> (<{mstate.MenuRecursiveHandle`}> (select _x_2_0::_Tuple2 0) mstate.IsMenuListLSHandle) (menuhandle.MenuListLSHandle (select _x_2_0::_Tuple2 1))) (menuhandle.MenuExtendLSHandle exH_1_0 -> case exH_1_0 (menuhandle._MenuExtendLSHandle mExtendLS_2_0 items_2_1 -> let _x_3_0 = mstate.getMenuElementHandles_15 items_2_1 in <{_Tuple2!3}> (<{mstate.MenuRecursiveHandle`}> (select _x_3_0::_Tuple2 0) mstate.IsMenuExtendLSHandle) (menuhandle.MenuExtendLSHandle (update exH_1_0::menuhandle._MenuExtendLSHandle [1:select _x_3_0::_Tuple2 1]))) ) (menuhandle.MenuChangeLSHandle chH_1_0 -> case chH_1_0 (menuhandle._MenuChangeLSHandle mChangeLS_2_0 items_2_1 -> let _x_3_0 = mstate.getMenuElementHandles_15 items_2_1 in <{_Tuple2!3}> (<{mstate.MenuRecursiveHandle`}> (select _x_3_0::_Tuple2 0) mstate.IsMenuChangeLSHandle) (menuhandle.MenuChangeLSHandle (update chH_1_0::menuhandle._MenuChangeLSHandle [1:select _x_3_0::_Tuple2 1]))) ) 
mstate.getMenuElementHandles_15 !_x_0 = case _x_0 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let !_x_2_0 = mstate.getMenuElementHandle_13 itemH_1_0, !_x_2_1 = mstate.getMenuElementHandles_15 itemHs_1_1 in <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_2_1::_Tuple2 1))) (_ -> <{_Tuple2!3}> _predefined._Nil _predefined._Nil)
<{mstate.getMenuHandle`}> !mH_0 = case mH_0 (menuhandle._MenuHandle mHandle_1_0 mMenu_1_1 mOSMenuNr_1_2 mTitle_1_3 mSelect_1_4 items_1_5 -> let _x_2_0 = mstate.getMenuElementHandles_15 items_1_5 in <{_Tuple2!3}> (<{mstate._MenuHandle`}> mHandle_1_0 mMenu_1_1 mOSMenuNr_1_2 mTitle_1_3 mSelect_1_4 (select _x_2_0::_Tuple2 0)) (update mH_0::menuhandle._MenuHandle [5:select _x_2_0::_Tuple2 1])) 
mstate.mstateFatalError !rule_0 !error_1 = commondef.fatalError rule_0 "mstate" error_1
mstate.isConstantAttribute_18::B !_x_0 = case _x_0 (<{mstate.MenuId`}> _x_1_0 -> True) (_ -> False)
mstate.match_17::B !_x_0 _x_1 = case _x_0 (<{mstate.MenuSelectState`}> _x_1_0 -> case _x_1 (StdMenuDef.MenuSelectState _x_2_0 -> True) ) (<{mstate.MenuShortKey`}> _x_1_0 -> case _x_1 (StdMenuDef.MenuShortKey _x_2_0 -> True) ) (<{mstate.MenuMarkState`}> _x_1_0 -> case _x_1 (StdMenuDef.MenuMarkState _x_2_0 -> True) ) (_ -> False)
mstate.setAttribute_19 !<{att`_0}> !_x_1 = case _x_1 (_predefined._Cons att_1_0 atts_1_1 -> case (mstate.match_17 <{att`_0}> att_1_0) (True -> _predefined._Cons (<{mstate._c;241;23_65}> <{att`_0}>) atts_1_1) (False -> let !atts_3_0 = mstate.setAttribute_19 <{att`_0}> atts_1_1 in _predefined._Cons att_1_0 atts_3_0) ) (_ -> mstate.mstateFatalError "setMenuHandle" "non-matching MenuAttribute encountered")
<{mstate._c;241;23_65}> !<{att`_0}> = case <{att`_0}> (<{mstate.MenuSelectState`}> select_1_0 -> StdMenuDef.MenuSelectState select_1_0) (<{mstate.MenuShortKey`}> keycode_1_0 -> StdMenuDef.MenuShortKey keycode_1_0) (<{mstate.MenuMarkState`}> mark_1_0 -> StdMenuDef.MenuMarkState mark_1_0) (_ -> mstate.mstateFatalError "setMenuHandle" "illegal MenuAttribute` encountered")
mstate.setMenuAttributes_21 !_x_0 !atts_1 = case _x_0 (_predefined._Cons att`_1_0 atts`_1_1 -> case (mstate.isConstantAttribute_18 <{att`_1_0}>) (True -> mstate.setMenuAttributes_21 <{atts`_1_1}> atts_1) (False -> mstate.setMenuAttributes_21 <{atts`_1_1}> (mstate.setAttribute_19 <{att`_1_0}> atts_1)) ) (_ -> atts_1)
mstate.setElementHandle_16 !_x_0 !_x_1 = case _x_0 (<{mstate.MenuItemHandle`}> itemH`_1_0 -> case <{itemH`_1_0}> (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> case _x_1 (menuhandle.MenuItemHandle itemH_3_0 -> case itemH_3_0 (menuhandle._MenuItemHandle m_4_0 m_4_1 m_4_2 m_4_3 m_4_4 m_4_5 mOSMenu_4_6 -> menuhandle.MenuItemHandle (update itemH_3_0::menuhandle._MenuItemHandle [2:m_2_2,3:m_2_3,4:m_2_4,5:mstate.setMenuAttributes_21 m_2_5 m_4_5])) ) ) ) (<{mstate.MenuReceiverHandle`}> recH`_1_0 -> case <{recH`_1_0}> (<{mstate._MenuReceiverHandle`}> mReceiver_2_0 mReceiverSelect`_2_1 -> case _x_1 (menuhandle.MenuReceiverHandle recH_3_0 -> case recH_3_0 (menuhandle._MenuReceiverHandle rH_4_0 mReceiverAtts_4_1 -> menuhandle.MenuReceiverHandle (update recH_3_0::menuhandle._MenuReceiverHandle [0:update rH_4_0::receiverhandle._ReceiverHandle [2:<{mstate._if;192;72_66}> <{mReceiverSelect`_2_1}>]])) ) ) ) (<{mstate.SubMenuHandle`}> subH`_1_0 -> case <{subH`_1_0}> (<{mstate._SubMenuHandle`}> mSubHandle`_2_0 mSubMenu_2_1 mSubOSMenuNr`_2_2 mSub_2_3 mSubTitle`_2_4 mSubSelect`_2_5 mSubAtts`_2_6 -> case _x_1 (menuhandle.SubMenuHandle subH_3_0 -> case subH_3_0 (menuhandle._SubMenuHandle mSubHandle_4_0 mSubMenu_4_1 mSubOSMenuNr_4_2 mSub_4_3 mSubTitle_4_4 mSubSelect_4_5 mSubAtts_4_6 -> menuhandle.SubMenuHandle (update subH_3_0::menuhandle._SubMenuHandle [3:mstate.setMenuElementHandles_20 mSub_2_3 mSub_4_3,4:<{mSubTitle`_2_4}>,5:<{mSubSelect`_2_5}>,6:mstate.setMenuAttributes_21 <{mSubAtts`_2_6}> mSubAtts_4_6])) ) ) ) (<{mstate.RadioMenuHandle`}> radioH`_1_0 -> case <{radioH`_1_0}> (<{mstate._RadioMenuHandle`}> mRadio_2_0 mRadio_2_1 mRadio_2_2 mRadioSelect`_2_3 mRadioAtts`_2_4 -> case _x_1 (menuhandle.RadioMenuHandle radioH_3_0 -> case radioH_3_0 (menuhandle._RadioMenuHandle mRadio_4_0 mRadio_4_1 mRadio_4_2 mRadioSelect_4_3 mRadioAtts_4_4 -> menuhandle.RadioMenuHandle (update radioH_3_0::menuhandle._RadioMenuHandle [1:mRadio_2_1,2:mstate.setMenuElementHandles_20 mRadio_2_2 mRadio_4_2,3:<{mRadioSelect`_2_3}>,4:mstate.setMenuAttributes_21 <{mRadioAtts`_2_4}> mRadioAtts_4_4])) ) ) ) (<{mstate.MenuSeparatorHandle`}> _x_1_0 -> case _x_1 (menuhandle.MenuSeparatorHandle _x_2_0 -> _x_1) ) (<{mstate.MenuRecursiveHandle`}> itemHs`_1_0 _x_1_1 -> case _x_1_1 (mstate.IsMenuListLSHandle -> case _x_1 (menuhandle.MenuListLSHandle itemHs_3_0 -> menuhandle.MenuListLSHandle (mstate.setMenuElementHandles_20 <{itemHs`_1_0}> itemHs_3_0)) ) (mstate.IsMenuExtendLSHandle -> case _x_1 (menuhandle.MenuExtendLSHandle exH_3_0 -> case exH_3_0 (menuhandle._MenuExtendLSHandle mExtendLS_4_0 mExtend_4_1 -> menuhandle.MenuExtendLSHandle (update exH_3_0::menuhandle._MenuExtendLSHandle [1:mstate.setMenuElementHandles_20 <{itemHs`_1_0}> mExtend_4_1])) ) ) (mstate.IsMenuChangeLSHandle -> case _x_1 (menuhandle.MenuChangeLSHandle chH_3_0 -> case chH_3_0 (menuhandle._MenuChangeLSHandle mChangeLS_4_0 mChange_4_1 -> menuhandle.MenuChangeLSHandle (update chH_3_0::menuhandle._MenuChangeLSHandle [1:mstate.setMenuElementHandles_20 <{itemHs`_1_0}> mChange_4_1])) ) ) ) (_ -> mstate.mstateFatalError "setMenuHandle`" "MenuElementHandles do not match pairwise")
mstate.setMenuElementHandles_20 !_x_0 !_x_1 = case _x_0 (_predefined._Cons itemH`_1_0 itemHs`_1_1 -> case _x_1 (_predefined._Cons itemH_2_0 itemHs_2_1 -> let !itemH_3_0 = mstate.setElementHandle_16 <{itemH`_1_0}> itemH_2_0, !itemHs_3_1 = mstate.setMenuElementHandles_20 <{itemHs`_1_1}> itemHs_2_1 in _predefined._Cons itemH_3_0 itemHs_3_1) ) (_predefined._Nil -> case _x_1 (_predefined._Nil -> _predefined._Nil) ) (_ -> mstate.mstateFatalError "setMenuHandle`" "incompatible number of MenuElementHandles")
<{mstate._if;192;72_66}> !<{mReceiverSelect`_0}>::B = case <{mReceiverSelect`_0}> (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
<{mstate.setMenuHandle`}> !<{mH`_0}> !mH_1 = case <{mH`_0}> (<{mstate._MenuHandle`}> mHandle`_1_0 mMenu_1_1 mOSMenuNr`_1_2 mTitle`_1_3 mSelect`_1_4 m_1_5 -> case mH_1 (menuhandle._MenuHandle mHandle_2_0 mMenu_2_1 mOSMenuNr_2_2 mTitle_2_3 mSelect_2_4 m_2_5 -> case (StdBool.not (<{StdInt.==_16}> <{mHandle`_1_0}> mHandle_2_0)) (True -> mstate.mstateFatalError "setMenuHandle`" "mHandle` field <> mHandle field") (False -> update mH_1::menuhandle._MenuHandle [5:mstate.setMenuElementHandles_20 m_1_5 m_2_5]) ) ) 
<{mstate.TD;MenuHandle`}> _x_0::B = _predefined._Nil
<{mstate.TD;MenuElementHandle`}> _x_0::B = _predefined._Nil
<{mstate.TD;MenuRecursiveKind}> _x_0::B = _predefined._Nil
<{mstate.TD;MenuItemHandle`}> _x_0::B = _predefined._Nil
<{mstate.TD;MenuReceiverHandle`}> _x_0::B = _predefined._Nil
<{mstate.TD;SubMenuHandle`}> _x_0::B = _predefined._Nil
<{mstate.TD;RadioMenuHandle`}> _x_0::B = _predefined._Nil
<{mstate.TD;MenuSeparatorHandle`}> _x_0::B = _predefined._Nil
<{mstate.TD;MenuAttribute`}> _x_0::B = _predefined._Nil

:: mstate.MenuElementHandle` = <{mstate.MenuItemHandle`}> !a1 | <{mstate.MenuReceiverHandle`}> !a1 | <{mstate.SubMenuHandle`}> !a1 | <{mstate.RadioMenuHandle`}> !a1 | <{mstate.MenuSeparatorHandle`}> !a1 | <{mstate.MenuRecursiveHandle`}> !a1 !a2
:: mstate.MenuRecursiveKind = mstate.IsMenuListLSHandle | mstate.IsMenuExtendLSHandle | mstate.IsMenuChangeLSHandle
:: mstate.MenuAttribute` = <{mstate.MenuId`}> a1 | <{mstate.MenuSelectState`}> a1 | <{mstate.MenuShortKey`}> a1::C | <{mstate.MenuMarkState`}> a1

|| Converted Records
:: <{mstate._MenuHandle`}> = {!<{mstate.mHandle`}>, !<{mstate.mMenuId`}>, !<{mstate.mOSMenuNr`}>, !<{mstate.mTitle`}>, !<{mstate.mSelect`}>::B, !<{mstate.mItems`}>}

:: <{mstate._MenuItemHandle`}> = {!<{mstate.mItemId`}>, !<{mstate.mItemKey`}>, !<{mstate.mItemTitle`}>, !<{mstate.mItemSelect`}>::B, !<{mstate.mItemMark`}>::B, !<{mstate.mItemAtts`}>, !<{mstate.mOSMenuItem`}>}

:: <{mstate._MenuReceiverHandle`}> = {!<{mstate.mReceiverId`}>, !<{mstate.mReceiverSelect`}>::B}

:: <{mstate._SubMenuHandle`}> = {!<{mstate.mSubHandle`}>, !<{mstate.mSubMenuId`}>, !<{mstate.mSubOSMenuNr`}>, !<{mstate.mSubItems`}>, !<{mstate.mSubTitle`}>, !<{mstate.mSubSelect`}>::B, !<{mstate.mSubAtts`}>}

:: <{mstate._RadioMenuHandle`}> = {!<{mstate.mRadioId`}>, !<{mstate.mRadioIndex`}>::I, !<{mstate.mRadioItems`}>, !<{mstate.mRadioSelect`}>::B, !<{mstate.mRadioAtts`}>}

:: <{mstate._MenuSeparatorHandle`}> = {!<{mstate.mSepId`}>}

:: <{mstate.gEq_s;}> = {!mstate.gEq_s}

:: <{mstate.gEq_ss;}> = {!mstate.gEq_ss}

:: <{mstate.gEq_sss;}> = {!mstate.gEq_sss}

:: <{mstate.gEq_ssss;}> = {!mstate.gEq_ssss}

:: <{mstate.gEq_sssss;}> = {!mstate.gEq_sssss}

:: <{mstate.gEq_ssssss;}> = {!mstate.gEq_ssssss}

:: <{mstate.gEq_sssssss;}> = {!mstate.gEq_sssssss}

:: <{mstate.gEq_ssssssss;}> = {!mstate.gEq_ssssssss}

:: <{mstate.gEq_sssssssss;}> = {!mstate.gEq_sssssssss}

:: <{mstate.bimap_s;}> = {mstate.bimap_s}

:: <{mstate.bimap_ss;}> = {mstate.bimap_ss}

:: <{mstate.bimap_sss;}> = {mstate.bimap_sss}

