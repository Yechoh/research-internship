|| ?module? StdMenuElement


StdMenuElement.ioStGetIdParents !ids_0 !ioState_1 = let _x_1_0 = iostate.ioStGetIdTable ioState_1, _x_1_1 = id.getIdParents ids_0 (select _x_1_0::_Tuple2 0) in <{_Tuple2!3}> (select _x_1_1::_Tuple2 0) (iostate.ioStSetIdTable (select _x_1_1::_Tuple2 1) (select _x_1_0::_Tuple2 1))
StdMenuElement.isOkMenuElementId !io_0 !_x_1 = case _x_1 (_Tuple2 x_1_0 _x_1_1 -> case _x_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (id._IdParent idp_3_0 idpDevice_3_1 idp_3_2 -> <{_Tuple2!1}> (StdMenuElement._f160_160 (<{systemid.==_5}> io_0 idp_3_0) idpDevice_3_1) (_Tuple2 x_1_0 idp_3_2)) ) ) (_ -> <{_Tuple2!1}> False StdMisc.undef)
StdMenuElement._f160_160::B !_x_0::B idpDevice_1 = case _x_0 (True -> <{device.==_2}> idpDevice_1 device.MenuDevice) (_ -> False)
StdMenuElement.gatherElementsIds_40 !m_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 ids_1_1 -> case _x_1_0 (_Tuple2 item_2_0 m_2_1 -> case (<{id.==_27}> m_0 m_2_1) (True -> let _x_4_0 = StdMenuElement.gatherElementsIds_40 m_0 ids_1_1 in _Tuple2 (_predefined._Cons item_2_0 (select _x_4_0::_Tuple2 0)) (select _x_4_0::_Tuple2 1)) (False -> let _x_4_0 = StdMenuElement.gatherElementsIds_40 m_0 ids_1_1 in _Tuple2 (select _x_4_0::_Tuple2 0) (_predefined._Cons (_Tuple2 item_2_0 m_2_1) (select _x_4_0::_Tuple2 1))) ) ) (_ -> _Tuple2 _predefined._Nil _predefined._Nil)
StdMenuElement.gatherMenuIds !_x_0 = case _x_0 (_predefined._Cons _x_1_0 ids_1_1 -> case _x_1_0 (_Tuple2 item_2_0 m_2_1 -> let _x_3_0 = StdMenuElement.gatherElementsIds_40 m_2_1 ids_1_1 in _predefined._Cons (_Tuple2 (_predefined._Cons item_2_0 (select _x_3_0::_Tuple2 0)) m_2_1) (StdMenuElement.gatherMenuIds (select _x_3_0::_Tuple2 1))) ) (_predefined._Nil -> _predefined._Nil) 
StdMenuElement.anon_44 id_0 = _Tuple2 id_0 True
StdMenuElement.enableAbleItems_48::I !menu_0::I !_x_1 !itemNr_2::I !tb_3::I = case _x_1 (_predefined._Cons _x_1_0 itemHs_1_1 -> case _x_1_0 (<{mstate.MenuItemHandle`}> itemH_2_0 -> case itemH_2_0 (<{mstate._MenuItemHandle`}> m_3_0 m_3_1 m_3_2 m_3_3 m_3_4 m_3_5 mOSMenu_3_6 -> case m_3_3 (True -> osmenu.osEnableMenuItem menu_0 mOSMenu_3_6 itemNr_2 (StdMenuElement.enableAbleItems_48 menu_0 itemHs_1_1 (<{StdInt.+_6}> itemNr_2 1) tb_3)) (False -> StdMenuElement.enableAbleItems_48 menu_0 itemHs_1_1 (<{StdInt.+_6}> itemNr_2 1) tb_3) ) ) ) (_ -> tb_3)
StdMenuElement.disableAllItems_49::I !menu_0::I !_x_1 !itemNr_2::I !tb_3::I = case _x_1 (_predefined._Cons _x_1_0 itemHs_1_1 -> case _x_1_0 (<{mstate.MenuItemHandle`}> itemH_2_0 -> case itemH_2_0 (<{mstate._MenuItemHandle`}> m_3_0 m_3_1 m_3_2 m_3_3 m_3_4 m_3_5 mOSMenu_3_6 -> osmenu.osDisableMenuItem menu_0 mOSMenu_3_6 itemNr_2 (StdMenuElement.disableAllItems_49 menu_0 itemHs_1_1 (<{StdInt.+_6}> itemNr_2 1) tb_3)) ) ) (_ -> tb_3)
StdMenuElement.setItemAbility_50 !enabled_0::B !menu_1::I !itemNr_2::I !_x_3 !tb_4::I = case _x_3 (<{mstate.SubMenuHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._SubMenuHandle`}> mSubHandle`_2_0 mSubMenu_2_1 mSubOSMenuNr`_2_2 mSub_2_3 mSubTitle`_2_4 mSubSelect`_2_5 mSubAtts`_2_6 -> case enabled_0 (True -> <{_Tuple2!3}> (<{mstate.SubMenuHandle`}> (update itemH_1_0::<{mstate._SubMenuHandle`}> [5:enabled_0])) (osmenu.osEnableSubMenu menu_1 <{mSubHandle`_2_0}> itemNr_2 tb_4)) (False -> <{_Tuple2!3}> (<{mstate.SubMenuHandle`}> (update itemH_1_0::<{mstate._SubMenuHandle`}> [5:enabled_0])) (osmenu.osDisableSubMenu menu_1 <{mSubHandle`_2_0}> itemNr_2 tb_4)) ) ) (<{mstate.RadioMenuHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._RadioMenuHandle`}> mRadio_2_0 mRadio_2_1 mRadio_2_2 mRadioSelect`_2_3 mRadioAtts`_2_4 -> case enabled_0 (True -> <{_Tuple2!3}> (<{mstate.RadioMenuHandle`}> (update itemH_1_0::<{mstate._RadioMenuHandle`}> [3:enabled_0])) (StdMenuElement.enableAbleItems_48 menu_1 mRadio_2_2 itemNr_2 tb_4)) (False -> <{_Tuple2!3}> (<{mstate.RadioMenuHandle`}> (update itemH_1_0::<{mstate._RadioMenuHandle`}> [3:enabled_0])) (StdMenuElement.disableAllItems_49 menu_1 mRadio_2_2 itemNr_2 tb_4)) ) ) (<{mstate.MenuItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> case enabled_0 (True -> <{_Tuple2!3}> (<{mstate.MenuItemHandle`}> (update itemH_1_0::<{mstate._MenuItemHandle`}> [3:enabled_0])) (osmenu.osEnableMenuItem menu_1 mOSMenu_2_6 itemNr_2 tb_4)) (False -> <{_Tuple2!3}> (<{mstate.MenuItemHandle`}> (update itemH_1_0::<{mstate._MenuItemHandle`}> [3:enabled_0])) (osmenu.osDisableMenuItem menu_1 mOSMenu_2_6 itemNr_2 tb_4)) ) ) (_ -> <{_Tuple2!3}> _x_3 tb_4)
StdMenuElement.eqfst2id::B !<{_v==_0}> id1_1 !_x_2 = case _x_2 (_Tuple2 id2_1_0 _x_1_1 -> select <{_v==_0}>::<{StdOverloaded.==;}> 0 id1_1 id2_1_0) 
StdMenuElement.eqfst2id_148::B !id1_0 !_x_1 = case _x_1 (_Tuple2 id2_1_0 _x_1_1 -> <{id.==_27}> id1_0 id2_1_0) 
<{StdMenuElement.changeMenuItem`_61}> !menu_0::I !recurse_1 change_2 !changes_3 !h_4 !itemNr_5::I !tb_6::I = case h_4 (<{mstate.MenuItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> let _x_3_0 = <{StdMenuElement._c;403;43_161}> m_2_0 changes_3 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple4!15}> (select _x_3_0::_Tuple3 2) h_4 (<{StdInt.+_6}> itemNr_5 1) tb_6) (False -> let _x_5_0 = change_2 (select (select _x_3_0::_Tuple3 1)::_Tuple2 1) menu_0 itemNr_5 h_4 tb_6 in <{_Tuple4!15}> (select _x_3_0::_Tuple3 2) (select _x_5_0::_Tuple2 0) (<{StdInt.+_6}> itemNr_5 1) (select _x_5_0::_Tuple2 1)) ) ) (<{mstate.SubMenuHandle`}> subH_1_0 -> case recurse_1 (_Tuple2 visitSubMenus_2_0 _x_2_1 -> case subH_1_0 (<{mstate._SubMenuHandle`}> mSubHandle`_3_0 mSubMenu_3_1 mSubOSMenuNr`_3_2 mSub_3_3 mSubTitle`_3_4 mSubSelect`_3_5 mSubAtts`_3_6 -> let _x_4_0::B = <{StdMenuElement._c;413;43_162}> mSubMenu_3_1 changes_3, an_4_1 = select _x_4_0::_Tuple3 0 in case (case (StdBool.not an_4_1) (True -> StdBool.not visitSubMenus_2_0) (False -> False) ) (True -> <{_Tuple4!15}> (select _x_4_0::_Tuple3 2) h_4 (<{StdInt.+_6}> itemNr_5 1) tb_6) (False -> case (StdBool.not an_4_1) (True -> let _x_7_0 = <{StdMenuElement.changeMenuItems`_62}> <{mSubHandle`_3_0}> recurse_1 change_2 (select _x_4_0::_Tuple3 2) mSub_3_3 1 tb_6 in <{_Tuple4!15}> (select _x_7_0::_Tuple4 0) (<{mstate.SubMenuHandle`}> (update subH_1_0::<{mstate._SubMenuHandle`}> [3:select _x_7_0::_Tuple4 1])) (<{StdInt.+_6}> itemNr_5 1) (select _x_7_0::_Tuple4 3)) (False -> let _x_7_0 = <{StdMenuElement.changeMenuItems`_62}> <{mSubHandle`_3_0}> recurse_1 change_2 (select _x_4_0::_Tuple3 2) mSub_3_3 1 tb_6, _x_7_1 = change_2 (select (select _x_4_0::_Tuple3 1)::_Tuple2 1) menu_0 itemNr_5 (<{mstate.SubMenuHandle`}> (update subH_1_0::<{mstate._SubMenuHandle`}> [3:select _x_7_0::_Tuple4 1])) (select _x_7_0::_Tuple4 3) in <{_Tuple4!15}> (select _x_7_0::_Tuple4 0) (select _x_7_1::_Tuple2 0) (<{StdInt.+_6}> itemNr_5 1) (select _x_7_1::_Tuple2 1)) ) ) ) ) (<{mstate.RadioMenuHandle`}> radioH_1_0 -> case recurse_1 (_Tuple2 _x_2_0 visitRadios_2_1 -> case radioH_1_0 (<{mstate._RadioMenuHandle`}> mRadio_3_0 mRadio_3_1 mRadio_3_2 mRadioSelect`_3_3 mRadioAtts`_3_4 -> let _x_4_0::B = <{StdMenuElement._c;427;43_163}> mRadio_3_0 changes_3, an_4_1 = select _x_4_0::_Tuple3 0 in case (case (StdBool.not an_4_1) (True -> StdBool.not visitRadios_2_1) (False -> False) ) (True -> <{_Tuple4!15}> (select _x_4_0::_Tuple3 2) h_4 (<{StdInt.+_6}> itemNr_5 (StdList.length_47 mRadio_3_2)) tb_6) (False -> case (StdBool.not an_4_1) (True -> let _x_7_0 = <{StdMenuElement.changeMenuItems`_62}> menu_0 recurse_1 change_2 (select _x_4_0::_Tuple3 2) mRadio_3_2 itemNr_5 tb_6 in <{_Tuple4!15}> (select _x_7_0::_Tuple4 0) (<{mstate.RadioMenuHandle`}> (update radioH_1_0::<{mstate._RadioMenuHandle`}> [2:select _x_7_0::_Tuple4 1])) (<{StdInt.+_6}> itemNr_5 (StdList.length_47 mRadio_3_2)) (select _x_7_0::_Tuple4 3)) (False -> let _x_7_0 = <{StdMenuElement.changeMenuItems`_62}> menu_0 recurse_1 change_2 (select _x_4_0::_Tuple3 2) mRadio_3_2 itemNr_5 tb_6, _x_7_1 = change_2 (select (select _x_4_0::_Tuple3 1)::_Tuple2 1) menu_0 itemNr_5 (<{mstate.RadioMenuHandle`}> (update radioH_1_0::<{mstate._RadioMenuHandle`}> [2:select _x_7_0::_Tuple4 1])) (select _x_7_0::_Tuple4 3) in <{_Tuple4!15}> (select _x_7_0::_Tuple4 0) (select _x_7_1::_Tuple2 0) (<{StdInt.+_6}> itemNr_5 (StdList.length_47 mRadio_3_2)) (select _x_7_1::_Tuple2 1)) ) ) ) ) (<{mstate.MenuRecursiveHandle`}> items_1_0 recKind_1_1 -> let _x_2_0 = <{StdMenuElement.changeMenuItems`_62}> menu_0 recurse_1 change_2 changes_3 items_1_0 itemNr_5 tb_6 in <{_Tuple4!15}> (select _x_2_0::_Tuple4 0) (<{mstate.MenuRecursiveHandle`}> (select _x_2_0::_Tuple4 1) recKind_1_1) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (<{mstate.MenuReceiverHandle`}> _x_1_0 -> <{_Tuple4!15}> changes_3 h_4 itemNr_5 tb_6) (<{mstate.MenuSeparatorHandle`}> _x_1_0 -> <{_Tuple4!15}> changes_3 h_4 (<{StdInt.+_6}> itemNr_5 1) tb_6) 
<{StdMenuElement.changeMenuItems`_62}> !menu_0::I !recurse_1 change_2 !changes_3 !m_4 !itemNr_5::I !tb_6::I = case (case (StdList.isEmpty changes_3) (True -> True) (False -> StdList.isEmpty m_4) ) (True -> <{_Tuple4!15}> changes_3 m_4 itemNr_5 tb_6) (False -> let _x_2_0 = commondef.hdtl m_4, _x_2_1 = <{StdMenuElement.changeMenuItem`_61}> menu_0 recurse_1 change_2 changes_3 (select _x_2_0::_Tuple2 0) itemNr_5 tb_6, _x_2_2 = <{StdMenuElement.changeMenuItems`_62}> menu_0 recurse_1 change_2 (select _x_2_1::_Tuple4 0) (select _x_2_0::_Tuple2 1) (select _x_2_1::_Tuple4 2) (select _x_2_1::_Tuple4 3) in <{_Tuple4!15}> (select _x_2_2::_Tuple4 0) (_predefined._Cons (select _x_2_1::_Tuple4 1) (select _x_2_2::_Tuple4 1)) (select _x_2_2::_Tuple4 2) (select _x_2_2::_Tuple4 3)) 
<{StdMenuElement._c;427;43_163}> !mRadio_0 changes_1 = case mRadio_0 (Data.Maybe.Nothing -> _Tuple3 False (_Tuple2 StdMisc.undef StdMisc.undef) changes_1) (Data.Maybe.Just id_1_0 -> commondef.remove (StdMenuElement.eqfst2id_148 id_1_0) (_Tuple2 id_1_0 StdMisc.undef) changes_1) 
<{StdMenuElement._c;413;43_162}> !mSubMenu_0 changes_1 = case mSubMenu_0 (Data.Maybe.Nothing -> _Tuple3 False (_Tuple2 StdMisc.undef StdMisc.undef) changes_1) (Data.Maybe.Just id_1_0 -> commondef.remove (StdMenuElement.eqfst2id_148 id_1_0) (_Tuple2 id_1_0 StdMisc.undef) changes_1) 
<{StdMenuElement._c;403;43_161}> !m_0 changes_1 = case m_0 (Data.Maybe.Nothing -> _Tuple3 False (_Tuple2 StdMisc.undef StdMisc.undef) changes_1) (Data.Maybe.Just id_1_0 -> commondef.remove (StdMenuElement.eqfst2id_148 id_1_0) (_Tuple2 id_1_0 StdMisc.undef) changes_1) 
StdMenuElement.changeMenuItems !recurse_0 change_1 !changes_2 !_x_3 = case _x_3 (StdMenuElement._MState mH_1_0 mTb_1_1 -> let _x_2_0 = <{StdMenuElement.changeMenuItems`_62}> (select mH_1_0::<{mstate._MenuHandle`}> 0) recurse_0 change_1 changes_2 (select mH_1_0::<{mstate._MenuHandle`}> 5) 1 mTb_1_1 in StdMenuElement._MState (update mH_1_0::<{mstate._MenuHandle`}> [5:select _x_2_0::_Tuple4 1]) (select _x_2_0::_Tuple4 3)) 
StdMenuElement.changeMenuItemsSelect !idSelects_0 !mState_1 = StdMenuElement.changeMenuItems (_Tuple2 True True) StdMenuElement.setItemAbility_50 idSelects_0 mState_1
StdMenuElement.stdMenuElementFatalError !function_0 !error_1 = commondef.fatalError function_0 "StdMenuElement" error_1
StdMenuElement.eqMenuLSHandleId !id_0 !msH_1 = let _x_1_0 = menuaccess.menuStateHandleGetMenuId msH_1 in <{_Tuple2!3}> (<{id.==_27}> id_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
<{StdMenuElement.retrieveMenuHandle`}> !_x_0 = case _x_0 (menuhandle.MenuLSHandle mlsH_1_0 -> case mlsH_1_0 (menuhandle._MenuLSHandle mlsState_2_0 mH_2_1 -> let _x_3_0 = <{mstate.getMenuHandle`}> mH_2_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (menuhandle.MenuLSHandle (update mlsH_1_0::menuhandle._MenuLSHandle [1:select _x_3_0::_Tuple2 1]))) ) 
<{StdMenuElement.insertMenuHandle`}> !<{mH`_0}> !_x_1 = case _x_1 (menuhandle.MenuLSHandle mlsH_1_0 -> case mlsH_1_0 (menuhandle._MenuLSHandle mlsState_2_0 mH_2_1 -> menuhandle.MenuLSHandle (update mlsH_1_0::menuhandle._MenuLSHandle [1:<{mstate.setMenuHandle`}> <{mH`_0}> mH_2_1])) ) 
StdMenuElement.setMState_43 !osMenuBar_0 !menu_1 !f_2 !_x_3 !tb_4::I = case _x_3 (_predefined._Cons msH_1_0 msHs_1_1 -> let _x_2_0 = StdMenuElement.eqMenuLSHandleId menu_1 msH_1_0 in case (select _x_2_0::_Tuple2 0) (True -> let _x_4_0 = <{StdMenuElement.retrieveMenuHandle`}> (select _x_2_0::_Tuple2 1), _x_4_1 = f_2 (StdMenuElement._MState (select _x_4_0::_Tuple2 0) tb_4) in <{_Tuple2!3}> (_predefined._Cons (<{StdMenuElement.insertMenuHandle`}> (select _x_4_1::StdMenuElement._MState 0) (select _x_4_0::_Tuple2 1)) msHs_1_1) (osmenu.osDrawMenuBar osMenuBar_0 (select _x_4_1::StdMenuElement._MState 1))) (False -> let _x_4_0 = StdMenuElement.setMState_43 osMenuBar_0 menu_1 f_2 msHs_1_1 tb_4 in <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_4_0::_Tuple2 0)) (select _x_4_0::_Tuple2 1)) ) (_predefined._Nil -> <{_Tuple2!3}> _predefined._Nil tb_4) 
StdMenuElement.setMenu !menu_0 !f_1 !ioState_2 = let _x_1_0 = iostate.ioStHasDevice device.MenuDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> select _x_1_0::_Tuple2 1) (False -> let ioState_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = iostate.ioStGetOSDInfo ioState_3_0, osdinfo_3_2 = select _x_3_1::_Tuple2 0, maybeOSMenuBar_3_3 = osdocumentinterface.getOSDInfoOSMenuBar osdinfo_3_2 in case (Data.Maybe.isNothing maybeOSMenuBar_3_3) (True -> StdMenuElement.stdMenuElementFatalError "setMenu" "OSMenuBar could not be retrieved from OSDInfo") (False -> let ioState_5_0 = select _x_3_1::_Tuple2 1, _x_5_1 = iostate.ioStGetDevice device.MenuDevice ioState_5_0 in case (StdBool.not (select _x_5_1::_Tuple3 0)) (True -> StdMenuElement.stdMenuElementFatalError "setMenu" "MenuSystemState could not be retrieved from IOSt") (False -> let _x_7_0 = menuaccess.menuHandlesGetMenus (devicesystemstate.menuSystemStateGetMenuHandles (select _x_5_1::_Tuple3 1)), _x_7_1 = iostate.accIOToolbox (StdMenuElement.setMState_43 (Data.Maybe.fromJust maybeOSMenuBar_3_3) menu_0 f_1 (select _x_7_0::_Tuple2 0)) (select _x_5_1::_Tuple3 2) in iostate.ioStSetDevice (devicesystemstate.MenuSystemState (menuaccess.menuHandlesSetMenus (select _x_7_1::_Tuple2 0) (select _x_7_0::_Tuple2 1))) (select _x_7_1::_Tuple2 1)) ) ) 
<{StdMenuElement.c;187;85_45}> !g_l_0 = <{StdMenuElement.g_c1;187;97_165}> g_l_0
<{StdMenuElement.g_c1;187;97_165}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{StdMenuElement.g_c2;187;97_164}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{StdMenuElement.g_c2;187;97_164}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 ids_1_0 m_1_1 -> _predefined._Cons (StdMenuElement.setMenu m_1_1 (StdMenuElement.changeMenuItemsSelect (StdList.map StdMenuElement.anon_44 ids_1_0))) (<{StdMenuElement.c;187;85_45}> g_t_1)) (_ -> <{StdMenuElement.c;187;85_45}> g_t_1)
StdMenuElement.enableMenuElements !ids_0 !ioState_1 = let _x_1_0 = iostate.ioStGetIOId ioState_1, io_1_1 = select _x_1_0::_Tuple2 0, ioState_1_2 = select _x_1_0::_Tuple2 1, _x_1_3 = StdMenuElement.ioStGetIdParents ids_0 ioState_1_2, idparents_1_4 = select _x_1_3::_Tuple2 0, ids_m_1_5 = commondef.filterMap (StdMenuElement.isOkMenuElementId io_1_1) (StdList.zip2 ids_0 idparents_1_4), ids_m_1_6 = StdMenuElement.gatherMenuIds ids_m_1_5 in case (StdList.isEmpty ids_m_1_6) (True -> select _x_1_3::_Tuple2 1) (False -> commondef.strictSeq (<{StdMenuElement.c;187;85_45}> ids_m_1_6) (select _x_1_3::_Tuple2 1)) 
StdMenuElement.anon_46 id_0 = _Tuple2 id_0 False
<{StdMenuElement.c;198;86_47}> !g_l_0 = <{StdMenuElement.g_c1;198;98_167}> g_l_0
<{StdMenuElement.g_c1;198;98_167}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{StdMenuElement.g_c2;198;98_166}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{StdMenuElement.g_c2;198;98_166}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 ids_1_0 m_1_1 -> _predefined._Cons (StdMenuElement.setMenu m_1_1 (StdMenuElement.changeMenuItemsSelect (StdList.map StdMenuElement.anon_46 ids_1_0))) (<{StdMenuElement.c;198;86_47}> g_t_1)) (_ -> <{StdMenuElement.c;198;86_47}> g_t_1)
StdMenuElement.disableMenuElements !ids_0 !ioState_1 = let _x_1_0 = iostate.ioStGetIOId ioState_1, io_1_1 = select _x_1_0::_Tuple2 0, ioState_1_2 = select _x_1_0::_Tuple2 1, _x_1_3 = StdMenuElement.ioStGetIdParents ids_0 ioState_1_2, idparents_1_4 = select _x_1_3::_Tuple2 0, ids_m_1_5 = commondef.filterMap (StdMenuElement.isOkMenuElementId io_1_1) (StdList.zip2 ids_0 idparents_1_4), ids_m_1_6 = StdMenuElement.gatherMenuIds ids_m_1_5 in case (StdList.isEmpty ids_m_1_6) (True -> select _x_1_3::_Tuple2 1) (False -> commondef.strictSeq (<{StdMenuElement.c;198;86_47}> ids_m_1_6) (select _x_1_3::_Tuple2 1)) 
StdMenuElement.gatherElementsIds_41 !m_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 ids_1_1 -> case _x_1_0 (_Tuple2 _x_2_0 m_2_1 -> case _x_2_0 (_Tuple2 item_3_0 x_3_1 -> case (<{id.==_27}> m_0 m_2_1) (True -> let _x_5_0 = StdMenuElement.gatherElementsIds_41 m_0 ids_1_1 in _Tuple2 (_predefined._Cons (_Tuple2 item_3_0 x_3_1) (select _x_5_0::_Tuple2 0)) (select _x_5_0::_Tuple2 1)) (False -> let _x_5_0 = StdMenuElement.gatherElementsIds_41 m_0 ids_1_1 in _Tuple2 (select _x_5_0::_Tuple2 0) (_predefined._Cons (_Tuple2 (_Tuple2 item_3_0 x_3_1) m_2_1) (select _x_5_0::_Tuple2 1))) ) ) ) (_ -> _Tuple2 _predefined._Nil _predefined._Nil)
<{StdMenuElement.gatherMenuIds`}> !_x_0 = case _x_0 (_predefined._Cons _x_1_0 ids_1_1 -> case _x_1_0 (_Tuple2 _x_2_0 m_2_1 -> case _x_2_0 (_Tuple2 item_3_0 x_3_1 -> let _x_4_0 = StdMenuElement.gatherElementsIds_41 m_2_1 ids_1_1 in _predefined._Cons (_Tuple2 (_predefined._Cons (_Tuple2 item_3_0 x_3_1) (select _x_4_0::_Tuple2 0)) m_2_1) (<{StdMenuElement.gatherMenuIds`}> (select _x_4_0::_Tuple2 1))) ) ) (_predefined._Nil -> _predefined._Nil) 
StdMenuElement.setItemTitle_57 !title_0 !menu_1::I !itemNr_2::I !_x_3 !tb_4::I = case _x_3 (<{mstate.SubMenuHandle`}> itemH_1_0 -> <{_Tuple2!3}> (<{mstate.SubMenuHandle`}> (update itemH_1_0::<{mstate._SubMenuHandle`}> [4:title_0])) (osmenu.osChangeMenuItemTitle menu_1 (select itemH_1_0::<{mstate._SubMenuHandle`}> 0) itemNr_2 (osmenu.osValidateMenuItemTitle Data.Maybe.Nothing title_0) tb_4)) (<{mstate.MenuItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> <{_Tuple2!3}> (<{mstate.MenuItemHandle`}> (update itemH_1_0::<{mstate._MenuItemHandle`}> [2:title_0])) (osmenu.osChangeMenuItemTitle menu_1 mOSMenu_2_6 itemNr_2 (osmenu.osValidateMenuItemTitle m_2_1 title_0) tb_4)) ) (_ -> <{_Tuple2!3}> _x_3 tb_4)
<{StdMenuElement.c;289;110_56}> !g_l_0 = <{StdMenuElement.g_c1;289;128_169}> g_l_0
<{StdMenuElement.g_c1;289;128_169}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{StdMenuElement.g_c2;289;128_168}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{StdMenuElement.g_c2;289;128_168}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 id_titles_1_0 m_1_1 -> _predefined._Cons (StdMenuElement.setMenu m_1_1 (StdMenuElement.changeMenuItems (_Tuple2 True True) StdMenuElement.setItemTitle_57 id_titles_1_0)) (<{StdMenuElement.c;289;110_56}> g_t_1)) (_ -> <{StdMenuElement.c;289;110_56}> g_t_1)
StdMenuElement.setMenuElementTitles !id_titles_0 !ioState_1 = let _x_1_0 = iostate.ioStGetIOId ioState_1, io_1_1 = select _x_1_0::_Tuple2 0, _x_1_2 = StdList.unzip id_titles_0, ids_1_3 = select _x_1_2::_Tuple2 0, ioState_1_4 = select _x_1_0::_Tuple2 1, _x_1_5 = StdMenuElement.ioStGetIdParents ids_1_3 ioState_1_4, idparents_1_6 = select _x_1_5::_Tuple2 0, id_titles_m_1_7 = commondef.filterMap (StdMenuElement.isOkMenuElementId io_1_1) (StdList.zip2 id_titles_0 idparents_1_6), id_titles_m_1_8 = <{StdMenuElement.gatherMenuIds`}> id_titles_m_1_7 in case (StdList.isEmpty id_titles_m_1_8) (True -> select _x_1_5::_Tuple2 1) (False -> commondef.strictSeq (<{StdMenuElement.c;289;110_56}> id_titles_m_1_8) (select _x_1_5::_Tuple2 1)) 
StdMenuElement.anon_51 id_0 = _Tuple2 id_0 True
StdMenuElement.setItemMark_55 !marked_0::B !menu_1::I !itemNr_2::I !_x_3 !tb_4::I = case _x_3 (<{mstate.MenuItemHandle`}> itemH_1_0 -> <{_Tuple2!3}> (<{mstate.MenuItemHandle`}> (update itemH_1_0::<{mstate._MenuItemHandle`}> [4:marked_0])) (osmenu.osMenuItemCheck marked_0 menu_1 (select itemH_1_0::<{mstate._MenuItemHandle`}> 6) itemNr_2 itemNr_2 tb_4)) (_ -> <{_Tuple2!3}> _x_3 tb_4)
StdMenuElement.changeMenuItemsMark !idMarks_0 !mState_1 = StdMenuElement.changeMenuItems (_Tuple2 True False) StdMenuElement.setItemMark_55 idMarks_0 mState_1
<{StdMenuElement.c;255;103_52}> !g_l_0 = <{StdMenuElement.g_c1;255;115_171}> g_l_0
<{StdMenuElement.g_c1;255;115_171}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{StdMenuElement.g_c2;255;115_170}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{StdMenuElement.g_c2;255;115_170}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 ids_1_0 m_1_1 -> _predefined._Cons (StdMenuElement.setMenu m_1_1 (StdMenuElement.changeMenuItemsMark (StdList.map StdMenuElement.anon_51 ids_1_0))) (<{StdMenuElement.c;255;103_52}> g_t_1)) (_ -> <{StdMenuElement.c;255;103_52}> g_t_1)
StdMenuElement.markMenuItems !ids_0 !ioState_1 = let _x_1_0 = iostate.ioStGetIOId ioState_1, io_1_1 = select _x_1_0::_Tuple2 0, ioState_1_2 = select _x_1_0::_Tuple2 1, _x_1_3 = StdMenuElement.ioStGetIdParents ids_0 ioState_1_2, idparents_1_4 = select _x_1_3::_Tuple2 0, ids_m_1_5 = commondef.filterMap (StdMenuElement.isOkMenuElementId io_1_1) (StdList.zip2 ids_0 idparents_1_4), ids_m_1_6 = StdMenuElement.gatherMenuIds ids_m_1_5 in case (StdList.isEmpty ids_m_1_6) (True -> select _x_1_3::_Tuple2 1) (False -> commondef.strictSeq (<{StdMenuElement.c;255;103_52}> ids_m_1_6) (select _x_1_3::_Tuple2 1)) 
StdMenuElement.anon_53 id_0 = _Tuple2 id_0 False
<{StdMenuElement.c;266;84_54}> !g_l_0 = <{StdMenuElement.g_c1;266;96_173}> g_l_0
<{StdMenuElement.g_c1;266;96_173}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{StdMenuElement.g_c2;266;96_172}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{StdMenuElement.g_c2;266;96_172}> !g_h_0 g_t_1 = case g_h_0 (_Tuple2 ids_1_0 m_1_1 -> _predefined._Cons (StdMenuElement.setMenu m_1_1 (StdMenuElement.changeMenuItemsMark (StdList.map StdMenuElement.anon_53 ids_1_0))) (<{StdMenuElement.c;266;84_54}> g_t_1)) (_ -> <{StdMenuElement.c;266;84_54}> g_t_1)
StdMenuElement.unmarkMenuItems !ids_0 !ioState_1 = let _x_1_0 = iostate.ioStGetIOId ioState_1, io_1_1 = select _x_1_0::_Tuple2 0, ioState_1_2 = select _x_1_0::_Tuple2 1, _x_1_3 = StdMenuElement.ioStGetIdParents ids_0 ioState_1_2, idparents_1_4 = select _x_1_3::_Tuple2 0, ids_m_1_5 = commondef.filterMap (StdMenuElement.isOkMenuElementId io_1_1) (StdList.zip2 ids_0 idparents_1_4), ids_m_1_6 = StdMenuElement.gatherMenuIds ids_m_1_5 in case (StdList.isEmpty ids_m_1_6) (True -> select _x_1_3::_Tuple2 1) (False -> commondef.strictSeq (<{StdMenuElement.c;266;84_54}> ids_m_1_6) (select _x_1_3::_Tuple2 1)) 
StdMenuElement.ioStGetIdParent !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetIdTable ioState_1, _x_1_1 = id.getIdParent id_0 (select _x_1_0::_Tuple2 0) in <{_Tuple2!3}> (select _x_1_1::_Tuple2 0) (iostate.ioStSetIdTable (select _x_1_1::_Tuple2 1) (select _x_1_0::_Tuple2 1))
StdMenuElement.getRadioMenuItemIndex_58::I !id_0 !_x_1 !index_2::I = case _x_1 (_predefined._Cons _x_1_0 itemHs_1_1 -> case _x_1_0 (<{mstate.MenuItemHandle`}> _x_2_0 -> case _x_2_0 (<{mstate._MenuItemHandle`}> m_3_0 m_3_1 m_3_2 m_3_3 m_3_4 m_3_5 mOSMenu_3_6 -> case (case (Data.Maybe.isNothing m_3_0) (True -> True) (False -> StdBool.not (<{id.==_27}> (Data.Maybe.fromJust m_3_0) id_0)) ) (True -> StdMenuElement.getRadioMenuItemIndex_58 id_0 itemHs_1_1 (<{StdInt.+_6}> index_2 1)) (False -> index_2) ) ) ) (_ -> 0)
StdMenuElement.setmark !menu_0::I !new_1::I !rootNr_2::I !_x_3 !_x_4 = case _x_3 (<{mstate.MenuItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> case _x_4 (_Tuple2 index_3_0 tb_3_1 -> let marked_4_0::B = <{StdInt.==_16}> index_3_0 new_1 in <{_Tuple2!3}> (<{mstate.MenuItemHandle`}> (update itemH_1_0::<{mstate._MenuItemHandle`}> [4:marked_4_0])) (_Tuple2 (<{StdInt.+_6}> index_3_0 1) (osmenu.osMenuItemCheck marked_4_0 menu_0 mOSMenu_2_6 index_3_0 (<{StdInt.-_7}> (<{StdInt.+_6}> rootNr_2 index_3_0) 1) tb_3_1))) ) ) 
StdMenuElement.selectradiomenuitem_59 !item_0 !menu_1::I !itemNr_2::I !_x_3 !tb_4::I = case _x_3 (<{mstate.RadioMenuHandle`}> radioH_1_0 -> case radioH_1_0 (<{mstate._RadioMenuHandle`}> mRadio_2_0 now_2_1 mRadio_2_2 mRadioSelect`_2_3 mRadioAtts`_2_4 -> case (StdList.isEmpty mRadio_2_2) (True -> <{_Tuple2!3}> (<{mstate.RadioMenuHandle`}> radioH_1_0) tb_4) (False -> let new_4_0::I = StdMenuElement.getRadioMenuItemIndex_58 item_0 mRadio_2_2 1 in case (<{StdInt.==_16}> new_4_0 0) (True -> <{_Tuple2!3}> (<{mstate.RadioMenuHandle`}> radioH_1_0) tb_4) (False -> let _x_6_0 = commondef.stateMap (StdMenuElement.setmark menu_1 new_4_0 itemNr_2) mRadio_2_2 (_Tuple2 1 tb_4) in <{_Tuple2!3}> (<{mstate.RadioMenuHandle`}> (update radioH_1_0::<{mstate._RadioMenuHandle`}> [1:new_4_0,2:select _x_6_0::_Tuple2 0])) (select (select _x_6_0::_Tuple2 1)::_Tuple2 1)) ) ) ) (_ -> <{_Tuple2!3}> _x_3 tb_4)
StdMenuElement.selectRadioMenuItem !id_0 !item_1 !ioState_2 = let _x_1_0 = iostate.ioStGetIOId ioState_2, ioState_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = StdMenuElement.ioStGetIdParent id_0 ioState_1_1, maybeParent_1_3 = select _x_1_2::_Tuple2 0 in case (StdBool.not (select (StdMenuElement.isOkMenuElementId (select _x_1_0::_Tuple2 0) (_Tuple2 id_0 maybeParent_1_3))::_Tuple2 0)) (True -> select _x_1_2::_Tuple2 1) (False -> StdMenuElement.setMenu (select (Data.Maybe.fromJust maybeParent_1_3)::id._IdParent 2) (StdMenuElement.changeMenuItems (_Tuple2 True True) StdMenuElement.selectradiomenuitem_59 (_predefined._Cons (_Tuple2 id_0 item_1) _predefined._Nil)) (select _x_1_2::_Tuple2 1)) 
StdMenuElement.selectradiomenuindexitem_60 !new_0::I !menu_1::I !itemNr_2::I !_x_3 !tb_4::I = case _x_3 (<{mstate.RadioMenuHandle`}> radioH_1_0 -> case radioH_1_0 (<{mstate._RadioMenuHandle`}> mRadio_2_0 now_2_1 mRadio_2_2 mRadioSelect`_2_3 mRadioAtts`_2_4 -> case (StdList.isEmpty mRadio_2_2) (True -> <{_Tuple2!3}> (<{mstate.RadioMenuHandle`}> radioH_1_0) tb_4) (False -> let new_4_0::I = commondef.setBetween new_0 1 (StdList.length_47 mRadio_2_2) in case (<{StdInt.==_16}> new_4_0 now_2_1) (True -> <{_Tuple2!3}> (<{mstate.RadioMenuHandle`}> radioH_1_0) tb_4) (False -> let _x_6_0 = commondef.stateMap (StdMenuElement.setmark menu_1 new_4_0 itemNr_2) mRadio_2_2 (_Tuple2 1 tb_4) in <{_Tuple2!3}> (<{mstate.RadioMenuHandle`}> (update radioH_1_0::<{mstate._RadioMenuHandle`}> [1:new_4_0,2:select _x_6_0::_Tuple2 0])) (select (select _x_6_0::_Tuple2 1)::_Tuple2 1)) ) ) ) (_ -> <{_Tuple2!3}> _x_3 tb_4)
StdMenuElement.selectRadioMenuIndexItem !id_0 !index_1::I !ioState_2 = let _x_1_0 = iostate.ioStGetIOId ioState_2, ioState_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = StdMenuElement.ioStGetIdParent id_0 ioState_1_1, maybeParent_1_3 = select _x_1_2::_Tuple2 0 in case (StdBool.not (select (StdMenuElement.isOkMenuElementId (select _x_1_0::_Tuple2 0) (_Tuple2 id_0 maybeParent_1_3))::_Tuple2 0)) (True -> select _x_1_2::_Tuple2 1) (False -> StdMenuElement.setMenu (select (Data.Maybe.fromJust maybeParent_1_3)::id._IdParent 2) (StdMenuElement.changeMenuItems (_Tuple2 True True) StdMenuElement.selectradiomenuindexitem_60 (_predefined._Cons (_Tuple2 id_0 index_1) _predefined._Nil)) (select _x_1_2::_Tuple2 1)) 
StdMenuElement.getMState_42 !menu_0 !_x_1 = case _x_1 (_predefined._Cons msH_1_0 msHs_1_1 -> let _x_2_0::B = StdMenuElement.eqMenuLSHandleId menu_0 msH_1_0, yes_2_1 = select _x_2_0::_Tuple2 0 in case yes_2_1 (True -> let _x_4_0 = <{StdMenuElement.retrieveMenuHandle`}> (select _x_2_0::_Tuple2 1) in <{_Tuple3!5}> yes_2_1 (select _x_4_0::_Tuple2 0) (_predefined._Cons (select _x_4_0::_Tuple2 1) msHs_1_1)) (False -> let _x_4_0 = StdMenuElement.getMState_42 menu_0 msHs_1_1 in <{_Tuple3!5}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple2 1) (select _x_4_0::_Tuple3 2))) ) (_predefined._Nil -> <{_Tuple3!5}> False StdMisc.undef _predefined._Nil) 
StdMenuElement.getMenu !menu_0 !ioState_1 = let _x_1_0 = iostate.ioStHasDevice device.MenuDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple2 1)) (False -> let ioState_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = iostate.ioStGetDevice device.MenuDevice ioState_3_0 in case (StdBool.not (select _x_3_1::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_3_1::_Tuple3 2)) (False -> let mDevice_5_0 = select _x_3_1::_Tuple3 1, menus_5_1 = devicesystemstate.menuSystemStateGetMenuHandles mDevice_5_0, _x_5_2 = menuaccess.menuHandlesGetMenus menus_5_1, mHs_5_3 = select _x_5_2::_Tuple2 0, _x_5_4 = StdMenuElement.getMState_42 menu_0 mHs_5_3 in case (select _x_5_4::_Tuple3 0) (True -> <{_Tuple2!3}> (Data.Maybe.Just (StdMenuElement._MState (select _x_5_4::_Tuple3 1) 0)) (iostate.ioStSetDevice (devicesystemstate.MenuSystemState (menuaccess.menuHandlesSetMenus (select _x_5_4::_Tuple3 2) (select _x_5_2::_Tuple2 1))) (select _x_3_1::_Tuple3 2))) (False -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.MenuSystemState (menuaccess.menuHandlesSetMenus (select _x_5_4::_Tuple3 2) (select _x_5_2::_Tuple2 1))) (select _x_3_1::_Tuple3 2))) ) ) 
StdMenuElement.getParentMenu !item_0 !ioState_1 = let _x_1_0 = StdMenuElement.ioStGetIdParent item_0 ioState_1, maybeParent_1_1 = select _x_1_0::_Tuple2 0 in case (Data.Maybe.isNothing maybeParent_1_1) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple2 1)) (False -> let ioState_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = iostate.ioStGetIOId ioState_3_0, parent_3_2 = Data.Maybe.fromJust maybeParent_1_1 in case (case (<{systemid.==_5}> (select _x_3_1::_Tuple2 0) (select parent_3_2::id._IdParent 0)) (True -> <{device.==_2}> (select parent_3_2::id._IdParent 1) device.MenuDevice) (False -> False) ) (True -> StdMenuElement.getMenu (select parent_3_2::id._IdParent 2) (select _x_3_1::_Tuple2 1)) (False -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_3_1::_Tuple2 1)) ) 
StdMenuElement.getitemtypes !_x_0 = case _x_0 (<{mstate.MenuItemHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> _predefined._Cons (_Tuple2 "MenuItem" m_2_0) _predefined._Nil) ) (<{mstate.MenuReceiverHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._MenuReceiverHandle`}> mReceiver_2_0 mReceiverSelect`_2_1 -> _predefined._Cons (_Tuple2 "MenuReceiver" (Data.Maybe.Just mReceiver_2_0)) _predefined._Nil) ) (<{mstate.SubMenuHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._SubMenuHandle`}> mSubHandle`_2_0 mSubMenu_2_1 mSubOSMenuNr`_2_2 mSub_2_3 mSubTitle`_2_4 mSubSelect`_2_5 mSubAtts`_2_6 -> _predefined._Cons (_Tuple2 "SubMenu" mSubMenu_2_1) _predefined._Nil) ) (<{mstate.RadioMenuHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._RadioMenuHandle`}> mRadio_2_0 mRadio_2_1 mRadio_2_2 mRadioSelect`_2_3 mRadioAtts`_2_4 -> _predefined._Cons (_Tuple2 "RadioMenu" mRadio_2_0) _predefined._Nil) ) (<{mstate.MenuSeparatorHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._MenuSeparatorHandle`}> mSep_2_0 -> _predefined._Cons (_Tuple2 "MenuSeparator" mSep_2_0) _predefined._Nil) ) (<{mstate.MenuRecursiveHandle`}> itemHs_1_0 _x_1_1 -> StdList.flatten (StdList.map StdMenuElement.getitemtypes itemHs_1_0)) 
StdMenuElement.getMenuElementTypes !mstate_0 = case mstate_0 (StdMenuElement._MState mRep_1_0 mTb_1_1 -> case mRep_1_0 (<{mstate._MenuHandle`}> mHandle`_2_0 mMenu_2_1 mOSMenuNr`_2_2 mTitle`_2_3 mSelect`_2_4 m_2_5 -> StdList.flatten (StdList.map StdMenuElement.getitemtypes m_2_5)) ) 
StdMenuElement.getsubtypes_64 !id_0 !_x_1 = case _x_1 (<{mstate.SubMenuHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._SubMenuHandle`}> mSubHandle`_2_0 mSubMenu_2_1 mSubOSMenuNr`_2_2 mSub_2_3 mSubTitle`_2_4 mSubSelect`_2_5 mSubAtts`_2_6 -> case (case (Data.Maybe.isJust mSubMenu_2_1) (True -> <{id.==_27}> (Data.Maybe.fromJust mSubMenu_2_1) id_0) (False -> False) ) (True -> <{_Tuple2!3}> True (StdList.flatten (StdList.map StdMenuElement.getitemtypes mSub_2_3))) (False -> StdMenuElement.getcompmenuitemtypes_65 id_0 mSub_2_3) ) ) (<{mstate.RadioMenuHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._RadioMenuHandle`}> mRadio_2_0 mRadio_2_1 mRadio_2_2 mRadioSelect`_2_3 mRadioAtts`_2_4 -> case (case (Data.Maybe.isJust mRadio_2_0) (True -> <{id.==_27}> (Data.Maybe.fromJust mRadio_2_0) id_0) (False -> False) ) (True -> <{_Tuple2!3}> True (StdList.flatten (StdList.map StdMenuElement.getitemtypes mRadio_2_2))) (False -> StdMenuElement.getcompmenuitemtypes_65 id_0 mRadio_2_2) ) ) (<{mstate.MenuRecursiveHandle`}> itemHs_1_0 _x_1_1 -> StdMenuElement.getcompmenuitemtypes_65 id_0 itemHs_1_0) (_ -> <{_Tuple2!3}> False _predefined._Nil)
StdMenuElement.getcompmenuitemtypes_65 !id_0 !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = StdMenuElement.getsubtypes_64 id_0 itemH_1_0 in case (select _x_2_0::_Tuple2 0) (True -> <{_Tuple2!3}> True (select _x_2_0::_Tuple2 1)) (False -> StdMenuElement.getcompmenuitemtypes_65 id_0 itemHs_1_1) ) (_ -> <{_Tuple2!3}> False _predefined._Nil)
StdMenuElement.getCompoundMenuElementTypes !id_0 !mstate_1 = case mstate_1 (StdMenuElement._MState mRep_1_0 mTb_1_1 -> case mRep_1_0 (<{mstate._MenuHandle`}> mHandle`_2_0 mMenu_2_1 mOSMenuNr`_2_2 mTitle`_2_3 mSelect`_2_4 m_2_5 -> select (StdMenuElement.getcompmenuitemtypes_65 id_0 m_2_5)::_Tuple2 1) ) 
StdMenuElement.snd3thd3_92 tuple_0 = _Tuple2 (select tuple_0::_Tuple3 1) (select tuple_0::_Tuple3 2)
StdMenuElement.anon_66 defaultValue_0 default_1 id_2 = _Tuple3 id_2 default_1 defaultValue_0
StdMenuElement.anon_91 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdMenuElement.fst_90 !tuple_0 = select tuple_0::_Tuple2 0
StdMenuElement.eqfst3id::B !<{_v==_0}> id1_1 !_x_2 = case _x_2 (_Tuple3 id2_1_0 _x_1_1 _x_1_2 -> select <{_v==_0}>::<{StdOverloaded.==;}> 0 id1_1 id2_1_0) 
<{StdMenuElement.statemapMenuElementHandle`_63}> cond_0 f_1 s_2 !_x_3 = case _x_3 (<{mstate.MenuRecursiveHandle`}> itemHs_1_0 _x_1_1 -> <{StdMenuElement.statemapMenuElementHandles`}> cond_0 f_1 s_2 itemHs_1_0) (_ -> f_1 _x_3 s_2)
<{StdMenuElement.statemapMenuElementHandles`}> !cond_0 f_1 !s_2 !itemHs_3 = case (case (cond_0 s_2) (True -> True) (False -> StdList.isEmpty itemHs_3) ) (True -> s_2) (False -> let _x_2_0 = commondef.hdtl itemHs_3 in <{StdMenuElement.statemapMenuElementHandles`}> cond_0 f_1 (<{StdMenuElement.statemapMenuElementHandle`_63}> cond_0 f_1 s_2 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) 
StdMenuElement.eqfst3id_150::B !id1_0 !_x_1 = case _x_1 (_Tuple3 id2_1_0 _x_1_1 _x_1_2 -> <{id.==_27}> id1_0 id2_1_0) 
StdMenuElement.anon_149::B !g_0 x_1 = StdList.isEmpty (g_0 x_1)
StdMenuElement.anon_151::B !x_0 = StdList.isEmpty (StdMenuElement.fst_90 x_0)
StdMenuElement.getradioitemselect_67 !_x_0 !ids_selects_1 = case _x_0 (<{mstate.SubMenuHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._SubMenuHandle`}> mSubHandle`_2_0 mSubMenu_2_1 mSubOSMenuNr`_2_2 mSub_2_3 mSubTitle`_2_4 mSubSelect`_2_5 mSubAtts`_2_6 -> StdMenuElement.getselectedradioitems_68 mSub_2_3 ids_selects_1) ) (<{mstate.RadioMenuHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._RadioMenuHandle`}> mRadio_2_0 mRadio_2_1 mRadio_2_2 mRadioSelect`_2_3 mRadioAtts`_2_4 -> case ids_selects_1 (_Tuple2 ids_3_0 selects_3_1 -> let _x_4_0 = <{StdMenuElement._c;534;43_174}> mRadio_2_0 ids_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) selects_3_1) (False -> let id_6_0 = select _x_4_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) (select (commondef.creplace (StdMenuElement.eqfst3id_150 id_6_0) (_Tuple3 id_6_0 mRadio_2_1 (<{StdMenuElement._if;540;43_175}> (<{StdInt.==_16}> mRadio_2_1 0) mRadio_2_2 mRadio_2_1)) selects_3_1)::_Tuple2 1)) ) ) ) (_ -> ids_selects_1)
StdMenuElement.getselectedradioitems_68 !itemHs_0 !ids_selects_1 = <{StdMenuElement.statemapMenuElementHandles`}> StdMenuElement.anon_151 StdMenuElement.getradioitemselect_67 ids_selects_1 itemHs_0
<{StdMenuElement._if;540;43_175}> !_x_0::B mRadio_1 mRadio_2::I = case _x_0 (True -> Data.Maybe.Nothing) (_ -> select (select (<{StdList.!!}> mRadio_1 (<{StdInt.-_7}> mRadio_2 1))::_Tuple1 0)::<{mstate._MenuItemHandle`}> 0)
<{StdMenuElement._c;534;43_174}> !mRadio_0 ids_1 = case mRadio_0 (Data.Maybe.Nothing -> _Tuple3 False StdMisc.undef ids_1) (Data.Maybe.Just id_1_0 -> commondef.remove (<{id.==_27}> id_1_0) id_1_0 ids_1) 
StdMenuElement.getSelectedRadioMenuItems !ids_0 !mstate_1 = case mstate_1 (StdMenuElement._MState mRep_1_0 mTb_1_1 -> case mRep_1_0 (<{mstate._MenuHandle`}> mHandle`_2_0 mMenu_2_1 mOSMenuNr`_2_2 mTitle`_2_3 mSelect`_2_4 m_2_5 -> StdList.map StdMenuElement.snd3thd3_92 (select (StdMenuElement.getselectedradioitems_68 m_2_5 (_Tuple2 ids_0 (StdList.map (StdMenuElement.anon_66 Data.Maybe.Nothing 0) ids_0)))::_Tuple2 1)) ) 
StdMenuElement.getSelectedRadioMenuItem !id_0 !mstate_1 = StdList.hd (StdMenuElement.getSelectedRadioMenuItems (_predefined._Cons id_0 _predefined._Nil) mstate_1)
StdMenuElement.snd3thd3_95 tuple_0 = _Tuple2 (select tuple_0::_Tuple3 1) (select tuple_0::_Tuple3 2)
StdMenuElement.anon_69 defaultValue_0 defaultBool_1 id_2 = _Tuple3 id_2 defaultBool_1 defaultValue_0
StdMenuElement.anon_94 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdMenuElement.fst_93 !tuple_0 = select tuple_0::_Tuple2 0
StdMenuElement.anon_152::B !g_0 x_1 = StdList.isEmpty (g_0 x_1)
StdMenuElement.anon_153::B !x_0 = StdList.isEmpty (StdMenuElement.fst_93 x_0)
StdMenuElement.getmenuitemselect_70 !_x_0 !_x_1 = case _x_0 (<{mstate.SubMenuHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._SubMenuHandle`}> mSubHandle`_2_0 mSubMenu_2_1 mSubOSMenuNr`_2_2 mSub_2_3 mSubTitle`_2_4 mSubSelect`_2_5 mSubAtts`_2_6 -> case _x_1 (_Tuple2 ids_3_0 selects_3_1 -> let _x_4_0 = <{StdMenuElement._c;564;35_176}> mSubMenu_2_1 ids_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> let _x_6_0 = StdMenuElement.getmenuitemsselect_71 (select itemH_1_0::<{mstate._SubMenuHandle`}> 3) (_Tuple2 (select _x_4_0::_Tuple3 2) selects_3_1) in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1)) (False -> let _x_6_0 = StdMenuElement.getmenuitemsselect_71 (select itemH_1_0::<{mstate._SubMenuHandle`}> 3) (_Tuple2 (select _x_4_0::_Tuple3 2) selects_3_1), id_6_1 = select _x_4_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (select (commondef.creplace (StdMenuElement.eqfst3id_150 id_6_1) (_Tuple3 id_6_1 True (<{StdMenuElement._if;569;77_177}> (select itemH_1_0::<{mstate._SubMenuHandle`}> 5))) (select _x_6_0::_Tuple2 1))::_Tuple2 1)) ) ) ) (<{mstate.RadioMenuHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._RadioMenuHandle`}> mRadio_2_0 mRadio_2_1 mRadio_2_2 mRadioSelect`_2_3 mRadioAtts`_2_4 -> case _x_1 (_Tuple2 ids_3_0 selects_3_1 -> let _x_4_0 = <{StdMenuElement._c;572;35_178}> mRadio_2_0 ids_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> let _x_6_0 = StdMenuElement.getmenuitemsselect_71 (select itemH_1_0::<{mstate._RadioMenuHandle`}> 2) (_Tuple2 (select _x_4_0::_Tuple3 2) selects_3_1) in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1)) (False -> let _x_6_0 = StdMenuElement.getmenuitemsselect_71 (select itemH_1_0::<{mstate._RadioMenuHandle`}> 2) (_Tuple2 (select _x_4_0::_Tuple3 2) selects_3_1), id_6_1 = select _x_4_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (select (commondef.creplace (StdMenuElement.eqfst3id_150 id_6_1) (_Tuple3 id_6_1 True (<{StdMenuElement._if;577;77_179}> (select itemH_1_0::<{mstate._RadioMenuHandle`}> 3))) (select _x_6_0::_Tuple2 1))::_Tuple2 1)) ) ) ) (<{mstate.MenuItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> case _x_1 (_Tuple2 ids_3_0 selects_3_1 -> let _x_4_0 = <{StdMenuElement._c;580;35_180}> m_2_0 ids_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) selects_3_1) (False -> let id_6_0 = select _x_4_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) (select (commondef.creplace (StdMenuElement.eqfst3id_150 id_6_0) (_Tuple3 id_6_0 True (<{StdMenuElement._if;584;77_181}> (select itemH_1_0::<{mstate._MenuItemHandle`}> 3))) selects_3_1)::_Tuple2 1)) ) ) ) (_ -> _x_1)
StdMenuElement.getmenuitemsselect_71 !itemHs_0 !ids_selects_1 = <{StdMenuElement.statemapMenuElementHandles`}> StdMenuElement.anon_153 StdMenuElement.getmenuitemselect_70 ids_selects_1 itemHs_0
<{StdMenuElement._if;584;77_181}> !_x_0::B = case _x_0 (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
<{StdMenuElement._c;580;35_180}> !m_0 ids_1 = case m_0 (Data.Maybe.Nothing -> _Tuple3 False StdMisc.undef ids_1) (Data.Maybe.Just id_1_0 -> commondef.remove (<{id.==_27}> id_1_0) id_1_0 ids_1) 
<{StdMenuElement._if;577;77_179}> !_x_0::B = case _x_0 (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
<{StdMenuElement._c;572;35_178}> !mRadio_0 ids_1 = case mRadio_0 (Data.Maybe.Nothing -> _Tuple3 False StdMisc.undef ids_1) (Data.Maybe.Just id_1_0 -> commondef.remove (<{id.==_27}> id_1_0) id_1_0 ids_1) 
<{StdMenuElement._if;569;77_177}> !_x_0::B = case _x_0 (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
<{StdMenuElement._c;564;35_176}> !mSubMenu_0 ids_1 = case mSubMenu_0 (Data.Maybe.Nothing -> _Tuple3 False StdMisc.undef ids_1) (Data.Maybe.Just id_1_0 -> commondef.remove (<{id.==_27}> id_1_0) id_1_0 ids_1) 
StdMenuElement.getMenuElementSelectStates !ids_0 !mstate_1 = case mstate_1 (StdMenuElement._MState mRep_1_0 mTb_1_1 -> case mRep_1_0 (<{mstate._MenuHandle`}> mHandle`_2_0 mMenu_2_1 mOSMenuNr`_2_2 mTitle`_2_3 mSelect`_2_4 m_2_5 -> StdList.map StdMenuElement.snd3thd3_95 (select (StdMenuElement.getmenuitemsselect_71 m_2_5 (_Tuple2 ids_0 (StdList.map (StdMenuElement.anon_69 StdIOCommon.Able False) ids_0)))::_Tuple2 1)) ) 
StdMenuElement.getMenuElementSelectState !id_0 !mstate_1 = StdList.hd (StdMenuElement.getMenuElementSelectStates (_predefined._Cons id_0 _predefined._Nil) mstate_1)
StdMenuElement.snd3thd3_98 tuple_0 = _Tuple2 (select tuple_0::_Tuple3 1) (select tuple_0::_Tuple3 2)
StdMenuElement.anon_72 defaultValue_0 defaultBool_1 id_2 = _Tuple3 id_2 defaultBool_1 defaultValue_0
StdMenuElement.anon_97 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdMenuElement.fst_96 !tuple_0 = select tuple_0::_Tuple2 0
StdMenuElement.anon_154::B !g_0 x_1 = StdList.isEmpty (g_0 x_1)
StdMenuElement.anon_155::B !x_0 = StdList.isEmpty (StdMenuElement.fst_96 x_0)
StdMenuElement.getmenuitemmark_73 !_x_0 !ids_marks_1 = case _x_0 (<{mstate.SubMenuHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._SubMenuHandle`}> mSubHandle`_2_0 mSubMenu_2_1 mSubOSMenuNr`_2_2 mSub_2_3 mSubTitle`_2_4 mSubSelect`_2_5 mSubAtts`_2_6 -> StdMenuElement.getmenuitemsmark_74 mSub_2_3 ids_marks_1) ) (<{mstate.MenuItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> case ids_marks_1 (_Tuple2 ids_3_0 marks_3_1 -> let _x_4_0 = <{StdMenuElement._c;610;35_182}> m_2_0 ids_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) marks_3_1) (False -> let id_6_0 = select _x_4_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) (select (commondef.creplace (StdMenuElement.eqfst3id_150 id_6_0) (_Tuple3 id_6_0 True (<{StdMenuElement._if;614;77_183}> (select itemH_1_0::<{mstate._MenuItemHandle`}> 4))) marks_3_1)::_Tuple2 1)) ) ) ) (_ -> ids_marks_1)
StdMenuElement.getmenuitemsmark_74 !itemHs_0 !ids_marks_1 = <{StdMenuElement.statemapMenuElementHandles`}> StdMenuElement.anon_155 StdMenuElement.getmenuitemmark_73 ids_marks_1 itemHs_0
<{StdMenuElement._if;614;77_183}> !_x_0::B = case _x_0 (True -> StdIOCommon.Mark) (_ -> StdIOCommon.NoMark)
<{StdMenuElement._c;610;35_182}> !m_0 ids_1 = case m_0 (Data.Maybe.Nothing -> _Tuple3 False StdMisc.undef ids_1) (Data.Maybe.Just id_1_0 -> commondef.remove (<{id.==_27}> id_1_0) id_1_0 ids_1) 
StdMenuElement.getMenuElementMarkStates !ids_0 !mstate_1 = case mstate_1 (StdMenuElement._MState mRep_1_0 mTb_1_1 -> case mRep_1_0 (<{mstate._MenuHandle`}> mHandle`_2_0 mMenu_2_1 mOSMenuNr`_2_2 mTitle`_2_3 mSelect`_2_4 m_2_5 -> StdList.map StdMenuElement.snd3thd3_98 (select (StdMenuElement.getmenuitemsmark_74 m_2_5 (_Tuple2 ids_0 (StdList.map (StdMenuElement.anon_72 StdIOCommon.NoMark False) ids_0)))::_Tuple2 1)) ) 
StdMenuElement.getMenuElementMarkState !id_0 !mstate_1 = StdList.hd (StdMenuElement.getMenuElementMarkStates (_predefined._Cons id_0 _predefined._Nil) mstate_1)
StdMenuElement.snd3thd3_101 tuple_0 = _Tuple2 (select tuple_0::_Tuple3 1) (select tuple_0::_Tuple3 2)
StdMenuElement.anon_75 defaultValue_0 defaultBool_1 id_2 = _Tuple3 id_2 defaultBool_1 defaultValue_0
StdMenuElement.anon_100 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdMenuElement.fst_99 !tuple_0 = select tuple_0::_Tuple2 0
StdMenuElement.anon_156::B !g_0 x_1 = StdList.isEmpty (g_0 x_1)
StdMenuElement.anon_157::B !x_0 = StdList.isEmpty (StdMenuElement.fst_99 x_0)
StdMenuElement.getmenuitemtitle_76 !_x_0 !_x_1 = case _x_0 (<{mstate.SubMenuHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._SubMenuHandle`}> mSubHandle`_2_0 mSubMenu_2_1 mSubOSMenuNr`_2_2 mSub_2_3 mSubTitle`_2_4 mSubSelect`_2_5 mSubAtts`_2_6 -> case _x_1 (_Tuple2 ids_3_0 titles_3_1 -> let _x_4_0 = <{StdMenuElement._c;637;35_184}> mSubMenu_2_1 ids_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> let _x_6_0 = StdMenuElement.getmenuitemstitle_77 (select itemH_1_0::<{mstate._SubMenuHandle`}> 3) (_Tuple2 (select _x_4_0::_Tuple3 2) titles_3_1) in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1)) (False -> let _x_6_0 = StdMenuElement.getmenuitemstitle_77 (select itemH_1_0::<{mstate._SubMenuHandle`}> 3) (_Tuple2 (select _x_4_0::_Tuple3 2) titles_3_1), id_6_1 = select _x_4_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (select (commondef.creplace (StdMenuElement.eqfst3id_150 id_6_1) (_Tuple3 id_6_1 True (Data.Maybe.Just (select itemH_1_0::<{mstate._SubMenuHandle`}> 4))) (select _x_6_0::_Tuple2 1))::_Tuple2 1)) ) ) ) (<{mstate.RadioMenuHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._RadioMenuHandle`}> mRadio_2_0 mRadio_2_1 mRadio_2_2 mRadioSelect`_2_3 mRadioAtts`_2_4 -> case _x_1 (_Tuple2 ids_3_0 titles_3_1 -> let _x_4_0 = <{StdMenuElement._c;645;35_185}> mRadio_2_0 ids_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> let _x_6_0 = StdMenuElement.getmenuitemstitle_77 (select itemH_1_0::<{mstate._RadioMenuHandle`}> 2) (_Tuple2 (select _x_4_0::_Tuple3 2) titles_3_1) in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1)) (False -> let _x_6_0 = StdMenuElement.getmenuitemstitle_77 (select itemH_1_0::<{mstate._RadioMenuHandle`}> 2) (_Tuple2 (select _x_4_0::_Tuple3 2) titles_3_1), id_6_1 = select _x_4_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (select (commondef.creplace (StdMenuElement.eqfst3id_150 id_6_1) (_Tuple3 id_6_1 True Data.Maybe.Nothing) (select _x_6_0::_Tuple2 1))::_Tuple2 1)) ) ) ) (<{mstate.MenuItemHandle`}> itemH_1_0 -> case itemH_1_0 (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> case _x_1 (_Tuple2 ids_3_0 titles_3_1 -> let _x_4_0 = <{StdMenuElement._c;653;35_186}> m_2_0 ids_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) titles_3_1) (False -> let id_6_0 = select _x_4_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) (select (commondef.creplace (StdMenuElement.eqfst3id_150 id_6_0) (_Tuple3 id_6_0 True (Data.Maybe.Just (select itemH_1_0::<{mstate._MenuItemHandle`}> 2))) titles_3_1)::_Tuple2 1)) ) ) ) (_ -> _x_1)
StdMenuElement.getmenuitemstitle_77 !itemHs_0 !ids_titles_1 = <{StdMenuElement.statemapMenuElementHandles`}> StdMenuElement.anon_157 StdMenuElement.getmenuitemtitle_76 ids_titles_1 itemHs_0
<{StdMenuElement._c;653;35_186}> !m_0 ids_1 = case m_0 (Data.Maybe.Nothing -> _Tuple3 False StdMisc.undef ids_1) (Data.Maybe.Just id_1_0 -> commondef.remove (<{id.==_27}> id_1_0) id_1_0 ids_1) 
<{StdMenuElement._c;645;35_185}> !mRadio_0 ids_1 = case mRadio_0 (Data.Maybe.Nothing -> _Tuple3 False StdMisc.undef ids_1) (Data.Maybe.Just id_1_0 -> commondef.remove (<{id.==_27}> id_1_0) id_1_0 ids_1) 
<{StdMenuElement._c;637;35_184}> !mSubMenu_0 ids_1 = case mSubMenu_0 (Data.Maybe.Nothing -> _Tuple3 False StdMisc.undef ids_1) (Data.Maybe.Just id_1_0 -> commondef.remove (<{id.==_27}> id_1_0) id_1_0 ids_1) 
StdMenuElement.getMenuElementTitles !ids_0 !mstate_1 = case mstate_1 (StdMenuElement._MState mRep_1_0 mTb_1_1 -> case mRep_1_0 (<{mstate._MenuHandle`}> mHandle`_2_0 mMenu_2_1 mOSMenuNr`_2_2 mTitle`_2_3 mSelect`_2_4 m_2_5 -> StdList.map StdMenuElement.snd3thd3_101 (select (StdMenuElement.getmenuitemstitle_77 m_2_5 (_Tuple2 ids_0 (StdList.map (StdMenuElement.anon_75 Data.Maybe.Nothing False) ids_0)))::_Tuple2 1)) ) 
StdMenuElement.getMenuElementTitle !id_0 !mstate_1 = StdList.hd (StdMenuElement.getMenuElementTitles (_predefined._Cons id_0 _predefined._Nil) mstate_1)
StdMenuElement.snd3thd3_104 tuple_0 = _Tuple2 (select tuple_0::_Tuple3 1) (select tuple_0::_Tuple3 2)
StdMenuElement.anon_78 defaultValue_0 defaultBool_1 id_2 = _Tuple3 id_2 defaultBool_1 defaultValue_0
StdMenuElement.anon_103 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdMenuElement.fst_102 !tuple_0 = select tuple_0::_Tuple2 0
StdMenuElement.anon_158::B !g_0 x_1 = StdList.isEmpty (g_0 x_1)
StdMenuElement.anon_159::B !x_0 = StdList.isEmpty (StdMenuElement.fst_102 x_0)
StdMenuElement.getmenuitemshortkey_79 !_x_0 !ids_keys_1 = case _x_0 (<{mstate.SubMenuHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._SubMenuHandle`}> mSubHandle`_2_0 mSubMenu_2_1 mSubOSMenuNr`_2_2 mSub_2_3 mSubTitle`_2_4 mSubSelect`_2_5 mSubAtts`_2_6 -> StdMenuElement.getmenuitemsshortkey_80 mSub_2_3 ids_keys_1) ) (<{mstate.MenuItemHandle`}> _x_1_0 -> case _x_1_0 (<{mstate._MenuItemHandle`}> m_2_0 m_2_1 m_2_2 m_2_3 m_2_4 m_2_5 mOSMenu_2_6 -> case ids_keys_1 (_Tuple2 ids_3_0 keys_3_1 -> let _x_4_0 = <{StdMenuElement._c;683;35_187}> m_2_0 ids_3_0 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) keys_3_1) (False -> let id_6_0 = select _x_4_0::_Tuple3 1 in <{_Tuple2!3}> (select _x_4_0::_Tuple3 2) (select (commondef.creplace (StdMenuElement.eqfst3id_150 id_6_0) (_Tuple3 id_6_0 True m_2_1) keys_3_1)::_Tuple2 1)) ) ) ) (_ -> ids_keys_1)
StdMenuElement.getmenuitemsshortkey_80 !itemHs_0 !ids_keys_1 = <{StdMenuElement.statemapMenuElementHandles`}> StdMenuElement.anon_159 StdMenuElement.getmenuitemshortkey_79 ids_keys_1 itemHs_0
<{StdMenuElement._c;683;35_187}> !m_0 ids_1 = case m_0 (Data.Maybe.Nothing -> _Tuple3 False StdMisc.undef ids_1) (Data.Maybe.Just id_1_0 -> commondef.remove (<{id.==_27}> id_1_0) id_1_0 ids_1) 
StdMenuElement.getMenuElementShortKeys !ids_0 !mstate_1 = case mstate_1 (StdMenuElement._MState mRep_1_0 mTb_1_1 -> case mRep_1_0 (<{mstate._MenuHandle`}> mHandle`_2_0 mMenu_2_1 mOSMenuNr`_2_2 mTitle`_2_3 mSelect`_2_4 m_2_5 -> StdList.map StdMenuElement.snd3thd3_104 (select (StdMenuElement.getmenuitemsshortkey_80 m_2_5 (_Tuple2 ids_0 (StdList.map (StdMenuElement.anon_78 Data.Maybe.Nothing False) ids_0)))::_Tuple2 1)) ) 
StdMenuElement.getMenuElementShortKey !id_0 !mstate_1 = StdList.hd (StdMenuElement.getMenuElementShortKeys (_predefined._Cons id_0 _predefined._Nil) mstate_1)
<{StdMenuElement.TD;MState}> _x_0::B = _predefined._Nil
<{StdMenuElement.TD;ItemChange}> _x_0::B = _predefined._Nil
<{StdMenuElement.TD;DeltaItemHandle}> _x_0::B = _predefined._Nil
<{StdMenuElement.TD;Recurse}> _x_0::B = _predefined._Nil


|| Converted Records
:: StdMenuElement._MState = {!StdMenuElement.mRep, !StdMenuElement.mTb::I}

:: <{StdMenuElement.gEq_s;}> = {!StdMenuElement.gEq_s}

:: <{StdMenuElement.gEq_ss;}> = {!StdMenuElement.gEq_ss}

:: <{StdMenuElement.gEq_sss;}> = {!StdMenuElement.gEq_sss}

:: <{StdMenuElement.gEq_ssss;}> = {!StdMenuElement.gEq_ssss}

:: <{StdMenuElement.gEq_sssss;}> = {!StdMenuElement.gEq_sssss}

:: <{StdMenuElement.gEq_ssssss;}> = {!StdMenuElement.gEq_ssssss}

:: <{StdMenuElement.gEq_sssssss;}> = {!StdMenuElement.gEq_sssssss}

:: <{StdMenuElement.gEq_ssssssss;}> = {!StdMenuElement.gEq_ssssssss}

:: <{StdMenuElement.gEq_sssssssss;}> = {!StdMenuElement.gEq_sssssssss}

:: <{StdMenuElement.bimap_s;}> = {StdMenuElement.bimap_s}

:: <{StdMenuElement.bimap_ss;}> = {StdMenuElement.bimap_ss}

:: <{StdMenuElement.bimap_sss;}> = {StdMenuElement.bimap_sss}

