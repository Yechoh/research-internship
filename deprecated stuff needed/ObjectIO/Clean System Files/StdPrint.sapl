|| ?module? StdPrint


StdPrint.defaultPrintSetup !_vFileEnv_0 !env_1 = osprint.os_defaultprintsetup env_1
StdPrint.printSetupDialog !_vPrintEnvironments_0 !printSetup_1 !env_2 = select _vPrintEnvironments_0::<{osprint.PrintEnvironments;}> 1 printSetup_1 env_2
StdPrint.getPageDimensions !printSetup_0 !emulateScreenRes_1::B = let _x_1_0 = osprint.os_getpagedimensions printSetup_0 emulateScreenRes_1, _x_1_1 = select _x_1_0::_Tuple3 0, _x_1_2 = select _x_1_0::_Tuple3 1, _x_1_3 = select _x_1_2::_Tuple2 0, _x_1_4 = select _x_1_2::_Tuple2 1 in StdPrint._PageDimensions (StdIOBasic._Size (select _x_1_1::_Tuple2 0) (select _x_1_1::_Tuple2 1)) (StdIOBasic._Rectangle (StdIOBasic._Point2 (select _x_1_3::_Tuple2 0) (select _x_1_3::_Tuple2 1)) (StdIOBasic._Point2 (select _x_1_4::_Tuple2 0) (select _x_1_4::_Tuple2 1))) (select _x_1_0::_Tuple3 2)
StdPrint.highNibble_15::I !_vto_0 ch_1 = StdInt.bitand (<{StdInt.>>}> (select _vto_0::<{StdOverloaded.toInt;}> 0 ch_1) 4) 15
StdPrint.lowNibble_14::I !_vto_0 ch_1 = StdInt.bitand (select _vto_0::<{StdOverloaded.toInt;}> 0 ch_1) 15
StdPrint.nibbleToChar_16::C !nibble_0::I = case (case (StdBool.not (<{StdInt.<_17}> nibble_0 10)) (True -> StdBool.not (<{StdInt.<_17}> 15 nibble_0)) (False -> False) ) (True -> StdChar.toChar_21 (<{StdInt.+_6}> (<{StdInt.-_7}> nibble_0 10) (StdInt.toInt_20 'A'))) (False -> case (case (StdBool.not (<{StdInt.<_17}> nibble_0 0)) (True -> StdBool.not (<{StdInt.<_17}> 9 nibble_0)) (False -> False) ) (True -> StdChar.toChar_21 (<{StdInt.+_6}> nibble_0 (StdInt.toInt_20 '0'))) ) 
<{StdPrint.c;38;51_12}> !_vArray_0 !_vto_1 string_2 i_3::I g_s_4::I i_5::I !g_l_6 = <{StdPrint.g_c1;38;56_83}> g_l_6 _vto_1 string_2 i_5 _vArray_0 i_3 g_s_4
<{StdPrint.c;38;25_13}> !_vArray_0 !_vto_1 string_2 !i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 i_3)) (True -> <{StdPrint.c;38;51_12}> _vArray_0 _vto_1 string_2 i_3 g_s_4 i_3 (_predefined._Cons True (_predefined._Cons False _predefined._Nil))) (False -> _predefined._Nil) 
<{StdPrint.g_c1;38;56_83}> !g_l_0 _vto_1 string_2 i_3::I _vArray_4 i_5::I g_s_6::I = case g_l_0 (_predefined._Cons low_1_0 g_t_1_1 -> _predefined._Cons (StdPrint.nibbleToChar_16 (<{StdPrint._if;37;39_82}> low_1_0 _vto_1 string_2 i_3 _vArray_4)) (<{StdPrint.c;38;51_12}> _vArray_4 _vto_1 string_2 i_5 g_s_6 i_3 g_t_1_1)) (_ -> <{StdPrint.c;38;25_13}> _vArray_4 _vto_1 string_2 (<{StdInt.+_6}> i_5 StdInt.one_11) g_s_6)
<{StdPrint._if;37;39_82}>::I !low_0::B !_vto_1 string_2 i_3::I _vArray_4 = case low_0 (True -> StdPrint.lowNibble_14 _vto_1 (select _vArray_4::<{_SystemArray.Array;}> 3 string_2 i_3)) (_ -> StdPrint.highNibble_15 _vto_1 (select _vArray_4::<{_SystemArray.Array;}> 3 string_2 i_3))
<{StdPrint.c;38;51_74}> !_vto_0 string_1 i_2::I g_s_3::I i_4::I !g_l_5 = <{StdPrint.g_c1;38;56_85}> g_l_5 _vto_0 string_1 i_4 i_2 g_s_3
<{StdPrint.c;38;25_73}> !_vto_0 string_1 !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> <{StdPrint.c;38;51_74}> _vto_0 string_1 i_2 g_s_3 i_2 (_predefined._Cons True (_predefined._Cons False _predefined._Nil))) (False -> _predefined._Nil) 
<{StdPrint.g_c1;38;56_85}> !g_l_0 _vto_1 string_2 i_3::I i_4::I g_s_5::I = case g_l_0 (_predefined._Cons low_1_0 g_t_1_1 -> _predefined._Cons (StdPrint.nibbleToChar_16 (<{StdPrint._if;37;39_84}> low_1_0 _vto_1 string_2 i_3)) (<{StdPrint.c;38;51_74}> _vto_1 string_2 i_4 g_s_5 i_3 g_t_1_1)) (_ -> <{StdPrint.c;38;25_73}> _vto_1 string_2 (<{StdInt.+_6}> i_4 StdInt.one_11) g_s_5)
<{StdPrint._if;37;39_84}>::I !low_0::B !_vto_1 string_2 i_3::I = case low_0 (True -> StdPrint.lowNibble_14 _vto_1 (_SystemArray.select_19 string_2 i_3)) (_ -> StdPrint.highNibble_15 _vto_1 (_SystemArray.select_19 string_2 i_3))
StdPrint.lowNibble_77::I !ch_0::C = StdInt.bitand (StdInt.toInt_20 ch_0) 15
StdPrint.highNibble_78::I !ch_0::C = StdInt.bitand (<{StdInt.>>}> (StdInt.toInt_20 ch_0) 4) 15
<{StdPrint.c;38;51_76}> string_0 i_1::I g_s_2::I i_3::I !g_l_4 = <{StdPrint.g_c1;38;56_87}> g_l_4 string_0 i_3 i_1 g_s_2
<{StdPrint.c;38;25_75}> string_0 !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> <{StdPrint.c;38;51_76}> string_0 i_1 g_s_2 i_1 (_predefined._Cons True (_predefined._Cons False _predefined._Nil))) (False -> _predefined._Nil) 
<{StdPrint.g_c1;38;56_87}> !g_l_0 string_1 i_2::I i_3::I g_s_4::I = case g_l_0 (_predefined._Cons low_1_0 g_t_1_1 -> _predefined._Cons (StdPrint.nibbleToChar_16 (<{StdPrint._if;37;39_86}> low_1_0 string_1 i_2)) (<{StdPrint.c;38;51_76}> string_1 i_3 g_s_4 i_2 g_t_1_1)) (_ -> <{StdPrint.c;38;25_75}> string_1 (<{StdInt.+_6}> i_3 StdInt.one_11) g_s_4)
<{StdPrint._if;37;39_86}>::I !low_0::B !string_1 !i_2::I = case low_0 (True -> StdPrint.lowNibble_77 (_SystemArray.select_19 string_1 i_2)) (_ -> StdPrint.highNibble_78 (_SystemArray.select_19 string_1 i_2))
StdPrint.fwritePrintSetup !printSetup_0 !file_1 = let !string_1_0 = osprint.os_printsetuptostring printSetup_0, !hexChars_1_1 = <{StdPrint.c;38;25_75}> string_1_0 0 (<{StdInt.-_7}> (_SystemArray.size_20 string_1_0) 1) in StdFile.fwrites (<{StdString.+++_11}> (StdList.toString_79 hexChars_1_1) " ") file_1
StdPrint.readline_17 akku_0 !file_1 = let !_x_1_0 = StdFile.freadc file_1, ch_1_1::C = select _x_1_0::_Tuple3 1 in case (case (select _x_1_0::_Tuple3 0) (True -> StdList.isMember_52 ch_1_1 (<{StdList.++}> (_SystemEnum._from_to_7 '0' '9') (_SystemEnum._from_to_7 'A' 'F'))) (False -> False) ) (True -> StdPrint.readline_17 (_predefined._Cons ch_1_1 akku_0) (select _x_1_0::_Tuple3 2)) (False -> _Tuple2 (StdList.reverse akku_0) (select _x_1_0::_Tuple3 2)) 
StdPrint.pair_18 !_x_0 = case _x_0 (_predefined._Nil -> _predefined._Nil) (_predefined._Cons x_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> _predefined._Cons (_Tuple2 x_1_0 '0') _predefined._Nil) (_predefined._Cons y_2_0 rest_2_1 -> _predefined._Cons (_Tuple2 x_1_0 y_2_0) (StdPrint.pair_18 rest_2_1)) ) 
StdPrint.nibbleToInt_20::I !ch_0::C = case (case (StdBool.not (<{StdChar.<_19}> ch_0 'A')) (True -> StdBool.not (<{StdChar.<_19}> 'F' ch_0)) (False -> False) ) (True -> <{StdInt.+_6}> (<{StdInt.-_7}> (StdInt.toInt_20 ch_0) (StdInt.toInt_20 'A')) 10) (False -> case (case (StdBool.not (<{StdChar.<_19}> ch_0 '0')) (True -> StdBool.not (<{StdChar.<_19}> '9' ch_0)) (False -> False) ) (True -> StdChar.digitToInt ch_0) ) 
StdPrint.hexToChar_19::I !_x_0 = case _x_0 (_Tuple2 lowNibble_1_0 highNibble_1_1 -> <{StdInt.+_6}> (StdPrint.nibbleToInt_20 lowNibble_1_0) (<{StdInt.*_9}> 16 (StdPrint.nibbleToInt_20 highNibble_1_1))) 
StdPrint.freadPrintSetup !_vFileEnv_0 !file_1 !env_2 = let !_x_1_0 = StdPrint.readline_17 _predefined._Nil file_1, !chList_1_1 = StdList.map StdPrint.hexToChar_19 (StdPrint.pair_18 (select _x_1_0::_Tuple2 0)), !printSetup_1_2 = osprint.os_stringtoprintsetup (StdList.toString_49 (<{StdOverloaded.toChar;}> StdChar.toChar_21) chList_1_1), !_x_1_3 = osprint.os_printsetupvalid printSetup_1_2 env_2 in case (StdBool.not (select _x_1_3::_Tuple2 0)) (True -> let !_x_3_0 = osprint.os_defaultprintsetup (select _x_1_3::_Tuple2 1) in <{_Tuple4!15}> False (select _x_3_0::_Tuple2 0) (select _x_1_0::_Tuple2 1) (select _x_3_0::_Tuple2 1)) (False -> <{_Tuple4!15}> True printSetup_1_2 (select _x_1_0::_Tuple2 1) (select _x_1_3::_Tuple2 1)) 
StdPrint.stateTransition_22 !_vzero_0 !_x_1 = case _x_1 (_Tuple2 _x_1_0 picture_1_1 -> case _x_1_0 (_Tuple2 _x_2_0 printSetup_2_1 -> case _x_2_0 (_predefined._Cons drawFun_3_0 rest_3_1 -> _Tuple2 (_Tuple2 (StdList.isEmpty rest_3_1) (select _vzero_0::<{StdOverloaded.zero;}> 0)) (_Tuple2 (_Tuple2 rest_3_1 printSetup_2_1) (drawFun_3_0 picture_1_1))) ) ) 
StdPrint.initFun_21 !_vzero_0 prFun_1 _x_2 !print_3 picture_4 = case print_3 (osprint._PrintInfo printSetup_1_0 job_1_1 -> let _x_2_0 = prFun_1 print_3 picture_4, drawFuns_2_1 = select _x_2_0::_Tuple2 0 in _Tuple2 (_Tuple2 (StdList.isEmpty drawFuns_2_1) (select _vzero_0::<{StdOverloaded.zero;}> 0)) (_Tuple2 (_Tuple2 drawFuns_2_1 printSetup_1_0) (select _x_2_0::_Tuple2 1))) 
StdPrint.stateTransition_80 !_x_0 = case _x_0 (_Tuple2 _x_1_0 picture_1_1 -> case _x_1_0 (_Tuple2 _x_2_0 printSetup_2_1 -> case _x_2_0 (_predefined._Cons drawFun_3_0 rest_3_1 -> _Tuple2 (_Tuple2 (StdList.isEmpty rest_3_1) StdIOBasic.zero_21) (_Tuple2 (_Tuple2 rest_3_1 printSetup_2_1) (drawFun_3_0 picture_1_1))) ) ) 
StdPrint.initFun_79 prFun_0 _x_1 !print_2 picture_3 = case print_2 (osprint._PrintInfo printSetup_1_0 job_1_1 -> let _x_2_0 = prFun_0 print_2 picture_3, drawFuns_2_1 = select _x_2_0::_Tuple2 0 in _Tuple2 (_Tuple2 (StdList.isEmpty drawFuns_2_1) StdIOBasic.zero_21) (_Tuple2 (_Tuple2 drawFuns_2_1 printSetup_1_0) (select _x_2_0::_Tuple2 1))) 
StdPrint.print !_vPrintEnvironments_0 !doDialog_1::B !emulateScreen_2::B prFun_3 !printSetup_4 !printEnv_5 = let _x_1_0 = select _vPrintEnvironments_0::<{osprint.PrintEnvironments;}> 0 doDialog_1 emulateScreen_2 0 (StdPrint.initFun_79 prFun_3) StdPrint.stateTransition_80 printSetup_4 printEnv_5, printEnv_1_1 = select _x_1_0::_Tuple2 1 in <{StdPrint._c;81;7_88}> (select _x_1_0::_Tuple2 0) printSetup_4 printEnv_1_1
<{StdPrint._c;81;7_88}> !_x_0 printSetup_1 !printEnv_2 = case _x_0 (osprint.Cancelled _x_1_0 -> <{_Tuple2!3}> printSetup_1 printEnv_2) (osprint.StartedPrinting _x_1_0 -> case _x_1_0 (_Tuple2 _x_2_0 printSetup2_2_1 -> <{_Tuple2!3}> printSetup2_2_1 printEnv_2) ) 
StdPrint.pageTrans_29 updateFunc_0 !_x_1 = case _x_1 (_Tuple2 _x_1_0 picture_1_1 -> case _x_1_0 (_Tuple2 printSetup_2_0 _x_2_1 -> case _x_2_1 (_predefined._Cons clipRect_3_0 rest_3_1 -> _Tuple2 (_Tuple2 (StdList.isEmpty rest_3_1) (<{StdPrint._if;132;27_89}> (StdList.isEmpty rest_3_1) rest_3_1)) (_Tuple2 (_Tuple2 printSetup_2_0 rest_3_1) (StdPicture.appClipPicture (StdPicture.toRegion_49 clipRect_3_0) (updateFunc_0 (StdIOCommon.rectangleToUpdateState clipRect_3_0)) picture_1_1))) ) ) 
<{StdPrint._if;132;27_89}> !_x_0::B rest_1 = case _x_0 (True -> StdIOBasic.zero_21) (_ -> select (StdList.hd rest_1)::StdIOBasic._Rectangle 0)
StdPrint.ceilOfRatio_25::I !num_0::I !denum_1::I = case (<{StdInt.==_16}> (StdInt.rem_28 num_0 denum_1) 0) (True -> <{StdInt./_10}> num_0 denum_1) (False -> <{StdInt.+_6}> (<{StdInt./_10}> num_0 denum_1) 1) 
StdPrint.min_26 !<{_v<_0}> x_1 y_2 = case (select <{_v<_0}>::<{StdOverloaded.<;}> 0 y_2 x_1) (True -> y_2) (False -> x_1) 
StdPrint.min_81::I !x_0::I !y_1::I = case (<{StdInt.<_17}> y_1 x_0) (True -> y_1) (False -> x_0) 
<{StdPrint.c;122;55_23}> hP_0::I wP_1::I columns_2 y2_3::I x2_4::I y1_5::I x1_6::I g_t_7 r_8::I !g_l_9 = <{StdPrint.g_c1;122;57_91}> g_l_9 wP_1 x1_6 r_8 hP_0 y1_5 x2_4 y2_3 columns_2 g_t_7
<{StdPrint.c;122;45_24}> hP_0::I wP_1::I y2_2::I x2_3::I y1_4::I x1_5::I columns_6 !g_l_7 = <{StdPrint.g_c1;122;49_90}> g_l_7 hP_0 wP_1 columns_6 y2_2 x2_3 y1_4 x1_5
<{StdPrint.g_c1;122;57_91}> !g_l_0 wP_1::I x1_2::I r_3::I hP_4::I y1_5::I x2_6::I y2_7::I columns_8 g_t_9 = case g_l_0 (_predefined._Cons c_1_0 g_t_1_1 -> _predefined._Cons (StdIOBasic._Rectangle (StdIOBasic._Point2 (<{StdInt.+_6}> (<{StdInt.*_9}> c_1_0 wP_1) x1_2) (<{StdInt.+_6}> (<{StdInt.*_9}> r_3 hP_4) y1_5)) (StdIOBasic._Point2 (StdPrint.min_81 (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> c_1_0 1) wP_1) x1_2) x2_6) (StdPrint.min_81 (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.+_6}> r_3 1) hP_4) y1_5) y2_7))) (<{StdPrint.c;122;55_23}> hP_4 wP_1 columns_8 y2_7 x2_6 y1_5 x1_2 g_t_9 r_3 g_t_1_1)) (_ -> <{StdPrint.c;122;45_24}> hP_4 wP_1 y2_7 x2_6 y1_5 x1_2 columns_8 g_t_9)
<{StdPrint.g_c1;122;49_90}> !g_l_0 hP_1::I wP_2::I columns_3 y2_4::I x2_5::I y1_6::I x1_7::I = case g_l_0 (_predefined._Cons r_1_0 g_t_1_1 -> <{StdPrint.c;122;55_23}> hP_1 wP_2 columns_3 y2_4 x2_5 y1_6 x1_7 g_t_1_1 r_1_0 columns_3) (_ -> _predefined._Nil)
StdPrint.clipsOfOneRectangle_27 !hP_0::I wP_1::I !rectangle_2 = let _x_1_0::I = commondef.rectangleToRect rectangle_2, y2_1_1::I = select _x_1_0::ostypes._OSRect 3, x2_1_2::I = select _x_1_0::ostypes._OSRect 2, y1_1_3::I = select _x_1_0::ostypes._OSRect 1, x1_1_4 = select _x_1_0::ostypes._OSRect 0 in <{StdPrint.c;122;45_24}> hP_0 wP_1 y2_1_1 x2_1_2 y1_1_3 x1_1_4 (_SystemEnum._from_to_6 0 (<{StdInt.-_7}> (StdPrint.ceilOfRatio_25 (<{StdInt.+_6}> (<{StdInt.-_7}> x2_1_2 x1_1_4) 1) wP_1) 1)) (_SystemEnum._from_to_6 0 (<{StdInt.-_7}> (StdPrint.ceilOfRatio_25 (<{StdInt.+_6}> (<{StdInt.-_7}> y2_1_1 y1_1_3) 1) hP_0) 1))
StdPrint.initState_28 rectangles_0 s_1 !print_2 picture_3 = case print_2 (osprint._PrintInfo printSetup_1_0 job_1_1 -> case job_1_1 (osprint._JobInfo _x_2_0 copies_2_1 -> case _x_2_0 (_Tuple2 first_3_0 last_3_1 -> let _x_4_0 = select (StdPrint.getPageDimensions printSetup_1_0 True)::StdPrint._PageDimensions 0, printedClips_4_1 = StdList.flatten (StdList.repeatn copies_2_1 (<{StdList.%_48}> (StdList.flatten (StdList.map (StdPrint.clipsOfOneRectangle_27 (select _x_4_0::StdIOBasic._Size 1) (select _x_4_0::StdIOBasic._Size 0)) rectangles_0)) (_Tuple2 (<{StdInt.-_7}> first_3_0 1) (<{StdInt.-_7}> last_3_1 1)))) in _Tuple2 (_Tuple2 (StdList.isEmpty printedClips_4_1) (select (StdList.hd printedClips_4_1)::StdIOBasic._Rectangle 0)) (_Tuple2 (_Tuple2 printSetup_1_0 printedClips_4_1) picture_3)) ) ) 
StdPrint.printUpdateFunction !_vPrintEnvironments_0 !doDialog_1::B updateFunc_2 rectangles_3 !printSetup_4 !printEnv_5 = let _x_1_0 = select _vPrintEnvironments_0::<{osprint.PrintEnvironments;}> 0 doDialog_1 True Data.Maybe.Nothing (StdPrint.initState_28 rectangles_3) (StdPrint.pageTrans_29 updateFunc_2) printSetup_4 printEnv_5 in <{_Tuple2!3}> (<{StdPrint._c;98;23_92}> (select _x_1_0::_Tuple2 0) printSetup_4) (select _x_1_0::_Tuple2 1)
<{StdPrint._c;98;23_92}> !_x_0 printSetup_1 = case _x_0 (osprint.StartedPrinting _x_1_0 -> case _x_1_0 (_Tuple2 outPrintSetup_2_0 _x_2_1 -> outPrintSetup_2_0) ) (osprint.Cancelled s_1_0 -> printSetup_1) 
StdPrint.printPagePerPage !_vPrintEnvironments_0 !doDialog_1::B !emulateScreen_2::B x_3 initFun_4 transFun_5 !printSetup_6 !printEnv_7 = select _vPrintEnvironments_0::<{osprint.PrintEnvironments;}> 0 doDialog_1 emulateScreen_2 x_3 initFun_4 transFun_5 printSetup_6 printEnv_7
<{StdPrint.==_8}>::B !_x_0 !_x_1 = case _x_0 (StdPrint._PageDimensions page1_1_0 margins1_1_1 resolution1_1_2 -> case _x_1 (StdPrint._PageDimensions page2_2_0 margins2_2_1 resolution2_2_2 -> case (<{StdIOBasic.==_14}> page1_1_0 page2_2_0) (True -> case (<{StdIOBasic.==_25}> margins1_1_1 margins2_2_1) (True -> <{StdTuple.==_4}> (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdInt.==_16}>)) (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdInt.==_16}>)) resolution1_1_2 resolution2_2_2) (False -> False) ) (False -> False) ) ) 
StdPrint.os_printpageperpage_9 !p1_0::B !p2_1::B !p3_2 p4_3 p5_4 !p6_5 !world_6 = StdFile.accFiles_34 (osprint.os_printpageperpage_5 p1_0 p2_1 p3_2 p4_3 p5_4 p6_5) world_6
StdPrint.os_printsetupdialog_10 !p1_0 !world_1 = StdFile.accFiles_34 (osprint.os_printsetupdialog_6 p1_0) world_1
<{StdPrint.TD;PageDimensions}> _x_0::B = _predefined._Nil


|| Converted Records
:: StdPrint._PageDimensions = {!StdPrint.page, !StdPrint.margins, !StdPrint.resolution}

:: <{StdPrint.gEq_s;}> = {!StdPrint.gEq_s}

:: <{StdPrint.gEq_ss;}> = {!StdPrint.gEq_ss}

:: <{StdPrint.gEq_sss;}> = {!StdPrint.gEq_sss}

:: <{StdPrint.gEq_ssss;}> = {!StdPrint.gEq_ssss}

:: <{StdPrint.gEq_sssss;}> = {!StdPrint.gEq_sssss}

:: <{StdPrint.gEq_ssssss;}> = {!StdPrint.gEq_ssssss}

:: <{StdPrint.gEq_sssssss;}> = {!StdPrint.gEq_sssssss}

:: <{StdPrint.gEq_ssssssss;}> = {!StdPrint.gEq_ssssssss}

:: <{StdPrint.gEq_sssssssss;}> = {!StdPrint.gEq_sssssssss}

:: <{StdPrint.bimap_s;}> = {StdPrint.bimap_s}

:: <{StdPrint.bimap_ss;}> = {StdPrint.bimap_ss}

:: <{StdPrint.bimap_sss;}> = {StdPrint.bimap_sss}

