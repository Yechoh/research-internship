|| ?module? StdPrintText


StdPrintText.fileToCharStream !file_0 = StdPrintText._FileCharStream file_0 0
StdPrintText.charStreamToFile !_x_0 = case _x_0 (StdPrintText._FileCharStream textFile_1_0 pos_1_1 -> textFile_1_0) 
StdPrintText.eachPageDrawFunc_27 _x_0 _x_1 !picture_2 = picture_2
StdPrintText.textRangeFunc_26 !_x_0 picture_1 = case _x_0 (osprint._PrintInfo printSetup_1_0 job_1_1 -> _Tuple3 Data.Maybe.Nothing (_Tuple2 0 (<{StdInt.-_7}> (select (select (StdPrint.getPageDimensions printSetup_1_0 False)::StdPrint._PageDimensions 0)::StdIOBasic._Size 1) 1)) picture_1) 
StdPrintText.evtlUpdateFirstPageState !_vCharStreams_0 !_x_1::B !st_2 = case _x_1 (False -> st_2) (True -> case st_2 (StdPrintText._State file_2_0 buffer_2_1 wasWrapped_2_2 lastCh_2_3 pageNo_2_4 noDoneCopies_2_5 firstPageState_2_6 rO_2_7 -> update st_2::StdPrintText._State [0:select _vCharStreams_0::<{StdPrintText.CharStreams;}> 3 file_2_0,6:Data.Maybe.Just (StdPrintText._FirstPageState buffer_2_1 wasWrapped_2_2 lastCh_2_3)]) ) 
StdPrintText.searchTab_47::I !_vArray_0 str_1 !pos_2::I !max_3::I = case (<{StdInt.==_16}> pos_2 (<{StdInt.+_6}> max_3 1)) (True -> pos_2) (False -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 str_1 pos_2) '\t') (True -> pos_2) (False -> StdPrintText.searchTab_47 _vArray_0 str_1 (<{StdInt.+_6}> pos_2 StdInt.one_11) max_3) ) 
StdPrintText.parts_46 !_vArray_0 !<{_v%_1}> str_2 !min_3::I !max_4::I akku_5 = let nextTabPos_1_0::I = StdPrintText.searchTab_47 _vArray_0 str_2 min_3 max_4 in case (<{StdInt.==_16}> nextTabPos_1_0 (<{StdInt.+_6}> max_4 1)) (True -> StdList.reverse (_predefined._Cons (select <{_v%_1}>::<{StdOverloaded.%;}> 0 str_2 (_Tuple2 min_3 max_4)) akku_5)) (False -> StdPrintText.parts_46 _vArray_0 <{_v%_1}> str_2 (<{StdInt.+_6}> nextTabPos_1_0 StdInt.one_11) max_4 (_predefined._Cons (select <{_v%_1}>::<{StdOverloaded.%;}> 0 str_2 (_Tuple2 min_3 (<{StdInt.-_7}> nextTabPos_1_0 1))) akku_5)) 
StdPrintText.ceil::I !r_0::D = let round_1_0::I = StdInt.toInt_22 r_0 in case (<{StdReal.<_12}> 0.0 (<{StdReal.-_2}> r_0 (StdReal.toReal_13 round_1_0))) (True -> <{StdInt.+_6}> round_1_0 StdInt.one_11) (False -> round_1_0) 
StdPrintText.getBeginningPos_48 tabWidth_0::D !_x_1 !sum_2::I !akku_3 = case _x_1 (_predefined._Cons width_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> <{_Tuple2!3}> (<{StdInt.+_6}> width_1_0 sum_2) (StdList.reverse (_predefined._Cons sum_2 akku_3))) (_ -> StdPrintText.getBeginningPos_48 tabWidth_0 _x_1_1 (StdInt.toInt_22 (<{StdReal.*_4}> (StdReal.toReal_13 (StdPrintText.ceil (<{StdReal.+_1}> (<{StdReal./_5}> (StdReal.toReal_13 (<{StdInt.+_6}> sum_2 (<{StdPrintText._if;655;49_122}> (StdBool.not (<{StdInt.<_17}> 0 width_1_0)) width_1_0))) tabWidth_0) 0.05))) tabWidth_0)) (_predefined._Cons sum_2 akku_3))) 
<{StdPrintText._if;655;49_122}>::I !_x_0::B width_1::I = case _x_0 (True -> 1) (_ -> width_1)
StdPrintText.searchTab_105::I str_0 !pos_1::I !max_2::I = case (<{StdInt.==_16}> pos_1 (<{StdInt.+_6}> max_2 1)) (True -> pos_1) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 str_0 pos_1) '\t') (True -> pos_1) (False -> StdPrintText.searchTab_105 str_0 (<{StdInt.+_6}> pos_1 StdInt.one_11) max_2) ) 
StdPrintText.parts_104 !<{_v%_0}> str_1 !min_2::I !max_3::I akku_4 = let nextTabPos_1_0::I = StdPrintText.searchTab_105 str_1 min_2 max_3 in case (<{StdInt.==_16}> nextTabPos_1_0 (<{StdInt.+_6}> max_3 1)) (True -> StdList.reverse (_predefined._Cons (select <{_v%_0}>::<{StdOverloaded.%;}> 0 str_1 (_Tuple2 min_2 max_3)) akku_4)) (False -> StdPrintText.parts_104 <{_v%_0}> str_1 (<{StdInt.+_6}> nextTabPos_1_0 StdInt.one_11) max_3 (_predefined._Cons (select <{_v%_0}>::<{StdOverloaded.%;}> 0 str_1 (_Tuple2 min_2 (<{StdInt.-_7}> nextTabPos_1_0 1))) akku_4)) 
StdPrintText.parts_106 str_0 !min_1::I !max_2::I akku_3 = let nextTabPos_1_0::I = StdPrintText.searchTab_105 str_0 min_1 max_2 in case (<{StdInt.==_16}> nextTabPos_1_0 (<{StdInt.+_6}> max_2 1)) (True -> StdList.reverse (_predefined._Cons (<{StdString.%_10}> str_0 (_Tuple2 min_1 max_2)) akku_3)) (False -> StdPrintText.parts_106 str_0 (<{StdInt.+_6}> nextTabPos_1_0 StdInt.one_11) max_2 (_predefined._Cons (<{StdString.%_10}> str_0 (_Tuple2 min_1 (<{StdInt.-_7}> nextTabPos_1_0 1))) akku_3)) 
StdPrintText.splitInTabs !str_0 !length_1::I !tabWidth_2::D !font_3 !picture_4 = let strList_1_0 = StdPrintText.parts_106 str_0 0 (<{StdInt.-_7}> length_1 1) _predefined._Nil, _x_1_1 = StdPicture.getFontStringWidths font_3 strList_1_0 picture_4, _x_1_2 = StdPrintText.getBeginningPos_48 tabWidth_2 (select _x_1_1::_Tuple2 0) 0 _predefined._Nil in <{_Tuple2!2}> (_Tuple2 (select _x_1_2::_Tuple2 0) (StdList.zip (_Tuple2 strList_1_0 (select _x_1_2::_Tuple2 1)))) (select _x_1_1::_Tuple2 1)
StdPrintText.drawTabbedString !_x_0 !offset_1::I !y_2::I !picture_3 = case _x_0 (_predefined._Nil -> picture_3) (_predefined._Cons _x_1_0 rest_1_1 -> case _x_1_0 (_Tuple2 subStr_2_0 x_2_1 -> StdPrintText.drawTabbedString rest_1_1 offset_1 y_2 (StdPicture.drawAt_62 (StdIOBasic._Point2 (<{StdInt.+_6}> x_2_1 offset_1) y_2) subStr_2_0 picture_3)) ) 
StdPrintText.changeUnprintable_43::C !_vArray_0 printableSet_1 ch_2::C = case (select _vArray_0::<{_SystemArray.Array;}> 3 printableSet_1 (StdInt.toInt_20 ch_2)) (True -> ch_2) (False -> ' ') 
StdPrintText.readA_42 !_vCharStreams_0 !_vArray_1 printableSet_2 file_3 !_x_4::I akku_5 = case _x_4 (0 -> _Tuple3 akku_5 ' ' file_3) (_ -> let _x_1_0 = select _vCharStreams_0::<{StdPrintText.CharStreams;}> 1 file_3 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> _Tuple3 akku_5 '\r' (select _x_1_0::_Tuple3 2)) (False -> let ch_3_0::C = select _x_1_0::_Tuple3 1 in case (case (<{StdChar.==_18}> ch_3_0 '\n') (True -> True) (False -> case (<{StdChar.==_18}> ch_3_0 '\r') (True -> True) (False -> <{StdChar.==_18}> ch_3_0 '\f') ) ) (True -> _Tuple3 akku_5 ch_3_0 (select _x_1_0::_Tuple3 2)) (False -> StdPrintText.readA_42 _vCharStreams_0 _vArray_1 printableSet_2 (select _x_1_0::_Tuple3 2) (<{StdInt.-_7}> _x_4 StdInt.one_11) (_predefined._Cons (StdPrintText.changeUnprintable_43 _vArray_1 printableSet_2 ch_3_0) akku_5)) ) )
StdPrintText.anon_38::B !ch_0::C = case (<{StdChar.==_18}> ch_0 ' ') (True -> True) (False -> <{StdChar.==_18}> ch_0 '\t') 
StdPrintText.anon_41::B !ch_0::C = <{StdChar.==_18}> ch_0 ' '
StdPrintText.replaceLeadingSpaces_44 !spacePerTab_0::I !l_1 = let !_x_1_0 = StdList.span StdPrintText.anon_41 l_1, !nrLeadingChars_1_1::I = StdList.length_47 (select _x_1_0::_Tuple2 0) in <{StdList.++}> (StdList.repeatn (<{StdInt./_10}> nrLeadingChars_1_1 spacePerTab_0) '\t') (<{StdList.++}> (StdList.repeatn (StdInt.rem_28 nrLeadingChars_1_1 spacePerTab_0) ' ') (select _x_1_0::_Tuple2 1))
<{StdPrintText.cu;560;13_40}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_l_3 = <{StdPrintText.g_c1;560;18_123}> g_l_3 _vone_0 <{_v+_1}> c_l_i_2
<{StdPrintText.g_c1;560;18_123}> !g_l_0 _vone_1 <{_v+_2}> c_l_i_3 = case g_l_0 (_predefined._Cons ch_1_0 g_t_1_1 -> <{StdPrintText.cu;560;13_40}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_t_1_1) (_ -> c_l_i_3)
<{StdPrintText.cu;560;13_39}> !_vArray_0 c_a_1 c_i_2::I !g_l_3 = <{StdPrintText.g_c1;560;18_124}> g_l_3 _vArray_0 c_a_1 c_i_2
<{StdPrintText.g_c1;560;18_124}> !g_l_0 _vArray_1 c_a_2 c_i_3::I = case g_l_0 (_predefined._Cons ch_1_0 g_t_1_1 -> <{StdPrintText.cu;560;13_39}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 ch_1_0) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_t_1_1) (_ -> c_a_2)
StdPrintText.changeUnprintable_108::C !printableSet_0 !ch_1::C = case (_SystemArray.select_35 printableSet_0 (StdInt.toInt_20 ch_1)) (True -> ch_1) (False -> ' ') 
StdPrintText.readA_107 !_vCharStreams_0 printableSet_1 file_2 !_x_3::I akku_4 = case _x_3 (0 -> _Tuple3 akku_4 ' ' file_2) (_ -> let _x_1_0 = select _vCharStreams_0::<{StdPrintText.CharStreams;}> 1 file_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> _Tuple3 akku_4 '\r' (select _x_1_0::_Tuple3 2)) (False -> let ch_3_0::C = select _x_1_0::_Tuple3 1 in case (case (<{StdChar.==_18}> ch_3_0 '\n') (True -> True) (False -> case (<{StdChar.==_18}> ch_3_0 '\r') (True -> True) (False -> <{StdChar.==_18}> ch_3_0 '\f') ) ) (True -> _Tuple3 akku_4 ch_3_0 (select _x_1_0::_Tuple3 2)) (False -> StdPrintText.readA_107 _vCharStreams_0 printableSet_1 (select _x_1_0::_Tuple3 2) (<{StdInt.-_7}> _x_3 StdInt.one_11) (_predefined._Cons (StdPrintText.changeUnprintable_108 printableSet_1 ch_3_0) akku_4)) ) )
<{StdPrintText.cu;560;13_109}>::I !<{_v+_0}> c_l_i_1::I !g_l_2 = <{StdPrintText.g_c1;560;18_125}> g_l_2 <{_v+_0}> c_l_i_1
<{StdPrintText.g_c1;560;18_125}>::I !g_l_0 <{_v+_1}> c_l_i_2::I = case g_l_0 (_predefined._Cons ch_1_0 g_t_1_1 -> <{StdPrintText.cu;560;13_109}> <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_2 StdInt.one_11) g_t_1_1) (_ -> c_l_i_2)
<{StdPrintText.cu;560;13_110}> !c_a_0 c_i_1::I !g_l_2 = <{StdPrintText.g_c1;560;18_126}> g_l_2 c_a_0 c_i_1
<{StdPrintText.g_c1;560;18_126}> !g_l_0 !c_a_1 c_i_2::I = case g_l_0 (_predefined._Cons ch_1_0 g_t_1_1 -> <{StdPrintText.cu;560;13_110}> (_SystemArray.update_21 c_a_1 c_i_2 ch_1_0) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_t_1_1) (_ -> c_a_1)
<{StdPrintText.cu;560;13_111}>::I !c_l_i_0::I !g_l_1 = <{StdPrintText.g_c1;560;18_127}> g_l_1 c_l_i_0
<{StdPrintText.g_c1;560;18_127}>::I !g_l_0 !c_l_i_1::I = case g_l_0 (_predefined._Cons ch_1_0 g_t_1_1 -> <{StdPrintText.cu;560;13_111}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) g_t_1_1) (_ -> c_l_i_1)
StdPrintText.freadLineP !_vCharStreams_0 !file_1 !printableSet_2 !lastCh_3::C !max_4::I !spacePerTab_5::I = let _x_1_0 = select _vCharStreams_0::<{StdPrintText.CharStreams;}> 1 file_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple3!7}> "" '\r' (select _x_1_0::_Tuple3 2)) (False -> let ch_3_0::C = select _x_1_0::_Tuple3 1 in case (case (<{StdChar.==_18}> lastCh_3 '\r') (True -> <{StdChar.==_18}> ch_3_0 '\n') (False -> False) ) (True -> StdPrintText.freadLineP _vCharStreams_0 (select _x_1_0::_Tuple3 2) printableSet_2 ' ' max_4 spacePerTab_5) (False -> case (case (<{StdChar.==_18}> ch_3_0 '\n') (True -> True) (False -> case (<{StdChar.==_18}> ch_3_0 '\r') (True -> True) (False -> <{StdChar.==_18}> ch_3_0 '\f') ) ) (True -> <{_Tuple3!7}> "" ch_3_0 (select _x_1_0::_Tuple3 2)) (False -> let file_6_0 = select _x_1_0::_Tuple3 2, _x_6_1 = StdPrintText.readA_107 _vCharStreams_0 printableSet_2 file_6_0 (<{StdInt.-_7}> max_4 StdInt.one_11) _predefined._Nil, lastCh2_6_2::C = select _x_6_1::_Tuple3 1, charList3_6_3 = StdPrintText.replaceLeadingSpaces_44 spacePerTab_5 (_predefined._Cons ch_3_0 (StdList.reverse (<{StdPrintText._if;556;19_129}> (StdPrintText._f128_128 (<{StdChar.==_18}> lastCh2_6_2 '\n') lastCh2_6_2) charList_6_4))), charList_6_4 = select _x_6_1::_Tuple3 0 in <{_Tuple3!7}> (<{StdPrintText.cu;560;13_110}> (_SystemArray._createArray_16 (<{StdPrintText.cu;560;13_111}> 0 charList3_6_3)) 0 charList3_6_3) lastCh2_6_2 (select _x_6_1::_Tuple3 2)) ) ) 
<{StdPrintText._if;556;19_129}> !_x_0::B !charList_1 = case _x_0 (True -> StdList.dropWhile StdPrintText.anon_38 charList_1) (_ -> charList_1)
StdPrintText._f128_128::B !_x_0::B lastCh2_1::C = case _x_0 (True -> True) (_ -> case (<{StdChar.==_18}> lastCh2_1 '\r') (True -> True) (False -> <{StdChar.==_18}> lastCh2_1 '\f') )
StdPrintText.skipLine_37 !_vCharStreams_0 file_1 = let _x_1_0 = select _vCharStreams_0::<{StdPrintText.CharStreams;}> 1 file_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> _Tuple2 '\r' (_Tuple2 True (select _x_1_0::_Tuple3 2))) (False -> let char_3_0::C = select _x_1_0::_Tuple3 1 in case (case (<{StdChar.==_18}> char_3_0 '\n') (True -> True) (False -> case (<{StdChar.==_18}> char_3_0 '\r') (True -> True) (False -> <{StdChar.==_18}> char_3_0 '\f') ) ) (True -> _Tuple2 char_3_0 (_Tuple2 False (select _x_1_0::_Tuple3 2))) (False -> StdPrintText.skipLine_37 _vCharStreams_0 (select _x_1_0::_Tuple3 2)) ) 
StdPrintText.evtlSkipLine !_vCharStreams_0 !_x_1::B !file_2 = case _x_1 (False -> <{_Tuple2!1}> ' ' (select _vCharStreams_0::<{StdPrintText.CharStreams;}> 0 file_2)) (_ -> StdPrintText.skipLine_37 _vCharStreams_0 file_2)
StdPrintText.continuation_36 !_vCharStreams_0 st_1 rO_2 y_3 picture_4 = let _x_1_0::C = StdPrintText.freadLineP _vCharStreams_0 (select st_1::StdPrintText._State 0) (select rO_2::StdPrintText._ReadOnly 0) (select st_1::StdPrintText._State 3) (select rO_2::StdPrintText._ReadOnly 7) (select rO_2::StdPrintText._ReadOnly 5), lastCh_1_1 = select _x_1_0::_Tuple3 1, skipToEoln_1_2 = StdBool.not (StdPrintText._f130_130 (<{StdChar.==_18}> lastCh_1_1 '\n') lastCh_1_1), file_1_3::B = select _x_1_0::_Tuple3 2, _x_1_4::C = StdPrintText.evtlSkipLine _vCharStreams_0 skipToEoln_1_2 file_1_3, lastCh2_1_5 = select _x_1_4::_Tuple2 0 in _Tuple2 (update st_1::StdPrintText._State [0:select (select _x_1_4::_Tuple2 1)::_Tuple2 1,1:select _x_1_0::_Tuple3 0,2:False,3:<{StdPrintText._if;517;69_131}> skipToEoln_1_2 lastCh2_1_5 lastCh_1_1]) picture_4
<{StdPrintText._if;517;69_131}>::C !skipToEoln_0::B lastCh2_1::C lastCh_2::C = case skipToEoln_0 (True -> lastCh2_1) (_ -> lastCh_2)
StdPrintText._f130_130::B !_x_0::B lastCh_1::C = case _x_0 (True -> True) (_ -> case (<{StdChar.==_18}> lastCh_1 '\r') (True -> True) (False -> <{StdChar.==_18}> lastCh_1 '\f') )
StdPrintText.drawLineNoWrap !_vCharStreams_0 !st_1 !reallyDraw_2::B y_3::I picture_4 = case st_1 (StdPrintText._State file_1_0 buffer_1_1 wasWrapped_1_2 lastCh_1_3 pageNo_1_4 noDoneCopies_1_5 firstPageState_1_6 rO_1_7 -> case reallyDraw_2 (True -> let _x_3_0 = StdPrintText.splitInTabs buffer_1_1 (_SystemArray.size_20 buffer_1_1) (select rO_1_7::StdPrintText._ReadOnly 6) (select rO_1_7::StdPrintText._ReadOnly 9) picture_4 in StdPrintText.continuation_36 _vCharStreams_0 st_1 rO_1_7 y_3 (StdPrintText.drawTabbedString (select (select _x_3_0::_Tuple2 0)::_Tuple2 1) 0 y_3 (select _x_3_0::_Tuple2 1))) (False -> StdPrintText.continuation_36 _vCharStreams_0 st_1 rO_1_7 y_3 picture_4) ) 
<{StdPrintText.c;613;29_45}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = <{StdPrintText.g_c1;613;36_133}> (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) g_a_3 g_i_1 _vArray_0 g_s_2
<{StdPrintText.g_c1;613;36_133}> !_x_0::B g_a_1 g_i_2::I _vArray_3 g_s_4::I = case _x_0 (True -> <{StdPrintText.g_c2;613;36_132}> (select _vArray_3::<{_SystemArray.Array;}> 6 g_a_1 g_i_2) _vArray_3 g_i_2 g_s_4 g_a_1) (_ -> _predefined._Nil)
<{StdPrintText.g_c2;613;36_132}> !_x_0 _vArray_1 g_i_2::I g_s_3::I g_a_4 = case _x_0 (_Tuple2 tab_1_0 g_a_1_1 -> case (<{StdChar.==_18}> tab_1_0 '\t') (True -> _predefined._Cons tab_1_0 (<{StdPrintText.c;613;29_45}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_1_1)) ) (_ -> <{StdPrintText.c;613;29_45}> _vArray_1 (<{StdInt.+_6}> g_i_2 StdInt.one_11) g_s_3 g_a_4)
StdPrintText.splitLoop !str_0 !noOfPix_1::I !fit_2::I !doesntFit_3::I !tabWidth_4::D !font_5 !pict_6 = case (<{StdInt.==_16}> (<{StdInt.+_6}> fit_2 StdInt.one_11) doesntFit_3) (True -> <{_Tuple2!3}> fit_2 pict_6) (False -> let middle_2_0 = <{StdInt./_10}> (<{StdInt.+_6}> fit_2 doesntFit_3) 2, _x_2_1::I = StdPrintText.splitInTabs str_0 middle_2_0 tabWidth_4 font_5 pict_6 in case (<{StdInt.<_17}> noOfPix_1 (select (select _x_2_1::_Tuple2 0)::_Tuple2 0)) (True -> StdPrintText.splitLoop str_0 noOfPix_1 fit_2 middle_2_0 tabWidth_4 font_5 (select _x_2_1::_Tuple2 1)) (False -> StdPrintText.splitLoop str_0 noOfPix_1 middle_2_0 doesntFit_3 tabWidth_4 font_5 (select _x_2_1::_Tuple2 1)) ) 
<{StdPrintText.c;613;29_112}> !g_i_0::I !g_s_1::I g_a_2 = <{StdPrintText.g_c1;613;36_135}> (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) g_a_2 g_i_0 g_s_1
<{StdPrintText.g_c1;613;36_135}> !_x_0::B g_a_1 g_i_2::I g_s_3::I = case _x_0 (True -> <{StdPrintText.g_c2;613;36_134}> (_SystemArray.uselect_22 g_a_1 g_i_2) g_i_2 g_s_3 g_a_1) (_ -> _predefined._Nil)
<{StdPrintText.g_c2;613;36_134}> !_x_0 g_i_1::I g_s_2::I g_a_3 = case _x_0 (_Tuple2 tab_1_0 g_a_1_1 -> case (<{StdChar.==_18}> tab_1_0 '\t') (True -> _predefined._Cons tab_1_0 (<{StdPrintText.c;613;29_112}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_1_1)) ) (_ -> <{StdPrintText.c;613;29_112}> (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_3)
StdPrintText.splitString !str_0 !noOfPix_1::I !maxCharWidth_2::I !tabWidth_3::D !font_4 !pict_5 = let _x_1_0::I = _SystemArray.usize_23 str_0, noOfTabs_1_1 = StdList.length_47 (<{StdPrintText.c;613;29_112}> 0 (<{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1) (select _x_1_0::_Tuple2 1)) in case (StdBool.not (<{StdInt.<_17}> noOfPix_1 (<{StdInt.+_6}> (<{StdInt.*_9}> (<{StdInt.-_7}> (_SystemArray.size_20 str_0) noOfTabs_1_1) maxCharWidth_2) (<{StdInt.*_9}> noOfTabs_1_1 (StdPrintText.ceil tabWidth_3))))) (True -> <{_Tuple2!3}> (_SystemArray.size_20 str_0) pict_5) (False -> let _x_3_0 = StdPrintText.splitInTabs str_0 (_SystemArray.size_20 str_0) tabWidth_3 font_4 pict_5 in case (StdBool.not (<{StdInt.<_17}> noOfPix_1 (select (select _x_3_0::_Tuple2 0)::_Tuple2 0))) (True -> <{_Tuple2!3}> (_SystemArray.size_20 str_0) (select _x_3_0::_Tuple2 1)) (False -> StdPrintText.splitLoop str_0 noOfPix_1 (StdOrdList.maxList_15 (_predefined._Cons 0 (_predefined._Cons (<{StdInt./_10}> (<{StdInt.-_7}> noOfPix_1 (<{StdInt.*_9}> noOfTabs_1_1 (StdPrintText.ceil tabWidth_3))) maxCharWidth_2) _predefined._Nil))) (_SystemArray.size_20 str_0) tabWidth_3 font_4 (select _x_3_0::_Tuple2 1)) ) 
StdPrintText.continuation_35 !_vCharStreams_0 rO_1 buffer_2 !st_3 !fittingLength_4::I y_5 picture_6 = case (<{StdInt.<_17}> fittingLength_4 (_SystemArray.size_20 (select st_3::StdPrintText._State 1))) (True -> let ch_2_0::C = select st_3::StdPrintText._State 3 in case (case (<{StdChar.==_18}> ch_2_0 '\n') (True -> True) (False -> case (<{StdChar.==_18}> ch_2_0 '\r') (True -> True) (False -> <{StdChar.==_18}> ch_2_0 '\f') ) ) (True -> _Tuple2 (update st_3::StdPrintText._State [1:<{StdString.%_10}> buffer_2 (_Tuple2 fittingLength_4 (<{StdInt.-_7}> (_SystemArray.size_20 buffer_2) 1)),2:True]) picture_6) (False -> let smallerBuffer_4_0 = <{StdString.%_10}> buffer_2 (_Tuple2 fittingLength_4 (<{StdInt.-_7}> (_SystemArray.size_20 buffer_2) 1)), _x_4_1 = StdPrintText.freadLineP _vCharStreams_0 (select st_3::StdPrintText._State 0) (select rO_1::StdPrintText._ReadOnly 0) (select st_3::StdPrintText._State 3) (<{StdInt.-_7}> (select rO_1::StdPrintText._ReadOnly 7) (_SystemArray.size_20 smallerBuffer_4_0)) (select rO_1::StdPrintText._ReadOnly 5) in _Tuple2 (update st_3::StdPrintText._State [0:select _x_4_1::_Tuple3 2,1:<{StdString.+++_11}> smallerBuffer_4_0 (select _x_4_1::_Tuple3 0),2:True,3:select _x_4_1::_Tuple3 1]) picture_6) ) (False -> let _x_2_0 = StdPrintText.freadLineP _vCharStreams_0 (select st_3::StdPrintText._State 0) (select rO_1::StdPrintText._ReadOnly 0) (select st_3::StdPrintText._State 3) (select rO_1::StdPrintText._ReadOnly 7) (select rO_1::StdPrintText._ReadOnly 5) in _Tuple2 (update st_3::StdPrintText._State [0:select _x_2_0::_Tuple3 2,1:select _x_2_0::_Tuple3 0,2:False,3:select _x_2_0::_Tuple3 1]) picture_6) 
StdPrintText.drawLineWrap !_vCharStreams_0 !st_1 !reallyDraw_2::B y_3::I !picture_4 = case st_1 (StdPrintText._State file_1_0 buffer_1_1 wasWrapped_1_2 lastCh_1_3 pageNo_1_4 noDoneCopies_1_5 firstPageState_1_6 rO_1_7 -> case reallyDraw_2 (True -> let _x_3_0::I = StdPrintText.splitString buffer_1_1 (select rO_1_7::StdPrintText._ReadOnly 7) (select rO_1_7::StdPrintText._ReadOnly 8) (select rO_1_7::StdPrintText._ReadOnly 6) (select rO_1_7::StdPrintText._ReadOnly 9) picture_4, fittingLength_3_1 = select _x_3_0::_Tuple2 0, picture_3_2 = select _x_3_0::_Tuple2 1, _x_3_3 = StdPrintText.splitInTabs buffer_1_1 fittingLength_3_1 (select rO_1_7::StdPrintText._ReadOnly 6) (select rO_1_7::StdPrintText._ReadOnly 9) picture_3_2, _x_3_4::I = select _x_3_3::_Tuple2 0, width_3_5 = select _x_3_4::_Tuple2 0 in StdPrintText.continuation_35 _vCharStreams_0 rO_1_7 buffer_1_1 st_1 fittingLength_3_1 y_3 (StdPrintText.drawTabbedString (select _x_3_4::_Tuple2 1) (<{StdPrintText._if;459;20_137}> (StdPrintText._f136_136 wasWrapped_1_2 rO_1_7) rO_1_7 width_3_5) y_3 (select _x_3_3::_Tuple2 1))) (False -> let _x_3_0 = StdPrintText.splitString buffer_1_1 (select rO_1_7::StdPrintText._ReadOnly 7) (select rO_1_7::StdPrintText._ReadOnly 8) (select rO_1_7::StdPrintText._ReadOnly 6) (select rO_1_7::StdPrintText._ReadOnly 9) picture_4 in StdPrintText.continuation_35 _vCharStreams_0 rO_1_7 buffer_1_1 st_1 (select _x_3_0::_Tuple2 0) y_3 (select _x_3_0::_Tuple2 1)) ) 
<{StdPrintText._if;459;20_137}>::I !_x_0::B rO_1 width_2::I = case _x_0 (True -> <{StdInt.-_7}> (<{StdInt.-_7}> (select rO_1::StdPrintText._ReadOnly 7) width_2) 1) (_ -> 0)
StdPrintText._f136_136::B !wasWrapped_0::B rO_1 = case wasWrapped_0 (True -> <{StdInt.==_16}> (select rO_1::StdPrintText._ReadOnly 4) 2) (_ -> False)
StdPrintText.continuation_34 !_vCharStreams_0 reallyDraw_1::B topBsLn_2::I rO_3 lastCh_4::C !_x_5 = case _x_5 (_Tuple2 st_1_0 picture_1_1 -> case st_1_0 (StdPrintText._State file_2_0 buffer_2_1 wasWrapped_2_2 lastCh_2_3 pageNo_2_4 noDoneCopies_2_5 firstPageState_2_6 rO_2_7 -> let _x_3_0 = select _vCharStreams_0::<{StdPrintText.CharStreams;}> 0 file_2_0 in case (case (<{StdInt.==_16}> (_SystemArray.size_20 buffer_2_1) 0) (True -> select _x_3_0::_Tuple2 0) (False -> False) ) (True -> _Tuple3 True (update st_1_0::StdPrintText._State [0:select _x_3_0::_Tuple2 1]) picture_1_1) (False -> case (<{StdChar.==_18}> lastCh_4 '\f') (True -> _Tuple3 False (update st_1_0::StdPrintText._State [0:select _x_3_0::_Tuple2 1]) picture_1_1) (False -> let nextBsLn_6_0::I = <{StdInt.+_6}> topBsLn_2 (select rO_3::StdPrintText._ReadOnly 10) in case (<{StdInt.<_17}> (select rO_3::StdPrintText._ReadOnly 2) nextBsLn_6_0) (True -> _Tuple3 False (update st_1_0::StdPrintText._State [0:select _x_3_0::_Tuple2 1]) picture_1_1) (False -> StdPrintText.drawLines _vCharStreams_0 (update st_1_0::StdPrintText._State [0:select _x_3_0::_Tuple2 1]) reallyDraw_1 nextBsLn_6_0 picture_1_1) ) ) ) ) 
StdPrintText.drawLines !_vCharStreams_0 !st_1 !reallyDraw_2::B topBsLn_3::I picture_4 = case st_1 (StdPrintText._State file_1_0 buffer_1_1 wasWrapped_1_2 lastCh_1_3 pageNo_1_4 noDoneCopies_1_5 firstPageState_1_6 rO_1_7 -> case (<{StdInt.==_16}> (select rO_1_7::StdPrintText._ReadOnly 4) 0) (True -> StdPrintText.continuation_34 _vCharStreams_0 reallyDraw_2 topBsLn_3 rO_1_7 lastCh_1_3 (StdPrintText.drawLineNoWrap _vCharStreams_0 st_1 reallyDraw_2 topBsLn_3 picture_4)) (False -> StdPrintText.continuation_34 _vCharStreams_0 reallyDraw_2 topBsLn_3 rO_1_7 lastCh_1_3 (StdPrintText.drawLineWrap _vCharStreams_0 st_1 reallyDraw_2 topBsLn_3 picture_4)) ) 
StdPrintText.restore_position !_vCharStreams_0 !st_1 = let _x_1_0 = Data.Maybe.fromJust (select st_1::StdPrintText._State 6) in update st_1::StdPrintText._State [0:select _vCharStreams_0::<{StdPrintText.CharStreams;}> 2 (select st_1::StdPrintText._State 0),1:select _x_1_0::StdPrintText._FirstPageState 0,2:select _x_1_0::StdPrintText._FirstPageState 1,3:select _x_1_0::StdPrintText._FirstPageState 2,4:select (select (select (select (select st_1::StdPrintText._State 7)::StdPrintText._ReadOnly 11)::osprint._PrintInfo 1)::osprint._JobInfo 0)::_Tuple2 0]
StdPrintText.continuation_33 !_vCharStreams_0 pageNo_1::I rO_2 !st_3 picture_4 <{from`_5}>::I to_6::I !page_7::B = let picture_1_0 = StdFunc.seq (_predefined._Cons (StdPicture.setPenColour StdPictureDef.Black) (_predefined._Cons (StdPicture.setPenFont (select rO_2::StdPrintText._ReadOnly 9)) _predefined._Nil)) picture_4, _x_1_1 = StdPrintText.drawLines _vCharStreams_0 st_3 page_7 (select rO_2::StdPrintText._ReadOnly 1) picture_1_0 in case (case (select _x_1_1::_Tuple3 0) (True -> True) (False -> <{StdInt.==_16}> pageNo_1 to_6) ) (True -> let st_3_0 = select _x_1_1::_Tuple3 1 in case (<{StdInt.==_16}> (<{StdInt.+_6}> (select st_3_0::StdPrintText._State 5) 1) (select (select (select rO_2::StdPrintText._ReadOnly 11)::osprint._PrintInfo 1)::osprint._JobInfo 1)) (True -> _Tuple2 (_Tuple2 True (StdIOBasic._Point2 0 0)) (_Tuple2 st_3_0 (select _x_1_1::_Tuple3 2))) (False -> let st_5_0 = StdPrintText.restore_position _vCharStreams_0 st_3_0 in _Tuple2 (_Tuple2 False (StdIOBasic._Point2 0 0)) (_Tuple2 (update st_5_0::StdPrintText._State [5:<{StdInt.+_6}> (select st_5_0::StdPrintText._State 5) StdInt.one_11]) (select _x_1_1::_Tuple3 2))) ) (False -> case page_7 (True -> let st_4_0 = select _x_1_1::_Tuple3 1 in _Tuple2 (_Tuple2 False (StdIOBasic._Point2 0 0)) (_Tuple2 (update st_4_0::StdPrintText._State [4:<{StdInt.+_6}> (select st_4_0::StdPrintText._State 4) StdInt.one_11]) (select _x_1_1::_Tuple3 2))) (False -> let st_4_0 = select _x_1_1::_Tuple3 1 in StdPrintText.pageTransition _vCharStreams_0 (_Tuple2 (update st_4_0::StdPrintText._State [4:<{StdInt.+_6}> (select st_4_0::StdPrintText._State 4) StdInt.one_11]) (select _x_1_1::_Tuple3 2))) ) 
StdPrintText.pageTransition !_vCharStreams_0 !_x_1 = case _x_1 (_Tuple2 st_1_0 picture_1_1 -> case st_1_0 (StdPrintText._State file_2_0 buffer_2_1 wasWrapped_2_2 lastCh_2_3 pageNo_2_4 noDoneCopies_2_5 firstPageState_2_6 rO_2_7 -> let _x_3_0::I = select (select (select rO_2_7::StdPrintText._ReadOnly 11)::osprint._PrintInfo 1)::osprint._JobInfo 0, <{from`_3_1}>::B = select _x_3_0::_Tuple2 0, page_3_2::I = StdPrintText._f138_138 (StdBool.not (<{StdInt.<_17}> pageNo_2_4 <{from`_3_1}>)) to_3_3 pageNo_2_4, to_3_3 = select _x_3_0::_Tuple2 1 in case page_3_2 (True -> StdPrintText.continuation_33 _vCharStreams_0 pageNo_2_4 rO_2_7 (StdPrintText.evtlUpdateFirstPageState _vCharStreams_0 (StdPrintText._f139_139 (<{StdInt.==_16}> pageNo_2_4 <{from`_3_1}>) noDoneCopies_2_5) st_1_0) (select rO_2_7::StdPrintText._ReadOnly 3 (select rO_2_7::StdPrintText._ReadOnly 12) pageNo_2_4 picture_1_1) <{from`_3_1}> to_3_3 page_3_2) (False -> StdPrintText.continuation_33 _vCharStreams_0 pageNo_2_4 rO_2_7 (StdPrintText.evtlUpdateFirstPageState _vCharStreams_0 (StdPrintText._f140_140 (<{StdInt.==_16}> pageNo_2_4 <{from`_3_1}>) noDoneCopies_2_5) st_1_0) picture_1_1 <{from`_3_1}> to_3_3 page_3_2) ) ) 
StdPrintText._f140_140::B !_x_0::B noDoneCopies_1::I = case _x_0 (True -> <{StdInt.==_16}> noDoneCopies_1 0) (_ -> False)
StdPrintText._f139_139::B !_x_0::B noDoneCopies_1::I = case _x_0 (True -> <{StdInt.==_16}> noDoneCopies_1 0) (_ -> False)
StdPrintText._f138_138::B !_x_0::B to_1::I pageNo_2::I = case _x_0 (True -> StdBool.not (<{StdInt.<_17}> to_1 pageNo_2)) (_ -> False)
<{StdPrintText.c;264;44_30}> !<{_v<_0}> !_vtoChar_1 !_vone_2 !<{_v+_3}> i_4 g_s_5 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_5 i_4)) (True -> _predefined._Cons (select _vtoChar_1::<{StdOverloaded.toChar;}> 0 i_4) (<{StdPrintText.c;264;44_30}> <{_v<_0}> _vtoChar_1 _vone_2 <{_v+_3}> (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_4 (select _vone_2::<{StdOverloaded.one;}> 0)) g_s_5)) (False -> _predefined._Nil) 
<{StdPrintText.cu;266;23_32}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_l_3 = <{StdPrintText.g_c1;266;31_141}> g_l_3 _vone_0 <{_v+_1}> c_l_i_2
<{StdPrintText.g_c1;266;31_141}> !g_l_0 _vone_1 <{_v+_2}> c_l_i_3 = case g_l_0 (_predefined._Cons width_1_0 g_t_1_1 -> <{StdPrintText.cu;266;23_32}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_t_1_1) (_ -> c_l_i_3)
<{StdPrintText.cu;266;23_31}> !_vArray_0 c_a_1 c_i_2::I !g_l_3 = <{StdPrintText.g_c1;266;31_142}> g_l_3 _vArray_0 c_a_1 c_i_2
<{StdPrintText.g_c1;266;31_142}> !g_l_0 _vArray_1 c_a_2 c_i_3::I = case g_l_0 (_predefined._Cons width_1_0 g_t_1_1 -> <{StdPrintText.cu;266;23_31}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (<{StdInt.<_17}> 0 width_1_0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_t_1_1) (_ -> c_a_2)
<{StdPrintText.c;264;44_113}> !_vtoChar_0 !_vone_1 !<{_v+_2}> !i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 i_3)) (True -> _predefined._Cons (select _vtoChar_0::<{StdOverloaded.toChar;}> 0 i_3) (<{StdPrintText.c;264;44_113}> _vtoChar_0 _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_4)) (False -> _predefined._Nil) 
<{StdPrintText.cu;266;23_114}>::I !<{_v+_0}> c_l_i_1::I !g_l_2 = <{StdPrintText.g_c1;266;31_143}> g_l_2 <{_v+_0}> c_l_i_1
<{StdPrintText.g_c1;266;31_143}>::I !g_l_0 <{_v+_1}> c_l_i_2::I = case g_l_0 (_predefined._Cons width_1_0 g_t_1_1 -> <{StdPrintText.cu;266;23_114}> <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_2 StdInt.one_11) g_t_1_1) (_ -> c_l_i_2)
<{StdPrintText.cu;266;23_115}> !c_a_0 c_i_1::I !g_l_2 = <{StdPrintText.g_c1;266;31_144}> g_l_2 c_a_0 c_i_1
<{StdPrintText.g_c1;266;31_144}> !g_l_0 !c_a_1 c_i_2::I = case g_l_0 (_predefined._Cons width_1_0 g_t_1_1 -> <{StdPrintText.cu;266;23_115}> (_SystemArray.update_37 c_a_1 c_i_2 (<{StdInt.<_17}> 0 width_1_0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_t_1_1) (_ -> c_a_1)
<{StdPrintText.c;264;44_116}> !_vone_0 !<{_v+_1}> !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> _predefined._Cons (StdChar.toChar_21 i_2) (<{StdPrintText.c;264;44_116}> _vone_0 <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_2 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_3)) (False -> _predefined._Nil) 
<{StdPrintText.cu;266;23_117}>::I !c_l_i_0::I !g_l_1 = <{StdPrintText.g_c1;266;31_145}> g_l_1 c_l_i_0
<{StdPrintText.g_c1;266;31_145}>::I !g_l_0 !c_l_i_1::I = case g_l_0 (_predefined._Cons width_1_0 g_t_1_1 -> <{StdPrintText.cu;266;23_117}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) g_t_1_1) (_ -> c_l_i_1)
<{StdPrintText.c;264;44_118}> !<{_v+_0}> !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> _predefined._Cons (StdChar.toChar_21 i_1) (<{StdPrintText.c;264;44_118}> <{_v+_0}> (select <{_v+_0}>::<{StdOverloaded.+;}> 0 i_1 StdInt.one_11) g_s_2)) (False -> _predefined._Nil) 
<{StdPrintText.c;264;44_119}> !i_0::I !g_s_1::I = case (StdBool.not (<{StdInt.<_17}> g_s_1 i_0)) (True -> _predefined._Cons (StdChar.toChar_21 i_0) (<{StdPrintText.c;264;44_119}> (<{StdInt.+_6}> i_0 StdInt.one_11) g_s_1)) (False -> _predefined._Nil) 
StdPrintText.initState !_vCharStreams_0 !_x_1 !print_2 picture_3 = case _x_1 (_Tuple6 wrapMode_1_0 fontDef_1_1 spacePerTab_1_2 textRangeFunc_1_3 eachPageDrawFunc_1_4 file_1_5 -> case print_2 (osprint._PrintInfo printSetup_2_0 job_2_1 -> case job_2_1 (osprint._JobInfo _x_3_0 copies_3_1 -> case _x_3_0 (_Tuple2 from`_4_0 to_4_1 -> let _x_5_0 = textRangeFunc_1_3 print_2 picture_3, _x_5_1 = select _x_5_0::_Tuple3 1, top_5_2::I = select _x_5_1::_Tuple2 0, bot_5_3::I = select _x_5_1::_Tuple2 1, _x_5_4 = StdPrint.getPageDimensions printSetup_2_0 False, _x_5_5 = select _x_5_4::StdPrint._PageDimensions 0 in case (case (<{StdInt.<_17}> top_5_2 0) (True -> True) (False -> case (<{StdInt.<_17}> (select _x_5_5::StdIOBasic._Size 1) bot_5_3) (True -> True) (False -> <{StdInt.<_17}> bot_5_3 top_5_2) ) ) (True -> StdMisc.abort (<{StdString.+++_11}> "\nStdPrintText: wrong top and bottom values returned by function, which is the\n" "fourth parameter of printText.\n")) (False -> let picture_7_0::I = select _x_5_0::_Tuple3 2, _x_7_1::I = StdPicture.openFont fontDef_1_1 picture_7_0, _x_7_2::I = select _x_7_1::_Tuple2 0, font_7_3::I = select _x_7_2::_Tuple2 1, picture_7_4 = select _x_7_1::_Tuple2 1, _x_7_5 = StdPicture.getFontMetrics font_7_3 picture_7_4, _x_7_6 = select _x_7_5::_Tuple2 0, fAscent_7_7 = select _x_7_6::StdPictureDef._FontMetrics 0, fDescent_7_8 = select _x_7_6::StdPictureDef._FontMetrics 1, fLeading_7_9 = select _x_7_6::StdPictureDef._FontMetrics 2, lineHeight_7_10 = <{StdInt.+_6}> (<{StdInt.+_6}> fAscent_7_7 fDescent_7_8) fLeading_7_9 in case (<{StdInt.<_17}> (<{StdInt.+_6}> (<{StdInt.-_7}> bot_5_3 top_5_2) 1) lineHeight_7_10) (True -> StdMisc.abort (<{StdString.+++_11}> "\nStdPrintText: wrong top and bottom values returned by function, which is the\n" "fourth parameter of printText: range for text is too small.\n")) (False -> let width_9_0::I = select _x_5_5::StdIOBasic._Size 0 in case (case (case (StdBool.not (<{StdChar.==_18}> '\n' '\n')) (True -> StdBool.not (<{StdChar.==_18}> '\n' '\r')) (False -> False) ) (True -> True) (False -> <{StdInt.<_17}> width_9_0 0) ) (True -> StdMisc.abort "StdPrintText.icl: I have a bug") (False -> let picture_11_0 = select _x_7_5::_Tuple2 1, _x_11_1 = StdPicture.getFontStringWidth font_7_3 (StdList.toString_79 (StdCharList.spaces 100)) picture_11_0, picture_11_2 = select _x_11_1::_Tuple2 1, _x_11_3 = StdPicture.getFontCharWidths font_7_3 (<{StdPrintText.c;264;44_119}> 0 255) picture_11_2, charWidths_11_4 = select _x_11_3::_Tuple2 0, printableSet_11_5 = _SystemArray.update_37 (<{StdPrintText.cu;266;23_115}> (_SystemArray._createArray_32 (<{StdPrintText.cu;266;23_117}> 0 charWidths_11_4)) 0 charWidths_11_4) (StdInt.toInt_20 '\t') True in case (StdBool.not (_SystemArray.select_35 printableSet_11_5 (StdInt.toInt_20 ' '))) (True -> StdMisc.abort "\nStdPrintText: error: the ASCII space character is not printable with this font.\n") (False -> let noOfPix_13_0::I = <{StdInt./_10}> (<{StdInt.*_9}> width_9_0 995) 1000, _x_13_1::C = StdPrintText.freadLineP _vCharStreams_0 file_1_5 printableSet_11_5 ' ' noOfPix_13_0 spacePerTab_1_2, buffer_13_2::B = select _x_13_1::_Tuple3 0, skipToEoln_13_3 = StdPrintText._f147_147 (<{StdInt.==_16}> wrapMode_1_0 0) lastCh_13_8, file_13_4 = select _x_13_1::_Tuple3 2, _x_13_5 = StdPrintText.evtlSkipLine _vCharStreams_0 skipToEoln_13_3 file_13_4, _x_13_6::B = select _x_13_5::_Tuple2 1, eof_13_7 = select _x_13_6::_Tuple2 0, lastCh_13_8 = select _x_13_1::_Tuple3 1, fMaxWidth_13_9::I = select _x_7_6::StdPictureDef._FontMetrics 3 in case (case (case (<{StdInt.==_16}> (_SystemArray.size_20 buffer_13_2) 0) (True -> eof_13_7) (False -> False) ) (True -> True) (False -> StdBool.not (<{StdInt.<_17}> fMaxWidth_13_9 noOfPix_13_0)) ) (True -> let <{spacePerTab`_15_0}>::C = <{StdPrintText._if;258;20_148}> (<{StdInt.<_17}> spacePerTab_1_2 0) spacePerTab_1_2, lastCh2_15_1::I = select _x_13_5::_Tuple2 0 in _Tuple2 (_Tuple2 True (StdIOBasic._Point2 0 0)) (_Tuple2 (StdPrintText._State (select _x_13_6::_Tuple2 1) buffer_13_2 False (<{StdPrintText._if;287;20_149}> skipToEoln_13_3 lastCh2_15_1 lastCh_13_8) 1 0 Data.Maybe.Nothing (StdPrintText._ReadOnly printableSet_11_5 (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.+_6}> top_5_2 fLeading_7_9) fAscent_7_7) 1) (<{StdInt.-_7}> bot_5_3 fDescent_7_8) eachPageDrawFunc_1_4 wrapMode_1_0 <{spacePerTab`_15_0}> (<{StdReal.*_4}> (StdReal.toReal_13 <{spacePerTab`_15_0}>) (<{StdReal./_5}> (StdReal.toReal_13 (select _x_11_1::_Tuple2 0)) 100.0)) noOfPix_13_0 fMaxWidth_13_9 font_7_3 lineHeight_7_10 print_2 (select _x_5_0::_Tuple3 0))) (select _x_11_3::_Tuple2 1))) (False -> case (case (<{StdInt.==_16}> <{from`_4_0}> 1) (True -> case (<{StdInt.<_17}> 0 (_SystemArray.size_20 buffer_13_2)) (True -> True) (False -> StdBool.not eof_13_7) ) (False -> False) ) (True -> let <{spacePerTab`_16_0}>::C = <{StdPrintText._if;258;20_150}> (<{StdInt.<_17}> spacePerTab_1_2 0) spacePerTab_1_2, lastCh2_16_1::I = select _x_13_5::_Tuple2 0 in _Tuple2 (_Tuple2 False (StdIOBasic._Point2 0 0)) (_Tuple2 (StdPrintText._State (select _x_13_6::_Tuple2 1) buffer_13_2 False (<{StdPrintText._if;287;20_151}> skipToEoln_13_3 lastCh2_16_1 lastCh_13_8) 1 0 Data.Maybe.Nothing (StdPrintText._ReadOnly printableSet_11_5 (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.+_6}> top_5_2 fLeading_7_9) fAscent_7_7) 1) (<{StdInt.-_7}> bot_5_3 fDescent_7_8) eachPageDrawFunc_1_4 wrapMode_1_0 <{spacePerTab`_16_0}> (<{StdReal.*_4}> (StdReal.toReal_13 <{spacePerTab`_16_0}>) (<{StdReal./_5}> (StdReal.toReal_13 (select _x_11_1::_Tuple2 0)) 100.0)) noOfPix_13_0 fMaxWidth_13_9 font_7_3 lineHeight_7_10 print_2 (select _x_5_0::_Tuple3 0))) (select _x_11_3::_Tuple2 1))) (False -> let file_16_0::C = select _x_13_6::_Tuple2 1, <{spacePerTab`_16_1}> = <{StdPrintText._if;258;20_153}> (<{StdInt.<_17}> spacePerTab_1_2 0) spacePerTab_1_2, space100Width_16_2 = select _x_11_1::_Tuple2 0, user_16_3 = select _x_5_0::_Tuple3 0, state_16_4 = StdPrintText._State file_16_0 buffer_13_2 False (<{StdPrintText._if;287;20_152}> skipToEoln_13_3 lastCh2_16_9 lastCh_13_8) 1 0 Data.Maybe.Nothing (StdPrintText._ReadOnly printableSet_11_5 (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.+_6}> top_5_2 fLeading_7_9) fAscent_7_7) 1) (<{StdInt.-_7}> bot_5_3 fDescent_7_8) eachPageDrawFunc_1_4 wrapMode_1_0 <{spacePerTab`_16_1}> (<{StdReal.*_4}> (StdReal.toReal_13 <{spacePerTab`_16_1}>) (<{StdReal./_5}> (StdReal.toReal_13 space100Width_16_2) 100.0)) noOfPix_13_0 fMaxWidth_13_9 font_7_3 lineHeight_7_10 print_2 user_16_3), picture_16_5 = select _x_11_3::_Tuple2 1, _x_16_6 = StdPrintText.pageTransition _vCharStreams_0 (_Tuple2 state_16_4 picture_16_5), _x_16_7::I = select _x_16_6::_Tuple2 1, state_16_8::I = select _x_16_7::_Tuple2 0, lastCh2_16_9 = select _x_13_5::_Tuple2 0 in case (Data.Maybe.isNothing (select state_16_8::StdPrintText._State 6)) (True -> _Tuple2 (_Tuple2 True (StdIOBasic._Point2 0 0)) (_Tuple2 state_16_8 (select _x_16_7::_Tuple2 1))) (False -> _Tuple2 (_Tuple2 False (StdIOBasic._Point2 0 0)) (_Tuple2 (StdPrintText.restore_position _vCharStreams_0 state_16_8) (select _x_16_7::_Tuple2 1))) ) ) ) ) ) ) ) ) ) ) 
<{StdPrintText._if;258;20_153}>::I !_x_0::B spacePerTab_1::I = case _x_0 (True -> 0) (_ -> spacePerTab_1)
<{StdPrintText._if;287;20_152}>::C !skipToEoln_0::B lastCh2_1::C lastCh_2::C = case skipToEoln_0 (True -> lastCh2_1) (_ -> lastCh_2)
<{StdPrintText._if;287;20_151}>::C !skipToEoln_0::B lastCh2_1::C lastCh_2::C = case skipToEoln_0 (True -> lastCh2_1) (_ -> lastCh_2)
<{StdPrintText._if;258;20_150}>::I !_x_0::B spacePerTab_1::I = case _x_0 (True -> 0) (_ -> spacePerTab_1)
<{StdPrintText._if;287;20_149}>::C !skipToEoln_0::B lastCh2_1::C lastCh_2::C = case skipToEoln_0 (True -> lastCh2_1) (_ -> lastCh_2)
<{StdPrintText._if;258;20_148}>::I !_x_0::B spacePerTab_1::I = case _x_0 (True -> 0) (_ -> spacePerTab_1)
StdPrintText._f147_147::B !_x_0::B lastCh_1::C = case _x_0 (True -> StdBool.not (StdPrintText._f146_146 (<{StdChar.==_18}> lastCh_1 '\n') lastCh_1)) (_ -> False)
StdPrintText._f146_146::B !_x_0::B lastCh_1::C = case _x_0 (True -> True) (_ -> case (<{StdChar.==_18}> lastCh_1 '\r') (True -> True) (False -> <{StdChar.==_18}> lastCh_1 '\f') )
StdPrintText.printText3 !_vCharStreams_0 !_vPrintEnvironments_1 !doDialog_2::B !wrapMode_3::I !fontDef_4 !spacesPerTab_5::I textRangeFunc_6 eachPageDrawFunc_7 !file_8 !printSetup_9 !printEnv_10 = let _x_1_0 = StdPrint.printPagePerPage _vPrintEnvironments_1 doDialog_2 False (_Tuple6 wrapMode_3 fontDef_4 spacesPerTab_5 textRangeFunc_6 eachPageDrawFunc_7 file_8) (StdPrintText.initState _vCharStreams_0) (StdPrintText.pageTransition _vCharStreams_0) printSetup_9 printEnv_10 in <{_Tuple2!3}> (<{StdPrintText._c;211;16_154}> (select _x_1_0::_Tuple2 0) printSetup_9) (select _x_1_0::_Tuple2 1)
<{StdPrintText._c;211;16_154}> !_x_0 printSetup_1 = case _x_0 (osprint.Cancelled _x_1_0 -> case _x_1_0 (_Tuple6 _x_2_0 _x_2_1 _x_2_2 _x_2_3 _x_2_4 file_2_5 -> <{_Tuple2!3}> file_2_5 printSetup_1) ) (osprint.StartedPrinting _x_1_0 -> case _x_1_0 (StdPrintText._State file_2_0 buffer_2_1 wasWrapped_2_2 lastCh_2_3 pageNo_2_4 noDoneCopies_2_5 firstPageState_2_6 _x_2_7 -> case _x_2_7 (StdPrintText._ReadOnly printableSet_3_0 topBsLn_3_1 maxBsLn_3_2 eachPageDrawFunc_3_3 wrapMode_3_4 spacePerTab_3_5 tabWidth_3_6 noOfPix_3_7 maxCharWidth_3_8 font_3_9 lineHeight_3_10 _x_3_11 user_3_12 -> case _x_3_11 (osprint._PrintInfo printSetup_4_0 job_4_1 -> <{_Tuple2!3}> file_2_0 printSetup_4_0) ) ) ) 
StdPrintText.printText1 !_vCharStreams_0 !_vPrintEnvironments_1 !doDialog_2::B !wrapMode_3::I !fontDef_4 !spacesPerTab_5::I !file_6 !printSetup_7 !printEnv_8 = StdPrintText.printText3 _vCharStreams_0 _vPrintEnvironments_1 doDialog_2 wrapMode_3 fontDef_4 spacesPerTab_5 StdPrintText.textRangeFunc_26 StdPrintText.eachPageDrawFunc_27 file_6 printSetup_7 printEnv_8
StdPrintText.eachPageDraw_29 !_vtoString_0 !_vDrawables_1 title_2 page_3 !_x_4 pageNr_5 picture_6 = case _x_4 (_Tuple6 beamHeight_1_0 baseLine_1_1 maxwidth_1_2 font_1_3 width_1_4 height_1_5 -> let pageStr_2_0 = <{StdString.+++_11}> page_3 (select _vtoString_0::<{StdOverloaded.toString;}> 0 pageNr_5), _x_2_1 = StdPicture.getFontStringWidth font_1_3 pageStr_2_0 (StdPicture.setPenFont font_1_3 picture_6) in StdFunc.seq (_predefined._Cons (StdPicture.setPenColour StdPictureDef.LightGrey) (_predefined._Cons (StdPicture.fill_101 (update StdIOBasic.zero_26::StdIOBasic._Rectangle [1:StdIOBasic._Point2 width_1_4 beamHeight_1_0])) (_predefined._Cons (StdPicture.setPenColour StdPictureDef.Black) (_predefined._Cons (select _vDrawables_1::<{StdPicture.Drawables;}> 1 (StdIOBasic._Point2 maxwidth_1_2 baseLine_1_1) title_2) (_predefined._Cons (StdPicture.drawAt_62 (StdIOBasic._Point2 (<{StdInt.-_7}> (<{StdInt.-_7}> width_1_4 (select _x_2_1::_Tuple2 0)) maxwidth_1_2) baseLine_1_1) pageStr_2_0) _predefined._Nil))))) (select _x_2_1::_Tuple2 1)) 
StdPrintText.textRange_28 fontDef_0 !_x_1 picture_2 = case _x_1 (osprint._PrintInfo printSetup_1_0 job_1_1 -> let _x_2_0::I = StdPicture.openFont (update fontDef_0::StdPictureDef._FontDef [1:<{StdList.++}> (select fontDef_0::StdPictureDef._FontDef 1) (_predefined._Cons "Bold" _predefined._Nil)]) picture_2, font_2_1 = select (select _x_2_0::_Tuple2 0)::_Tuple2 1, _x_2_2::I = StdPicture.getFontMetrics font_2_1 (StdPicture.setPenFont font_2_1 (select _x_2_0::_Tuple2 1)), metrics_2_3::I = select _x_2_2::_Tuple2 0, lineHeight_2_4::I = <{StdInt.+_6}> (<{StdInt.+_6}> (select metrics_2_3::StdPictureDef._FontMetrics 2) (select metrics_2_3::StdPictureDef._FontMetrics 0)) (select metrics_2_3::StdPictureDef._FontMetrics 1), beamHeight_2_5 = <{StdInt./_10}> (<{StdInt.*_9}> 3 lineHeight_2_4) 2, fAscent_2_6 = select metrics_2_3::StdPictureDef._FontMetrics 0, _x_2_7 = select (StdPrint.getPageDimensions printSetup_1_0 False)::StdPrint._PageDimensions 0, height_2_8 = select _x_2_7::StdIOBasic._Size 1 in _Tuple3 (_Tuple6 beamHeight_2_5 (<{StdInt.+_6}> fAscent_2_6 (<{StdInt./_10}> (<{StdInt.-_7}> beamHeight_2_5 (<{StdInt.+_6}> fAscent_2_6 (select metrics_2_3::StdPictureDef._FontMetrics 1))) 2)) (select metrics_2_3::StdPictureDef._FontMetrics 3) font_2_1 (select _x_2_7::StdIOBasic._Size 0) height_2_8) (_Tuple2 (<{StdInt.*_9}> 2 lineHeight_2_4) (<{StdInt.-_7}> height_2_8 1)) (select _x_2_2::_Tuple2 1)) 
StdPrintText.eachPageDraw_120 !_vDrawables_0 title_1 page_2 !_x_3 pageNr_4::I picture_5 = case _x_3 (_Tuple6 beamHeight_1_0 baseLine_1_1 maxwidth_1_2 font_1_3 width_1_4 height_1_5 -> let pageStr_2_0 = <{StdString.+++_11}> page_2 (StdString.toString_5 pageNr_4), _x_2_1 = StdPicture.getFontStringWidth font_1_3 pageStr_2_0 (StdPicture.setPenFont font_1_3 picture_5) in StdFunc.seq (_predefined._Cons (StdPicture.setPenColour StdPictureDef.LightGrey) (_predefined._Cons (StdPicture.fill_101 (update StdIOBasic.zero_26::StdIOBasic._Rectangle [1:StdIOBasic._Point2 width_1_4 beamHeight_1_0])) (_predefined._Cons (StdPicture.setPenColour StdPictureDef.Black) (_predefined._Cons (select _vDrawables_0::<{StdPicture.Drawables;}> 1 (StdIOBasic._Point2 maxwidth_1_2 baseLine_1_1) title_1) (_predefined._Cons (StdPicture.drawAt_62 (StdIOBasic._Point2 (<{StdInt.-_7}> (<{StdInt.-_7}> width_1_4 (select _x_2_1::_Tuple2 0)) maxwidth_1_2) baseLine_1_1) pageStr_2_0) _predefined._Nil))))) (select _x_2_1::_Tuple2 1)) 
StdPrintText.eachPageDraw_121 title_0 page_1 !_x_2 pageNr_3::I picture_4 = case _x_2 (_Tuple6 beamHeight_1_0 baseLine_1_1 maxwidth_1_2 font_1_3 width_1_4 height_1_5 -> let pageStr_2_0 = <{StdString.+++_11}> page_1 (StdString.toString_5 pageNr_3), _x_2_1 = StdPicture.getFontStringWidth font_1_3 pageStr_2_0 (StdPicture.setPenFont font_1_3 picture_4) in StdFunc.seq (_predefined._Cons (StdPicture.setPenColour StdPictureDef.LightGrey) (_predefined._Cons (StdPicture.fill_101 (update StdIOBasic.zero_26::StdIOBasic._Rectangle [1:StdIOBasic._Point2 width_1_4 beamHeight_1_0])) (_predefined._Cons (StdPicture.setPenColour StdPictureDef.Black) (_predefined._Cons (StdPicture.drawAt_62 (StdIOBasic._Point2 maxwidth_1_2 baseLine_1_1) title_0) (_predefined._Cons (StdPicture.drawAt_62 (StdIOBasic._Point2 (<{StdInt.-_7}> (<{StdInt.-_7}> width_1_4 (select _x_2_1::_Tuple2 0)) maxwidth_1_2) baseLine_1_1) pageStr_2_0) _predefined._Nil))))) (select _x_2_1::_Tuple2 1)) 
StdPrintText.printText2 !_vCharStreams_0 !_vPrintEnvironments_1 !title_2 !page_3 !doDialog_4::B !wrapMode_5::I !fontDef_6 !spacesPerTab_7::I !file_8 !printSetup_9 !printEnv_10 = StdPrintText.printText3 _vCharStreams_0 _vPrintEnvironments_1 doDialog_4 wrapMode_5 fontDef_6 spacesPerTab_7 (StdPrintText.textRange_28 fontDef_6) (StdPrintText.eachPageDraw_121 title_2 page_3) file_8 printSetup_9 printEnv_10
StdPrintText.eos_5 !tf_0 = case tf_0 (StdPrintText._FileCharStream f_1_0 pos_1_1 -> let _x_2_0 = StdFile.fend f_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (update tf_0::StdPrintText._FileCharStream [0:select _x_2_0::_Tuple2 1])) 
StdPrintText.getChar_6 !tf_0 = case tf_0 (StdPrintText._FileCharStream f_1_0 pos_1_1 -> let _x_2_0 = StdFile.freadc f_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (update tf_0::StdPrintText._FileCharStream [0:select _x_2_0::_Tuple3 2])) 
StdPrintText.restorePos_7 !tf_0 = case tf_0 (StdPrintText._FileCharStream f_1_0 pos_1_1 -> let _x_2_0 = StdFile.fseek f_1_0 pos_1_1 0 in case (StdBool.not (select _x_2_0::_Tuple2 0)) (True -> StdMisc.abort "StdPrintText: fatal error: restorePos not succesful") (False -> update tf_0::StdPrintText._FileCharStream [0:select _x_2_0::_Tuple2 1]) ) 
StdPrintText.savePos_8 !tf_0 = case tf_0 (StdPrintText._FileCharStream f_1_0 pos_1_1 -> let _x_2_0 = StdFile.fposition f_1_0 in StdPrintText._FileCharStream (select _x_2_0::_Tuple2 1) (select _x_2_0::_Tuple2 0)) 
<{StdPrintText.TD;WrapMode}> _x_0::B = _predefined._Nil
<{StdPrintText.TD;FileCharStream}> _x_0::B = _predefined._Nil
<{StdPrintText.TD;CharStreams;}> _x_0::B = _predefined._Nil
<{StdPrintText.TD;TabbedString}> _x_0::B = _predefined._Nil
<{StdPrintText.TD;State}> _x_0::B = _predefined._Nil
<{StdPrintText.TD;FirstPageState}> _x_0::B = _predefined._Nil
<{StdPrintText.TD;ReadOnly}> _x_0::B = _predefined._Nil


|| Converted Records
:: StdPrintText._FileCharStream = {!StdPrintText.textFile, !StdPrintText.pos::I}

:: <{StdPrintText.CharStreams;}> = {!StdPrintText.eos, !StdPrintText.getChar, !StdPrintText.restorePos, !StdPrintText.savePos}

:: StdPrintText._State = {!StdPrintText.file, !StdPrintText.buffer, !StdPrintText.wasWrapped::B, !StdPrintText.lastCh::C, !StdPrintText.pageNo::I, !StdPrintText.noDoneCopies::I, StdPrintText.firstPageState, !StdPrintText.rO}

:: StdPrintText._FirstPageState = {!<{StdPrintText.buffer`}>, !<{StdPrintText.wasWrapped`}>::B, !<{StdPrintText.lastCh`}>::C}

:: StdPrintText._ReadOnly = {!StdPrintText.printableSet, !StdPrintText.topBsLn::I, !StdPrintText.maxBsLn::I, StdPrintText.eachPageDrawFunc, !StdPrintText.wrapMode, !StdPrintText.spacePerTab::I, StdPrintText.tabWidth::D, !StdPrintText.noOfPix::I, !StdPrintText.maxCharWidth::I, !StdPrintText.font, !StdPrintText.lineHeight::I, !StdPrintText.printInfo, StdPrintText.userInfo}

:: <{StdPrintText.gEq_s;}> = {!StdPrintText.gEq_s}

:: <{StdPrintText.gEq_ss;}> = {!StdPrintText.gEq_ss}

:: <{StdPrintText.gEq_sss;}> = {!StdPrintText.gEq_sss}

:: <{StdPrintText.gEq_ssss;}> = {!StdPrintText.gEq_ssss}

:: <{StdPrintText.gEq_sssss;}> = {!StdPrintText.gEq_sssss}

:: <{StdPrintText.gEq_ssssss;}> = {!StdPrintText.gEq_ssssss}

:: <{StdPrintText.gEq_sssssss;}> = {!StdPrintText.gEq_sssssss}

:: <{StdPrintText.gEq_ssssssss;}> = {!StdPrintText.gEq_ssssssss}

:: <{StdPrintText.gEq_sssssssss;}> = {!StdPrintText.gEq_sssssssss}

:: <{StdPrintText.bimap_s;}> = {StdPrintText.bimap_s}

:: <{StdPrintText.bimap_ss;}> = {StdPrintText.bimap_ss}

:: <{StdPrintText.bimap_sss;}> = {StdPrintText.bimap_sss}

