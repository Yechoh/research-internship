|| ?module? controlvalidate


controlvalidate.validateControlTitle !string_0 = commondef.removeSpecialChars _predefined._Nil string_0
controlvalidate.validateSliderState !_x_0 = case _x_0 (StdIOCommon._SliderState sMin_1_0 sMax_1_1 thumb_1_2 -> let <{min`_2_0}>::I = <{controlvalidate._c;48;16_69}> (<{StdInt.<_17}> sMin_1_0 sMax_1_1) sMin_1_0 sMax_1_1, <{max`_2_1}>::I = <{controlvalidate._c;51;16_68}> (<{StdInt.<_17}> sMin_1_0 sMax_1_1) sMax_1_1 sMin_1_0 in StdIOCommon._SliderState <{min`_2_0}> <{max`_2_1}> (commondef.setBetween thumb_1_2 <{min`_2_0}> <{max`_2_1}>)) 
<{controlvalidate._c;48;16_69}>::I !_x_0::B sMin_1::I sMax_2::I = case _x_0 (True -> sMin_1) (_ -> sMax_2)
<{controlvalidate._c;51;16_68}>::I !_x_0::B sMax_1::I sMin_2::I = case _x_0 (True -> sMax_1) (_ -> sMin_2)
<{controlvalidate.getWElementIdsAppend`_12}> !itemH_0 !idst_1 = case itemH_0 (windowhandle._WItemHandle w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case (Data.Maybe.isJust w_1_0) (True -> let _x_3_0 = controlvalidate.getWElementControlIdsAppend_14 w_1_7 idst_1 in <{_Tuple2!3}> (_predefined._Cons (Data.Maybe.fromJust w_1_0) (select _x_3_0::_Tuple2 0)) (update itemH_0::windowhandle._WItemHandle [7:select _x_3_0::_Tuple2 1])) (False -> let _x_3_0 = controlvalidate.getWElementControlIdsAppend_14 w_1_7 idst_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (update itemH_0::windowhandle._WItemHandle [7:select _x_3_0::_Tuple2 1])) ) 
controlvalidate.getWElementIdsAppend_13 !_x_0 !idst_1 = case _x_0 (windowhandle.WItemHandle itemH_1_0 -> let _x_2_0 = <{controlvalidate.getWElementIdsAppend`_12}> itemH_1_0 idst_1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WItemHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = controlvalidate.getWElementControlIdsAppend_14 itemHs_1_0 idst_1 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (windowhandle.WListLSHandle (select _x_2_0::_Tuple2 1))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = controlvalidate.getWElementControlIdsAppend_14 itemHs_2_1 idst_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple2 1]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = controlvalidate.getWElementControlIdsAppend_14 itemHs_2_1 idst_1 in <{_Tuple2!3}> (select _x_3_0::_Tuple2 0) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple2 1]))) ) 
controlvalidate.getWElementControlIdsAppend_14 !_x_0 !idst_1 = case _x_0 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = controlvalidate.getWElementControlIdsAppend_14 itemHs_1_1 idst_1, _x_2_1 = controlvalidate.getWElementIdsAppend_13 itemH_1_0 (select _x_2_0::_Tuple2 0) in <{_Tuple2!3}> (select _x_2_1::_Tuple2 0) (_predefined._Cons (select _x_2_1::_Tuple2 1) (select _x_2_0::_Tuple2 1))) (_ -> <{_Tuple2!3}> idst_1 _predefined._Nil)
controlvalidate.getWElementControlIds !itemHs_0 = controlvalidate.getWElementControlIdsAppend_14 itemHs_0 _predefined._Nil
<{controlvalidate.getWElementIdsAppend`_15}> !itemH_0 !idst_1 = case itemH_0 (<{wstate._WItemHandle`}> w_1_0 w_1_1 w_1_2 w_1_3 w_1_4 w_1_5 w_1_6 w_1_7 w_1_8 w_1_9 w_1_10 w_1_11 w_1_12 -> case (Data.Maybe.isJust w_1_0) (True -> _predefined._Cons (Data.Maybe.fromJust w_1_0) (<{controlvalidate.getWElementControlIdsAppend`_17}> w_1_7 idst_1)) (False -> <{controlvalidate.getWElementControlIdsAppend`_17}> w_1_7 idst_1) ) 
controlvalidate.getWElementIdsAppend_16 !_x_0 !idst_1 = case _x_0 (<{wstate.WItemHandle`}> itemH_1_0 -> <{controlvalidate.getWElementIdsAppend`_15}> itemH_1_0 idst_1) (<{wstate.WRecursiveHandle`}> itemHs_1_0 _x_1_1 -> <{controlvalidate.getWElementControlIdsAppend`_17}> itemHs_1_0 idst_1) 
<{controlvalidate.getWElementControlIdsAppend`_17}> !_x_0 !idst_1 = case _x_0 (_predefined._Cons itemH_1_0 itemHs_1_1 -> controlvalidate.getWElementIdsAppend_16 itemH_1_0 (<{controlvalidate.getWElementControlIdsAppend`_17}> itemHs_1_1 idst_1)) (_ -> idst_1)
<{controlvalidate.getWElementControlIds`}> !itemHs_0 = <{controlvalidate.getWElementControlIdsAppend`_17}> itemHs_0 _predefined._Nil
controlvalidate.noDuplicateControlIds !itemHs_0 = let _x_1_0 = controlvalidate.getWElementControlIds itemHs_0 in <{_Tuple2!3}> (commondef.noDuplicates (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
<{controlvalidate.noDuplicateControlIds`}>::B !itemHs_0 = commondef.noDuplicates (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) (<{controlvalidate.getWElementControlIds`}> itemHs_0)
controlvalidate.disjointControlIds !ids_0 !itemHs_1 = let _x_1_0 = controlvalidate.getWElementControlIds itemHs_1 in <{_Tuple2!3}> (commondef.disjointLists (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) ids_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
<{controlvalidate.disjointControlIds`}>::B !ids_0 !itemHs_1 = commondef.disjointLists (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) ids_0 (<{controlvalidate.getWElementControlIds`}> itemHs_1)
controlvalidate.isReceiverControl_18::B !_x_0 = case _x_0 (windowhandle.IsOtherControl type_1_0 -> case (<{StdString.==_2}> type_1_0 "Receiver") (True -> True) (False -> <{StdString.==_2}> type_1_0 "Receiver2") ) (_ -> False)
<{controlvalidate.bindReceiverControlIds`_19}> !io_0 !w_1 !_x_2 !rt_3 = case _x_2 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (controlvalidate.isReceiverControl_18 w_2_2)) (True -> let _x_4_0 = controlvalidate.bindReceiverControlIds io_0 w_1 w_2_7 rt_3 in <{_Tuple2!3}> (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_4_0::_Tuple2 0])) (select _x_4_0::_Tuple2 1)) (False -> <{_Tuple2!3}> (windowhandle.WItemHandle itemH_1_0) (select (receivertable.addReceiverToReceiverTable (receivertable._ReceiverTableEntry (receivertable._RecLoc io_0 device.WindowDevice w_1 (select (windowaccess.getWItemReceiverInfo w_2_5)::receiverhandle._ReceiverHandle 0)) (<{controlvalidate._if;142;61_70}> w_2_4) 0) rt_3)::_Tuple2 1)) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = controlvalidate.bindReceiverControlIds io_0 w_1 itemHs_1_0 rt_3 in <{_Tuple2!3}> (windowhandle.WListLSHandle (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 wExtend_2_1 -> let _x_3_0 = controlvalidate.bindReceiverControlIds io_0 w_1 wExtend_2_1 rt_3 in <{_Tuple2!3}> (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 wChange_2_1 -> let _x_3_0 = controlvalidate.bindReceiverControlIds io_0 w_1 wChange_2_1 rt_3 in <{_Tuple2!3}> (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple2 0])) (select _x_3_0::_Tuple2 1)) ) 
controlvalidate.bindReceiverControlIds !io_0 !w_1 !_x_2 !rt_3 = case _x_2 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0 = <{controlvalidate.bindReceiverControlIds`_19}> io_0 w_1 itemH_1_0 rt_3, _x_2_1 = controlvalidate.bindReceiverControlIds io_0 w_1 itemHs_1_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) (_predefined._Nil -> <{_Tuple2!3}> _predefined._Nil rt_3) 
<{controlvalidate._if;142;61_70}> !w_0::B = case w_0 (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
<{controlvalidate.c;181;54_20}> idParent_0 !g_l_1 = <{controlvalidate.g_c1;181;59_71}> g_l_1 idParent_0
<{controlvalidate.g_c1;181;59_71}> !g_l_0 idParent_1 = case g_l_0 (_predefined._Cons id_1_0 g_t_1_1 -> _predefined._Cons (_Tuple2 id_1_0 idParent_1) (<{controlvalidate.c;181;54_20}> idParent_1 g_t_1_1)) (_ -> _predefined._Nil)
controlvalidate.controlvalidateFatalError !function_0 !error_1 = commondef.fatalError function_0 "controlvalidate" error_1
controlvalidate.controlIdsAreConsistent !io_0 !w_1 !itemHs_2 !rt_3 !it_4 = let _x_1_0 = controlvalidate.getWElementControlIds itemHs_2, ids_1_1 = select _x_1_0::_Tuple2 0, _x_1_2 = id.okMembersIdTable ids_1_1 it_4 in case (StdBool.not (select _x_1_2::_Tuple2 0)) (True -> <{_Tuple4!15}> False (select _x_1_0::_Tuple2 1) rt_3 (select _x_1_2::_Tuple2 1)) (False -> let idParent_3_0 = id._IdParent io_0 device.WindowDevice w_1, it_3_1 = select _x_1_2::_Tuple2 1, _x_3_2 = id.addIdsToIdTable (<{controlvalidate.c;181;54_20}> idParent_3_0 ids_1_1) it_3_1 in case (StdBool.not (select _x_3_2::_Tuple2 0)) (True -> controlvalidate.controlvalidateFatalError "controlIdsAreConsistent" "could not add all Ids to IdTable") (False -> let _x_5_0 = controlvalidate.bindReceiverControlIds io_0 w_1 (select _x_1_0::_Tuple2 1) rt_3 in <{_Tuple4!15}> True (select _x_5_0::_Tuple2 0) (select _x_5_0::_Tuple2 1) (select _x_3_2::_Tuple2 1)) ) 
controlvalidate.alignsVertically_24::B !_x_0 = case _x_0 (StdIOCommon.AlignLeft -> True) (StdIOCommon.AlignCenter -> True) (StdIOCommon.AlignRight -> True) (_ -> False)
controlvalidate.itemLocVertical_22::B !_x_0 = case _x_0 (StdIOCommon.Above _x_1_0 -> True) (StdIOCommon.Below _x_1_0 -> True) (StdIOCommon.AbovePrev -> True) (StdIOCommon.BelowPrev -> True) (_ -> False)
controlvalidate.alignsHorizontally_23::B !_x_0 = case _x_0 (StdIOCommon.AlignTop -> True) (StdIOCommon.AlignCenter -> True) (StdIOCommon.AlignBottom -> True) (_ -> False)
controlvalidate.itemLocHorizontal_21::B !_x_0 = case _x_0 (StdIOCommon.LeftOf _x_1_0 -> True) (StdIOCommon.RightTo _x_1_0 -> True) (StdIOCommon.LeftOfPrev -> True) (StdIOCommon.RightToPrev -> True) (_ -> False)
controlvalidate.validateItemPos !itemPos_0 = case itemPos_0 (_Tuple2 itemLoc_1_0 _x_1_1 -> case _x_1_1 (StdIOCommon.OffsetAlign align_2_0 -> case (case (case (controlvalidate.itemLocHorizontal_21 itemLoc_1_0) (True -> controlvalidate.alignsHorizontally_23 align_2_0) (False -> False) ) (True -> True) (False -> case (controlvalidate.itemLocVertical_22 itemLoc_1_0) (True -> controlvalidate.alignsVertically_24 align_2_0) (False -> False) ) ) (True -> itemPos_0) (False -> _Tuple2 itemLoc_1_0 StdIOCommon.zero_32) ) ) (_ -> itemPos_0)


|| Converted Records
:: <{controlvalidate.gEq_s;}> = {!controlvalidate.gEq_s}

:: <{controlvalidate.gEq_ss;}> = {!controlvalidate.gEq_ss}

:: <{controlvalidate.gEq_sss;}> = {!controlvalidate.gEq_sss}

:: <{controlvalidate.gEq_ssss;}> = {!controlvalidate.gEq_ssss}

:: <{controlvalidate.gEq_sssss;}> = {!controlvalidate.gEq_sssss}

:: <{controlvalidate.gEq_ssssss;}> = {!controlvalidate.gEq_ssssss}

:: <{controlvalidate.gEq_sssssss;}> = {!controlvalidate.gEq_sssssss}

:: <{controlvalidate.gEq_ssssssss;}> = {!controlvalidate.gEq_ssssssss}

:: <{controlvalidate.gEq_sssssssss;}> = {!controlvalidate.gEq_sssssssss}

:: <{controlvalidate.bimap_s;}> = {controlvalidate.bimap_s}

:: <{controlvalidate.bimap_ss;}> = {controlvalidate.bimap_ss}

:: <{controlvalidate.bimap_sss;}> = {controlvalidate.bimap_sss}

