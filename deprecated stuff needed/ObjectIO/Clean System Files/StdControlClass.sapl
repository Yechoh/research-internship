|| ?module? StdControlClass


StdControlClass.stdControlClassFatalError !function_0 !error_1 = commondef.fatalError function_0 "StdControlClass" error_1
StdControlClass.getTextWidth_44 !s_0 !picture_1 = let _x_1_0 = StdPicture.openDialogFont picture_1 in StdPicture.getFontStringWidth (select _x_1_0::_Tuple2 0) s_0 (select _x_1_0::_Tuple2 1)
StdControlClass.getDialogFontTextWidth !_vaccScreenPicture_0 !s_1 !env_2 = select _vaccScreenPicture_0::<{StdPSt.accScreenPicture;}> 0 (StdControlClass.getTextWidth_44 s_1) env_2
StdControlClass.getIdAttribute !atts_0 = let _x_1_0 = commondef.cselect StdControlAttribute.isControlId StdMisc.undef atts_0 in case (select _x_1_0::_Tuple2 0) (True -> Data.Maybe.Just (StdControlAttribute.getControlIdAtt (select _x_1_0::_Tuple2 1))) (False -> Data.Maybe.Nothing) 
StdControlClass.getControlWidthAttribute !atts_0 = let _x_1_0 = commondef.cselect StdControlAttribute.isControlWidth StdMisc.undef atts_0 in case (select _x_1_0::_Tuple2 0) (True -> Data.Maybe.Just (StdControlAttribute.getControlWidthAtt (select _x_1_0::_Tuple2 1))) (False -> Data.Maybe.Nothing) 
StdControlClass.getSelectStateAttribute::B !atts_0 = StdIOCommon.enabled (StdControlAttribute.getControlSelectStateAtt (select (commondef.cselect StdControlAttribute.isControlSelectState (StdControlDef.ControlSelectState StdIOCommon.Able) atts_0)::_Tuple2 1))
StdControlClass.redundantAttribute::B !_x_0 = case _x_0 (StdControlDef.ControlId _x_1_0 -> True) (StdControlDef.ControlHide -> True) (StdControlDef.ControlSelectState _x_1_0 -> True) (StdControlDef.ControlLook _x_1_0 _x_1_1 -> True) (StdControlDef.ControlViewDomain _x_1_0 -> True) (_ -> False)
StdControlClass.getInitialPen !atts_0 = let _x_1_0 = commondef.cselect StdControlAttribute.isControlPen StdMisc.undef atts_0 in case (select _x_1_0::_Tuple2 0) (True -> commondef.stateMap2 ospicture.setPenAttribute (StdList.reverse (StdControlAttribute.getControlPenAtt (select _x_1_0::_Tuple2 1))) ospicture.defaultPen) (False -> ospicture.defaultPen) 
StdControlClass.validateLayout !nr_0::I !_x_1 = case _x_1 (StdControlDef.Rows n_1_0 -> StdControlDef.Rows (commondef.setBetween n_1_0 1 nr_0)) (StdControlDef.Columns n_1_0 -> StdControlDef.Columns (commondef.setBetween n_1_0 1 nr_0)) 
StdControlClass.validatePopUpIndex::I !nr_0::I !index_1::I = case (commondef.isBetween index_1 1 nr_0) (True -> index_1) (False -> 1) 
StdControlClass.validateOrigin !domain_0 !origin_1 = StdIOBasic._Point2 (commondef.setBetween (select origin_1::StdIOBasic._Point2 0) (select (select domain_0::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 0) (select (select domain_0::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 0)) (commondef.setBetween (select origin_1::StdIOBasic._Point2 1) (select (select domain_0::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1) (select (select domain_0::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1))
StdControlClass.validateControlPos !_x_0 = case _x_0 (StdControlDef.ControlPos itemPos_1_0 -> StdControlDef.ControlPos (controlvalidate.validateItemPos itemPos_1_0)) (_ -> _x_0)
StdControlClass.controlToHandles_0 !_vControls_0 !_x_1 !pState_2 = case _x_1 (StdIOBasic._AddLS addLS_1_0 addDef_1_1 -> let _x_2_0 = select _vControls_0::<{StdControlClass.Controls;}> 0 addDef_1_1 pState_2 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WExtendLSHandle (windowhandle._WExtendLSHandle addLS_1_0 (StdList.map windowhandle.controlStateToWElementHandle (select _x_2_0::_Tuple2 0))))) _predefined._Nil) (select _x_2_0::_Tuple2 1)) 
StdControlClass.getControlType_1 !_vControls_0 _x_1 = ""
StdControlClass.controlToHandles_2 !_vControls_0 !_x_1 !pState_2 = case _x_1 (StdIOBasic._NewLS newLS_1_0 newDef_1_1 -> let _x_2_0 = select _vControls_0::<{StdControlClass.Controls;}> 0 newDef_1_1 pState_2 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WChangeLSHandle (windowhandle._WChangeLSHandle newLS_1_0 (StdList.map windowhandle.controlStateToWElementHandle (select _x_2_0::_Tuple2 0))))) _predefined._Nil) (select _x_2_0::_Tuple2 1)) 
StdControlClass.getControlType_3 !_vControls_0 _x_1 = ""
StdControlClass.controlToHandles_4 !_vControls_0 !_x_1 !pState_2 = case _x_1 (StdIOBasic.ListLS cDefs_1_0 -> let _x_2_0 = commondef.stateMap (select _vControls_0::<{StdControlClass.Controls;}> 0) cDefs_1_0 pState_2 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WListLSHandle (StdList.map windowhandle.controlStateToWElementHandle (StdList.flatten (select _x_2_0::_Tuple2 0))))) _predefined._Nil) (select _x_2_0::_Tuple2 1)) 
StdControlClass.getControlType_5 !_vControls_0 _x_1 = ""
StdControlClass.controlToHandles_6 !_x_0 !pState_1 = case _x_0 (StdIOBasic.NilLS -> <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WListLSHandle _predefined._Nil)) _predefined._Nil) pState_1) 
StdControlClass.getControlType_7 _x_0 = ""
StdControlClass.controlToHandles_8 !_vControls_0 !_vControls_1 !_x_2 !pState_3 = case _x_2 (<{StdIOBasic.:+:}> c1_1_0 c2_1_1 -> let _x_2_0 = select _vControls_0::<{StdControlClass.Controls;}> 0 c1_1_0 pState_3, _x_2_1 = select _vControls_1::<{StdControlClass.Controls;}> 0 c2_1_1 (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (<{StdList.++}> (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
StdControlClass.getControlType_9 !_vControls_0 !_vControls_1 _x_2 = ""
StdControlClass.anon_53 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.getDialogFontTextWidth_108 !s_0 !env_1 = StdPSt.accScreenPicture_13 (StdControlClass.getTextWidth_44 s_0) env_1
StdControlClass.getButtonWidth_45 !wMetrics_0 _x_1 !_x_2 !ioState_3 = case _x_2 (StdControlDef.PixelWidth reqW_1_0 -> let x_2_0::I = oswindow.osGetButtonControlMinWidth wMetrics_0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_131}> (<{StdInt.<_17}> x_2_0 reqW_1_0) reqW_1_0 x_2_0) (oswindow.osGetButtonControlHeight wMetrics_0)) ioState_3) (StdControlDef.TextWidth wtext_1_0 -> let x_2_0::I = oswindow.osGetButtonControlMinWidth wMetrics_0, _x_2_1 = StdControlClass.getDialogFontTextWidth_108 wtext_1_0 ioState_3, w_2_2::I = select _x_2_1::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_132}> (<{StdInt.<_17}> x_2_0 w_2_2) w_2_2 x_2_0) (oswindow.osGetButtonControlHeight wMetrics_0)) (select _x_2_1::_Tuple2 1)) (StdControlDef.ContentWidth wtext_1_0 -> let x_2_0::I = oswindow.osGetButtonControlMinWidth wMetrics_0, _x_2_1 = iostate.accIOToolbox (oswindow.osGetButtonControlSize wMetrics_0 wtext_1_0) ioState_3, _x_2_2 = select _x_2_1::_Tuple2 0, w_2_3::I = select _x_2_2::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_133}> (<{StdInt.<_17}> x_2_0 w_2_3) w_2_3 x_2_0) (select _x_2_2::_Tuple2 1)) (select _x_2_1::_Tuple2 1)) 
<{StdControlClass._c;51;16_133}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_132}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_131}>::I !_x_0::B reqW_1::I x_2::I = case _x_0 (True -> reqW_1) (_ -> x_2)
StdControlClass.getButtonSize_46 !wMetrics_0 text_1 !_x_2 !ioState_3 = case _x_2 (Data.Maybe.Nothing -> let x_2_0::I = oswindow.osGetButtonControlMinWidth wMetrics_0, _x_2_1 = iostate.accIOToolbox (oswindow.osGetButtonControlSize wMetrics_0 text_1) ioState_3, _x_2_2 = select _x_2_1::_Tuple2 0, w_2_3::I = select _x_2_2::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_134}> (<{StdInt.<_17}> x_2_0 w_2_3) w_2_3 x_2_0) (select _x_2_2::_Tuple2 1)) (select _x_2_1::_Tuple2 1)) (Data.Maybe.Just _x_1_0 -> case _x_1_0 (StdControlDef.ControlWidth w_2_0 -> StdControlClass.getButtonWidth_45 wMetrics_0 text_1 w_2_0 ioState_3) (_ -> let x_2_0::I = 0, _x_2_1::I = <{StdControlClass._c;139;39_135}> _x_1_0, reqW_2_2::I = select _x_2_1::StdIOBasic._Size 0, x_2_3 = 0, reqH_2_4::I = select _x_2_1::StdIOBasic._Size 1 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_136}> (<{StdInt.<_17}> x_2_0 reqW_2_2) reqW_2_2 x_2_0) (<{StdControlClass._c;51;16_137}> (<{StdInt.<_17}> x_2_3 reqH_2_4) reqH_2_4 x_2_3)) ioState_3)) 
<{StdControlClass._c;51;16_137}>::I !_x_0::B reqH_1::I x_2::I = case _x_0 (True -> reqH_1) (_ -> x_2)
<{StdControlClass._c;51;16_136}>::I !_x_0::B reqW_1::I x_2::I = case _x_0 (True -> reqW_1) (_ -> x_2)
<{StdControlClass._c;139;39_135}> !_x_0 = case _x_0 (StdControlDef.ControlOuterSize size_1_0 -> size_1_0) (StdControlDef.ControlViewSize size_1_0 -> size_1_0) (_ -> StdControlClass.stdControlClassFatalError "controlToHandles (ButtonControl)" "unexpected ControlAttribute")
<{StdControlClass._c;51;16_134}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
StdControlClass.anon_109::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_110::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_10 !_x_0 !pState_1 = case _x_0 (StdControlDef.ButtonControl textLine_1_0 atts_1_1 -> let _x_2_0 = iostate.ioStGetOSWindowMetrics (select pState_1::iostate._PSt 1), _x_2_1 = StdControlClass.getButtonSize_46 (select _x_2_0::_Tuple2 0) textLine_1_0 (<{StdControlClass._c;108;39_138}> (StdList.filter (commondef.orc StdControlAttribute.isControlOuterSize (commondef.orc StdControlAttribute.isControlWidth StdControlAttribute.isControlViewSize)) atts_1_1)) (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_1) 0 windowhandle.IsButtonControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_1)) (StdControlClass.getSelectStateAttribute atts_1_1) (windowhandle.ButtonInfo (windowhandle._ButtonInfo textLine_1_0)) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_110 atts_1_1)) _predefined._Nil False StdIOBasic.zero_11 (select _x_2_1::_Tuple2 0) -1 StdMisc.undef))) _predefined._Nil) (update pState_1::iostate._PSt [1:select _x_2_1::_Tuple2 1])) 
<{StdControlClass._c;108;39_138}> !_x_0 = case _x_0 (_predefined._Cons att_1_0 _x_1_1 -> Data.Maybe.Just att_1_0) (_ -> Data.Maybe.Nothing)
StdControlClass.getControlType_11 _x_0 = "ButtonControl"
StdControlClass.anon_54 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.checkItemToInfo_47 !wMetrics_0 !_x_1 !ioState_2 = case _x_1 (_Tuple4 text_1_0 _x_1_1 mark_1_2 f_1_3 -> case _x_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (StdControlDef.PixelWidth reqW_3_0 -> let x_4_0::I = oswindow.osGetCheckControlItemMinWidth wMetrics_0, wOK_4_1::I = <{StdControlClass._c;51;16_139}> (<{StdInt.<_17}> x_4_0 reqW_3_0) reqW_3_0 x_4_0 in <{_Tuple2!3}> (windowhandle._CheckItemInfo (_Tuple4 text_1_0 wOK_4_1 mark_1_2 f_1_3) StdIOBasic.zero_11 (StdIOBasic._Size wOK_4_1 (oswindow.osGetCheckControlItemHeight wMetrics_0)) -1) ioState_2) (StdControlDef.TextWidth wtext_3_0 -> let x_4_0::I = oswindow.osGetCheckControlItemMinWidth wMetrics_0, _x_4_1::I = StdControlClass.getDialogFontTextWidth_108 wtext_3_0 ioState_2, w_4_2 = select _x_4_1::_Tuple2 0, wOK_4_3::I = <{StdControlClass._c;51;16_140}> (<{StdInt.<_17}> x_4_0 w_4_2) w_4_2 x_4_0 in <{_Tuple2!3}> (windowhandle._CheckItemInfo (_Tuple4 text_1_0 wOK_4_3 mark_1_2 f_1_3) StdIOBasic.zero_11 (StdIOBasic._Size wOK_4_3 (oswindow.osGetCheckControlItemHeight wMetrics_0)) -1) (select _x_4_1::_Tuple2 1)) (StdControlDef.ContentWidth wtext_3_0 -> let x_4_0::I = oswindow.osGetCheckControlItemMinWidth wMetrics_0, _x_4_1::I = iostate.accIOToolbox (oswindow.osGetCheckControlItemSize wMetrics_0 wtext_3_0) ioState_2, _x_4_2 = select _x_4_1::_Tuple2 0, w_4_3 = select _x_4_2::_Tuple2 0, wOK_4_4::I = <{StdControlClass._c;51;16_141}> (<{StdInt.<_17}> x_4_0 w_4_3) w_4_3 x_4_0 in <{_Tuple2!3}> (windowhandle._CheckItemInfo (_Tuple4 text_1_0 wOK_4_4 mark_1_2 f_1_3) StdIOBasic.zero_11 (StdIOBasic._Size wOK_4_4 (select _x_4_2::_Tuple2 1)) -1) (select _x_4_1::_Tuple2 1)) ) (Data.Maybe.Nothing -> let x_3_0::I = oswindow.osGetCheckControlItemMinWidth wMetrics_0, _x_3_1::I = iostate.accIOToolbox (oswindow.osGetCheckControlItemSize wMetrics_0 text_1_0) ioState_2, _x_3_2 = select _x_3_1::_Tuple2 0, w_3_3 = select _x_3_2::_Tuple2 0, wOK_3_4::I = <{StdControlClass._c;51;16_142}> (<{StdInt.<_17}> x_3_0 w_3_3) w_3_3 x_3_0 in <{_Tuple2!3}> (windowhandle._CheckItemInfo (_Tuple4 text_1_0 wOK_3_4 mark_1_2 f_1_3) StdIOBasic.zero_11 (StdIOBasic._Size wOK_3_4 (select _x_3_2::_Tuple2 1)) -1) (select _x_3_1::_Tuple2 1)) ) 
<{StdControlClass._c;51;16_142}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_141}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_140}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_139}>::I !_x_0::B reqW_1::I x_2::I = case _x_0 (True -> reqW_1) (_ -> x_2)
StdControlClass.anon_111::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_112::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_12 !_x_0 !pState_1 = case _x_0 (StdControlDef.CheckControl items_1_0 layout_1_1 atts_1_2 -> let _x_2_0 = iostate.ioStGetOSWindowMetrics (select pState_1::iostate._PSt 1), _x_2_1 = commondef.ulength items_1_0, _x_2_2 = commondef.stateMap (StdControlClass.checkItemToInfo_47 (select _x_2_0::_Tuple2 0)) (select _x_2_1::_Tuple2 1) (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_2) 0 windowhandle.IsCheckControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_2)) (StdControlClass.getSelectStateAttribute atts_1_2) (windowhandle.CheckInfo (windowhandle._CheckInfo (select _x_2_2::_Tuple2 0) (StdControlClass.validateLayout (select _x_2_1::_Tuple2 0) layout_1_1))) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_112 atts_1_2)) _predefined._Nil False StdIOBasic.zero_11 StdIOBasic.zero_15 -1 StdMisc.undef))) _predefined._Nil) (update pState_1::iostate._PSt [1:select _x_2_2::_Tuple2 1])) 
StdControlClass.getControlType_13 _x_0 = "CheckControl"
StdControlClass.anon_55 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.anon_113::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_114::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_14 !_vControls_0 !_x_1 !pState_2 = case _x_1 (StdControlDef.CompoundControl controls_1_0 atts_1_1 -> let domain_2_0 = windowvalidate.validateViewDomain (StdControlAttribute.getControlViewDomainAtt (select (commondef.cselect StdControlAttribute.isControlViewDomain (StdControlDef.ControlViewDomain (update StdIOCommon.viewDomainRange::StdIOBasic._Rectangle [0:StdIOBasic.zero_21])) atts_1_1)::_Tuple2 1)), _x_2_1 = commondef.cselect StdControlAttribute.isControlHScroll StdMisc.undef atts_1_1, _x_2_2 = commondef.cselect StdControlAttribute.isControlVScroll StdMisc.undef atts_1_1, _x_2_3 = StdControlAttribute.getControlLookAtt (select (commondef.cselect StdControlAttribute.isControlLook (StdControlDef.ControlLook True StdIOCommon.stdUnfillUpdAreaLook) atts_1_1)::_Tuple2 1), _x_2_4 = select _vControls_0::<{StdControlClass.Controls;}> 0 controls_1_0 pState_2, hScrollAtt_2_5 = select _x_2_1::_Tuple2 1, vScrollAtt_2_6 = select _x_2_2::_Tuple2 1 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_1) 0 windowhandle.IsCompoundControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_1)) (StdControlClass.getSelectStateAttribute atts_1_1) (windowhandle.CompoundInfo (windowhandle._CompoundInfo (commondef.rectangleToRect domain_2_0) (StdControlClass.validateOrigin domain_2_0 (StdControlAttribute.getControlOriginAtt (select (commondef.cselect StdControlAttribute.isControlOrigin (StdControlDef.ControlOrigin (select domain_2_0::StdIOBasic._Rectangle 0)) atts_1_1)::_Tuple2 1))) (<{StdControlClass._if;209;63_143}> (select _x_2_1::_Tuple2 0) hScrollAtt_2_5) (<{StdControlClass._if;210;63_144}> (select _x_2_2::_Tuple2 0) vScrollAtt_2_6) (windowhandle._CompoundLookInfo (windowhandle._LookInfo (select _x_2_3::_Tuple2 1) (StdControlClass.getInitialPen atts_1_1) (select _x_2_3::_Tuple2 0)) (windowhandle._ClipState 0 False)))) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_114 atts_1_1)) (StdList.map windowhandle.controlStateToWElementHandle (select _x_2_4::_Tuple2 0)) False StdIOBasic.zero_11 StdIOBasic.zero_15 -1 StdMisc.undef))) _predefined._Nil) (select _x_2_4::_Tuple2 1)) 
<{StdControlClass._if;210;63_144}> !_x_0::B vScrollAtt_1 = case _x_0 (True -> Data.Maybe.Just (windowhandle._ScrollInfo (StdControlAttribute.getControlVScrollFun vScrollAtt_1) StdIOBasic.zero_21 StdIOBasic.zero_15 -1)) (_ -> Data.Maybe.Nothing)
<{StdControlClass._if;209;63_143}> !_x_0::B hScrollAtt_1 = case _x_0 (True -> Data.Maybe.Just (windowhandle._ScrollInfo (StdControlAttribute.getControlHScrollFun hScrollAtt_1) StdIOBasic.zero_21 StdIOBasic.zero_15 -1)) (_ -> Data.Maybe.Nothing)
StdControlClass.getControlType_15 !_vControls_0 _x_1 = "CompoundControl"
StdControlClass.anon_56 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.anon_115::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_116::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_16 !_x_0 !pState_1 = case _x_0 (StdControlDef.CustomButtonControl _x_1_0 controlLook_1_1 atts_1_2 -> case _x_1_0 (StdIOBasic._Size w_2_0 h_2_1 -> let x_3_0::I = 0, x_3_1::I = 0 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_2) 0 windowhandle.IsCustomButtonControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_2)) (StdControlClass.getSelectStateAttribute atts_1_2) (windowhandle.CustomButtonInfo (windowhandle._CustomButtonInfo (windowhandle._LookInfo controlLook_1_1 (StdControlClass.getInitialPen atts_1_2) True))) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_116 atts_1_2)) _predefined._Nil False StdIOBasic.zero_11 (StdIOBasic._Size (<{StdControlClass._c;51;16_145}> (<{StdInt.<_17}> x_3_0 w_2_0) w_2_0 x_3_0) (<{StdControlClass._c;51;16_146}> (<{StdInt.<_17}> x_3_1 h_2_1) h_2_1 x_3_1)) -1 StdMisc.undef))) _predefined._Nil) pState_1) ) 
<{StdControlClass._c;51;16_146}>::I !_x_0::B h_1::I x_2::I = case _x_0 (True -> h_1) (_ -> x_2)
<{StdControlClass._c;51;16_145}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
StdControlClass.getControlType_17 _x_0 = "CustomButtonControl"
StdControlClass.anon_57 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.anon_117::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_118::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_18 !_x_0 !pState_1 = case _x_0 (StdControlDef.CustomControl _x_1_0 controlLook_1_1 atts_1_2 -> case _x_1_0 (StdIOBasic._Size w_2_0 h_2_1 -> let x_3_0::I = 0, x_3_1::I = 0 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_2) 0 windowhandle.IsCustomControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_2)) (StdControlClass.getSelectStateAttribute atts_1_2) (windowhandle.CustomInfo (windowhandle._CustomInfo (windowhandle._LookInfo controlLook_1_1 (StdControlClass.getInitialPen atts_1_2) True))) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_118 atts_1_2)) _predefined._Nil False StdIOBasic.zero_11 (StdIOBasic._Size (<{StdControlClass._c;51;16_147}> (<{StdInt.<_17}> x_3_0 w_2_0) w_2_0 x_3_0) (<{StdControlClass._c;51;16_148}> (<{StdInt.<_17}> x_3_1 h_2_1) h_2_1 x_3_1)) -1 StdMisc.undef))) _predefined._Nil) pState_1) ) 
<{StdControlClass._c;51;16_148}>::I !_x_0::B h_1::I x_2::I = case _x_0 (True -> h_1) (_ -> x_2)
<{StdControlClass._c;51;16_147}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
StdControlClass.getControlType_19 _x_0 = "CustomControl"
StdControlClass.anon_58 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.getEditSize_48 !wMetrics_0 !nrLines_1::I !_x_2 !ioState_3 = case _x_2 (StdControlDef.PixelWidth reqW_1_0 -> let x_2_0::I = oswindow.osGetEditControlMinWidth wMetrics_0, _x_2_1 = iostate.accIOToolbox (oswindow.osGetEditControlSize wMetrics_0 reqW_1_0 nrLines_1) ioState_3, _x_2_2 = select _x_2_1::_Tuple2 0, w_2_3::I = select _x_2_2::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_149}> (<{StdInt.<_17}> x_2_0 w_2_3) w_2_3 x_2_0) (select _x_2_2::_Tuple2 1)) (select _x_2_1::_Tuple2 1)) (StdControlDef.TextWidth wtext_1_0 -> let x_2_0::I = oswindow.osGetEditControlMinWidth wMetrics_0, _x_2_1 = StdControlClass.getDialogFontTextWidth_108 wtext_1_0 ioState_3, w_2_2 = select _x_2_1::_Tuple2 0, ioState_2_3 = select _x_2_1::_Tuple2 1, _x_2_4::I = iostate.accIOToolbox (oswindow.osGetEditControlSize wMetrics_0 w_2_2 nrLines_1) ioState_2_3, _x_2_5 = select _x_2_4::_Tuple2 0, w_2_6::I = select _x_2_5::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_150}> (<{StdInt.<_17}> x_2_0 w_2_6) w_2_6 x_2_0) (select _x_2_5::_Tuple2 1)) (select _x_2_4::_Tuple2 1)) (StdControlDef.ContentWidth wtext_1_0 -> let x_2_0::I = oswindow.osGetEditControlMinWidth wMetrics_0, _x_2_1 = StdControlClass.getDialogFontTextWidth_108 (<{StdString.+++_11}> wtext_1_0 "mm") ioState_3, w_2_2 = select _x_2_1::_Tuple2 0, ioState_2_3 = select _x_2_1::_Tuple2 1, _x_2_4::I = iostate.accIOToolbox (oswindow.osGetEditControlSize wMetrics_0 w_2_2 nrLines_1) ioState_2_3, _x_2_5 = select _x_2_4::_Tuple2 0, w_2_6::I = select _x_2_5::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_151}> (<{StdInt.<_17}> x_2_0 w_2_6) w_2_6 x_2_0) (select _x_2_5::_Tuple2 1)) (select _x_2_4::_Tuple2 1)) 
<{StdControlClass._c;51;16_151}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_150}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_149}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
StdControlClass.anon_119::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_120::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_20 !_x_0 !pState_1 = case _x_0 (StdControlDef.EditControl textLine_1_0 cWidth_1_1 nrLines_1_2 atts_1_3 -> let _x_2_0 = iostate.ioStGetOSWindowMetrics (select pState_1::iostate._PSt 1), _x_2_1 = StdControlClass.getEditSize_48 (select _x_2_0::_Tuple2 0) nrLines_1_2 cWidth_1_1 (select _x_2_0::_Tuple2 1), size_2_2 = select _x_2_1::_Tuple2 0 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_3) 0 windowhandle.IsEditControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_3)) (StdControlClass.getSelectStateAttribute atts_1_3) (windowhandle.EditInfo (windowhandle._EditInfo textLine_1_0 (select size_2_2::StdIOBasic._Size 0) nrLines_1_2)) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_120 atts_1_3)) _predefined._Nil False StdIOBasic.zero_11 size_2_2 -1 StdMisc.undef))) _predefined._Nil) (update pState_1::iostate._PSt [1:select _x_2_1::_Tuple2 1])) 
StdControlClass.getControlType_21 _x_0 = "EditControl"
StdControlClass.anon_59 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.anon_121::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_122::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_22 !_vControls_0 !_x_1 !pState_2 = case _x_1 (StdControlDef.LayoutControl controls_1_0 atts_1_1 -> let _x_2_0 = select _vControls_0::<{StdControlClass.Controls;}> 0 controls_1_0 pState_2 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_1) 0 windowhandle.IsLayoutControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_1)) (StdControlClass.getSelectStateAttribute atts_1_1) windowhandle.NoWItemInfo (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_122 atts_1_1)) (StdList.map windowhandle.controlStateToWElementHandle (select _x_2_0::_Tuple2 0)) False StdIOBasic.zero_11 StdIOBasic.zero_15 -1 StdMisc.undef))) _predefined._Nil) (select _x_2_0::_Tuple2 1)) 
StdControlClass.getControlType_23 !_vControls_0 _x_1 = "LayoutControl"
StdControlClass.anon_61 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.fst_60 !tuple_0 = select tuple_0::_Tuple2 0
StdControlClass.getPopUpSize_49 !wMetrics_0 _x_1 !_x_2 !ioState_3 = case _x_2 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (StdControlDef.PixelWidth reqW_2_0 -> let x_3_0::I = oswindow.osGetPopUpControlMinWidth wMetrics_0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_152}> (<{StdInt.<_17}> x_3_0 reqW_2_0) reqW_2_0 x_3_0) (oswindow.osGetPopUpControlHeight wMetrics_0)) ioState_3) (StdControlDef.TextWidth wtext_2_0 -> let x_3_0::I = oswindow.osGetPopUpControlMinWidth wMetrics_0, _x_3_1 = StdControlClass.getDialogFontTextWidth_108 wtext_2_0 ioState_3, w_3_2::I = select _x_3_1::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_153}> (<{StdInt.<_17}> x_3_0 w_3_2) w_3_2 x_3_0) (oswindow.osGetPopUpControlHeight wMetrics_0)) (select _x_3_1::_Tuple2 1)) (StdControlDef.ContentWidth wtext_2_0 -> let x_3_0::I = oswindow.osGetPopUpControlMinWidth wMetrics_0, _x_3_1 = iostate.accIOToolbox (oswindow.osGetPopUpControlSize wMetrics_0 (_predefined._Cons wtext_2_0 _predefined._Nil)) ioState_3, _x_3_2 = select _x_3_1::_Tuple2 0, w_3_3::I = select _x_3_2::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_154}> (<{StdInt.<_17}> x_3_0 w_3_3) w_3_3 x_3_0) (select _x_3_2::_Tuple2 1)) (select _x_3_1::_Tuple2 1)) ) (Data.Maybe.Nothing -> let x_2_0::I = oswindow.osGetPopUpControlMinWidth wMetrics_0, _x_2_1 = iostate.accIOToolbox (oswindow.osGetPopUpControlSize wMetrics_0 (<{StdControlClass._if;420;85_155}> (StdList.isEmpty _x_1) _x_1)) ioState_3, _x_2_2 = select _x_2_1::_Tuple2 0, w_2_3::I = select _x_2_2::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_156}> (<{StdInt.<_17}> x_2_0 w_2_3) w_2_3 x_2_0) (select _x_2_2::_Tuple2 1)) (select _x_2_1::_Tuple2 1)) 
<{StdControlClass._c;51;16_156}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._if;420;85_155}> !_x_0::B _x_1 = case _x_0 (True -> _predefined._Cons "MMMMMMMMMM" _predefined._Nil) (_ -> _x_1)
<{StdControlClass._c;51;16_154}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_153}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_152}>::I !_x_0::B reqW_1::I x_2::I = case _x_0 (True -> reqW_1) (_ -> x_2)
StdControlClass.anon_123::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_124::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_24 !_x_0 !pState_1 = case _x_0 (StdControlDef.PopUpControl popUp_1_0 index_1_1 atts_1_2 -> let _x_2_0 = iostate.ioStGetOSWindowMetrics (select pState_1::iostate._PSt 1), _x_2_1 = StdControlClass.getPopUpSize_49 (select _x_2_0::_Tuple2 0) (StdList.map StdControlClass.fst_60 popUp_1_0) (StdControlClass.getControlWidthAttribute atts_1_2) (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_2) 0 windowhandle.IsPopUpControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_2)) (StdControlClass.getSelectStateAttribute atts_1_2) (windowhandle.PopUpInfo (windowhandle._PopUpInfo popUp_1_0 (StdControlClass.validatePopUpIndex (StdList.length_47 popUp_1_0) index_1_1) Data.Maybe.Nothing)) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_124 atts_1_2)) _predefined._Nil False StdIOBasic.zero_11 (select _x_2_1::_Tuple2 0) -1 StdMisc.undef))) _predefined._Nil) (update pState_1::iostate._PSt [1:select _x_2_1::_Tuple2 1])) 
StdControlClass.getControlType_25 _x_0 = "PopUpControl"
StdControlClass.anon_62 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.radioItemToInfo_50 !wMetrics_0 !_x_1 !ioState_2 = case _x_1 (_Tuple3 text_1_0 _x_1_1 f_1_2 -> case _x_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (StdControlDef.PixelWidth reqW_3_0 -> let x_4_0::I = oswindow.osGetRadioControlItemMinWidth wMetrics_0, wOK_4_1::I = <{StdControlClass._c;51;16_157}> (<{StdInt.<_17}> x_4_0 reqW_3_0) reqW_3_0 x_4_0 in <{_Tuple2!3}> (windowhandle._RadioItemInfo (_Tuple3 text_1_0 wOK_4_1 f_1_2) StdIOBasic.zero_11 (StdIOBasic._Size wOK_4_1 (oswindow.osGetRadioControlItemHeight wMetrics_0)) -1) ioState_2) (StdControlDef.TextWidth wtext_3_0 -> let x_4_0::I = oswindow.osGetRadioControlItemMinWidth wMetrics_0, _x_4_1::I = StdControlClass.getDialogFontTextWidth_108 wtext_3_0 ioState_2, w_4_2 = select _x_4_1::_Tuple2 0, wOK_4_3::I = <{StdControlClass._c;51;16_158}> (<{StdInt.<_17}> x_4_0 w_4_2) w_4_2 x_4_0 in <{_Tuple2!3}> (windowhandle._RadioItemInfo (_Tuple3 text_1_0 wOK_4_3 f_1_2) StdIOBasic.zero_11 (StdIOBasic._Size wOK_4_3 (oswindow.osGetRadioControlItemHeight wMetrics_0)) -1) (select _x_4_1::_Tuple2 1)) (StdControlDef.ContentWidth wtext_3_0 -> let x_4_0::I = oswindow.osGetRadioControlItemMinWidth wMetrics_0, _x_4_1::I = iostate.accIOToolbox (oswindow.osGetRadioControlItemSize wMetrics_0 wtext_3_0) ioState_2, _x_4_2 = select _x_4_1::_Tuple2 0, w_4_3 = select _x_4_2::_Tuple2 0, wOK_4_4::I = <{StdControlClass._c;51;16_159}> (<{StdInt.<_17}> x_4_0 w_4_3) w_4_3 x_4_0 in <{_Tuple2!3}> (windowhandle._RadioItemInfo (_Tuple3 text_1_0 wOK_4_4 f_1_2) StdIOBasic.zero_11 (StdIOBasic._Size wOK_4_4 (select _x_4_2::_Tuple2 1)) -1) (select _x_4_1::_Tuple2 1)) ) (Data.Maybe.Nothing -> let x_3_0::I = oswindow.osGetRadioControlItemMinWidth wMetrics_0, _x_3_1::I = iostate.accIOToolbox (oswindow.osGetRadioControlItemSize wMetrics_0 text_1_0) ioState_2, _x_3_2 = select _x_3_1::_Tuple2 0, w_3_3 = select _x_3_2::_Tuple2 0, wOK_3_4::I = <{StdControlClass._c;51;16_160}> (<{StdInt.<_17}> x_3_0 w_3_3) w_3_3 x_3_0 in <{_Tuple2!3}> (windowhandle._RadioItemInfo (_Tuple3 text_1_0 wOK_3_4 f_1_2) StdIOBasic.zero_11 (StdIOBasic._Size wOK_3_4 (select _x_3_2::_Tuple2 1)) -1) (select _x_3_1::_Tuple2 1)) ) 
<{StdControlClass._c;51;16_160}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_159}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_158}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_157}>::I !_x_0::B reqW_1::I x_2::I = case _x_0 (True -> reqW_1) (_ -> x_2)
StdControlClass.anon_125::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_126::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_26 !_x_0 !pState_1 = case _x_0 (StdControlDef.RadioControl items_1_0 layout_1_1 index_1_2 atts_1_3 -> let _x_2_0::I = iostate.ioStGetOSWindowMetrics (select pState_1::iostate._PSt 1), _x_2_1 = commondef.ulength items_1_0, _x_2_2 = commondef.stateMap (StdControlClass.radioItemToInfo_50 (select _x_2_0::_Tuple2 0)) (select _x_2_1::_Tuple2 1) (select _x_2_0::_Tuple2 1), nr_2_3 = select _x_2_1::_Tuple2 0 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_3) 0 windowhandle.IsRadioControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_3)) (StdControlClass.getSelectStateAttribute atts_1_3) (windowhandle.RadioInfo (windowhandle._RadioInfo (select _x_2_2::_Tuple2 0) (StdControlClass.validateLayout nr_2_3 layout_1_1) (commondef.setBetween index_1_2 1 nr_2_3))) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_126 atts_1_3)) _predefined._Nil False StdIOBasic.zero_11 StdIOBasic.zero_15 -1 StdMisc.undef))) _predefined._Nil) (update pState_1::iostate._PSt [1:select _x_2_2::_Tuple2 1])) 
StdControlClass.getControlType_27 _x_0 = "RadioControl"
StdControlClass.anon_63 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.getSliderSize_51 !wMetrics_0 !isHorizontal_1::B !_x_2 !ioState_3 = case _x_2 (StdControlDef.PixelWidth reqW_1_0 -> let _x_2_0 = oswindow.osGetSliderControlSize wMetrics_0 isHorizontal_1 reqW_1_0 in <{_Tuple2!3}> (StdIOBasic._Size (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1)) ioState_3) (StdControlDef.TextWidth wtext_1_0 -> let _x_2_0 = StdControlClass.getDialogFontTextWidth_108 wtext_1_0 ioState_3, _x_2_1 = oswindow.osGetSliderControlSize wMetrics_0 isHorizontal_1 (select _x_2_0::_Tuple2 0) in <{_Tuple2!3}> (StdIOBasic._Size (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1)) (select _x_2_0::_Tuple2 1)) (StdControlDef.ContentWidth wtext_1_0 -> let _x_2_0 = StdControlClass.getDialogFontTextWidth_108 wtext_1_0 ioState_3, _x_2_1 = oswindow.osGetSliderControlSize wMetrics_0 isHorizontal_1 (select _x_2_0::_Tuple2 0) in <{_Tuple2!3}> (StdIOBasic._Size (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1)) (select _x_2_0::_Tuple2 1)) 
StdControlClass.anon_127::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_128::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_28 !_x_0 !pState_1 = case _x_0 (StdControlDef.SliderControl direction_1_0 cWidth_1_1 sliderState_1_2 action_1_3 atts_1_4 -> let isHorizontal_2_0 = <{StdIOCommon.==_35}> direction_1_0 StdIOCommon.Horizontal, _x_2_1 = iostate.ioStGetOSWindowMetrics (select pState_1::iostate._PSt 1), wMetrics_2_2 = select _x_2_1::_Tuple2 0, ioState_2_3 = select _x_2_1::_Tuple2 1, _x_2_4 = StdControlClass.getSliderSize_51 wMetrics_2_2 isHorizontal_2_0 cWidth_1_1 ioState_2_3, size_2_5::B = select _x_2_4::_Tuple2 0 in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_4) 0 windowhandle.IsSliderControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_4)) (StdControlClass.getSelectStateAttribute atts_1_4) (windowhandle.SliderInfo (windowhandle._SliderInfo direction_1_0 (<{StdControlClass._if;490;63_161}> isHorizontal_2_0 size_2_5) (controlvalidate.validateSliderState sliderState_1_2) action_1_3)) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_128 atts_1_4)) _predefined._Nil False StdIOBasic.zero_11 size_2_5 -1 StdMisc.undef))) _predefined._Nil) (update pState_1::iostate._PSt [1:select _x_2_4::_Tuple2 1])) 
<{StdControlClass._if;490;63_161}>::I !isHorizontal_0::B !size_1 = case isHorizontal_0 (True -> select size_1::StdIOBasic._Size 0) (_ -> select size_1::StdIOBasic._Size 1)
StdControlClass.getControlType_29 _x_0 = "SliderControl"
StdControlClass.anon_64 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdControlClass.getTextSize_52 !wMetrics_0 !_x_1 !_x_2 !ioState_3 = case _x_2 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (StdControlDef.PixelWidth reqW_2_0 -> let x_3_0::I = oswindow.osGetTextControlMinWidth wMetrics_0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_162}> (<{StdInt.<_17}> x_3_0 reqW_2_0) reqW_2_0 x_3_0) (oswindow.osGetTextControlHeight wMetrics_0)) ioState_3) (StdControlDef.TextWidth wtext_2_0 -> let x_3_0::I = oswindow.osGetTextControlMinWidth wMetrics_0, _x_3_1 = StdControlClass.getDialogFontTextWidth_108 wtext_2_0 ioState_3, w_3_2::I = select _x_3_1::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_163}> (<{StdInt.<_17}> x_3_0 w_3_2) w_3_2 x_3_0) (oswindow.osGetTextControlHeight wMetrics_0)) (select _x_3_1::_Tuple2 1)) (StdControlDef.ContentWidth wtext_2_0 -> let x_3_0::I = oswindow.osGetTextControlMinWidth wMetrics_0, _x_3_1 = iostate.accIOToolbox (oswindow.osGetTextControlSize wMetrics_0 wtext_2_0) ioState_3, _x_3_2 = select _x_3_1::_Tuple2 0, w_3_3::I = select _x_3_2::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_164}> (<{StdInt.<_17}> x_3_0 w_3_3) w_3_3 x_3_0) (select _x_3_2::_Tuple2 1)) (select _x_3_1::_Tuple2 1)) ) (Data.Maybe.Nothing -> let x_2_0::I = oswindow.osGetTextControlMinWidth wMetrics_0, _x_2_1 = iostate.accIOToolbox (oswindow.osGetTextControlSize wMetrics_0 _x_1) ioState_3, _x_2_2 = select _x_2_1::_Tuple2 0, w_2_3::I = select _x_2_2::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdControlClass._c;51;16_165}> (<{StdInt.<_17}> x_2_0 w_2_3) w_2_3 x_2_0) (select _x_2_2::_Tuple2 1)) (select _x_2_1::_Tuple2 1)) 
<{StdControlClass._c;51;16_165}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_164}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_163}>::I !_x_0::B w_1::I x_2::I = case _x_0 (True -> w_1) (_ -> x_2)
<{StdControlClass._c;51;16_162}>::I !_x_0::B reqW_1::I x_2::I = case _x_0 (True -> reqW_1) (_ -> x_2)
StdControlClass.anon_129::B !g_0 x_1 = StdBool.not (g_0 x_1)
StdControlClass.anon_130::B !x_0 = StdBool.not (StdControlClass.redundantAttribute x_0)
StdControlClass.controlToHandles_30 !_x_0 !pState_1 = case _x_0 (StdControlDef.TextControl textLine_1_0 atts_1_1 -> let _x_2_0 = iostate.ioStGetOSWindowMetrics (select pState_1::iostate._PSt 1), _x_2_1 = StdControlClass.getTextSize_52 (select _x_2_0::_Tuple2 0) textLine_1_0 (StdControlClass.getControlWidthAttribute atts_1_1) (select _x_2_0::_Tuple2 1) in <{_Tuple2!3}> (_predefined._Cons (windowhandle.wElementHandleToControlState (windowhandle.WItemHandle (windowhandle._WItemHandle (StdControlClass.getIdAttribute atts_1_1) 0 windowhandle.IsTextControl (StdBool.not (commondef.contains StdControlAttribute.isControlHide atts_1_1)) (StdControlClass.getSelectStateAttribute atts_1_1) (windowhandle.TextInfo (windowhandle._TextInfo textLine_1_0)) (StdList.map StdControlClass.validateControlPos (StdList.filter StdControlClass.anon_130 atts_1_1)) _predefined._Nil False StdIOBasic.zero_11 (select _x_2_1::_Tuple2 0) -1 StdMisc.undef))) _predefined._Nil) (update pState_1::iostate._PSt [1:select _x_2_1::_Tuple2 1])) 
StdControlClass.getControlType_31 _x_0 = "TextControl"
<{StdControlClass.TD;Controls;}> _x_0::B = _predefined._Nil


|| Converted Records
:: <{StdControlClass.Controls;}> = {!StdControlClass.controlToHandles, !StdControlClass.getControlType}

:: <{StdControlClass.gEq_s;}> = {!StdControlClass.gEq_s}

:: <{StdControlClass.gEq_ss;}> = {!StdControlClass.gEq_ss}

:: <{StdControlClass.gEq_sss;}> = {!StdControlClass.gEq_sss}

:: <{StdControlClass.gEq_ssss;}> = {!StdControlClass.gEq_ssss}

:: <{StdControlClass.gEq_sssss;}> = {!StdControlClass.gEq_sssss}

:: <{StdControlClass.gEq_ssssss;}> = {!StdControlClass.gEq_ssssss}

:: <{StdControlClass.gEq_sssssss;}> = {!StdControlClass.gEq_sssssss}

:: <{StdControlClass.gEq_ssssssss;}> = {!StdControlClass.gEq_ssssssss}

:: <{StdControlClass.gEq_sssssssss;}> = {!StdControlClass.gEq_sssssssss}

:: <{StdControlClass.bimap_s;}> = {StdControlClass.bimap_s}

:: <{StdControlClass.bimap_ss;}> = {StdControlClass.bimap_ss}

:: <{StdControlClass.bimap_sss;}> = {StdControlClass.bimap_sss}

