|| ?module? StdWindow


StdWindow.closeWindow !id_0 !pState_1 = windowdispose.disposeWindow (windowaccess.toWID_71 id_0) (StdPSt.appPIO (menuwindowmenu.removeWindowFromWindowMenu id_0) pState_1)
StdWindow.anon_73 !_x_0 = case _x_0 (windowhandle._WIDS w_1_0 wPtr_1_1 wActive_1_2 -> w_1_0) 
StdWindow.getActiveWindow !ioState_0 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_0 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let _x_3_0 = windowaccess.getWindowHandlesActiveWindow (devicesystemstate.windowSystemStateGetWindowHandles (select _x_1_0::_Tuple3 1)) in <{_Tuple2!3}> (StdMaybe.mapMaybe StdWindow.anon_73 (select _x_3_0::_Tuple2 0)) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_0::_Tuple2 1)) (select _x_1_0::_Tuple3 2))) 
StdWindow.closeActiveWindow !pState_0 = let _x_1_0 = StdPSt.accPIO StdWindow.getActiveWindow pState_0, maybe_1_1 = select _x_1_0::_Tuple2 0 in case (Data.Maybe.isNothing maybe_1_1) (True -> select _x_1_0::_Tuple2 1) (False -> StdWindow.closeWindow (Data.Maybe.fromJust maybe_1_1) (select _x_1_0::_Tuple2 1)) 
StdWindow.anon_118 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdWindow.snd_117 !tuple_0 = select tuple_0::_Tuple2 1
StdWindow.anon_116 !f_0 g_1 x_2 = f_0 (g_1 x_2)
StdWindow.snd_115 !tuple_0 = select tuple_0::_Tuple2 1
StdWindow.ismodalwindow_72 !wsH_0 = let _x_1_0 = windowaccess.getWindowStateHandleWindowMode wsH_0 in <{_Tuple2!3}> (<{windowhandle.==_5}> (select _x_1_0::_Tuple2 0) windowhandle.Modal) (select _x_1_0::_Tuple2 1)
StdWindow.handleOSEvent !osEvent_0 !_x_1 = case _x_1 (_Tuple2 pState_1_0 tb_1_1 -> <{_Tuple2!3}> (select (scheduler.handleOneEventForDevices (deviceevents.ScheduleOSEvent osEvent_0 _predefined._Nil) pState_1_0)::_Tuple3 2) tb_1_1) 
StdWindow.anon_164 !g_0 x_1 = StdWindow.snd_115 (g_0 x_1)
StdWindow.anon_165 !g_0 x_1 = StdWindow.snd_117 (g_0 x_1)
StdWindow.anon_166::I !_x_0::I !_x_1::B !x_2::I = StdWindow.snd_115 (oswindow.osShowWindow _x_0 _x_1 x_2)
StdWindow.anon_167::I !_x_0::I !_x_1::B !x_2::I = StdWindow.snd_117 (oswindow.osShowWindow _x_0 _x_1 x_2)
StdWindow.setActiveWindow !w_0 !pState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice (select pState_1::iostate._PSt 1) in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> update pState_1::iostate._PSt [1:select _x_1_0::_Tuple3 2]) (False -> let wid_3_0 = windowaccess.toWID_71 w_0, wDevice_3_1 = select _x_1_0::_Tuple3 1, windows_3_2 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_1, _x_3_3 = windowaccess.hasWindowHandlesWindow wid_3_0 windows_3_2 in case (StdBool.not (select _x_3_3::_Tuple2 0)) (True -> update pState_1::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_3::_Tuple2 1)) (select _x_1_0::_Tuple3 2)]) (False -> let windows_5_0 = select _x_3_3::_Tuple2 1, _x_5_1 = windowaccess.getWindowHandlesActiveWindow windows_5_0, activeW_5_2 = select _x_5_1::_Tuple2 0 in case (case (Data.Maybe.isJust activeW_5_2) (True -> <{id.==_27}> (select (Data.Maybe.fromJust activeW_5_2)::windowhandle._WIDS 0) w_0) (False -> False) ) (True -> update pState_1::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_5_1::_Tuple2 1)) (select _x_1_0::_Tuple3 2)]) (False -> let windows_7_0 = select _x_5_1::_Tuple2 1, _x_7_1 = windowaccess.getWindowHandlesWindows windows_7_0, wHs_7_2 = select _x_7_1::_Tuple2 0, _x_7_3 = commondef.uspan StdWindow.ismodalwindow_72 wHs_7_2, modal_7_4 = select _x_7_3::_Tuple2 0, _x_7_5 = commondef.ucontains (windowaccess.identifyWindowStateHandle wid_3_0) modal_7_4 in case (select _x_7_5::_Tuple2 0) (True -> update pState_1::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.WindowSystemState (update (select _x_7_1::_Tuple2 1)::windowhandle._WindowHandles [0:<{StdList.++}> (select _x_7_5::_Tuple2 1) (select _x_7_3::_Tuple2 1)])) (select _x_1_0::_Tuple3 2)]) (False -> let modal_9_0 = select _x_7_5::_Tuple2 1, _x_9_1 = commondef.uisEmpty modal_9_0 in case (select _x_9_1::_Tuple2 0) (True -> let ioState_11_0::I = select _x_1_0::_Tuple3 2, _x_11_1::I = iostate.ioStGetOSDInfo ioState_11_0, osd_11_2 = select _x_11_1::_Tuple2 0, isSD_11_3 = <{StdIOCommon.==_39}> (osdocumentinterface.getOSDInfoDocumentInterface osd_11_2) StdIOCommon.SDI, activatePtr_11_4 = <{StdWindow._if;199;35_171}> (StdWindow._f170_170 isSD_11_3 wids_11_14 clientPtr_11_17) framePtr_11_16 wids_11_14, modeless_11_5 = select _x_7_3::_Tuple2 1, _x_11_6 = commondef.uremove (windowaccess.identifyWindowStateHandle wid_3_0) StdMisc.undef modeless_11_5, wsH_11_7 = select _x_11_6::_Tuple3 1, _x_11_8 = windowaccess.getWindowStateHandleShow wsH_11_7, wsH_11_9 = select _x_11_8::_Tuple2 1, _x_11_10 = windowaccess.getWindowStateHandleWIDS wsH_11_9, _x_11_11 = iostate.getIOToolbox (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (update (select _x_7_1::_Tuple2 1)::windowhandle._WindowHandles [0:_predefined._Cons (select _x_11_10::_Tuple2 1) (select _x_11_6::_Tuple3 2)])) (select _x_11_1::_Tuple2 1)), _x_11_12 = oswindow.osActivateWindow osd_11_2 activatePtr_11_4 StdWindow.handleOSEvent (update pState_1::iostate._PSt [1:select _x_11_11::_Tuple2 1]) (<{StdWindow._if;200;35_169}> (select _x_11_8::_Tuple2 0) activatePtr_11_4 (select _x_11_11::_Tuple2 0)), pState_11_13::I = select _x_11_12::_Tuple3 1, wids_11_14::B = select _x_11_10::_Tuple2 0, _x_11_15 = <{StdWindow._c;191;35_168}> (osdocumentinterface.getOSDInfoOSInfo osd_11_2), framePtr_11_16 = select _x_11_15::_Tuple2 0, clientPtr_11_17 = select _x_11_15::_Tuple2 1 in update pState_11_13::iostate._PSt [1:windowcreate.bufferDelayedEvents (select _x_11_12::_Tuple3 0) (iostate.setIOToolbox (select _x_11_12::_Tuple3 2) (select pState_11_13::iostate._PSt 1))]) (False -> let ioState_11_0::I = select _x_1_0::_Tuple3 2, _x_11_1::I = iostate.ioStGetOSDInfo ioState_11_0, osd_11_2 = select _x_11_1::_Tuple2 0, isSD_11_3 = <{StdIOCommon.==_39}> (osdocumentinterface.getOSDInfoDocumentInterface osd_11_2) StdIOCommon.SDI, activatePtr_11_4 = <{StdWindow._if;215;35_175}> (StdWindow._f174_174 isSD_11_3 modelessW_11_16 clientPtr_11_19) framePtr_11_18 modelessW_11_16, _x_11_5 = commondef.initLast (select _x_9_1::_Tuple2 1), _x_11_6 = windowaccess.getWindowStateHandleWIDS (select _x_11_5::_Tuple2 1), modeless_11_7 = select _x_7_3::_Tuple2 1, _x_11_8 = commondef.uremove (windowaccess.identifyWindowStateHandle wid_3_0) StdMisc.undef modeless_11_7, wsH_11_9 = select _x_11_8::_Tuple3 1, _x_11_10 = windowaccess.getWindowStateHandleShow wsH_11_9, wsH_11_11 = select _x_11_10::_Tuple2 1, _x_11_12 = windowaccess.getWindowStateHandleWIDS wsH_11_11, _x_11_13 = iostate.getIOToolbox (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (update (select _x_7_1::_Tuple2 1)::windowhandle._WindowHandles [0:<{StdList.++}> (select _x_11_5::_Tuple2 0) (_predefined._Cons (select _x_11_6::_Tuple2 1) (_predefined._Cons (select _x_11_12::_Tuple2 1) (select _x_11_8::_Tuple3 2)))])) (select _x_11_1::_Tuple2 1)), _x_11_14 = oswindow.osStackWindow activatePtr_11_4 (select (select _x_11_6::_Tuple2 0)::windowhandle._WIDS 1) StdWindow.handleOSEvent (update pState_1::iostate._PSt [1:select _x_11_13::_Tuple2 1]) (<{StdWindow._if;216;35_173}> (select _x_11_10::_Tuple2 0) activatePtr_11_4 (select _x_11_13::_Tuple2 0)), pState_11_15::I = select _x_11_14::_Tuple3 1, modelessW_11_16::B = select _x_11_12::_Tuple2 0, _x_11_17 = <{StdWindow._c;191;35_172}> (osdocumentinterface.getOSDInfoOSInfo osd_11_2), framePtr_11_18 = select _x_11_17::_Tuple2 0, clientPtr_11_19 = select _x_11_17::_Tuple2 1 in update pState_11_15::iostate._PSt [1:windowcreate.bufferDelayedEvents (select _x_11_14::_Tuple3 0) (iostate.setIOToolbox (select _x_11_14::_Tuple3 2) (select pState_11_15::iostate._PSt 1))]) ) ) ) ) 
<{StdWindow._if;215;35_175}>::I !_x_0::B framePtr_1::I modelessW_2 = case _x_0 (True -> framePtr_1) (_ -> select modelessW_2::windowhandle._WIDS 1)
StdWindow._f174_174::B !isSD_0::B modelessW_1 clientPtr_2::I = case isSD_0 (True -> <{StdInt.==_16}> (select modelessW_1::windowhandle._WIDS 1) clientPtr_2) (_ -> False)
<{StdWindow._if;216;35_173}> !_x_0::B activatePtr_1::I = case _x_0 (True -> StdFunc.id) (_ -> StdWindow.anon_167 activatePtr_1 True)
<{StdWindow._c;191;35_172}> !_x_0 = case _x_0 (Data.Maybe.Just info_1_0 -> _Tuple2 (select info_1_0::osdocumentinterface._OSInfo 0) (select info_1_0::osdocumentinterface._OSInfo 2)) (_ -> _Tuple2 -1 -1)
<{StdWindow._if;199;35_171}>::I !_x_0::B framePtr_1::I wids_2 = case _x_0 (True -> framePtr_1) (_ -> select wids_2::windowhandle._WIDS 1)
StdWindow._f170_170::B !isSD_0::B wids_1 clientPtr_2::I = case isSD_0 (True -> <{StdInt.==_16}> (select wids_1::windowhandle._WIDS 1) clientPtr_2) (_ -> False)
<{StdWindow._if;200;35_169}> !_x_0::B activatePtr_1::I = case _x_0 (True -> StdFunc.id) (_ -> StdWindow.anon_166 activatePtr_1 True)
<{StdWindow._c;191;35_168}> !_x_0 = case _x_0 (Data.Maybe.Just info_1_0 -> _Tuple2 (select info_1_0::osdocumentinterface._OSInfo 0) (select info_1_0::osdocumentinterface._OSInfo 2)) (_ -> _Tuple2 -1 -1)
StdWindow.stdWindowFatalError !function_0 !error_1 = commondef.fatalError function_0 "StdWindow" error_1
StdWindow.getWElementHandleItemNrPtr_74 id_0 !id_1 !_x_2 = case _x_2 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (case (Data.Maybe.isNothing w_2_0) (True -> True) (False -> StdBool.not (<{id.==_27}> (Data.Maybe.fromJust w_2_0) id_1)) ) (True -> let _x_4_0 = StdWindow.getWElementHandlesItemNrPtr_75 id_1 w_2_7 in <{_Tuple4!15}> (select _x_4_0::_Tuple4 0) (select _x_4_0::_Tuple4 1) (select _x_4_0::_Tuple4 2) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_4_0::_Tuple4 3]))) (False -> <{_Tuple4!15}> True w_2_1 w_2_11 (windowhandle.WItemHandle itemH_1_0)) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = StdWindow.getWElementHandlesItemNrPtr_75 id_0 itemHs_1_0 in <{_Tuple4!15}> (select _x_2_0::_Tuple4 0) (select _x_2_0::_Tuple4 1) (select _x_2_0::_Tuple4 2) (windowhandle.WListLSHandle (select _x_2_0::_Tuple4 3))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = StdWindow.getWElementHandlesItemNrPtr_75 id_0 itemHs_2_1 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (select _x_3_0::_Tuple4 1) (select _x_3_0::_Tuple4 2) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple4 3]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = StdWindow.getWElementHandlesItemNrPtr_75 id_0 itemHs_2_1 in <{_Tuple4!15}> (select _x_3_0::_Tuple4 0) (select _x_3_0::_Tuple4 1) (select _x_3_0::_Tuple4 2) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple4 3]))) ) 
StdWindow.getWElementHandlesItemNrPtr_75 !id_0 !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = StdWindow.getWElementHandleItemNrPtr_74 id_0 id_0 itemH_1_0, found_2_1 = select _x_2_0::_Tuple4 0 in case found_2_1 (True -> <{_Tuple4!15}> found_2_1 (select _x_2_0::_Tuple4 1) (select _x_2_0::_Tuple4 2) (_predefined._Cons (select _x_2_0::_Tuple4 3) itemHs_1_1)) (False -> let _x_4_0 = StdWindow.getWElementHandlesItemNrPtr_75 id_0 itemHs_1_1 in <{_Tuple4!15}> (select _x_4_0::_Tuple4 0) (select _x_4_0::_Tuple4 1) (select _x_4_0::_Tuple4 2) (_predefined._Cons (select _x_2_0::_Tuple4 3) (select _x_4_0::_Tuple4 3))) ) (_ -> <{_Tuple4!15}> False 0 -1 _predefined._Nil)
StdWindow.setactivecontrol_76 !control_0 !wsH_1 !tb_2::I = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = StdWindow.getWElementHandlesItemNrPtr_75 control_0 wh_4_6 in case (StdBool.not (select _x_5_0::_Tuple4 0)) (True -> StdWindow.stdWindowFatalError "setActiveControl" "indicated control could not be located") (False -> let _x_7_0 = oswindow.osActivateControl (select wsh_1_0::windowhandle._WIDS 1) (select _x_5_0::_Tuple4 2) tb_2 in <{_Tuple3!7}> (select _x_7_0::_Tuple2 0) (update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple4 3]])]) (select _x_7_0::_Tuple2 1)) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "setActiveControl" "unexpected window placeholder argument")
StdWindow.setActiveControl !control_0 !pState_1 = case pState_1 (iostate._PSt ls_1_0 io_1_1 -> let _x_2_0 = StdId.getParentId control_0 io_1_1, parent_2_1 = select _x_2_0::_Tuple2 0 in case (Data.Maybe.isNothing parent_2_1) (True -> update pState_1::iostate._PSt [1:select _x_2_0::_Tuple2 1]) (False -> let ioState_4_0 = select _x_2_0::_Tuple2 1, _x_4_1 = StdWindow.getActiveWindow ioState_4_0, active_4_2 = select _x_4_1::_Tuple2 0 in case (Data.Maybe.isNothing active_4_2) (True -> update pState_1::iostate._PSt [1:select _x_4_1::_Tuple2 1]) (False -> let active_6_0 = Data.Maybe.fromJust active_4_2 in case (StdBool.not (<{id.==_27}> (Data.Maybe.fromJust parent_2_1) active_6_0)) (True -> update pState_1::iostate._PSt [1:select _x_4_1::_Tuple2 1]) (False -> let ioState_8_0 = select _x_4_1::_Tuple2 1, _x_8_1 = iostate.ioStGetDevice device.WindowDevice ioState_8_0 in case (StdBool.not (select _x_8_1::_Tuple3 0)) (True -> update pState_1::iostate._PSt [1:select _x_8_1::_Tuple3 2]) (False -> let wDevice_10_0 = select _x_8_1::_Tuple3 1, windows_10_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_10_0, _x_10_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 active_6_0) windows_10_1 in case (StdBool.not (select _x_10_2::_Tuple3 0)) (True -> StdWindow.stdWindowFatalError "setActiveControl" "parent window could not be located") (False -> let _x_12_0 = iostate.getIOToolbox (select _x_8_1::_Tuple3 2), _x_12_1 = StdWindow.setactivecontrol_76 control_0 (select _x_10_2::_Tuple3 1) (select _x_12_0::_Tuple2 0) in update pState_1::iostate._PSt [1:windowcreate.bufferDelayedEvents (select _x_12_1::_Tuple3 0) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_12_1::_Tuple3 1) (select _x_10_2::_Tuple3 2))) (iostate.setIOToolbox (select _x_12_1::_Tuple3 2) (select _x_12_0::_Tuple2 1)))]) ) ) ) ) ) 
StdWindow.getWElementHandleIdFromItemNr_77 !itemNr_0::I !_x_1 = case _x_1 (windowhandle.WItemHandle itemH_1_0 -> case itemH_1_0 (windowhandle._WItemHandle w_2_0 w_2_1 w_2_2 w_2_3 w_2_4 w_2_5 w_2_6 w_2_7 w_2_8 w_2_9 w_2_10 w_2_11 w_2_12 -> case (StdBool.not (<{StdInt.==_16}> itemNr_0 w_2_1)) (True -> let _x_4_0 = StdWindow.getWElementHandlesIdFromItemNr_78 itemNr_0 w_2_7 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (windowhandle.WItemHandle (update itemH_1_0::windowhandle._WItemHandle [7:select _x_4_0::_Tuple3 2]))) (False -> <{_Tuple3!7}> True (_Tuple2 True w_2_0) (windowhandle.WItemHandle itemH_1_0)) ) ) (windowhandle.WListLSHandle itemHs_1_0 -> let _x_2_0 = StdWindow.getWElementHandlesIdFromItemNr_78 itemNr_0 itemHs_1_0 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 1) (windowhandle.WListLSHandle (select _x_2_0::_Tuple3 2))) (windowhandle.WExtendLSHandle wExH_1_0 -> case wExH_1_0 (windowhandle._WExtendLSHandle wExtendLS_2_0 itemHs_2_1 -> let _x_3_0 = StdWindow.getWElementHandlesIdFromItemNr_78 itemNr_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WExtendLSHandle (update wExH_1_0::windowhandle._WExtendLSHandle [1:select _x_3_0::_Tuple3 2]))) ) (windowhandle.WChangeLSHandle wChH_1_0 -> case wChH_1_0 (windowhandle._WChangeLSHandle wChangeLS_2_0 itemHs_2_1 -> let _x_3_0 = StdWindow.getWElementHandlesIdFromItemNr_78 itemNr_0 itemHs_2_1 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) (windowhandle.WChangeLSHandle (update wChH_1_0::windowhandle._WChangeLSHandle [1:select _x_3_0::_Tuple3 2]))) ) 
StdWindow.getWElementHandlesIdFromItemNr_78 !itemNr_0::I !_x_1 = case _x_1 (_predefined._Cons itemH_1_0 itemHs_1_1 -> let _x_2_0::B = StdWindow.getWElementHandleIdFromItemNr_77 itemNr_0 itemH_1_0, found_2_1 = select _x_2_0::_Tuple3 0 in case found_2_1 (True -> <{_Tuple3!7}> found_2_1 (select _x_2_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) itemHs_1_1)) (False -> let _x_4_0 = StdWindow.getWElementHandlesIdFromItemNr_78 itemNr_0 itemHs_1_1 in <{_Tuple3!7}> (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons (select _x_2_0::_Tuple3 2) (select _x_4_0::_Tuple3 2))) ) (_ -> <{_Tuple3!7}> False (_Tuple2 False Data.Maybe.Nothing) _predefined._Nil)
StdWindow.getControlIdFromItemNr_79 !itemNr_0::I !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = StdWindow.getWElementHandlesIdFromItemNr_78 itemNr_0 wh_4_6 in <{_Tuple2!3}> (select _x_5_0::_Tuple3 1) (update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [6:select _x_5_0::_Tuple3 2]])])) ) ) ) (_ -> StdWindow.stdWindowFatalError "getActiveControl" "unexpected window placeholder argument")
StdWindow.getActiveControl !ioState_0 = let _x_1_0 = StdWindow.getActiveWindow ioState_0, active_1_1 = select _x_1_0::_Tuple2 0 in case (Data.Maybe.isNothing active_1_1) (True -> <{_Tuple2!3}> (_Tuple2 False Data.Maybe.Nothing) (select _x_1_0::_Tuple2 1)) (False -> let ioState_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = iostate.ioStGetDevice device.WindowDevice ioState_3_0 in case (StdBool.not (select _x_3_1::_Tuple3 0)) (True -> <{_Tuple2!3}> (_Tuple2 False Data.Maybe.Nothing) (select _x_3_1::_Tuple3 2)) (False -> let active_5_0 = Data.Maybe.fromJust active_1_1, wDevice_5_1 = select _x_3_1::_Tuple3 1, windows_5_2 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_5_1, _x_5_3 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 active_5_0) windows_5_2 in case (StdBool.not (select _x_5_3::_Tuple3 0)) (True -> StdWindow.stdWindowFatalError "getActiveControl" "active window could not be located") (False -> let wsH_7_0 = select _x_5_3::_Tuple3 1, _x_7_1 = windowaccess.getWindowStateHandleKeyFocus wsH_7_0, keyfocus_7_2 = select _x_7_1::_Tuple2 0, _x_7_3 = keyfocus.getCurrentFocusItem keyfocus_7_2, maybe_7_4 = select _x_7_3::_Tuple2 0 in case (Data.Maybe.isNothing maybe_7_4) (True -> <{_Tuple2!3}> (_Tuple2 False Data.Maybe.Nothing) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (windowaccess.setWindowStateHandleKeyFocus (select _x_7_3::_Tuple2 1) (select _x_7_1::_Tuple2 1)) (select _x_5_3::_Tuple3 2))) (select _x_3_1::_Tuple3 2))) (False -> let _x_9_0 = StdWindow.getControlIdFromItemNr_79 (Data.Maybe.fromJust maybe_7_4) (windowaccess.setWindowStateHandleKeyFocus (select _x_7_3::_Tuple2 1) (select _x_7_1::_Tuple2 1)) in <{_Tuple2!3}> (select _x_9_0::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_9_0::_Tuple2 1) (select _x_5_3::_Tuple3 2))) (select _x_3_1::_Tuple3 2))) ) ) ) 
StdWindow.stackWindow !window_0 !behind_1 !pState_2 = case pState_2 (iostate._PSt ls_1_0 ioState_1_1 -> case (<{id.==_27}> window_0 behind_1) (True -> pState_2) (False -> let _x_3_0 = iostate.ioStGetDevice device.WindowDevice ioState_1_1 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> update pState_2::iostate._PSt [1:select _x_3_0::_Tuple3 2]) (False -> let behindW_5_0 = windowaccess.toWID_71 behind_1, wDevice_5_1 = select _x_3_0::_Tuple3 1, windows_5_2 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_5_1, _x_5_3 = windowaccess.hasWindowHandlesWindow behindW_5_0 windows_5_2 in case (StdBool.not (select _x_5_3::_Tuple2 0)) (True -> update pState_2::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_5_3::_Tuple2 1)) (select _x_3_0::_Tuple3 2)]) (False -> let windowW_7_0 = windowaccess.toWID_71 window_0, windows_7_1 = select _x_5_3::_Tuple2 1, _x_7_2 = windowaccess.getWindowHandlesWindow windowW_7_0 windows_7_1 in case (StdBool.not (select _x_7_2::_Tuple3 0)) (True -> update pState_2::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_7_2::_Tuple3 2)) (select _x_3_0::_Tuple3 2)]) (False -> let wsH_9_0 = select _x_7_2::_Tuple3 1, _x_9_1 = windowaccess.getWindowStateHandleWindowMode wsH_9_0 in case (<{windowhandle.==_5}> (select _x_9_1::_Tuple2 0) windowhandle.Modal) (True -> update pState_2::iostate._PSt [1:iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_9_1::_Tuple2 1) (select _x_7_2::_Tuple3 2))) (select _x_3_0::_Tuple3 2)]) (False -> let _x_11_0 = windowaccess.getWindowStateHandleWIDS (select _x_9_1::_Tuple2 1), _x_11_1 = windowaccess.addBehindWindowHandlesWindow behindW_5_0 (select _x_11_0::_Tuple2 1) (select (windowaccess.removeWindowHandlesWindow windowW_7_0 (select _x_7_2::_Tuple3 2))::_Tuple3 2), _x_11_2 = iostate.getIOToolbox (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_11_1::_Tuple2 1)) (select _x_3_0::_Tuple3 2)), _x_11_3 = oswindow.osStackWindow (select (select _x_11_0::_Tuple2 0)::windowhandle._WIDS 1) (select (select _x_11_1::_Tuple2 0)::windowhandle._WIDS 1) StdWindow.handleOSEvent (update pState_2::iostate._PSt [1:select _x_11_2::_Tuple2 1]) (select _x_11_2::_Tuple2 0), pState_11_4 = select _x_11_3::_Tuple3 1 in update pState_11_4::iostate._PSt [1:windowcreate.bufferDelayedEvents (select _x_11_3::_Tuple3 0) (iostate.setIOToolbox (select _x_11_3::_Tuple3 2) (select pState_11_4::iostate._PSt 1))]) ) ) ) ) ) 
StdWindow.getWindowIdType_80 !wsH_0 = let _x_1_0 = windowaccess.getWindowStateHandleWIDS wsH_0, _x_1_1 = windowaccess.getWindowStateHandleWindowKind (select _x_1_0::_Tuple2 1) in <{_Tuple2!2}> (_Tuple2 (select (select _x_1_0::_Tuple2 0)::windowhandle._WIDS 0) (<{StdWindow._if;440;22_176}> (<{windowhandle.==_6}> (select _x_1_1::_Tuple2 0) windowhandle.IsWindow))) (select _x_1_1::_Tuple2 1)
<{StdWindow._if;440;22_176}> !_x_0::B = case _x_0 (True -> "Window") (_ -> "Dialog")
StdWindow.getWindowStack !ioState_0 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_0 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> _predefined._Nil (select _x_1_0::_Tuple3 2)) (False -> let windows_3_0 = devicesystemstate.windowSystemStateGetWindowHandles (select _x_1_0::_Tuple3 1), _x_3_1 = StdList.unzip (StdList.map StdWindow.getWindowIdType_80 (select windows_3_0::windowhandle._WindowHandles 0)) in <{_Tuple2!3}> (select _x_3_1::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (update windows_3_0::windowhandle._WindowHandles [0:select _x_3_1::_Tuple2 1])) (select _x_1_0::_Tuple3 2))) 
StdWindow.anon_81 !_x_0 = case _x_0 (_Tuple2 id_1_0 wtype_1_1 -> _Tuple2 (<{StdString.==_2}> wtype_1_1 "Window") id_1_0) 
StdWindow.getWindowsStack !ioState_0 = let _x_1_0 = StdWindow.getWindowStack ioState_0 in <{_Tuple2!3}> (commondef.filterMap StdWindow.anon_81 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
StdWindow.anon_82 !_x_0 = case _x_0 (_Tuple2 id_1_0 wtype_1_1 -> _Tuple2 (<{StdString.==_2}> wtype_1_1 "Dialog") id_1_0) 
StdWindow.getDialogsStack !ioState_0 = let _x_1_0 = StdWindow.getWindowStack ioState_0 in <{_Tuple2!3}> (commondef.filterMap StdWindow.anon_82 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
StdWindow.getDefaultHMargin !isWindow_0::B !ioState_1 = case isWindow_0 (True -> <{_Tuple2!2}> (_Tuple2 0 0) ioState_1) (False -> let _x_2_0::I = iostate.ioStGetOSWindowMetrics ioState_1, osmHorMargin_2_1 = select (select _x_2_0::_Tuple2 0)::ossystem._OSWindowMetrics 3 in <{_Tuple2!2}> (_Tuple2 osmHorMargin_2_1 osmHorMargin_2_1) (select _x_2_0::_Tuple2 1)) 
StdWindow.getDefaultVMargin !isWindow_0::B !ioState_1 = case isWindow_0 (True -> <{_Tuple2!2}> (_Tuple2 0 0) ioState_1) (False -> let _x_2_0::I = iostate.ioStGetOSWindowMetrics ioState_1, osmVerMargin_2_1 = select (select _x_2_0::_Tuple2 0)::ossystem._OSWindowMetrics 4 in <{_Tuple2!2}> (_Tuple2 osmVerMargin_2_1 osmVerMargin_2_1) (select _x_2_0::_Tuple2 1)) 
StdWindow.getDefaultItemSpace !_x_0::B !ioState_1 = let _x_1_0 = iostate.ioStGetOSWindowMetrics ioState_1, _x_1_1 = select _x_1_0::_Tuple2 0 in <{_Tuple2!2}> (_Tuple2 (select _x_1_1::ossystem._OSWindowMetrics 5) (select _x_1_1::ossystem._OSWindowMetrics 6)) (select _x_1_0::_Tuple2 1)
StdWindow.gethmargin_83 !wMetrics_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!2}> (windowaccess.getWindowHMargins whKind_4_1 wMetrics_0 whAtts_4_9) wsH_1) ) ) ) (_ -> StdWindow.stdWindowFatalError "getWindowHMargin" "unexpected window placeholder argument")
StdWindow.getWindowHMargin !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let _x_5_0 = iostate.ioStGetOSWindowMetrics (select _x_1_0::_Tuple3 2), _x_5_1 = StdWindow.gethmargin_83 (select _x_5_0::_Tuple2 0) (select _x_3_2::_Tuple3 1) in <{_Tuple2!3}> (Data.Maybe.Just (select _x_5_1::_Tuple2 0)) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_5_0::_Tuple2 1))) ) 
StdWindow.getvmargin_84 !wMetrics_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 _x_3_1 -> case _x_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> <{_Tuple2!2}> (windowaccess.getWindowVMargins whKind_4_1 wMetrics_0 whAtts_4_9) wsH_1) ) ) ) (_ -> StdWindow.stdWindowFatalError "getWindowVMargin" "unexpected window placeholder argument")
StdWindow.getWindowVMargin !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let _x_5_0 = iostate.ioStGetOSWindowMetrics (select _x_1_0::_Tuple3 2), _x_5_1 = StdWindow.getvmargin_84 (select _x_5_0::_Tuple2 0) (select _x_3_2::_Tuple3 1) in <{_Tuple2!3}> (Data.Maybe.Just (select _x_5_1::_Tuple2 0)) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_5_0::_Tuple2 1))) ) 
StdWindow.getitemspaces_85 !_x_0 !wsH_1 = case _x_0 (_Tuple2 defHSpace_1_0 defVSpace_1_1 -> case wsH_1 (windowhandle._WindowStateHandle wsh_2_0 wshHandle_2_1 -> case wshHandle_2_1 (Data.Maybe.Just _x_3_0 -> case _x_3_0 (windowhandle._WindowLSHandle wlsState_4_0 _x_4_1 -> case _x_4_1 (windowhandle._WindowHandle whMode_5_0 whKind_5_1 whTitle_5_2 wh_5_3 whKeyFocus_5_4 whWindow_5_5 wh_5_6 whShow_5_7 whSelect_5_8 whAtts_5_9 whDefault_5_10 whCancel_5_11 whSize_5_12 whClosing_5_13 -> <{_Tuple2!2}> (StdWindowAttribute.getWindowItemSpaceAtt (select (commondef.cselect StdWindowAttribute.isWindowItemSpace (StdWindowDef.WindowItemSpace defHSpace_1_0 defVSpace_1_1) whAtts_5_9)::_Tuple2 1)) wsH_1) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "getWindowItemSpace" "unexpected window placeholder argument")
StdWindow.getWindowItemSpace !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let _x_5_0 = iostate.ioStGetOSWindowMetrics (select _x_1_0::_Tuple3 2), _x_5_1 = select _x_5_0::_Tuple2 0, _x_5_2 = StdWindow.getitemspaces_85 (_Tuple2 (select _x_5_1::ossystem._OSWindowMetrics 5) (select _x_5_1::ossystem._OSWindowMetrics 6)) (select _x_3_2::_Tuple3 1) in <{_Tuple2!3}> (Data.Maybe.Just (select _x_5_2::_Tuple2 0)) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_2::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_5_0::_Tuple2 1))) ) 
StdWindow.enableWindow !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let wsH_7_0 = select _x_5_1::_Tuple2 1, _x_7_1 = windowaccess.getWindowStateHandleSelect wsH_7_0 in case (select _x_7_1::_Tuple2 0) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let ioState_9_0 = select _x_1_0::_Tuple3 2, _x_9_1 = iostate.ioStGetOSDInfo ioState_9_0, _x_9_2 = iostate.ioStGetOSWindowMetrics (select _x_9_1::_Tuple2 1), wsH_9_3 = select _x_7_1::_Tuple2 1, wsH_9_4 = windowaccess.setWindowStateHandleSelect True wsH_9_3, _x_9_5::I = windowaccess.getWindowStateHandleWIDS wsH_9_4, wids_9_6 = select _x_9_5::_Tuple2 0, wPtr_9_7 = select wids_9_6::windowhandle._WIDS 1, _x_9_8 = iostate.getIOToolbox (select _x_9_2::_Tuple2 1), _x_9_9 = <{wstate.retrieveWindowHandle`}> (select _x_9_5::_Tuple2 1) (select _x_9_8::_Tuple2 0), _x_9_10 = controlinternal.enablecontrols _predefined._Nil True (select _x_9_2::_Tuple2 0) wPtr_9_7 (select _x_9_9::_Tuple3 0) (select _x_9_9::_Tuple3 2), _x_9_11 = windowaccess.getWindowStateHandleWindowInfo (<{wstate.insertWindowHandle`}> (select _x_9_10::_Tuple2 0) (select _x_9_9::_Tuple3 1)), osd_9_12 = select _x_9_1::_Tuple2 0 in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_9_11::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (iostate.setIOToolbox (oswindow.osInvalidateWindow wPtr_9_7 (oswindow.osEnableWindow (<{StdWindow._if;573;51_178}> (<{StdIOCommon.==_39}> (osdocumentinterface.getOSDInfoDocumentInterface osd_9_12) StdIOCommon.SDI) osd_9_12 wPtr_9_7) (<{StdWindow._c;570;35_179}> (select _x_9_11::_Tuple2 0)) False (select _x_9_10::_Tuple2 1))) (select _x_9_8::_Tuple2 1))) ) ) ) 
<{StdWindow._c;570;35_179}> !_x_0 = case _x_0 (windowhandle.WindowInfo info_1_0 -> <{_Tuple2!3}> (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3))) (_ -> <{_Tuple2!3}> False False)
<{StdWindow._if;573;51_178}>::I !_x_0::B osd_1 wPtr_2::I = case _x_0 (True -> <{StdWindow._c;558;35_177}> (osdocumentinterface.getOSDInfoOSInfo osd_1)) (_ -> wPtr_2)
<{StdWindow._c;558;35_177}>::I !_x_0 = case _x_0 (Data.Maybe.Just info_1_0 -> select info_1_0::osdocumentinterface._OSInfo 0) (_ -> -1)
StdWindow.disableWindow !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let wsH_7_0 = select _x_5_1::_Tuple2 1, _x_7_1 = windowaccess.getWindowStateHandleSelect wsH_7_0 in case (StdBool.not (select _x_7_1::_Tuple2 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let ioState_9_0 = select _x_1_0::_Tuple3 2, _x_9_1 = iostate.ioStGetOSDInfo ioState_9_0, _x_9_2 = iostate.ioStGetOSWindowMetrics (select _x_9_1::_Tuple2 1), wsH_9_3 = select _x_7_1::_Tuple2 1, wsH_9_4 = windowaccess.setWindowStateHandleSelect False wsH_9_3, _x_9_5::I = windowaccess.getWindowStateHandleWIDS wsH_9_4, wids_9_6 = select _x_9_5::_Tuple2 0, wPtr_9_7 = select wids_9_6::windowhandle._WIDS 1, _x_9_8 = iostate.getIOToolbox (select _x_9_2::_Tuple2 1), _x_9_9 = <{wstate.retrieveWindowHandle`}> (select _x_9_5::_Tuple2 1) (select _x_9_8::_Tuple2 0), _x_9_10 = controlinternal.disablecontrols _predefined._Nil True (select _x_9_2::_Tuple2 0) wPtr_9_7 (select _x_9_9::_Tuple3 0) (select _x_9_9::_Tuple3 2), _x_9_11 = windowaccess.getWindowStateHandleWindowInfo (<{wstate.insertWindowHandle`}> (select _x_9_10::_Tuple2 0) (select _x_9_9::_Tuple3 1)), osd_9_12 = select _x_9_1::_Tuple2 0 in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_9_11::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (iostate.setIOToolbox (oswindow.osInvalidateWindow wPtr_9_7 (oswindow.osDisableWindow (<{StdWindow._if;611;52_181}> (<{StdIOCommon.==_39}> (osdocumentinterface.getOSDInfoDocumentInterface osd_9_12) StdIOCommon.SDI) osd_9_12 wPtr_9_7) (<{StdWindow._c;608;35_182}> (select _x_9_11::_Tuple2 0)) False (select _x_9_10::_Tuple2 1))) (select _x_9_8::_Tuple2 1))) ) ) ) 
<{StdWindow._c;608;35_182}> !_x_0 = case _x_0 (windowhandle.WindowInfo info_1_0 -> <{_Tuple2!3}> (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3))) (_ -> <{_Tuple2!3}> False False)
<{StdWindow._if;611;52_181}>::I !_x_0::B osd_1 wPtr_2::I = case _x_0 (True -> <{StdWindow._c;596;35_180}> (osdocumentinterface.getOSDInfoOSInfo osd_1)) (_ -> wPtr_2)
<{StdWindow._c;596;35_180}>::I !_x_0 = case _x_0 (Data.Maybe.Just info_1_0 -> select info_1_0::osdocumentinterface._OSInfo 0) (_ -> -1)
StdWindow.setMouseSelectStateAtt_86 !selectState_0 !atts_1 = let _x_1_0 = commondef.remove StdWindowAttribute.isWindowMouse StdMisc.undef atts_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let _x_3_0 = StdWindowAttribute.getWindowMouseAtt (select _x_1_0::_Tuple3 1) in _predefined._Cons (StdWindowDef.WindowMouse (select _x_3_0::_Tuple3 0) selectState_0 (select _x_3_0::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) 
StdWindow.setMouseSelectState_87 !selectState_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [9:StdWindow.setMouseSelectStateAtt_86 selectState_0 whAtts_4_9]])]) ) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowMouseSelectState" "unexpected window placeholder argument")
StdWindow.setWindowMouseSelectState !selectState_0 !id_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_1) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (StdWindow.setMouseSelectState_87 selectState_0 (select _x_5_1::_Tuple2 1)) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) ) ) 
StdWindow.enableWindowMouse !id_0 !ioState_1 = StdWindow.setWindowMouseSelectState StdIOCommon.Able id_0 ioState_1
StdWindow.disableWindowMouse !id_0 !ioState_1 = StdWindow.setWindowMouseSelectState StdIOCommon.Unable id_0 ioState_1
StdWindow.setKeyboardSelectStateAtt_88 !selectState_0 !atts_1 = let _x_1_0 = commondef.remove StdWindowAttribute.isWindowKeyboard StdMisc.undef atts_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let _x_3_0 = StdWindowAttribute.getWindowKeyboardAtt (select _x_1_0::_Tuple3 1) in _predefined._Cons (StdWindowDef.WindowKeyboard (select _x_3_0::_Tuple3 0) selectState_0 (select _x_3_0::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) 
StdWindow.setKeyboardSelectState_89 !selectState_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [9:StdWindow.setKeyboardSelectStateAtt_88 selectState_0 whAtts_4_9]])]) ) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowKeyboardSelectState" "unexpected window placeholder argument")
StdWindow.setWindowKeyboardSelectState !selectState_0 !id_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_1) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (StdWindow.setKeyboardSelectState_89 selectState_0 (select _x_5_1::_Tuple2 1)) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) ) ) 
StdWindow.enableWindowKeyboard !id_0 !ioState_1 = StdWindow.setWindowKeyboardSelectState StdIOCommon.Able id_0 ioState_1
StdWindow.disableWindowKeyboard !id_0 !ioState_1 = StdWindow.setWindowKeyboardSelectState StdIOCommon.Unable id_0 ioState_1
StdWindow.getWindowSelectState !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) (False -> let _x_7_0 = windowaccess.getWindowStateHandleSelect (select _x_5_1::_Tuple2 1) in <{_Tuple2!3}> (Data.Maybe.Just (<{StdWindow._if;708;18_183}> (select _x_7_0::_Tuple2 0))) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) ) 
<{StdWindow._if;708;18_183}> !_x_0::B = case _x_0 (True -> StdIOCommon.Able) (_ -> StdIOCommon.Unable)
StdWindow.getWindowMouseAttInfo !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = commondef.cselect StdWindowAttribute.isWindowMouse StdMisc.undef whAtts_4_9 in case (StdBool.not (select _x_5_0::_Tuple2 0)) (True -> <{_Tuple4!9}> False StdMisc.undef StdMisc.undef wsH_0) (False -> let _x_7_0 = StdWindowAttribute.getWindowMouseAtt (select _x_5_0::_Tuple2 1) in <{_Tuple4!9}> True (select _x_7_0::_Tuple3 0) (select _x_7_0::_Tuple3 1) wsH_0) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "getWindowMouseAttInfo" "unexpected window placeholder argument")
StdWindow.getWindowMouseSelectState !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) (False -> let wsH_7_0 = select _x_5_1::_Tuple2 1, _x_7_1 = StdWindow.getWindowMouseAttInfo wsH_7_0, select_7_2 = select _x_7_1::_Tuple4 2 in <{_Tuple2!3}> (<{StdWindow._if;724;12_184}> (select _x_7_1::_Tuple4 0) select_7_2) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple4 3) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) ) 
<{StdWindow._if;724;12_184}> !_x_0::B select_1 = case _x_0 (True -> Data.Maybe.Just select_1) (_ -> Data.Maybe.Nothing)
StdWindow.getWindowKeyboardAttInfo !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = commondef.cselect StdWindowAttribute.isWindowKeyboard StdMisc.undef whAtts_4_9 in case (StdBool.not (select _x_5_0::_Tuple2 0)) (True -> <{_Tuple4!9}> False StdMisc.undef StdMisc.undef wsH_0) (False -> let _x_7_0 = StdWindowAttribute.getWindowKeyboardAtt (select _x_5_0::_Tuple2 1) in <{_Tuple4!9}> True (select _x_7_0::_Tuple3 0) (select _x_7_0::_Tuple3 1) wsH_0) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "getWindowKeyboardAttInfo" "unexpected window placeholder argument")
StdWindow.getWindowKeyboardSelectState !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) (False -> let wsH_7_0 = select _x_5_1::_Tuple2 1, _x_7_1 = StdWindow.getWindowKeyboardAttInfo wsH_7_0, select_7_2 = select _x_7_1::_Tuple4 2 in <{_Tuple2!3}> (<{StdWindow._if;751;12_185}> (select _x_7_1::_Tuple4 0) select_7_2) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple4 3) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) ) 
<{StdWindow._if;751;12_185}> !_x_0::B select_1 = case _x_0 (True -> Data.Maybe.Just select_1) (_ -> Data.Maybe.Nothing)
StdWindow.getWindowMouseStateFilter !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) (False -> let wsH_7_0 = select _x_5_1::_Tuple2 1, _x_7_1 = StdWindow.getWindowMouseAttInfo wsH_7_0, filter_7_2 = select _x_7_1::_Tuple4 1 in <{_Tuple2!3}> (<{StdWindow._if;778;12_186}> (select _x_7_1::_Tuple4 0) filter_7_2) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple4 3) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) ) 
<{StdWindow._if;778;12_186}> !_x_0::B filter_1 = case _x_0 (True -> Data.Maybe.Just filter_1) (_ -> Data.Maybe.Nothing)
StdWindow.getWindowKeyboardStateFilter !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) (False -> let wsH_7_0 = select _x_5_1::_Tuple2 1, _x_7_1 = StdWindow.getWindowKeyboardAttInfo wsH_7_0, filter_7_2 = select _x_7_1::_Tuple4 1 in <{_Tuple2!3}> (<{StdWindow._if;794;12_187}> (select _x_7_1::_Tuple4 0) filter_7_2) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple4 3) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) ) 
<{StdWindow._if;794;12_187}> !_x_0::B filter_1 = case _x_0 (True -> Data.Maybe.Just filter_1) (_ -> Data.Maybe.Nothing)
StdWindow.setMouseStateFilterAtt_90 !filter_0 !atts_1 = let _x_1_0 = commondef.remove StdWindowAttribute.isWindowMouse StdMisc.undef atts_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let _x_3_0 = StdWindowAttribute.getWindowMouseAtt (select _x_1_0::_Tuple3 1) in _predefined._Cons (StdWindowDef.WindowMouse filter_0 (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) 
StdWindow.setMouseFilter_91 !filter_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [9:StdWindow.setMouseStateFilterAtt_90 filter_0 whAtts_4_9]])]) ) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowMouseStateFilter" "unexpected window placeholder argument")
StdWindow.setWindowMouseStateFilter !id_0 !filter_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (StdWindow.setMouseFilter_91 filter_1 (select _x_5_1::_Tuple2 1)) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) ) ) 
StdWindow.setKeyboardStateFilterAtt_92 !filter_0 !atts_1 = let _x_1_0 = commondef.remove StdWindowAttribute.isWindowKeyboard StdMisc.undef atts_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let _x_3_0 = StdWindowAttribute.getWindowKeyboardAtt (select _x_1_0::_Tuple3 1) in _predefined._Cons (StdWindowDef.WindowKeyboard filter_0 (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) 
StdWindow.setKeyboardFilter_93 !filter_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [9:StdWindow.setKeyboardStateFilterAtt_92 filter_0 whAtts_4_9]])]) ) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowKeyboardStateFilter" "unexpected window placeholder argument")
StdWindow.setWindowKeyboardStateFilter !id_0 !filter_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (StdWindow.setKeyboardFilter_93 filter_1 (select _x_5_1::_Tuple2 1)) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) ) ) 
StdWindow.anon_94 drawf_0 p_1 = _Tuple2 StdMisc.undef (drawf_0 p_1)
<{StdWindow.drawinwindow`_95}> functionname_0 !wMetrics_1 !drawf_2 !wsH_3 !tb_4::I = case wsH_3 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wsh_1_0 (windowhandle._WIDS w_2_0 wPtr_2_1 wActive_2_2 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_3_0 -> case wlsH_3_0 (windowhandle._WindowLSHandle wlsState_4_0 wH_4_1 -> let _x_5_0 = windowclipstate.validateWindowClipState wMetrics_1 False wPtr_2_1 wH_4_1 tb_4, _x_5_1 = windowdraw.drawinwindow wMetrics_1 wPtr_2_1 drawf_2 (select _x_5_0::_Tuple2 0) (select _x_5_0::_Tuple2 1) in <{_Tuple2!3}> (_Tuple2 (select _x_5_1::_Tuple3 0) (update wsH_3::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_3_0::windowhandle._WindowLSHandle [1:select _x_5_1::_Tuple3 1])])) (select _x_5_1::_Tuple3 2)) ) ) ) (_ -> StdWindow.stdWindowFatalError functionname_0 "unexpected window placeholder argument")
StdWindow.drawInWindow functionname_0 !id_1 !drawf_2 !ioState_3 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_3 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_1) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) (False -> let _x_7_0 = iostate.ioStGetOSWindowMetrics (select _x_1_0::_Tuple3 2), _x_7_1 = iostate.accIOToolbox (<{StdWindow.drawinwindow`_95}> functionname_0 (select _x_7_0::_Tuple2 0) drawf_2 (select _x_5_1::_Tuple2 1)) (select _x_7_0::_Tuple2 1), _x_7_2 = select _x_7_1::_Tuple2 0 in <{_Tuple2!3}> (Data.Maybe.Just (select _x_7_2::_Tuple2 0)) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_2::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_7_1::_Tuple2 1))) ) ) 
StdWindow.appWindowPicture !id_0 !drawf_1 !ioState_2 = select (StdWindow.drawInWindow "appWindowPicture" id_0 (StdWindow.anon_94 drawf_1) ioState_2)::_Tuple2 1
StdWindow.accWindowPicture !id_0 !drawf_1 !ioState_2 = StdWindow.drawInWindow "accWindowPicture" id_0 drawf_1 ioState_2
StdWindow.updateWindowBackground_96 !wMetrics_0 !maybeViewFrame_1 !wsH_2 !tb_3::I = case wsH_2 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let updArea_5_0 = <{StdWindow._c;926;43_188}> maybeViewFrame_1 contentRect_5_7 origin_5_5, info_5_1 = windowaccess.getWindowInfoWindowData whWindow_4_5, _x_5_2 = _Tuple3 (select info_5_1::windowhandle._WindowData 1) (select info_5_1::windowhandle._WindowData 0) (_Tuple2 (Data.Maybe.isJust (select info_5_1::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_5_1::windowhandle._WindowData 3))), hasScrolls_5_3 = select _x_5_2::_Tuple3 2, domainRect_5_4 = select _x_5_2::_Tuple3 1, origin_5_5 = select _x_5_2::_Tuple3 0, visScrolls_5_6 = oswindow.osScrollbarsAreVisible wMetrics_0 domainRect_5_4 (commondef.toTuple_72 whSize_4_12) hasScrolls_5_3, contentRect_5_7 = oswindow.osGetWindowContentRect wMetrics_0 visScrolls_5_6 (commondef.sizeToRect whSize_4_12) in case (commondef.isEmptyRect updArea_5_0) (True -> <{_Tuple2!3}> wsH_2 tb_3) (False -> let _x_7_0 = windowupdate.updatewindow wMetrics_0 (deviceevents._UpdateInfo wsh_1_0 updArea_5_0 _predefined._Nil Data.Maybe.Nothing) wH_3_1 (oswindow.osInvalidateWindowRect (select wsh_1_0::windowhandle._WIDS 1) updArea_5_0 tb_3) in <{_Tuple2!3}> (update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:select _x_7_0::_Tuple2 0])]) (select _x_7_0::_Tuple2 1)) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "updateWindow" "unexpected window placeholder argument")
<{StdWindow._c;926;43_188}> !maybeViewFrame_0 !contentRect_1 origin_2 = case maybeViewFrame_0 (Data.Maybe.Nothing -> contentRect_1) (Data.Maybe.Just rect_1_0 -> commondef.intersectRects (commondef.rectangleToRect (commondef.subVector_71 (StdIOBasic.toVector_23 origin_2) rect_1_0)) contentRect_1) 
StdWindow.updateWindow !id_0 !maybeViewFrame_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let _x_7_0 = iostate.ioStGetOSWindowMetrics (select _x_1_0::_Tuple3 2), _x_7_1 = iostate.accIOToolbox (StdWindow.updateWindowBackground_96 (select _x_7_0::_Tuple2 0) maybeViewFrame_1 (select _x_5_1::_Tuple2 1)) (select _x_7_0::_Tuple2 1) in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple2 0) (select _x_3_2::_Tuple3 2))) (select _x_7_1::_Tuple2 1)) ) ) 
StdWindow.setwindowlook_97 !wMetrics_0 !redraw_1::B !_x_2 !wsH_3 !tb_4::I = case _x_2 (_Tuple2 sysLook_1_0 lookFun_1_1 -> case wsH_3 (windowhandle._WindowStateHandle wsh_2_0 wshHandle_2_1 -> case wsh_2_0 (windowhandle._WIDS w_3_0 wPtr_3_1 wActive_3_2 -> case wshHandle_2_1 (Data.Maybe.Just wlsH_4_0 -> case wlsH_4_0 (windowhandle._WindowLSHandle wlsState_5_0 wH_5_1 -> let !look_6_0 = update (select window_6_3::windowhandle._WindowData 4)::windowhandle._LookInfo [0:lookFun_1_1,2:sysLook_1_0], !info_6_1 = update window_6_3::windowhandle._WindowData [4:look_6_0], !wH_6_2 = update wH_5_1::windowhandle._WindowHandle [5:windowhandle.WindowInfo info_6_1], window_6_3 = windowaccess.getWindowInfoWindowData (select wH_5_1::windowhandle._WindowHandle 5) in case (StdBool.not redraw_1) (True -> <{_Tuple2!3}> (update wsH_3::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_4_0::windowhandle._WindowLSHandle [1:wH_6_2])]) tb_4) (False -> let !_x_8_0 = windowclipstate.validateWindowClipState wMetrics_0 False wPtr_3_1 wH_6_2 tb_4, !_x_8_1 = windowdraw.drawwindowlook wMetrics_0 wPtr_3_1 StdFunc.id (StdIOCommon.rectangleToUpdateState (commondef.posSizeToRectangle (select window_6_3::windowhandle._WindowData 1) (commondef.rectSize (oswindow.osGetWindowContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select window_6_3::windowhandle._WindowData 0) (commondef.toTuple_72 whSize_8_2) (_Tuple2 (Data.Maybe.isJust (select window_6_3::windowhandle._WindowData 2)) (Data.Maybe.isJust (select window_6_3::windowhandle._WindowData 3)))) (commondef.sizeToRect whSize_8_2))))) (select _x_8_0::_Tuple2 0) (select _x_8_0::_Tuple2 1), whSize_8_2 = select wH_5_1::windowhandle._WindowHandle 12 in <{_Tuple2!3}> (update wsH_3::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_4_0::windowhandle._WindowLSHandle [1:select _x_8_1::_Tuple2 0])]) (select _x_8_1::_Tuple2 1)) ) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowLook" "unexpected window placeholder argument")
StdWindow.setWindowLook !w_0 !redraw_1::B !_x_2 !ioState_3 = case _x_2 (_Tuple2 sysLook_1_0 lookFun_1_1 -> let _x_2_0 = iostate.ioStGetDevice device.WindowDevice ioState_3 in case (StdBool.not (select _x_2_0::_Tuple3 0)) (True -> select _x_2_0::_Tuple3 2) (False -> let wDevice_4_0 = select _x_2_0::_Tuple3 1, windows_4_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_4_0, _x_4_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 w_0) windows_4_1 in case (StdBool.not (select _x_4_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_4_2::_Tuple3 2)) (select _x_2_0::_Tuple3 2)) (False -> let wsH_6_0 = select _x_4_2::_Tuple3 1, _x_6_1 = windowaccess.getWindowStateHandleWindowKind wsH_6_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_6_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_6_1::_Tuple2 1) (select _x_4_2::_Tuple3 2))) (select _x_2_0::_Tuple3 2)) (False -> let _x_8_0 = iostate.ioStGetOSWindowMetrics (select _x_2_0::_Tuple3 2), _x_8_1 = iostate.accIOToolbox (StdWindow.setwindowlook_97 (select _x_8_0::_Tuple2 0) redraw_1 (_Tuple2 sysLook_1_0 lookFun_1_1) (select _x_6_1::_Tuple2 1)) (select _x_8_0::_Tuple2 1) in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_8_1::_Tuple2 0) (select _x_4_2::_Tuple3 2))) (select _x_8_1::_Tuple2 1)) ) ) ) 
StdWindow.getWindowLook !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) (False -> let _x_7_0 = windowaccess.getWindowStateHandleWindowInfo (select _x_5_1::_Tuple2 1), _x_7_1 = select (windowaccess.getWindowInfoWindowData (select _x_7_0::_Tuple2 0))::windowhandle._WindowData 4 in <{_Tuple2!3}> (Data.Maybe.Just (_Tuple2 (select _x_7_1::windowhandle._LookInfo 2) (select _x_7_1::windowhandle._LookInfo 0))) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) ) 
StdWindow.findPrevId_98 !wid_0 !_x_1 = case _x_1 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_1 (_predefined._Nil -> <{_Tuple2!1}> False StdMisc.undef) (_predefined._Cons wid``_2_0 _x_2_1 -> case (windowaccess.identifyWIDS wid_0 <{wid``_2_0}>) (True -> <{_Tuple2!1}> True (select _x_1_0::windowhandle._WIDS 0)) (False -> StdWindow.findPrevId_98 wid_0 (_predefined._Cons <{wid``_2_0}> _x_1_1)) ) ) 
StdWindow.validateRelativeId_99 !id_0 !itemPos_1 !windows_2 = case itemPos_1 (_Tuple2 itemLoc_1_0 itemOffset_1_1 -> let _x_2_0 = <{StdWindow._c;1062;35_189}> itemLoc_1_0 in case (select _x_2_0::_Tuple2 0) (True -> let _x_4_0 = windowaccess.hasWindowHandlesWindow (windowaccess.toWID_71 (select _x_2_0::_Tuple2 1)) windows_2 in <{_Tuple3!7}> (select _x_4_0::_Tuple2 0) itemPos_1 (select _x_4_0::_Tuple2 1)) (False -> case (<{StdWindow._c;1068;35_190}> itemLoc_1_0) (True -> let wsHs_5_0 = select windows_2::windowhandle._WindowHandles 0, _x_5_1::B = StdList.unzip (StdList.map windowaccess.getWindowStateHandleWIDS wsHs_5_0), widsstack_5_2 = select _x_5_1::_Tuple2 0, _x_5_3 = StdWindow.findPrevId_98 (windowaccess.toWID_71 id_0) widsstack_5_2, found_5_4 = select _x_5_3::_Tuple2 0, prev_5_5 = select _x_5_3::_Tuple2 1 in <{_Tuple3!7}> found_5_4 (_Tuple2 (<{StdWindow._if;1044;35_192}> (StdBool.not found_5_4) itemLoc_1_0 prev_5_5) itemOffset_1_1) (update windows_2::windowhandle._WindowHandles [0:select _x_5_1::_Tuple2 1])) (False -> <{_Tuple3!7}> True itemPos_1 windows_2) ) ) 
<{StdWindow._if;1044;35_192}> !_x_0::B !itemLoc_1 prev_2 = case _x_0 (True -> itemLoc_1) (_ -> <{StdWindow._c;1045;35_191}> itemLoc_1 prev_2)
<{StdWindow._c;1045;35_191}> !itemLoc_0 prev_1 = case itemLoc_0 (StdIOCommon.LeftOfPrev -> StdIOCommon.LeftOf prev_1) (StdIOCommon.RightToPrev -> StdIOCommon.RightTo prev_1) (StdIOCommon.AbovePrev -> StdIOCommon.Above prev_1) (StdIOCommon.BelowPrev -> StdIOCommon.Below prev_1) 
<{StdWindow._c;1068;35_190}>::B !itemLoc_0 = case itemLoc_0 (StdIOCommon.LeftOfPrev -> True) (StdIOCommon.RightToPrev -> True) (StdIOCommon.AbovePrev -> True) (StdIOCommon.BelowPrev -> True) (_ -> False)
<{StdWindow._c;1062;35_189}> !itemLoc_0 = case itemLoc_0 (StdIOCommon.LeftOf id_1_0 -> _Tuple2 True id_1_0) (StdIOCommon.RightTo id_1_0 -> _Tuple2 True id_1_0) (StdIOCommon.Above id_1_0 -> _Tuple2 True id_1_0) (StdIOCommon.Below id_1_0 -> _Tuple2 True id_1_0) (_ -> _Tuple2 False StdMisc.undef)
StdWindow.setWindowPos !id_0 !pos_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowMode wsH_5_0 in case (<{windowhandle.==_5}> (select _x_5_1::_Tuple2 0) windowhandle.Modal) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let windows_7_0 = select _x_3_2::_Tuple3 2, _x_7_1 = StdWindow.validateRelativeId_99 id_0 pos_1 windows_7_0 in case (StdBool.not (select _x_7_1::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_7_1::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let ioState_9_0 = select _x_1_0::_Tuple3 2, _x_9_1::I = iostate.ioStGetOSDInfo ioState_9_0, _x_9_2 = iostate.ioStGetOSWindowMetrics (select _x_9_1::_Tuple2 1), osd_9_3 = select _x_9_1::_Tuple2 0, wsH_9_4 = select _x_5_1::_Tuple2 1, _x_9_5 = windowaccess.getWindowStateHandleWIDS wsH_9_4, _x_9_6 = windowaccess.getWindowStateHandleSize (select _x_9_5::_Tuple2 1), _x_9_7 = windowaccess.getWindowStateHandleWindowKind (select _x_9_6::_Tuple2 1), _x_9_8 = iostate.getIOToolbox (select _x_9_2::_Tuple2 1), _x_9_9 = windowvalidate.exactWindowPos (select _x_9_2::_Tuple2 0) osd_9_3 (select _x_9_6::_Tuple2 0) (Data.Maybe.Just (select _x_7_1::_Tuple3 1)) (select _x_9_7::_Tuple2 0) windowhandle.Modeless (windowaccess.setWindowHandlesWindow (select _x_9_7::_Tuple2 1) (select _x_7_1::_Tuple3 2)) (select _x_9_8::_Tuple2 0), _x_9_10 = <{StdWindow._c;1022;35_193}> (osdocumentinterface.getOSDInfoOSInfo osd_9_3), framePtr_9_11 = select _x_9_10::_Tuple2 0, wids_9_12 = select _x_9_5::_Tuple2 0 in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_9_9::_Tuple3 1)) (iostate.setIOToolbox (oswindow.osSetWindowPos (<{StdWindow._if;1028;51_195}> (StdWindow._f194_194 (<{StdIOCommon.==_39}> (osdocumentinterface.getOSDInfoDocumentInterface osd_9_3) StdIOCommon.SDI) wids_9_12 _x_9_10) framePtr_9_11 wids_9_12) (commondef.toTuple_74 (select _x_9_9::_Tuple3 0)) True True (select _x_9_9::_Tuple3 2)) (select _x_9_8::_Tuple2 1))) ) ) ) 
<{StdWindow._if;1028;51_195}>::I !_x_0::B framePtr_1::I wids_2 = case _x_0 (True -> framePtr_1) (_ -> select wids_2::windowhandle._WIDS 1)
StdWindow._f194_194::B !_x_0::B wids_1 _x_2 = case _x_0 (True -> <{StdInt.==_16}> (select wids_1::windowhandle._WIDS 1) (select _x_2::_Tuple2 1)) (_ -> False)
<{StdWindow._c;1022;35_193}> !_x_0 = case _x_0 (Data.Maybe.Just info_1_0 -> _Tuple2 (select info_1_0::osdocumentinterface._OSInfo 0) (select info_1_0::osdocumentinterface._OSInfo 2)) (_ -> _Tuple2 -1 -1)
StdWindow.anon_120 r_0 s_1 = _Tuple2 r_0 s_1
StdWindow.anon_119 r_0 s_1 = _Tuple2 r_0 s_1
StdWindow.getWindowPos !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let ioState_5_0::B = select _x_1_0::_Tuple3 2, _x_5_1::I = iostate.ioStGetOSDInfo ioState_5_0, osd_5_2 = select _x_5_1::_Tuple2 0, di_5_3 = osdocumentinterface.getOSDInfoDocumentInterface osd_5_2, _x_5_4 = iostate.getIOToolbox (select _x_5_1::_Tuple2 1), _x_5_5 = oswindow.osGetWindowPos (<{StdWindow._if;1095;51_199}> (StdWindow._f198_198 (<{StdIOCommon.==_39}> di_5_3 StdIOCommon.SDI) wids_5_12 _x_5_7) framePtr_5_13 wids_5_12) (select _x_5_4::_Tuple2 0), _x_5_6 = select _x_5_5::_Tuple2 0, _x_5_7 = <{StdWindow._c;1090;35_197}> (osdocumentinterface.getOSDInfoOSInfo osd_5_2) isMD_5_14, _x_5_8 = select _x_5_7::_Tuple3 2 (select _x_5_5::_Tuple2 1), _x_5_9 = select _x_5_8::_Tuple2 0, wsH_5_10 = select _x_3_2::_Tuple3 1, _x_5_11 = windowaccess.getWindowStateHandleWIDS wsH_5_10, wids_5_12 = select _x_5_11::_Tuple2 0, framePtr_5_13 = select _x_5_7::_Tuple3 0, isMD_5_14 = <{StdIOCommon.==_39}> di_5_3 StdIOCommon.MDI in <{_Tuple2!3}> (Data.Maybe.Just (StdIOBasic._Vector2 (<{StdInt.-_7}> (select _x_5_6::_Tuple2 0) (select _x_5_9::_Tuple2 0)) (<{StdInt.-_7}> (select _x_5_6::_Tuple2 1) (select _x_5_9::_Tuple2 1)))) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_11::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (iostate.setIOToolbox (select _x_5_8::_Tuple2 1) (select _x_5_4::_Tuple2 1)))) ) 
<{StdWindow._if;1095;51_199}>::I !_x_0::B framePtr_1::I wids_2 = case _x_0 (True -> framePtr_1) (_ -> select wids_2::windowhandle._WIDS 1)
StdWindow._f198_198::B !_x_0::B wids_1 _x_2 = case _x_0 (True -> <{StdInt.==_16}> (select wids_1::windowhandle._WIDS 1) (select _x_2::_Tuple3 1)) (_ -> False)
<{StdWindow._c;1090;35_197}> !_x_0 isMD_1::B = case _x_0 (Data.Maybe.Just info_1_0 -> _Tuple3 (select info_1_0::osdocumentinterface._OSInfo 0) (select info_1_0::osdocumentinterface._OSInfo 2) (<{StdWindow._if;1091;78_196}> isMD_1 info_1_0)) (_ -> _Tuple3 -1 -1 (StdWindow.anon_120 (_Tuple2 0 0)))
<{StdWindow._if;1091;78_196}> !isMD_0::B info_1 = case isMD_0 (True -> oswindow.osGetWindowPos (select info_1::osdocumentinterface._OSInfo 2)) (_ -> StdWindow.anon_119 (_Tuple2 0 0))
<{StdWindow.movewindowviewframe`_100}> !wMetrics_0 !v_1 !wsH_2 !tb_3::I = case wsH_2 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> let _x_4_0 = controlpos.movewindowviewframe wMetrics_0 v_1 wsh_1_0 wH_3_1 tb_3 in <{_Tuple2!3}> (update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:select _x_4_0::_Tuple2 0])]) (select _x_4_0::_Tuple2 1)) ) ) (_ -> StdWindow.stdWindowFatalError "moveWindowViewFrame" "unexpected window placeholder argument")
StdWindow.moveWindowViewFrame !id_0 v_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let _x_7_0 = iostate.ioStGetOSWindowMetrics (select _x_1_0::_Tuple3 2), _x_7_1 = iostate.accIOToolbox (<{StdWindow.movewindowviewframe`_100}> (select _x_7_0::_Tuple2 0) v_1 (select _x_5_1::_Tuple2 1)) (select _x_7_0::_Tuple2 1) in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple2 0) (select _x_3_2::_Tuple3 2))) (select _x_7_1::_Tuple2 1)) ) ) 
StdWindow.getwindowviewframe !wMetrics_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wsh_1_0 (windowhandle._WIDS w_2_0 wPtr_2_1 wActive_2_2 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_3_0 -> case wlsH_3_0 (windowhandle._WindowLSHandle wlsState_4_0 wlsHandle_4_1 -> case wlsHandle_4_1 (windowhandle._WindowHandle whMode_5_0 whKind_5_1 whTitle_5_2 wh_5_3 whKeyFocus_5_4 whWindow_5_5 wh_5_6 whShow_5_7 whSelect_5_8 whAtts_5_9 whDefault_5_10 whCancel_5_11 whSize_5_12 whClosing_5_13 -> case (<{windowhandle.==_6}> whKind_5_1 windowhandle.IsWindow) (True -> let _x_7_0 = <{StdWindow._c;1151;19_200}> whWindow_5_5 in <{_Tuple2!3}> (commondef.rectToRectangle (oswindow.osGetWindowContentRect wMetrics_0 (oswindow.osScrollbarsAreVisible wMetrics_0 (select _x_7_0::_Tuple4 1) (commondef.toTuple_72 whSize_5_12) (_Tuple2 (select _x_7_0::_Tuple4 2) (select _x_7_0::_Tuple4 3))) (commondef.posSizeToRect (select _x_7_0::_Tuple4 0) whSize_5_12))) wsH_1) (False -> <{_Tuple2!3}> (commondef.sizeToRectangle whSize_5_12) wsH_1) ) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "getWindowViewFrame" "unexpected window placeholder argument")
<{StdWindow._c;1151;19_200}> !whWindow_0 = case whWindow_0 (windowhandle.WindowInfo info_1_0 -> _Tuple4 (select info_1_0::windowhandle._WindowData 1) (select info_1_0::windowhandle._WindowData 0) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_1_0::windowhandle._WindowData 3))) (_ -> StdWindow.stdWindowFatalError "getWindowViewFrame" "Window has no WindowInfo")
StdWindow.getWindowViewFrame !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> StdIOBasic.zero_26 (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> StdIOBasic.zero_26 (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let _x_5_0 = iostate.ioStGetOSWindowMetrics (select _x_1_0::_Tuple3 2), _x_5_1 = StdWindow.getwindowviewframe (select _x_5_0::_Tuple2 0) (select _x_3_2::_Tuple3 1) in <{_Tuple2!3}> (select _x_5_1::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_5_0::_Tuple2 1))) ) 
StdWindow.validateSize_101 !wMetrics_0 !reqSize_1 !wsH_2 = case wsH_2 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wlsHandle_3_1 -> case wlsHandle_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 curSize_4_12 whClosing_4_13 -> let _x_5_0 = oswindow.osMinWindowSize, minWidth_5_1 = select _x_5_0::_Tuple2 0, minHeight_5_2 = select _x_5_0::_Tuple2 1, minSize_5_3 = StdIOBasic._Size minWidth_5_1 minHeight_5_2, maxSize_5_4 = StdSystem.maxScrollWindowSize, okSize_5_5::I = StdIOBasic._Size (commondef.setBetween (select reqSize_1::StdIOBasic._Size 0) (select minSize_5_3::StdIOBasic._Size 0) (select maxSize_5_4::StdIOBasic._Size 0)) (commondef.setBetween (select reqSize_1::StdIOBasic._Size 1) (select minSize_5_3::StdIOBasic._Size 1) (select maxSize_5_4::StdIOBasic._Size 1)), window_5_6::I = windowaccess.getWindowInfoWindowData whWindow_4_5, _x_5_7 = oswindow.osScrollbarsAreVisible wMetrics_0 (select window_5_6::windowhandle._WindowData 0) (commondef.toTuple_72 curSize_4_12) (_Tuple2 (Data.Maybe.isJust (select window_5_6::windowhandle._WindowData 2)) (Data.Maybe.isJust (select window_5_6::windowhandle._WindowData 3))) in <{_Tuple4!15}> (StdBool.not (<{StdIOBasic.==_14}> okSize_5_5 curSize_4_12)) okSize_5_5 (StdIOBasic._Size (<{StdWindow._if;1205;31_201}> (select _x_5_7::_Tuple2 1) okSize_5_5 wMetrics_0) (<{StdWindow._if;1206;31_202}> (select _x_5_7::_Tuple2 0) okSize_5_5 wMetrics_0)) wsH_2) ) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowViewSize" "unexpected window placeholder argument")
<{StdWindow._if;1206;31_202}>::I !_x_0::B !okSize_1 wMetrics_2 = case _x_0 (True -> <{StdInt.+_6}> (select okSize_1::StdIOBasic._Size 1) (select wMetrics_2::ossystem._OSWindowMetrics 7)) (_ -> select okSize_1::StdIOBasic._Size 1)
<{StdWindow._if;1205;31_201}>::I !_x_0::B !okSize_1 wMetrics_2 = case _x_0 (True -> <{StdInt.+_6}> (select okSize_1::StdIOBasic._Size 0) (select wMetrics_2::ossystem._OSWindowMetrics 8)) (_ -> select okSize_1::StdIOBasic._Size 0)
StdWindow.setWindowViewSize !wid_0 !reqSize_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 wid_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let ioState_7_0 = select _x_1_0::_Tuple3 2, _x_7_1 = iostate.ioStGetOSWindowMetrics ioState_7_0, wMetrics_7_2 = select _x_7_1::_Tuple2 0, wsH_7_3 = select _x_5_1::_Tuple2 1, _x_7_4 = StdWindow.validateSize_101 wMetrics_7_2 reqSize_1 wsH_7_3 in case (StdBool.not (select _x_7_4::_Tuple4 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_4::_Tuple4 3) (select _x_3_2::_Tuple3 2))) (select _x_7_1::_Tuple2 1)) (False -> let windows_9_0::I = select _x_3_2::_Tuple3 2, _x_9_1::I = windowaccess.getWindowHandlesActiveWindow windows_9_0, activeW_9_2 = select _x_9_1::_Tuple2 0, wsH_9_3 = select _x_7_4::_Tuple4 3, _x_9_4 = windowaccess.getWindowStateHandleWIDS wsH_9_3, wids_9_5 = select _x_9_4::_Tuple2 0, viewSize_9_6 = select _x_7_4::_Tuple4 1, ioState_9_7 = select _x_7_1::_Tuple2 1, _x_9_8 = iostate.ioStGetOSDInfo ioState_9_7, osd_9_9 = select _x_9_8::_Tuple2 0, _x_9_10 = iostate.getIOToolbox (select _x_9_8::_Tuple2 1), _x_9_11 = windowdevice.windowStateSizeAction wMetrics_7_2 (StdWindow._f205_205 (Data.Maybe.isJust activeW_9_2) activeW_9_2 wid_0) (deviceevents._WindowSizeActionInfo wids_9_5 viewSize_9_6 False) (select _x_9_4::_Tuple2 1) (<{StdWindow._if;1191;36_207}> (StdWindow._f206_206 (<{StdIOCommon.==_39}> (osdocumentinterface.getOSDInfoDocumentInterface osd_9_9) StdIOCommon.SDI) wids_9_5 _x_9_12) framePtr_9_14 viewSize_9_6 tbHeight_9_13 (oswindow.osSetWindowViewFrameSize (select wids_9_5::windowhandle._WIDS 1) (commondef.toTuple_72 viewSize_9_6) (select _x_9_10::_Tuple2 0))), _x_9_12 = <{StdWindow._c;1181;35_204}> (osdocumentinterface.getOSDInfoOSInfo osd_9_9), tbHeight_9_13 = select _x_9_12::_Tuple3 2, framePtr_9_14 = select _x_9_12::_Tuple3 0 in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_9_11::_Tuple2 0) (select _x_9_1::_Tuple2 1))) (iostate.setIOToolbox (select _x_9_11::_Tuple2 1) (select _x_9_10::_Tuple2 1))) ) ) ) 
<{StdWindow._if;1191;36_207}> !_x_0::B framePtr_1::I viewSize_2 tbHeight_3::I = case _x_0 (True -> oswindow.osSetWindowViewFrameSize framePtr_1 (commondef.toTuple_72 (update viewSize_2::StdIOBasic._Size [1:<{StdInt.+_6}> (select viewSize_2::StdIOBasic._Size 1) tbHeight_3]))) (_ -> StdFunc.id)
StdWindow._f206_206::B !_x_0::B wids_1 _x_2 = case _x_0 (True -> <{StdInt.==_16}> (select wids_1::windowhandle._WIDS 1) (select _x_2::_Tuple3 1)) (_ -> False)
StdWindow._f205_205::B !_x_0::B activeW_1 wid_2 = case _x_0 (True -> <{id.==_27}> (select (Data.Maybe.fromJust activeW_1)::windowhandle._WIDS 0) wid_2) (_ -> False)
<{StdWindow._c;1181;35_204}> !_x_0 = case _x_0 (Data.Maybe.Just info_1_0 -> _Tuple3 (select info_1_0::osdocumentinterface._OSInfo 0) (select info_1_0::osdocumentinterface._OSInfo 2) (<{StdWindow._c;1182;78_203}> (select info_1_0::osdocumentinterface._OSInfo 1))) (_ -> _Tuple3 -1 -1 0)
<{StdWindow._c;1182;78_203}>::I !_x_0 = case _x_0 (Data.Maybe.Just _x_1_0 -> case _x_1_0 (ostoolbar._OSToolbar toolbarPtr_2_0 toolbarHeight_2_1 -> toolbarHeight_2_1) ) (_ -> 0)
StdWindow.getWindowViewSize !id_0 !ioState_1 = let _x_1_0 = StdWindow.getWindowViewFrame id_0 ioState_1 in <{_Tuple2!3}> (StdIOBasic.rectangleSize (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
StdWindow.setWindowOuterSize !id_0 !_x_1 !ioState_2 = case _x_1 (StdIOBasic._Size w_1_0 h_1_1 -> let _x_2_0 = iostate.ioStGetOSDInfo ioState_2, _x_2_1 = iostate.accIOToolbox (ossystem.osStripOuterSize (<{StdIOCommon.==_39}> (osdocumentinterface.getOSDInfoDocumentInterface (select _x_2_0::_Tuple2 0)) StdIOCommon.MDI) True) (select _x_2_0::_Tuple2 1), _x_2_2 = select _x_2_1::_Tuple2 0 in StdWindow.setWindowViewSize id_0 (StdIOBasic._Size (<{StdInt.-_7}> w_1_0 (select _x_2_2::_Tuple2 0)) (<{StdInt.-_7}> h_1_1 (select _x_2_2::_Tuple2 1))) (select _x_2_1::_Tuple2 1)) 
StdWindow.getWindowOuterSize !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> StdIOBasic.zero_15 (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> StdIOBasic.zero_15 (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let ioState_5_0 = select _x_1_0::_Tuple3 2, _x_5_1 = iostate.ioStGetOSWindowMetrics ioState_5_0, wMetrics_5_2 = select _x_5_1::_Tuple2 0, wsH_5_3 = select _x_3_2::_Tuple3 1, _x_5_4 = StdWindow.getwindowviewframe wMetrics_5_2 wsH_5_3, wsH_5_5 = select _x_5_4::_Tuple2 1, _x_5_6 = windowaccess.getWindowStateHandleWindowKind wsH_5_5, wKind_5_7 = select _x_5_6::_Tuple2 0 in case (<{windowhandle.==_6}> wKind_5_7 windowhandle.IsDialog) (True -> <{_Tuple2!3}> (windowvalidate.exactWindowSize StdMisc.undef StdMisc.undef (StdIOBasic.rectangleSize (select _x_5_4::_Tuple2 0)) StdMisc.undef StdMisc.undef wKind_5_7) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_6::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_5_1::_Tuple2 1))) (False -> case (<{windowhandle.==_6}> wKind_5_7 windowhandle.IsGameWindow) (True -> let _x_8_0 = windowaccess.getWindowStateHandleWindowInfo (select _x_5_6::_Tuple2 1) in <{_Tuple2!3}> (select (windowaccess.getWindowInfoGameWindowData (select _x_8_0::_Tuple2 0))::windowhandle._GameWindowData 1) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_8_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_5_1::_Tuple2 1))) (False -> let _x_8_0 = windowaccess.getWindowStateHandleWindowInfo (select _x_5_6::_Tuple2 1), info_8_1 = windowaccess.getWindowInfoWindowData (select _x_8_0::_Tuple2 0), _x_8_2 = _Tuple2 (Data.Maybe.isJust (select info_8_1::windowhandle._WindowData 2)) (Data.Maybe.isJust (select info_8_1::windowhandle._WindowData 3)), outerSize_8_3 = windowvalidate.exactWindowSize wMetrics_5_2 (commondef.rectToRectangle (select info_8_1::windowhandle._WindowData 0)) (StdIOBasic.rectangleSize (select _x_5_4::_Tuple2 0)) (select _x_8_2::_Tuple2 0) (select _x_8_2::_Tuple2 1) wKind_5_7, _x_8_4 = iostate.ioStGetOSDInfo (select _x_5_1::_Tuple2 1), _x_8_5 = iostate.accIOToolbox (ossystem.osStripOuterSize (<{StdIOCommon.==_39}> (osdocumentinterface.getOSDInfoDocumentInterface (select _x_8_4::_Tuple2 0)) StdIOCommon.MDI) True) (select _x_8_4::_Tuple2 1), _x_8_6 = select _x_8_5::_Tuple2 0 in <{_Tuple2!3}> (StdIOBasic._Size (<{StdInt.+_6}> (select outerSize_8_3::StdIOBasic._Size 0) (select _x_8_6::_Tuple2 0)) (<{StdInt.+_6}> (select outerSize_8_3::StdIOBasic._Size 1) (select _x_8_6::_Tuple2 1))) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_8_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_8_5::_Tuple2 1))) ) ) ) 
StdWindow.setwindowslider_102::I whSelect_0::B hScroll_1 vScroll_2 !hasScroll_3::B wMetrics_4 wPtr_5::I isHorizontal_6::B !state_7 hrect_8 vrect_9 !maxcoords_10 !tb_11::I = case state_7 (_Tuple4 osMin_1_0 osThumb_1_1 osMax_1_2 osSize_1_3 -> case maxcoords_10 (_Tuple2 min_2_0 max_2_1 -> case hasScroll_3 (True -> let sPtr_4_0::I = <{StdWindow._c;1370;20_208}> isHorizontal_6 hScroll_1 vScroll_2 in oswindow.osSetWindowSliderThumb wMetrics_4 wPtr_5 isHorizontal_6 osThumb_1_1 hScroll_1 vScroll_2 hrect_8 vrect_9 maxcoords_10 True (oswindow.osSetWindowSliderThumbSize wMetrics_4 wPtr_5 sPtr_4_0 isHorizontal_6 osMin_1_0 osMax_1_2 osSize_1_3 (_Tuple2 osMin_1_0 osMax_1_2) (<{StdWindow._if;1364;128_209}> isHorizontal_6 hrect_8 vrect_9) whSelect_0 True (oswindow.osSetWindowSliderPosSize wPtr_5 sPtr_4_0 (<{StdWindow._if;1363;71_210}> isHorizontal_6 hrect_8 vrect_9) tb_11))) (False -> tb_11) ) ) 
<{StdWindow._if;1363;71_210}> !isHorizontal_0::B hrect_1 vrect_2 = case isHorizontal_0 (True -> hrect_1) (_ -> vrect_2)
<{StdWindow._if;1364;128_209}> !isHorizontal_0::B hrect_1 vrect_2 = case isHorizontal_0 (True -> hrect_1) (_ -> vrect_2)
<{StdWindow._c;1370;20_208}>::I !isHorizontal_0::B hScroll_1 vScroll_2 = case isHorizontal_0 (True -> Data.Maybe.fromJust hScroll_1) (_ -> Data.Maybe.fromJust vScroll_2)
StdWindow.getdomainviewmax_103 !domainRect_0 !viewframeRect_1 = let x_1_0::I = select domainRect_0::ostypes._OSRect 2, y_1_1::I = select viewframeRect_1::ostypes._OSRect 2, x_1_2::I = select domainRect_0::ostypes._OSRect 3, y_1_3::I = select viewframeRect_1::ostypes._OSRect 3 in StdIOBasic._Point2 (<{StdWindow._c;48;16_211}> (<{StdInt.<_17}> x_1_0 y_1_1) x_1_0 y_1_1) (<{StdWindow._c;48;16_212}> (<{StdInt.<_17}> x_1_2 y_1_3) x_1_2 y_1_3)
<{StdWindow._c;48;16_212}>::I !_x_0::B x_1::I y_2::I = case _x_0 (True -> x_1) (_ -> y_2)
<{StdWindow._c;48;16_211}>::I !_x_0::B x_1::I y_2::I = case _x_0 (True -> x_1) (_ -> y_2)
StdWindow.setwindowviewdomain_104 !wMetrics_0 !newDomain_1 !wsH_2 !tb_3::I = case wsH_2 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 old_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = commondef.uisEmpty old_4_6 in case (select _x_5_0::_Tuple2 0) (True -> let window_7_0 = windowaccess.getWindowInfoWindowData whWindow_4_5, sysLook_7_1 = select (select window_7_0::windowhandle._WindowData 4)::windowhandle._LookInfo 2, updArea_7_2 = <{StdWindow._if;1311;43_216}> (StdWindow._f215_215 sysLook_7_1 oldOrigin_7_17 newOrigin_7_8 oldDomainViewMax_7_22 newDomainViewMax_7_23) newViewFrame_7_16, <{wSize`_7_3}> = commondef.toTuple_72 whSize_4_12, w_7_4 = select <{wSize`_7_3}>::_Tuple2 0, newDomain_7_5 = windowvalidate.validateViewDomain newDomain_1, newDomainSize_7_6 = StdIOBasic.rectangleSize newDomain_7_5, h_7_7 = select <{wSize`_7_3}>::_Tuple2 1, newOrigin_7_8 = StdIOBasic._Point2 (<{StdWindow._if;1293;49_213}> (StdBool.not (<{StdInt.<_17}> w_7_4 (select newDomainSize_7_6::StdIOBasic._Size 0))) newDomainRect_7_9 oldOrigin_7_17 w_7_4) (<{StdWindow._if;1294;49_214}> (StdBool.not (<{StdInt.<_17}> h_7_7 (select newDomainSize_7_6::StdIOBasic._Size 1))) newDomainRect_7_9 oldOrigin_7_17 h_7_7), newDomainRect_7_9::I = commondef.rectangleToRect newDomain_7_5, hasScrolls_7_10::I = _Tuple2 (Data.Maybe.isJust (select window_7_0::windowhandle._WindowData 2)) (Data.Maybe.isJust (select window_7_0::windowhandle._WindowData 3)), newVisScrolls_7_11 = oswindow.osScrollbarsAreVisible wMetrics_0 newDomainRect_7_9 <{wSize`_7_3}> hasScrolls_7_10, newContentRect_7_12 = oswindow.osGetWindowContentRect wMetrics_0 newVisScrolls_7_11 (commondef.sizeToRect whSize_4_12), <{w`_7_13}> = select newContentRect_7_12::ostypes._OSRect 2, <{h`_7_14}> = select newContentRect_7_12::ostypes._OSRect 3, newViewFrameRect_7_15 = commondef.posSizeToRect newOrigin_7_8 (StdIOBasic._Size <{w`_7_13}> <{h`_7_14}>), newViewFrame_7_16::I = commondef.rectToRectangle newViewFrameRect_7_15, oldOrigin_7_17 = select window_7_0::windowhandle._WindowData 1, oldDomainRect_7_18 = select window_7_0::windowhandle._WindowData 0, oldVisScrolls_7_19::I = oswindow.osScrollbarsAreVisible wMetrics_0 oldDomainRect_7_18 <{wSize`_7_3}> hasScrolls_7_10, oldContentRect_7_20 = oswindow.osGetWindowContentRect wMetrics_0 oldVisScrolls_7_19 (commondef.sizeToRect whSize_4_12), oldViewFrameRect_7_21 = commondef.posSizeToRect oldOrigin_7_17 (commondef.rectSize oldContentRect_7_20), oldDomainViewMax_7_22::B = StdWindow.getdomainviewmax_103 oldDomainRect_7_18 oldViewFrameRect_7_21, newDomainViewMax_7_23 = StdWindow.getdomainviewmax_103 newDomainRect_7_9 newViewFrameRect_7_15 in case (StdList.isEmpty updArea_7_2) (True -> let hasHScroll_9_0 = select hasScrolls_7_10::_Tuple2 0, hScroll_9_1 = <{StdWindow._if;1349;35_218}> hasHScroll_9_0 window_7_0, hasVScroll_9_2::I = select hasScrolls_7_10::_Tuple2 1, vScroll_9_3 = <{StdWindow._if;1350;35_217}> hasVScroll_9_2 window_7_0, wPtr_9_4::B = select wsh_1_0::windowhandle._WIDS 1, newHRect_9_5 = oswindow.osGetWindowHScrollRect wMetrics_0 newVisScrolls_7_11 (commondef.sizeToRect whSize_4_12), newVRect_9_6::B = oswindow.osGetWindowVScrollRect wMetrics_0 newVisScrolls_7_11 (commondef.sizeToRect whSize_4_12) in <{_Tuple2!3}> (update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [5:windowhandle.WindowInfo (update window_7_0::windowhandle._WindowData [0:newDomainRect_7_9,1:newOrigin_7_8]),6:select _x_5_0::_Tuple2 1]])]) (StdWindow.setwindowslider_102 whSelect_4_8 hScroll_9_1 vScroll_9_3 hasVScroll_9_2 wMetrics_0 wPtr_9_4 False (oswindow.toOSscrollbarRange (_Tuple3 (select newDomainRect_7_9::ostypes._OSRect 1) (select newOrigin_7_8::StdIOBasic._Point2 1) (select newDomainRect_7_9::ostypes._OSRect 3)) <{h`_7_14}>) newHRect_9_5 newVRect_9_6 <{wSize`_7_3}> (StdWindow.setwindowslider_102 whSelect_4_8 hScroll_9_1 vScroll_9_3 hasHScroll_9_0 wMetrics_0 wPtr_9_4 True (oswindow.toOSscrollbarRange (_Tuple3 (select newDomainRect_7_9::ostypes._OSRect 0) (select newOrigin_7_8::StdIOBasic._Point2 0) (select newDomainRect_7_9::ostypes._OSRect 2)) <{w`_7_13}>) newHRect_9_5 newVRect_9_6 <{wSize`_7_3}> tb_3))) (False -> let wPtr_9_0 = select wsh_1_0::windowhandle._WIDS 1, hasHScroll_9_1 = select hasScrolls_7_10::_Tuple2 0, hScroll_9_2 = <{StdWindow._if;1349;35_220}> hasHScroll_9_1 window_7_0, hasVScroll_9_3 = select hasScrolls_7_10::_Tuple2 1, vScroll_9_4::B = <{StdWindow._if;1350;35_219}> hasVScroll_9_3 window_7_0, newHRect_9_5 = oswindow.osGetWindowHScrollRect wMetrics_0 newVisScrolls_7_11 (commondef.sizeToRect whSize_4_12), newVRect_9_6::B = oswindow.osGetWindowVScrollRect wMetrics_0 newVisScrolls_7_11 (commondef.sizeToRect whSize_4_12), _x_9_7::I = windowdraw.drawwindowlook wMetrics_0 wPtr_9_0 StdFunc.id (StdIOCommon._UpdateState (commondef.rectToRectangle oldViewFrameRect_7_21) newViewFrame_7_16 updArea_7_2) (update wH_3_1::windowhandle._WindowHandle [5:windowhandle.WindowInfo (update window_7_0::windowhandle._WindowData [0:newDomainRect_7_9,1:newOrigin_7_8]),6:select _x_5_0::_Tuple2 1]) (StdWindow.setwindowslider_102 whSelect_4_8 hScroll_9_2 vScroll_9_4 hasVScroll_9_3 wMetrics_0 wPtr_9_0 False (oswindow.toOSscrollbarRange (_Tuple3 (select newDomainRect_7_9::ostypes._OSRect 1) (select newOrigin_7_8::StdIOBasic._Point2 1) (select newDomainRect_7_9::ostypes._OSRect 3)) <{h`_7_14}>) newHRect_9_5 newVRect_9_6 <{wSize`_7_3}> (StdWindow.setwindowslider_102 whSelect_4_8 hScroll_9_2 vScroll_9_4 hasHScroll_9_1 wMetrics_0 wPtr_9_0 True (oswindow.toOSscrollbarRange (_Tuple3 (select newDomainRect_7_9::ostypes._OSRect 0) (select newOrigin_7_8::StdIOBasic._Point2 0) (select newDomainRect_7_9::ostypes._OSRect 2)) <{w`_7_13}>) newHRect_9_5 newVRect_9_6 <{wSize`_7_3}> tb_3)) in <{_Tuple2!3}> (update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:select _x_9_7::_Tuple2 0])]) (select _x_9_7::_Tuple2 1)) ) (False -> let wPtr_7_0 = select wsh_1_0::windowhandle._WIDS 1, newDomain_7_1 = windowvalidate.validateViewDomain newDomain_1, newDomainRect_7_2 = commondef.rectangleToRect newDomain_7_1, <{wSize`_7_3}> = commondef.toTuple_72 whSize_4_12, window_7_4 = windowaccess.getWindowInfoWindowData whWindow_4_5, hasScrolls_7_5 = _Tuple2 (Data.Maybe.isJust (select window_7_4::windowhandle._WindowData 2)) (Data.Maybe.isJust (select window_7_4::windowhandle._WindowData 3)), newVisScrolls_7_6 = oswindow.osScrollbarsAreVisible wMetrics_0 newDomainRect_7_2 <{wSize`_7_3}> hasScrolls_7_5, newContentRect_7_7 = oswindow.osGetWindowContentRect wMetrics_0 newVisScrolls_7_6 (commondef.sizeToRect whSize_4_12), hasHScroll_7_8 = select hasScrolls_7_5::_Tuple2 0, hScroll_7_9 = <{StdWindow._if;1349;35_226}> hasHScroll_7_8 window_7_4, hasVScroll_7_10 = select hasScrolls_7_5::_Tuple2 1, vScroll_7_11 = <{StdWindow._if;1350;35_225}> hasVScroll_7_10 window_7_4, w_7_12 = select <{wSize`_7_3}>::_Tuple2 0, newDomainSize_7_13 = StdIOBasic.rectangleSize newDomain_7_1, h_7_14 = select <{wSize`_7_3}>::_Tuple2 1, newOrigin_7_15 = StdIOBasic._Point2 (<{StdWindow._if;1293;49_223}> (StdBool.not (<{StdInt.<_17}> w_7_12 (select newDomainSize_7_13::StdIOBasic._Size 0))) newDomainRect_7_2 oldOrigin_7_28 w_7_12) (<{StdWindow._if;1294;49_224}> (StdBool.not (<{StdInt.<_17}> h_7_14 (select newDomainSize_7_13::StdIOBasic._Size 1))) newDomainRect_7_2 oldOrigin_7_28 h_7_14), <{h`_7_16}> = select newContentRect_7_7::ostypes._OSRect 3, newHRect_7_17::I = oswindow.osGetWindowHScrollRect wMetrics_0 newVisScrolls_7_6 (commondef.sizeToRect whSize_4_12), newVRect_7_18 = oswindow.osGetWindowVScrollRect wMetrics_0 newVisScrolls_7_6 (commondef.sizeToRect whSize_4_12), <{w`_7_19}> = select newContentRect_7_7::ostypes._OSRect 2, _x_7_20::I = <{wstate.getWElementHandles`}> wPtr_7_0 (select _x_5_0::_Tuple2 1) (StdWindow.setwindowslider_102 whSelect_4_8 hScroll_7_9 vScroll_7_11 hasVScroll_7_10 wMetrics_0 wPtr_7_0 False (oswindow.toOSscrollbarRange (_Tuple3 (select newDomainRect_7_2::ostypes._OSRect 1) (select newOrigin_7_15::StdIOBasic._Point2 1) (select newDomainRect_7_2::ostypes._OSRect 3)) <{h`_7_16}>) newHRect_7_17 newVRect_7_18 <{wSize`_7_3}> (StdWindow.setwindowslider_102 whSelect_4_8 hScroll_7_9 vScroll_7_11 hasHScroll_7_8 wMetrics_0 wPtr_7_0 True (oswindow.toOSscrollbarRange (_Tuple3 (select newDomainRect_7_2::ostypes._OSRect 0) (select newOrigin_7_15::StdIOBasic._Point2 0) (select newDomainRect_7_2::ostypes._OSRect 2)) <{w`_7_19}>) newHRect_7_17 newVRect_7_18 <{wSize`_7_3}> tb_3)), hMargins_7_21 = windowaccess.getWindowHMargins windowhandle.IsWindow wMetrics_0 whAtts_4_9, vMargins_7_22::I = windowaccess.getWindowVMargins windowhandle.IsWindow wMetrics_0 whAtts_4_9, _x_7_23 = oswindow.osMinWindowSize, _x_7_24::I = controllayout.layoutControls wMetrics_0 hMargins_7_21 vMargins_7_22 (windowaccess.getWindowItemSpaces windowhandle.IsWindow wMetrics_0 whAtts_4_9) (StdIOBasic._Size (<{StdInt.-_7}> (<{StdInt.-_7}> <{w`_7_19}> (select hMargins_7_21::_Tuple2 0)) (select hMargins_7_21::_Tuple2 1)) (<{StdInt.-_7}> (<{StdInt.-_7}> <{h`_7_16}> (select vMargins_7_22::_Tuple2 0)) (select vMargins_7_22::_Tuple2 1))) (StdIOBasic._Size (select _x_7_23::_Tuple2 0) (select _x_7_23::_Tuple2 1)) (_predefined._Cons (_Tuple2 newDomain_7_1 newOrigin_7_15) _predefined._Nil) (select _x_7_20::_Tuple3 1) (select _x_7_20::_Tuple3 2), _x_7_25 = windowclipstate.forceValidWindowClipState wMetrics_0 True wPtr_7_0 (update wH_3_1::windowhandle._WindowHandle [5:windowhandle.WindowInfo (update window_7_4::windowhandle._WindowData [0:newDomainRect_7_2,1:newOrigin_7_15]),6:select _x_7_24::_Tuple3 1]) (select _x_7_24::_Tuple3 2), wH_7_26::B = select _x_7_25::_Tuple2 0, _x_7_27 = controlrelayout.relayoutControls wMetrics_0 wPtr_7_0 whDefault_4_10 False whSelect_4_8 whShow_4_7 (_Tuple4 newContentRect_7_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select _x_7_20::_Tuple3 0)) (_Tuple4 newContentRect_7_7 StdIOBasic.zero_21 StdIOBasic.zero_11 (select wH_7_26::windowhandle._WindowHandle 6)) (select _x_7_25::_Tuple2 1), oldOrigin_7_28::B = select window_7_4::windowhandle._WindowData 1, oldDomainRect_7_29 = select window_7_4::windowhandle._WindowData 0, oldVisScrolls_7_30 = oswindow.osScrollbarsAreVisible wMetrics_0 oldDomainRect_7_29 <{wSize`_7_3}> hasScrolls_7_5, oldContentRect_7_31 = oswindow.osGetWindowContentRect wMetrics_0 oldVisScrolls_7_30 (commondef.sizeToRect whSize_4_12), oldViewFrameRect_7_32 = commondef.posSizeToRect oldOrigin_7_28 (commondef.rectSize oldContentRect_7_31), newViewFrameRect_7_33 = commondef.posSizeToRect newOrigin_7_15 (StdIOBasic._Size <{w`_7_19}> <{h`_7_16}>), newViewFrame_7_34 = commondef.rectToRectangle newViewFrameRect_7_33, _x_7_35 = windowdraw.drawwindowlook wMetrics_0 wPtr_7_0 StdFunc.id (StdIOCommon._UpdateState (commondef.rectToRectangle oldViewFrameRect_7_32) newViewFrame_7_34 (<{StdWindow._if;1311;43_222}> (StdWindow._f221_221 (select (select window_7_4::windowhandle._WindowData 4)::windowhandle._LookInfo 2) oldOrigin_7_28 newOrigin_7_15 oldDomainRect_7_29 oldViewFrameRect_7_32 newDomainRect_7_2 newViewFrameRect_7_33) newViewFrame_7_34)) (update wH_7_26::windowhandle._WindowHandle [6:select _x_7_27::_Tuple3 1]) (select _x_7_27::_Tuple3 2), _x_7_36::I = windowupdate.updatewindowbackgrounds wMetrics_0 (select _x_7_27::_Tuple3 0) wsh_1_0 (select _x_7_35::_Tuple2 0) (select _x_7_35::_Tuple2 1) in <{_Tuple2!3}> (update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:select _x_7_36::_Tuple2 0])]) (select _x_7_36::_Tuple2 1)) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowViewDomain" "unexpected window placeholder argument")
<{StdWindow._if;1349;35_226}> !hasHScroll_0::B window_1 = case hasHScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 2))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
<{StdWindow._if;1350;35_225}> !hasVScroll_0::B window_1 = case hasVScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 3))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
<{StdWindow._if;1294;49_224}>::I !_x_0::B !newDomainRect_1 oldOrigin_2 h_3::I = case _x_0 (True -> select newDomainRect_1::ostypes._OSRect 1) (_ -> commondef.setBetween (select oldOrigin_2::StdIOBasic._Point2 1) (select newDomainRect_1::ostypes._OSRect 1) (<{StdInt.-_7}> (select newDomainRect_1::ostypes._OSRect 3) h_3))
<{StdWindow._if;1293;49_223}>::I !_x_0::B !newDomainRect_1 oldOrigin_2 w_3::I = case _x_0 (True -> select newDomainRect_1::ostypes._OSRect 0) (_ -> commondef.setBetween (select oldOrigin_2::StdIOBasic._Point2 0) (select newDomainRect_1::ostypes._OSRect 0) (<{StdInt.-_7}> (select newDomainRect_1::ostypes._OSRect 2) w_3))
<{StdWindow._if;1311;43_222}> !_x_0::B newViewFrame_1 = case _x_0 (True -> _predefined._Nil) (_ -> _predefined._Cons newViewFrame_1 _predefined._Nil)
StdWindow._f221_221::B !_x_0::B oldOrigin_1 newOrigin_2 oldDomainRect_3 oldViewFrameRect_4 newDomainRect_5 newViewFrameRect_6 = case _x_0 (True -> case (<{StdIOBasic.==_18}> oldOrigin_1 newOrigin_2) (True -> <{StdIOBasic.==_18}> (StdWindow.getdomainviewmax_103 oldDomainRect_3 oldViewFrameRect_4) (StdWindow.getdomainviewmax_103 newDomainRect_5 newViewFrameRect_6)) (False -> False) ) (_ -> False)
<{StdWindow._if;1349;35_220}> !hasHScroll_0::B window_1 = case hasHScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 2))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
<{StdWindow._if;1350;35_219}> !hasVScroll_0::B window_1 = case hasVScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 3))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
<{StdWindow._if;1349;35_218}> !hasHScroll_0::B window_1 = case hasHScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 2))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
<{StdWindow._if;1350;35_217}> !hasVScroll_0::B window_1 = case hasVScroll_0 (True -> Data.Maybe.Just (select (Data.Maybe.fromJust (select window_1::windowhandle._WindowData 3))::windowhandle._ScrollInfo 3)) (_ -> Data.Maybe.Nothing)
<{StdWindow._if;1311;43_216}> !_x_0::B newViewFrame_1 = case _x_0 (True -> _predefined._Nil) (_ -> _predefined._Cons newViewFrame_1 _predefined._Nil)
StdWindow._f215_215::B !sysLook_0::B oldOrigin_1 newOrigin_2 oldDomainViewMax_3 newDomainViewMax_4 = case sysLook_0 (True -> case (<{StdIOBasic.==_18}> oldOrigin_1 newOrigin_2) (True -> <{StdIOBasic.==_18}> oldDomainViewMax_3 newDomainViewMax_4) (False -> False) ) (_ -> False)
<{StdWindow._if;1294;49_214}>::I !_x_0::B !newDomainRect_1 oldOrigin_2 h_3::I = case _x_0 (True -> select newDomainRect_1::ostypes._OSRect 1) (_ -> commondef.setBetween (select oldOrigin_2::StdIOBasic._Point2 1) (select newDomainRect_1::ostypes._OSRect 1) (<{StdInt.-_7}> (select newDomainRect_1::ostypes._OSRect 3) h_3))
<{StdWindow._if;1293;49_213}>::I !_x_0::B !newDomainRect_1 oldOrigin_2 w_3::I = case _x_0 (True -> select newDomainRect_1::ostypes._OSRect 0) (_ -> commondef.setBetween (select oldOrigin_2::StdIOBasic._Point2 0) (select newDomainRect_1::ostypes._OSRect 0) (<{StdInt.-_7}> (select newDomainRect_1::ostypes._OSRect 2) w_3))
StdWindow.setWindowViewDomain !w_0 newDomain_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 w_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> let _x_7_0 = iostate.ioStGetOSWindowMetrics (select _x_1_0::_Tuple3 2), _x_7_1 = iostate.accIOToolbox (StdWindow.setwindowviewdomain_104 (select _x_7_0::_Tuple2 0) newDomain_1 (select _x_5_1::_Tuple2 1)) (select _x_7_0::_Tuple2 1) in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_1::_Tuple2 0) (select _x_3_2::_Tuple3 2))) (select _x_7_1::_Tuple2 1)) ) ) 
StdWindow.getWindowViewDomain !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) (False -> let _x_7_0 = windowaccess.getWindowStateHandleWindowInfo (select _x_5_1::_Tuple2 1) in <{_Tuple2!3}> (Data.Maybe.Just (commondef.rectToRectangle (select (windowaccess.getWindowInfoWindowData (select _x_7_0::_Tuple2 0))::windowhandle._WindowData 0))) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) ) 
StdWindow.setScrollFun_105 !f_0 !scroll_1 = update scroll_1::windowhandle._ScrollInfo [0:f_0]
StdWindow.setwindowscrollfunction_106 !direction_0 scrollFun_1 !wsH_2 = case wsH_2 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> let window_4_0 = windowaccess.getWindowInfoWindowData (select wH_3_1::windowhandle._WindowHandle 5), hScroll_4_1 = select window_4_0::windowhandle._WindowData 2 in case (case (<{StdIOCommon.==_35}> direction_0 StdIOCommon.Horizontal) (True -> Data.Maybe.isJust hScroll_4_1) (False -> False) ) (True -> update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [5:windowhandle.WindowInfo (update window_4_0::windowhandle._WindowData [2:StdMaybe.mapMaybe (StdWindow.setScrollFun_105 scrollFun_1) hScroll_4_1])]])]) (False -> let vScroll_6_0 = select window_4_0::windowhandle._WindowData 3 in case (case (<{StdIOCommon.==_35}> direction_0 StdIOCommon.Vertical) (True -> Data.Maybe.isJust vScroll_6_0) (False -> False) ) (True -> update wsH_2::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_2_0::windowhandle._WindowLSHandle [1:update wH_3_1::windowhandle._WindowHandle [5:windowhandle.WindowInfo (update window_4_0::windowhandle._WindowData [3:StdMaybe.mapMaybe (StdWindow.setScrollFun_105 scrollFun_1) vScroll_6_0])]])]) (False -> wsH_2) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowScrollFunction" "unexpected window placeholder argument")
StdWindow.setWindowScrollFunction !w_0 direction_1 scrollFun_2 !ioState_3 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_3 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 w_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) (False -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (StdWindow.setwindowscrollfunction_106 direction_1 scrollFun_2 (select _x_5_1::_Tuple2 1)) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2)) ) ) 
StdWindow.getScrollFun_107 !info_0 = case info_0 (windowhandle._ScrollInfo scrollFunction_1_0 scroll_1_1 scroll_1_2 scroll_1_3 -> <{_Tuple2!3}> scrollFunction_1_0 info_0) 
StdWindow.accMaybe f_0 !_x_1 = case _x_1 (Data.Maybe.Just x_1_0 -> let _x_2_0 = f_0 x_1_0 in <{_Tuple2!3}> (Data.Maybe.Just (select _x_2_0::_Tuple2 0)) (Data.Maybe.Just (select _x_2_0::_Tuple2 1))) (_ -> <{_Tuple2!3}> Data.Maybe.Nothing _x_1)
StdWindow.getwindowscrollfunction_108 !direction_0 !wsH_1 = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just _x_2_0 -> case _x_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> case wH_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let window_5_0 = windowaccess.getWindowInfoWindowData whWindow_4_5, hScroll_5_1 = select window_5_0::windowhandle._WindowData 2 in case (case (<{StdIOCommon.==_35}> direction_0 StdIOCommon.Horizontal) (True -> Data.Maybe.isJust hScroll_5_1) (False -> False) ) (True -> <{_Tuple2!3}> (select (StdWindow.accMaybe StdWindow.getScrollFun_107 hScroll_5_1)::_Tuple2 0) wsH_1) (False -> let vScroll_7_0 = select window_5_0::windowhandle._WindowData 3 in case (case (<{StdIOCommon.==_35}> direction_0 StdIOCommon.Vertical) (True -> Data.Maybe.isJust vScroll_7_0) (False -> False) ) (True -> <{_Tuple2!3}> (select (StdWindow.accMaybe StdWindow.getScrollFun_107 vScroll_7_0)::_Tuple2 0) wsH_1) (False -> <{_Tuple2!3}> Data.Maybe.Nothing wsH_1) ) ) ) ) ) (_ -> StdWindow.stdWindowFatalError "getWindowScrollFunction" "unexpected window placeholder argument")
StdWindow.getWindowScrollFunction !w_0 direction_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 w_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWindowKind wsH_5_0 in case (StdBool.not (<{windowhandle.==_6}> (select _x_5_1::_Tuple2 0) windowhandle.IsWindow)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_1::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) (False -> let _x_7_0 = StdWindow.getwindowscrollfunction_108 direction_1 (select _x_5_1::_Tuple2 1) in <{_Tuple2!3}> (select _x_7_0::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_7_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) ) 
StdWindow.setWindowTitle !id_0 title_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let wsH_5_0 = select _x_3_2::_Tuple3 1, _x_5_1 = windowaccess.getWindowStateHandleWIDS wsH_5_0, ioState_5_2 = select _x_1_0::_Tuple3 2, _x_5_3 = iostate.ioStGetOSDInfo ioState_5_2, osd_5_4 = select _x_5_3::_Tuple2 0, wids_5_5 = select _x_5_1::_Tuple2 0 in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (windowaccess.setWindowStateHandleWindowTitle title_1 (select _x_5_1::_Tuple2 1)) (select _x_3_2::_Tuple3 2))) (menuwindowmenu.changeWindowInWindowMenu id_0 title_1 (iostate.appIOToolbox (oswindow.osSetWindowTitle (<{StdWindow._if;1495;67_228}> (<{StdIOCommon.==_39}> (osdocumentinterface.getOSDInfoDocumentInterface osd_5_4) StdIOCommon.SDI) osd_5_4 wids_5_5) title_1) (select _x_5_3::_Tuple2 1)))) ) 
<{StdWindow._if;1495;67_228}>::I !_x_0::B osd_1 wids_2 = case _x_0 (True -> select (<{StdWindow._c;1489;35_227}> (osdocumentinterface.getOSDInfoOSInfo osd_1))::_Tuple2 0) (_ -> select wids_2::windowhandle._WIDS 1)
<{StdWindow._c;1489;35_227}> !_x_0 = case _x_0 (Data.Maybe.Just info_1_0 -> _Tuple2 (select info_1_0::osdocumentinterface._OSInfo 0) (select info_1_0::osdocumentinterface._OSInfo 2)) (_ -> _Tuple2 -1 -1)
StdWindow.setwindowok_109 !ok_0 !wsH_1 !tb_2::I = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> <{_Tuple2!3}> wsH_1 tb_2) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowOk" "unexpected window placeholder argument")
StdWindow.setWindowOk !id_0 ok_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let _x_5_0 = iostate.accIOToolbox (StdWindow.setwindowok_109 ok_1 (select _x_3_2::_Tuple3 1)) (select _x_1_0::_Tuple3 2) in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_0::_Tuple2 0) (select _x_3_2::_Tuple3 2))) (select _x_5_0::_Tuple2 1)) ) 
StdWindow.setwindowcancel_110 !cancel_0 !wsH_1 !tb_2::I = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wH_3_1 -> <{_Tuple2!3}> wsH_1 tb_2) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowCancel" "unexpected window placeholder argument")
StdWindow.setWindowCancel !id_0 cancel_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let _x_5_0 = iostate.accIOToolbox (StdWindow.setwindowcancel_110 cancel_1 (select _x_3_2::_Tuple3 1)) (select _x_1_0::_Tuple3 2) in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_0::_Tuple2 0) (select _x_3_2::_Tuple3 2))) (select _x_5_0::_Tuple2 1)) ) 
StdWindow.setwindowcursor_111 !shape_0 !wsH_1 !tb_2::I = case wsH_1 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wsh_1_0 (windowhandle._WIDS w_2_0 wPtr_2_1 wActive_2_2 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_3_0 -> case wlsH_3_0 (windowhandle._WindowLSHandle wlsState_4_0 wH_4_1 -> let cursorAtt_5_0 = StdWindowDef.WindowCursor shape_0, _x_5_1 = commondef.creplace StdWindowAttribute.isWindowCursor cursorAtt_5_0 (select wH_4_1::windowhandle._WindowHandle 9), atts_5_2 = select _x_5_1::_Tuple2 1 in <{_Tuple2!3}> (update wsH_1::windowhandle._WindowStateHandle [1:Data.Maybe.Just (update wlsH_3_0::windowhandle._WindowLSHandle [1:update wH_4_1::windowhandle._WindowHandle [9:<{StdWindow._if;1555;31_229}> (select _x_5_1::_Tuple2 0) atts_5_2 cursorAtt_5_0]])]) (oswindow.osSetWindowCursor wPtr_2_1 shape_0 tb_2)) ) ) ) (_ -> StdWindow.stdWindowFatalError "setWindowCursor" "unexpected window placeholder argument")
<{StdWindow._if;1555;31_229}> !_x_0::B atts_1 cursorAtt_2 = case _x_0 (True -> atts_1) (_ -> _predefined._Cons cursorAtt_2 atts_1)
StdWindow.setWindowCursor !id_0 shape_1 !ioState_2 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> select _x_1_0::_Tuple3 2) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2)) (False -> let _x_5_0 = iostate.accIOToolbox (StdWindow.setwindowcursor_111 shape_1 (select _x_3_2::_Tuple3 1)) (select _x_1_0::_Tuple3 2) in iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_0::_Tuple2 0) (select _x_3_2::_Tuple3 2))) (select _x_5_0::_Tuple2 1)) ) 
StdWindow.getWindowTitle !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let _x_5_0 = windowaccess.getWindowStateHandleWindowTitle (select _x_3_2::_Tuple3 1) in <{_Tuple2!3}> (Data.Maybe.Just (select _x_5_0::_Tuple2 0)) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) 
StdWindow.getWindowOk !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let _x_5_0 = windowaccess.getWindowStateHandleDefaultId (select _x_3_2::_Tuple3 1) in <{_Tuple2!3}> (select _x_5_0::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) 
StdWindow.getWindowCancel !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let _x_5_0 = windowaccess.getWindowStateHandleCancelId (select _x_3_2::_Tuple3 1) in <{_Tuple2!3}> (select _x_5_0::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) 
StdWindow.getcursor_112 !wsH_0 = case wsH_0 (windowhandle._WindowStateHandle wsh_1_0 wshHandle_1_1 -> case wshHandle_1_1 (Data.Maybe.Just wlsH_2_0 -> case wlsH_2_0 (windowhandle._WindowLSHandle wlsState_3_0 wlsHandle_3_1 -> case wlsHandle_3_1 (windowhandle._WindowHandle whMode_4_0 whKind_4_1 whTitle_4_2 wh_4_3 whKeyFocus_4_4 whWindow_4_5 wh_4_6 whShow_4_7 whSelect_4_8 whAtts_4_9 whDefault_4_10 whCancel_4_11 whSize_4_12 whClosing_4_13 -> let _x_5_0 = commondef.cselect StdWindowAttribute.isWindowCursor StdMisc.undef whAtts_4_9, cursorAtt_5_1 = select _x_5_0::_Tuple2 1 in <{_Tuple2!3}> (<{StdWindow._if;1614;12_230}> (select _x_5_0::_Tuple2 0) cursorAtt_5_1) wsH_0) ) ) ) (_ -> StdWindow.stdWindowFatalError "getWindowCursor" "unexpected window placeholder argument")
<{StdWindow._if;1614;12_230}> !_x_0::B cursorAtt_1 = case _x_0 (True -> Data.Maybe.Just (StdWindowAttribute.getWindowCursorAtt cursorAtt_1)) (_ -> Data.Maybe.Nothing)
StdWindow.getWindowCursor !id_0 !ioState_1 = let _x_1_0 = iostate.ioStGetDevice device.WindowDevice ioState_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (select _x_1_0::_Tuple3 2)) (False -> let wDevice_3_0 = select _x_1_0::_Tuple3 1, windows_3_1 = devicesystemstate.windowSystemStateGetWindowHandles wDevice_3_0, _x_3_2 = windowaccess.getWindowHandlesWindow (windowaccess.toWID_71 id_0) windows_3_1 in case (StdBool.not (select _x_3_2::_Tuple3 0)) (True -> <{_Tuple2!3}> Data.Maybe.Nothing (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (select _x_3_2::_Tuple3 2)) (select _x_1_0::_Tuple3 2))) (False -> let _x_5_0 = StdWindow.getcursor_112 (select _x_3_2::_Tuple3 1) in <{_Tuple2!3}> (select _x_5_0::_Tuple2 0) (iostate.ioStSetDevice (devicesystemstate.WindowSystemState (windowaccess.setWindowHandlesWindow (select _x_5_0::_Tuple2 1) (select _x_3_2::_Tuple3 2))) (select _x_1_0::_Tuple3 2))) ) 
StdWindow.addIdToIdTableIfConsistent !_x_0::B !id_1 !io_2 !idTable_3 = case _x_0 (True -> select (id.addIdToIdTable id_1 (id._IdParent io_2 device.WindowDevice id_1) idTable_3)::_Tuple2 1) (False -> idTable_3) 
StdWindow.getWindowIdAttribute !atts_0 = let _x_1_0 = commondef.cselect StdWindowAttribute.isWindowId StdMisc.undef atts_0 in case (select _x_1_0::_Tuple2 0) (True -> Data.Maybe.Just (StdWindowAttribute.getWindowIdAtt (select _x_1_0::_Tuple2 1))) (False -> Data.Maybe.Nothing) 
StdWindow.getWindowType_54 !_vControls_0 _x_1 = "Window"
StdWindow.openWindow_55 !_vControls_0 ls_1 !_x_2 !pState_3 = case _x_2 (StdWindowDef.Window title_1_0 controls_1_1 atts_1_2 -> let pState_2_0 = select windowdevice.windowFunctions::devicefunctions._DeviceFunctions 5 pState_3, _x_2_1 = StdPSt.accPIO windowcreate.checkZeroWindowBound pState_2_0 in case (select _x_2_1::_Tuple2 0) (True -> <{_Tuple2!3}> StdIOCommon.ErrorViolateDI (select _x_2_1::_Tuple2 1)) (False -> let maybe_id_4_0 = StdWindow.getWindowIdAttribute atts_1_2, pState_4_1 = select _x_2_1::_Tuple2 1, _x_4_2 = StdPSt.accPIO (windowvalidate.validateWindowId maybe_id_4_0) pState_4_1, maybe_ok_4_3 = select _x_4_2::_Tuple2 0 in case (Data.Maybe.isNothing maybe_ok_4_3) (True -> <{_Tuple2!3}> StdIOCommon.ErrorIdsInUse (select _x_4_2::_Tuple2 1)) (False -> let pState_6_0::B = select _x_4_2::_Tuple2 1, _x_6_1 = select _vControls_0::<{StdControlClass.Controls;}> 0 controls_1_1 pState_6_0, pState_6_2 = select _x_6_1::_Tuple2 1, _x_6_3 = iostate.ioStGetReceiverTable (select pState_6_2::iostate._PSt 1), ioState_6_4 = select _x_6_3::_Tuple2 1, _x_6_5 = iostate.ioStGetIdTable ioState_6_4, ioState_6_6 = select _x_6_5::_Tuple2 1, _x_6_7 = iostate.ioStGetIOId ioState_6_6, io_6_8 = select _x_6_7::_Tuple2 0, ok_6_9 = Data.Maybe.fromJust maybe_ok_4_3, cs_6_10 = select _x_6_1::_Tuple2 0, itemHs_6_11 = StdList.map windowhandle.controlStateToWElementHandle cs_6_10, rt_6_12 = select _x_6_3::_Tuple2 0, it_6_13 = select _x_6_5::_Tuple2 0, _x_6_14 = controlvalidate.controlIdsAreConsistent io_6_8 ok_6_9 itemHs_6_11 rt_6_12 it_6_13, ok_6_15 = select _x_6_14::_Tuple4 0 in case (StdBool.not ok_6_15) (True -> <{_Tuple2!3}> StdIOCommon.ErrorIdsInUse (update pState_6_2::iostate._PSt [1:iostate.ioStSetReceiverTable (select _x_6_14::_Tuple4 2) (iostate.ioStSetIdTable (StdWindow.addIdToIdTableIfConsistent ok_6_15 ok_6_9 io_6_8 (select _x_6_14::_Tuple4 3)) (select _x_6_7::_Tuple2 1))])) (False -> <{_Tuple2!3}> StdIOCommon.NoError (menuwindowmenu.addWindowToWindowMenu ok_6_9 title_1_0 (StdPSt.appPIO windowcreate.decreaseWindowBound (windowcreate.openwindow ok_6_9 (windowhandle._WindowLSHandle ls_1 (windowaccess.initWindowHandle title_1_0 windowhandle.Modeless windowhandle.IsWindow windowhandle.NoWindowInfo (select _x_6_14::_Tuple4 1) atts_1_2)) (update pState_6_2::iostate._PSt [1:iostate.ioStSetReceiverTable (select _x_6_14::_Tuple4 2) (iostate.ioStSetIdTable (StdWindow.addIdToIdTableIfConsistent ok_6_15 ok_6_9 io_6_8 (select _x_6_14::_Tuple4 3)) (select _x_6_7::_Tuple2 1))]))))) ) ) ) 
StdWindow.getDialogType_56 !_vControls_0 _x_1 = "Dialog"
StdWindow.openDialog_57 !_vControls_0 ls_1 !_x_2 !pState_3 = case _x_2 (StdWindowDef.Dialog title_1_0 controls_1_1 atts_1_2 -> let maybe_id_2_0 = StdWindow.getWindowIdAttribute atts_1_2, pState_2_1 = select windowdevice.windowFunctions::devicefunctions._DeviceFunctions 5 pState_3, _x_2_2 = StdPSt.accPIO (windowvalidate.validateWindowId maybe_id_2_0) pState_2_1, maybe_ok_2_3 = select _x_2_2::_Tuple2 0 in case (Data.Maybe.isNothing maybe_ok_2_3) (True -> <{_Tuple2!3}> StdIOCommon.ErrorIdsInUse (select _x_2_2::_Tuple2 1)) (False -> let pState_4_0::B = select _x_2_2::_Tuple2 1, _x_4_1 = select _vControls_0::<{StdControlClass.Controls;}> 0 controls_1_1 pState_4_0, pState_4_2 = select _x_4_1::_Tuple2 1, _x_4_3 = iostate.ioStGetReceiverTable (select pState_4_2::iostate._PSt 1), ioState_4_4 = select _x_4_3::_Tuple2 1, _x_4_5 = iostate.ioStGetIdTable ioState_4_4, ioState_4_6 = select _x_4_5::_Tuple2 1, _x_4_7 = iostate.ioStGetIOId ioState_4_6, io_4_8 = select _x_4_7::_Tuple2 0, ok_4_9 = Data.Maybe.fromJust maybe_ok_2_3, cs_4_10 = select _x_4_1::_Tuple2 0, itemHs_4_11 = StdList.map windowhandle.controlStateToWElementHandle cs_4_10, rt_4_12 = select _x_4_3::_Tuple2 0, it_4_13 = select _x_4_5::_Tuple2 0, _x_4_14 = controlvalidate.controlIdsAreConsistent io_4_8 ok_4_9 itemHs_4_11 rt_4_12 it_4_13, ok_4_15 = select _x_4_14::_Tuple4 0 in case (StdBool.not ok_4_15) (True -> <{_Tuple2!3}> StdIOCommon.ErrorIdsInUse (update pState_4_2::iostate._PSt [1:iostate.ioStSetReceiverTable (select _x_4_14::_Tuple4 2) (iostate.ioStSetIdTable (StdWindow.addIdToIdTableIfConsistent ok_4_15 ok_4_9 io_4_8 (select _x_4_14::_Tuple4 3)) (select _x_4_7::_Tuple2 1))])) (False -> <{_Tuple2!3}> StdIOCommon.NoError (windowcreate.openwindow ok_4_9 (windowhandle._WindowLSHandle ls_1 (windowaccess.initWindowHandle title_1_0 windowhandle.Modeless windowhandle.IsDialog windowhandle.NoWindowInfo (select _x_4_14::_Tuple4 1) atts_1_2)) (update pState_4_2::iostate._PSt [1:iostate.ioStSetReceiverTable (select _x_4_14::_Tuple4 2) (iostate.ioStSetIdTable (StdWindow.addIdToIdTableIfConsistent ok_4_15 ok_4_9 io_4_8 (select _x_4_14::_Tuple4 3)) (select _x_4_7::_Tuple2 1))]))) ) ) 
StdWindow.openModalDialog_58 !_vControls_0 ls_1 !_x_2 !pState_3 = case _x_2 (StdWindowDef.Dialog title_1_0 controls_1_1 atts_1_2 -> let maybe_id_2_0 = StdWindow.getWindowIdAttribute atts_1_2, pState_2_1 = select windowdevice.windowFunctions::devicefunctions._DeviceFunctions 5 pState_3, _x_2_2 = StdPSt.accPIO (windowvalidate.validateWindowId maybe_id_2_0) pState_2_1, maybe_ok_2_3 = select _x_2_2::_Tuple2 0 in case (Data.Maybe.isNothing maybe_ok_2_3) (True -> <{_Tuple2!3}> (_Tuple2 StdIOCommon.ErrorIdsInUse Data.Maybe.Nothing) (select _x_2_2::_Tuple2 1)) (False -> let pState_4_0::B = select _x_2_2::_Tuple2 1, _x_4_1 = select _vControls_0::<{StdControlClass.Controls;}> 0 controls_1_1 pState_4_0, pState_4_2 = select _x_4_1::_Tuple2 1, _x_4_3 = iostate.ioStGetReceiverTable (select pState_4_2::iostate._PSt 1), ioState_4_4 = select _x_4_3::_Tuple2 1, _x_4_5 = iostate.ioStGetIdTable ioState_4_4, ioState_4_6 = select _x_4_5::_Tuple2 1, _x_4_7 = iostate.ioStGetIOId ioState_4_6, io_4_8 = select _x_4_7::_Tuple2 0, ok_4_9 = Data.Maybe.fromJust maybe_ok_2_3, cs_4_10 = select _x_4_1::_Tuple2 0, itemHs_4_11 = StdList.map windowhandle.controlStateToWElementHandle cs_4_10, rt_4_12 = select _x_4_3::_Tuple2 0, it_4_13 = select _x_4_5::_Tuple2 0, _x_4_14 = controlvalidate.controlIdsAreConsistent io_4_8 ok_4_9 itemHs_4_11 rt_4_12 it_4_13, ok_4_15 = select _x_4_14::_Tuple4 0 in case (StdBool.not ok_4_15) (True -> <{_Tuple2!3}> (_Tuple2 StdIOCommon.ErrorIdsInUse Data.Maybe.Nothing) (update pState_4_2::iostate._PSt [1:iostate.ioStSetReceiverTable (select _x_4_14::_Tuple4 2) (iostate.ioStSetIdTable (StdWindow.addIdToIdTableIfConsistent ok_4_15 ok_4_9 io_4_8 (select _x_4_14::_Tuple4 3)) (select _x_4_7::_Tuple2 1))])) (False -> let _x_6_0 = windowcreate.openmodalwindow ok_4_9 (windowhandle._WindowLSHandle ls_1 (windowaccess.initWindowHandle title_1_0 windowhandle.Modal windowhandle.IsDialog windowhandle.NoWindowInfo (select _x_4_14::_Tuple4 1) atts_1_2)) (update pState_4_2::iostate._PSt [1:iostate.ioStSetReceiverTable (select _x_4_14::_Tuple4 2) (iostate.ioStSetIdTable (StdWindow.addIdToIdTableIfConsistent ok_4_15 ok_4_9 io_4_8 (select _x_4_14::_Tuple4 3)) (select _x_4_7::_Tuple2 1))]) in <{_Tuple2!3}> (_Tuple2 (select _x_6_0::_Tuple3 0) (select _x_6_0::_Tuple3 1)) (select _x_6_0::_Tuple3 2)) ) ) 
<{StdWindow.TD;Windows;}> _x_0::B = _predefined._Nil
<{StdWindow.TD;Dialogs;}> _x_0::B = _predefined._Nil


|| Converted Records
:: <{StdWindow.Windows;}> = {!StdWindow.getWindowType, !StdWindow.openWindow}

:: <{StdWindow.Dialogs;}> = {!StdWindow.getDialogType, !StdWindow.openDialog, !StdWindow.openModalDialog}

:: <{StdWindow.gEq_s;}> = {!StdWindow.gEq_s}

:: <{StdWindow.gEq_ss;}> = {!StdWindow.gEq_ss}

:: <{StdWindow.gEq_sss;}> = {!StdWindow.gEq_sss}

:: <{StdWindow.gEq_ssss;}> = {!StdWindow.gEq_ssss}

:: <{StdWindow.gEq_sssss;}> = {!StdWindow.gEq_sssss}

:: <{StdWindow.gEq_ssssss;}> = {!StdWindow.gEq_ssssss}

:: <{StdWindow.gEq_sssssss;}> = {!StdWindow.gEq_sssssss}

:: <{StdWindow.gEq_ssssssss;}> = {!StdWindow.gEq_ssssssss}

:: <{StdWindow.gEq_sssssssss;}> = {!StdWindow.gEq_sssssssss}

:: <{StdWindow.bimap_s;}> = {StdWindow.bimap_s}

:: <{StdWindow.bimap_ss;}> = {StdWindow.bimap_ss}

:: <{StdWindow.bimap_sss;}> = {StdWindow.bimap_sss}

