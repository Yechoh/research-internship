|| ?module? TCPStringChannels


TCPStringChannels.toStringRChannel !tcp_rchan_0 = TCPStringChannelsInternal._StringRChannel_ tcp_rchan_0 (TCPStringChannelsInternal.ReadingLength 0) _predefined._Nil 0
TCPStringChannels.toStringSChannel tcp_schan_0 = TCPStringChannels.StringSChannel_ tcp_schan_0
TCPStringChannels.reverse__34 !_x_0 list_1 = case _x_0 (_predefined._Cons hd_1_0 tl_1_1 -> TCPStringChannels.reverse__34 tl_1_1 (_predefined._Cons hd_1_0 list_1)) (_predefined._Nil -> list_1) 
TCPStringChannels.u_reverse !list_0 = TCPStringChannels.reverse__34 list_0 _predefined._Nil
TCPStringChannels.receiveUpToGeneral !_vReceive_0 !_vChannelEnv_1 akku_2 !max_3::I ch_4 env_5 = case (StdBool.not (<{StdInt.<_17}> 0 max_3)) (True -> _Tuple3 (TCPStringChannels.u_reverse akku_2) ch_4 env_5) (False -> let !_x_2_0 = select _vReceive_0::<{TCPChannelClass.Receive;}> 3 _vChannelEnv_1 (Data.Maybe.Just 0) ch_4 env_5 in case (StdBool.not (<{TCPChannelClass.==_11}> (select _x_2_0::_Tuple4 0) TCPChannelClass.TR_Success)) (True -> _Tuple3 (TCPStringChannels.u_reverse akku_2) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (False -> TCPStringChannels.receiveUpToGeneral _vReceive_0 _vChannelEnv_1 (_predefined._Cons (Data.Maybe.fromJust (select _x_2_0::_Tuple4 1)) akku_2) (<{StdInt.-_7}> max_3 StdInt.one_11) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) ) 
TCPStringChannels.stringToByteSeq !string_0 = TCPDef.toByteSeq (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdString.+++_11}> (StdString.toString_5 (_SystemArray.size_20 string_0)) (<{StdString.+++_11}> " " (<{StdString.+++_11}> string_0 "\r")))
TCPStringChannels.u_length__35 !_vone_0 !<{_v+_1}> !_x_2 akku_3 n_4 = case _x_2 (_predefined._Nil -> _Tuple2 n_4 (TCPStringChannels.u_reverse akku_3)) (_predefined._Cons h_1_0 t_1_1 -> TCPStringChannels.u_length__35 _vone_0 <{_v+_1}> t_1_1 (_predefined._Cons h_1_0 akku_3) (select <{_v+_1}>::<{StdOverloaded.+;}> 0 n_4 (select _vone_0::<{StdOverloaded.one;}> 0))) 
TCPStringChannels.u_length__84 !<{_v+_0}> !_x_1 akku_2 n_3::I = case _x_1 (_predefined._Nil -> _Tuple2 n_3 (TCPStringChannels.u_reverse akku_2)) (_predefined._Cons h_1_0 t_1_1 -> TCPStringChannels.u_length__84 <{_v+_0}> t_1_1 (_predefined._Cons h_1_0 akku_2) (select <{_v+_0}>::<{StdOverloaded.+;}> 0 n_3 StdInt.one_11)) 
TCPStringChannels.u_length__85 !_x_0 akku_1 n_2::I = case _x_0 (_predefined._Nil -> _Tuple2 n_2 (TCPStringChannels.u_reverse akku_1)) (_predefined._Cons h_1_0 t_1_1 -> TCPStringChannels.u_length__85 t_1_1 (_predefined._Cons h_1_0 akku_1) (<{StdInt.+_6}> n_2 StdInt.one_11)) 
TCPStringChannels.u_length !l_0 = TCPStringChannels.u_length__85 l_0 _predefined._Nil 0
TCPStringChannels.Cast !a_0 = error "no AnyCodeExpr"
TCPStringChannels.CastToStringList !x_0 = TCPStringChannels.Cast x_0
TCPStringChannels.available_2 !_vChannelEnv_0 !rchan_1 !env_2 = case rchan_1 (TCPStringChannelsInternal._StringRChannel_ tcp_rchan_1_0 readPhase_1_1 receivedStrings_1_2 maxSize_1_3 -> case (StdBool.not (StdList.isEmpty (select rchan_1::TCPStringChannelsInternal._StringRChannel_ 2))) (True -> <{_Tuple3!7}> True rchan_1 env_2) (False -> let !_x_3_0 = TCPChannels.available_19 _vChannelEnv_0 (select rchan_1::TCPStringChannelsInternal._StringRChannel_ 0) env_2 in case (StdBool.not (select _x_3_0::_Tuple3 0)) (True -> <{_Tuple3!7}> False (update rchan_1::TCPStringChannelsInternal._StringRChannel_ [0:select _x_3_0::_Tuple3 1]) (select _x_3_0::_Tuple3 2)) (False -> let !_x_5_0 = TCPChannelClass.receive _vChannelEnv_0 (<{TCPChannelClass.Receive;}> TCPChannels.available_19 TCPChannels.eom_20 TCPChannels.receiveUpTo_21 TCPChannels.receive_MT_22) (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2), !string_5_1 = TCPDef.toString_2 (select _x_5_0::_Tuple3 0), !_x_5_2 = TCPStringChannelsInternal.addString (_Tuple2 string_5_1 0) (select rchan_1::TCPStringChannelsInternal._StringRChannel_ 1) maxSize_1_3, newStrings_5_3 = select _x_5_2::_Tuple2 0 in <{_Tuple3!7}> (StdBool.not (StdList.isEmpty newStrings_5_3)) (update rchan_1::TCPStringChannelsInternal._StringRChannel_ [0:select _x_5_0::_Tuple3 1,1:select _x_5_2::_Tuple2 1,2:newStrings_5_3]) (select _x_5_0::_Tuple3 2)) ) ) 
TCPStringChannels.isEOM_36 !rchan_0 = case rchan_0 (TCPStringChannelsInternal._StringRChannel_ tcp_rchan_1_0 readPhase_1_1 receivedStrings_1_2 maxSize_1_3 -> case readPhase_1_1 (TCPStringChannelsInternal.EndOfMessages -> _Tuple2 True rchan_0) ) (_ -> _Tuple2 False rchan_0)
TCPStringChannels.eom_3 !_vChannelEnv_0 !rchan_1 !env_2 = case (StdBool.not (StdList.isEmpty (select rchan_1::TCPStringChannelsInternal._StringRChannel_ 2))) (True -> <{_Tuple3!7}> False rchan_1 env_2) (False -> let !_x_2_0 = TCPStringChannels.isEOM_36 rchan_1 in case (select _x_2_0::_Tuple2 0) (True -> <{_Tuple3!7}> True (select _x_2_0::_Tuple2 1) env_2) (False -> let !_x_4_0 = TCPChannels.eom_20 _vChannelEnv_0 (select rchan_4_2::TCPStringChannelsInternal._StringRChannel_ 0) env_2, isTCPEom_4_1 = select _x_4_0::_Tuple3 0, rchan_4_2::B = select _x_2_0::_Tuple2 1 in case isTCPEom_4_1 (True -> <{_Tuple3!7}> isTCPEom_4_1 (update rchan_4_2::TCPStringChannelsInternal._StringRChannel_ [0:select _x_4_0::_Tuple3 1,1:TCPStringChannelsInternal.EndOfMessages]) (select _x_4_0::_Tuple3 2)) (False -> <{_Tuple3!7}> isTCPEom_4_1 (update rchan_4_2::TCPStringChannelsInternal._StringRChannel_ [0:select _x_4_0::_Tuple3 1]) (select _x_4_0::_Tuple3 2)) ) ) 
TCPStringChannels.receive_MT_5 !_vChannelEnv_0 !mbTimeout_1 !rchan_2 !env_3 = case rchan_2 (TCPStringChannelsInternal._StringRChannel_ tcp_rchan_1_0 readPhase_1_1 receivedStrings_1_2 maxSize_1_3 -> case (case (Data.Maybe.isJust mbTimeout_1) (True -> <{StdInt.<_17}> (Data.Maybe.fromJust mbTimeout_1) 0) (False -> False) ) (True -> <{_Tuple4!15}> TCPChannelClass.TR_Expired Data.Maybe.Nothing rchan_2 env_3) (False -> case (StdBool.not (StdList.isEmpty receivedStrings_1_2)) (True -> <{_Tuple4!15}> TCPChannelClass.TR_Success (Data.Maybe.Just (TCPStringChannels.Cast (StdList.hd receivedStrings_1_2))) (update rchan_2::TCPStringChannelsInternal._StringRChannel_ [2:StdList.tl receivedStrings_1_2]) env_3) (False -> let !_x_4_0 = select _vChannelEnv_0::<{tcp.ChannelEnv;}> 1 env_3, !_x_4_1 = TCPChannels.receive_MT_22 _vChannelEnv_0 mbTimeout_1 (select rchan_2::TCPStringChannelsInternal._StringRChannel_ 0) (select _x_4_0::_Tuple2 1), toReport_4_2 = select _x_4_1::_Tuple4 0 in case (<{TCPChannelClass.==_11}> toReport_4_2 TCPChannelClass.TR_Expired) (True -> <{_Tuple4!15}> toReport_4_2 Data.Maybe.Nothing (update rchan_2::TCPStringChannelsInternal._StringRChannel_ [0:select _x_4_1::_Tuple4 2]) (select _x_4_1::_Tuple4 3)) (False -> case (<{TCPChannelClass.==_11}> toReport_4_2 TCPChannelClass.TR_NoSuccess) (True -> <{_Tuple4!15}> toReport_4_2 Data.Maybe.Nothing (update rchan_2::TCPStringChannelsInternal._StringRChannel_ [0:select _x_4_1::_Tuple4 2,1:TCPStringChannelsInternal.EndOfMessages]) (select _x_4_1::_Tuple4 3)) (False -> let !_x_7_0 = TCPStringChannelsInternal.addString (_Tuple2 (TCPDef.toString_2 (Data.Maybe.fromJust (select _x_4_1::_Tuple4 1))) 0) (select rchan_2::TCPStringChannelsInternal._StringRChannel_ 1) maxSize_1_3, newStrings_7_1 = select _x_7_0::_Tuple2 0 in case (StdBool.not (StdList.isEmpty newStrings_7_1)) (True -> <{_Tuple4!15}> TCPChannelClass.TR_Success (Data.Maybe.Just (TCPStringChannels.Cast (StdList.hd newStrings_7_1))) (update rchan_2::TCPStringChannelsInternal._StringRChannel_ [0:select _x_4_1::_Tuple4 2,1:select _x_7_0::_Tuple2 1,2:StdList.tl newStrings_7_1]) (select _x_4_1::_Tuple4 3)) (False -> let !_x_9_0 = select _vChannelEnv_0::<{tcp.ChannelEnv;}> 1 (select _x_4_1::_Tuple4 3), !usedTime_9_1::I = <{StdInt.-_7}> (select _x_9_0::_Tuple2 0) (select _x_4_0::_Tuple2 0), !newMbTimeout_9_2 = <{TCPStringChannels._if;36;31_88}> (Data.Maybe.isNothing mbTimeout_1) mbTimeout_1 usedTime_9_1 in TCPStringChannels.receive_MT_5 _vChannelEnv_0 newMbTimeout_9_2 (update rchan_2::TCPStringChannelsInternal._StringRChannel_ [0:select _x_4_1::_Tuple4 2,1:select _x_7_0::_Tuple2 1]) (select _x_9_0::_Tuple2 1)) ) ) ) ) ) 
<{TCPStringChannels._if;36;31_88}> !_x_0::B mbTimeout_1 usedTime_2::I = case _x_0 (True -> mbTimeout_1) (_ -> Data.Maybe.Just (<{StdInt.-_7}> (Data.Maybe.fromJust mbTimeout_1) usedTime_2))
TCPStringChannels.receiveUpToGeneral_86 !_vChannelEnv_0 akku_1 !max_2::I ch_3 env_4 = case (StdBool.not (<{StdInt.<_17}> 0 max_2)) (True -> _Tuple3 (TCPStringChannels.u_reverse akku_1) ch_3 env_4) (False -> let !_x_2_0 = TCPStringChannels.receive_MT_5 _vChannelEnv_0 (Data.Maybe.Just 0) ch_3 env_4 in case (StdBool.not (<{TCPChannelClass.==_11}> (select _x_2_0::_Tuple4 0) TCPChannelClass.TR_Success)) (True -> _Tuple3 (TCPStringChannels.u_reverse akku_1) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) (False -> TCPStringChannels.receiveUpToGeneral_86 _vChannelEnv_0 (_predefined._Cons (Data.Maybe.fromJust (select _x_2_0::_Tuple4 1)) akku_1) (<{StdInt.-_7}> max_2 StdInt.one_11) (select _x_2_0::_Tuple4 2) (select _x_2_0::_Tuple4 3)) ) 
TCPStringChannels.receiveUpTo_4 !_vChannelEnv_0 !max_1::I !ch_2 !env_3 = TCPStringChannels.receiveUpToGeneral_86 _vChannelEnv_0 _predefined._Nil max_1 ch_2 env_3
TCPStringChannels.closeRChannel_6 !_vChannelEnv_0 !_x_1 !env_2 = case _x_1 (TCPStringChannelsInternal._StringRChannel_ tcp_rchan_1_0 readPhase_1_1 receivedStrings_1_2 maxSize_1_3 -> TCPChannels.closeRChannel_23 _vChannelEnv_0 tcp_rchan_1_0 env_2) 
TCPStringChannels.clearMaxSize_7 !ch_0 = update ch_0::TCPStringChannelsInternal._StringRChannel_ [3:0]
TCPStringChannels.getMaxSize_8 !ch_0 = case ch_0 (TCPStringChannelsInternal._StringRChannel_ tcp_rchan_1_0 readPhase_1_1 receivedStrings_1_2 maxSize_1_3 -> <{_Tuple2!3}> maxSize_1_3 ch_0) 
TCPStringChannels.setMaxSize_9 !newMaxSize_0::I !ch_1 = case ch_1 (TCPStringChannelsInternal._StringRChannel_ tcp_rchan_1_0 readPhase_1_1 receivedStrings_1_2 maxSize_1_3 -> case readPhase_1_1 (TCPStringChannelsInternal.ReadingString _x_2_0 _x_2_1 currentStringSize_2_2 -> case (case (<{StdInt.<_17}> maxSize_1_3 currentStringSize_2_2) (True -> <{StdInt.<_17}> 0 maxSize_1_3) (False -> False) ) (True -> let y_4_0::I = 0 in update ch_1::TCPStringChannelsInternal._StringRChannel_ [1:TCPStringChannelsInternal.EndOfMessages,3:<{TCPStringChannels._c;51;16_89}> (<{StdInt.<_17}> newMaxSize_0 y_4_0) y_4_0 newMaxSize_0]) ) (_ -> let y_2_0::I = 0 in update ch_1::TCPStringChannelsInternal._StringRChannel_ [3:<{TCPStringChannels._c;51;16_90}> (<{StdInt.<_17}> newMaxSize_0 y_2_0) y_2_0 newMaxSize_0])) 
<{TCPStringChannels._c;51;16_90}>::I !_x_0::B y_1::I newMaxSize_2::I = case _x_0 (True -> y_1) (_ -> newMaxSize_2)
<{TCPStringChannels._c;51;16_89}>::I !_x_0::B y_1::I newMaxSize_2::I = case _x_0 (True -> y_1) (_ -> newMaxSize_2)
TCPStringChannels.abortConnection_10 !_vChannelEnv_0 !_x_1 !env_2 = case _x_1 (TCPStringChannels.StringSChannel_ tcp_schan_1_0 -> TCPChannels.abortConnection_12 _vChannelEnv_0 tcp_schan_1_0 env_2) 
TCPStringChannels.bufferSize_11 !_x_0 = case _x_0 (TCPStringChannels.StringSChannel_ tcp_schan_1_0 -> let !_x_2_0 = TCPChannels.bufferSize_13 tcp_schan_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (TCPStringChannels.StringSChannel_ (select _x_2_0::_Tuple2 1))) 
TCPStringChannels.closeChannel_MT_12 !_vChannelEnv_0 !mbTimeout_1 !_x_2 !env_3 = case _x_2 (TCPStringChannels.StringSChannel_ tcp_schan_1_0 -> TCPChannels.closeChannel_MT_14 _vChannelEnv_0 mbTimeout_1 tcp_schan_1_0 env_3) 
TCPStringChannels.disconnected_13 !_vChannelEnv_0 !_x_1 !env_2 = case _x_1 (TCPStringChannels.StringSChannel_ tcp_schan_1_0 -> let !_x_2_0 = TCPChannels.disconnected_15 _vChannelEnv_0 tcp_schan_1_0 env_2 in <{_Tuple3!7}> (select _x_2_0::_Tuple3 0) (TCPStringChannels.StringSChannel_ (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) 
TCPStringChannels.flushBuffer_MT_14 !_vChannelEnv_0 !mbTimeout_1 !_x_2 !env_3 = case _x_2 (TCPStringChannels.StringSChannel_ tcp_schan_1_0 -> let !_x_2_0 = TCPChannels.flushBuffer_MT_16 _vChannelEnv_0 mbTimeout_1 tcp_schan_1_0 env_3 in <{_Tuple4!15}> (select _x_2_0::_Tuple4 0) (select _x_2_0::_Tuple4 1) (TCPStringChannels.StringSChannel_ (select _x_2_0::_Tuple4 2)) (select _x_2_0::_Tuple4 3)) 
TCPStringChannels.nsend_MT_15 !_vChannelEnv_0 !mbTimeout_1 !stringListPolymorph_2 !_x_3 !env_4 = case _x_3 (TCPStringChannels.StringSChannel_ tcp_schan_1_0 -> let !_x_2_0 = TCPChannels.nsend_MT_17 _vChannelEnv_0 mbTimeout_1 (StdList.map TCPStringChannels.stringToByteSeq (TCPStringChannels.CastToStringList stringListPolymorph_2)) tcp_schan_1_0 env_4 in <{_Tuple4!15}> (select _x_2_0::_Tuple4 0) (select _x_2_0::_Tuple4 1) (TCPStringChannels.StringSChannel_ (select _x_2_0::_Tuple4 2)) (select _x_2_0::_Tuple4 3)) 
TCPStringChannels.send_MT_16 !_vChannelEnv_0 !mbTimeout_1 !stringPolymorph_2 !ch_3 !env_4 = TCPStringChannels.nsend_MT_15 _vChannelEnv_0 mbTimeout_1 (_predefined._Cons stringPolymorph_2 _predefined._Nil) ch_3 env_4
TCPStringChannels.accSChannel_17 !f_0 !_x_1 = case _x_1 (TCPStringChannels.StringSChannel_ tcp_schan_1_0 -> let !_x_2_0 = f_0 tcp_schan_1_0 in _Tuple2 (select _x_2_0::_Tuple2 0) (TCPStringChannels.StringSChannel_ (select _x_2_0::_Tuple2 1))) 
TCPStringChannels.accSChannelsA_37 f_0 !_x_1 akku_2 = case _x_1 (_predefined._Nil -> let !_x_2_0 = StdList.unzip (TCPStringChannels.u_reverse akku_2) in _Tuple2 (select _x_2_0::_Tuple2 0) (TCPStringChannels.StringSChannels (select _x_2_0::_Tuple2 1))) (_predefined._Cons _x_1_0 channels_1_1 -> case _x_1_0 (TCPStringChannels.StringSChannel_ tcp_schan_2_0 -> let !_x_3_0 = f_0 tcp_schan_2_0 in TCPStringChannels.accSChannelsA_37 f_0 channels_1_1 (_predefined._Cons (_Tuple2 (select _x_3_0::_Tuple2 0) (TCPStringChannels.StringSChannel_ (select _x_3_0::_Tuple2 1))) akku_2)) ) 
TCPStringChannels.accSChannels_18 f_0 !_x_1 = case _x_1 (TCPStringChannels.StringSChannels channels_1_0 -> TCPStringChannels.accSChannelsA_37 f_0 channels_1_0 _predefined._Nil) 
TCPStringChannels.appDisconnected_19 !_vChannelEnv_0 !n_1::I !_x_2 !env_3 = case _x_2 (TCPStringChannels.StringSChannels channels_1_0 -> let !_x_2_0 = StdList.splitAt n_1 channels_1_0, !_x_2_1 = TCPStringChannels.disconnected_13 _vChannelEnv_0 (select _x_2_2::_Tuple2 0) env_3, _x_2_2 = select _x_2_0::_Tuple2 1 in <{_Tuple3!7}> (select _x_2_1::_Tuple3 0) (TCPStringChannels.StringSChannels (<{StdList.++}> (select _x_2_0::_Tuple2 0) (_predefined._Cons (select _x_2_1::_Tuple3 1) (select _x_2_2::_Tuple2 1)))) (select _x_2_1::_Tuple3 2)) 
TCPStringChannels.accRChannelsA_38 f_0 !_x_1 akku_2 = case _x_1 (_predefined._Nil -> let !_x_2_0 = StdList.unzip (TCPStringChannels.u_reverse akku_2) in _Tuple2 (select _x_2_0::_Tuple2 0) (TCPStringChannels.StringRChannels (select _x_2_0::_Tuple2 1))) (_predefined._Cons chan_1_0 channels_1_1 -> case chan_1_0 (TCPStringChannelsInternal._StringRChannel_ tcp_rchan_2_0 readPhase_2_1 receivedStrings_2_2 maxSize_2_3 -> let !_x_3_0 = f_0 (TCPDef.TCP_RCHANNEL tcp_rchan_2_0) in TCPStringChannels.accRChannelsA_38 f_0 channels_1_1 (_predefined._Cons (_Tuple2 (select _x_3_0::_Tuple2 0) (update chan_1_0::TCPStringChannelsInternal._StringRChannel_ [0:select (select _x_3_0::_Tuple2 1)::_Tuple1 0])) akku_2)) ) 
TCPStringChannels.accRChannels_20 f_0 !_x_1 = case _x_1 (TCPStringChannels.StringRChannels channels_1_0 -> TCPStringChannels.accRChannelsA_38 f_0 channels_1_0 _predefined._Nil) 
TCPStringChannels.getState_39 !_vReceive_0 !_vChannelEnv_1 channel_2 env_3 = let !_x_1_0 = select _vReceive_0::<{TCPChannelClass.Receive;}> 0 _vChannelEnv_1 channel_2 env_3 in case (select _x_1_0::_Tuple3 0) (True -> _Tuple3 (Data.Maybe.Just TCPDef.SR_Available) (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2)) (False -> let !_x_3_0 = select _vReceive_0::<{TCPChannelClass.Receive;}> 1 _vChannelEnv_1 (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2) in case (select _x_3_0::_Tuple3 0) (True -> _Tuple3 (Data.Maybe.Just TCPDef.SR_EOM) (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) (False -> _Tuple3 Data.Maybe.Nothing (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) ) 
TCPStringChannels.getState_87 !_vChannelEnv_0 !channel_1 !env_2 = let !_x_1_0 = TCPStringChannels.available_2 _vChannelEnv_0 channel_1 env_2 in case (select _x_1_0::_Tuple3 0) (True -> _Tuple3 (Data.Maybe.Just TCPDef.SR_Available) (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2)) (False -> let !_x_3_0 = TCPStringChannels.eom_3 _vChannelEnv_0 (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2) in case (select _x_3_0::_Tuple3 0) (True -> _Tuple3 (Data.Maybe.Just TCPDef.SR_EOM) (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) (False -> _Tuple3 Data.Maybe.Nothing (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) ) 
TCPStringChannels.getRState_21 !_vChannelEnv_0 !n_1::I !_x_2 !env_3 = case _x_2 (TCPStringChannels.StringRChannels channels_1_0 -> let !_x_2_0 = StdList.splitAt n_1 channels_1_0, !_x_2_1 = TCPStringChannels.getState_87 _vChannelEnv_0 (select _x_2_2::_Tuple2 0) env_3, _x_2_2 = select _x_2_0::_Tuple2 1 in <{_Tuple3!7}> (select _x_2_1::_Tuple3 0) (TCPStringChannels.StringRChannels (<{StdList.++}> (select _x_2_0::_Tuple2 0) (_predefined._Cons (select _x_2_1::_Tuple3 1) (select _x_2_2::_Tuple2 1)))) (select _x_2_1::_Tuple3 2)) 
TCPStringChannels.getNrOfChannels_22 !_x_0 = case _x_0 (TCPStringChannels.StringRChannels channels_1_0 -> let !_x_2_0 = TCPStringChannels.u_length channels_1_0 in <{_Tuple2!3}> (select _x_2_0::_Tuple2 0) (TCPStringChannels.StringRChannels (select _x_2_0::_Tuple2 1))) 
<{TCPStringChannels.TD;StringRChannel}> _x_0::B = _predefined._Nil
<{TCPStringChannels.TD;StringRChannels}> _x_0::B = _predefined._Nil
<{TCPStringChannels.TD;StringSChannel_}> _x_0::B = _predefined._Nil
<{TCPStringChannels.TD;StringSChannel}> _x_0::B = _predefined._Nil
<{TCPStringChannels.TD;StringSChannels}> _x_0::B = _predefined._Nil

:: TCPStringChannels.StringRChannels = TCPStringChannels.StringRChannels a1
:: TCPStringChannels.StringSChannels = TCPStringChannels.StringSChannels a1
:: TCPStringChannels.StringSChannel_ = TCPStringChannels.StringSChannel_ a1

|| Converted Records
:: <{TCPStringChannels.gEq_s;}> = {!TCPStringChannels.gEq_s}

:: <{TCPStringChannels.gEq_ss;}> = {!TCPStringChannels.gEq_ss}

:: <{TCPStringChannels.gEq_sss;}> = {!TCPStringChannels.gEq_sss}

:: <{TCPStringChannels.gEq_ssss;}> = {!TCPStringChannels.gEq_ssss}

:: <{TCPStringChannels.gEq_sssss;}> = {!TCPStringChannels.gEq_sssss}

:: <{TCPStringChannels.gEq_ssssss;}> = {!TCPStringChannels.gEq_ssssss}

:: <{TCPStringChannels.gEq_sssssss;}> = {!TCPStringChannels.gEq_sssssss}

:: <{TCPStringChannels.gEq_ssssssss;}> = {!TCPStringChannels.gEq_ssssssss}

:: <{TCPStringChannels.gEq_sssssssss;}> = {!TCPStringChannels.gEq_sssssssss}

:: <{TCPStringChannels.bimap_s;}> = {TCPStringChannels.bimap_s}

:: <{TCPStringChannels.bimap_ss;}> = {TCPStringChannels.bimap_ss}

:: <{TCPStringChannels.bimap_sss;}> = {TCPStringChannels.bimap_sss}

