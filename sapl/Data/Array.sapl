|| ?module? Data.Array


<{Data.Array.mapArrSt`_12}> !_vArray_0 !sz_1::I !idx_2::I !f_3 !arr_4 !st_5 = case (<{StdInt.==_16}> idx_2 sz_1) (True -> <{_Tuple2!3}> arr_4 st_5) (False -> let !_x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 arr_4 idx_2, !_x_2_1 = f_3 (select _x_2_0::_Tuple2 0) st_5, !arr_2_2 = select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_2_0::_Tuple2 1) idx_2 (select _x_2_1::_Tuple2 0) in <{Data.Array.mapArrSt`_12}> _vArray_0 sz_1 (<{StdInt.+_6}> idx_2 1) f_3 arr_2_2 (select _x_2_1::_Tuple2 1)) 
Data.Array.mapArrSt !_vArray_0 !f_1 !arr_2 !st_3 = let !_x_1_0 = select _vArray_0::<{_SystemArray.Array;}> 7 arr_2 in <{Data.Array.mapArrSt`_12}> _vArray_0 (select _x_1_0::_Tuple2 0) 0 f_1 (select _x_1_0::_Tuple2 1) st_3
Data.Array.anon_13 !f_0 _x_1 = f_0
<{Data.Array.foldrArr`_14}> !_vArray_0 !arrSz_1::I !idx_2::I !f_3 !b_4 !arr_5 = case (<{StdInt.==_16}> idx_2 arrSz_1) (True -> b_4) (False -> let !_x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 arr_5 idx_2 in f_3 idx_2 (select _x_2_0::_Tuple2 0) (<{Data.Array.foldrArr`_14}> _vArray_0 arrSz_1 (<{StdInt.+_6}> idx_2 1) f_3 b_4 (select _x_2_0::_Tuple2 1))) 
Data.Array.foldrArrWithKey !_vArray_0 !f_1 !b_2 !arr_3 = let !_x_1_0 = select _vArray_0::<{_SystemArray.Array;}> 7 arr_3 in <{Data.Array.foldrArr`_14}> _vArray_0 (select _x_1_0::_Tuple2 0) 0 f_1 b_2 (select _x_1_0::_Tuple2 1)
Data.Array.foldrArr !_vArray_0 !f_1 !b_2 !arr_3 = Data.Array.foldrArrWithKey _vArray_0 (Data.Array.anon_13 f_1) b_2 arr_3
Data.Array.anon_15 !f_0 _x_1 = f_0
<{Data.Array.foldUArr`_16}> !_vArray_0 f_1 !sz_2::I !idx_3::I b_4 arr_5 = case (<{StdInt.==_16}> idx_3 sz_2) (True -> _Tuple2 b_4 arr_5) (False -> let !_x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 arr_5 idx_3, !_x_2_1 = <{Data.Array.foldUArr`_16}> _vArray_0 f_1 sz_2 (<{StdInt.+_6}> idx_3 1) b_4 (select _x_2_0::_Tuple2 1) in f_1 idx_3 (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0) (select _x_2_1::_Tuple2 1)) 
Data.Array.foldrUArrWithKey !_vArray_0 !f_1 b_2 arr_3 = let _x_1_0 = select _vArray_0::<{_SystemArray.Array;}> 7 arr_3 in <{Data.Array.foldUArr`_16}> _vArray_0 f_1 (select _x_1_0::_Tuple2 0) 0 b_2 (select _x_1_0::_Tuple2 1)
Data.Array.foldrUArr !_vArray_0 !f_1 b_2 arr_3 = Data.Array.foldrUArrWithKey _vArray_0 (Data.Array.anon_15 f_1) b_2 arr_3
Data.Array.anon_17 !f_0 _x_1 = f_0
<{Data.Array.foldlArr`_18}> !_vArray_0 !arrSz_1::I !idx_2::I !f_3 !b_4 !arr_5 = case (<{StdInt.==_16}> idx_2 arrSz_1) (True -> b_4) (False -> let !_x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 arr_5 idx_2, !<{b`_2_1}> = f_3 idx_2 b_4 (select _x_2_0::_Tuple2 0) in <{Data.Array.foldlArr`_18}> _vArray_0 arrSz_1 (<{StdInt.+_6}> idx_2 1) f_3 <{b`_2_1}> (select _x_2_0::_Tuple2 1)) 
Data.Array.foldlArrWithKey !_vArray_0 !f_1 !b_2 !arr_3 = let !_x_1_0 = select _vArray_0::<{_SystemArray.Array;}> 7 arr_3 in <{Data.Array.foldlArr`_18}> _vArray_0 (select _x_1_0::_Tuple2 0) 0 f_1 b_2 (select _x_1_0::_Tuple2 1)
Data.Array.foldlArr !_vArray_0 !f_1 !b_2 !arr_3 = Data.Array.foldlArrWithKey _vArray_0 (Data.Array.anon_17 f_1) b_2 arr_3
<{Data.Array.cu;70;67_20}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{Data.Array.cu;70;67_20}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
Data.Array.anon_19 !_vArray_0 sz_1::I idx_2::I acc_3 e_4 = select _vArray_0::<{_SystemArray.Array;}> 5 acc_3 (<{StdInt.-_7}> (<{StdInt.-_7}> sz_1 idx_2) 1) e_4
Data.Array.reverseArr !_vArray_0 !arr_1 = let !sz_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 arr_1, _x_1_1::I = select _vArray_0::<{_SystemArray.Array;}> 7 arr_1, g_s2_1_2 = <{StdInt.-_7}> (select _x_1_1::_Tuple2 0) 1 in Data.Array.foldlArrWithKey _vArray_0 (Data.Array.anon_19 _vArray_0 sz_1_0) (<{Data.Array.cu;70;67_20}> _vArray_0 _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_1_2 StdInt.one_11)) 0 g_s2_1_2 (select _x_1_1::_Tuple2 1)) arr_1
Data.Array.copyArr_22 !_vArray_0 !_vArray_1 !sz_2::I !i_3::I origArr_4 newArr_5 = case (<{StdInt.==_16}> i_3 (<{StdInt.-_7}> sz_2 1)) (True -> newArr_5) (False -> Data.Array.copyArr_22 _vArray_0 _vArray_1 sz_2 (<{StdInt.+_6}> i_3 1) origArr_4 (select _vArray_1::<{_SystemArray.Array;}> 5 newArr_5 i_3 (select _vArray_0::<{_SystemArray.Array;}> 3 origArr_4 i_3))) 
<{Data.Array.cu;77;20_21}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{Data.Array.cu;77;20_21}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
Data.Array.takeArr !_vArray_0 !n_1::I !arr_2 = case (<{StdInt.<_17}> 0 (select _vArray_0::<{_SystemArray.Array;}> 4 arr_2)) (True -> let !newArr_2_0 = select _vArray_0::<{_SystemArray.Array;}> 1 n_1 (select _vArray_0::<{_SystemArray.Array;}> 3 arr_2 0) in Data.Array.copyArr_22 _vArray_0 _vArray_0 n_1 0 arr_2 newArr_2_0) (False -> let _x_2_0::I = select _vArray_0::<{_SystemArray.Array;}> 7 arr_2, g_s2_2_1 = <{StdInt.-_7}> (select _x_2_0::_Tuple2 0) 1 in <{Data.Array.cu;77;20_21}> _vArray_0 _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_2_1 StdInt.one_11)) 0 g_s2_2_1 (select _x_2_0::_Tuple2 1)) 
<{Data.Array.cu;85;15_23}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{Data.Array.cu;85;15_23}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
<{Data.Array.mapArrSt`_24}> !_vArray_0 !sz_1::I !idx_2::I !f_3 !arr_4 = case (<{StdInt.==_16}> idx_2 sz_1) (True -> arr_4) (False -> let !_x_2_0 = select _vArray_0::<{_SystemArray.Array;}> 6 arr_4 idx_2, !e_2_1 = f_3 (select _x_2_0::_Tuple2 0), !arr_2_2 = select _vArray_0::<{_SystemArray.Array;}> 5 (select _x_2_0::_Tuple2 1) idx_2 e_2_1 in <{Data.Array.mapArrSt`_24}> _vArray_0 sz_1 (<{StdInt.+_6}> idx_2 1) f_3 arr_2_2) 
Data.Array.mapArr !_vArray_0 !f_1 !arr_2 = let !arr_1_0 = <{Data.Array.cu;85;15_23}> _vArray_0 _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_1_3 StdInt.one_11)) 0 g_s2_1_3 (select _x_1_2::_Tuple2 1), !_x_1_1 = select _vArray_0::<{_SystemArray.Array;}> 7 arr_1_0, _x_1_2::I = select _vArray_0::<{_SystemArray.Array;}> 7 arr_2, g_s2_1_3 = <{StdInt.-_7}> (select _x_1_2::_Tuple2 0) 1 in <{Data.Array.mapArrSt`_24}> _vArray_0 (select _x_1_1::_Tuple2 0) 0 f_1 (select _x_1_1::_Tuple2 1)
Data.Array.anon_25 !_vArray_0 offset_1::I idx_2::I oldEl_3 newArr_4 = select _vArray_0::<{_SystemArray.Array;}> 5 newArr_4 (<{StdInt.+_6}> idx_2 offset_1) oldEl_3
Data.Array.addWithOffset_26 !_vArray_0 !_vArray_1 totalSz_2 offset_3::I !oldArr_4 !newArr_5 = Data.Array.foldrArrWithKey _vArray_1 (Data.Array.anon_25 _vArray_0 offset_3) newArr_5 oldArr_4
Data.Array.appendArr !_vArray_0 !l_1 !r_2 = let !szl_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 4 l_1, !szr_1_1::I = select _vArray_0::<{_SystemArray.Array;}> 4 r_2, !totalSz_1_2::I = <{StdInt.+_6}> szl_1_0 szr_1_1 in case (<{StdInt.<_17}> totalSz_1_2 1) (True -> l_1) (False -> let !el_3_0 = <{Data.Array._if;105;17_27}> (<{StdInt.<_17}> 0 szl_1_0) l_1 _vArray_0 r_2, !newArr_3_1 = select _vArray_0::<{_SystemArray.Array;}> 1 totalSz_1_2 el_3_0, !newArr_3_2 = Data.Array.addWithOffset_26 _vArray_0 _vArray_0 totalSz_1_2 0 l_1 newArr_3_1, !newArr_3_3 = Data.Array.addWithOffset_26 _vArray_0 _vArray_0 totalSz_1_2 (<{StdInt.-_7}> szl_1_0 1) r_2 newArr_3_2 in newArr_3_3) 
<{Data.Array._if;105;17_27}> !_x_0::B l_1 !_vArray_2 r_3 = case _x_0 (True -> select _vArray_2::<{_SystemArray.Array;}> 3 l_1 0) (_ -> select _vArray_2::<{_SystemArray.Array;}> 3 r_3 0)
<{Data.Array.+++_11}> !_vArray_0 !l_1 !r_2 = Data.Array.appendArr _vArray_0 l_1 r_2


|| Converted Records
