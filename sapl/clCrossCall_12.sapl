|| ?module? clCrossCall_12


clCrossCall_12.call_back_variable_array0 =: _SystemArray.update_13 (_SystemArray._createArray_8 1) 0 0
clCrossCall_12.select_call_back_variable_array0 !array_0 = error "no AnyCodeExpr"
clCrossCall_12.get_call_back0 !tb_0::I = <{_Tuple2!3}> (select (clCrossCall_12.select_call_back_variable_array0 clCrossCall_12.call_back_variable_array0)::_Tuple2 0) tb_0
clCrossCall_12.anon_43 !c_0 !s_1 !t_2 = StdMisc.abort "initial callback function 1"
clCrossCall_12.call_back_variable_array1 =: clCrossCall_12.update_228 (clCrossCall_12._createArray_223 1) 0 (clCrossCall_12._CallBackVariable1 clCrossCall_12.anon_43 _predefined._Nil)
clCrossCall_12.select_call_back_variable_array1 !array_0 = error "no AnyCodeExpr"
clCrossCall_12.get_call_back1 !tb_0::I = let _x_1_0 = clCrossCall_12.select_call_back_variable_array1 clCrossCall_12.call_back_variable_array1 in <{_Tuple3!7}> (select _x_1_0::_Tuple3 0) (select _x_1_0::_Tuple3 1) tb_0
clCrossCall_12.update_call_back_variable_array1 !array_0 !call_back_variable_1 !tb_2::I = error "no AnyCodeExpr"
clCrossCall_12.store_call_back1::I !call_back_0 !s_1 !tb_2::I = select (clCrossCall_12.update_call_back_variable_array1 clCrossCall_12.call_back_variable_array1 (clCrossCall_12._CallBackVariable1 call_back_0 s_1) tb_2)::_Tuple2 1
clCrossCall_12.call_back1 !cci_argument_0 !tb_1::I = let _x_1_0 = clCrossCall_12.get_call_back1 tb_1, call_back_1_1 = select _x_1_0::_Tuple3 0, _x_1_2 = call_back_1_1 cci_argument_0 (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2) in <{_Tuple2!3}> (select _x_1_2::_Tuple3 0) (clCrossCall_12.store_call_back1 call_back_1_1 (select _x_1_2::_Tuple3 1) (select _x_1_2::_Tuple3 2))
clCrossCall_12.anon_44 !c_0 !t_1 = StdMisc.abort "initial callback function 2"
clCrossCall_12.call_back_variable_array2 =: clCrossCall_12.update_220 (clCrossCall_12._createArray_215 1) 0 (clCrossCall_12._CallBackVariable2 clCrossCall_12.anon_44)
clCrossCall_12.select_call_back_variable_array2 !array_0 = error "no AnyCodeExpr"
clCrossCall_12.get_call_back2 !tb_0::I = <{_Tuple2!3}> (select (clCrossCall_12.select_call_back_variable_array2 clCrossCall_12.call_back_variable_array2)::_Tuple2 0) tb_0
clCrossCall_12.update_call_back_variable_array2 !array_0 !call_back_variable_1 !tb_2::I = error "no AnyCodeExpr"
clCrossCall_12.store_call_back2::I !call_back_0 !tb_1::I = select (clCrossCall_12.update_call_back_variable_array2 clCrossCall_12.call_back_variable_array2 (clCrossCall_12._CallBackVariable2 call_back_0) tb_1)::_Tuple2 1
clCrossCall_12.call_back2 !cci_argument_0 !tb_1::I = let _x_1_0 = clCrossCall_12.get_call_back2 tb_1, call_back_1_1 = select _x_1_0::_Tuple2 0, _x_1_2 = call_back_1_1 cci_argument_0 (select _x_1_0::_Tuple2 1) in <{_Tuple2!3}> (select _x_1_2::_Tuple2 0) (clCrossCall_12.store_call_back2 call_back_1_1 (select _x_1_2::_Tuple2 1))
clCrossCall_12.call_back_clean_object_io !i0_0::I !i1_1::I !i2_2::I !i3_3::I !i4_4::I !i5_5::I !i6_6::I !tb_7::I = let _x_1_0::I = clCrossCall_12.get_call_back0 tb_7, call_back_n_1_1 = select _x_1_0::_Tuple2 0 in case (<{StdInt.==_16}> call_back_n_1_1 1) (True -> let _x_3_0 = clCrossCall_12.call_back1 (clCrossCall_12._CrossCallInfo i0_0 i1_1 i2_2 i3_3 i4_4 i5_5 i6_6) (select _x_1_0::_Tuple2 1), _x_3_1 = select _x_3_0::_Tuple2 0 in <{_Tuple8!255}> (select _x_3_1::clCrossCall_12._CrossCallInfo 0) (select _x_3_1::clCrossCall_12._CrossCallInfo 1) (select _x_3_1::clCrossCall_12._CrossCallInfo 2) (select _x_3_1::clCrossCall_12._CrossCallInfo 3) (select _x_3_1::clCrossCall_12._CrossCallInfo 4) (select _x_3_1::clCrossCall_12._CrossCallInfo 5) (select _x_3_1::clCrossCall_12._CrossCallInfo 6) (select _x_3_0::_Tuple2 1)) (False -> case (<{StdInt.==_16}> call_back_n_1_1 2) (True -> let _x_4_0 = clCrossCall_12.call_back2 (clCrossCall_12._CrossCallInfo i0_0 i1_1 i2_2 i3_3 i4_4 i5_5 i6_6) (select _x_1_0::_Tuple2 1), _x_4_1 = select _x_4_0::_Tuple2 0 in <{_Tuple8!255}> (select _x_4_1::clCrossCall_12._CrossCallInfo 0) (select _x_4_1::clCrossCall_12._CrossCallInfo 1) (select _x_4_1::clCrossCall_12._CrossCallInfo 2) (select _x_4_1::clCrossCall_12._CrossCallInfo 3) (select _x_4_1::clCrossCall_12._CrossCallInfo 4) (select _x_4_1::clCrossCall_12._CrossCallInfo 5) (select _x_4_1::clCrossCall_12._CrossCallInfo 6) (select _x_4_0::_Tuple2 1)) ) 
clCrossCall_12.return0Cci = clCrossCall_12._CrossCallInfo 10 0 0 0 0 0 0
clCrossCall_12.consolePrint::I !_x_0 !_x_1::I = error "no AnyCodeExpr"
clCrossCall_12.iprint !s_0 !a_1 = case (StdBool.not (<{StdInt.==_16}> (clCrossCall_12.consolePrint (<{StdString.+++_11}> "## " (<{StdString.+++_11}> s_0 "\n")) 999) 0)) (True -> a_1) (False -> StdMisc.abort (<{StdString.+++_11}> "Print failed: " s_0)) 
clCrossCall_12.errorCallback !source_0 !cci_1 !s_2 !tb_3::I = <{_Tuple3!7}> clCrossCall_12.return0Cci s_2 (clCrossCall_12.iprint (<{StdString.+++_11}> " *** [" (<{StdString.+++_11}> source_0 (<{StdString.+++_11}> "] did not expect a callback: " (StdString.toString_5 (select cci_1::clCrossCall_12._CrossCallInfo 0))))) tb_3)
clCrossCall_12.replace_call_back1 !call_back_0 !s_1 !tb_2::I = let _x_1_0 = clCrossCall_12.select_call_back_variable_array1 clCrossCall_12.call_back_variable_array1 in <{_Tuple3!7}> (select _x_1_0::_Tuple3 0) (select _x_1_0::_Tuple3 1) (select (clCrossCall_12.update_call_back_variable_array1 (select _x_1_0::_Tuple3 2) (clCrossCall_12._CallBackVariable1 call_back_0 s_1) tb_2)::_Tuple2 1)
clCrossCall_12.update_call_back_variable_array0 !array_0 !call_back_variable_1::I !tb_2::I = error "no AnyCodeExpr"
clCrossCall_12.replace_call_back0 !call_back_n_0::I !tb_1::I = let _x_1_0 = clCrossCall_12.select_call_back_variable_array0 clCrossCall_12.call_back_variable_array0 in <{_Tuple2!3}> (select _x_1_0::_Tuple2 0) (select (clCrossCall_12.update_call_back_variable_array0 (select _x_1_0::_Tuple2 1) call_back_n_0 tb_1)::_Tuple2 1)
clCrossCall_12.winCallOsWithCallBack !_x_0 !_x_1::I = error "no AnyCodeExpr"
clCrossCall_12.store_call_back0::I !call_back_n_0::I !tb_1::I = select (clCrossCall_12.update_call_back_variable_array0 clCrossCall_12.call_back_variable_array0 call_back_n_0 tb_1)::_Tuple2 1
clCrossCall_12.issueCleanRequest !call_back_0 !cci_1 !s_2 !tb_3::I = let _x_1_0 = clCrossCall_12.replace_call_back1 call_back_0 s_2 tb_3, _x_1_1 = clCrossCall_12.replace_call_back0 1 (select _x_1_0::_Tuple3 2), _x_1_2 = clCrossCall_12.winCallOsWithCallBack cci_1 (select _x_1_1::_Tuple2 1), _x_1_3 = clCrossCall_12.replace_call_back1 (select _x_1_0::_Tuple3 0) (select _x_1_0::_Tuple3 1) (select _x_1_2::_Tuple2 1) in <{_Tuple3!7}> (select _x_1_2::_Tuple2 0) (select _x_1_3::_Tuple3 1) (clCrossCall_12.store_call_back0 (select _x_1_1::_Tuple2 0) (select _x_1_3::_Tuple3 2))
clCrossCall_12.errorCallback2 !source_0 !cci_1 !tb_2::I = <{_Tuple2!3}> clCrossCall_12.return0Cci (clCrossCall_12.iprint (<{StdString.+++_11}> " *** [" (<{StdString.+++_11}> source_0 (<{StdString.+++_11}> "] did not expect a callback: " (StdString.toString_5 (select cci_1::clCrossCall_12._CrossCallInfo 0))))) tb_2)
clCrossCall_12.replace_call_back2 !call_back_0 !tb_1::I = let _x_1_0 = clCrossCall_12.select_call_back_variable_array2 clCrossCall_12.call_back_variable_array2 in <{_Tuple2!3}> (select _x_1_0::_Tuple2 0) (select (clCrossCall_12.update_call_back_variable_array2 (select _x_1_0::_Tuple2 1) (clCrossCall_12._CallBackVariable2 call_back_0) tb_1)::_Tuple2 1)
clCrossCall_12.issueCleanRequest2 !call_back_0 !cci_1 !tb_2::I = let _x_1_0 = clCrossCall_12.replace_call_back2 call_back_0 tb_2, _x_1_1 = clCrossCall_12.replace_call_back0 2 (select _x_1_0::_Tuple2 1), _x_1_2 = clCrossCall_12.winCallOsWithCallBack cci_1 (select _x_1_1::_Tuple2 1) in <{_Tuple2!3}> (select _x_1_2::_Tuple2 0) (clCrossCall_12.store_call_back0 (select _x_1_1::_Tuple2 0) (select (clCrossCall_12.replace_call_back2 (select _x_1_0::_Tuple2 0) (select _x_1_2::_Tuple2 1))::_Tuple2 1))
<{clCrossCall_12.iprint`}> !s_0 !a_1 = case (StdBool.not (<{StdInt.==_16}> (clCrossCall_12.consolePrint s_0 999) 0)) (True -> a_1) (False -> StdMisc.abort (<{StdString.+++_11}> "Print failed: " s_0)) 
clCrossCall_12.return1Cci !v_0::I = clCrossCall_12._CrossCallInfo 11 v_0 0 0 0 0 0
clCrossCall_12.return2Cci !v1_0::I !v2_1::I = clCrossCall_12._CrossCallInfo 12 v1_0 v2_1 0 0 0 0
clCrossCall_12.return3Cci !v1_0::I !v2_1::I !v3_2::I = clCrossCall_12._CrossCallInfo 13 v1_0 v2_1 v3_2 0 0 0
clCrossCall_12.return4Cci !v1_0::I !v2_1::I !v3_2::I !v4_3::I = clCrossCall_12._CrossCallInfo 14 v1_0 v2_1 v3_2 v4_3 0 0
clCrossCall_12.return5Cci !v1_0::I !v2_1::I !v3_2::I !v4_3::I !v5_4::I = clCrossCall_12._CrossCallInfo 15 v1_0 v2_1 v3_2 v4_3 v5_4 0
clCrossCall_12.return6Cci !v1_0::I !v2_1::I !v3_2::I !v4_3::I !v5_4::I !v6_5::I = clCrossCall_12._CrossCallInfo 16 v1_0 v2_1 v3_2 v4_3 v5_4 v6_5
clCrossCall_12.winEndOs::I !_x_0::I = error "no AnyCodeExpr"
clCrossCall_12.winBeginOs::I !_x_0::I = error "no AnyCodeExpr"
clCrossCall_12.winCloseOs::B !_x_0::I = error "no AnyCodeExpr"
clCrossCall_12.winInitOs = error "no AnyCodeExpr"
clCrossCall_12.isReturnOrQuitCci::B !mess_0::I = case (<{StdInt.==_16}> mess_0 1) (True -> True) (False -> case (StdBool.not (<{StdInt.<_17}> 19 mess_0)) (True -> StdBool.not (<{StdInt.<_17}> mess_0 10)) (False -> False) ) 
clCrossCall_12.toInt_19::I !_x_0::B = case _x_0 (True -> -1) (False -> 0) 
<{clCrossCall_12.TD;CrossCallInfo}> _x_0::B = _predefined._Nil
<{clCrossCall_12.TD;CallBackFunction1}> _x_0::B = _predefined._Nil
<{clCrossCall_12.TD;CallBackVariable1}> _x_0::B = _predefined._Nil
<{clCrossCall_12.TD;CallBackFunction2}> _x_0::B = _predefined._Nil
<{clCrossCall_12.TD;CallBackVariable2}> _x_0::B = _predefined._Nil


|| Converted Records
:: clCrossCall_12._CrossCallInfo = {!clCrossCall_12.ccMsg::I, !clCrossCall_12.p1::I, !clCrossCall_12.p2::I, !clCrossCall_12.p3::I, !clCrossCall_12.p4::I, !clCrossCall_12.p5::I, !clCrossCall_12.p6::I}

:: clCrossCall_12._CallBackVariable1 = {!clCrossCall_12.call_back1, !clCrossCall_12.state}

:: clCrossCall_12._CallBackVariable2 = {!clCrossCall_12.call_back2}

