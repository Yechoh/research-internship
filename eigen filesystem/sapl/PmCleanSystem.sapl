|| ?module? PmCleanSystem


PmCleanSystem.morelibs = <{_predefined._!Cons!}> "user_library" (<{_predefined._!Cons!}> "gdi_library" (<{_predefined._!Cons!}> "comdlg_library" <{_predefined._!Nil!}>))
PmCleanSystem.standardStaticLibraries !_x_0 !method_1 = <{PmCleanSystem._c;38;7_198}> method_1
<{PmCleanSystem._c;38;7_198}> !method_0 = case method_0 (PmTypes.LM_Static -> <{_predefined._!Cons!}> "kernel_library" PmCleanSystem.morelibs) (PmTypes.LM_Dynamic -> <{_predefined._!Cons!}> "kernel_library" (<{_predefined._!Cons!}> "StaticClientChannel_library" PmCleanSystem.morelibs)) 
PmCleanSystem.standardObjectFiles !stack_traces_0::B !profiling_1::B !_x_2 !use_64_bit_processor_3::B = let !startup1_file_1_0 = <{PmCleanSystem._if;50;24_199}> stack_traces_0 profiling_1 in case (StdBool.not use_64_bit_processor_3) (True -> <{_predefined._!Cons!}> "_startup0.o" (<{_predefined._!Cons!}> startup1_file_1_0 (<{_predefined._!Cons!}> "_startup2.o" (<{_predefined._!Cons!}> "_system.o" <{_predefined._!Nil!}>)))) (False -> <{_predefined._!Cons!}> "_startup0.o" (<{_predefined._!Cons!}> startup1_file_1_0 (<{_predefined._!Cons!}> "_startup2.o" (<{_predefined._!Cons!}> "_startup3.o" (<{_predefined._!Cons!}> "_startup4.o" (<{_predefined._!Cons!}> "_system.o" <{_predefined._!Nil!}>)))))) 
<{PmCleanSystem._if;50;24_199}> !stack_traces_0::B profiling_1::B = case stack_traces_0 (True -> "_startup1Trace.o") (_ -> case profiling_1 (True -> "_startup1Profile.o") (False -> "_startup1.o") )
PmCleanSystem.getLib lib_0 files_1 = let _x_1_0 = lib.OpenArchive lib_0 files_1 in _Tuple3 (select _x_1_0::_Tuple3 0) (StdList.map StdPathname.RemoveSuffix (select _x_1_0::_Tuple3 1)) (select _x_1_0::_Tuple3 2)
PmCleanSystem.getLibs !_x_0 !files_1 = case _x_0 (_predefined._Nil -> <{_Tuple2!3}> (_Tuple2 _predefined._Nil _predefined._Nil) files_1) (_predefined._Cons lib_1_0 libs_1_1 -> let _x_2_0 = PmCleanSystem.getLib lib_1_0 files_1, _x_2_1 = PmCleanSystem.getLibs libs_1_1 (select _x_2_0::_Tuple3 2), _x_2_2 = select _x_2_1::_Tuple2 0 in <{_Tuple2!3}> (_Tuple2 (<{StdList.++}> (select _x_2_0::_Tuple3 0) (select _x_2_2::_Tuple2 0)) (<{StdList.++}> (select _x_2_0::_Tuple3 1) (select _x_2_2::_Tuple2 1))) (select _x_2_1::_Tuple2 1)) 
PmCleanSystem.NoCompilerProcessIds = _predefined._Nil
PmCleanSystem.ClearCompilerCache !_x_0 !_x_1 !ps_2 = <{_Tuple2!3}> 0 ps_2
PmCleanSystem.ClearCompilerCaches !_x_0 !ps_1 = <{_Tuple2!3}> 0 ps_1
PmCleanSystem.quit_compilers_81 !_x_0 !io_1 = case _x_0 (_predefined._Cons _x_1_0 compiler_process_ids_1_1 -> case _x_1_0 (PmCleanSystem._CompilerProcessHandlesAndId compiler_thread_id_2_0 compiler_thread_handle_2_1 compiler_process_handle_2_2 -> let r_3_0::I = thread_message.send_string_to_thread compiler_thread_id_2_0 compiler_process_handle_2_2 thread_message.get_message_number "exit\0" in case (<{StdInt.==_16}> r_3_0 r_3_0) (True -> PmCleanSystem.quit_compilers_81 compiler_process_ids_1_1 io_1) ) ) (_predefined._Nil -> io_1) 
PmCleanSystem.QuitCleanCompiler !async_0::B !compiler_process_ids_1 !io_2 = case async_0 (True -> PmCleanSystem.quit_compilers_81 compiler_process_ids_1 io_2) (False -> io_2) 
PmCleanSystem.FindChar_101::I !c_0::C !line_1 !linelen_2::I !pos_3::I = case (StdBool.not (<{StdInt.<_17}> pos_3 linelen_2)) (True -> pos_3) (False -> case (<{StdChar.==_18}> c_0 (_SystemArray.select_19 line_1 pos_3)) (True -> pos_3) (False -> PmCleanSystem.FindChar_101 c_0 line_1 linelen_2 (<{StdInt.+_6}> pos_3 StdInt.one_11)) ) 
PmCleanSystem.FindQuoteChar_100::I !str_0 !len_1::I !pos_2::I = PmCleanSystem.FindChar_101 ':' str_0 len_1 pos_2
PmCleanSystem.splitOptions !str_0 = let len_str_1_0::I = _SystemArray.size_20 str_0, first_q_1_1::I = PmCleanSystem.FindQuoteChar_100 str_0 len_str_1_0 0 in case (StdBool.not (<{StdInt.<_17}> first_q_1_1 len_str_1_0)) (True -> _Tuple2 str_0 "") (False -> _Tuple2 (<{StdString.%_10}> str_0 (_Tuple2 0 (<{StdInt.-_7}> first_q_1_1 StdInt.one_11))) (<{StdString.%_10}> str_0 (_Tuple2 (<{StdInt.+_6}> first_q_1_1 StdInt.one_11) len_str_1_0))) 
PmCleanSystem.mangleCompiler !<{ccstring`_0}> !startupdir_1 = let _x_1_0 = PmCleanSystem.splitOptions <{ccstring`_0}>, <{ccstring`_1_1}> = select _x_1_0::_Tuple2 0, _x_1_2 = UtilIO.GetShortPathName (<{StdString.+++_11}> startupdir_1 (<{StdString.+++_11}> "\\" (<{StdString.+++_11}> <{ccstring`_1_1}> "\0"))) in case (StdBool.not (select _x_1_2::_Tuple2 0)) (True -> _Tuple3 False (<{StdString.+++_11}> "Error: Unable to get short path name '" (<{StdString.+++_11}> (<{StdString.+++_11}> startupdir_1 (<{StdString.+++_11}> "\\" <{ccstring`_1_1}>)) "'.")) "") (False -> let ccstring_3_0 = select _x_1_2::_Tuple2 1, _x_3_1 = PmCleanSystem.splitOptions (select _x_1_0::_Tuple2 1) in _Tuple3 True (<{StdString.+++.}> (<{StdString.%_10}> ccstring_3_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 ccstring_3_0) 2))) (<{StdString.+++.}> (select _x_3_1::_Tuple2 0) (select _x_3_1::_Tuple2 1))) (StdPathname.RemoveFilename (<{StdString.%_10}> ccstring_3_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 ccstring_3_0) 2))))) 
PmCleanSystem.tooltempdir =: Platform.TempDir
PmCleanSystem.file_path !dir_0 !base_name_1 !slot_2::I = <{StdString.+++_11}> dir_0 (<{StdString.+++_11}> "\\" (<{StdString.+++_11}> base_name_1 (<{PmCleanSystem._if;377;55_200}> (<{StdInt.==_16}> slot_2 0) slot_2)))
<{PmCleanSystem._if;377;55_200}> !_x_0::B slot_1::I = case _x_0 (True -> "") (_ -> StdString.toString_5 slot_1)
PmCleanSystem.out_file_path !tooltempdir_0 !slot_1::I = PmCleanSystem.file_path tooltempdir_0 "out" slot_1
PmCleanSystem.errors_file_path !tooltempdir_0 !slot_1::I = PmCleanSystem.file_path tooltempdir_0 "errors" slot_1
PmCleanSystem.sSize_82::I !_vArray_0 !_x_1 = case _x_1 (<{_predefined._!Nil!}> -> 0) (<{_predefined._!Cons!}> string_1_0 _x_1_1 -> case _x_1_1 (<{_predefined._!Nil!}> -> select _vArray_0::<{_SystemArray.Array;}> 4 string_1_0) (_ -> <{StdInt.+_6}> (<{StdInt.+_6}> (select _vArray_0::<{_SystemArray.Array;}> 4 string_1_0) 1) (PmCleanSystem.sSize_82 _vArray_0 _x_1_1))) 
PmCleanSystem.sU_84 !_vArray_0 !_vArray_1 !l_2::I i_3::I !j_4::I s_5 h_6 = case (StdBool.not (<{StdInt.<_17}> j_4 l_2)) (True -> _Tuple2 i_3 s_5) (False -> PmCleanSystem.sU_84 _vArray_0 _vArray_1 l_2 (<{StdInt.+_6}> i_3 StdInt.one_11) (<{StdInt.+_6}> j_4 StdInt.one_11) (select _vArray_1::<{_SystemArray.Array;}> 5 s_5 i_3 (select _vArray_0::<{_SystemArray.Array;}> 3 h_6 j_4)) h_6) 
PmCleanSystem.sUpdate_83 !_vArray_0 !_vArray_1 i_2::I s_3 !_x_4 = case _x_4 (<{_predefined._!Nil!}> -> s_3) (<{_predefined._!Cons!}> string_1_0 _x_1_1 -> case _x_1_1 (<{_predefined._!Nil!}> -> select (PmCleanSystem.sU_84 _vArray_0 _vArray_1 (select _vArray_0::<{_SystemArray.Array;}> 4 string_1_0) i_2 0 s_3 string_1_0)::_Tuple2 1) (_ -> let _x_2_0 = PmCleanSystem.sU_84 _vArray_0 _vArray_1 (select _vArray_0::<{_SystemArray.Array;}> 4 string_1_0) i_2 0 s_3 string_1_0 in PmCleanSystem.sUpdate_83 _vArray_0 _vArray_1 (<{StdInt.+_6}> (select _x_2_0::_Tuple2 0) StdInt.one_11) (select _x_2_0::_Tuple2 1) _x_1_1)) 
PmCleanSystem.sSize_191::I !_x_0 = case _x_0 (<{_predefined._!Nil!}> -> 0) (<{_predefined._!Cons!}> string_1_0 _x_1_1 -> case _x_1_1 (<{_predefined._!Nil!}> -> _SystemArray.size_20 string_1_0) (_ -> <{StdInt.+_6}> (<{StdInt.+_6}> (_SystemArray.size_20 string_1_0) 1) (PmCleanSystem.sSize_191 _x_1_1))) 
PmCleanSystem.sU_193 !_vArray_0 !l_1::I i_2::I !j_3::I s_4 h_5 = case (StdBool.not (<{StdInt.<_17}> j_3 l_1)) (True -> _Tuple2 i_2 s_4) (False -> PmCleanSystem.sU_193 _vArray_0 l_1 (<{StdInt.+_6}> i_2 StdInt.one_11) (<{StdInt.+_6}> j_3 StdInt.one_11) (select _vArray_0::<{_SystemArray.Array;}> 5 s_4 i_2 (_SystemArray.select_19 h_5 j_3)) h_5) 
PmCleanSystem.sUpdate_192 !_vArray_0 i_1::I s_2 !_x_3 = case _x_3 (<{_predefined._!Nil!}> -> s_2) (<{_predefined._!Cons!}> string_1_0 _x_1_1 -> case _x_1_1 (<{_predefined._!Nil!}> -> select (PmCleanSystem.sU_193 _vArray_0 (_SystemArray.size_20 string_1_0) i_1 0 s_2 string_1_0)::_Tuple2 1) (_ -> let _x_2_0 = PmCleanSystem.sU_193 _vArray_0 (_SystemArray.size_20 string_1_0) i_1 0 s_2 string_1_0 in PmCleanSystem.sUpdate_192 _vArray_0 (<{StdInt.+_6}> (select _x_2_0::_Tuple2 0) StdInt.one_11) (select _x_2_0::_Tuple2 1) _x_1_1)) 
PmCleanSystem.sU_195 !l_0::I i_1::I !j_2::I s_3 h_4 = case (StdBool.not (<{StdInt.<_17}> j_2 l_0)) (True -> _Tuple2 i_1 s_3) (False -> PmCleanSystem.sU_195 l_0 (<{StdInt.+_6}> i_1 StdInt.one_11) (<{StdInt.+_6}> j_2 StdInt.one_11) (_SystemArray.update_21 s_3 i_1 (_SystemArray.select_19 h_4 j_2)) h_4) 
PmCleanSystem.sUpdate_194 i_0::I s_1 !_x_2 = case _x_2 (<{_predefined._!Nil!}> -> s_1) (<{_predefined._!Cons!}> string_1_0 _x_1_1 -> case _x_1_1 (<{_predefined._!Nil!}> -> select (PmCleanSystem.sU_195 (_SystemArray.size_20 string_1_0) i_0 0 s_1 string_1_0)::_Tuple2 1) (_ -> let _x_2_0 = PmCleanSystem.sU_195 (_SystemArray.size_20 string_1_0) i_0 0 s_1 string_1_0 in PmCleanSystem.sUpdate_194 (<{StdInt.+_6}> (select _x_2_0::_Tuple2 0) StdInt.one_11) (select _x_2_0::_Tuple2 1) _x_1_1)) 
PmCleanSystem.ConcatenatePath !ss_0 = PmCleanSystem.sUpdate_194 0 (_SystemArray.createArray_17 (PmCleanSystem.sSize_191 ss_0) ';') ss_0
PmCleanSystem.reuse_93 !reuseUniqueNodes_0::B = case reuseUniqueNodes_0 (True -> " -ou") (False -> "") 
PmCleanSystem.show_attr_91 !attr_0::B = case attr_0 (True -> "") (False -> " -lattr") 
PmCleanSystem.listtypes_90 !listTypes_0 = case (<{PmCompilerOptions.==_1}> listTypes_0 PmCompilerOptions.InferredTypes) (True -> " -lt") (False -> case (<{PmCompilerOptions.==_1}> listTypes_0 PmCompilerOptions.AllTypes) (True -> " -lat") (False -> case (<{PmCompilerOptions.==_1}> listTypes_0 PmCompilerOptions.StrictExportTypes) (True -> " -lset") (False -> "") ) ) 
PmCleanSystem.comments_89 !gc_0::B = case gc_0 (True -> " -d") (False -> "") 
PmCleanSystem.warnings_88 !gw_0::B = case gw_0 (True -> "") (False -> " -w") 
PmCleanSystem.strictness_87 !sa_0::B = case sa_0 (True -> "") (False -> " -sa") 
PmCleanSystem.memoryProfileSwitch_85 !neverMemoryProfile_0::B pco_memory_profiling_1::B pco_desc_exl_2::B pco_link_dynamic_3::B = case (case (case (StdBool.not neverMemoryProfile_0) (True -> pco_memory_profiling_1) (False -> False) ) (True -> True) (False -> case pco_desc_exl_2 (True -> True) (False -> pco_link_dynamic_3) ) ) (True -> " -desc") (False -> "") 
PmCleanSystem.timeProfileSwitch_86 !neverTimeProfile_0::B pco_time_profiling_1::B = case (case (StdBool.not neverTimeProfile_0) (True -> pco_time_profiling_1) (False -> False) ) (True -> " -pt") (False -> "") 
<{PmCleanSystem.==_23}>::B !_x_0 !_x_1 = case _x_0 (PmCleanSystem.SyntaxCheck -> case _x_1 (PmCleanSystem.SyntaxCheck -> True) ) (PmCleanSystem.Compilation -> case _x_1 (PmCleanSystem.Compilation -> True) ) (_ -> False)
PmCleanSystem.checksyntax_92 !compileOrCheckSyntax_0 = case (<{PmCleanSystem.==_23}> compileOrCheckSyntax_0 PmCleanSystem.SyntaxCheck) (True -> " -c") (False -> "") 
PmCleanSystem.add_exl_option_94 !pco_desc_exl_0::B pco_link_dynamic_1::B !s_2 = case (case pco_desc_exl_0 (True -> True) (False -> pco_link_dynamic_1) ) (True -> <{StdString.+++_11}> s_2 " -exl") (False -> s_2) 
PmCleanSystem.add_fusion_option_95 !fusion_0::B !s_1 = case fusion_0 (True -> <{StdString.+++_11}> s_1 " -fusion") (False -> s_1) 
PmCleanSystem.add_dynamics_option_96 !pco_dynamics_0::B pco_link_dynamic_1::B !s_2 = case (case pco_dynamics_0 (True -> True) (False -> pco_link_dynamic_1) ) (True -> <{StdString.+++_11}> s_2 " -dynamics") (False -> s_2) 
PmCleanSystem.MakeCompilerOptionsString !compileOrCheckSyntax_0 !_x_1 !_x_2 = case _x_1 (PmCleanSystem._ProjectCompilerOptions pco_memory_profiling_1_0 pco_time_profiling_1_1 pco_desc_exl_1_2 pco_dynamics_1_3 pco_link_dynamic_1_4 -> case _x_2 (PmCompilerOptions._CompilerOptions neverMemoryProfile_2_0 neverTimeProfile_2_1 sa_2_2 listTypes_2_3 attr_2_4 gw_2_5 bv_2_6 gc_2_7 reuseUniqueNodes_2_8 fusion_2_9 -> <{StdString.+++_11}> (PmCleanSystem.add_dynamics_option_96 pco_dynamics_1_3 pco_link_dynamic_1_4 (PmCleanSystem.add_fusion_option_95 fusion_2_9 (PmCleanSystem.add_exl_option_94 pco_desc_exl_1_2 pco_link_dynamic_1_4 (<{StdString.+++_11}> (PmCleanSystem.checksyntax_92 compileOrCheckSyntax_0) (<{StdString.+++_11}> (PmCleanSystem.timeProfileSwitch_86 neverTimeProfile_2_1 pco_time_profiling_1_1) (<{StdString.+++_11}> (PmCleanSystem.memoryProfileSwitch_85 neverMemoryProfile_2_0 pco_memory_profiling_1_0 pco_desc_exl_1_2 pco_link_dynamic_1_4) (<{StdString.+++_11}> (PmCleanSystem.strictness_87 sa_2_2) (<{StdString.+++_11}> (PmCleanSystem.warnings_88 gw_2_5) (<{StdString.+++_11}> (PmCleanSystem.comments_89 gc_2_7) (<{StdString.+++_11}> (PmCleanSystem.listtypes_90 listTypes_2_3) (<{StdString.+++_11}> (PmCleanSystem.show_attr_91 attr_2_4) (PmCleanSystem.reuse_93 reuseUniqueNodes_2_8)))))))))))) " ") ) 
PmCleanSystem.CompileBuildCommand !out_file_name_0 !errors_file_name_1 !compileOrCheckSyntax_2 !path_3 !paths_4 !project_compiler_options_5 !co_6 = <{StdString.+++_11}> (PmCleanSystem.MakeCompilerOptionsString compileOrCheckSyntax_2 project_compiler_options_5 co_6) (<{StdString.+++_11}> (StdPathname.quoted_string path_3) (<{StdString.+++_11}> " -P " (<{StdString.+++_11}> (StdPathname.quoted_string (PmCleanSystem.ConcatenatePath paths_4)) (<{StdString.+++_11}> " -RE " (<{StdString.+++_11}> (StdPathname.quoted_string errors_file_name_1) (<{StdString.+++_11}> " -RO " (StdPathname.quoted_string out_file_name_0)))))))
PmCleanSystem.win_create_process !_x_0::I !_x_1::I !_x_2::I = error "no AnyCodeExpr"
PmCleanSystem.call_process !command_0 !directory_1 !os_2::I = case (<{StdInt.<_17}> 0 (_SystemArray.size_20 command_0)) (True -> let _x_2_0::I = clCCall_12.winMakeCString command_0 os_2, commandptr_2_1::I = select _x_2_0::_Tuple2 0, _x_2_2 = <{PmCleanSystem._if;833;31_201}> (<{StdInt.==_16}> (_SystemArray.size_20 directory_1) 0) os_2_7 directory_1, dirptr_2_3::I = select _x_2_2::_Tuple2 0, os_2_4::I = select _x_2_2::_Tuple2 1, _x_2_5 = PmCleanSystem.win_create_process commandptr_2_1 dirptr_2_3 os_2_4, os_2_6::I = select _x_2_5::_Tuple3 2, os_2_7 = select _x_2_0::_Tuple2 1 in <{_Tuple3!7}> (select _x_2_5::_Tuple3 0) (select _x_2_5::_Tuple3 1) (<{PmCleanSystem._if;838;18_202}> (<{StdInt.==_16}> dirptr_2_3 0) commandptr_2_1 os_2_6 dirptr_2_3)) (False -> <{_Tuple3!7}> False -1 os_2) 
<{PmCleanSystem._if;838;18_202}>::I !_x_0::B !commandptr_1::I !os_2::I dirptr_3::I = case _x_0 (True -> clCCall_12.winReleaseCString commandptr_1 os_2) (_ -> clCCall_12.winReleaseCString dirptr_3 (clCCall_12.winReleaseCString commandptr_1 os_2))
<{PmCleanSystem._if;833;31_201}> !_x_0::B os_1::I directory_2 = case _x_0 (True -> _Tuple2 0 os_1) (_ -> clCCall_12.winMakeCString directory_2 os_1)
PmCleanSystem.Strip !_x_0 = case _x_0 ("" -> "") (_ -> let !last_1_0::I = <{StdInt.-_7}> (_SystemArray.size_20 _x_0) StdInt.one_11, !char_1_1::C = _SystemArray.select_19 _x_0 last_1_0 in case (case (<{StdChar.==_18}> char_1_1 '\n') (True -> True) (False -> <{StdChar.==_18}> char_1_1 '\r') ) (True -> PmCleanSystem.Strip (<{StdString.%_10}> _x_0 (_Tuple2 0 (<{StdInt.-_7}> last_1_0 StdInt.one_11)))) (False -> _x_0) )
PmCleanSystem.ReadTypeMsg !file_0 = let _x_1_0 = StdFile.freadline file_0, file_1_1::B = select _x_1_0::_Tuple2 1, _x_1_2 = StdFile.fend file_1_1, eof_1_3 = select _x_1_2::_Tuple2 0, string_1_4 = select _x_1_0::_Tuple2 0 in case (case eof_1_3 (True -> PmParse.IsTypeSpec string_1_4) (False -> False) ) (True -> <{_Tuple3!7}> (<{_predefined._!Cons!}> (PmCleanSystem.Strip string_1_4) <{_predefined._!Nil!}>) True (select _x_1_2::_Tuple2 1)) (False -> case eof_1_3 (True -> <{_Tuple3!7}> <{_predefined._!Nil!}> False (select _x_1_2::_Tuple2 1)) (False -> let _x_4_0 = PmCleanSystem.ReadTypeMsg (select _x_1_2::_Tuple2 1) in <{_Tuple3!7}> (<{_predefined._!Cons!}> (PmCleanSystem.Strip string_1_4) (select _x_4_0::_Tuple3 0)) (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) ) 
PmCleanSystem.ReadTypesInfo !readtypes_0::B !path_1 !env_2 = case (StdBool.not readtypes_0) (True -> <{_Tuple2!2}> (_Tuple2 False <{_predefined._!Nil!}>) env_2) (False -> let _x_2_0 = StdFile.fopen_27 path_1 0 env_2 in case (StdBool.not (select _x_2_0::_Tuple3 0)) (True -> <{_Tuple2!2}> (_Tuple2 False <{_predefined._!Nil!}>) (select _x_2_0::_Tuple3 2)) (False -> let _x_4_0 = PmCleanSystem.ReadTypeMsg (select _x_2_0::_Tuple3 1) in <{_Tuple2!2}> (_Tuple2 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 0)) (select (StdFile.fclose_26 (select _x_4_0::_Tuple3 2) (select _x_2_0::_Tuple3 2))::_Tuple2 1)) ) 
PmCleanSystem.ReadErrorAndWarningMessages !file_0 = let !_x_1_0 = StdFile.freadline file_0, !_x_1_1 = StdFile.fend (select _x_1_0::_Tuple2 1), !_x_1_2 = PmParse.IsImportError13 string_1_4, !_x_1_3 = PmParse.IsImportError20 string_1_4, string_1_4 = select _x_1_0::_Tuple2 0 in case (select _x_1_1::_Tuple2 0) (True -> let !not_empty_or_newline_3_0::B = PmCleanSystem._f203_203 (StdBool.not (<{StdInt.==_16}> (_SystemArray.size_20 string_1_4) 0)) string_1_4, is_import_error13_3_1 = select _x_1_2::_Tuple2 0, _x_3_2::B = <{PmCleanSystem._c;452;32_204}> is_import_error13_3_1 path13_3_4 is_import_error20_3_5 path20_3_6, path_3_3 = select _x_3_2::_Tuple2 1, path13_3_4 = select _x_1_2::_Tuple2 1, is_import_error20_3_5 = select _x_1_3::_Tuple2 0, path20_3_6::B = select _x_1_3::_Tuple2 1 in <{_Tuple4!15}> (<{PmCleanSystem._if;457;12_205}> (select _x_3_2::_Tuple2 0) path_3_3) not_empty_or_newline_3_0 (<{_predefined._!Cons!}> (PmCleanSystem.Strip string_1_4) <{_predefined._!Nil!}>) (select _x_1_1::_Tuple2 1)) (False -> let is_import_error13_3_0 = select _x_1_2::_Tuple2 0, _x_3_1::B = <{PmCleanSystem._c;452;32_206}> is_import_error13_3_0 path13_3_6 is_import_error20_3_7 path20_3_8, file2_3_2 = select _x_1_1::_Tuple2 1, _x_3_3 = PmCleanSystem.ReadErrorAndWarningMessages file2_3_2, path_error_3_4 = select _x_3_3::_Tuple4 0, path_3_5 = select _x_3_1::_Tuple2 1, path13_3_6 = select _x_1_2::_Tuple2 1, is_import_error20_3_7 = select _x_1_3::_Tuple2 0, path20_3_8::B = select _x_1_3::_Tuple2 1 in <{_Tuple4!15}> (<{PmCleanSystem._if;459;8_207}> (select _x_3_1::_Tuple2 0) path_3_5 path_error_3_4) True (<{_predefined._!Cons!}> (PmCleanSystem.Strip string_1_4) (select _x_3_3::_Tuple4 2)) (select _x_3_3::_Tuple4 3)) 
<{PmCleanSystem._if;459;8_207}> !_x_0::B path_1 path_error_2 = case _x_0 (True -> PmCleanSystem.Patherror path_1) (_ -> path_error_2)
<{PmCleanSystem._c;452;32_206}> !is_import_error13_0::B path13_1 is_import_error20_2::B path20_3 = case is_import_error13_0 (True -> _Tuple2 is_import_error13_0 path13_1) (_ -> _Tuple2 is_import_error20_2 path20_3)
<{PmCleanSystem._if;457;12_205}> !_x_0::B path_1 = case _x_0 (True -> PmCleanSystem.Patherror path_1) (_ -> PmCleanSystem.SyntaxError)
<{PmCleanSystem._c;452;32_204}> !is_import_error13_0::B path13_1 is_import_error20_2::B path20_3 = case is_import_error13_0 (True -> _Tuple2 is_import_error13_0 path13_1) (_ -> _Tuple2 is_import_error20_2 path20_3)
PmCleanSystem._f203_203::B !_x_0::B string_1 = case _x_0 (True -> StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 string_1 0) '\n')) (_ -> False)
PmCleanSystem.ReadErrorsAndWarnings !path_0 !env_1 = let _x_1_0 = StdFile.fopen_27 path_0 0 env_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!2}> (_Tuple3 PmCleanSystem.CompilerOK False <{_predefined._!Nil!}>) (select _x_1_0::_Tuple3 2)) (False -> let _x_3_0 = PmCleanSystem.ReadErrorAndWarningMessages (select _x_1_0::_Tuple3 1) in <{_Tuple2!2}> (_Tuple3 (select _x_3_0::_Tuple4 0) (select _x_3_0::_Tuple4 1) (select _x_3_0::_Tuple4 2)) (select (StdFile.fclose_26 (select _x_3_0::_Tuple4 3) (select _x_1_0::_Tuple3 2))::_Tuple2 1)) 
<{PmCleanSystem.==_25}>::B !_x_0 !_x_1 = case _x_0 (PmCleanSystem.CompilerOK -> case _x_1 (PmCleanSystem.CompilerOK -> True) ) (PmCleanSystem.SyntaxError -> case _x_1 (PmCleanSystem.SyntaxError -> True) ) (PmCleanSystem.Patherror _x_1_0 -> case _x_1 (PmCleanSystem.Patherror _x_2_0 -> True) ) (_ -> False)
PmCleanSystem.CompileHandleExitCode !_vFileEnv_0 !exitcode_1::I !cocl_2 !startupdir_3 !slot_4::I !errwin_5 !typewin_6 !mdn_7 !listTypes_8 !ps_9 = let errors_file_name_1_0::B = PmCleanSystem.errors_file_path PmCleanSystem.tooltempdir slot_4, out_file_name_1_1 = PmCleanSystem.out_file_path PmCleanSystem.tooltempdir slot_4, _x_1_2 = select _vFileEnv_0::<{StdFile.FileEnv;}> 0 (PmCleanSystem.ReadTypesInfo (StdBool.not (<{PmCompilerOptions.==_1}> listTypes_8 PmCompilerOptions.NoTypes)) out_file_name_1_1) ps_9, ps_1_3 = select _x_1_2::_Tuple2 1, _x_1_4 = select _vFileEnv_0::<{StdFile.FileEnv;}> 0 (PmCleanSystem.ReadErrorsAndWarnings errors_file_name_1_0) ps_1_3, _x_1_5 = select _x_1_4::_Tuple2 0, errors_and_messages_not_empty_1_6 = select _x_1_5::_Tuple3 1 in case (case (StdBool.not (<{StdInt.==_16}> exitcode_1 0)) (True -> StdBool.not errors_and_messages_not_empty_1_6) (False -> False) ) (True -> <{_Tuple3!7}> "" PmCleanSystem.SyntaxError (errwin_5 (_predefined._Cons (<{StdString.+++_11}> "Error: Compiler crashed: " cocl_2) (<{PmCleanSystem._if;356;23_208}> (<{PmCleanSystem.==_25}> (select _x_1_5::_Tuple3 0) PmCleanSystem.CompilerOK))) (select _x_1_4::_Tuple2 1))) (False -> let _x_3_0 = select _x_1_2::_Tuple2 0, errors_3_1 = select _x_1_5::_Tuple3 0, type_text_3_2 = select _x_3_0::_Tuple2 1, errors_and_messages_3_3 = select _x_1_5::_Tuple3 2 in <{_Tuple3!7}> (PmPath.ModuleDirAndNameToABCSystemPathname mdn_7) (<{PmCleanSystem._c;362;27_209}> exitcode_1 errors_3_1) (<{PmCleanSystem._if;361;28_210}> errors_and_messages_not_empty_1_6 errwin_5 errors_and_messages_3_3 (<{PmCleanSystem._if;360;28_211}> (select _x_3_0::_Tuple2 0) typewin_6 type_text_3_2 (select _x_1_4::_Tuple2 1)))) 
<{PmCleanSystem._if;360;28_211}> !_x_0::B typewin_1 type_text_2 = case _x_0 (True -> typewin_1 (UtilStrictLists.StrictListToList type_text_2)) (_ -> StdFunc.id)
<{PmCleanSystem._if;361;28_210}> !errors_and_messages_not_empty_0::B errwin_1 errors_and_messages_2 = case errors_and_messages_not_empty_0 (True -> errwin_1 (UtilStrictLists.StrictListToList errors_and_messages_2)) (_ -> StdFunc.id)
<{PmCleanSystem._c;362;27_209}> !exitcode_0::I errors_1 = case exitcode_0 (0 -> PmCleanSystem.CompilerOK) (_ -> errors_1)
<{PmCleanSystem._if;356;23_208}> !_x_0::B = case _x_0 (True -> _predefined._Cons "Unable to open Errors file" _predefined._Nil) (_ -> _predefined._Nil)
PmCleanSystem.Compile !_vFileEnv_0 !<{cocl`_1}> !use_compiler_process_ids_2::B !write_module_times_3::B !errwin_4 !typewin_5 !compileOrCheckSyntax_6 !mdn_7 !path_8 !paths_9 !project_compiler_options_10 !co_11 !startupdir_12 !compiler_process_ids_13 !ps_14 = case co_11 (PmCompilerOptions._CompilerOptions neverMemoryProfile_1_0 neverTimeProfile_1_1 sa_1_2 listTypes_1_3 attr_1_4 gw_1_5 bv_1_6 gc_1_7 reuseUniqueNodes_1_8 fusion_1_9 -> let _x_2_0 = PmCleanSystem.mangleCompiler <{cocl`_1}> startupdir_12 in case (StdBool.not (select _x_2_0::_Tuple3 0)) (True -> <{_Tuple4!15}> "" PmCleanSystem.SyntaxError compiler_process_ids_13 (errwin_4 (_predefined._Cons (select _x_2_0::_Tuple3 1) _predefined._Nil) ps_14)) (False -> let cocl_4_0::B = select _x_2_0::_Tuple3 1, write_module_times_string_4_1 = <{PmCleanSystem._if;197;33_212}> write_module_times_3, dummy_slot_4_2 = 0, out_file_name_4_3 = PmCleanSystem.out_file_path PmCleanSystem.tooltempdir dummy_slot_4_2, errors_file_name_4_4 = PmCleanSystem.errors_file_path PmCleanSystem.tooltempdir dummy_slot_4_2, command_4_5 = <{StdString.+++_11}> cocl_4_0 (<{StdString.+++_11}> write_module_times_string_4_1 (PmCleanSystem.CompileBuildCommand out_file_name_4_3 errors_file_name_4_4 compileOrCheckSyntax_6 path_8 paths_9 project_compiler_options_10 co_11)), cocldir_4_6::I = select _x_2_0::_Tuple3 2, _x_4_7 = PmCleanSystem.call_process command_4_5 cocldir_4_6 99, didit_4_8 = select _x_4_7::_Tuple3 0 in case (StdBool.not (<{PmCleanSystem._if;189;34_213}> (<{StdInt.==_16}> (select _x_4_7::_Tuple3 2) 99) didit_4_8)) (True -> <{_Tuple4!15}> "" PmCleanSystem.SyntaxError compiler_process_ids_13 (errwin_4 (_predefined._Cons (<{StdString.+++_11}> "Error: Unable to run compiler: " (<{StdString.+++_11}> cocl_4_0 (<{StdString.+++_11}> " :" (StdString.toString_5 (select _x_4_7::_Tuple3 1))))) _predefined._Nil) ps_14)) (False -> let _x_6_0 = PmCleanSystem.CompileHandleExitCode _vFileEnv_0 (select _x_4_7::_Tuple3 1) cocl_4_0 PmCleanSystem.tooltempdir dummy_slot_4_2 errwin_4 typewin_5 mdn_7 listTypes_1_3 ps_14 in <{_Tuple4!15}> (select _x_6_0::_Tuple3 0) (select _x_6_0::_Tuple3 1) compiler_process_ids_13 (select _x_6_0::_Tuple3 2)) ) ) 
<{PmCleanSystem._if;189;34_213}>::B !_x_0::B !didit_1::B = case _x_0 (True -> didit_1) (_ -> didit_1)
<{PmCleanSystem._if;197;33_212}> !write_module_times_0::B = case write_module_times_0 (True -> " -wmt ") (_ -> " ")
PmCleanSystem.mangleGenerator !<{cgen`_0}> !startupdir_1 = let _x_1_0 = PmCleanSystem.splitOptions <{cgen`_0}>, <{cgen`_1_1}> = select _x_1_0::_Tuple2 0, _x_1_2 = UtilIO.GetShortPathName (<{StdString.+++_11}> startupdir_1 (<{StdString.+++_11}> "\\" (<{StdString.+++_11}> <{cgen`_1_1}> "\0"))) in case (StdBool.not (select _x_1_2::_Tuple2 0)) (True -> _Tuple3 False (<{StdString.+++_11}> "Error: Unable to get short path name '" (<{StdString.+++_11}> (<{StdString.+++_11}> startupdir_1 (<{StdString.+++_11}> "\\" <{cgen`_1_1}>)) "'.")) "") (False -> let cgen_3_0 = select _x_1_2::_Tuple2 1 in _Tuple3 True (<{StdString.+++_11}> (<{StdString.%_10}> cgen_3_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 cgen_3_0) 2))) (select _x_1_0::_Tuple2 1)) (StdPathname.RemoveFilename (<{StdString.%_10}> cgen_3_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 cgen_3_0) 2))))) 
<{PmCleanSystem.==_24}>::B !_x_0 !_x_1 = case _x_0 (PmCleanSystem.AsmGeneration -> case _x_1 (PmCleanSystem.AsmGeneration -> True) ) (PmCleanSystem.CodeGeneration -> case _x_1 (PmCleanSystem.CodeGeneration -> True) ) (_ -> False)
PmCleanSystem.genasm_99 !genAsmOrCode_0 = case (<{PmCleanSystem.==_24}> genAsmOrCode_0 PmCleanSystem.AsmGeneration) (True -> " -a") (False -> "") 
PmCleanSystem.checkstack_98 !cs_0::B = case cs_0 (True -> " -os") (False -> "") 
PmCleanSystem.checkindex_97 !ci_0::B = case ci_0 (True -> " -ci") (False -> "") 
PmCleanSystem.MakeCodeGenOptionsString !genAsmOrCode_0 timeprofile_1 !_x_2 tp_3 = case _x_2 (PmTypes._CodeGenOptions cs_1_0 ci_1_1 -> <{StdString.+++_11}> (PmCleanSystem.checkindex_97 ci_1_1) (<{StdString.+++_11}> (PmCleanSystem.checkstack_98 cs_1_0) (PmCleanSystem.genasm_99 genAsmOrCode_0))) 
PmCleanSystem.MakeEnvironmentString_102 !_x_0 = case _x_0 (_predefined._Nil -> "") (_predefined._Cons _x_1_0 rest_1_1 -> case _x_1_0 (_Tuple2 name_2_0 value_2_1 -> <{StdString.+++_11}> name_2_0 (<{StdString.+++_11}> "=" (<{StdString.+++_11}> value_2_1 (<{StdString.+++_11}> "\0" (PmCleanSystem.MakeEnvironmentString_102 rest_1_1))))) ) 
PmCleanSystem.CallProcess !command_0 environment_1 !directory_2 !stdin_3 !stdout_4 !stderr_5 !os_6::I = case (<{StdInt.<_17}> 0 (_SystemArray.size_20 command_0)) (True -> let _x_2_0::I = clCCall_12.winMakeCString command_0 os_6, commandptr_2_1::I = select _x_2_0::_Tuple2 0, envstring_2_2::I = PmCleanSystem.MakeEnvironmentString_102 environment_1, _x_2_3::I = <{PmCleanSystem._c;789;36_218}> (<{StdInt.==_16}> (_SystemArray.size_20 envstring_2_2) 0) os_2_20 envstring_2_2, envptr_2_4::I = select _x_2_3::_Tuple2 0, _x_2_5::I = <{PmCleanSystem._c;792;36_217}> (<{StdInt.==_16}> (_SystemArray.size_20 directory_2) 0) os_2_19 directory_2, dirptr_2_6 = select _x_2_5::_Tuple2 0, _x_2_7::I = <{PmCleanSystem._c;795;36_216}> (<{StdInt.==_16}> (_SystemArray.size_20 stdin_3) 0) os_2_18 stdin_3, inptr_2_8::I = select _x_2_7::_Tuple2 0, _x_2_9 = <{PmCleanSystem._c;798;36_215}> (<{StdInt.==_16}> (_SystemArray.size_20 stdout_4) 0) os_2_17 stdout_4, outptr_2_10::I = select _x_2_9::_Tuple2 0, _x_2_11 = <{PmCleanSystem._c;801;36_214}> (<{StdInt.==_16}> (_SystemArray.size_20 stderr_5) 0) os_2_16 stderr_5, errptr_2_12::I = select _x_2_11::_Tuple2 0, os_2_13 = select _x_2_11::_Tuple2 1, _x_2_14::I = clCCall_12.winCallProcess commandptr_2_1 envptr_2_4 dirptr_2_6 inptr_2_8 outptr_2_10 errptr_2_12 os_2_13, os_2_15 = select _x_2_14::_Tuple3 2, os_2_16::I = select _x_2_9::_Tuple2 1, os_2_17 = select _x_2_7::_Tuple2 1, os_2_18 = select _x_2_5::_Tuple2 1, os_2_19::I = select _x_2_3::_Tuple2 1, os_2_20 = select _x_2_0::_Tuple2 1 in <{_Tuple3!7}> (select _x_2_14::_Tuple3 0) (select _x_2_14::_Tuple3 1) (<{PmCleanSystem._c;820;36_234}> (<{StdInt.==_16}> envptr_2_4 0) envptr_2_4 dirptr_2_6 commandptr_2_1 os_2_15 inptr_2_8 outptr_2_10 errptr_2_12)) (False -> <{_Tuple3!7}> False -1 os_6) 
<{PmCleanSystem._c;820;36_234}>::I !_x_0::B !envptr_1::I !dirptr_2::I !commandptr_3::I !os_4::I inptr_5::I outptr_6::I errptr_7::I = case _x_0 (True -> case (<{StdInt.==_16}> envptr_1 0) (True -> case (<{StdInt.==_16}> envptr_1 0) (True -> case (<{StdInt.==_16}> dirptr_2 0) (True -> case (<{StdInt.==_16}> envptr_1 0) (True -> clCCall_12.winReleaseCString commandptr_3 os_4) (False -> clCCall_12.winReleaseCString envptr_1 (clCCall_12.winReleaseCString commandptr_3 os_4)) ) (False -> clCCall_12.winReleaseCString dirptr_2 (<{PmCleanSystem._c;807;36_219}> (<{StdInt.==_16}> envptr_1 0) commandptr_3 os_4 envptr_1)) ) (False -> clCCall_12.winReleaseCString inptr_5 (<{PmCleanSystem._c;810;36_221}> (<{StdInt.==_16}> dirptr_2 0) envptr_1 commandptr_3 os_4 dirptr_2)) ) (False -> clCCall_12.winReleaseCString outptr_6 (<{PmCleanSystem._c;813;36_225}> (<{StdInt.==_16}> envptr_1 0) dirptr_2 envptr_1 commandptr_3 os_4 inptr_5)) ) (_ -> clCCall_12.winReleaseCString errptr_7 (<{PmCleanSystem._c;816;36_233}> (<{StdInt.==_16}> envptr_1 0) envptr_1 dirptr_2 commandptr_3 os_4 inptr_5 outptr_6))
<{PmCleanSystem._c;816;36_233}>::I !_x_0::B !envptr_1::I !dirptr_2::I !commandptr_3::I !os_4::I inptr_5::I outptr_6::I = case _x_0 (True -> case (<{StdInt.==_16}> envptr_1 0) (True -> case (<{StdInt.==_16}> dirptr_2 0) (True -> case (<{StdInt.==_16}> envptr_1 0) (True -> clCCall_12.winReleaseCString commandptr_3 os_4) (False -> clCCall_12.winReleaseCString envptr_1 (clCCall_12.winReleaseCString commandptr_3 os_4)) ) (False -> clCCall_12.winReleaseCString dirptr_2 (<{PmCleanSystem._c;807;36_226}> (<{StdInt.==_16}> envptr_1 0) commandptr_3 os_4 envptr_1)) ) (False -> clCCall_12.winReleaseCString inptr_5 (<{PmCleanSystem._c;810;36_228}> (<{StdInt.==_16}> dirptr_2 0) envptr_1 commandptr_3 os_4 dirptr_2)) ) (_ -> clCCall_12.winReleaseCString outptr_6 (<{PmCleanSystem._c;813;36_232}> (<{StdInt.==_16}> envptr_1 0) dirptr_2 envptr_1 commandptr_3 os_4 inptr_5))
<{PmCleanSystem._c;813;36_232}>::I !_x_0::B !dirptr_1::I !envptr_2::I !commandptr_3::I !os_4::I inptr_5::I = case _x_0 (True -> case (<{StdInt.==_16}> dirptr_1 0) (True -> case (<{StdInt.==_16}> envptr_2 0) (True -> clCCall_12.winReleaseCString commandptr_3 os_4) (False -> clCCall_12.winReleaseCString envptr_2 (clCCall_12.winReleaseCString commandptr_3 os_4)) ) (False -> clCCall_12.winReleaseCString dirptr_1 (<{PmCleanSystem._c;807;36_229}> (<{StdInt.==_16}> envptr_2 0) commandptr_3 os_4 envptr_2)) ) (_ -> clCCall_12.winReleaseCString inptr_5 (<{PmCleanSystem._c;810;36_231}> (<{StdInt.==_16}> dirptr_1 0) envptr_2 commandptr_3 os_4 dirptr_1))
<{PmCleanSystem._c;810;36_231}>::I !_x_0::B !envptr_1::I !commandptr_2::I !os_3::I dirptr_4::I = case _x_0 (True -> case (<{StdInt.==_16}> envptr_1 0) (True -> clCCall_12.winReleaseCString commandptr_2 os_3) (False -> clCCall_12.winReleaseCString envptr_1 (clCCall_12.winReleaseCString commandptr_2 os_3)) ) (_ -> clCCall_12.winReleaseCString dirptr_4 (<{PmCleanSystem._c;807;36_230}> (<{StdInt.==_16}> envptr_1 0) commandptr_2 os_3 envptr_1))
<{PmCleanSystem._c;807;36_230}>::I !_x_0::B !commandptr_1::I !os_2::I envptr_3::I = case _x_0 (True -> clCCall_12.winReleaseCString commandptr_1 os_2) (_ -> clCCall_12.winReleaseCString envptr_3 (clCCall_12.winReleaseCString commandptr_1 os_2))
<{PmCleanSystem._c;807;36_229}>::I !_x_0::B !commandptr_1::I !os_2::I envptr_3::I = case _x_0 (True -> clCCall_12.winReleaseCString commandptr_1 os_2) (_ -> clCCall_12.winReleaseCString envptr_3 (clCCall_12.winReleaseCString commandptr_1 os_2))
<{PmCleanSystem._c;810;36_228}>::I !_x_0::B !envptr_1::I !commandptr_2::I !os_3::I dirptr_4::I = case _x_0 (True -> case (<{StdInt.==_16}> envptr_1 0) (True -> clCCall_12.winReleaseCString commandptr_2 os_3) (False -> clCCall_12.winReleaseCString envptr_1 (clCCall_12.winReleaseCString commandptr_2 os_3)) ) (_ -> clCCall_12.winReleaseCString dirptr_4 (<{PmCleanSystem._c;807;36_227}> (<{StdInt.==_16}> envptr_1 0) commandptr_2 os_3 envptr_1))
<{PmCleanSystem._c;807;36_227}>::I !_x_0::B !commandptr_1::I !os_2::I envptr_3::I = case _x_0 (True -> clCCall_12.winReleaseCString commandptr_1 os_2) (_ -> clCCall_12.winReleaseCString envptr_3 (clCCall_12.winReleaseCString commandptr_1 os_2))
<{PmCleanSystem._c;807;36_226}>::I !_x_0::B !commandptr_1::I !os_2::I envptr_3::I = case _x_0 (True -> clCCall_12.winReleaseCString commandptr_1 os_2) (_ -> clCCall_12.winReleaseCString envptr_3 (clCCall_12.winReleaseCString commandptr_1 os_2))
<{PmCleanSystem._c;813;36_225}>::I !_x_0::B !dirptr_1::I !envptr_2::I !commandptr_3::I !os_4::I inptr_5::I = case _x_0 (True -> case (<{StdInt.==_16}> dirptr_1 0) (True -> case (<{StdInt.==_16}> envptr_2 0) (True -> clCCall_12.winReleaseCString commandptr_3 os_4) (False -> clCCall_12.winReleaseCString envptr_2 (clCCall_12.winReleaseCString commandptr_3 os_4)) ) (False -> clCCall_12.winReleaseCString dirptr_1 (<{PmCleanSystem._c;807;36_222}> (<{StdInt.==_16}> envptr_2 0) commandptr_3 os_4 envptr_2)) ) (_ -> clCCall_12.winReleaseCString inptr_5 (<{PmCleanSystem._c;810;36_224}> (<{StdInt.==_16}> dirptr_1 0) envptr_2 commandptr_3 os_4 dirptr_1))
<{PmCleanSystem._c;810;36_224}>::I !_x_0::B !envptr_1::I !commandptr_2::I !os_3::I dirptr_4::I = case _x_0 (True -> case (<{StdInt.==_16}> envptr_1 0) (True -> clCCall_12.winReleaseCString commandptr_2 os_3) (False -> clCCall_12.winReleaseCString envptr_1 (clCCall_12.winReleaseCString commandptr_2 os_3)) ) (_ -> clCCall_12.winReleaseCString dirptr_4 (<{PmCleanSystem._c;807;36_223}> (<{StdInt.==_16}> envptr_1 0) commandptr_2 os_3 envptr_1))
<{PmCleanSystem._c;807;36_223}>::I !_x_0::B !commandptr_1::I !os_2::I envptr_3::I = case _x_0 (True -> clCCall_12.winReleaseCString commandptr_1 os_2) (_ -> clCCall_12.winReleaseCString envptr_3 (clCCall_12.winReleaseCString commandptr_1 os_2))
<{PmCleanSystem._c;807;36_222}>::I !_x_0::B !commandptr_1::I !os_2::I envptr_3::I = case _x_0 (True -> clCCall_12.winReleaseCString commandptr_1 os_2) (_ -> clCCall_12.winReleaseCString envptr_3 (clCCall_12.winReleaseCString commandptr_1 os_2))
<{PmCleanSystem._c;810;36_221}>::I !_x_0::B !envptr_1::I !commandptr_2::I !os_3::I dirptr_4::I = case _x_0 (True -> case (<{StdInt.==_16}> envptr_1 0) (True -> clCCall_12.winReleaseCString commandptr_2 os_3) (False -> clCCall_12.winReleaseCString envptr_1 (clCCall_12.winReleaseCString commandptr_2 os_3)) ) (_ -> clCCall_12.winReleaseCString dirptr_4 (<{PmCleanSystem._c;807;36_220}> (<{StdInt.==_16}> envptr_1 0) commandptr_2 os_3 envptr_1))
<{PmCleanSystem._c;807;36_220}>::I !_x_0::B !commandptr_1::I !os_2::I envptr_3::I = case _x_0 (True -> clCCall_12.winReleaseCString commandptr_1 os_2) (_ -> clCCall_12.winReleaseCString envptr_3 (clCCall_12.winReleaseCString commandptr_1 os_2))
<{PmCleanSystem._c;807;36_219}>::I !_x_0::B !commandptr_1::I !os_2::I envptr_3::I = case _x_0 (True -> clCCall_12.winReleaseCString commandptr_1 os_2) (_ -> clCCall_12.winReleaseCString envptr_3 (clCCall_12.winReleaseCString commandptr_1 os_2))
<{PmCleanSystem._c;789;36_218}> !_x_0::B os_1::I envstring_2 = case _x_0 (True -> _Tuple2 0 os_1) (_ -> clCCall_12.winMakeCString envstring_2 os_1)
<{PmCleanSystem._c;792;36_217}> !_x_0::B os_1::I directory_2 = case _x_0 (True -> _Tuple2 0 os_1) (_ -> clCCall_12.winMakeCString directory_2 os_1)
<{PmCleanSystem._c;795;36_216}> !_x_0::B os_1::I stdin_2 = case _x_0 (True -> _Tuple2 0 os_1) (_ -> clCCall_12.winMakeCString stdin_2 os_1)
<{PmCleanSystem._c;798;36_215}> !_x_0::B os_1::I stdout_2 = case _x_0 (True -> _Tuple2 0 os_1) (_ -> clCCall_12.winMakeCString stdout_2 os_1)
<{PmCleanSystem._c;801;36_214}> !_x_0::B os_1::I stderr_2 = case _x_0 (True -> _Tuple2 0 os_1) (_ -> clCCall_12.winMakeCString stderr_2 os_1)
PmCleanSystem.CodeGen !<{cgen`_0}> !used_compiler_process_ids_1::B !wf_2 !genAsmOrCode_3 !abc_path_4 !obj_path_5 !timeprofile_6::B !cgo_7 !tp_8 !ao_9 !startupdir_10 !compiler_process_ids_11 !ps_12 = let _x_1_0 = PmCleanSystem.mangleGenerator <{cgen`_0}> startupdir_10 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple4!15}> "" False compiler_process_ids_11 (wf_2 (_predefined._Cons (select _x_1_0::_Tuple3 1) _predefined._Nil) ps_12)) (False -> let cgen_3_0 = select _x_1_0::_Tuple3 1, path_without_suffix_3_1 = StdPathname.RemoveSuffix abc_path_4, command_3_2 = <{StdString.+++_11}> cgen_3_0 (<{StdString.+++_11}> (PmCleanSystem.MakeCodeGenOptionsString genAsmOrCode_3 timeprofile_6 cgo_7 tp_8) (<{StdString.+++_11}> " " (StdPathname.quoted_string path_without_suffix_3_1))), cgendir_3_3 = select _x_1_0::_Tuple3 2, errorsfilename_3_4 = <{StdString.+++_11}> PmCleanSystem.tooltempdir (<{StdString.+++_11}> "\\" "errors"), _x_3_5 = PmCleanSystem.CallProcess command_3_2 _predefined._Nil cgendir_3_3 "" "" errorsfilename_3_4 99 in case (StdBool.not (select _x_3_5::_Tuple3 0)) (True -> <{_Tuple4!15}> obj_path_5 False compiler_process_ids_11 (wf_2 (_predefined._Cons (<{StdString.+++_11}> "Error: Unable to run code generator: " cgen_3_0) _predefined._Nil) ps_12)) (False -> let exit_code_5_0 = select _x_3_5::_Tuple3 1, _x_5_1 = IdeState.accFiles_37 (PmCleanSystem.ReadErrorsAndWarnings errorsfilename_3_4) ps_12, _x_5_2 = select _x_5_1::_Tuple2 0, error_text_5_3::I = select _x_5_2::_Tuple3 2 in <{_Tuple4!15}> obj_path_5 (<{StdInt.==_16}> exit_code_5_0 0) compiler_process_ids_11 (<{PmCleanSystem._if;550;16_235}> (select _x_5_2::_Tuple3 1) exit_code_5_0 wf_2 error_text_5_3 abc_path_4 path_without_suffix_3_1 (select _x_5_1::_Tuple2 1))) ) 
<{PmCleanSystem._if;550;16_235}> !_x_0::B !exit_code_1::I wf_2 error_text_3 abc_path_4 path_without_suffix_5 = case _x_0 (True -> case (StdBool.not (<{StdInt.==_16}> exit_code_1 0)) (True -> wf_2 (<{StdList.++}> (UtilStrictLists.StrictListToList error_text_3) (_predefined._Cons (<{StdString.+++_11}> "Error: Code generator failed for '" (<{StdString.+++_11}> abc_path_4 (<{StdString.+++_11}> "' with exit code: " (StdString.toString_5 exit_code_1)))) _predefined._Nil))) (False -> wf_2 (UtilStrictLists.StrictListToList error_text_3)) ) (_ -> case (StdBool.not (<{StdInt.==_16}> exit_code_1 0)) (True -> wf_2 (_predefined._Cons (<{StdString.+++_11}> "Error: Code generator failed for '" (<{StdString.+++_11}> abc_path_4 (<{StdString.+++_11}> "' with exit code: " (StdString.toString_5 exit_code_1)))) (_predefined._Cons (StdPathname.quoted_string path_without_suffix_5) _predefined._Nil))) (False -> StdFunc.id) )
PmCleanSystem.mangleLinker !<{linkstr`_0}> !startupdir_1 = let _x_1_0 = PmCleanSystem.splitOptions <{linkstr`_0}>, <{linkstr`_1_1}> = select _x_1_0::_Tuple2 0, _x_1_2 = UtilIO.GetShortPathName (<{StdString.+++_11}> startupdir_1 (<{StdString.+++_11}> "\\" (<{StdString.+++_11}> <{linkstr`_1_1}> "\0"))) in case (StdBool.not (select _x_1_2::_Tuple2 0)) (True -> _Tuple3 False (<{StdString.+++_11}> "Error: Unable to get short path name '" (<{StdString.+++_11}> (<{StdString.+++_11}> startupdir_1 (<{StdString.+++_11}> "\\" <{linkstr`_1_1}>)) "'.")) "") (False -> let linkstr_3_0 = select _x_1_2::_Tuple2 1 in _Tuple3 True (<{StdString.+++_11}> (<{StdString.%_10}> linkstr_3_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 linkstr_3_0) 2))) (select _x_1_0::_Tuple2 1)) (StdPathname.RemoveFilename (<{StdString.%_10}> linkstr_3_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 linkstr_3_0) 2))))) 
PmCleanSystem.Link !<{linker`_0}> !winfun_1 !path_2 !applicationOptions_3 !optionspathname_4 !library_file_names_5 !object_file_names_6 !static_libraries_7 !static_8::B !gen_relocs_9::B !gen_symbol_table_10::B !gen_linkmap_11::B !link_resources_12::B !resource_path_13 !gen_dll_14::B !dll_syms_15 !startupdir_16 !dynlstr_17 !_x_18 !use_64_bit_processor_19::B !ps_20 = case applicationOptions_3 (PmTypes._ApplicationOptions hs_1_0 ss_1_1 em_1_2 heap_size_multiple_1_3 initial_heap_size_1_4 set_1_5 sgc_1_6 pss_1_7 marking_collection_1_8 disable_rts_flags_1_9 o_1_10 fn_1_11 fs_1_12 write_stderr_to_file_1_13 memoryProfiling_1_14 minheap_1_15 profiling_1_16 stack_traces_1_17 dynamics_1_18 desc_exl_1_19 standard_rte_1_20 -> let _x_2_0 = PmCleanSystem.mangleLinker <{linker`_0}> startupdir_16 in case (StdBool.not (select _x_2_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (winfun_1 (_predefined._Cons (select _x_2_0::_Tuple3 1) _predefined._Nil) ps_20) False) (False -> let optdirpath_4_0 = StdPathname.RemoveFilename optionspathname_4, _x_4_1 = Directory.pd_StringToPath (<{StdFile.FileSystem;}> IdeState.fclose_33 IdeState.fopen_34 IdeState.sfopen_35 IdeState.stdio_36) optdirpath_4_0 ps_20, _x_4_2 = select _x_4_1::_Tuple2 0 in case (StdBool.not (select _x_4_2::_Tuple2 0)) (True -> <{_Tuple2!3}> (winfun_1 (_predefined._Cons (<{StdString.+++_11}> "Linker error: Unable to understand path: " optdirpath_4_0) _predefined._Nil) (select _x_4_1::_Tuple2 1)) False) (False -> let pd_optdirpath_6_0 = select _x_4_2::_Tuple2 1, ps_6_1 = select _x_4_1::_Tuple2 1, _x_6_2 = Directory.getDirectoryContents (<{StdFile.FileSystem;}> IdeState.fclose_33 IdeState.fopen_34 IdeState.sfopen_35 IdeState.stdio_36) pd_optdirpath_6_0 ps_6_1, _x_6_3 = select _x_6_2::_Tuple2 0, err_6_4 = select _x_6_3::_Tuple2 0, _x_6_5 = <{PmCleanSystem._c;663;35_236}> err_6_4 pd_optdirpath_6_0 ps_6_6, ps_6_6 = select _x_6_2::_Tuple2 1 in case (StdBool.not (<{Directory.==_13}> (select _x_6_5::_Tuple2 0) Directory.NoDirError)) (True -> <{_Tuple2!3}> (winfun_1 (_predefined._Cons (<{StdString.+++_11}> "Linker error: Unable to access or create: " optdirpath_4_0) _predefined._Nil) (select _x_6_5::_Tuple2 1)) False) (False -> let flags_8_0 = WriteOptionsFile.ApplicationOptionsToFlags applicationOptions_3, ps_8_1 = select _x_6_5::_Tuple2 1, _x_8_2::I = IdeState.accFiles_37 (WriteOptionsFile.write_options_file (<{StdFile.FileSystem;}> StdFile.fclose_26 StdFile.fopen_27 StdFile.sfopen_28 StdFile.stdio_29) optionspathname_4 flags_8_0 hs_1_0 ss_1_1 initial_heap_size_1_4 heap_size_multiple_1_3 minheap_1_15 use_64_bit_processor_19) ps_8_1 in case (StdBool.not (select _x_8_2::_Tuple2 0)) (True -> <{_Tuple2!3}> (winfun_1 (_predefined._Cons (<{StdString.+++_11}> "Linker error: Could not write the options object file: " optionspathname_4) _predefined._Nil) (select _x_8_2::_Tuple2 1)) False) (False -> let linkoptspath_10_0 = StdPathname.MakeFullPathname PmCleanSystem.tooltempdir "linkopts", linkopts_10_1 = <{linkargs._LinkInfo`}> path_2 resource_path_13 (StdBool.not (<{PmTypes.==_17}> o_1_10 PmTypes.NoConsole)) static_8 gen_relocs_9 gen_symbol_table_10 gen_linkmap_11 link_resources_12 (<{_predefined._!Cons!}> optionspathname_4 (UtilStrictLists.RemoveDup (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdString.==_2}>)) object_file_names_6)) (UtilStrictLists.RemoveDup (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdString.==_2}>)) library_file_names_5) (UtilStrictLists.RemoveDup (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{StdString.==_2}>)) static_libraries_7) ss_1_1 gen_dll_14 dll_syms_15 (<{StdString.+++.}> startupdir_16 (<{StdString.+++.}> "\\" dynlstr_17)) (StdPathname.MakeFullPathname PmCleanSystem.tooltempdir "lib_name.o"), ps_10_2 = select _x_8_2::_Tuple2 1, _x_10_3 = IdeState.accFiles_37 (linkargs.WriteLinkOpts linkoptspath_10_0 linkopts_10_1) ps_10_2, err_10_4 = select _x_10_3::_Tuple2 0 in case (Data.Maybe.isJust err_10_4) (True -> <{_Tuple2!3}> (winfun_1 (Data.Maybe.fromJust err_10_4) (select _x_10_3::_Tuple2 1)) False) (False -> let linker_12_0::B = select _x_2_0::_Tuple3 1, linkerrspath_12_1::I = StdPathname.MakeFullPathname PmCleanSystem.tooltempdir "linkerrs", linker_12_2 = <{StdString.+++_11}> linker_12_0 (<{StdString.+++_11}> " -I " (<{StdString.+++_11}> (StdPathname.quoted_string linkoptspath_10_0) (<{StdString.+++_11}> " -O " (StdPathname.quoted_string linkerrspath_12_1)))), linkerdir_12_3 = select _x_2_0::_Tuple3 2, _x_12_4 = PmCleanSystem.call_process linker_12_2 linkerdir_12_3 99, ost_12_5 = select _x_12_4::_Tuple3 2, didit_12_6 = select _x_12_4::_Tuple3 0 in case (StdBool.not (<{PmCleanSystem._if;698;18_237}> (<{StdInt.==_16}> ost_12_5 99) didit_12_6)) (True -> <{_Tuple2!3}> (winfun_1 (_predefined._Cons (<{StdString.+++_11}> "Error: Unable to run linker: " linker_12_2) _predefined._Nil) (select _x_10_3::_Tuple2 1)) False) (False -> let ps_14_0 = select _x_10_3::_Tuple2 1, _x_14_1 = IdeState.accFiles_37 (linkargs.ReadLinkErrors linkerrspath_12_1) ps_14_0, _x_14_2 = select _x_14_1::_Tuple2 0, err_14_3 = select _x_14_2::_Tuple2 0 in case (Data.Maybe.isJust err_14_3) (True -> <{_Tuple2!3}> (winfun_1 (Data.Maybe.fromJust err_14_3) (select _x_14_1::_Tuple2 1)) False) (False -> let link_errors_16_0 = select _x_14_2::_Tuple2 1, _x_16_1 = _Tuple2 link_errors_16_0 (StdList.length_47 link_errors_16_0) in case (StdBool.not (<{StdInt.==_16}> (select _x_16_1::_Tuple2 1) 0)) (True -> <{_Tuple2!3}> (winfun_1 (select _x_16_1::_Tuple2 0) (select _x_14_1::_Tuple2 1)) (PmCleanSystem._f238_238 (<{StdInt.==_16}> (select _x_12_4::_Tuple3 1) 0) ost_12_5)) (False -> <{_Tuple2!3}> (select _x_14_1::_Tuple2 1) (PmCleanSystem._f239_239 (<{StdInt.==_16}> (select _x_12_4::_Tuple3 1) 0) ost_12_5)) ) ) ) ) ) ) ) ) 
PmCleanSystem._f239_239::B !_x_0::B ost_1::I = case _x_0 (True -> <{StdInt.==_16}> ost_1 99) (_ -> False)
PmCleanSystem._f238_238::B !_x_0::B ost_1::I = case _x_0 (True -> <{StdInt.==_16}> ost_1 99) (_ -> False)
<{PmCleanSystem._if;698;18_237}>::B !_x_0::B !didit_1::B = case _x_0 (True -> didit_1) (_ -> didit_1)
<{PmCleanSystem._c;663;35_236}> !err_0 pd_optdirpath_1 ps_2 = case err_0 (Directory.DoesntExist -> Directory.createDirectory (<{StdFile.FileSystem;}> IdeState.fclose_33 IdeState.fopen_34 IdeState.sfopen_35 IdeState.stdio_36) pd_optdirpath_1 ps_2) (_ -> _Tuple2 err_0 ps_2)
<{PmCleanSystem.Execute`}> !command_0 !ps_1 = let _x_1_0::B = PmCleanSystem.CallProcess command_0 _predefined._Nil "" "" "" "" 99, didit_1_1 = select _x_1_0::_Tuple3 0 in case (case (<{StdInt.==_16}> (select _x_1_0::_Tuple3 2) 99) (True -> didit_1_1) (False -> didit_1_1) ) (True -> <{_Tuple3!7}> True (select _x_1_0::_Tuple3 1) ps_1) (False -> <{_Tuple3!7}> False (select _x_1_0::_Tuple3 1) ps_1) 
PmCleanSystem.mangleCompiler2 !<{ccstring`_0}> !startupdir_1 = let _x_1_0 = PmCleanSystem.splitOptions <{ccstring`_0}>, <{ccstring`_1_1}> = select _x_1_0::_Tuple2 0, _x_1_2 = UtilIO.GetShortPathName (<{StdString.+++_11}> startupdir_1 (<{StdString.+++_11}> "\\" (<{StdString.+++_11}> <{ccstring`_1_1}> "\0"))) in case (StdBool.not (select _x_1_2::_Tuple2 0)) (True -> _Tuple5 False (<{StdString.+++_11}> "Error: Unable to get short path name '" (<{StdString.+++_11}> (<{StdString.+++_11}> startupdir_1 (<{StdString.+++_11}> "\\" <{ccstring`_1_1}>)) "'.")) "" "" "") (False -> let ccstring_3_0 = select _x_1_2::_Tuple2 1, cocl_3_1 = <{StdString.%_10}> ccstring_3_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 ccstring_3_0) 2)), _x_3_2 = PmCleanSystem.splitOptions (select _x_1_0::_Tuple2 1) in _Tuple5 True cocl_3_1 (StdPathname.RemoveFilename cocl_3_1) (select _x_3_2::_Tuple2 0) (select _x_3_2::_Tuple2 1)) 
PmCleanSystem.start_compile_with_cache2 path_0 !_x_1 directory_2 !arguments_3 !compiler_process_ids_4 !ps_5 = case _x_1 (PmCleanSystem._CompilerProcessHandlesAndId compiler_thread_id_1_0 compiler_thread_handle_1_1 compiler_process_handle_1_2 -> case (<{StdInt.==_16}> (thread_message.send_string_to_thread compiler_thread_id_1_0 compiler_process_handle_1_2 thread_message.get_message_number (<{StdString.+++_11}> "cocl " (<{StdString.+++_11}> arguments_3 "\0"))) 0) (True -> <{_Tuple3!7}> False compiler_process_ids_4 ps_5) (False -> <{_Tuple3!7}> True compiler_process_ids_4 ps_5) ) 
PmCleanSystem.hex_char_104::C !v_0::I !i_1::I = let h_1_0::I = StdInt.bitand (<{StdInt.>>}> v_0 (<{StdInt.<<}> (<{StdInt.-_7}> 7 i_1) 2)) 15 in StdChar.toChar_21 (<{PmCleanSystem._if;896;23_240}> (<{StdInt.<_17}> h_1_0 10) h_1_0)
<{PmCleanSystem._if;896;23_240}>::I !_x_0::B !h_1::I = case _x_0 (True -> <{StdInt.+_6}> (StdInt.toInt_20 '0') h_1) (_ -> <{StdInt.+_6}> (<{StdInt.-_7}> (StdInt.toInt_20 'A') 10) h_1)
<{PmCleanSystem.cu;892;19_103}> !_vArray_0 v_1::I c_a_2 !c_i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> <{PmCleanSystem.cu;892;19_103}> _vArray_0 v_1 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (PmCleanSystem.hex_char_104 v_1 c_i_3)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4) (False -> c_a_2) 
PmCleanSystem.int_to_hex !_vArray_0 v_1::I = let g_s_1_0::I = 7 in <{PmCleanSystem.cu;892;19_103}> _vArray_0 v_1 (select _vArray_0::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s_1_0 StdInt.one_11)) 0 g_s_1_0
<{PmCleanSystem.cu;892;19_197}> v_0::I !c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{PmCleanSystem.cu;892;19_197}> v_0 (_SystemArray.update_21 c_a_1 c_i_2 (PmCleanSystem.hex_char_104 v_0 c_i_2)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
PmCleanSystem.int_to_hex_196 v_0::I = let g_s_1_0::I = 7 in <{PmCleanSystem.cu;892;19_197}> v_0 (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s_1_0 StdInt.one_11)) 0 g_s_1_0
PmCleanSystem.start_compile_with_cache path_0 !slot_1::I directory_2 startup_arguments_3 arguments_4 !compiler_process_ids_5 !ps_6 = case (<{StdInt.<_17}> slot_1 (StdList.length_47 compiler_process_ids_5)) (True -> PmCleanSystem.start_compile_with_cache2 path_0 (<{StdList.!!}> compiler_process_ids_5 slot_1) directory_2 arguments_4 compiler_process_ids_5 ps_6) (False -> let thread_id_2_0 = thread_message.get_current_thread_id, begin_arguments_2_1 = <{StdString.+++_11}> startup_arguments_3 (<{StdString.+++_11}> " -ide " (PmCleanSystem.int_to_hex_196 thread_id_2_0)), _x_2_2::I = thread_message.start_compiler_process (<{StdString.+++_11}> path_0 "\0") (<{StdString.+++_11}> directory_2 "\0") (<{StdString.+++_11}> "\"" (<{StdString.+++_11}> path_0 (<{StdString.+++_11}> "\" " (<{StdString.+++_11}> begin_arguments_2_1 "\0")))) in case (<{StdInt.==_16}> (select _x_2_2::_Tuple4 0) 0) (True -> <{_Tuple3!7}> False compiler_process_ids_5 ps_6) (False -> let compiler_handles_and_id_4_0 = PmCleanSystem._CompilerProcessHandlesAndId (select _x_2_2::_Tuple4 1) (select _x_2_2::_Tuple4 2) (select _x_2_2::_Tuple4 3) in PmCleanSystem.start_compile_with_cache2 path_0 compiler_handles_and_id_4_0 directory_2 arguments_4 (<{StdList.++}> compiler_process_ids_5 (_predefined._Cons compiler_handles_and_id_4_0 _predefined._Nil)) ps_6) ) 
PmCleanSystem.CompileStartCommand !_vFileEnv_0 !<{cocl`_1}> !write_module_times_2::B !errwin_3 !compileOrCheckSyntax_4 !path_5 !paths_6 !slot_7::I !project_compiler_options_8 !co_9 !startupdir_10 !compiler_process_ids_11 !ps_12 = let _x_1_0 = PmCleanSystem.mangleCompiler2 <{cocl`_1}> startupdir_10 in case (StdBool.not (select _x_1_0::_Tuple5 0)) (True -> <{_Tuple3!7}> False compiler_process_ids_11 (errwin_3 (_predefined._Cons (select _x_1_0::_Tuple5 1) _predefined._Nil) ps_12)) (False -> let cocl_3_0 = select _x_1_0::_Tuple5 1, cocl_dir_3_1 = select _x_1_0::_Tuple5 2, cocl_startup_3_2 = select _x_1_0::_Tuple5 3, options_3_3 = select _x_1_0::_Tuple5 4, write_module_times_string_3_4 = <{PmCleanSystem._if;248;33_241}> write_module_times_2, out_file_name_3_5 = PmCleanSystem.out_file_path PmCleanSystem.tooltempdir slot_7, errors_file_name_3_6 = PmCleanSystem.errors_file_path PmCleanSystem.tooltempdir slot_7, cocl_arguments_3_7 = <{StdString.+++_11}> " -id " (<{StdString.+++_11}> (StdString.toString_5 slot_7) (<{StdString.+++_11}> " " (<{StdString.+++_11}> options_3_3 (<{StdString.+++.}> write_module_times_string_3_4 (PmCleanSystem.CompileBuildCommand out_file_name_3_5 errors_file_name_3_6 compileOrCheckSyntax_4 path_5 paths_6 project_compiler_options_8 co_9))))), _x_3_8 = PmCleanSystem.start_compile_with_cache cocl_3_0 slot_7 cocl_dir_3_1 cocl_startup_3_2 cocl_arguments_3_7 compiler_process_ids_11 ps_12 in case (StdBool.not (select _x_3_8::_Tuple3 0)) (True -> <{_Tuple3!7}> False (select _x_3_8::_Tuple3 1) (errwin_3 (_predefined._Cons (<{StdString.+++_11}> "Error: Unable to run compiler: " cocl_3_0) _predefined._Nil) (select _x_3_8::_Tuple3 2))) (False -> <{_Tuple3!7}> True (select _x_3_8::_Tuple3 1) (select _x_3_8::_Tuple3 2)) ) 
<{PmCleanSystem._if;248;33_241}> !write_module_times_0::B = case write_module_times_0 (True -> " -wmt ") (_ -> " ")
PmCleanSystem.get_finished_compiler_id_and_exit_code = error "no AnyCodeExpr"
PmCleanSystem.CompilePollCompleted !_vFileEnv_0 !compiler_process_ids_1 !ps_2 = let wm_number_1_0::I = thread_message.get_message_number, _x_1_1::I = thread_message.get_integers_from_message wm_number_1_0, exit_code_1_2 = select _x_1_1::_Tuple3 2, compiler_id_1_3::I = select _x_1_1::_Tuple3 1 in case (<{StdInt.==_16}> (select _x_1_1::_Tuple3 0) 0) (True -> <{_Tuple2!3}> PmCleanSystem.NoFinishedCompiler ps_2) (False -> <{_Tuple2!3}> (PmCleanSystem.FinishedCompiler compiler_id_1_3 exit_code_1_2) ps_2) 
PmCleanSystem.InitCompilingInfo = PmCleanSystem.CompilingInfo PmCleanSystem.NoCompiler
PmCleanSystem.ExitCleanCompiler !prog_0 = case prog_0 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (PmCleanSystem.CompilingInfo _x_2_0 -> case _x_2_0 (PmCleanSystem.CompilerProcess compiler_thread_id_3_0 compiler_thread_handle_3_1 compiler_process_handle_3_2 -> case (<{StdInt.==_16}> (thread_message.send_string_to_thread compiler_thread_id_3_0 compiler_process_handle_3_2 thread_message.get_message_number "exit\0") 0) (True -> prog_0) (False -> <{_Tuple2!1}> (PmCleanSystem.CompilingInfo PmCleanSystem.NoCompiler) ps_1_1) ) ) ) (_ -> prog_0)
PmCleanSystem.compile_with_cache2 path_0 directory_1 !arguments_2 !compiler_thread_id_3::I compiler_thread_handle_4::I !compiler_process_handle_5::I = let wm_number_1_0::I = thread_message.get_message_number in case (<{StdInt.==_16}> (thread_message.send_string_to_thread compiler_thread_id_3 compiler_process_handle_5 wm_number_1_0 (<{StdString.+++_11}> "cocl " (<{StdString.+++_11}> arguments_2 "\0"))) 0) (True -> <{_Tuple2!3}> False 0) (False -> let _x_3_0 = thread_message.get_integers_from_thread_message wm_number_1_0 compiler_thread_handle_4 in case (<{StdInt.==_16}> (select _x_3_0::_Tuple3 0) 0) (True -> <{_Tuple2!3}> False (select _x_3_0::_Tuple3 2)) (False -> <{_Tuple2!3}> True (select _x_3_0::_Tuple3 2)) ) 
PmCleanSystem.compile_with_cache path_0 directory_1 startup_arguments_2 arguments_3 !prog_4 = case prog_4 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (PmCleanSystem.CompilingInfo _x_2_0 -> case _x_2_0 (PmCleanSystem.NoCompiler -> let thread_id_4_0 = thread_message.get_current_thread_id, begin_arguments_4_1 = <{StdString.+++_11}> startup_arguments_2 (<{StdString.+++_11}> " -ide " (PmCleanSystem.int_to_hex_196 thread_id_4_0)), _x_4_2::I = thread_message.start_compiler_process (<{StdString.+++_11}> path_0 "\0") (<{StdString.+++_11}> directory_1 "\0") (<{StdString.+++_11}> "\"" (<{StdString.+++_11}> path_0 (<{StdString.+++_11}> "\" " (<{StdString.+++_11}> begin_arguments_4_1 "\0")))) in case (<{StdInt.==_16}> (select _x_4_2::_Tuple4 0) 0) (True -> <{_Tuple3!7}> False 0 prog_4) (False -> let compiler_thread_id_6_0::B = select _x_4_2::_Tuple4 1, compiler_thread_handle_6_1 = select _x_4_2::_Tuple4 2, compiler_process_handle_6_2::I = select _x_4_2::_Tuple4 3, _x_6_3::I = PmCleanSystem.compile_with_cache2 path_0 directory_1 arguments_3 compiler_thread_id_6_0 compiler_thread_handle_6_1 compiler_process_handle_6_2, ok_6_4::I = select _x_6_3::_Tuple2 0 in case ok_6_4 (True -> <{_Tuple3!7}> ok_6_4 (select _x_6_3::_Tuple2 1) (_Tuple2 (PmCleanSystem.CompilingInfo (PmCleanSystem.CompilerProcess compiler_thread_id_6_0 compiler_thread_handle_6_1 compiler_process_handle_6_2)) ps_1_1)) (False -> <{_Tuple3!7}> ok_6_4 (select _x_6_3::_Tuple2 1) prog_4) ) ) (PmCleanSystem.CompilerProcess compiler_thread_id_3_0 compiler_thread_handle_3_1 compiler_process_handle_3_2 -> let _x_4_0::B = PmCleanSystem.compile_with_cache2 path_0 directory_1 arguments_3 compiler_thread_id_3_0 compiler_thread_handle_3_1 compiler_process_handle_3_2, ok_4_1 = select _x_4_0::_Tuple2 0 in case ok_4_1 (True -> <{_Tuple3!7}> ok_4_1 (select _x_4_0::_Tuple2 1) prog_4) (False -> <{_Tuple3!7}> ok_4_1 (select _x_4_0::_Tuple2 1) (_Tuple2 (PmCleanSystem.CompilingInfo PmCleanSystem.NoCompiler) ps_1_1)) ) ) (PmCleanSystem.NotCompiling -> let _x_3_0 = PmCleanSystem.call_process (<{StdString.+++_11}> (StdPathname.quoted_string path_0) (<{StdString.+++_11}> " " arguments_3)) directory_1 99 in <{_Tuple3!7}> (select _x_3_0::_Tuple3 0) (select _x_3_0::_Tuple3 1) prog_4) ) 
PmCleanSystem.CompilePersistent !_vFileEnv_0 !<{cocl`_1}> !write_module_times_2::B !errwin_3 !typewin_4 !compileOrCheckSyntax_5 !mdn_6 !paths_7 !project_compiler_options_8 !co_9 !startupdir_10 !cstate_11 !env_12 = case co_9 (PmCompilerOptions._CompilerOptions neverMemoryProfile_1_0 neverTimeProfile_1_1 sa_1_2 listTypes_1_3 attr_1_4 gw_1_5 bv_1_6 gc_1_7 reuseUniqueNodes_1_8 fusion_1_9 -> let _x_2_0 = PmCleanSystem.mangleCompiler2 <{cocl`_1}> startupdir_10 in case (StdBool.not (select _x_2_0::_Tuple5 0)) (True -> <{_Tuple2!3}> cstate_11 (_Tuple3 (errwin_3 (_predefined._Cons (select _x_2_0::_Tuple5 1) _predefined._Nil) env_12) "" PmCleanSystem.SyntaxError)) (False -> let cocl_4_0 = select _x_2_0::_Tuple5 1, cocl_dir_4_1 = select _x_2_0::_Tuple5 2, cocl_startup_4_2 = select _x_2_0::_Tuple5 3, options_4_3 = select _x_2_0::_Tuple5 4, write_module_times_string_4_4::I = <{PmCleanSystem._if;328;33_242}> write_module_times_2, dummy_slot_4_5 = 0, out_file_name_4_6 = PmCleanSystem.out_file_path PmCleanSystem.tooltempdir dummy_slot_4_5, errors_file_name_4_7 = PmCleanSystem.errors_file_path PmCleanSystem.tooltempdir dummy_slot_4_5, cocl_arguments_4_8 = <{StdString.+++_11}> options_4_3 (<{StdString.+++.}> write_module_times_string_4_4 (PmCleanSystem.CompileBuildCommand out_file_name_4_6 errors_file_name_4_7 compileOrCheckSyntax_5 (select mdn_6::PmTypes._ModuleDirAndName 1) paths_7 project_compiler_options_8 co_9)), _x_4_9 = PmCleanSystem.compile_with_cache cocl_4_0 cocl_dir_4_1 cocl_startup_4_2 cocl_arguments_4_8 (_Tuple2 cstate_11 env_12) in case (StdBool.not (select _x_4_9::_Tuple3 0)) (True -> let _x_6_0 = select _x_4_9::_Tuple3 2 in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (_Tuple3 (errwin_3 (_predefined._Cons (<{StdString.+++_11}> "Error: Unable to run compiler: " (<{StdString.+++_11}> cocl_4_0 (<{StdString.+++_11}> " :" (StdString.toString_5 (select _x_4_9::_Tuple3 1))))) _predefined._Nil) (select _x_6_0::_Tuple2 1)) "" PmCleanSystem.SyntaxError)) (False -> let _x_6_0 = select _x_4_9::_Tuple3 2, _x_6_1 = PmCleanSystem.CompileHandleExitCode _vFileEnv_0 (select _x_4_9::_Tuple3 1) cocl_4_0 PmCleanSystem.tooltempdir dummy_slot_4_5 errwin_3 typewin_4 mdn_6 listTypes_1_3 (select _x_6_0::_Tuple2 1) in <{_Tuple2!3}> (select _x_6_0::_Tuple2 0) (_Tuple3 (select _x_6_1::_Tuple3 2) (select _x_6_1::_Tuple3 0) (select _x_6_1::_Tuple3 1))) ) ) 
<{PmCleanSystem._if;328;33_242}> !write_module_times_0::B = case write_module_times_0 (True -> " -wmt ") (_ -> " ")
PmCleanSystem.StartCodeGenerator !_x_0 !_x_1 !_x_2 !_x_3 !_x_4::I !_x_5::B !_x_6 !_x_7 !_x_8 !_x_9 !_x_10 !_x_11 = StdMisc.undef
PmCleanSystem.SendRepeatResult !_x_0::I !_x_1 = StdMisc.undef
PmCleanSystem.wait_message::I !r_0::I = error "no AnyCodeExpr"
PmCleanSystem.DelayEventLoop !ps_0 = ps_0
PmCleanSystem.CreateFile_32 !fileName_0 !desiredAccess_1::I !shareMode_2::I !lpSecurityAttributes_3 !creationDisposition_4::I !flagsAndAttributes_5::I !templateFile_6::I !os_7::I = error "no AnyCodeExpr"
PmCleanSystem.CreateFile !fileName_0 !desiredAccess_1::I !shareMode_2::I !lpSecurityAttributes_3 !creationDisposition_4::I !flagsAndAttributes_5::I !templateFile_6::I !os_7::I = error "no AnyCodeExpr"
PmCleanSystem.create_inheritable_file !file_name_0 !os_1::I = PmCleanSystem.CreateFile_32 file_name_0 1073741824 0 (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray.createArray_9 3 0) 0 12) 2 1) 2 128 0 os_1
PmCleanSystem.CreateProcess_32 !lpApplicationName_0::I !commandLine_1 !lpProcessAttributes_2::I !lpThreadAttributes_3::I !inheritHandles_4::B !creationFlags_5::I !lpEnvironment_6::I !currentDirectory_7 !lpStartup_8 !lpProcess_9 !os_10::I = error "no AnyCodeExpr"
PmCleanSystem.CreateProcess !lpApplicationName_0::I !commandLine_1 !lpProcessAttributes_2::I !lpThreadAttributes_3::I !inheritHandles_4::B !creationFlags_5::I !lpEnvironment_6::I !currentDirectory_7 !lpStartup_8 !lpProcess_9 !os_10::I = error "no AnyCodeExpr"
PmCleanSystem.create_process !command_line_0 !current_directory_1 !std_error_handle_2::I !os_3::I = let process_information_1_0 = _SystemArray.createArray_9 4 0, _x_1_1 = PmCleanSystem.CreateProcess_32 0 command_line_0 0 0 True 8 0 current_directory_1 (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray.update_13 (_SystemArray.createArray_9 17 0) 0 68) 11 256) 16 std_error_handle_2) process_information_1_0 os_3 in <{_Tuple3!7}> (select _x_1_1::_Tuple2 0) process_information_1_0 (select _x_1_1::_Tuple2 1)
PmCleanSystem.CloseHandle !object_0::I !os_1::I = error "no AnyCodeExpr"
PmCleanSystem.start_process_with_redirected_std_error !command_0 !directory_1 !errors_file_name_2 !os_3::I = case (<{StdInt.<_17}> 0 (_SystemArray.size_20 command_0)) (True -> let _x_2_0 = PmCleanSystem.create_inheritable_file (<{StdString.+++_11}> errors_file_name_2 "\0") os_3, std_error_handle_2_1::I = select _x_2_0::_Tuple2 0, os_2_2::I = select _x_2_0::_Tuple2 1, _x_2_3 = PmCleanSystem.create_process (<{StdString.+++.}> command_0 "\0") (<{StdString.+++_11}> directory_1 "\0") std_error_handle_2_1 os_2_2 in case (StdBool.not (select _x_2_3::_Tuple3 0)) (True -> <{_Tuple5!31}> False 0 0 0 (select (PmCleanSystem.CloseHandle std_error_handle_2_1 (select _x_2_3::_Tuple3 2))::_Tuple2 1)) (False -> let process_information_4_0 = select _x_2_3::_Tuple3 1 in <{_Tuple5!31}> True (_SystemArray.select_11 process_information_4_0 0) (_SystemArray.select_11 process_information_4_0 1) std_error_handle_2_1 (select _x_2_3::_Tuple3 2)) ) (False -> <{_Tuple5!31}> False 0 0 0 os_3) 
PmCleanSystem.start_code_generator !<{cgen`_0}> !wf_1 !abc_path_2 !slot_3::I !timeprofile_4::B !cgo_5 !tp_6 !startupdir_7 !ps_8 = let _x_1_0 = PmCleanSystem.mangleGenerator <{cgen`_0}> startupdir_7 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple4!15}> False 0 (PmCleanSystem._StartedCodeGenerator 0 0 "" "" "") (wf_1 (_predefined._Cons (select _x_1_0::_Tuple3 1) _predefined._Nil) ps_8)) (False -> let cgen_3_0 = select _x_1_0::_Tuple3 1, path_without_suffix_3_1 = StdPathname.RemoveSuffix abc_path_2, command_3_2 = <{StdString.+++_11}> cgen_3_0 (<{StdString.+++_11}> (PmCleanSystem.MakeCodeGenOptionsString PmCleanSystem.CodeGeneration timeprofile_4 cgo_5 tp_6) (<{StdString.+++_11}> " " (StdPathname.quoted_string path_without_suffix_3_1))), cgendir_3_3 = select _x_1_0::_Tuple3 2, errors_file_name_3_4 = PmCleanSystem.errors_file_path PmCleanSystem.tooltempdir slot_3, _x_3_5 = PmCleanSystem.start_process_with_redirected_std_error command_3_2 cgendir_3_3 errors_file_name_3_4 99 in case (StdBool.not (select _x_3_5::_Tuple5 0)) (True -> <{_Tuple4!15}> False 0 (PmCleanSystem._StartedCodeGenerator 0 0 "" "" "") (wf_1 (_predefined._Cons (<{StdString.+++_11}> "Error: Unable to run code generator: " cgen_3_0) _predefined._Nil) ps_8)) (False -> <{_Tuple4!15}> True (select _x_3_5::_Tuple5 1) (PmCleanSystem._StartedCodeGenerator (select _x_3_5::_Tuple5 2) (select _x_3_5::_Tuple5 3) abc_path_2 path_without_suffix_3_1 errors_file_name_3_4) ps_8) ) 
PmCleanSystem.finish_process_with_redirected_std_error::I !process_handle_0::I !thread_handle_1::I !std_error_handle_2::I !os_3::I = select (PmCleanSystem.CloseHandle process_handle_0 (select (PmCleanSystem.CloseHandle thread_handle_1 (select (PmCleanSystem.CloseHandle std_error_handle_2 os_3)::_Tuple2 1))::_Tuple2 1))::_Tuple2 1
PmCleanSystem.finish_code_generator !process_handle_0::I !_x_1 !exit_code_2::I !wf_3 !ps_4 = case _x_1 (PmCleanSystem._StartedCodeGenerator scg_thread_handle_1_0 scg_std_error_handle_1_1 scg_abc_path_1_2 scg_path_without_suffix_1_3 scg_errors_file_name_1_4 -> case (StdBool.not (<{StdInt.==_16}> (PmCleanSystem.finish_process_with_redirected_std_error process_handle_0 scg_thread_handle_1_0 scg_std_error_handle_1_1 99) 99)) (True -> StdMisc.undef) (False -> let _x_3_0 = IdeState.accFiles_37 (PmCleanSystem.ReadErrorsAndWarnings scg_errors_file_name_1_4) ps_4, _x_3_1 = select _x_3_0::_Tuple2 0, error_text_3_2 = select _x_3_1::_Tuple3 2 in <{_Tuple2!3}> (<{StdInt.==_16}> exit_code_2 0) (<{PmCleanSystem._if;594;13_243}> (select _x_3_1::_Tuple3 1) exit_code_2 wf_3 error_text_3_2 scg_abc_path_1_2 scg_path_without_suffix_1_3 (select _x_3_0::_Tuple2 1))) ) 
<{PmCleanSystem._if;594;13_243}> !_x_0::B !exit_code_1::I wf_2 error_text_3 scg_abc_path_4 scg_path_without_suffix_5 = case _x_0 (True -> case (StdBool.not (<{StdInt.==_16}> exit_code_1 0)) (True -> wf_2 (<{StdList.++}> (UtilStrictLists.StrictListToList error_text_3) (_predefined._Cons (<{StdString.+++_11}> "Error: Code generator failed for '" (<{StdString.+++_11}> scg_abc_path_4 (<{StdString.+++_11}> "' with exit code: " (StdString.toString_5 exit_code_1)))) _predefined._Nil))) (False -> wf_2 (UtilStrictLists.StrictListToList error_text_3)) ) (_ -> case (StdBool.not (<{StdInt.==_16}> exit_code_1 0)) (True -> wf_2 (_predefined._Cons (<{StdString.+++_11}> "Error: Code generator failed for '" (<{StdString.+++_11}> scg_abc_path_4 (<{StdString.+++_11}> "' with exit code: " (StdString.toString_5 exit_code_1)))) (_predefined._Cons (StdPathname.quoted_string scg_path_without_suffix_5) _predefined._Nil))) (False -> StdFunc.id) )
PmCleanSystem.WaitForMultipleObjects !n_handles_0::I !handles_1 !waitAll_2::B !milliseconds_3::I !os_4::I = error "no AnyCodeExpr"
PmCleanSystem.GetExitCodeProcess !process_0::I !os_1::I = error "no AnyCodeExpr"
PmCleanSystem.wait_for_finished_code_generator !handles_0 !ps_1 = let n_handles_1_0::I = _SystemArray.size_12 handles_0, _x_1_1 = PmCleanSystem.WaitForMultipleObjects n_handles_1_0 handles_0 False -1 99, i_1_2::I = select _x_1_1::_Tuple2 0 in case (case (StdBool.not (<{StdInt.<_17}> i_1_2 0)) (True -> <{StdInt.<_17}> i_1_2 (<{StdInt.+_6}> 0 n_handles_1_0)) (False -> False) ) (True -> let process_n_3_0 = <{StdInt.-_7}> i_1_2 0, os_3_1::I = select _x_1_1::_Tuple2 1, _x_3_2::I = PmCleanSystem.GetExitCodeProcess (_SystemArray.select_11 handles_0 process_n_3_0) os_3_1 in case (StdBool.not (<{StdInt.==_16}> (select _x_3_2::_Tuple3 2) 99)) (True -> StdMisc.undef) (False -> <{_Tuple3!7}> process_n_3_0 (select _x_3_2::_Tuple3 1) ps_1) ) (False -> case (case (StdBool.not (<{StdInt.<_17}> i_1_2 128)) (True -> <{StdInt.<_17}> i_1_2 (<{StdInt.+_6}> 128 n_handles_1_0)) (False -> False) ) (True -> let process_n_4_0 = <{StdInt.-_7}> i_1_2 128, os_4_1::I = select _x_1_1::_Tuple2 1, _x_4_2::I = PmCleanSystem.GetExitCodeProcess (_SystemArray.select_11 handles_0 process_n_4_0) os_4_1 in case (StdBool.not (<{StdInt.==_16}> (select _x_4_2::_Tuple3 2) 99)) (True -> StdMisc.undef) (False -> <{_Tuple3!7}> process_n_4_0 (select _x_4_2::_Tuple3 1) ps_1) ) (False -> <{_Tuple3!7}> -1 -1 ps_1) ) 
PmCleanSystem.DynLink !linker_0 !prj_path_1 !startupdir_2 !ps_3 = let !_x_1_0 = clCCall_12.winLaunchApp2 (<{StdString.+++_11}> (StdPathname.quoted_string linker_0) (<{StdString.+++_11}> " /s " (StdPathname.quoted_string prj_path_1))) startupdir_2 False 42 in _Tuple2 (PmCleanSystem._f244_244 (select _x_1_0::_Tuple2 0) _x_1_0) ps_3
PmCleanSystem._f244_244::B !_x_0::B _x_1 = case _x_0 (True -> <{StdInt.==_16}> (select _x_1::_Tuple2 1) 42) (_ -> False)
PmCleanSystem.Execute !winfun_0 !path_1 !_x_2 ps_3 = case _x_2 (PmTypes._ApplicationOptions hs_1_0 ss_1_1 em_1_2 heap_size_multiple_1_3 initial_heap_size_1_4 set_1_5 sgc_1_6 pss_1_7 marking_collection_1_8 disable_rts_flags_1_9 o_1_10 fn_1_11 fs_1_12 write_stderr_to_file_1_13 memoryProfiling_1_14 memoryProfilingMinimumHeapSize_1_15 profiling_1_16 stack_traces_1_17 dynamics_1_18 desc_exl_1_19 standard_rte_1_20 -> case (select (clCCall_12.winLaunchApp (StdPathname.quoted_string path_1) (StdBool.not (<{PmTypes.==_17}> o_1_10 PmTypes.NoConsole)) 99)::_Tuple2 0) (True -> <{_Tuple2!2}> ps_3 True) (False -> <{_Tuple2!2}> (winfun_0 (_predefined._Cons "Error: Could not launch the application" _predefined._Nil) ps_3) False) ) 
PmCleanSystem.WaitForSingleObject !handle_0::I !milliseconds_1::I !os_2::I = error "no AnyCodeExpr"
PmCleanSystem.call_process_with_redirected_std_error !command_0 !directory_1 !errors_file_name_2 !os_3::I = case (<{StdInt.<_17}> 0 (_SystemArray.size_20 command_0)) (True -> let _x_2_0 = PmCleanSystem.create_inheritable_file (<{StdString.+++_11}> errors_file_name_2 "\0") os_3, std_error_handle_2_1::I = select _x_2_0::_Tuple2 0, os_2_2::I = select _x_2_0::_Tuple2 1, _x_2_3 = PmCleanSystem.create_process (<{StdString.+++.}> command_0 "\0") (<{StdString.+++_11}> directory_1 "\0") std_error_handle_2_1 os_2_2 in case (StdBool.not (select _x_2_3::_Tuple3 0)) (True -> <{_Tuple3!7}> False -1 (select (PmCleanSystem.CloseHandle std_error_handle_2_1 (select _x_2_3::_Tuple3 2))::_Tuple2 1)) (False -> let process_information_4_0 = select _x_2_3::_Tuple3 1, process_handle_4_1::I = _SystemArray.select_11 process_information_4_0 0, _x_4_2 = PmCleanSystem.GetExitCodeProcess process_handle_4_1 (select (PmCleanSystem.WaitForSingleObject process_handle_4_1 -1 (select _x_2_3::_Tuple3 2))::_Tuple2 1) in <{_Tuple3!7}> True (select _x_4_2::_Tuple3 1) (select (PmCleanSystem.CloseHandle process_handle_4_1 (select (PmCleanSystem.CloseHandle (_SystemArray.select_11 process_information_4_0 1) (select (PmCleanSystem.CloseHandle std_error_handle_2_1 (select _x_4_2::_Tuple3 2))::_Tuple2 1))::_Tuple2 1))::_Tuple2 1)) ) (False -> <{_Tuple3!7}> False -1 os_3) 
<{PmCleanSystem.TD;CompilerProcessIds}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;CompileOrCheckSyntax}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;CodeGenerateAsmOrCode}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;CompilerMsg}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;WindowFun}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;ProjectCompilerOptions}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;ThreadId}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;CompilePollCompletedResult}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;CompilingInfo}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;StartedCodeGenerator}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;CompilerProcessHandlesAndId}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;ExitCode}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;CompilerProcess}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;HANDLE}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;LPCTSTR}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;LPSECURITY_ATTRIBUTES}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;LPVOID}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;LPSTARTUPINFO}> _x_0::B = _predefined._Nil
<{PmCleanSystem.TD;LPPROCESS_INFORMATION}> _x_0::B = _predefined._Nil

:: PmCleanSystem.CompileOrCheckSyntax = PmCleanSystem.SyntaxCheck | PmCleanSystem.Compilation
:: PmCleanSystem.CodeGenerateAsmOrCode = PmCleanSystem.AsmGeneration | PmCleanSystem.CodeGeneration
:: PmCleanSystem.CompilerMsg = PmCleanSystem.CompilerOK | PmCleanSystem.SyntaxError | PmCleanSystem.Patherror a1
:: PmCleanSystem.CompilePollCompletedResult = PmCleanSystem.NoFinishedCompiler | PmCleanSystem.UnknownFinishedCompiler | PmCleanSystem.FinishedCompiler !a1::I !a2::I
:: PmCleanSystem.CompilingInfo = PmCleanSystem.NotCompiling | PmCleanSystem.CompilingInfo !a1
:: PmCleanSystem.CompilerProcess = PmCleanSystem.NoCompiler | PmCleanSystem.CompilerProcess !a1::I !a2::I !a3::I

|| Converted Records
:: PmCleanSystem._ProjectCompilerOptions = {!PmCleanSystem.pco_memory_profiling::B, !PmCleanSystem.pco_time_profiling::B, !PmCleanSystem.pco_desc_exl::B, !PmCleanSystem.pco_dynamics::B, !PmCleanSystem.pco_link_dynamic::B}

:: PmCleanSystem._StartedCodeGenerator = {!PmCleanSystem.scg_thread_handle::I, !PmCleanSystem.scg_std_error_handle::I, !PmCleanSystem.scg_abc_path, !PmCleanSystem.scg_path_without_suffix, !PmCleanSystem.scg_errors_file_name}

:: PmCleanSystem._CompilerProcessHandlesAndId = {!PmCleanSystem.compiler_thread_id::I, !PmCleanSystem.compiler_thread_handle::I, !PmCleanSystem.compiler_process_handle::I}

:: <{PmCleanSystem.gEq_s;}> = {!PmCleanSystem.gEq_s}

:: <{PmCleanSystem.gEq_ss;}> = {!PmCleanSystem.gEq_ss}

:: <{PmCleanSystem.gEq_sss;}> = {!PmCleanSystem.gEq_sss}

:: <{PmCleanSystem.gEq_ssss;}> = {!PmCleanSystem.gEq_ssss}

:: <{PmCleanSystem.gEq_sssss;}> = {!PmCleanSystem.gEq_sssss}

:: <{PmCleanSystem.gEq_ssssss;}> = {!PmCleanSystem.gEq_ssssss}

:: <{PmCleanSystem.gEq_sssssss;}> = {!PmCleanSystem.gEq_sssssss}

:: <{PmCleanSystem.gEq_ssssssss;}> = {!PmCleanSystem.gEq_ssssssss}

:: <{PmCleanSystem.gEq_sssssssss;}> = {!PmCleanSystem.gEq_sssssssss}

:: <{PmCleanSystem.bimap_s;}> = {PmCleanSystem.bimap_s}

:: <{PmCleanSystem.bimap_ss;}> = {PmCleanSystem.bimap_ss}

:: <{PmCleanSystem.bimap_sss;}> = {PmCleanSystem.bimap_sss}

