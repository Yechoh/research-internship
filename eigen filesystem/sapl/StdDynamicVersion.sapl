|| ?module? StdDynamicVersion


StdDynamicVersion.DefaultVersion = StdDynamicVersion._Version 0 0
StdDynamicVersion.toVersion !version_0::I = let !version_1_0 = StdDynamicVersion._Version (StdInt.bitand (<{StdInt.>>}> version_0 8) 65535) (StdInt.bitand version_0 255) in version_1_0
StdDynamicVersion.fromVersion::I !_x_0 = case _x_0 (StdDynamicVersion._Version major_1_0 minor_1_1 -> StdInt.bitor (<{StdInt.<<}> major_1_0 8) minor_1_1) 
<{StdDynamicVersion.==_3}>::B !_x_0 !_x_1 = case _x_0 (StdDynamicVersion._Version major1_1_0 minor1_1_1 -> case _x_1 (StdDynamicVersion._Version major2_2_0 minor2_2_1 -> case (<{StdInt.==_16}> major1_1_0 major2_2_0) (True -> <{StdInt.==_16}> minor1_1_1 minor2_2_1) (False -> False) ) ) 
<{StdDynamicVersion.TD;Version}> _x_0::B = _predefined._Nil


|| Converted Records
:: StdDynamicVersion._Version = {!StdDynamicVersion.major::I, !StdDynamicVersion.minor::I}

