|| ?module? PmDirCache


PmDirCache.occurs_in_19::B !<{_v==_0}> !_vList_1 path_2 !_x_3 = case _x_3 (<{_predefined._|Cons}> path_e_1_0 paths_1_1 -> case (select <{_v==_0}>::<{StdOverloaded.==;}> 0 path_2 path_e_1_0) (True -> True) (False -> PmDirCache.occurs_in_19 <{_v==_0}> _vList_1 path_2 paths_1_1) ) (<{_predefined._|Nil}> -> False) 
PmDirCache.occurs_in_99::B !_vList_0 path_1 !_x_2 = case _x_2 (<{_predefined._|Cons}> path_e_1_0 paths_1_1 -> case (<{StdString.==_2}> path_1 path_e_1_0) (True -> True) (False -> PmDirCache.occurs_in_99 _vList_0 path_1 paths_1_1) ) (<{_predefined._|Nil}> -> False) 
PmDirCache.occurs_in_100::B path_0 !_x_1 = case _x_1 (<{_predefined._|Cons}> path_e_1_0 paths_1_1 -> case (<{StdString.==_2}> path_0 path_e_1_0) (True -> True) (False -> PmDirCache.occurs_in_100 path_0 paths_1_1) ) (<{_predefined._|Nil}> -> False) 
PmDirCache.remove_dup_paths_reversed_20 !_x_0 !unique_paths_1 = case _x_0 (<{_predefined._!Cons!}> path_1_0 paths_1_1 -> case (PmDirCache.occurs_in_100 path_1_0 unique_paths_1) (True -> PmDirCache.remove_dup_paths_reversed_20 paths_1_1 unique_paths_1) (False -> PmDirCache.remove_dup_paths_reversed_20 paths_1_1 (_SystemStrictLists._cons_uts_49 path_1_0 unique_paths_1)) ) (<{_predefined._!Nil!}> -> unique_paths_1) 
PmDirCache.u_reverse_21 !_x_0 !r_1 = case _x_0 (<{_predefined._|Nil}> -> r_1) (<{_predefined._|Cons}> e_1_0 l_1_1 -> PmDirCache.u_reverse_21 l_1_1 (_SystemStrictLists._cons_uts_49 e_1_0 r_1)) 
PmDirCache.remove_dup_paths_23 !paths_0 = PmDirCache.u_reverse_21 (PmDirCache.remove_dup_paths_reversed_20 paths_0 (_SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_49 _SystemStrictLists._decons_uts_50))) (_SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_49 _SystemStrictLists._decons_uts_50))
PmDirCache.findPos_26::I !_vArray_0 !<{_v==_1}> c_2 s_3 !i_4::I = case (StdBool.not (<{StdInt.<_17}> i_4 (select _vArray_0::<{_SystemArray.Array;}> 4 s_3))) (True -> <{StdInt.~_15}> 1) (False -> case (select <{_v==_1}>::<{StdOverloaded.==;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 i_4) c_2) (True -> i_4) (False -> PmDirCache.findPos_26 _vArray_0 <{_v==_1}> c_2 s_3 (<{StdInt.+_6}> i_4 StdInt.one_11)) ) 
PmDirCache.winfix_25 !s_0 = case (case (<{StdInt.<_17}> 0 (_SystemArray.size_20 s_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 s_0 (<{StdInt.-_7}> (_SystemArray.size_20 s_0) 1)) ':') (False -> False) ) (True -> <{StdString.+++.}> s_0 "\\") (False -> s_0) 
<{PmDirCache.c;29;29_18}> !_vList_0 !_vList_1 !g_l_2 = <{PmDirCache.g_c1;29;36_112}> g_l_2 _vList_0 _vList_1
<{PmDirCache.g_c1;29;36_112}> !g_l_0 _vList_1 _vList_2 = case g_l_0 (<{_predefined._|Cons}> path_1_0 g_t_1_1 -> select _vList_1::<{_SystemStrictLists.List;}> 0 (PmDirCache.winfix_25 path_1_0) (<{PmDirCache.c;29;29_18}> _vList_1 _vList_2 g_t_1_1)) (_ -> _SystemStrictLists._nil _vList_1)
<{PmDirCache.c;68;17_22}> path_0 !g_l_1 = <{PmDirCache.g_c1;68;81_114}> g_l_1 path_0
<{PmDirCache.g_c1;68;81_114}> !g_l_0 path_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDirCache.g_c2;68;81_113}> g_h_1_0 path_1 g_t_1_1) (_ -> _predefined._Nil)
<{PmDirCache.g_c2;68;81_113}> !g_h_0 path_1 g_t_2 = case g_h_0 (Directory._DirEntry fileName_1_0 _x_1_1 -> case _x_1_1 (Directory._FileInfo _x_2_0 pd_file_2_1 -> case _x_2_0 (Directory._PI_FileInfo fileSize_3_0 lastModified_3_1 isDirectory_3_2 isReadOnly_3_3 -> case (StdBool.not isDirectory_3_2) (True -> _predefined._Cons (_Tuple3 fileName_1_0 path_1 lastModified_3_1) (<{PmDirCache.c;68;17_22}> path_1 g_t_2)) ) ) ) (_ -> <{PmDirCache.c;68;17_22}> path_1 g_t_2)
PmDirCache.setup_24 !_vFileSystem_0 !_vList_1 !_x_2 files_3 = case _x_2 (<{_predefined._|Nil}> -> _Tuple3 _predefined._Nil _predefined._Nil files_3) (<{_predefined._|Cons}> path_1_0 paths_1_1 -> let _x_2_0 = Directory.pd_StringToPath _vFileSystem_0 path_1_0 files_3, _x_2_1 = select _x_2_0::_Tuple2 0 in case (StdBool.not (select _x_2_1::_Tuple2 0)) (True -> let _x_4_0 = PmDirCache.setup_24 _vFileSystem_0 _vList_1 paths_1_1 (select _x_2_0::_Tuple2 1) in _Tuple3 (_predefined._Cons path_1_0 (select _x_4_0::_Tuple3 0)) (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) (False -> let <{path`_4_0}> = select _x_2_1::_Tuple2 1, files_4_1 = select _x_2_0::_Tuple2 1, _x_4_2 = Directory.getDirectoryContents _vFileSystem_0 <{path`_4_0}> files_4_1, _x_4_3 = select _x_4_2::_Tuple2 0 in case (StdBool.not (<{Directory.==_13}> (select _x_4_3::_Tuple2 0) Directory.NoDirError)) (True -> let _x_6_0 = PmDirCache.setup_24 _vFileSystem_0 _vList_1 paths_1_1 (select _x_4_2::_Tuple2 1) in _Tuple3 (_predefined._Cons path_1_0 (select _x_6_0::_Tuple3 0)) (select _x_6_0::_Tuple3 1) (select _x_6_0::_Tuple3 2)) (False -> let _x_6_0 = PmDirCache.setup_24 _vFileSystem_0 _vList_1 paths_1_1 (select _x_4_2::_Tuple2 1) in _Tuple3 (select _x_6_0::_Tuple3 0) (<{StdList.++}> (<{PmDirCache.c;68;17_22}> path_1_0 (select _x_4_3::_Tuple2 1)) (select _x_6_0::_Tuple3 1)) (select _x_6_0::_Tuple3 2)) ) ) 
PmDirCache.anon_27::B !<{_v<_0}> !_x_1 !_x_2 = case _x_1 (_Tuple3 l_1_0 _x_1_1 _x_1_2 -> case _x_2 (_Tuple3 r_2_0 _x_2_1 _x_2_2 -> select <{_v<_0}>::<{StdOverloaded.<;}> 0 l_1_0 r_2_0) ) 
PmDirCache.anon_30::B !<{_v==_0}> l_1 !_x_2 = case _x_2 (_Tuple3 r_1_0 _x_1_1 _x_1_2 -> select <{_v==_0}>::<{StdOverloaded.==;}> 0 l_1 r_1_0) 
PmDirCache.dropWarn_32 f_0 !cons_1 = case cons_1 (_predefined._Cons a_1_0 x_1_1 -> case (f_0 a_1_0) (True -> let _x_3_0 = PmDirCache.dropWarn_32 f_0 x_1_1 in _Tuple2 (_predefined._Cons a_1_0 (select _x_3_0::_Tuple2 0)) (select _x_3_0::_Tuple2 1)) (False -> _Tuple2 _predefined._Nil cons_1) ) (_predefined._Nil -> _Tuple2 _predefined._Nil _predefined._Nil) 
PmDirCache.anon_101::B !l_0 !_x_1 = case _x_1 (_Tuple3 r_1_0 _x_1_1 _x_1_2 -> <{StdString.==_2}> l_0 r_1_0) 
PmDirCache.removedups_31 !_x_0 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> case x_1_0 (_Tuple3 _x_2_0 _x_2_1 _x_2_2 -> case _x_2_0 (".DS_Store" -> PmDirCache.removedups_31 xs_1_1) (_ -> let _x_3_0 = PmDirCache.dropWarn_32 (PmDirCache.anon_101 _x_2_0) xs_1_1, wrn_3_1 = select _x_3_0::_Tuple2 0 in case (StdList.isEmpty wrn_3_1) (True -> let _x_5_0 = PmDirCache.removedups_31 (select _x_3_0::_Tuple2 1) in _Tuple2 (select _x_5_0::_Tuple2 0) (_predefined._Cons x_1_0 (select _x_5_0::_Tuple2 1))) (False -> let _x_5_0 = PmDirCache.removedups_31 (select _x_3_0::_Tuple2 1) in _Tuple2 (_predefined._Cons (PmDirCache.Warn _x_2_0 _x_2_1 wrn_3_1) (select _x_5_0::_Tuple2 0)) (_predefined._Cons x_1_0 (select _x_5_0::_Tuple2 1))) )) ) (_ -> _Tuple2 _predefined._Nil _predefined._Nil)
<{PmDirCache.cu;89;17_29}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_l_3 = <{PmDirCache.g_c1;89;23_115}> g_l_3 _vone_0 <{_v+_1}> c_l_i_2
<{PmDirCache.g_c1;89;23_115}> !g_l_0 _vone_1 <{_v+_2}> c_l_i_3 = case g_l_0 (_predefined._Cons dir_1_0 g_t_1_1 -> <{PmDirCache.cu;89;17_29}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_t_1_1) (_ -> c_l_i_3)
<{PmDirCache.cu;89;17_28}> !_vArray_0 c_a_1 c_i_2::I !g_l_3 = <{PmDirCache.g_c1;89;23_116}> g_l_3 _vArray_0 c_a_1 c_i_2
<{PmDirCache.g_c1;89;23_116}> !g_l_0 _vArray_1 c_a_2 c_i_3::I = case g_l_0 (_predefined._Cons dir_1_0 g_t_1_1 -> <{PmDirCache.cu;89;17_28}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 dir_1_0) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_t_1_1) (_ -> c_a_2)
PmDirCache.anon_102::B !_x_0 !_x_1 = case _x_0 (_Tuple3 l_1_0 _x_1_1 _x_1_2 -> case _x_1 (_Tuple3 r_2_0 _x_2_1 _x_2_2 -> <{StdString.<_3}> l_1_0 r_2_0) ) 
<{PmDirCache.cu;89;17_103}>::I !<{_v+_0}> c_l_i_1::I !g_l_2 = <{PmDirCache.g_c1;89;23_117}> g_l_2 <{_v+_0}> c_l_i_1
<{PmDirCache.g_c1;89;23_117}>::I !g_l_0 <{_v+_1}> c_l_i_2::I = case g_l_0 (_predefined._Cons dir_1_0 g_t_1_1 -> <{PmDirCache.cu;89;17_103}> <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_2 StdInt.one_11) g_t_1_1) (_ -> c_l_i_2)
<{PmDirCache.cu;89;17_104}> !c_a_0 c_i_1::I !g_l_2 = <{PmDirCache.g_c1;89;23_118}> g_l_2 c_a_0 c_i_1
<{PmDirCache.g_c1;89;23_118}> !g_l_0 !c_a_1 c_i_2::I = case g_l_0 (_predefined._Cons dir_1_0 g_t_1_1 -> <{PmDirCache.cu;89;17_104}> (_SystemArray.update_5 c_a_1 c_i_2 dir_1_0) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_t_1_1) (_ -> c_a_1)
<{PmDirCache.cu;89;17_105}>::I !c_l_i_0::I !g_l_1 = <{PmDirCache.g_c1;89;23_119}> g_l_1 c_l_i_0
<{PmDirCache.g_c1;89;23_119}>::I !g_l_0 !c_l_i_1::I = case g_l_0 (_predefined._Cons dir_1_0 g_t_1_1 -> <{PmDirCache.cu;89;17_105}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) g_t_1_1) (_ -> c_l_i_1)
PmDirCache.make_dir_cache !cache_0 = let _x_1_0 = PmDirCache.removedups_31 (StdOrdList.sortBy PmDirCache.anon_102 cache_0), cache_1_1 = select _x_1_0::_Tuple2 1 in <{_Tuple2!3}> (select _x_1_0::_Tuple2 0) (<{PmDirCache.cu;89;17_104}> (_SystemArray._createArray_0 (<{PmDirCache.cu;89;17_105}> 0 cache_1_1)) 0 cache_1_1)
<{PmDirCache.c;29;29_106}> !_vList_0 !g_l_1 = <{PmDirCache.g_c1;29;36_120}> g_l_1 _vList_0
<{PmDirCache.g_c1;29;36_120}> !g_l_0 _vList_1 = case g_l_0 (<{_predefined._|Cons}> path_1_0 g_t_1_1 -> _SystemStrictLists._cons_uts_49 (PmDirCache.winfix_25 path_1_0) (<{PmDirCache.c;29;29_106}> _vList_1 g_t_1_1)) (_ -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_49 _SystemStrictLists._decons_uts_50))
PmDirCache.setup_107 !_vList_0 !_x_1 files_2 = case _x_1 (<{_predefined._|Nil}> -> _Tuple3 _predefined._Nil _predefined._Nil files_2) (<{_predefined._|Cons}> path_1_0 paths_1_1 -> let _x_2_0 = Directory.pd_StringToPath (<{StdFile.FileSystem;}> StdFile.fclose_26 StdFile.fopen_27 StdFile.sfopen_28 StdFile.stdio_29) path_1_0 files_2, _x_2_1 = select _x_2_0::_Tuple2 0 in case (StdBool.not (select _x_2_1::_Tuple2 0)) (True -> let _x_4_0 = PmDirCache.setup_107 _vList_0 paths_1_1 (select _x_2_0::_Tuple2 1) in _Tuple3 (_predefined._Cons path_1_0 (select _x_4_0::_Tuple3 0)) (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) (False -> let <{path`_4_0}> = select _x_2_1::_Tuple2 1, files_4_1 = select _x_2_0::_Tuple2 1, _x_4_2 = Directory.getDirectoryContents (<{StdFile.FileSystem;}> StdFile.fclose_26 StdFile.fopen_27 StdFile.sfopen_28 StdFile.stdio_29) <{path`_4_0}> files_4_1, _x_4_3 = select _x_4_2::_Tuple2 0 in case (StdBool.not (<{Directory.==_13}> (select _x_4_3::_Tuple2 0) Directory.NoDirError)) (True -> let _x_6_0 = PmDirCache.setup_107 _vList_0 paths_1_1 (select _x_4_2::_Tuple2 1) in _Tuple3 (_predefined._Cons path_1_0 (select _x_6_0::_Tuple3 0)) (select _x_6_0::_Tuple3 1) (select _x_6_0::_Tuple3 2)) (False -> let _x_6_0 = PmDirCache.setup_107 _vList_0 paths_1_1 (select _x_4_2::_Tuple2 1) in _Tuple3 (select _x_6_0::_Tuple3 0) (<{StdList.++}> (<{PmDirCache.c;68;17_22}> path_1_0 (select _x_4_3::_Tuple2 1)) (select _x_6_0::_Tuple3 1)) (select _x_6_0::_Tuple3 2)) ) ) 
<{PmDirCache.c;29;29_108}> !g_l_0 = <{PmDirCache.g_c1;29;36_121}> g_l_0
<{PmDirCache.g_c1;29;36_121}> !g_l_0 = case g_l_0 (<{_predefined._|Cons}> path_1_0 g_t_1_1 -> _SystemStrictLists._cons_uts_49 (PmDirCache.winfix_25 path_1_0) (<{PmDirCache.c;29;29_108}> g_t_1_1)) (_ -> _SystemStrictLists._nil (<{_SystemStrictLists.List;}> _SystemStrictLists._cons_uts_49 _SystemStrictLists._decons_uts_50))
PmDirCache.setup_109 !_x_0 files_1 = case _x_0 (<{_predefined._|Nil}> -> _Tuple3 _predefined._Nil _predefined._Nil files_1) (<{_predefined._|Cons}> path_1_0 paths_1_1 -> let _x_2_0 = Directory.pd_StringToPath (<{StdFile.FileSystem;}> StdFile.fclose_26 StdFile.fopen_27 StdFile.sfopen_28 StdFile.stdio_29) path_1_0 files_1, _x_2_1 = select _x_2_0::_Tuple2 0 in case (StdBool.not (select _x_2_1::_Tuple2 0)) (True -> let _x_4_0 = PmDirCache.setup_109 paths_1_1 (select _x_2_0::_Tuple2 1) in _Tuple3 (_predefined._Cons path_1_0 (select _x_4_0::_Tuple3 0)) (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) (False -> let <{path`_4_0}> = select _x_2_1::_Tuple2 1, files_4_1 = select _x_2_0::_Tuple2 1, _x_4_2 = Directory.getDirectoryContents (<{StdFile.FileSystem;}> StdFile.fclose_26 StdFile.fopen_27 StdFile.sfopen_28 StdFile.stdio_29) <{path`_4_0}> files_4_1, _x_4_3 = select _x_4_2::_Tuple2 0 in case (StdBool.not (<{Directory.==_13}> (select _x_4_3::_Tuple2 0) Directory.NoDirError)) (True -> let _x_6_0 = PmDirCache.setup_109 paths_1_1 (select _x_4_2::_Tuple2 1) in _Tuple3 (_predefined._Cons path_1_0 (select _x_6_0::_Tuple3 0)) (select _x_6_0::_Tuple3 1) (select _x_6_0::_Tuple3 2)) (False -> let _x_6_0 = PmDirCache.setup_109 paths_1_1 (select _x_4_2::_Tuple2 1) in _Tuple3 (select _x_6_0::_Tuple3 0) (<{StdList.++}> (<{PmDirCache.c;68;17_22}> path_1_0 (select _x_4_3::_Tuple2 1)) (select _x_6_0::_Tuple3 1)) (select _x_6_0::_Tuple3 2)) ) ) 
PmDirCache.DC_Setup !paths_0 !files_1 = let paths_1_0 = <{PmDirCache.c;29;29_108}> (PmDirCache.remove_dup_paths_23 paths_0), _x_1_1 = PmDirCache.setup_109 paths_1_0 files_1, _x_1_2 = PmDirCache.make_dir_cache (select _x_1_1::_Tuple3 1) in <{_Tuple2!3}> (_Tuple3 (select _x_1_1::_Tuple3 0) (select _x_1_2::_Tuple2 0) (PmDirCache._DirCache (select _x_1_2::_Tuple2 1) (PmDirCache._createArray_91 0) paths_1_0)) (select _x_1_1::_Tuple3 2)
PmDirCache.bin_search_file_40 !left_0::I !right_1::I !mod_2 !cache_3 = case (StdBool.not (<{StdInt.<_17}> left_0 right_1)) (True -> <{_Tuple4!15}> False "" (_Tuple2 (StdLibMisc._Date 0 0 0 0) (StdLibMisc._Time 0 0 0)) cache_3) (False -> let mid_2_0 = <{StdInt.>>}> (<{StdInt.+_6}> left_0 right_1) 1, _x_2_1 = _SystemArray.uselect_6 cache_3 mid_2_0, _x_2_2 = select _x_2_1::_Tuple2 0, n_2_3::I = select _x_2_2::_Tuple3 0 in case (<{StdString.==_2}> mod_2 n_2_3) (True -> <{_Tuple4!15}> True (select _x_2_2::_Tuple3 1) (select _x_2_2::_Tuple3 2) (select _x_2_1::_Tuple2 1)) (False -> case (<{StdString.<_3}> mod_2 n_2_3) (True -> PmDirCache.bin_search_file_40 left_0 mid_2_0 mod_2 (select _x_2_1::_Tuple2 1)) (False -> PmDirCache.bin_search_file_40 (<{StdInt.+_6}> mid_2_0 StdInt.one_11) right_1 mod_2 (select _x_2_1::_Tuple2 1)) ) ) 
PmDirCache.bin_search_file !mod_0 !cache_1 = let _x_1_0 = _SystemArray.usize_7 cache_1 in PmDirCache.bin_search_file_40 0 (select _x_1_0::_Tuple2 0) mod_0 (select _x_1_0::_Tuple2 1)
PmDirCache.DC_Search !mod_0 !dir_cache_1 = case dir_cache_1 (PmDirCache._DirCache cache_1_0 subdirs_1_1 paths_1_2 -> let _x_2_0 = PmDirCache.bin_search_file mod_0 cache_1_0 in <{_Tuple4!15}> (select _x_2_0::_Tuple4 0) (select _x_2_0::_Tuple4 1) (select _x_2_0::_Tuple4 2) (update dir_cache_1::PmDirCache._DirCache [0:select _x_2_0::_Tuple4 3])) 
PmDirCache.find_last_dot_i_35::I !_vArray_0 s_1 !i_2::I = case (StdBool.not (<{StdInt.<_17}> i_2 0)) (True -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_1 i_2) '.') (True -> i_2) (False -> PmDirCache.find_last_dot_i_35 _vArray_0 s_1 (<{StdInt.-_7}> i_2 1)) ) (False -> i_2) 
PmDirCache.find_last_dot_i_110::I s_0 !i_1::I = case (StdBool.not (<{StdInt.<_17}> i_1 0)) (True -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_0 i_1) '.') (True -> i_1) (False -> PmDirCache.find_last_dot_i_110 s_0 (<{StdInt.-_7}> i_1 1)) ) (False -> i_1) 
PmDirCache.find_last_dot_i::I !s_0 = PmDirCache.find_last_dot_i_110 s_0 (<{StdInt.-_7}> (_SystemArray.size_20 s_0) 1)
PmDirCache.bin_search_subdir_41 !left_0::I !right_1::I !subdir_2 !cache_3 = case (StdBool.not (<{StdInt.<_17}> left_0 right_1)) (True -> <{_Tuple3!7}> False right_1 cache_3) (False -> let mid_2_0 = <{StdInt.>>}> (<{StdInt.+_6}> left_0 right_1) 1, _x_2_1 = select (PmDirCache.select_94 cache_3 mid_2_0)::PmDirCache._SubdirElem 0, subdir_name_2_2::I = select _x_2_1::_Tuple2 0 in case (<{StdString.==_2}> subdir_2 subdir_name_2_2) (True -> <{_Tuple3!7}> True mid_2_0 (select _x_2_1::_Tuple2 1)) (False -> case (<{StdString.<_3}> subdir_2 subdir_name_2_2) (True -> PmDirCache.bin_search_subdir_41 left_0 mid_2_0 subdir_2 (select _x_2_1::_Tuple2 1)) (False -> PmDirCache.bin_search_subdir_41 (<{StdInt.+_6}> mid_2_0 StdInt.one_11) right_1 subdir_2 (select _x_2_1::_Tuple2 1)) ) ) 
PmDirCache.bin_search_subdir !subdir_name_0 !subdirs_1 = let _x_1_0 = PmDirCache.usize_98 subdirs_1 in PmDirCache.bin_search_subdir_41 0 (select _x_1_0::_Tuple2 0) subdir_name_0 (select _x_1_0::_Tuple2 1)
PmDirCache.concat_paths !path_0 !subdir_1 = let size_path_1_0::I = _SystemArray.size_20 path_0 in case (case (<{StdInt.<_17}> 0 size_path_1_0) (True -> <{StdChar.==_18}> (_SystemArray.select_19 path_0 (<{StdInt.-_7}> size_path_1_0 1)) '\\') (False -> False) ) (True -> <{StdString.+++_11}> path_0 subdir_1) (False -> <{StdString.+++_11}> path_0 (<{StdString.+++_11}> "\\" subdir_1)) 
<{PmDirCache.c;217;13_36}> path_0 !g_l_1 = <{PmDirCache.g_c1;217;77_123}> g_l_1 path_0
<{PmDirCache.g_c1;217;77_123}> !g_l_0 path_1 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDirCache.g_c2;217;77_122}> g_h_1_0 path_1 g_t_1_1) (_ -> _predefined._Nil)
<{PmDirCache.g_c2;217;77_122}> !g_h_0 path_1 g_t_2 = case g_h_0 (Directory._DirEntry fileName_1_0 _x_1_1 -> case _x_1_1 (Directory._FileInfo _x_2_0 pd_file_2_1 -> case _x_2_0 (Directory._PI_FileInfo fileSize_3_0 lastModified_3_1 isDirectory_3_2 isReadOnly_3_3 -> case (StdBool.not isDirectory_3_2) (True -> _predefined._Cons (_Tuple3 fileName_1_0 path_1 lastModified_3_1) (<{PmDirCache.c;217;13_36}> path_1 g_t_2)) ) ) ) (_ -> <{PmDirCache.c;217;13_36}> path_1 g_t_2)
PmDirCache.setup_h !_x_0 !subdir_1 !files_2 = case _x_0 (<{_predefined._|Nil}> -> <{_Tuple3!7}> _predefined._Nil _predefined._Nil files_2) (<{_predefined._|Cons}> path_1_0 paths_1_1 -> let subdir_path_2_0 = PmDirCache.concat_paths path_1_0 subdir_1, _x_2_1 = Directory.pd_StringToPath (<{StdFile.FileSystem;}> StdFile.fclose_26 StdFile.fopen_27 StdFile.sfopen_28 StdFile.stdio_29) subdir_path_2_0 files_2, _x_2_2 = select _x_2_1::_Tuple2 0 in case (StdBool.not (select _x_2_2::_Tuple2 0)) (True -> let _x_4_0 = PmDirCache.setup_h paths_1_1 subdir_1 (select _x_2_1::_Tuple2 1) in <{_Tuple3!7}> (_predefined._Cons subdir_path_2_0 (select _x_4_0::_Tuple3 0)) (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2)) (False -> let <{path`_4_0}> = select _x_2_2::_Tuple2 1, files_4_1 = select _x_2_1::_Tuple2 1, _x_4_2 = Directory.getDirectoryContents (<{StdFile.FileSystem;}> StdFile.fclose_26 StdFile.fopen_27 StdFile.sfopen_28 StdFile.stdio_29) <{path`_4_0}> files_4_1, _x_4_3 = select _x_4_2::_Tuple2 0 in case (StdBool.not (<{Directory.==_13}> (select _x_4_3::_Tuple2 0) Directory.NoDirError)) (True -> let _x_6_0 = PmDirCache.setup_h paths_1_1 subdir_1 (select _x_4_2::_Tuple2 1) in <{_Tuple3!7}> (_predefined._Cons subdir_path_2_0 (select _x_6_0::_Tuple3 0)) (select _x_6_0::_Tuple3 1) (select _x_6_0::_Tuple3 2)) (False -> let _x_6_0 = PmDirCache.setup_h paths_1_1 subdir_1 (select _x_4_2::_Tuple2 1) in <{_Tuple3!7}> (select _x_6_0::_Tuple3 0) (<{StdList.++}> (<{PmDirCache.c;217;13_36}> path_1_0 (select _x_4_3::_Tuple2 1)) (select _x_6_0::_Tuple3 1)) (select _x_6_0::_Tuple3 2)) ) ) 
<{PmDirCache.cu;226;53_37}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> <{PmDirCache.cu;226;53_37}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (PmDirCache._SubdirElem "" (_SystemArray._createArray_0 0))) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3) (False -> c_a_1) 
PmDirCache.move_begin_elements_38 !i_0::I !max_i_1::I !d_a_2 !s_a_3 = case (<{StdInt.<_17}> i_0 max_i_1) (True -> let _x_2_0 = PmDirCache.replace_93 s_a_3 i_0 (PmDirCache._SubdirElem "" (_SystemArray._createArray_0 0)) in PmDirCache.move_begin_elements_38 (<{StdInt.+_6}> i_0 1) max_i_1 (PmDirCache.update_96 d_a_2 i_0 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (False -> <{_Tuple2!3}> d_a_2 s_a_3) 
PmDirCache.move_end_elements_to_next_39 !i_0::I !d_a_1 !s_a_2 = case (<{StdInt.<_17}> i_0 (PmDirCache.size_95 s_a_2)) (True -> let _x_2_0 = PmDirCache.replace_93 s_a_2 i_0 (PmDirCache._SubdirElem "" (_SystemArray._createArray_0 0)) in PmDirCache.move_end_elements_to_next_39 (<{StdInt.+_6}> i_0 1) (PmDirCache.update_96 d_a_1 (<{StdInt.+_6}> i_0 1) (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1)) (False -> d_a_1) 
<{PmDirCache.cu;226;53_111}> !c_a_0 !c_i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> <{PmDirCache.cu;226;53_111}> (PmDirCache.update_96 c_a_0 c_i_1 (PmDirCache._SubdirElem "" (_SystemArray._createArray_0 0))) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2) (False -> c_a_0) 
PmDirCache.add_subdir !subdir_i_0::I !subdir_name_1 !cache_2 !subdirs_3 = let _x_1_0 = PmDirCache.usize_98 subdirs_3, n_subdirs_1_1::I = select _x_1_0::_Tuple2 0, _x_1_2 = PmDirCache.move_begin_elements_38 0 subdir_i_0 (<{PmDirCache.cu;226;53_111}> (PmDirCache._createArray_91 (<{StdInt.+_6}> n_subdirs_1_1 StdInt.one_11)) 0 n_subdirs_1_1) (select _x_1_0::_Tuple2 1) in PmDirCache.move_end_elements_to_next_39 subdir_i_0 (PmDirCache.update_96 (select _x_1_2::_Tuple2 0) subdir_i_0 (PmDirCache._SubdirElem subdir_name_1 cache_2)) (select _x_1_2::_Tuple2 1)
PmDirCache.DC_HSearch !mod_0 !file_ext_1 !dir_cache_2 !files_3 = case dir_cache_2 (PmDirCache._DirCache cache_1_0 subdirs_1_1 paths_1_2 -> let last_dot_i_2_0::I = PmDirCache.find_last_dot_i mod_0 in case (<{StdInt.<_17}> last_dot_i_2_0 0) (True -> let _x_4_0 = PmDirCache.bin_search_file (<{StdString.+++_11}> mod_0 file_ext_1) cache_1_0 in <{_Tuple5!31}> (select _x_4_0::_Tuple4 0) (select _x_4_0::_Tuple4 1) (select _x_4_0::_Tuple4 2) (update dir_cache_2::PmDirCache._DirCache [0:select _x_4_0::_Tuple4 3]) files_3) (False -> let _x_4_0 = PmPath.subdir_and_file_name_of_hmodule_name last_dot_i_2_0 mod_0 file_ext_1, subdir_name_4_1 = select _x_4_0::_Tuple2 0, _x_4_2 = PmDirCache.bin_search_subdir subdir_name_4_1 subdirs_1_1 in case (select _x_4_2::_Tuple3 0) (True -> let subdir_i_6_0 = select _x_4_2::_Tuple3 1, _x_6_1 = PmDirCache.uselect_97 (select _x_4_2::_Tuple3 2) subdir_i_6_0, subdir_6_2 = select _x_6_1::_Tuple2 0, _x_6_3::I = PmDirCache.bin_search_file (select _x_4_0::_Tuple2 1) (select subdir_6_2::PmDirCache._SubdirElem 1) in <{_Tuple5!31}> (select _x_6_3::_Tuple4 0) (select _x_6_3::_Tuple4 1) (select _x_6_3::_Tuple4 2) (update dir_cache_2::PmDirCache._DirCache [1:PmDirCache.update_96 (select _x_6_1::_Tuple2 1) subdir_i_6_0 (update subdir_6_2::PmDirCache._SubdirElem [1:select _x_6_3::_Tuple4 3])]) files_3) (False -> let _x_6_0 = PmDirCache.setup_h paths_1_2 subdir_name_4_1 files_3, _x_6_1 = PmDirCache.bin_search_file (select _x_4_0::_Tuple2 1) (select (PmDirCache.make_dir_cache (select _x_6_0::_Tuple3 1))::_Tuple2 1) in <{_Tuple5!31}> (select _x_6_1::_Tuple4 0) (select _x_6_1::_Tuple4 1) (select _x_6_1::_Tuple4 2) (update dir_cache_2::PmDirCache._DirCache [1:PmDirCache.add_subdir (select _x_4_2::_Tuple3 1) subdir_name_4_1 (select _x_6_1::_Tuple4 3) (select _x_4_2::_Tuple3 2)]) (select _x_6_0::_Tuple3 2)) ) ) 
PmDirCache.copy_34 !num_0::I !new_1 !old_2 !newbegin_3::I !oldbegin_4::I = case (StdBool.not (<{StdInt.<_17}> 0 num_0)) (True -> <{_Tuple2!3}> new_1 old_2) (False -> let _x_2_0 = _SystemArray.uselect_6 old_2 oldbegin_4 in PmDirCache.copy_34 (<{StdInt.-_7}> num_0 StdInt.one_11) (_SystemArray.update_5 new_1 newbegin_3 (select _x_2_0::_Tuple2 0)) (select _x_2_0::_Tuple2 1) (<{StdInt.+_6}> newbegin_3 StdInt.one_11) (<{StdInt.+_6}> oldbegin_4 StdInt.one_11)) 
PmDirCache.binsearch_33 <{m`_0}> <{p`_1}> <{n`_2}> !left_3::I !right_4::I !max_5::I !cache_6 = case (StdBool.not (<{StdInt.<_17}> left_3 right_4)) (True -> let _x_2_0 = PmDirCache.copy_34 (<{StdInt.-_7}> right_4 StdInt.one_11) (_SystemArray.createArray_1 (<{StdInt.+_6}> max_5 StdInt.one_11) (_Tuple3 <{n`_2}> <{p`_1}> <{m`_0}>)) cache_6 0 0 in select (PmDirCache.copy_34 (<{StdInt.-_7}> max_5 right_4) (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1) (<{StdInt.+_6}> right_4 StdInt.one_11) right_4)::_Tuple2 0) (False -> let mid_2_0 = <{StdInt.>>}> (<{StdInt.+_6}> left_3 right_4) 1, _x_2_1 = _SystemArray.uselect_6 cache_6 mid_2_0, _x_2_2 = select _x_2_1::_Tuple2 0, n_2_3::I = select _x_2_2::_Tuple3 0 in case (<{StdString.==_2}> <{n`_2}> n_2_3) (True -> _SystemArray.update_5 (select _x_2_1::_Tuple2 1) mid_2_0 (_Tuple3 <{n`_2}> <{p`_1}> <{m`_0}>)) (False -> case (<{StdString.<_3}> <{n`_2}> n_2_3) (True -> PmDirCache.binsearch_33 <{m`_0}> <{p`_1}> <{n`_2}> left_3 mid_2_0 max_5 (select _x_2_1::_Tuple2 1)) (False -> PmDirCache.binsearch_33 <{m`_0}> <{p`_1}> <{n`_2}> (<{StdInt.+_6}> mid_2_0 StdInt.one_11) right_4 max_5 (select _x_2_1::_Tuple2 1)) ) ) 
PmDirCache.update_dir_cache !_x_0 !cache_1 = case _x_0 (_Tuple3 n`_1_0 p`_1_1 m`_1_2 -> let _x_2_0::I = _SystemArray.usize_7 cache_1, maxi_2_1 = select _x_2_0::_Tuple2 0 in PmDirCache.binsearch_33 <{m`_1_2}> <{p`_1_1}> <{n`_1_0}> 0 maxi_2_1 maxi_2_1 (select _x_2_0::_Tuple2 1)) 
PmDirCache.DC_Update !_x_0 !dir_cache_1 = case _x_0 (_Tuple3 n`_1_0 p`_1_1 m`_1_2 -> case dir_cache_1 (PmDirCache._DirCache cache_2_0 subdirs_2_1 paths_2_2 -> update dir_cache_1::PmDirCache._DirCache [0:PmDirCache.update_dir_cache (_Tuple3 <{n`_1_0}> <{p`_1_1}> <{m`_1_2}>) cache_2_0]) ) 
PmDirCache.DC_HUpdate !_x_0 !file_ext_1 !dir_cache_2 !files_3 = case _x_0 (_Tuple3 n`_1_0 p`_1_1 m`_1_2 -> case dir_cache_2 (PmDirCache._DirCache cache_2_0 subdirs_2_1 paths_2_2 -> let last_dot_i_3_0::I = PmDirCache.find_last_dot_i <{n`_1_0}> in case (<{StdInt.<_17}> last_dot_i_3_0 0) (True -> <{_Tuple2!3}> (update dir_cache_2::PmDirCache._DirCache [0:PmDirCache.update_dir_cache (_Tuple3 <{n`_1_0}> <{p`_1_1}> <{m`_1_2}>) cache_2_0]) files_3) (False -> let _x_5_0 = PmPath.subdir_and_file_name_of_hmodule_name last_dot_i_3_0 <{n`_1_0}> file_ext_1, subdir_name_5_1 = select _x_5_0::_Tuple2 0, _x_5_2 = PmDirCache.bin_search_subdir subdir_name_5_1 subdirs_2_1 in case (select _x_5_2::_Tuple3 0) (True -> let subdir_i_7_0 = select _x_5_2::_Tuple3 1, _x_7_1 = PmDirCache.uselect_97 (select _x_5_2::_Tuple3 2) subdir_i_7_0, subdir_7_2::I = select _x_7_1::_Tuple2 0 in <{_Tuple2!3}> (update dir_cache_2::PmDirCache._DirCache [1:PmDirCache.update_96 (select _x_7_1::_Tuple2 1) subdir_i_7_0 (update subdir_7_2::PmDirCache._SubdirElem [1:PmDirCache.update_dir_cache (_Tuple3 <{n`_1_0}> <{p`_1_1}> <{m`_1_2}>) (select subdir_7_2::PmDirCache._SubdirElem 1)])]) files_3) (False -> let _x_7_0 = PmDirCache.setup_h paths_2_2 subdir_name_5_1 files_3 in <{_Tuple2!3}> (update dir_cache_2::PmDirCache._DirCache [1:PmDirCache.add_subdir (select _x_5_2::_Tuple3 1) subdir_name_5_1 (PmDirCache.update_dir_cache (_Tuple3 <{n`_1_0}> <{p`_1_1}> <{m`_1_2}>) (select (PmDirCache.make_dir_cache (select _x_7_0::_Tuple3 1))::_Tuple2 1)) (select _x_5_2::_Tuple3 2)]) (select _x_7_0::_Tuple3 2)) ) ) ) 
PmDirCache.SearchDisk2 !modname_0 !_x_1 !files_2 = case _x_1 (<{_predefined._!Nil!}> -> <{_Tuple2!3}> (_Tuple2 False "") files_2) (<{_predefined._!Cons!}> dir_1_0 rest_1_1 -> let dir_modname1_2_0 = StdPathname.MakeFullPathname dir_1_0 modname_0, _x_2_1 = UtilIO.FExists dir_modname1_2_0 files_2 in case (select _x_2_1::_Tuple2 0) (True -> <{_Tuple2!3}> (_Tuple2 True dir_modname1_2_0) (select _x_2_1::_Tuple2 1)) (False -> PmDirCache.SearchDisk2 modname_0 rest_1_1 (select _x_2_1::_Tuple2 1)) ) 
PmDirCache.SearchDisk !modname_0 !dirs_1 !files_2 = PmDirCache.SearchDisk2 modname_0 dirs_1 files_2
PmDirCache.anon_42 !subdir_name_0 !dir_1 = PmDirCache.concat_paths dir_1 subdir_name_0
PmDirCache.FindHModule !module_name_0 !file_ext_1 !dirs_2 !files_3 = let last_dot_i_1_0::I = PmDirCache.find_last_dot_i module_name_0 in case (<{StdInt.<_17}> last_dot_i_1_0 0) (True -> PmDirCache.SearchDisk2 (<{StdString.+++_11}> module_name_0 file_ext_1) dirs_2 files_3) (False -> let _x_3_0 = PmPath.subdir_and_file_name_of_hmodule_name last_dot_i_1_0 module_name_0 file_ext_1 in PmDirCache.SearchDisk2 (select _x_3_0::_Tuple2 1) (UtilStrictLists.Map (PmDirCache.anon_42 (select _x_3_0::_Tuple2 0)) dirs_2) files_3) 
<{PmDirCache.TD;DirCache}> _x_0::B = _predefined._Nil
<{PmDirCache.TD;Warn}> _x_0::B = _predefined._Nil
<{PmDirCache.TD;DirCacheElem}> _x_0::B = _predefined._Nil
<{PmDirCache.TD;SimpleDirCache}> _x_0::B = _predefined._Nil
<{PmDirCache.TD;SubdirElem}> _x_0::B = _predefined._Nil
<{PmDirCache.TD;SubdirCache}> _x_0::B = _predefined._Nil

:: PmDirCache.Warn = PmDirCache.Warn a1 a2 a3

|| Converted Records
:: PmDirCache._DirCache = {!PmDirCache.root, !PmDirCache.subdirs, !PmDirCache.paths}

:: PmDirCache._SubdirElem = {!PmDirCache.subdir_name, !PmDirCache.subdir_cache}

:: <{PmDirCache.gEq_s;}> = {!PmDirCache.gEq_s}

:: <{PmDirCache.gEq_ss;}> = {!PmDirCache.gEq_ss}

:: <{PmDirCache.gEq_sss;}> = {!PmDirCache.gEq_sss}

:: <{PmDirCache.gEq_ssss;}> = {!PmDirCache.gEq_ssss}

:: <{PmDirCache.gEq_sssss;}> = {!PmDirCache.gEq_sssss}

:: <{PmDirCache.gEq_ssssss;}> = {!PmDirCache.gEq_ssssss}

:: <{PmDirCache.gEq_sssssss;}> = {!PmDirCache.gEq_sssssss}

:: <{PmDirCache.gEq_ssssssss;}> = {!PmDirCache.gEq_ssssssss}

:: <{PmDirCache.gEq_sssssssss;}> = {!PmDirCache.gEq_sssssssss}

:: <{PmDirCache.bimap_s;}> = {PmDirCache.bimap_s}

:: <{PmDirCache.bimap_ss;}> = {PmDirCache.bimap_ss}

:: <{PmDirCache.bimap_sss;}> = {PmDirCache.bimap_sss}

