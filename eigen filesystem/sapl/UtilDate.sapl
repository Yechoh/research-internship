|| ?module? UtilDate


UtilDate.Older_IntList_4::B !_x_0 !_x_1 = case _x_0 (_predefined._Nil -> case _x_1 (_predefined._Nil -> False) ) (_predefined._Cons h1_1_0 t1_1_1 -> case _x_1 (_predefined._Cons h2_2_0 t2_2_1 -> case (<{StdInt.<_17}> h1_1_0 h2_2_0) (True -> True) (False -> case (<{StdInt.<_17}> h2_2_0 h1_1_0) (True -> False) (False -> UtilDate.Older_IntList_4 t1_1_1 t2_2_1) ) ) ) 
UtilDate.Older_Date::B !_x_0 !_x_1 = case _x_0 (UtilDate._DATE b1_1_0 yy1_1_1 mm1_1_2 dd1_1_3 h1_1_4 m1_1_5 s1_1_6 -> case _x_1 (UtilDate._DATE b2_2_0 yy2_2_1 mm2_2_2 dd2_2_3 h2_2_4 m2_2_5 s2_2_6 -> case (case b1_1_0 (True -> StdBool.not b2_2_0) (False -> False) ) (True -> True) (False -> case (case (StdBool.not b1_1_0) (True -> True) (False -> StdBool.not b2_2_0) ) (True -> False) (False -> UtilDate.Older_IntList_4 (_predefined._Cons yy1_1_1 (_predefined._Cons mm1_1_2 (_predefined._Cons dd1_1_3 (_predefined._Cons h1_1_4 (_predefined._Cons m1_1_5 (_predefined._Cons s1_1_6 _predefined._Nil)))))) (_predefined._Cons yy2_2_1 (_predefined._Cons mm2_2_2 (_predefined._Cons dd2_2_3 (_predefined._Cons h2_2_4 (_predefined._Cons m2_2_5 (_predefined._Cons s2_2_6 _predefined._Nil))))))) ) ) ) 
UtilDate.StringToInt2_7::I !acc_0::I !fro_1::I !to_2::I !str_3 = case (StdBool.not (<{StdInt.<_17}> fro_1 to_2)) (True -> acc_0) (False -> let cur_2_0::C = _SystemArray.select_19 str_3 fro_1 in case (StdChar.isDigit cur_2_0) (True -> UtilDate.StringToInt2_7 (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.*_9}> 10 acc_0) (StdInt.toInt_20 cur_2_0)) (StdInt.toInt_20 '0')) (<{StdInt.+_6}> fro_1 StdInt.one_11) to_2 str_3) (False -> acc_0) ) 
UtilDate.SubStringToInt_6::I !fro_0::I !to_1::I !string_2 = UtilDate.StringToInt2_7 0 fro_0 to_1 string_2
UtilDate.FindSpace_8::I !i_0::I !len_1::I !str_2 = case (case (StdBool.not (<{StdInt.<_17}> i_0 len_1)) (True -> True) (False -> <{StdChar.==_18}> (_SystemArray.select_19 str_2 i_0) ' ') ) (True -> i_0) (False -> UtilDate.FindSpace_8 (<{StdInt.+_6}> i_0 StdInt.one_11) len_1 str_2) 
UtilDate.SkipSpaces_9::I !i_0::I !len_1::I !str_2 = case (case (StdBool.not (<{StdInt.<_17}> i_0 len_1)) (True -> True) (False -> StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 str_2 i_0) ' ')) ) (True -> i_0) (False -> UtilDate.SkipSpaces_9 (<{StdInt.+_6}> i_0 StdInt.one_11) len_1 str_2) 
UtilDate.ConvertToDate_5 !str_0 = let colpos_1_0::I = 0, strlen_1_1::I = _SystemArray.size_20 str_0 in case (StdBool.not (<{StdInt.<_17}> colpos_1_0 strlen_1_1)) (True -> UtilDate._DATE False 0 0 0 0 0 0) (False -> let first_3_0::I = _SystemArray.select_19 str_0 colpos_1_0, yypos_3_1::I = UtilDate.SkipSpaces_9 (UtilDate.FindSpace_8 colpos_1_0 strlen_1_1 str_0) strlen_1_1 str_0, mmpos_3_2::I = UtilDate.SkipSpaces_9 (UtilDate.FindSpace_8 yypos_3_1 strlen_1_1 str_0) strlen_1_1 str_0, ddpos_3_3::I = UtilDate.SkipSpaces_9 (UtilDate.FindSpace_8 mmpos_3_2 strlen_1_1 str_0) strlen_1_1 str_0, hpos_3_4::I = UtilDate.SkipSpaces_9 (UtilDate.FindSpace_8 ddpos_3_3 strlen_1_1 str_0) strlen_1_1 str_0, mpos_3_5::I = UtilDate.SkipSpaces_9 (UtilDate.FindSpace_8 hpos_3_4 strlen_1_1 str_0) strlen_1_1 str_0, spos_3_6::C = UtilDate.SkipSpaces_9 (UtilDate.FindSpace_8 mpos_3_5 strlen_1_1 str_0) strlen_1_1 str_0 in UtilDate._DATE (UtilDate._f13_13 (<{StdChar.==_18}> first_3_0 'y') first_3_0) (UtilDate.SubStringToInt_6 yypos_3_1 mmpos_3_2 str_0) (UtilDate.SubStringToInt_6 mmpos_3_2 ddpos_3_3 str_0) (UtilDate.SubStringToInt_6 ddpos_3_3 hpos_3_4 str_0) (UtilDate.SubStringToInt_6 hpos_3_4 mpos_3_5 str_0) (UtilDate.SubStringToInt_6 mpos_3_5 spos_3_6 str_0) (UtilDate.SubStringToInt_6 spos_3_6 strlen_1_1 str_0)) 
UtilDate._f13_13::B !_x_0::B first_1::C = case _x_0 (True -> True) (_ -> <{StdChar.==_18}> first_1 'Y')
UtilDate.fromString_1 !string_0 = UtilDate.ConvertToDate_5 string_0
UtilDate.BoolToAnswer_11 !_x_0::B = case _x_0 (False -> "No") (_ -> "Yes")
UtilDate.DateToString_10 !_x_0 = case _x_0 (UtilDate._DATE exists_1_0 yy_1_1 mm_1_2 dd_1_3 h_1_4 m_1_5 s_1_6 -> <{StdString.+++_11}> (UtilDate.BoolToAnswer_11 exists_1_0) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_5 yy_1_1) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_5 mm_1_2) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_5 dd_1_3) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_5 h_1_4) (<{StdString.+++_11}> " " (<{StdString.+++_11}> (StdString.toString_5 m_1_5) (<{StdString.+++_11}> " " (StdString.toString_5 s_1_6))))))))))))) 
UtilDate.toString_2 !date_0 = UtilDate.DateToString_10 date_0
<{UtilDate.TD;DATE}> _x_0::B = _predefined._Nil


|| Converted Records
:: UtilDate._DATE = {!UtilDate.exists::B, !UtilDate.yy::I, !UtilDate.mm::I, !UtilDate.dd::I, !UtilDate.h::I, !UtilDate.m::I, !UtilDate.s::I}

