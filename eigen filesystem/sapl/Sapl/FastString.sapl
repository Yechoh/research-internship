|| ?module? Sapl.FastString


Sapl.FastString.skipChars::I !line_0 !start_1::I f_2 = case (<{StdInt.==_16}> start_1 (_SystemArray.size_20 line_0)) (True -> _SystemArray.size_20 line_0) (False -> let !c_2_0::C = _SystemArray.select_19 line_0 start_1 in case (f_2 c_2_0) (True -> Sapl.FastString.skipChars line_0 (<{StdInt.+_6}> start_1 1) f_2) (False -> start_1) ) 
Sapl.FastString.startsWith__7::B !_vArray_0 !_vArray_1 !<{_v==_2}> start_3 str_4 !_x_5::I = case _x_5 (-1 -> True) (_ -> case (select <{_v==_2}>::<{StdOverloaded.==;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 start_3 _x_5) (select _vArray_1::<{_SystemArray.Array;}> 3 str_4 _x_5)) (True -> Sapl.FastString.startsWith__7 _vArray_0 _vArray_1 <{_v==_2}> start_3 str_4 (<{StdInt.-_7}> _x_5 1)) (False -> False) )
Sapl.FastString.startsWith__11::B !_vArray_0 !<{_v==_1}> start_2 str_3 !_x_4::I = case _x_4 (-1 -> True) (_ -> case (select <{_v==_1}>::<{StdOverloaded.==;}> 0 (_SystemArray.select_19 start_2 _x_4) (select _vArray_0::<{_SystemArray.Array;}> 3 str_3 _x_4)) (True -> Sapl.FastString.startsWith__11 _vArray_0 <{_v==_1}> start_2 str_3 (<{StdInt.-_7}> _x_4 1)) (False -> False) )
Sapl.FastString.startsWith__12::B !<{_v==_0}> start_1 str_2 !_x_3::I = case _x_3 (-1 -> True) (_ -> case (select <{_v==_0}>::<{StdOverloaded.==;}> 0 (_SystemArray.select_19 start_1 _x_3) (_SystemArray.select_19 str_2 _x_3)) (True -> Sapl.FastString.startsWith__12 <{_v==_0}> start_1 str_2 (<{StdInt.-_7}> _x_3 1)) (False -> False) )
Sapl.FastString.startsWith__13::B start_0 str_1 !_x_2::I = case _x_2 (-1 -> True) (_ -> case (<{StdChar.==_18}> (_SystemArray.select_19 start_0 _x_2) (_SystemArray.select_19 str_1 _x_2)) (True -> Sapl.FastString.startsWith__13 start_0 str_1 (<{StdInt.-_7}> _x_2 1)) (False -> False) )
Sapl.FastString.startsWith::B !start_0 !str_1 = case (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_20 str_1) (_SystemArray.size_20 start_0))) (True -> Sapl.FastString.startsWith__13 start_0 str_1 (<{StdInt.-_7}> (_SystemArray.size_20 start_0) 1)) (False -> False) 
Sapl.FastString.endsWith__8::B !_vArray_0 !_vArray_1 !<{_v==_2}> end_3 str_4 !_x_5::I _x_6::I = case _x_5 (-1 -> True) (_ -> case (select <{_v==_2}>::<{StdOverloaded.==;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 end_3 _x_5) (select _vArray_1::<{_SystemArray.Array;}> 3 str_4 _x_6)) (True -> Sapl.FastString.endsWith__8 _vArray_0 _vArray_1 <{_v==_2}> end_3 str_4 (<{StdInt.-_7}> _x_5 1) (<{StdInt.-_7}> _x_6 1)) (False -> False) )
Sapl.FastString.endsWith__14::B !_vArray_0 !<{_v==_1}> end_2 str_3 !_x_4::I _x_5::I = case _x_4 (-1 -> True) (_ -> case (select <{_v==_1}>::<{StdOverloaded.==;}> 0 (_SystemArray.select_19 end_2 _x_4) (select _vArray_0::<{_SystemArray.Array;}> 3 str_3 _x_5)) (True -> Sapl.FastString.endsWith__14 _vArray_0 <{_v==_1}> end_2 str_3 (<{StdInt.-_7}> _x_4 1) (<{StdInt.-_7}> _x_5 1)) (False -> False) )
Sapl.FastString.endsWith__15::B !<{_v==_0}> end_1 str_2 !_x_3::I _x_4::I = case _x_3 (-1 -> True) (_ -> case (select <{_v==_0}>::<{StdOverloaded.==;}> 0 (_SystemArray.select_19 end_1 _x_3) (_SystemArray.select_19 str_2 _x_4)) (True -> Sapl.FastString.endsWith__15 <{_v==_0}> end_1 str_2 (<{StdInt.-_7}> _x_3 1) (<{StdInt.-_7}> _x_4 1)) (False -> False) )
Sapl.FastString.endsWith__16::B end_0 str_1 !_x_2::I _x_3::I = case _x_2 (-1 -> True) (_ -> case (<{StdChar.==_18}> (_SystemArray.select_19 end_0 _x_2) (_SystemArray.select_19 str_1 _x_3)) (True -> Sapl.FastString.endsWith__16 end_0 str_1 (<{StdInt.-_7}> _x_2 1) (<{StdInt.-_7}> _x_3 1)) (False -> False) )
Sapl.FastString.endsWith::B !end_0 !str_1 = case (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_20 str_1) (_SystemArray.size_20 end_0))) (True -> Sapl.FastString.endsWith__16 end_0 str_1 (<{StdInt.-_7}> (_SystemArray.size_20 end_0) 1) (<{StdInt.-_7}> (_SystemArray.size_20 str_1) 1)) (False -> False) 
Sapl.FastString.charIndex !s_0 !i_1::I !char_2::C = case (<{StdInt.<_17}> i_1 (_SystemArray.size_20 s_0)) (True -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_0 i_1) char_2) (True -> <{_Tuple2!3}> True i_1) (False -> Sapl.FastString.charIndex s_0 (<{StdInt.+_6}> i_1 1) char_2) ) (False -> case (<{StdInt.==_16}> i_1 (_SystemArray.size_20 s_0)) (True -> <{_Tuple2!3}> False (_SystemArray.size_20 s_0)) (False -> StdMisc.abort "CharIndex: index out of range") ) 
Sapl.FastString.charIndexBackwards !s_0 !i_1::I !char_2::C = case (<{StdInt.==_16}> i_1 -1) (True -> <{_Tuple2!3}> False (_SystemArray.size_20 s_0)) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_0 i_1) char_2) (True -> <{_Tuple2!3}> True i_1) (False -> Sapl.FastString.charIndexBackwards s_0 (<{StdInt.-_7}> i_1 1) char_2) ) 
Sapl.FastString.match_at_9::B !_vArray_0 !_vArray_1 !<{_v==_2}> s2_3 s1_4 !i1_5::I !i2_6::I = case (<{StdInt.<_17}> i1_5 (select _vArray_0::<{_SystemArray.Array;}> 4 s1_4)) (True -> case (select <{_v==_2}>::<{StdOverloaded.==;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s1_4 i1_5) (select _vArray_1::<{_SystemArray.Array;}> 3 s2_3 i2_6)) (True -> Sapl.FastString.match_at_9 _vArray_0 _vArray_1 <{_v==_2}> s2_3 s1_4 (<{StdInt.+_6}> i1_5 1) (<{StdInt.+_6}> i2_6 1)) (False -> False) ) (False -> True) 
Sapl.FastString.match_at_17::B !_vArray_0 !<{_v==_1}> s2_2 !s1_3 !i1_4::I !i2_5::I = case (<{StdInt.<_17}> i1_4 (_SystemArray.size_20 s1_3)) (True -> case (select <{_v==_1}>::<{StdOverloaded.==;}> 0 (_SystemArray.select_19 s1_3 i1_4) (select _vArray_0::<{_SystemArray.Array;}> 3 s2_2 i2_5)) (True -> Sapl.FastString.match_at_17 _vArray_0 <{_v==_1}> s2_2 s1_3 (<{StdInt.+_6}> i1_4 1) (<{StdInt.+_6}> i2_5 1)) (False -> False) ) (False -> True) 
Sapl.FastString.match_at_18::B !<{_v==_0}> s2_1 !s1_2 !i1_3::I !i2_4::I = case (<{StdInt.<_17}> i1_3 (_SystemArray.size_20 s1_2)) (True -> case (select <{_v==_0}>::<{StdOverloaded.==;}> 0 (_SystemArray.select_19 s1_2 i1_3) (_SystemArray.select_19 s2_1 i2_4)) (True -> Sapl.FastString.match_at_18 <{_v==_0}> s2_1 s1_2 (<{StdInt.+_6}> i1_3 1) (<{StdInt.+_6}> i2_4 1)) (False -> False) ) (False -> True) 
Sapl.FastString.match_at_19::B s2_0 !s1_1 !i1_2::I !i2_3::I = case (<{StdInt.<_17}> i1_2 (_SystemArray.size_20 s1_1)) (True -> case (<{StdChar.==_18}> (_SystemArray.select_19 s1_1 i1_2) (_SystemArray.select_19 s2_0 i2_3)) (True -> Sapl.FastString.match_at_19 s2_0 s1_1 (<{StdInt.+_6}> i1_2 1) (<{StdInt.+_6}> i2_3 1)) (False -> False) ) (False -> True) 
Sapl.FastString.matchAt::B !s1_0 !s2_1 !p_2::I = case (StdBool.not (<{StdInt.<_17}> (_SystemArray.size_20 s2_1) (<{StdInt.+_6}> (_SystemArray.size_20 s1_0) p_2))) (True -> Sapl.FastString.match_at_19 s2_1 s1_0 0 p_2) (False -> False) 
Sapl.FastString.count_10::I chr_0::C !_x_1::I !n_chars_2::I !str_3 = case _x_1 (-1 -> n_chars_2) (_ -> case (<{StdChar.==_18}> (_SystemArray.select_19 str_3 _x_1) chr_0) (True -> Sapl.FastString.count_10 chr_0 (<{StdInt.-_7}> _x_1 1) (<{StdInt.+_6}> n_chars_2 1) str_3) (False -> n_chars_2) )
Sapl.FastString.countCharBackwards::I !chr_0::C !str_1 = Sapl.FastString.count_10 chr_0 (<{StdInt.-_7}> (_SystemArray.size_20 str_1) 1) 0 str_1


|| Converted Records
