|| ?module? Data.Either


Data.Either.either f_0 _x_1 !_x_2 = case _x_2 (Data.Either.Left x_1_0 -> f_0 x_1_0) (Data.Either.Right y_1_0 -> _x_1 y_1_0) 
Data.Either.fmap_1 f_0 !_x_1 = case _x_1 (Data.Either.Left l_1_0 -> Data.Either.Left l_1_0) (Data.Either.Right r_1_0 -> Data.Either.Right (f_0 r_1_0)) 
<{Data.Either.<*>_2}> !_x_0 _x_1 = case _x_0 (Data.Either.Left e_1_0 -> Data.Either.Left e_1_0) (Data.Either.Right f_1_0 -> Data.Either.fmap_1 f_1_0 _x_1) 
Data.Either.pure_3 x_0 = Data.Either.Right x_0
Data.Either.bind_4 !_x_0 _x_1 = case _x_0 (Data.Either.Left l_1_0 -> Data.Either.Left l_1_0) (Data.Either.Right r_1_0 -> _x_1 r_1_0) 
<{Data.Either.TD;Either}> _x_0::B = _predefined._Nil

:: Data.Either.Either = Data.Either.Left a1 | Data.Either.Right a1

|| Converted Records
:: <{Data.Either.gEq_s;}> = {!Data.Either.gEq_s}

:: <{Data.Either.gEq_ss;}> = {!Data.Either.gEq_ss}

:: <{Data.Either.gEq_sss;}> = {!Data.Either.gEq_sss}

:: <{Data.Either.gEq_ssss;}> = {!Data.Either.gEq_ssss}

:: <{Data.Either.gEq_sssss;}> = {!Data.Either.gEq_sssss}

:: <{Data.Either.gEq_ssssss;}> = {!Data.Either.gEq_ssssss}

:: <{Data.Either.gEq_sssssss;}> = {!Data.Either.gEq_sssssss}

:: <{Data.Either.gEq_ssssssss;}> = {!Data.Either.gEq_ssssssss}

:: <{Data.Either.gEq_sssssssss;}> = {!Data.Either.gEq_sssssssss}

:: <{Data.Either.bimap_s;}> = {Data.Either.bimap_s}

:: <{Data.Either.bimap_ss;}> = {Data.Either.bimap_ss}

:: <{Data.Either.bimap_sss;}> = {Data.Either.bimap_sss}

