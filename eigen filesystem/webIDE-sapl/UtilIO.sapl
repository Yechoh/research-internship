|| ?module? UtilIO


UtilIO.WinLaunchApp2 !_x_0 !_x_1 !_x_2::B !_x_3::I = error "no AnyCodeExpr"
UtilIO.LaunchApplication !execpath_0 !homepath_1 !console_2::B !files_3 = <{_Tuple2!3}> (select (UtilIO.WinLaunchApp2 execpath_0 homepath_1 console_2 42)::_Tuple2 0) files_3
UtilIO.WinLaunchApp !_x_0 !_x_1::B !_x_2::I = error "no AnyCodeExpr"
<{UtilIO.LaunchApplication`}> !execpath_0 !console_1::B !files_2 = <{_Tuple2!3}> (select (UtilIO.WinLaunchApp execpath_0 console_1 42)::_Tuple2 0) files_2
UtilIO.WinFileExists::B !_x_0 = error "no AnyCodeExpr"
UtilIO.FExists !name_0 !files_1 = <{_Tuple2!3}> (UtilIO.WinFileExists name_0) files_1
UtilIO.WinFileModifiedDate !_x_0 = error "no AnyCodeExpr"
UtilIO.FModified !name_0 !files_1 = let _x_1_0 = UtilIO.WinFileModifiedDate name_0 in <{_Tuple2!3}> (UtilDate._DATE (select _x_1_0::_Tuple7 0) (select _x_1_0::_Tuple7 1) (select _x_1_0::_Tuple7 2) (select _x_1_0::_Tuple7 3) (select _x_1_0::_Tuple7 4) (select _x_1_0::_Tuple7 5) (select _x_1_0::_Tuple7 6)) files_1
UtilIO.find_last_backslash_in_string !_vArray_0 !i_1::I s_2 = case (<{StdInt.<_17}> i_1 0) (True -> _Tuple2 False -1) (False -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 i_1) '\\') (True -> _Tuple2 True i_1) (False -> UtilIO.find_last_backslash_in_string _vArray_0 (<{StdInt.-_7}> i_1 1) s_2) ) 
UtilIO.FindFirstFile_::I !file_name_0 !find_data_1 = error "no AnyCodeExpr"
UtilIO.FindFirstFile !file_name_0 = let find_data_1_0 = _SystemArray.createArray_17 318 '\0' in <{_Tuple2!3}> (UtilIO.FindFirstFile_ file_name_0 find_data_1_0) find_data_1_0
UtilIO.FindClose::I !handle_0::I = error "no AnyCodeExpr"
UtilIO.find_first_file_and_close !file_name_0 = let _x_1_0::I = UtilIO.FindFirstFile file_name_0, handle_1_1 = select _x_1_0::_Tuple2 0 in case (StdBool.not (<{StdInt.==_16}> handle_1_1 -1)) (True -> let r_3_0::I = UtilIO.FindClose handle_1_1 in case (<{StdInt.==_16}> r_3_0 r_3_0) (True -> <{_Tuple2!3}> True (select _x_1_0::_Tuple2 1)) (False -> <{_Tuple2!3}> False (select _x_1_0::_Tuple2 1)) ) (False -> <{_Tuple2!3}> False "") 
UtilIO.find_null_char_in_string::I !i_0::I !s_1 = case (case (<{StdInt.<_17}> i_0 (_SystemArray.size_20 s_1)) (True -> StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 s_1 i_0) '\0')) (False -> False) ) (True -> UtilIO.find_null_char_in_string (<{StdInt.+_6}> i_0 1) s_1) (False -> i_0) 
UtilIO.find_data_file_name !find_data_0 = <{StdString.%_10}> find_data_0 (_Tuple2 44 (<{StdInt.-_7}> (UtilIO.find_null_char_in_string 44 find_data_0) 1))
UtilIO.find_last_backslash_in_string_30 !i_0::I s_1 = case (<{StdInt.<_17}> i_0 0) (True -> _Tuple2 False -1) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_1 i_0) '\\') (True -> _Tuple2 True i_0) (False -> UtilIO.find_last_backslash_in_string_30 (<{StdInt.-_7}> i_0 1) s_1) ) 
UtilIO.expand_8_3_names_in_path !path_and_file_name_0 = let _x_1_0 = UtilIO.find_last_backslash_in_string_30 (<{StdInt.-_7}> (_SystemArray.size_20 path_and_file_name_0) 1) path_and_file_name_0 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> path_and_file_name_0) (False -> let back_slash_index_3_0 = select _x_1_0::_Tuple2 1, path_3_1 = UtilIO.expand_8_3_names_in_path (<{StdString.%_10}> path_and_file_name_0 (_Tuple2 0 (<{StdInt.-_7}> back_slash_index_3_0 1))), file_name_3_2 = <{StdString.%_10}> path_and_file_name_0 (_Tuple2 (<{StdInt.+_6}> back_slash_index_3_0 1) (<{StdInt.-_7}> (_SystemArray.size_20 path_and_file_name_0) 1)), path_and_file_name_3_3 = <{StdString.+++_11}> path_3_1 (<{StdString.+++_11}> "\\" file_name_3_2), _x_3_4::I = UtilIO.find_first_file_and_close (<{StdString.+++_11}> path_and_file_name_3_3 "\0") in case (select _x_3_4::_Tuple2 0) (True -> <{StdString.+++_11}> path_3_1 (<{StdString.+++_11}> "\\" (UtilIO.find_data_file_name (select _x_3_4::_Tuple2 1)))) (False -> path_and_file_name_3_3) ) 
UtilIO.WinGetModulePath = error "no AnyCodeExpr"
UtilIO.LastColon !s_0 !i_1::I = case (StdBool.not (<{StdInt.<_17}> 0 i_1)) (True -> <{_Tuple2!3}> False 0) (False -> case (<{StdChar.==_18}> '\\' (_SystemArray.select_19 s_0 i_1)) (True -> <{_Tuple2!3}> True i_1) (False -> UtilIO.LastColon s_0 (<{StdInt.-_7}> i_1 StdInt.one_11)) ) 
UtilIO.RemoveFileName !path_0 = let last_1_0 = <{StdInt.-_7}> (_SystemArray.size_20 path_0) StdInt.one_11, _x_1_1::I = UtilIO.LastColon path_0 last_1_0 in case (select _x_1_1::_Tuple2 0) (True -> <{StdString.%_10}> path_0 (_Tuple2 0 (<{StdInt.-_7}> (select _x_1_1::_Tuple2 1) StdInt.one_11))) (False -> path_0) 
UtilIO.FStartUpDir !_x_0 !files_1 = <{_Tuple2!3}> (UtilIO.expand_8_3_names_in_path (UtilIO.RemoveFileName UtilIO.WinGetModulePath)) files_1
UtilIO.GetFullApplicationPath !files_0 = UtilIO.FStartUpDir "" files_0
UtilIO.FReadOnly !_vFileSystem_0 !path_1 !files_2 = let _x_1_0 = Directory.pd_StringToPath _vFileSystem_0 path_1 files_2, _x_1_1 = select _x_1_0::_Tuple2 0 in case (StdBool.not (select _x_1_1::_Tuple2 0)) (True -> <{_Tuple2!3}> False (select _x_1_0::_Tuple2 1)) (False -> let dir_3_0 = select _x_1_1::_Tuple2 1, files_3_1 = select _x_1_0::_Tuple2 1, _x_3_2 = Directory.getFileInfo _vFileSystem_0 dir_3_0 files_3_1, _x_3_3 = select _x_3_2::_Tuple2 0 in case (StdBool.not (<{Directory.==_13}> (select _x_3_3::_Tuple2 0) Directory.NoDirError)) (True -> <{_Tuple2!3}> False (select _x_3_2::_Tuple2 1)) (False -> <{_Tuple2!3}> (select (select (select _x_3_3::_Tuple2 1)::Directory._FileInfo 0)::Directory._PI_FileInfo 3) (select _x_3_2::_Tuple2 1)) ) 
UtilIO.FFileSize !_vFileSystem_0 !path_1 !files_2 = let _x_1_0 = Directory.pd_StringToPath _vFileSystem_0 path_1 files_2, _x_1_1 = select _x_1_0::_Tuple2 0 in case (StdBool.not (select _x_1_1::_Tuple2 0)) (True -> <{_Tuple2!3}> (_Tuple2 False 0) (select _x_1_0::_Tuple2 1)) (False -> let dir_3_0 = select _x_1_1::_Tuple2 1, files_3_1 = select _x_1_0::_Tuple2 1, _x_3_2 = Directory.getFileInfo _vFileSystem_0 dir_3_0 files_3_1, _x_3_3 = select _x_3_2::_Tuple2 0 in case (StdBool.not (<{Directory.==_13}> (select _x_3_3::_Tuple2 0) Directory.NoDirError)) (True -> <{_Tuple2!3}> (_Tuple2 False 0) (select _x_3_2::_Tuple2 1)) (False -> <{_Tuple2!3}> (_Tuple2 True (select (select (select (select _x_3_3::_Tuple2 1)::Directory._FileInfo 0)::Directory._PI_FileInfo 0)::_Tuple2 0)) (select _x_3_2::_Tuple2 1)) ) 
UtilIO.GetLongPathName !short_path_0 = UtilIO.expand_8_3_names_in_path short_path_0
UtilIO.GetShortPathName__27::I !long_path_0 !short_path_1 !s_short_path_2::I = error "no AnyCodeExpr"
UtilIO.Helper_26 !long_path_0 = let !s_short_path_1_0::I = UtilIO.GetShortPathName__27 long_path_0 "\0" 0, !short_path_1_1 = _SystemArray.createArray_17 s_short_path_1_0 '\0', !result_1_2::I = UtilIO.GetShortPathName__27 long_path_0 short_path_1_1 s_short_path_1_0 in _Tuple2 result_1_2 short_path_1_1
UtilIO.GetShortPathName !long_path_0 = let !long_path_1_0 = <{UtilIO._if;214;20_31}> null_terminated_1_3 long_path_0, !_x_1_1 = UtilIO.Helper_26 long_path_1_0, !short_path_1_2 = <{UtilIO._if;216;21_32}> null_terminated_1_3 _x_1_1, null_terminated_1_3::B = <{StdChar.==_18}> (_SystemArray.select_19 long_path_0 (<{StdInt.-_7}> (_SystemArray.size_20 long_path_0) 1)) '\0' in <{_Tuple2!3}> (StdBool.not (<{StdInt.==_16}> (select _x_1_1::_Tuple2 0) 0)) short_path_1_2
<{UtilIO._if;216;21_32}> !null_terminated_0::B !_x_1 = case null_terminated_0 (True -> select _x_1::_Tuple2 1) (_ -> let short_path_1_0 = select _x_1::_Tuple2 1 in <{StdString.%_10}> short_path_1_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 short_path_1_0) 2)))
<{UtilIO._if;214;20_31}> !null_terminated_0::B !long_path_1 = case null_terminated_0 (True -> long_path_1) (_ -> <{StdString.+++_11}> long_path_1 "\0")
UtilIO.GetCurrentDirectory__28::I !buffer_size_0::I !buffer_1 = error "no AnyCodeExpr"
UtilIO.GetCurrentDirectory = let !buff_size_1_0::I = UtilIO.GetCurrentDirectory__28 0 "\0", !buffer_1_1 = _SystemArray.createArray_17 buff_size_1_0 '\0', !result_1_2::I = UtilIO.GetCurrentDirectory__28 buff_size_1_0 buffer_1_1 in <{_Tuple2!3}> (StdBool.not (<{StdInt.==_16}> result_1_2 0)) buffer_1_1
<{UtilIO.TD;OSToolbox}> _x_0::B = _predefined._Nil


|| Converted Records
