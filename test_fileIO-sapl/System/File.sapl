|| ?module? System.File


System.File.readAcc_14 !file_0 acc_1 = let _x_1_0 = StdFile.freads file_0 1024, file_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = StdFile.ferror file_1_1 in case (select _x_1_2::_Tuple2 0) (True -> _Tuple2 (Data.Error.Error System.File.IOError) (select _x_1_2::_Tuple2 1)) (False -> let file_3_0 = select _x_1_2::_Tuple2 1, _x_3_1 = StdFile.fend file_3_0 in case (select _x_3_1::_Tuple2 0) (True -> _Tuple2 (Data.Error.Ok (_predefined._Cons (select _x_1_0::_Tuple2 0) acc_1)) (select _x_3_1::_Tuple2 1)) (False -> System.File.readAcc_14 (select _x_3_1::_Tuple2 1) (_predefined._Cons (select _x_1_0::_Tuple2 0) acc_1)) ) 
System.File.readAll !file_0 = let _x_1_0 = System.File.readAcc_14 file_0 _predefined._Nil, file_1_1 = select _x_1_0::_Tuple2 1 in <{System.File._c;49;3_60}> (select _x_1_0::_Tuple2 0) file_1_1
<{System.File._c;49;3_60}> !_x_0 !file_1 = case _x_0 (Data.Error.Error e_1_0 -> <{_Tuple2!3}> (Data.Error.Error e_1_0) file_1) (Data.Error.Ok contents_1_0 -> <{_Tuple2!3}> (Data.Error.Ok (Text.concat_1 (StdList.reverse contents_1_0))) file_1) 
System.File.withFile !_vFileSystem_0 !filename_1 filemode_2::I operation_3 !env_4 = let _x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 1 filename_1 filemode_2 env_4 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (Data.Error.Error System.File.CannotOpen) (select _x_1_0::_Tuple3 2)) (False -> let file_3_0 = select _x_1_0::_Tuple3 1, _x_3_1 = operation_3 file_3_0, result_3_2 = select _x_3_1::_Tuple2 0 in case (Data.Error.isError result_3_2) (True -> <{_Tuple2!3}> result_3_2 (select _x_1_0::_Tuple3 2)) (False -> let file_5_0 = select _x_3_1::_Tuple2 1, env_5_1 = select _x_1_0::_Tuple3 2, _x_5_2 = select _vFileSystem_0::<{StdFile.FileSystem;}> 0 file_5_0 env_5_1 in case (StdBool.not (select _x_5_2::_Tuple2 0)) (True -> <{_Tuple2!3}> (Data.Error.Error System.File.CannotClose) (select _x_5_2::_Tuple2 1)) (False -> <{_Tuple2!3}> (Data.Error.Ok (Data.Error.fromOk result_3_2)) (select _x_5_2::_Tuple2 1)) ) ) 
System.File.readFile !_vFileSystem_0 !filename_1 !env_2 = System.File.withFile _vFileSystem_0 filename_1 3 System.File.readAll env_2
System.File.rec_13 !file_0 acc_1 = let _x_1_0 = StdFile.freadline file_0, file_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = StdFile.ferror file_1_1 in case (select _x_1_2::_Tuple2 0) (True -> <{_Tuple2!1}> (Data.Error.Error System.File.IOError) (select _x_1_2::_Tuple2 1)) (False -> let string_3_0 = select _x_1_0::_Tuple2 0 in case (<{StdString.==_2}> string_3_0 "") (True -> <{_Tuple2!1}> (Data.Error.Ok acc_1) (select _x_1_2::_Tuple2 1)) (False -> System.File.rec_13 (select _x_1_2::_Tuple2 1) (_predefined._Cons string_3_0 acc_1)) ) 
System.File.readAllLines !file_0 = let _x_1_0 = System.File.rec_13 file_0 _predefined._Nil, file_1_1 = select _x_1_0::_Tuple2 1 in <{System.File._c;34;3_61}> (select _x_1_0::_Tuple2 0) file_1_1
<{System.File._c;34;3_61}> !_x_0 !file_1 = case _x_0 (Data.Error.Error e_1_0 -> <{_Tuple2!3}> (Data.Error.Error e_1_0) file_1) (Data.Error.Ok lines_1_0 -> <{_Tuple2!3}> (Data.Error.Ok (StdList.reverse lines_1_0)) file_1) 
System.File.readFileLines !_vFileSystem_0 !filename_1 !env_2 = System.File.withFile _vFileSystem_0 filename_1 3 System.File.readAllLines env_2
System.File.anon_15 contents_0 file_1 = _Tuple2 (Data.Error.Ok _predefined._Unit) (StdFile.fwrites contents_0 file_1)
System.File.writeFile !_vFileSystem_0 !filename_1 !contents_2 !env_3 = System.File.withFile _vFileSystem_0 filename_1 4 (System.File.anon_15 contents_2) env_3
System.File.fileExists !path_0 !world_1 = let buf_1_0 = _SystemArray.createArray_17 System._Posix.sizeOfStat '\0', _x_1_1 = System._Posix.stat (System._Pointer.packString path_0) buf_1_0 world_1 in case (<{StdInt.==_16}> (select _x_1_1::_Tuple2 0) 0) (True -> <{_Tuple2!3}> True (select _x_1_1::_Tuple2 1)) (False -> <{_Tuple2!3}> False (select _x_1_1::_Tuple2 1)) 
System.File.deleteFile !path_0 !world_1 = let _x_1_0 = System._Posix.unlink (System._Pointer.packString path_0) world_1 in case (StdBool.not (<{StdInt.==_16}> (select _x_1_0::_Tuple2 0) 0)) (True -> System.OSError.getLastOSError (select _x_1_0::_Tuple2 1)) (False -> <{_Tuple2!3}> (Data.Error.Ok _predefined._Unit) (select _x_1_0::_Tuple2 1)) 
System.File.getFileInfo !path_0 !world_1 = let buf_1_0 = _SystemArray.createArray_17 System._Posix.sizeOfStat '\0', _x_1_1 = System._Posix.stat (System._Pointer.packString path_0) buf_1_0 world_1 in case (StdBool.not (<{StdInt.==_16}> (select _x_1_1::_Tuple2 0) 0)) (True -> System.OSError.getLastOSError (select _x_1_1::_Tuple2 1)) (False -> let stat_3_0 = System._Posix.unpackStat buf_1_0, _x_3_1 = System.Time.toLocalTime (System.Time.Timestamp (select stat_3_0::System._Posix._Stat 10)) (select _x_1_1::_Tuple2 1), _x_3_2 = System.Time.toLocalTime (System.Time.Timestamp (select stat_3_0::System._Posix._Stat 11)) (select _x_3_1::_Tuple2 1), _x_3_3 = System.Time.toLocalTime (System.Time.Timestamp (select stat_3_0::System._Posix._Stat 12)) (select _x_3_2::_Tuple2 1) in <{_Tuple2!3}> (Data.Error.Ok (System.File._FileInfo (<{StdInt.==_16}> (StdInt.bitand (select stat_3_0::System._Posix._Stat 2) 61440) 16384) (select _x_3_1::_Tuple2 0) (select _x_3_2::_Tuple2 0) (select _x_3_3::_Tuple2 0) (<{StdInt.*_9}> (select stat_3_0::System._Posix._Stat 8) (select stat_3_0::System._Posix._Stat 9)) (select stat_3_0::System._Posix._Stat 7))) (select _x_3_3::_Tuple2 1)) 
System.File.moveFile !oldpath_0 !newpath_1 !world_2 = let _x_1_0 = System._Posix.rename (System._Pointer.packString oldpath_0) (System._Pointer.packString newpath_1) world_2 in case (<{StdInt.==_16}> (select _x_1_0::_Tuple2 0) 0) (True -> <{_Tuple2!3}> (Data.Error.Ok _predefined._Unit) (select _x_1_0::_Tuple2 1)) (False -> System.OSError.getLastOSError (select _x_1_0::_Tuple2 1)) 
System.File.toString_10 !_x_0 = case _x_0 (System.File.CannotOpen -> "Cannot open") (System.File.CannotClose -> "Cannot close") (System.File.IOError -> "I/O error") 
<{System.File.TD;FileError}> _x_0::B = _predefined._Nil
<{System.File.TD;FileInfo}> _x_0::B = _predefined._Nil

:: System.File.FileError = System.File.CannotOpen | System.File.CannotClose | System.File.IOError

|| Converted Records
:: System.File._FileInfo = {!System.File.directory::B, !System.File.creationTime, !System.File.lastModifiedTime, !System.File.lastAccessedTime, !System.File.sizeHigh::I, !System.File.sizeLow::I}

:: <{System.File.gEq_s;}> = {!System.File.gEq_s}

:: <{System.File.gEq_ss;}> = {!System.File.gEq_ss}

:: <{System.File.gEq_sss;}> = {!System.File.gEq_sss}

:: <{System.File.gEq_ssss;}> = {!System.File.gEq_ssss}

:: <{System.File.gEq_sssss;}> = {!System.File.gEq_sssss}

:: <{System.File.gEq_ssssss;}> = {!System.File.gEq_ssssss}

:: <{System.File.gEq_sssssss;}> = {!System.File.gEq_sssssss}

:: <{System.File.gEq_ssssssss;}> = {!System.File.gEq_ssssssss}

:: <{System.File.gEq_sssssssss;}> = {!System.File.gEq_sssssssss}

:: <{System.File.bimap_s;}> = {System.File.bimap_s}

:: <{System.File.bimap_ss;}> = {System.File.bimap_ss}

:: <{System.File.bimap_sss;}> = {System.File.bimap_sss}

