done:
integrating cloogle
option to make unknown variable

todo:
adding selfmade functions to cloogle (using a watch)
	2 days
+++test 'icl files should start with standard boilerplate'
	1u
add more errors and solutions
	5u
++searching and replacing
	4u
++searching through all files
	2 days
+abstracting the dcl away
	3 days
helpwindow imports: go to already imported stuff, button add import paths, go to filename
	1,5 day
file creation
	1u
clicking an error sends you to the corresponding line
	1u
boilerplate code stubs
	6u
when a term is undefined, cloogle search it
	1 day
adding functions to the dcl if that is the reason they cannot be found
	1 day
changing the project so that the helpwindows are not bound to the editors
	1 day
changing the project so that it can handle contents as map-tuple instead of a map
	4u
move to other view, clone to other view
	2 days
shortcuts
	2 days
being able to switch projects
	1u
run a project
	1u
write report
	2 days

total: 20,5
dat is bijna precies 3 weken. Damn.
Wacht, ik werk maar 5 dagen per week, niet 7. Dit is >4 weken.

meer todo:
rename file?
selectfolder aanroep in settings.icl werkt wss niet.
clooglegevonden items zijn nog niet klikbaar zodat je naar de file springt.
de betere versie van findfunction extraheren
dezelfde opties als atomsearch als searchen, dus (regex), case sensitive, (within selected), whole word.
tabs kunnen van buitenaf gefocused worden en geven aan welke tab gefocussed is.
cloogledb moet alleen aangemaakt worden als een nieuw project gestart wordt (en er is een db per project)
type definitions moeten nu op 1 regel gedefinieerd worden als je wil dat die geshared kunnen worden. Een oplossing hiervoor zou zijn, als :: aan het begin van een regel staat, laad dan alles in totdat de line "" is of :: bevat (de volgende definitie) (of import of derive bevat). Dit slaan we nu even over.
optie om de tabs te verbergen, want ze nemen veel ruimte in.
autoWrite kan wss wel als ik mijn lenses slim maak. Maar dat is moeilijk. Wss is het een goed idee om Bas hier eens naar te vragen, want dit is mogelijk gelijk aan wat hij op moest lossen voor de marine.
als we naar de hoofdmodule kijken, is de shared tab niet nuttig.
feature request: de cursor zou altijd visible moeten zijn, dus het window zou mee moeten scrollen.
dcl-sharenum anders maken: shared/unshared loskoppelen van het type (import/functie/derive)
hoofdmodule zou geen dcl-file aan moeten maken
---
refactors:
mapshare.icl gebruiken.
paralleltasks naar tasks in helpwindows.
elk helpwindow zijn eigen file
pagestructuur versimpelen
>&>withSelection waar mogelijk

