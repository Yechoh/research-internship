|| ?module? shared_buffer


shared_buffer.CreateSharedBufferFromFile2 !dynamic_rts_process_handle_0::I !file_name_1 = let _x_1_0::I = memory_mapped_files.CreateFile (<{StdString.+++_11}> file_name_1 "\0") -2147483648 1 memory_mapped_files.NULL 3 128 0 memory_mapped_files.initialState, file_handle_1_1 = select _x_1_0::_Tuple2 0 in case (<{StdInt.==_16}> file_handle_1_1 -1) (True -> StdMisc.abort "CreateSharedBuffer: CreateFile failed") (False -> let st_3_0::I = select _x_1_0::_Tuple2 1, _x_3_1 = memory_mapped_files.GetFileSize file_handle_1_1 memory_mapped_files.NULL st_3_0, file_size_3_2 = select _x_3_1::_Tuple2 0 in case (<{StdInt.==_16}> file_size_3_2 -1) (True -> StdMisc.abort "CreateSharedBuffer: GetFileSize") (False -> let st_5_0::I = select _x_3_1::_Tuple2 1, _x_5_1 = memory_mapped_files.CreateFileMapping file_handle_1_1 memory_mapped_files.NULL 2 0 0 memory_mapped_files.NULL st_5_0, file_mapping_handle_5_2 = select _x_5_1::_Tuple2 0 in case (<{StdInt.==_16}> file_mapping_handle_5_2 0) (True -> StdMisc.abort (<{StdString.+++_11}> "CreateSharedBuffer: CreateFileMapping failed" (StdString.toString_5 memory_mapped_files.GetLastError))) (False -> let st_7_0::I = select _x_5_1::_Tuple2 1, _x_7_1 = memory_mapped_files.MapViewOfFile file_mapping_handle_5_2 4 0 0 0 st_7_0, view_7_2 = select _x_7_1::_Tuple2 0 in case (<{StdInt.==_16}> view_7_2 0) (True -> StdMisc.abort "CreateSharedBuffer: MapViewOfFile") (False -> let st_9_0 = select _x_7_1::_Tuple2 1, _x_9_1 = memory_mapped_files.GetCurrentProcess st_9_0, current_process_handle_9_2::I = select _x_9_1::_Tuple2 0, st_9_3 = select _x_9_1::_Tuple2 1, _x_9_4 = memory.address_of_buffer st_9_3, a_9_5::I = select _x_9_4::_Tuple2 0, st_9_6 = select _x_9_4::_Tuple2 1, _x_9_7 = memory_mapped_files.DuplicateHandle current_process_handle_9_2 file_mapping_handle_5_2 dynamic_rts_process_handle_0 (memory_mapped_files.Ptr a_9_5) 0 0 2 st_9_6 in case (<{StdInt.==_16}> (select _x_9_7::_Tuple2 0) 0) (True -> StdMisc.abort (<{StdString.+++_11}> "copy_to_dynamic_rts: failure of DuplicateHandle" (StdString.toString_5 memory_mapped_files.GetLastError))) (False -> let st_11_0 = select _x_9_7::_Tuple2 1, _x_11_1 = memory.readWord1 a_9_5 st_11_0 in case (memory_mapped_files.CloseST (select _x_11_1::_Tuple2 1)) (True -> _Tuple3 True (_Tuple2 0 (shared_buffer._StdDynamicSharedBufferInfo file_handle_1_1 file_mapping_handle_5_2 view_7_2)) (_Tuple2 (select _x_11_1::_Tuple2 0) file_size_3_2)) ) ) ) ) ) 
shared_buffer.CreateSharedBufferFromFile !dynamic_rts_process_handle_0::I !file_name_1 = let !_x_1_0 = shared_buffer.CreateSharedBufferFromFile2 dynamic_rts_process_handle_0 file_name_1, _x_1_1 = select _x_1_0::_Tuple3 2 in <{_Tuple3!4}> True (select _x_1_0::_Tuple3 1) (<{StdString.+++_11}> (StdString.toString_5 (select _x_1_1::_Tuple2 0)) (<{StdString.+++_11}> "\n" (StdString.toString_5 (select _x_1_1::_Tuple2 1))))
shared_buffer.CloseSharedBufferFromFile::B !_x_0 = case _x_0 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_1 (shared_buffer._StdDynamicSharedBufferInfo hfile_2_0 hmap_2_1 view_2_2 -> let !_x_3_0 = memory_mapped_files.UnmapViewOfFile view_2_2 memory_mapped_files.initialState in case (<{StdInt.==_16}> (select _x_3_0::_Tuple2 0) 0) (True -> StdMisc.abort "CloseSharedBufferFromFile; failure of CloseSharedBufferFromFile") (False -> let st_5_0 = memory_mapped_files.initialState, _x_5_1 = memory_mapped_files.CloseHandle hmap_2_1 st_5_0 in case (<{StdInt.==_16}> (select _x_5_1::_Tuple2 0) 0) (True -> StdMisc.abort "CloseSharedBufferFromFile; failure of CloseHandle (1)") (False -> let st_7_0 = select _x_5_1::_Tuple2 1, _x_7_1 = memory_mapped_files.CloseHandle hfile_2_0 st_7_0 in case (<{StdInt.==_16}> (select _x_7_1::_Tuple2 0) 0) (True -> StdMisc.abort "CloseSharedBufferFromFile; failure of CloseHandle (2)") (False -> memory_mapped_files.CloseST (select _x_7_1::_Tuple2 1)) ) ) ) ) 
shared_buffer.FromStringToInt::I !array_0 !i_1::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> (StdInt.toInt_20 (_SystemArray.select_19 array_0 i_1)) (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 array_0 (<{StdInt.+_6}> i_1 1))) 8)) (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 array_0 (<{StdInt.+_6}> i_1 2))) 16)) (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 array_0 (<{StdInt.+_6}> i_1 3))) 24)
shared_buffer.copy_string_per_word_21 !i_0::I !limit_1::I !dynamic_as_string_2 !view_3::I !st_4 = case (StdBool.not (<{StdInt.<_17}> i_0 limit_1)) (True -> st_4) (False -> shared_buffer.copy_string_per_word_21 (<{StdInt.+_6}> i_0 4) limit_1 dynamic_as_string_2 view_3 (memory.writeWord1 (shared_buffer.FromStringToInt dynamic_as_string_2 i_0) (<{StdInt.+_6}> view_3 i_0) st_4)) 
shared_buffer.copy_string_per_byte_22 !i_0::I !limit_1::I !dynamic_as_string_2 !view_3::I !st_4 = case (<{StdInt.==_16}> i_0 limit_1) (True -> st_4) (False -> shared_buffer.copy_string_per_byte_22 (<{StdInt.+_6}> i_0 StdInt.one_11) limit_1 dynamic_as_string_2 view_3 (memory.writeByte1 (_SystemArray.select_19 dynamic_as_string_2 i_0) (<{StdInt.+_6}> view_3 i_0) st_4)) 
shared_buffer.copy_string_23 !i_0::I !limit_1::I !dynamic_as_string_2 !view_3::I !st_4 = let !rest_1_0::I = StdInt.rem_28 limit_1 4, !st_1_1 = shared_buffer.copy_string_per_word_21 i_0 (<{StdInt.-_7}> limit_1 rest_1_0) dynamic_as_string_2 view_3 st_4, !st_1_2 = shared_buffer.copy_string_per_byte_22 (<{StdInt.-_7}> limit_1 rest_1_0) limit_1 dynamic_as_string_2 view_3 st_1_1 in st_1_2
shared_buffer.CreateSharedBufferFromPageFile !dynamic_rts_process_handle_0::I !dynamic_as_string_1 = let file_size_1_0::I = _SystemArray.size_20 dynamic_as_string_1, _x_1_1 = memory_mapped_files.CreateFileMapping -1 memory_mapped_files.NULL 4 0 file_size_1_0 memory_mapped_files.NULL memory_mapped_files.initialState, file_mapping_handle_1_2::I = select _x_1_1::_Tuple2 0 in case (<{StdInt.==_16}> file_mapping_handle_1_2 0) (True -> StdMisc.abort (<{StdString.+++_11}> "CreateSharedBufferFromPageFile: CreateFileMapping failed" (StdString.toString_5 memory_mapped_files.GetLastError))) (False -> let st_3_0::I = select _x_1_1::_Tuple2 1, _x_3_1 = memory_mapped_files.MapViewOfFile file_mapping_handle_1_2 2 0 0 file_size_1_0 st_3_0, view_3_2 = select _x_3_1::_Tuple2 0 in case (<{StdInt.==_16}> view_3_2 0) (True -> StdMisc.abort "CreateSharedBufferFromPageFile: MapViewOfFile failed") (False -> let st_5_0 = select _x_3_1::_Tuple2 1, _x_5_1 = memory_mapped_files.GetCurrentProcess st_5_0, current_process_handle_5_2::I = select _x_5_1::_Tuple2 0, st_5_3 = select _x_5_1::_Tuple2 1, _x_5_4 = memory.address_of_buffer st_5_3, a_5_5::I = select _x_5_4::_Tuple2 0, st_5_6 = select _x_5_4::_Tuple2 1, _x_5_7 = memory_mapped_files.DuplicateHandle current_process_handle_5_2 file_mapping_handle_1_2 dynamic_rts_process_handle_0 (memory_mapped_files.Ptr a_5_5) 0 0 2 st_5_6 in case (<{StdInt.==_16}> (select _x_5_7::_Tuple2 0) 0) (True -> StdMisc.abort "copy_to_dynamic_rts: failure of DuplicateHandle") (False -> let st_7_0 = select _x_5_7::_Tuple2 1, _x_7_1 = memory.readWord1 a_5_5 st_7_0 in case (memory_mapped_files.CloseST (shared_buffer.copy_string_23 0 file_size_1_0 dynamic_as_string_1 view_3_2 (select _x_7_1::_Tuple2 1))) (True -> <{_Tuple3!4}> True (_Tuple2 0 (shared_buffer._StdDynamicSharedBufferInfo 0 file_mapping_handle_1_2 view_3_2)) (<{StdString.+++_11}> (StdString.toString_5 (select _x_7_1::_Tuple2 0)) (<{StdString.+++_11}> "\n" (StdString.toString_5 file_size_1_0)))) ) ) ) 
shared_buffer.CloseSharedBufferFromPageFile::B !_x_0 = case _x_0 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_1 (shared_buffer._StdDynamicSharedBufferInfo hfile_2_0 hmap_2_1 view_2_2 -> let !_x_3_0 = memory_mapped_files.UnmapViewOfFile view_2_2 memory_mapped_files.initialState in case (<{StdInt.==_16}> (select _x_3_0::_Tuple2 0) 0) (True -> StdMisc.abort "CloseSharedBufferFromFile; failure of CloseSharedBufferFromFile") (False -> let st_5_0 = memory_mapped_files.initialState, _x_5_1 = memory_mapped_files.CloseHandle hmap_2_1 st_5_0 in case (<{StdInt.==_16}> (select _x_5_1::_Tuple2 0) 0) (True -> StdMisc.abort "CloseSharedBufferFromFile; failure of CloseHandle (1)") (False -> memory_mapped_files.CloseST (select _x_5_1::_Tuple2 1)) ) ) ) 
shared_buffer.call_debugger::I !_x_0::I = error "no AnyCodeExpr"
shared_buffer.OpenExistingSharedBuffer !file_mapping_handle_0::I !s_buffer_1::I = let _x_1_0::I = memory_mapped_files.MapViewOfFile file_mapping_handle_0 4 0 0 s_buffer_1 memory_mapped_files.initialState, view_1_1 = select _x_1_0::_Tuple2 0 in case (<{StdInt.==_16}> view_1_1 0) (True -> StdMisc.abort (<{StdString.+++_11}> "OpenExistingSharedBuffer: MapViewOfFile failed" (StdString.toString_5 memory_mapped_files.GetLastError))) (False -> _Tuple2 True (_Tuple2 0 (shared_buffer._StdDynamicSharedBufferInfo 0 file_mapping_handle_0 view_1_1))) 
shared_buffer.OpenExistingSharedBuffer2 !_x_0 = case _x_0 (_Tuple2 file_mapping_handle_1_0 s_buffer_1_1 -> shared_buffer.OpenExistingSharedBuffer file_mapping_handle_1_0 s_buffer_1_1) 
shared_buffer.CloseExistingSharedBuffer::B !_x_0 = case _x_0 (_Tuple2 _x_1_0 _x_1_1 -> case _x_1_1 (shared_buffer._StdDynamicSharedBufferInfo hfile_2_0 hmap_2_1 view_2_2 -> let st_3_0 = memory_mapped_files.initialState, _x_3_1 = memory_mapped_files.UnmapViewOfFile view_2_2 st_3_0 in case (<{StdInt.==_16}> (select _x_3_1::_Tuple2 0) 0) (True -> StdMisc.abort (<{StdString.+++_11}> "get_tables_from_dynamic; could not close view" (StdString.toString_5 memory_mapped_files.GetLastError))) (False -> let st_5_0 = select _x_3_1::_Tuple2 1, _x_5_1 = memory_mapped_files.CloseHandle hmap_2_1 st_5_0 in case (<{StdInt.==_16}> (select _x_5_1::_Tuple2 0) 0) (True -> StdMisc.abort "get_tables_from_dynamic; could not close view") (False -> memory_mapped_files.CloseST (select _x_5_1::_Tuple2 1)) ) ) ) 
shared_buffer.GetHandleToServer2::I = error "no AnyCodeExpr"
shared_buffer.GetHandleToServer !st_0 = <{_Tuple2!3}> shared_buffer.GetHandleToServer2 st_0
shared_buffer.FromStringToIntU !array_0 !i_1::I = let !_x_1_0 = _SystemArray.uselect_22 array_0 i_1, !_x_1_1 = _SystemArray.uselect_22 (select _x_1_0::_Tuple2 1) (<{StdInt.+_6}> i_1 1), !_x_1_2 = _SystemArray.uselect_22 (select _x_1_1::_Tuple2 1) (<{StdInt.+_6}> i_1 2), !_x_1_3 = _SystemArray.uselect_22 (select _x_1_2::_Tuple2 1) (<{StdInt.+_6}> i_1 3), !i_1_4::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> (StdInt.toInt_20 (select _x_1_0::_Tuple2 0)) (<{StdInt.<<}> (StdInt.toInt_20 (select _x_1_1::_Tuple2 0)) 8)) (<{StdInt.<<}> (StdInt.toInt_20 (select _x_1_2::_Tuple2 0)) 16)) (<{StdInt.<<}> (StdInt.toInt_20 (select _x_1_3::_Tuple2 0)) 24) in <{_Tuple2!3}> i_1_4 (select _x_1_3::_Tuple2 1)
shared_buffer.WriteLong !array_0 !i_1::I !v_2::I = _SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 (_SystemArray.update_21 array_0 i_1 (StdChar.toChar_21 v_2)) (<{StdInt.+_6}> i_1 1) (StdChar.toChar_21 (<{StdInt.>>}> v_2 8))) (<{StdInt.+_6}> i_1 2) (StdChar.toChar_21 (<{StdInt.>>}> v_2 16))) (<{StdInt.+_6}> i_1 3) (StdChar.toChar_21 (<{StdInt.>>}> v_2 24))
shared_buffer.bd_delta_fp_9 !file_0 = <{_Tuple2!3}> 0 file_0
shared_buffer.bd_read_substring_25 !i_0::I !s_s_1::I !s_2 !offset_3::I !mem_4 = case (StdBool.not (<{StdInt.<_17}> i_0 s_s_1)) (True -> <{_Tuple3!7}> offset_3 s_2 mem_4) (False -> let !_x_2_0 = memory.readByte1 offset_3 mem_4 in shared_buffer.bd_read_substring_25 (<{StdInt.+_6}> i_0 StdInt.one_11) s_s_1 (_SystemArray.update_21 s_2 i_0 (StdChar.toChar_21 (select _x_2_0::_Tuple2 0))) (<{StdInt.+_6}> offset_3 StdInt.one_11) (select _x_2_0::_Tuple2 1)) 
shared_buffer.bd_freadsubstring_10 !i_0::I !n_1::I !s_2 !_x_3 = case _x_3 (_Tuple2 ptr_1_0 mem_1_1 -> let !_x_2_0 = _SystemArray.usize_23 s_2, !_x_2_1 = shared_buffer.bd_read_substring_25 i_0 (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1) ptr_1_0 mem_1_1, new_offset_2_2::I = select _x_2_1::_Tuple3 0 in <{_Tuple3!7}> (<{StdInt.-_7}> new_offset_2_2 ptr_1_0) (select _x_2_1::_Tuple3 1) (_Tuple2 new_offset_2_2 (select _x_2_1::_Tuple3 2))) 
shared_buffer.bd_readi_11 !_x_0 = case _x_0 (_Tuple2 ptr_1_0 mem_1_1 -> let _x_2_0 = memory.readWord1 ptr_1_0 mem_1_1 in <{_Tuple3!7}> True (select _x_2_0::_Tuple2 0) (_Tuple2 (<{StdInt.+_6}> ptr_1_0 4) (select _x_2_0::_Tuple2 1))) 
shared_buffer.bd_reads_loop_24 !_vArray_0 !n_characters_1::I !i_2::I ptr_3::I string_4 mem_5 = case (<{StdInt.==_16}> i_2 n_characters_1) (True -> _Tuple3 ptr_3 string_4 mem_5) (False -> let _x_2_0 = memory.readByte1 ptr_3 mem_5 in shared_buffer.bd_reads_loop_24 _vArray_0 n_characters_1 (<{StdInt.+_6}> i_2 StdInt.one_11) (<{StdInt.+_6}> ptr_3 StdInt.one_11) (select _vArray_0::<{_SystemArray.Array;}> 5 string_4 i_2 (StdChar.toChar_21 (select _x_2_0::_Tuple2 0))) (select _x_2_0::_Tuple2 1)) 
shared_buffer.bd_reads_loop_69 !n_characters_0::I !i_1::I ptr_2::I string_3 mem_4 = case (<{StdInt.==_16}> i_1 n_characters_0) (True -> _Tuple3 ptr_2 string_3 mem_4) (False -> let _x_2_0 = memory.readByte1 ptr_2 mem_4 in shared_buffer.bd_reads_loop_69 n_characters_0 (<{StdInt.+_6}> i_1 StdInt.one_11) (<{StdInt.+_6}> ptr_2 StdInt.one_11) (_SystemArray.update_21 string_3 i_1 (StdChar.toChar_21 (select _x_2_0::_Tuple2 0))) (select _x_2_0::_Tuple2 1)) 
shared_buffer.bd_reads_12 !_x_0 !n_characters_1::I = case _x_0 (_Tuple2 ptr_1_0 mem_1_1 -> let _x_2_0 = shared_buffer.bd_reads_loop_69 n_characters_1 0 ptr_1_0 (_SystemArray.createArray_17 n_characters_1 ' ') mem_1_1 in <{_Tuple2!3}> (select _x_2_0::_Tuple3 1) (_Tuple2 (select _x_2_0::_Tuple3 0) (select _x_2_0::_Tuple3 2))) 
shared_buffer.bd_seek_13 !_x_0 !offset_1::I !_x_2::I = case _x_0 (_Tuple2 _x_1_0 buffer_1_1 -> case buffer_1_1 (shared_buffer._StdDynamicSharedBufferInfo hfile_2_0 hmap_2_1 view_2_2 -> case _x_2 (0 -> <{_Tuple2!3}> True (_Tuple2 (<{StdInt.+_6}> view_2_2 offset_1) buffer_1_1)) ) ) 
shared_buffer.default_elemU_14 = shared_buffer._StdDynamicSharedBufferInfo DefaultElem.default_elem_0 DefaultElem.default_elem_0 DefaultElem.default_elem_0
<{shared_buffer.TD;StdDynamicSharedBufferInfo}> _x_0::B = _predefined._Nil


|| Converted Records
:: shared_buffer._StdDynamicSharedBufferInfo = {!shared_buffer.hfile, !shared_buffer.hmap, !shared_buffer.view::I}

:: <{shared_buffer.gEq_s;}> = {!shared_buffer.gEq_s}

:: <{shared_buffer.gEq_ss;}> = {!shared_buffer.gEq_ss}

:: <{shared_buffer.gEq_sss;}> = {!shared_buffer.gEq_sss}

:: <{shared_buffer.gEq_ssss;}> = {!shared_buffer.gEq_ssss}

:: <{shared_buffer.gEq_sssss;}> = {!shared_buffer.gEq_sssss}

:: <{shared_buffer.gEq_ssssss;}> = {!shared_buffer.gEq_ssssss}

:: <{shared_buffer.gEq_sssssss;}> = {!shared_buffer.gEq_sssssss}

:: <{shared_buffer.gEq_ssssssss;}> = {!shared_buffer.gEq_ssssssss}

:: <{shared_buffer.gEq_sssssssss;}> = {!shared_buffer.gEq_sssssssss}

:: <{shared_buffer.bimap_s;}> = {shared_buffer.bimap_s}

:: <{shared_buffer.bimap_ss;}> = {shared_buffer.bimap_ss}

:: <{shared_buffer.bimap_sss;}> = {shared_buffer.bimap_sss}

