|| ?module? System.IO


System.IO.execIO !_x_0 world_1 = case _x_0 (System.IO.IO f_1_0 -> select (f_1_0 world_1)::_Tuple2 1) 
System.IO.evalIO !_x_0 world_1 = case _x_0 (System.IO.IO f_1_0 -> f_1_0 world_1) 
System.IO.withWorld f_0 = System.IO.IO f_0
System.IO.f_19 !_vFileSystem_0 str_1 world_2 = let _x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 3 world_2 in _Tuple2 _predefined._Unit (select (select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (StdFile.fwrites str_1 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1))::_Tuple2 1)
System.IO.f_70 str_0 world_1 = let _x_1_0 = StdFile.stdio_33 world_1 in _Tuple2 _predefined._Unit (select (StdFile.fclose_30 (StdFile.fwrites str_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1))::_Tuple2 1)
System.IO.putStr str_0 = System.IO.withWorld (System.IO.f_70 str_0)
System.IO.putStrLn str_0 = System.IO.putStr (<{StdString.+++_11}> str_0 "\n")
System.IO.print !_vtoString_0 x_1 = System.IO.putStrLn (select _vtoString_0::<{StdOverloaded.toString;}> 0 x_1)
System.IO.f_20 !_vFileSystem_0 world_1 = let _x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 3 world_1, _x_1_1 = StdFile.freadc (select _x_1_0::_Tuple2 0) in _Tuple2 (select _x_1_1::_Tuple3 1) (select (select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (select _x_1_1::_Tuple3 2) (select _x_1_0::_Tuple2 1))::_Tuple2 1)
System.IO.f_71 world_0 = let _x_1_0 = StdFile.stdio_33 world_0, _x_1_1 = StdFile.freadc (select _x_1_0::_Tuple2 0) in _Tuple2 (select _x_1_1::_Tuple3 1) (select (StdFile.fclose_30 (select _x_1_1::_Tuple3 2) (select _x_1_0::_Tuple2 1))::_Tuple2 1)
System.IO.getChar = System.IO.withWorld System.IO.f_71
System.IO.f_21 !_vFileSystem_0 world_1 = let _x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 3 world_1, _x_1_1 = StdFile.freadline (select _x_1_0::_Tuple2 0) in _Tuple2 (Text.trim_18 (select _x_1_1::_Tuple2 0)) (select (select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (select _x_1_1::_Tuple2 1) (select _x_1_0::_Tuple2 1))::_Tuple2 1)
System.IO.f_72 world_0 = let _x_1_0 = StdFile.stdio_33 world_0, _x_1_1 = StdFile.freadline (select _x_1_0::_Tuple2 0) in _Tuple2 (Text.trim_18 (select _x_1_1::_Tuple2 0)) (select (StdFile.fclose_30 (select _x_1_1::_Tuple2 1) (select _x_1_0::_Tuple2 1))::_Tuple2 1)
System.IO.getLine = System.IO.withWorld System.IO.f_72
System.IO.f_22 !_vFileSystem_0 name_1 world_2 = let _x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 1 name_1 0 world_2, _x_1_1 = StdFile.freads (select _x_1_0::_Tuple3 1) 16777216 in _Tuple2 (select _x_1_1::_Tuple2 0) (select (select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (select _x_1_1::_Tuple2 1) (select _x_1_0::_Tuple3 2))::_Tuple2 1)
System.IO.f_73 name_0 world_1 = let _x_1_0 = StdFile.fopen_31 name_0 0 world_1, _x_1_1 = StdFile.freads (select _x_1_0::_Tuple3 1) 16777216 in _Tuple2 (select _x_1_1::_Tuple2 0) (select (StdFile.fclose_30 (select _x_1_1::_Tuple2 1) (select _x_1_0::_Tuple3 2))::_Tuple2 1)
System.IO.readFileM !name_0 = System.IO.withWorld (System.IO.f_73 name_0)
System.IO.f_23 !_vFileSystem_0 txt_1 name_2 world_3 = let _x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 1 name_2 1 world_3 in _Tuple2 _predefined._Unit (select (select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (StdFile.fwrites txt_1 (select _x_1_0::_Tuple3 1)) (select _x_1_0::_Tuple3 2))::_Tuple2 1)
System.IO.f_74 txt_0 name_1 world_2 = let _x_1_0 = StdFile.fopen_31 name_1 1 world_2 in _Tuple2 _predefined._Unit (select (StdFile.fclose_30 (StdFile.fwrites txt_0 (select _x_1_0::_Tuple3 1)) (select _x_1_0::_Tuple3 2))::_Tuple2 1)
System.IO.writeFileM !name_0 !txt_1 = System.IO.withWorld (System.IO.f_74 txt_1 name_0)
System.IO.make_world = error "no AnyCodeExpr"
System.IO.world_to_true::B !world_0 = error "no AnyCodeExpr"
System.IO.unsafePerformIO !f_0 = let _x_1_0 = f_0 System.IO.make_world in case (System.IO.world_to_true (select _x_1_0::_Tuple2 1)) (True -> select _x_1_0::_Tuple2 0) 
System.IO.unsafePerformIOTrue::B !f_0 = System.IO.world_to_true (select (f_0 System.IO.make_world)::_Tuple2 1)
System.IO.anon_24 x_0 s_1 = _Tuple2 x_0 s_1
System.IO.pure_13 x_0 = System.IO.IO (System.IO.anon_24 x_0)
System.IO.anon_26 !f_0 g_1 x_2 = f_0 (g_1 x_2)
System.IO.run_25 !a2mb_0 !_x_1 world_2 = case _x_1 (System.IO.IO f_1_0 -> let _x_2_0 = f_1_0 world_2 in select (a2mb_0 (select _x_2_0::_Tuple2 0))::_Tuple1 0 (select _x_2_0::_Tuple2 1)) 
System.IO.bind_15 ma_0 a2mb_1 = System.IO.IO (System.IO.run_25 a2mb_1 ma_0)
System.IO.anon_75 !_x_0 g_1 x_2 = Control.Applicative.lift _x_0 (g_1 x_2)
System.IO.anon_76 g_0 x_1 = Control.Applicative.lift (<{Control.Applicative.Applicative;}> <{System.IO.<*>_12}> System.IO.pure_13 (<{Data.Functor.Functor;}> System.IO.fmap_14)) (g_0 x_1)
System.IO.fmap_14 f_0 x_1 = <{Control.Monad.>>=}> (<{Control.Monad.Monad;}> System.IO.bind_15 (<{Control.Applicative.Applicative;}> <{System.IO.<*>_12}> System.IO.pure_13 (<{Data.Functor.Functor;}> System.IO.fmap_14))) x_1 (System.IO.anon_76 f_0)
<{System.IO.<*>_12}> f_0 g_1 = Control.Applicative.liftA2 (<{Control.Applicative.Applicative;}> <{System.IO.<*>_12}> System.IO.pure_13 (<{Data.Functor.Functor;}> System.IO.fmap_14)) StdFunc.id f_0 g_1
<{System.IO.TD;IO}> _x_0::B = _predefined._Nil

:: System.IO.IO = System.IO.IO a1

|| Converted Records
:: <{System.IO.gEq_s;}> = {!System.IO.gEq_s}

:: <{System.IO.gEq_ss;}> = {!System.IO.gEq_ss}

:: <{System.IO.gEq_sss;}> = {!System.IO.gEq_sss}

:: <{System.IO.gEq_ssss;}> = {!System.IO.gEq_ssss}

:: <{System.IO.gEq_sssss;}> = {!System.IO.gEq_sssss}

:: <{System.IO.gEq_ssssss;}> = {!System.IO.gEq_ssssss}

:: <{System.IO.gEq_sssssss;}> = {!System.IO.gEq_sssssss}

:: <{System.IO.gEq_ssssssss;}> = {!System.IO.gEq_ssssssss}

:: <{System.IO.gEq_sssssssss;}> = {!System.IO.gEq_sssssssss}

:: <{System.IO.bimap_s;}> = {System.IO.bimap_s}

:: <{System.IO.bimap_ss;}> = {System.IO.bimap_ss}

:: <{System.IO.bimap_sss;}> = {System.IO.bimap_sss}

