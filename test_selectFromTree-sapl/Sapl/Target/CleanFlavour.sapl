|| ?module? Sapl.Target.CleanFlavour


Sapl.Target.CleanFlavour.cleanFlavour = Sapl.Target.Flavour.fromFlavourRep (Sapl.Target.Flavour._FlavourRep "__" (_predefined._Cons "enableStrictnessPropagation" _predefined._Nil) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "addI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_add") (Data.Maybe.Just ":!1: + :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "addR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_add") (Data.Maybe.Just ":!1: + :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "subI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_sub") (Data.Maybe.Just ":!1: - :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "subR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_sub") (Data.Maybe.Just ":!1: - :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "multI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_mult") (Data.Maybe.Just ":!1: * :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "multR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_mult") (Data.Maybe.Just ":!1: * :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "divI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_div") (Data.Maybe.Just "Math.floor(:!1: / :!2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "divR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_divreal") (Data.Maybe.Just ":!1: / :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "mod" 2 Data.Maybe.Nothing (Data.Maybe.Just "_mod") (Data.Maybe.Just ":!1: % :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "powI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_pow") (Data.Maybe.Just "Math.pow(:!1:,:!2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "powR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_pow") (Data.Maybe.Just "Math.pow(:!1:,:!2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "sqrt" 1 Data.Maybe.Nothing (Data.Maybe.Just "_sqrt") (Data.Maybe.Just "Math.sqrt(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tan" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tan") (Data.Maybe.Just "Math.tan(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "atan" 1 Data.Maybe.Nothing (Data.Maybe.Just "_atan") (Data.Maybe.Just "Math.atan(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "sin" 1 Data.Maybe.Nothing (Data.Maybe.Just "_sin") (Data.Maybe.Just "Math.sin(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "asin" 1 Data.Maybe.Nothing (Data.Maybe.Just "_asin") (Data.Maybe.Just "Math.asin(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "cos" 1 Data.Maybe.Nothing (Data.Maybe.Just "_cos") (Data.Maybe.Just "Math.cos(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "acos" 1 Data.Maybe.Nothing (Data.Maybe.Just "_acos") (Data.Maybe.Just "Math.acos(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "neg" 1 Data.Maybe.Nothing (Data.Maybe.Just "_neg") (Data.Maybe.Just ":!1: * -1")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "negR" 1 Data.Maybe.Nothing (Data.Maybe.Just "_neg") (Data.Maybe.Just ":!1: * -1")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "negI" 1 Data.Maybe.Nothing (Data.Maybe.Just "_neg") (Data.Maybe.Just ":!1: * -1")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "absI" 1 Data.Maybe.Nothing (Data.Maybe.Just "_abs") (Data.Maybe.Just "Math.abs(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "absR" 1 Data.Maybe.Nothing (Data.Maybe.Just "_abs") (Data.Maybe.Just "Math.abs(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "eqI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_eq") (Data.Maybe.Just ":!1: == :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "eqR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_eq") (Data.Maybe.Just ":!1: == :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "eqC" 2 Data.Maybe.Nothing (Data.Maybe.Just "_eq") (Data.Maybe.Just ":!1: == :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "eqB" 2 Data.Maybe.Nothing (Data.Maybe.Just "_eq") (Data.Maybe.Just ":!1: == :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "eqS" 2 Data.Maybe.Nothing (Data.Maybe.Just "_eq") (Data.Maybe.Just ":!1: == :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "neqI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_neq") (Data.Maybe.Just ":!1: != :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "neqR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_neq") (Data.Maybe.Just ":!1: != :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "neqC" 2 Data.Maybe.Nothing (Data.Maybe.Just "_neq") (Data.Maybe.Just ":!1: != :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "neqB" 2 Data.Maybe.Nothing (Data.Maybe.Just "_neq") (Data.Maybe.Just ":!1: != :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "gtI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_gt") (Data.Maybe.Just ":!1: > :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "gtR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_gt") (Data.Maybe.Just ":!1: > :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "gtC" 2 Data.Maybe.Nothing (Data.Maybe.Just "_gt") (Data.Maybe.Just ":!1: > :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "geI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_ge") (Data.Maybe.Just ":!1: >= :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "geR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_ge") (Data.Maybe.Just ":!1: >= :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "geC" 2 Data.Maybe.Nothing (Data.Maybe.Just "_ge") (Data.Maybe.Just ":!1: >= :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "ltI" 2 Data.Maybe.Nothing (Data.Maybe.Just "_lt") (Data.Maybe.Just ":!1: < :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "ltR" 2 Data.Maybe.Nothing (Data.Maybe.Just "_lt") (Data.Maybe.Just ":!1: < :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "ltC" 2 Data.Maybe.Nothing (Data.Maybe.Just "_lt") (Data.Maybe.Just ":!1: < :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "ltS" 2 Data.Maybe.Nothing (Data.Maybe.Just "_lt") (Data.Maybe.Just ":!1: < :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "not" 1 Data.Maybe.Nothing (Data.Maybe.Just "_not") (Data.Maybe.Just "!:!1:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "and" 2 Data.Maybe.Nothing (Data.Maybe.Just "_and") (Data.Maybe.Just ":!1: && :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "or" 2 Data.Maybe.Nothing (Data.Maybe.Just "_or") (Data.Maybe.Just ":!1: || :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "I2S" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toString") (Data.Maybe.Just ":!1: + \"\"")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "C2S" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toString") (Data.Maybe.Just ":!1: + \"\"")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "R2S" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toString") (Data.Maybe.Just ":!1: + \"\"")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_size" 1 Data.Maybe.Nothing (Data.Maybe.Just "_string_size") (Data.Maybe.Just ":!1:.length")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_usize" 1 Data.Maybe.Nothing (Data.Maybe.Just "_string_usize") (Data.Maybe.Just "[0, '_Tuple2',:!1:.length,:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_select" 2 Data.Maybe.Nothing (Data.Maybe.Just "_string_select") (Data.Maybe.Just ":!1:.charAt(:!2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_uselect" 2 Data.Maybe.Nothing (Data.Maybe.Just "_string_uselect") (Data.Maybe.Just "[0, '_Tuple2',:!1:.charAt(:!2:),:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_create1" 1 Data.Maybe.Nothing (Data.Maybe.Just "_string_create1$eval") (Data.Maybe.Just "_string_create1(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_create2" 2 Data.Maybe.Nothing (Data.Maybe.Just "_string_create2$eval") (Data.Maybe.Just "_string_create2(:!1:,:!2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_update" 3 Data.Maybe.Nothing (Data.Maybe.Just "_string_update") (Data.Maybe.Just ":!1:.replaceAt(:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_update_copy" 3 Data.Maybe.Nothing (Data.Maybe.Just "_string_update") (Data.Maybe.Just ":!1:.replaceAt(:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_slice" 3 Data.Maybe.Nothing (Data.Maybe.Just "_string_slice") (Data.Maybe.Just ":!1:.substr(:!2:,(:!3: - :!2: + 1))")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_append" 2 Data.Maybe.Nothing (Data.Maybe.Just "_string_append") (Data.Maybe.Just ":!1: + :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "string_replace" 3 Data.Maybe.Nothing (Data.Maybe.Just "_string_replace$eval") (Data.Maybe.Just "_string_replace(:!1:,:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "C2I" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toInt_char") (Data.Maybe.Just ":!1:.charCodeAt(0)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "S2I" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toInt_str") (Data.Maybe.Just "parseInt(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "R2I" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toInt_real") (Data.Maybe.Just "Math.floor(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "I2R" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toReal") (Data.Maybe.Just "parseFloat(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "R2R" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toReal") (Data.Maybe.Just "parseFloat(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "S2R" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toReal") (Data.Maybe.Just "parseFloat(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "I2C" 1 Data.Maybe.Nothing (Data.Maybe.Just "_toChar") (Data.Maybe.Just "String.fromCharCode(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "bitand" 2 Data.Maybe.Nothing (Data.Maybe.Just "_bitand") (Data.Maybe.Just ":!1: & :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "bitor" 2 Data.Maybe.Nothing (Data.Maybe.Just "_bitor") (Data.Maybe.Just ":!1: | :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "bitxor" 2 Data.Maybe.Nothing (Data.Maybe.Just "_bitor") (Data.Maybe.Just ":!1: ^ :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "bitnot" 1 Data.Maybe.Nothing (Data.Maybe.Just "_bitnot") (Data.Maybe.Just "~ :!1:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "shiftleft" 2 Data.Maybe.Nothing (Data.Maybe.Just "_shiftleft") (Data.Maybe.Just ":!1: << :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "shiftright" 2 Data.Maybe.Nothing (Data.Maybe.Just "_shiftright") (Data.Maybe.Just ":!1: >>> :!2:")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create1" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_create1$eval") (Data.Maybe.Just "_array_create1(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create1_lazy" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_create1$eval") (Data.Maybe.Just "_array_create1(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create1_B_I" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_create1$eval") (Data.Maybe.Just "_array_create1(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create1_B_R" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_create1$eval") (Data.Maybe.Just "_array_create1(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create1_B_B" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_create1$eval") (Data.Maybe.Just "_array_create1(:!1:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create2" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_create2$eval") (Data.Maybe.Just "_array_create2(:!1:,:!2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create2_B_I" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_create2$eval") (Data.Maybe.Just "_array_create2(:!1:,:!2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create2_B_R" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_create2$eval") (Data.Maybe.Just "_array_create2(:!1:,:!2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create2_B_B" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_create2$eval") (Data.Maybe.Just "_array_create2(:!1:,:!2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_create2_lazy" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_create2_lazy$eval") (Data.Maybe.Just "_array_create2(:!1:,:2:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_update_lazy" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_update_lazy$eval") (Data.Maybe.Just "_array_update(:!1:,:!2:,:3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_update" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_update$eval") (Data.Maybe.Just "_array_update(:!1:,:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_update_B_I" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_update$eval") (Data.Maybe.Just "_array_update(:!1:,:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_update_B_R" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_update$eval") (Data.Maybe.Just "_array_update(:!1:,:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_update_B_B" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_update$eval") (Data.Maybe.Just "_array_update(:!1:,:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_replace_lazy" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_replace_lazy$eval") (Data.Maybe.Just "_array_replace(:!1:,:!2:,:3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_replace" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_replace$eval") (Data.Maybe.Just "_array_replace(:!1:,:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_replace_B_I" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_replace$eval") (Data.Maybe.Just "_array_replace(:!1:,:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_replace_B_R" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_replace$eval") (Data.Maybe.Just "_array_replace(:!1:,:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_replace_B_B" 3 Data.Maybe.Nothing (Data.Maybe.Just "_array_replace$eval") (Data.Maybe.Just "_array_replace(:!1:,:!2:,:!3:)")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_select_lazy" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_select_lazy") (Data.Maybe.Just "Sapl.feval(:!1:[:!2:+2])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_select" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_select") (Data.Maybe.Just ":!1:[:!2:+2]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_select_B_I" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_select") (Data.Maybe.Just ":!1:[:!2:+2]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_select_B_R" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_select") (Data.Maybe.Just ":!1:[:!2:+2]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_select_B_B" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_select") (Data.Maybe.Just ":!1:[:!2:+2]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_uselect_lazy" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_uselect") (Data.Maybe.Just "[0, '_Tuple2',:!1:[:!2:+2],:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_uselect" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_uselect") (Data.Maybe.Just "[0, '_Tuple2',:!1:[:!2:+2],:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_uselect_B_I" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_uselect") (Data.Maybe.Just "[0, '_Tuple2',:!1:[:!2:+2],:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_uselect_B_B" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_uselect") (Data.Maybe.Just "[0, '_Tuple2',:!1:[:!2:+2],:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_uselect_B_R" 2 Data.Maybe.Nothing (Data.Maybe.Just "_array_uselect") (Data.Maybe.Just "[0, '_Tuple2',:!1:[:!2:+2],:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_size_lazy" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_size") (Data.Maybe.Just ":!1:.length-2")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_size" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_size") (Data.Maybe.Just ":!1:.length-2")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_size_B_I" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_size") (Data.Maybe.Just ":!1:.length-2")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_size_B_B" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_size") (Data.Maybe.Just ":!1:.length-2")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_size_B_R" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_size") (Data.Maybe.Just ":!1:.length-2")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_usize_lazy" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_usize") (Data.Maybe.Just "[0, '_Tuple2',:!1:.length-2,:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_usize" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_usize") (Data.Maybe.Just "[0, '_Tuple2',:!1:.length-2,:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_usize_B_I" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_usize") (Data.Maybe.Just "[0, '_Tuple2',:!1:.length-2,:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_usize_B_B" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_usize") (Data.Maybe.Just "[0, '_Tuple2',:!1:.length-2,:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "array_usize_B_R" 1 Data.Maybe.Nothing (Data.Maybe.Just "_array_usize") (Data.Maybe.Just "[0, '_Tuple2',:!1:.length-2,:1:]")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "abort" 1 Data.Maybe.Nothing (Data.Maybe.Just "_abort") Data.Maybe.Nothing) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "error" 1 Data.Maybe.Nothing (Data.Maybe.Just "_error") Data.Maybe.Nothing) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels1v0" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels1v0") (Data.Maybe.Just "Sapl.feval(:!1:[2])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels2v0" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels2v0") (Data.Maybe.Just "Sapl.feval(:!1:[2])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels2v1" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels2v1") (Data.Maybe.Just "Sapl.feval(:!1:[3])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels3v0" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels3v0") (Data.Maybe.Just "Sapl.feval(:!1:[2])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels3v1" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels3v1") (Data.Maybe.Just "Sapl.feval(:!1:[3])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels3v2" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels3v2") (Data.Maybe.Just "Sapl.feval(:!1:[4])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels4v0" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels4v0") (Data.Maybe.Just "Sapl.feval(:!1:[2])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels4v1" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels4v1") (Data.Maybe.Just "Sapl.feval(:!1:[3])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels4v2" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels4v2") (Data.Maybe.Just "Sapl.feval(:!1:[4])")) (_predefined._Cons (Sapl.Target.Flavour._BIFRep "tupsels4v3" 1 Data.Maybe.Nothing (Data.Maybe.Just "_tupsels4v3") (Data.Maybe.Just "Sapl.feval(:!1:[5])")) _predefined._Nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))


|| Converted Records
:: <{Sapl.Target.CleanFlavour.gEq_s;}> = {!Sapl.Target.CleanFlavour.gEq_s}

:: <{Sapl.Target.CleanFlavour.gEq_ss;}> = {!Sapl.Target.CleanFlavour.gEq_ss}

:: <{Sapl.Target.CleanFlavour.gEq_sss;}> = {!Sapl.Target.CleanFlavour.gEq_sss}

:: <{Sapl.Target.CleanFlavour.gEq_ssss;}> = {!Sapl.Target.CleanFlavour.gEq_ssss}

:: <{Sapl.Target.CleanFlavour.gEq_sssss;}> = {!Sapl.Target.CleanFlavour.gEq_sssss}

:: <{Sapl.Target.CleanFlavour.gEq_ssssss;}> = {!Sapl.Target.CleanFlavour.gEq_ssssss}

:: <{Sapl.Target.CleanFlavour.gEq_sssssss;}> = {!Sapl.Target.CleanFlavour.gEq_sssssss}

:: <{Sapl.Target.CleanFlavour.gEq_ssssssss;}> = {!Sapl.Target.CleanFlavour.gEq_ssssssss}

:: <{Sapl.Target.CleanFlavour.gEq_sssssssss;}> = {!Sapl.Target.CleanFlavour.gEq_sssssssss}

:: <{Sapl.Target.CleanFlavour.bimap_s;}> = {Sapl.Target.CleanFlavour.bimap_s}

:: <{Sapl.Target.CleanFlavour.bimap_ss;}> = {Sapl.Target.CleanFlavour.bimap_ss}

:: <{Sapl.Target.CleanFlavour.bimap_sss;}> = {Sapl.Target.CleanFlavour.bimap_sss}

:: <{Sapl.Target.CleanFlavour.JSONEncode_s;}> = {!Sapl.Target.CleanFlavour.JSONEncode_s}

:: <{Sapl.Target.CleanFlavour.JSONEncode_ss;}> = {!Sapl.Target.CleanFlavour.JSONEncode_ss}

:: <{Sapl.Target.CleanFlavour.JSONEncode_sss;}> = {!Sapl.Target.CleanFlavour.JSONEncode_sss}

:: <{Sapl.Target.CleanFlavour.JSONEncode_ssss;}> = {!Sapl.Target.CleanFlavour.JSONEncode_ssss}

:: <{Sapl.Target.CleanFlavour.JSONEncode_sssss;}> = {!Sapl.Target.CleanFlavour.JSONEncode_sssss}

:: <{Sapl.Target.CleanFlavour.JSONEncode_ssssss;}> = {!Sapl.Target.CleanFlavour.JSONEncode_ssssss}

:: <{Sapl.Target.CleanFlavour.JSONEncode_sssssss;}> = {!Sapl.Target.CleanFlavour.JSONEncode_sssssss}

:: <{Sapl.Target.CleanFlavour.JSONEncode_ssssssss;}> = {!Sapl.Target.CleanFlavour.JSONEncode_ssssssss}

:: <{Sapl.Target.CleanFlavour.JSONEncode_sssssssss;}> = {!Sapl.Target.CleanFlavour.JSONEncode_sssssssss}

:: <{Sapl.Target.CleanFlavour.JSONDecode_s;}> = {!Sapl.Target.CleanFlavour.JSONDecode_s}

:: <{Sapl.Target.CleanFlavour.JSONDecode_ss;}> = {!Sapl.Target.CleanFlavour.JSONDecode_ss}

:: <{Sapl.Target.CleanFlavour.JSONDecode_sss;}> = {!Sapl.Target.CleanFlavour.JSONDecode_sss}

:: <{Sapl.Target.CleanFlavour.JSONDecode_ssss;}> = {!Sapl.Target.CleanFlavour.JSONDecode_ssss}

:: <{Sapl.Target.CleanFlavour.JSONDecode_sssss;}> = {!Sapl.Target.CleanFlavour.JSONDecode_sssss}

:: <{Sapl.Target.CleanFlavour.JSONDecode_ssssss;}> = {!Sapl.Target.CleanFlavour.JSONDecode_ssssss}

:: <{Sapl.Target.CleanFlavour.JSONDecode_sssssss;}> = {!Sapl.Target.CleanFlavour.JSONDecode_sssssss}

:: <{Sapl.Target.CleanFlavour.JSONDecode_ssssssss;}> = {!Sapl.Target.CleanFlavour.JSONDecode_ssssssss}

:: <{Sapl.Target.CleanFlavour.JSONDecode_sssssssss;}> = {!Sapl.Target.CleanFlavour.JSONDecode_sssssssss}

