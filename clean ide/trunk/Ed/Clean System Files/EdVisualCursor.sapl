|| ?module? EdVisualCursor


EdVisualCursor.isCursorInRectangle::B !_x_0 !height_1::I !_x_2 = case _x_0 (StdIOBasic._Point2 x_1_0 y_1_1 -> case _x_2 (StdIOBasic._Rectangle _x_2_0 _x_2_1 -> case _x_2_0 (StdIOBasic._Point2 x1_3_0 y1_3_1 -> case _x_2_1 (StdIOBasic._Point2 x2_4_0 y2_4_1 -> StdBool.not (EdVisualCursor._f157_157 (<{StdInt.<_17}> x_1_0 x1_3_0) x_1_0 x2_4_0 y_1_1 y2_4_1 y1_3_1 height_1)) ) ) ) 
EdVisualCursor._f157_157::B !_x_0::B x_1::I x2_2::I y_3::I y2_4::I y1_5::I height_6::I = case _x_0 (True -> True) (_ -> case (StdBool.not (<{StdInt.<_17}> x_1 x2_2)) (True -> True) (False -> case (StdBool.not (<{StdInt.<_17}> y_3 y2_4)) (True -> True) (False -> StdBool.not (<{StdInt.<_17}> y1_5 (<{StdInt.+_6}> y_3 height_6))) ) )
EdVisualCursor.vUpdateCursor !visible_0::B !end_1 !height_2::I !font_3 !text_4 !viewFrame_5 !rectangles_6 = case visible_0 (True -> let point_2_0::I = EdVisualText.positionToPoint end_1 text_4 font_3, y_2_1::I = select point_2_0::StdIOBasic._Point2 1, x_2_2 = select point_2_0::StdIOBasic._Point2 0 in case (StdList.any (EdVisualCursor.isCursorInRectangle point_2_0 height_2) rectangles_6) (True -> StdPicture.appXorPicture (StdFunc.seq (_predefined._Cons (StdPicture.setPenColour StdPictureDef.Black) (_predefined._Cons (StdPicture.drawLine (StdIOBasic._Point2 x_2_2 y_2_1) (StdIOBasic._Point2 x_2_2 (<{StdInt.-_7}> (<{StdInt.+_6}> y_2_1 height_2) 1))) _predefined._Nil)))) (False -> StdFunc.id) ) (False -> StdFunc.id) 
EdVisualCursor.anon_52 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_51 x_0 state_1 = _Tuple2 x_0 state_1
EdVisualCursor.anon_50 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_49 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_48 x_0 state_1 = _Tuple2 x_0 state_1
EdVisualCursor.anon_47 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_46 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_45 ma_0 !mb_1 state_2 = mb_1 (select (ma_0 state_2)::_Tuple2 1)
EdVisualCursor.backcolour_37 x_0::I !_x_1 = case _x_1 (EdMonad._FontInfo thefont_1_0 lineHeight_1_1 metrics_1_2 tabSize_1_3 charWidth_1_4 marginWidth_1_5 autoTab_1_6 showTabs_1_7 showSyntax_1_8 syntaxColours_1_9 -> case (case (<{StdInt.<_17}> 0 marginWidth_1_5) (True -> StdBool.not (<{StdInt.<_17}> x_0 (<{StdInt.*_9}> charWidth_1_4 marginWidth_1_5))) (False -> False) ) (True -> select syntaxColours_1_9::EdMonad._SyntaxColours 2) (False -> select syntaxColours_1_9::EdMonad._SyntaxColours 1) ) 
EdVisualCursor.vDrawCursor show_0::B end_1 cursorHeight_2::I text_3 font_4 = case True (True -> let p_2_0::I = EdVisualText.positionToPoint end_1 text_3 font_4, x_2_1::I = select p_2_0::StdIOBasic._Point2 0, y_2_2 = select p_2_0::StdIOBasic._Point2 1 in StdPicture.appXorPicture (StdFunc.seq (_predefined._Cons (StdPicture.setPenColour StdPictureDef.Black) (_predefined._Cons (StdPicture.drawLine (StdIOBasic._Point2 x_2_1 y_2_2) (StdIOBasic._Point2 x_2_1 (<{StdInt.-_7}> (<{StdInt.+_6}> y_2_2 cursorHeight_2) 1))) _predefined._Nil)))) (False -> let p_2_0::I = EdVisualText.positionToPoint end_1 text_3 font_4, x_2_1::I = select p_2_0::StdIOBasic._Point2 0, y_2_2 = select p_2_0::StdIOBasic._Point2 1 in StdFunc.seq (_predefined._Cons (StdPicture.setPenColour (EdVisualCursor.backcolour_37 x_2_1 font_4)) (_predefined._Cons (StdPicture.drawLine (StdIOBasic._Point2 x_2_1 y_2_2) (StdIOBasic._Point2 x_2_1 (<{StdInt.-_7}> (<{StdInt.+_6}> y_2_2 cursorHeight_2) 1))) _predefined._Nil))) 
EdVisualCursor.anon_27 end_0 height_1::I font_2 text_3 = EdVisualCursor.anon_45 (EdMonad.setCursorVisibility True) (EdVisualText.vDraw (EdVisualCursor.vDrawCursor True end_0 height_1 text_3 font_2))
EdVisualCursor.anon_127 ma_0 end_1 height_2::I font_3 state_4 = let _x_1_0 = ma_0 state_4 in EdVisualCursor.anon_27 end_1 height_2 font_3 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_28 end_0 height_1::I font_2 = EdVisualCursor.anon_127 EdMonad.getText end_0 height_1 font_2
EdVisualCursor.anon_128 ma_0 end_1 height_2::I state_3 = let _x_1_0 = ma_0 state_3 in EdVisualCursor.anon_28 end_1 height_2 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_29 end_0 height_1::I = EdVisualCursor.anon_128 EdMonad.getFontInfo end_0 height_1
EdVisualCursor.anon_129 ma_0 end_1 state_2 = let _x_1_0 = ma_0 state_2 in EdVisualCursor.anon_29 end_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_30 end_0 !visible_1::B = case visible_1 (True -> EdVisualCursor.anon_48 StateMonad.nothing) (False -> EdVisualCursor.anon_129 EdMonad.getCursorHeight end_0) 
EdVisualCursor.anon_130 !ma_0 end_1 state_2 = let _x_1_0 = ma_0 state_2 in EdVisualCursor.anon_30 end_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_31 !selection_0 = case selection_0 (EdSelection._Selection start_1_0 end_1_1 -> case (EdSelection.isEmptySelection selection_0) (True -> EdVisualCursor.anon_130 EdMonad.getCursorVisibility end_1_1) (False -> EdVisualCursor.anon_51 StateMonad.nothing) ) 
EdVisualCursor.anon_131 !ma_0 state_1 = let _x_1_0 = ma_0 state_1 in EdVisualCursor.anon_31 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.vShowCursor = EdVisualCursor.anon_131 EdMonad.getSelection
EdVisualCursor.anon_59 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_58 x_0 state_1 = _Tuple2 x_0 state_1
EdVisualCursor.anon_57 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_56 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_55 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_54 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_53 ma_0 !mb_1 state_2 = mb_1 (select (ma_0 state_2)::_Tuple2 1)
EdVisualCursor.anon_32 height_0::I font_1 text_2 !_x_3 = case _x_3 (EdSelection._Selection start_1_0 end_1_1 -> EdVisualCursor.anon_53 (EdMonad.setCursorVisibility False) (EdVisualText.vDraw (EdVisualCursor.vDrawCursor False end_1_1 height_0 text_2 font_1))) 
EdVisualCursor.anon_132 !ma_0 height_1::I font_2 text_3 state_4 = let _x_1_0 = ma_0 state_4 in EdVisualCursor.anon_32 height_1 font_2 text_3 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_33 height_0::I font_1 text_2 = EdVisualCursor.anon_132 EdMonad.getSelection height_0 font_1 text_2
EdVisualCursor.anon_133 ma_0 height_1::I font_2 state_3 = let _x_1_0 = ma_0 state_3 in EdVisualCursor.anon_33 height_1 font_2 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_34 height_0::I font_1 = EdVisualCursor.anon_133 EdMonad.getText height_0 font_1
EdVisualCursor.anon_134 ma_0 height_1::I state_2 = let _x_1_0 = ma_0 state_2 in EdVisualCursor.anon_34 height_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_35 height_0::I = EdVisualCursor.anon_134 EdMonad.getFontInfo height_0
EdVisualCursor.anon_135 ma_0 state_1 = let _x_1_0 = ma_0 state_1 in EdVisualCursor.anon_35 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_36 !visible_0::B = case visible_0 (True -> EdVisualCursor.anon_135 EdMonad.getCursorHeight) (False -> EdVisualCursor.anon_58 StateMonad.nothing) 
EdVisualCursor.anon_136 !ma_0 state_1 = let _x_1_0 = ma_0 state_1 in EdVisualCursor.anon_36 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.vHideCursor = EdVisualCursor.anon_136 EdMonad.getCursorVisibility
EdVisualCursor.anon_65 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_64 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_63 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_62 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_61 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_60 x_0 state_1 = _Tuple2 x_0 state_1
EdVisualCursor.anon_17 !drag_0 center_1::B window_2 viewFrame_3 start_4 end_5 text_6 !font_7 = case font_7 (EdMonad._FontInfo thefont_1_0 lineHeight_1_1 metrics_1_2 tabSize_1_3 charWidth_1_4 marginWidth_1_5 autoTab_1_6 showTabs_1_7 showSyntax_1_8 syntaxColours_1_9 -> let _x_2_0::I = <{EdVisualCursor._c;49;20_168}> drag_0 singleline_2_5 right_2_6 cursorPoint_2_1 left_2_2 charWidth_1_4 top_2_7 bottom_2_8 lineHeight_1_1 leftOk_2_3 rightOk_2_9 cursorOk_2_4, cursorPoint_2_1::B = EdVisualText.positionToPoint end_5 text_6 font_7, left_2_2::B = select (select viewFrame_3::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 0, leftOk_2_3::B = StdBool.not (<{StdInt.<_17}> (<{StdInt.-_7}> (select cursorPoint_2_1::StdIOBasic._Point2 0) charWidth_1_4) left_2_2), cursorOk_2_4::I = EdVisualCursor._f158_158 leftOk_2_3 rightOk_2_9 topOk_2_10 bottomOk_2_11, singleline_2_5::I = <{StdInt.==_16}> (<{StdInt.-_7}> (select end_5::EdPosition._Position 1) (select start_4::EdPosition._Position 1)) 0, right_2_6::I = select (select viewFrame_3::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 0, top_2_7::B = select (select viewFrame_3::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1, bottom_2_8::B = select (select viewFrame_3::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1, rightOk_2_9::B = StdBool.not (<{StdInt.<_17}> right_2_6 (<{StdInt.+_6}> (select cursorPoint_2_1::StdIOBasic._Point2 0) charWidth_1_4)), topOk_2_10::I = StdBool.not (<{StdInt.<_17}> (select cursorPoint_2_1::StdIOBasic._Point2 1) top_2_7), bottomOk_2_11 = StdBool.not (<{StdInt.<_17}> bottom_2_8 (<{StdInt.+_6}> (select cursorPoint_2_1::StdIOBasic._Point2 1) lineHeight_1_1)), nrHPixels_2_12 = select _x_2_0::_Tuple2 1 in case (select _x_2_0::_Tuple2 0) (True -> EdVisualCursor.anon_60 StateMonad.nothing) (False -> EdMonad.appEnv (StdPSt.appPIO (StdWindow.moveWindowViewFrame window_2 (<{EdVisualCursor._if;126;27_175}> center_1 leftOk_2_3 rightOk_2_9 left_2_2 cursorPoint_2_1 right_2_6 topOk_2_10 bottomOk_2_11 top_2_7 bottom_2_8 nrHPixels_2_12 lineHeight_1_1)))) ) 
<{EdVisualCursor._if;126;27_175}> !center_0::B leftOk_1::B rightOk_2::B left_3::I cursorPoint_4 right_5::I !topOk_6::B bottomOk_7::B top_8::I bottom_9::I nrHPixels_10::I lineHeight_11::I = case center_0 (True -> StdIOBasic._Vector2 (<{StdInt.-_7}> (<{EdVisualCursor._if;119;27_170}> (EdVisualCursor._f169_169 leftOk_1 rightOk_2) left_3 cursorPoint_4 right_5) left_3) (<{StdInt.-_7}> (<{EdVisualCursor._if;118;27_172}> (EdVisualCursor._f171_171 topOk_6 bottomOk_7) top_8 cursorPoint_4 bottom_9) top_8)) (_ -> StdIOBasic._Vector2 nrHPixels_10 (<{EdVisualCursor._if;120;27_174}> (EdVisualCursor._f173_173 topOk_6 bottomOk_7) bottomOk_7 cursorPoint_4 top_8 lineHeight_11 bottom_9))
<{EdVisualCursor._if;120;27_174}>::I !_x_0::B bottomOk_1::B cursorPoint_2 top_3::I lineHeight_4::I bottom_5::I = case _x_0 (True -> 0) (_ -> case bottomOk_1 (True -> <{StdInt.-_7}> (select cursorPoint_2::StdIOBasic._Point2 1) top_3) (False -> <{StdInt.-_7}> (<{StdInt.+_6}> (select cursorPoint_2::StdIOBasic._Point2 1) lineHeight_4) bottom_5) )
EdVisualCursor._f173_173::B !topOk_0::B bottomOk_1::B = case topOk_0 (True -> bottomOk_1) (_ -> False)
<{EdVisualCursor._if;118;27_172}>::I !_x_0::B !top_1::I cursorPoint_2 bottom_3::I = case _x_0 (True -> top_1) (_ -> <{StdInt.-_7}> (select cursorPoint_2::StdIOBasic._Point2 1) (<{StdInt./_10}> (<{StdInt.-_7}> bottom_3 top_1) 2))
EdVisualCursor._f171_171::B !topOk_0::B bottomOk_1::B = case topOk_0 (True -> bottomOk_1) (_ -> False)
<{EdVisualCursor._if;119;27_170}>::I !_x_0::B !left_1::I cursorPoint_2 right_3::I = case _x_0 (True -> left_1) (_ -> <{StdInt.-_7}> (select cursorPoint_2::StdIOBasic._Point2 0) (<{StdInt./_10}> (<{StdInt.-_7}> right_3 left_1) 2))
EdVisualCursor._f169_169::B !leftOk_0::B rightOk_1::B = case leftOk_0 (True -> rightOk_1) (_ -> False)
<{EdVisualCursor._c;49;20_168}> !drag_0 singleline_1::B right_2::I cursorPoint_3 left_4::I charWidth_5::I top_6::I bottom_7::I lineHeight_8::I leftOk_9::B rightOk_10::B cursorOk_11::B = case drag_0 (Data.Maybe.Just point_1_0 -> case singleline_1 (True -> let <{hslop``_3_0}>::B = <{StdInt.*_9}> charWidth_5 8, <{leftOk``_3_1}>::B = StdBool.not (<{StdInt.<_17}> (<{StdInt.-_7}> (select cursorPoint_3::StdIOBasic._Point2 0) <{hslop``_3_0}>) left_4), <{rightOk``_3_2}>::I = StdBool.not (<{StdInt.<_17}> right_2 (<{StdInt.+_6}> (select cursorPoint_3::StdIOBasic._Point2 0) <{hslop``_3_0}>)) in _Tuple2 (EdVisualCursor._f160_160 (EdVisualCursor._f159_159 (StdBool.not (<{StdInt.<_17}> (select point_1_0::StdIOBasic._Point2 0) left_4)) right_2 point_1_0 top_6 bottom_7) <{leftOk``_3_1}> <{rightOk``_3_2}> cursorPoint_3 top_6 bottom_7 lineHeight_8) (<{EdVisualCursor._if;76;51_162}> (EdVisualCursor._f161_161 <{leftOk``_3_1}> <{rightOk``_3_2}>) <{rightOk``_3_2}> charWidth_5)) (False -> let <{hslop``_3_0}>::I = <{StdInt.*_9}> charWidth_5 8 in _Tuple2 (EdVisualCursor._f163_163 (StdBool.not (<{StdInt.<_17}> (<{StdInt.-_7}> (select cursorPoint_3::StdIOBasic._Point2 0) <{hslop``_3_0}>) left_4)) right_2 cursorPoint_3 <{hslop``_3_0}> top_6 bottom_7 lineHeight_8) (<{EdVisualCursor._if;83;51_165}> (EdVisualCursor._f164_164 leftOk_9 rightOk_10) rightOk_10 cursorPoint_3 charWidth_5 left_4 right_2)) ) (Data.Maybe.Nothing -> _Tuple2 cursorOk_11 (<{EdVisualCursor._if;101;51_167}> (EdVisualCursor._f166_166 leftOk_9 rightOk_10) rightOk_10 cursorPoint_3 charWidth_5 left_4 right_2)) 
<{EdVisualCursor._if;101;51_167}>::I !_x_0::B rightOk_1::B cursorPoint_2 charWidth_3::I left_4::I right_5::I = case _x_0 (True -> 0) (_ -> case rightOk_1 (True -> <{StdInt.-_7}> (<{StdInt.-_7}> (select cursorPoint_2::StdIOBasic._Point2 0) charWidth_3) left_4) (False -> <{StdInt.-_7}> (<{StdInt.+_6}> (select cursorPoint_2::StdIOBasic._Point2 0) charWidth_3) right_5) )
EdVisualCursor._f166_166::B !leftOk_0::B rightOk_1::B = case leftOk_0 (True -> rightOk_1) (_ -> False)
<{EdVisualCursor._if;83;51_165}>::I !_x_0::B rightOk_1::B cursorPoint_2 charWidth_3::I left_4::I right_5::I = case _x_0 (True -> 0) (_ -> case rightOk_1 (True -> <{StdInt.-_7}> (<{StdInt.-_7}> (select cursorPoint_2::StdIOBasic._Point2 0) charWidth_3) left_4) (False -> <{StdInt.-_7}> (<{StdInt.+_6}> (select cursorPoint_2::StdIOBasic._Point2 0) charWidth_3) right_5) )
EdVisualCursor._f164_164::B !leftOk_0::B rightOk_1::B = case leftOk_0 (True -> rightOk_1) (_ -> False)
EdVisualCursor._f163_163::B !_x_0::B right_1::I cursorPoint_2 <{hslop``_3}>::I top_4::I bottom_5::I lineHeight_6::I = case _x_0 (True -> case (StdBool.not (<{StdInt.<_17}> right_1 (<{StdInt.+_6}> (select cursorPoint_2::StdIOBasic._Point2 0) <{hslop``_3}>))) (True -> case (StdBool.not (<{StdInt.<_17}> (select cursorPoint_2::StdIOBasic._Point2 1) top_4)) (True -> StdBool.not (<{StdInt.<_17}> bottom_5 (<{StdInt.+_6}> (select cursorPoint_2::StdIOBasic._Point2 1) lineHeight_6))) (False -> False) ) (False -> False) ) (_ -> False)
<{EdVisualCursor._if;76;51_162}>::I !_x_0::B <{rightOk``_1}>::B charWidth_2::I = case _x_0 (True -> 0) (_ -> case <{rightOk``_1}> (True -> <{StdInt.~_15}> charWidth_2) (False -> charWidth_2) )
EdVisualCursor._f161_161::B !<{leftOk``_0}>::B <{rightOk``_1}>::B = case <{leftOk``_0}> (True -> <{rightOk``_1}>) (_ -> False)
EdVisualCursor._f160_160::B !_x_0::B <{leftOk``_1}>::B <{rightOk``_2}>::B cursorPoint_3 top_4::I bottom_5::I lineHeight_6::I = case _x_0 (True -> True) (_ -> case <{leftOk``_1}> (True -> case <{rightOk``_2}> (True -> case (StdBool.not (<{StdInt.<_17}> (select cursorPoint_3::StdIOBasic._Point2 1) top_4)) (True -> StdBool.not (<{StdInt.<_17}> bottom_5 (<{StdInt.+_6}> (select cursorPoint_3::StdIOBasic._Point2 1) lineHeight_6))) (False -> False) ) (False -> False) ) (False -> False) )
EdVisualCursor._f159_159::B !_x_0::B right_1::I point_2 top_3::I bottom_4::I = case _x_0 (True -> case (StdBool.not (<{StdInt.<_17}> right_1 (select point_2::StdIOBasic._Point2 0))) (True -> case (StdBool.not (<{StdInt.<_17}> (select point_2::StdIOBasic._Point2 1) top_3)) (True -> StdBool.not (<{StdInt.<_17}> bottom_4 (select point_2::StdIOBasic._Point2 1))) (False -> False) ) (False -> False) ) (_ -> False)
EdVisualCursor._f158_158::B !leftOk_0::B rightOk_1::B topOk_2::B bottomOk_3::B = case leftOk_0 (True -> case rightOk_1 (True -> case topOk_2 (True -> bottomOk_3) (False -> False) ) (False -> False) ) (_ -> False)
EdVisualCursor.anon_137 !ma_0 !drag_1 center_2::B window_3 viewFrame_4 start_5 end_6 text_7 state_8 = let _x_1_0 = ma_0 state_8 in EdVisualCursor.anon_17 drag_1 center_2 window_3 viewFrame_4 start_5 end_6 text_7 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_18 drag_0 center_1::B window_2 viewFrame_3 start_4 end_5 text_6 = EdVisualCursor.anon_137 EdMonad.getFontInfo drag_0 center_1 window_2 viewFrame_3 start_4 end_5 text_6
EdVisualCursor.anon_138 ma_0 !drag_1 center_2::B window_3 viewFrame_4 start_5 end_6 state_7 = let _x_1_0 = ma_0 state_7 in EdVisualCursor.anon_18 drag_1 center_2 window_3 viewFrame_4 start_5 end_6 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_19 drag_0 center_1::B window_2 viewFrame_3 !_x_4 = case _x_4 (EdSelection._Selection start_1_0 end_1_1 -> EdVisualCursor.anon_138 EdMonad.getText drag_0 center_1 window_2 viewFrame_3 start_1_0 end_1_1) 
EdVisualCursor.anon_139 !ma_0 !drag_1 center_2::B window_3 viewFrame_4 state_5 = let _x_1_0 = ma_0 state_5 in EdVisualCursor.anon_19 drag_1 center_2 window_3 viewFrame_4 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_20 drag_0 center_1::B window_2 viewFrame_3 = EdVisualCursor.anon_139 EdMonad.getSelection drag_0 center_1 window_2 viewFrame_3
EdVisualCursor.anon_140 ma_0 !drag_1 center_2::B window_3 state_4 = let _x_1_0 = ma_0 state_4 in EdVisualCursor.anon_20 drag_1 center_2 window_3 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_21 drag_0 center_1::B window_2 = EdVisualCursor.anon_140 (EdMonad.accEnv (StdPSt.accPIO (StdWindow.getWindowViewFrame window_2))) drag_0 center_1 window_2
EdVisualCursor.anon_141 ma_0 !drag_1 center_2::B state_3 = let _x_1_0 = ma_0 state_3 in EdVisualCursor.anon_21 drag_1 center_2 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.vMakeCursorVisible !center_0::B !drag_1 = EdVisualCursor.anon_141 EdMonad.getWindowId drag_1 center_0
EdVisualCursor.vCenterCursor = EdVisualCursor.vMakeCursorVisible True Data.Maybe.Nothing
EdVisualCursor.vScrollToCursor = EdVisualCursor.vMakeCursorVisible False Data.Maybe.Nothing
EdVisualCursor.vDragCursor !point_0 = EdVisualCursor.vMakeCursorVisible False (Data.Maybe.Just point_0)
EdVisualCursor.anon_70 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_69 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_68 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_67 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_66 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_22 move_0 window_1 viewFrame_2 end_3 lineHeight_4::I font_5 text_6 = let cursorPoint_1_0::I = EdVisualText.positionToPoint end_3 text_6 font_5, left_1_1::I = select (select viewFrame_2::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 0, right_1_2 = select (select viewFrame_2::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 0 in EdMonad.appEnv (StdPSt.appPIO (StdWindow.moveWindowViewFrame window_1 (StdIOBasic._Vector2 (<{StdInt.-_7}> (<{EdVisualCursor._if;152;27_177}> (EdVisualCursor._f176_176 (StdBool.not (<{StdInt.<_17}> (select cursorPoint_1_0::StdIOBasic._Point2 0) left_1_1)) right_1_2 cursorPoint_1_0) left_1_1 cursorPoint_1_0 right_1_2) left_1_1) (<{EdVisualCursor._c;157;27_180}> move_0 lineHeight_4 viewFrame_2 text_6))))
<{EdVisualCursor._c;157;27_180}>::I !move_0 lineHeight_1::I viewFrame_2 text_3 = case move_0 (EdMovement.PageUp -> let topPixel_2_0::I = 0, top_2_1::I = select (select viewFrame_2::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1, bottom_2_2::I = select (select viewFrame_2::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1, lines_2_3::I = <{StdInt./_10}> (<{StdInt.-_7}> bottom_2_2 top_2_1) lineHeight_1, pagePixels_2_4::I = <{StdInt.*_9}> (<{StdInt.-_7}> lines_2_3 1) lineHeight_1, y_2_5::I = <{StdInt.-_7}> top_2_1 pagePixels_2_4 in <{StdInt.-_7}> (<{EdVisualCursor._c;51;16_178}> (<{StdInt.<_17}> topPixel_2_0 y_2_5) y_2_5 topPixel_2_0) top_2_1) (EdMovement.PageDown -> let botPixel_2_0::I = <{StdInt.*_9}> (EdLineText.textLength text_3) lineHeight_1, bottom_2_1::I = select (select viewFrame_2::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1, top_2_2::I = select (select viewFrame_2::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1, lines_2_3::I = <{StdInt./_10}> (<{StdInt.-_7}> bottom_2_1 top_2_2) lineHeight_1, pagePixels_2_4::I = <{StdInt.*_9}> (<{StdInt.-_7}> lines_2_3 1) lineHeight_1, y_2_5::I = <{StdInt.+_6}> bottom_2_1 pagePixels_2_4 in <{StdInt.-_7}> (<{EdVisualCursor._c;48;16_179}> (<{StdInt.<_17}> botPixel_2_0 y_2_5) botPixel_2_0 y_2_5) bottom_2_1) (_ -> 0)
<{EdVisualCursor._c;48;16_179}>::I !_x_0::B botPixel_1::I y_2::I = case _x_0 (True -> botPixel_1) (_ -> y_2)
<{EdVisualCursor._c;51;16_178}>::I !_x_0::B y_1::I topPixel_2::I = case _x_0 (True -> y_1) (_ -> topPixel_2)
<{EdVisualCursor._if;152;27_177}>::I !_x_0::B !left_1::I cursorPoint_2 right_3::I = case _x_0 (True -> left_1) (_ -> <{StdInt.-_7}> (select cursorPoint_2::StdIOBasic._Point2 0) (<{StdInt./_10}> (<{StdInt.-_7}> right_3 left_1) 2))
EdVisualCursor._f176_176::B !_x_0::B right_1::I cursorPoint_2 = case _x_0 (True -> StdBool.not (<{StdInt.<_17}> right_1 (select cursorPoint_2::StdIOBasic._Point2 0))) (_ -> False)
EdVisualCursor.anon_142 ma_0 move_1 window_2 viewFrame_3 end_4 lineHeight_5::I font_6 state_7 = let _x_1_0 = ma_0 state_7 in EdVisualCursor.anon_22 move_1 window_2 viewFrame_3 end_4 lineHeight_5 font_6 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_23 move_0 window_1 viewFrame_2 end_3 !font_4 = case font_4 (EdMonad._FontInfo thefont_1_0 lineHeight_1_1 metrics_1_2 tabSize_1_3 charWidth_1_4 marginWidth_1_5 autoTab_1_6 showTabs_1_7 showSyntax_1_8 syntaxColours_1_9 -> EdVisualCursor.anon_142 EdMonad.getText move_0 window_1 viewFrame_2 end_3 lineHeight_1_1 font_4) 
EdVisualCursor.anon_143 !ma_0 move_1 window_2 viewFrame_3 end_4 state_5 = let _x_1_0 = ma_0 state_5 in EdVisualCursor.anon_23 move_1 window_2 viewFrame_3 end_4 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_24 move_0 window_1 viewFrame_2 !_x_3 = case _x_3 (EdSelection._Selection start_1_0 end_1_1 -> EdVisualCursor.anon_143 EdMonad.getFontInfo move_0 window_1 viewFrame_2 end_1_1) 
EdVisualCursor.anon_144 !ma_0 move_1 window_2 viewFrame_3 state_4 = let _x_1_0 = ma_0 state_4 in EdVisualCursor.anon_24 move_1 window_2 viewFrame_3 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_25 move_0 window_1 viewFrame_2 = EdVisualCursor.anon_144 EdMonad.getSelection move_0 window_1 viewFrame_2
EdVisualCursor.anon_145 ma_0 move_1 window_2 state_3 = let _x_1_0 = ma_0 state_3 in EdVisualCursor.anon_25 move_1 window_2 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_26 move_0 window_1 = EdVisualCursor.anon_145 (EdMonad.accEnv (StdPSt.accPIO (StdWindow.getWindowViewFrame window_1))) move_0 window_1
EdVisualCursor.anon_146 ma_0 move_1 state_2 = let _x_1_0 = ma_0 state_2 in EdVisualCursor.anon_26 move_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.vMoveCursor !move_0 = EdVisualCursor.anon_146 EdMonad.getWindowId move_0
EdVisualCursor.anon_72 ma_0 !mb_1 state_2 = mb_1 (select (ma_0 state_2)::_Tuple2 1)
EdVisualCursor.anon_71 ma_0 !mb_1 state_2 = mb_1 (select (ma_0 state_2)::_Tuple2 1)
EdVisualCursor.anon_147 ma_0 mb_1 !mb_2 state_3 = mb_2 (select (EdVisualCursor.anon_71 ma_0 mb_1 state_3)::_Tuple2 1)
EdVisualCursor.vDoCursorSafe operation_0 = EdVisualCursor.anon_147 EdVisualCursor.vHideCursor operation_0 EdVisualCursor.vShowCursor
EdVisualCursor.anon_80 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_79 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_78 ma_0 !mb_1 state_2 = mb_1 (select (ma_0 state_2)::_Tuple2 1)
EdVisualCursor.anon_77 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_76 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_75 ma_0 !mb_1 state_2 = mb_1 (select (ma_0 state_2)::_Tuple2 1)
EdVisualCursor.anon_74 x_0 state_1 = _Tuple2 x_0 state_1
EdVisualCursor.anon_73 !f_0 g_1 x_2 = f_0 (g_1 x_2)
EdVisualCursor.selToRects !selection_0 frame_1 text_2 !font_3 = case font_3 (EdMonad._FontInfo thefont_1_0 lineHeight_1_1 metrics_1_2 tabSize_1_3 charWidth_1_4 marginWidth_1_5 autoTab_1_6 showTabs_1_7 showSyntax_1_8 syntaxColours_1_9 -> let _x_2_0::I = EdSelection.orderSelection selection_0, _x_2_1 = select _x_2_0::EdSelection._Selection 0, row1_2_2::I = select _x_2_1::EdPosition._Position 1, end_2_3 = select _x_2_0::EdSelection._Selection 1, row2_2_4 = select end_2_3::EdPosition._Position 1 in case (<{StdInt.==_16}> row1_2_2 row2_2_4) (True -> let firstString_4_0::I = StrictList.slHead (select (EdText.getTextFragment (EdSelection._Selection (EdPosition._Position 0 row1_2_2) end_2_3) text_2)::_Tuple2 0), col1_4_1::I = select _x_2_1::EdPosition._Position 0, firstLeftWidth_4_2::I = EdVisualText.tabStringWidth 0 (EdTab.splitAtTabs (<{StdString.%_10}> firstString_4_0 (_Tuple2 0 (<{StdInt.-_7}> col1_4_1 1)))) font_3, firstY_4_3 = <{StdInt.*_9}> row1_2_2 lineHeight_1_1 in _predefined._Cons (StdIOBasic._Rectangle (StdIOBasic._Point2 firstLeftWidth_4_2 firstY_4_3) (StdIOBasic._Point2 (<{StdInt.+_6}> firstLeftWidth_4_2 (EdVisualText.tabStringWidth firstLeftWidth_4_2 (EdTab.splitAtTabs (<{StdString.%_10}> firstString_4_0 (_Tuple2 col1_4_1 (<{StdInt.-_7}> (select end_2_3::EdPosition._Position 0) 1)))) font_3)) (<{StdInt.+_6}> firstY_4_3 lineHeight_1_1))) _predefined._Nil) (False -> let strings_4_0::I = select (EdText.getTextFragment (EdSelection._Selection (EdPosition._Position 0 row1_2_2) end_2_3) text_2)::_Tuple2 0, firstY_4_1::I = <{StdInt.*_9}> row1_2_2 lineHeight_1_1, x_4_2::I = select (select frame_1::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 0, y_4_3::I = 0, lastY_4_4 = <{StdInt.*_9}> row2_2_4 lineHeight_1_1 in _predefined._Cons (StdIOBasic._Rectangle (StdIOBasic._Point2 (EdVisualText.tabStringWidth 0 (EdTab.splitAtTabs (<{StdString.%_10}> (StrictList.slHead strings_4_0) (_Tuple2 0 (<{StdInt.-_7}> (select _x_2_1::EdPosition._Position 0) 1)))) font_3) firstY_4_1) (StdIOBasic._Point2 (select (select frame_1::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 0) (<{StdInt.+_6}> firstY_4_1 lineHeight_1_1))) (_predefined._Cons (StdIOBasic._Rectangle (StdIOBasic._Point2 (<{EdVisualCursor._c;51;16_181}> (<{StdInt.<_17}> x_4_2 y_4_3) y_4_3 x_4_2) (<{StdInt.+_6}> firstY_4_1 lineHeight_1_1)) (StdIOBasic._Point2 (select (select frame_1::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 0) lastY_4_4)) (_predefined._Cons (StdIOBasic._Rectangle (StdIOBasic._Point2 0 lastY_4_4) (StdIOBasic._Point2 (EdVisualText.tabStringWidth 0 (EdTab.splitAtTabs (<{StdString.%_10}> (StrictList.slLast strings_4_0) (_Tuple2 0 (<{StdInt.-_7}> (select end_2_3::EdPosition._Position 0) 1)))) font_3) (<{StdInt.+_6}> lastY_4_4 lineHeight_1_1))) _predefined._Nil))) ) 
<{EdVisualCursor._c;51;16_181}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
EdVisualCursor.hiliteBackground_42 colours_0 !_x_1 !r_2 = case _x_1 (EdMonad._FontInfo thefont_1_0 lineHeight_1_1 metrics_1_2 tabSize_1_3 charWidth_1_4 marginWidth_1_5 autoTab_1_6 showTabs_1_7 showSyntax_1_8 syntaxColours_1_9 -> case r_2 (StdIOBasic._Rectangle corner1_2_0 corner2_2_1 -> case corner1_2_0 (StdIOBasic._Point2 x1_3_0 y1_3_1 -> case corner2_2_1 (StdIOBasic._Point2 x2_4_0 y2_4_1 -> let margin_5_0::I = <{StdInt.*_9}> marginWidth_1_5 charWidth_1_4 in case (case (StdBool.not (<{StdInt.<_17}> 0 marginWidth_1_5)) (True -> True) (False -> StdBool.not (<{StdInt.<_17}> margin_5_0 x2_4_0)) ) (True -> StdFunc.seq (_predefined._Cons (StdPicture.setPenBack (select colours_0::EdMonad._SyntaxColours 1)) (_predefined._Cons (StdPicture.hilite_55 r_2) _predefined._Nil))) (False -> case (StdBool.not (<{StdInt.<_17}> x1_3_0 margin_5_0)) (True -> StdFunc.seq (_predefined._Cons (StdPicture.setPenBack (select colours_0::EdMonad._SyntaxColours 2)) (_predefined._Cons (StdPicture.hilite_55 r_2) _predefined._Nil))) (False -> StdFunc.seq (_predefined._Cons (StdPicture.setPenBack (select colours_0::EdMonad._SyntaxColours 2)) (_predefined._Cons (StdPicture.hilite_55 (update r_2::StdIOBasic._Rectangle [0:update (select r_2::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 [0:margin_5_0]])) (_predefined._Cons (StdPicture.setPenBack (select colours_0::EdMonad._SyntaxColours 1)) (_predefined._Cons (StdPicture.hilite_55 (update r_2::StdIOBasic._Rectangle [1:update (select r_2::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 [0:margin_5_0]])) _predefined._Nil))))) ) ) ) ) ) 
EdVisualCursor.anon_148 !_x_0 g_1 x_2 = StdFunc.seq _x_0 (g_1 x_2)
EdVisualCursor.anon_149 !_x_0 _x_1 x_2 = StdFunc.seq _x_0 (StdPicture.setPenBack _x_1 x_2)
EdVisualCursor.vHiliteSelection frame_0 !upds_1 text_2 !font_3 selection_4 !pic_5 = case font_3 (EdMonad._FontInfo thefont_1_0 lineHeight_1_1 metrics_1_2 tabSize_1_3 charWidth_1_4 marginWidth_1_5 autoTab_1_6 showTabs_1_7 showSyntax_1_8 syntaxColours_1_9 -> case (StdBool.not (<{StdInt.<_17}> 0 marginWidth_1_5)) (True -> StdPicture.appClipPicture (StdPicture.toRegion_51 (<{StdPicture.toRegion;}> StdPicture.toRegion_49) upds_1) (EdVisualCursor.anon_149 (StdList.map StdPicture.hilite_55 (EdVisualCursor.selToRects selection_4 frame_0 text_2 font_3)) (select syntaxColours_1_9::EdMonad._SyntaxColours 1)) pic_5) (False -> StdPicture.appClipPicture (StdPicture.toRegion_51 (<{StdPicture.toRegion;}> StdPicture.toRegion_49) upds_1) (StdFunc.seq (StdList.map (EdVisualCursor.hiliteBackground_42 syntaxColours_1_9 font_3) (EdVisualCursor.selToRects selection_4 frame_0 text_2 font_3))) pic_5) ) 
EdVisualCursor.clipSelection !_x_0 !font_1 !_x_2 = case _x_0 (StdIOBasic._Rectangle _x_1_0 _x_1_1 -> case _x_1_0 (StdIOBasic._Point2 x1_2_0 y1_2_1 -> case _x_1_1 (StdIOBasic._Point2 x2_3_0 y2_3_1 -> case font_1 (EdMonad._FontInfo thefont_4_0 lineHeight_4_1 metrics_4_2 tabSize_4_3 charWidth_4_4 marginWidth_4_5 autoTab_4_6 showTabs_4_7 showSyntax_4_8 syntaxColours_4_9 -> case _x_2 (EdSelection._Selection _x_5_0 _x_5_1 -> case _x_5_0 (EdPosition._Position col1_6_0 row1_6_1 -> case _x_5_1 (EdPosition._Position col2_7_0 row2_7_1 -> let firstLineNr_8_0::I = <{StdInt./_10}> y1_2_1 lineHeight_4_1, lastLineNr_8_1::I = <{StdInt./_10}> (<{StdInt.-_7}> y2_3_1 1) lineHeight_4_1 in case (case (case (<{StdInt.<_17}> row1_6_1 firstLineNr_8_0) (True -> <{StdInt.<_17}> row2_7_1 firstLineNr_8_0) (False -> False) ) (True -> True) (False -> case (<{StdInt.<_17}> lastLineNr_8_1 row1_6_1) (True -> <{StdInt.<_17}> lastLineNr_8_1 row2_7_1) (False -> False) ) ) (True -> EdSelection.emptySelection) (False -> let startVisible_10_0::B = EdVisualCursor._f183_183 (StdBool.not (<{StdInt.<_17}> row1_6_1 firstLineNr_8_0)) lastLineNr_8_1 row1_6_1, endVisible_10_1::B = EdVisualCursor._f182_182 (StdBool.not (<{StdInt.<_17}> row2_7_1 firstLineNr_8_0)) lastLineNr_8_1 row2_7_1 in EdSelection._Selection (EdPosition._Position (<{EdVisualCursor._if;369;31_184}> startVisible_10_0 col1_6_0) (<{EdVisualCursor._if;370;31_185}> startVisible_10_0 row1_6_1 firstLineNr_8_0)) (EdPosition._Position (<{EdVisualCursor._if;371;31_186}> endVisible_10_1 col2_7_0) (<{EdVisualCursor._if;372;31_187}> endVisible_10_1 row2_7_1 lastLineNr_8_1))) ) ) ) ) ) ) ) 
<{EdVisualCursor._if;372;31_187}>::I !endVisible_0::B row2_1::I lastLineNr_2::I = case endVisible_0 (True -> row2_1) (_ -> <{StdInt.+_6}> lastLineNr_2 1)
<{EdVisualCursor._if;371;31_186}>::I !endVisible_0::B col2_1::I = case endVisible_0 (True -> col2_1) (_ -> 0)
<{EdVisualCursor._if;370;31_185}>::I !startVisible_0::B row1_1::I firstLineNr_2::I = case startVisible_0 (True -> row1_1) (_ -> firstLineNr_2)
<{EdVisualCursor._if;369;31_184}>::I !startVisible_0::B col1_1::I = case startVisible_0 (True -> col1_1) (_ -> 0)
EdVisualCursor._f183_183::B !_x_0::B lastLineNr_1::I row1_2::I = case _x_0 (True -> StdBool.not (<{StdInt.<_17}> lastLineNr_1 row1_2)) (_ -> False)
EdVisualCursor._f182_182::B !_x_0::B lastLineNr_1::I row2_2::I = case _x_0 (True -> StdBool.not (<{StdInt.<_17}> lastLineNr_1 row2_2)) (_ -> False)
EdVisualCursor.anon_150 ma_0 x_1 state_2 = EdVisualCursor.anon_74 x_1 (select (ma_0 state_2)::_Tuple2 1)
EdVisualCursor.anon_38 newSelection_0 oldSelection_1 frame_2 text_3 font_4 = EdVisualCursor.anon_150 (EdVisualText.vDraw (ioutil.seqmap (EdVisualCursor.vHiliteSelection frame_2 (_predefined._Cons frame_2 _predefined._Nil) text_3 font_4) (StdList.map (EdVisualCursor.clipSelection frame_2 font_4) (EdSelection.changeSelection oldSelection_1 newSelection_0)))) StateMonad.nothing
EdVisualCursor.anon_151 ma_0 newSelection_1 oldSelection_2 frame_3 text_4 state_5 = let _x_1_0 = ma_0 state_5 in EdVisualCursor.anon_38 newSelection_1 oldSelection_2 frame_3 text_4 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_39 newSelection_0 oldSelection_1 frame_2 text_3 = EdVisualCursor.anon_151 EdMonad.getFontInfo newSelection_0 oldSelection_1 frame_2 text_3
EdVisualCursor.anon_152 ma_0 newSelection_1 oldSelection_2 frame_3 state_4 = let _x_1_0 = ma_0 state_4 in EdVisualCursor.anon_39 newSelection_1 oldSelection_2 frame_3 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_40 newSelection_0 oldSelection_1 frame_2 = EdVisualCursor.anon_152 EdMonad.getText newSelection_0 oldSelection_1 frame_2
EdVisualCursor.anon_153 ma_0 mb_1 !f_2 state_3 = let _x_1_0 = EdVisualCursor.anon_78 ma_0 mb_1 state_3 in f_2 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_154 ma_0 mb_1 newSelection_2 oldSelection_3 state_4 = let _x_1_0 = EdVisualCursor.anon_78 ma_0 mb_1 state_4 in EdVisualCursor.anon_40 newSelection_2 oldSelection_3 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_41 newSelection_0 oldSelection_1 = EdVisualCursor.anon_154 (EdMonad.setSelection newSelection_0) EdVisualText.getViewFrame newSelection_0 oldSelection_1
EdVisualCursor.anon_155 ma_0 newSelection_1 state_2 = let _x_1_0 = ma_0 state_2 in EdVisualCursor.anon_41 newSelection_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.vChangeSelectionTo newSelection_0 = EdVisualCursor.anon_155 EdMonad.getSelection newSelection_0
EdVisualCursor.vUpdateSelection !selection_0 font_1 text_2 frame_3 rects_4 = case (EdSelection.isEmptySelection selection_0) (True -> StdFunc.id) (False -> EdVisualCursor.vHiliteSelection frame_3 rects_4 text_2 font_1 (EdVisualCursor.clipSelection frame_3 font_1 (EdSelection.orderSelection selection_0))) 
EdVisualCursor.anon_83 ma_0 !f_1 state_2 = let _x_1_0 = ma_0 state_2 in f_1 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.anon_82 ma_0 !mb_1 state_2 = mb_1 (select (ma_0 state_2)::_Tuple2 1)
EdVisualCursor.anon_81 x_0 state_1 = _Tuple2 x_0 state_1
EdVisualCursor.anon_43 !selection_0 = case (EdSelection.isEmptySelection selection_0) (True -> EdVisualCursor.anon_81 StateMonad.nothing) (False -> let orderedSelection_2_0 = EdSelection.orderSelection selection_0, pos_2_1 = select orderedSelection_2_0::EdSelection._Selection 0 in EdVisualCursor.anon_82 (EdVisualCursor.vChangeSelectionTo (EdSelection._Selection pos_2_1 pos_2_1)) (EdVisualText.vRemoveText orderedSelection_2_0)) 
EdVisualCursor.anon_156 !ma_0 state_1 = let _x_1_0 = ma_0 state_1 in EdVisualCursor.anon_43 (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
EdVisualCursor.vRemoveSelection = EdVisualCursor.anon_156 EdMonad.getSelection


|| Converted Records
:: <{EdVisualCursor.gEq_s;}> = {!EdVisualCursor.gEq_s}

:: <{EdVisualCursor.gEq_ss;}> = {!EdVisualCursor.gEq_ss}

:: <{EdVisualCursor.gEq_sss;}> = {!EdVisualCursor.gEq_sss}

:: <{EdVisualCursor.gEq_ssss;}> = {!EdVisualCursor.gEq_ssss}

:: <{EdVisualCursor.gEq_sssss;}> = {!EdVisualCursor.gEq_sssss}

:: <{EdVisualCursor.gEq_ssssss;}> = {!EdVisualCursor.gEq_ssssss}

:: <{EdVisualCursor.gEq_sssssss;}> = {!EdVisualCursor.gEq_sssssss}

:: <{EdVisualCursor.gEq_ssssssss;}> = {!EdVisualCursor.gEq_ssssssss}

:: <{EdVisualCursor.gEq_sssssssss;}> = {!EdVisualCursor.gEq_sssssssss}

:: <{EdVisualCursor.bimap_s;}> = {EdVisualCursor.bimap_s}

:: <{EdVisualCursor.bimap_ss;}> = {EdVisualCursor.bimap_ss}

:: <{EdVisualCursor.bimap_sss;}> = {EdVisualCursor.bimap_sss}

