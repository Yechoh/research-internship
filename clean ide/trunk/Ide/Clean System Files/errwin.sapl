|| ?module? errwin


errwin.FindChar::I !c_0::C !line_1 !linelen_2::I !pos_3::I = case (StdBool.not (<{StdInt.<_17}> pos_3 linelen_2)) (True -> pos_3) (False -> case (<{StdChar.==_18}> c_0 (_SystemArray.select_19 line_1 pos_3)) (True -> pos_3) (False -> errwin.FindChar c_0 line_1 linelen_2 (<{StdInt.+_6}> pos_3 StdInt.one_11)) ) 
errwin.SubStringToInt::I !acc_0::I !start_1::I !stop_2::I str_3 = case (<{StdInt.<_17}> stop_2 start_1) (True -> acc_0) (False -> let curc_2_0::C = _SystemArray.select_19 str_3 start_1 in case (StdChar.isDigit curc_2_0) (True -> errwin.SubStringToInt (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.*_9}> 10 acc_0) (StdInt.toInt_20 curc_2_0)) (StdInt.toInt_20 '0')) (<{StdInt.+_6}> start_1 StdInt.one_11) stop_2 str_3) (False -> acc_0) ) 
<{errwin.dec`_60}>::I !n_0::I = case (<{StdInt.==_16}> n_0 0) (True -> 0) (False -> <{StdInt.-_7}> n_0 StdInt.one_11) 
errwin.ParseErrorMsg !msg_0 = let msglen_1_0::I = _SystemArray.size_20 msg_0, open_1_1::I = errwin.FindChar '[' msg_0 msglen_1_0 0, comma1_1_2::I = errwin.FindChar ',' msg_0 msglen_1_0 (<{StdInt.+_6}> open_1_1 StdInt.one_11), comma2_1_3::I = errwin.FindChar ',' msg_0 msglen_1_0 (<{StdInt.+_6}> comma1_1_2 StdInt.one_11) in case (case (<{StdInt.<_17}> open_1_1 msglen_1_0) (True -> case (<{StdInt.<_17}> comma1_1_2 msglen_1_0) (True -> <{StdInt.<_17}> comma2_1_3 msglen_1_0) (False -> False) ) (False -> False) ) (True -> <{_Tuple2!3}> (<{StdString.%_10}> msg_0 (_Tuple2 (<{StdInt.+_6}> open_1_1 StdInt.one_11) (<{StdInt.-_7}> comma1_1_2 StdInt.one_11))) (<{errwin.dec`_60}> (errwin.SubStringToInt 0 (<{StdInt.+_6}> comma1_1_2 StdInt.one_11) (<{StdInt.-_7}> (errwin.FindChar ']' msg_0 msglen_1_0 (<{StdInt.+_6}> comma1_1_2 StdInt.one_11)) StdInt.one_11) msg_0))) (False -> case (case (<{StdInt.<_17}> open_1_1 msglen_1_0) (True -> case (<{StdInt.<_17}> comma1_1_2 msglen_1_0) (True -> <{StdInt.<_17}> (errwin.FindChar ']' msg_0 msglen_1_0 (<{StdInt.+_6}> comma1_1_2 StdInt.one_11)) msglen_1_0) (False -> False) ) (False -> False) ) (True -> <{_Tuple2!3}> (<{StdString.%_10}> msg_0 (_Tuple2 (<{StdInt.+_6}> open_1_1 StdInt.one_11) (<{StdInt.-_7}> comma1_1_2 StdInt.one_11))) (<{errwin.dec`_60}> (errwin.SubStringToInt 0 (<{StdInt.+_6}> comma1_1_2 StdInt.one_11) (<{StdInt.-_7}> comma2_1_3 StdInt.one_11) msg_0))) (False -> case (case (<{StdInt.<_17}> open_1_1 msglen_1_0) (True -> <{StdInt.<_17}> (errwin.FindChar ']' msg_0 msglen_1_0 (<{StdInt.+_6}> open_1_1 StdInt.one_11)) msglen_1_0) (False -> False) ) (True -> <{_Tuple2!3}> (<{StdString.%_10}> msg_0 (_Tuple2 (<{StdInt.+_6}> open_1_1 StdInt.one_11) (<{StdInt.-_7}> comma1_1_2 StdInt.one_11))) 0) (False -> <{_Tuple2!3}> "" 0) ) ) 
errwin.fifi_23 !errmsg_0 !ps_1 = let _x_1_0 = errwin.ParseErrorMsg errmsg_0, path_1_1 = select _x_1_0::_Tuple2 0 in case (StdBool.not (<{StdString.==_2}> path_1_1 "")) (True -> IDE.OpenModule path_1_1 (EdSelection.lineSelection (<{StdInt.+_6}> (select _x_1_0::_Tuple2 1) StdInt.one_11)) ps_1) (False -> ps_1) 
errwin.sr_find_err !forward_0::B !ps_1 = let _x_1_0 = IdeState.getErrInfo ps_1 in FilteredListBox.exec_next_filtered forward_0 (select (select _x_1_0::_Tuple2 0)::IdeState._ErrorInfo 1) errwin.fifi_23 (select _x_1_0::_Tuple2 1)
errwin.checkWindowExistence id_0 io_1 = let _x_1_0 = StdWindow.getWindowsStack io_1 in _Tuple2 (StdList.isMember (<{StdClass.Eq;}> (<{StdOverloaded.==;}> <{id.==_27}>)) id_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
errwin.anon_69 !f_0 g_1 x_2 = f_0 (g_1 x_2)
errwin.inf_resize_37 !oc_0 ow_1 !nw_2 = update oc_0::StdIOBasic._Size [0:select nw_2::StdIOBasic._Size 0]
errwin.infCount_31 !_vtoString_0 count_1 count_2 = StdControlDef.TextControl (select _vtoString_0::<{StdOverloaded.toString;}> 0 count_1) (_predefined._Cons (StdControlDef.ControlWidth (StdControlDef.ContentWidth "8888")) (_predefined._Cons (StdControlDef.ControlId count_2) _predefined._Nil))
errwin.type_58::B msg_0 !msglen_1::I = case (case (<{StdInt.<_17}> 5 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 4)) "Error") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 12 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 11)) "Syntax error") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 11 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 10)) "Parse error") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 11 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 10)) "Check error") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 11 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 10)) "Check Error") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 10 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 9)) "Type error") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 10 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 9)) "Link error") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 12 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 11)) "Linker error") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 16 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 15)) "Uniqueness error") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 16 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 15)) "Undefined symbol") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 17 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 16)) "Overloading error") (False -> False) ) (True -> True) (False -> False) ) ) ) ) ) ) ) ) ) ) 
errwin.IsErrorMsg::B !msg_0 = errwin.type_58 msg_0 (_SystemArray.size_20 msg_0)
errwin.first_char_is_space::B !_vArray_0 s_1 = case (<{StdInt.<_17}> 0 (select _vArray_0::<{_SystemArray.Array;}> 4 s_1)) (True -> <{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_1 0) ' ') (False -> False) 
errwin.type_59::B msg_0 !msglen_1::I = case (case (<{StdInt.<_17}> 7 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 6)) "Warning") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 12 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 11)) "Type warning") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 13 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 12)) "Parse warning") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 12 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 11)) "Link warning") (False -> False) ) (True -> True) (False -> case (case (<{StdInt.<_17}> 14 msglen_1) (True -> <{StdString.==_2}> (<{StdString.%_10}> msg_0 (_Tuple2 0 13)) "Linker warning") (False -> False) ) (True -> True) (False -> False) ) ) ) ) 
errwin.IsWarningMsg::B !msg_0 = errwin.type_59 msg_0 (_SystemArray.size_20 msg_0)
errwin.first_char_is_space_113::B !s_0 = case (<{StdInt.<_17}> 0 (_SystemArray.size_20 s_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 s_0 0) ' ') (False -> False) 
errwin.makeFilter_35 err_0::B wrn_1::B inf_2::B !_x_3 = case _x_3 (_predefined._Cons str_1_0 strings_1_1 -> case (errwin.IsErrorMsg str_1_0) (True -> case err_0 (True -> let _x_4_0 = StdList.span errwin.first_char_is_space_113 strings_1_1 in _predefined._Cons str_1_0 (<{StdList.++}> (select _x_4_0::_Tuple2 0) (errwin.makeFilter_35 err_0 wrn_1 inf_2 (select _x_4_0::_Tuple2 1)))) (False -> errwin.makeFilter_35 err_0 wrn_1 inf_2 (StdList.dropWhile errwin.first_char_is_space_113 strings_1_1)) ) (False -> case (errwin.IsWarningMsg str_1_0) (True -> case wrn_1 (True -> _predefined._Cons str_1_0 (errwin.makeFilter_35 err_0 wrn_1 inf_2 strings_1_1)) (False -> errwin.makeFilter_35 err_0 wrn_1 inf_2 strings_1_1) ) (False -> case inf_2 (True -> _predefined._Cons str_1_0 (errwin.makeFilter_35 err_0 wrn_1 inf_2 strings_1_1)) (False -> errwin.makeFilter_35 err_0 wrn_1 inf_2 strings_1_1) ) ) ) (_predefined._Nil -> _predefined._Nil) 
errwin.infFun_34 !_x_0 = case _x_0 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (_Tuple3 err_2_0 wrn_2_1 inf_2_2 -> let inf_3_0 = StdBool.not inf_2_2, _x_3_1 = IdeState.getErrInfo ps_1_1, ei_3_2::B = select _x_3_1::_Tuple2 0 in _Tuple2 (_Tuple3 err_2_0 wrn_2_1 inf_3_0) (FilteredListBox.setFilter (select ei_3_2::IdeState._ErrorInfo 1) (errwin.makeFilter_35 err_2_0 wrn_2_1 inf_3_0) (IdeState.setErrInfo (update ei_3_2::IdeState._ErrorInfo [18:inf_3_0]) (select _x_3_1::_Tuple2 1)))) ) 
errwin.infButton_30 button_0::B button_1 = StdControlDef.CheckControl (_predefined._Cons (_Tuple4 "Info:" Data.Maybe.Nothing (ioutil.toMark button_0) errwin.infFun_34) _predefined._Nil) (StdControlDef.Rows 1) (_predefined._Cons (StdControlDef.ControlId button_1) _predefined._Nil)
errwin.wrnCount_27 !_vtoString_0 count_1 count_2 = StdControlDef.TextControl (select _vtoString_0::<{StdOverloaded.toString;}> 0 count_1) (_predefined._Cons (StdControlDef.ControlWidth (StdControlDef.ContentWidth "8888")) (_predefined._Cons (StdControlDef.ControlId count_2) _predefined._Nil))
errwin.wrnFun_32 !_x_0 = case _x_0 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (_Tuple3 err_2_0 wrn_2_1 inf_2_2 -> let wrn_3_0 = StdBool.not wrn_2_1, _x_3_1 = IdeState.getErrInfo ps_1_1, ei_3_2::B = select _x_3_1::_Tuple2 0 in _Tuple2 (_Tuple3 err_2_0 wrn_3_0 inf_2_2) (FilteredListBox.setFilter (select ei_3_2::IdeState._ErrorInfo 1) (errwin.makeFilter_35 err_2_0 wrn_3_0 inf_2_2) (IdeState.setErrInfo (update ei_3_2::IdeState._ErrorInfo [14:wrn_3_0]) (select _x_3_1::_Tuple2 1)))) ) 
errwin.wrnButton_26 button_0::B button_1 = StdControlDef.CheckControl (_predefined._Cons (_Tuple4 "Warnings:" Data.Maybe.Nothing (ioutil.toMark button_0) errwin.wrnFun_32) _predefined._Nil) (StdControlDef.Rows 1) (_predefined._Cons (StdControlDef.ControlId button_1) _predefined._Nil)
errwin.errCount_29 !_vtoString_0 count_1 count_2 = StdControlDef.TextControl (select _vtoString_0::<{StdOverloaded.toString;}> 0 count_1) (_predefined._Cons (StdControlDef.ControlWidth (StdControlDef.ContentWidth "8888")) (_predefined._Cons (StdControlDef.ControlId count_2) _predefined._Nil))
errwin.errFun_33 !_x_0 = case _x_0 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (_Tuple3 err_2_0 wrn_2_1 inf_2_2 -> let err_3_0 = StdBool.not err_2_0, _x_3_1 = IdeState.getErrInfo ps_1_1, ei_3_2::B = select _x_3_1::_Tuple2 0 in _Tuple2 (_Tuple3 err_3_0 wrn_2_1 inf_2_2) (FilteredListBox.setFilter (select ei_3_2::IdeState._ErrorInfo 1) (errwin.makeFilter_35 err_3_0 wrn_2_1 inf_2_2) (IdeState.setErrInfo (update ei_3_2::IdeState._ErrorInfo [10:err_3_0]) (select _x_3_1::_Tuple2 1)))) ) 
errwin.errButton_28 button_0::B button_1 = StdControlDef.CheckControl (_predefined._Cons (_Tuple4 "Errors:" Data.Maybe.Nothing (ioutil.toMark button_0) errwin.errFun_33) _predefined._Nil) (StdControlDef.Rows 1) (_predefined._Cons (StdControlDef.ControlId button_1) _predefined._Nil)
errwin.infCount_116 count_0::I count_1 = StdControlDef.TextControl (StdString.toString_5 count_0) (_predefined._Cons (StdControlDef.ControlWidth (StdControlDef.ContentWidth "8888")) (_predefined._Cons (StdControlDef.ControlId count_1) _predefined._Nil))
errwin.wrnCount_115 count_0::I count_1 = StdControlDef.TextControl (StdString.toString_5 count_0) (_predefined._Cons (StdControlDef.ControlWidth (StdControlDef.ContentWidth "8888")) (_predefined._Cons (StdControlDef.ControlId count_1) _predefined._Nil))
errwin.errCount_114 count_0::I count_1 = StdControlDef.TextControl (StdString.toString_5 count_0) (_predefined._Cons (StdControlDef.ControlWidth (StdControlDef.ContentWidth "8888")) (_predefined._Cons (StdControlDef.ControlId count_1) _predefined._Nil))
errwin.infobar_25 !_x_0 = case _x_0 (IdeState._ErrorInfo error_1_0 info_1_1 err_offset_1_2 err_font_1_3 err_size_1_4 err_forg_1_5 err_back_1_6 err_button_1_7 err_count_1_8 err_count_1_9 err_1_10 wrn_button_1_11 wrn_count_1_12 wrn_count_1_13 wrn_1_14 inf_button_1_15 inf_count_1_16 inf_count_1_17 inf_1_18 -> StdControlDef.LayoutControl (<{StdIOBasic.:+:}> (errwin.errButton_28 err_1_10 err_button_1_7) (<{StdIOBasic.:+:}> (errwin.errCount_114 err_count_1_9 err_count_1_8) (<{StdIOBasic.:+:}> (errwin.wrnButton_26 wrn_1_14 wrn_button_1_11) (<{StdIOBasic.:+:}> (errwin.wrnCount_115 wrn_count_1_13 wrn_count_1_12) (<{StdIOBasic.:+:}> (errwin.infButton_30 inf_1_18 inf_button_1_15) (errwin.infCount_116 inf_count_1_17 inf_count_1_16)))))) (_predefined._Cons (StdControlDef.ControlResize errwin.inf_resize_37) (_predefined._Cons (StdControlDef.ControlPos (_Tuple2 StdIOCommon.Fix StdIOCommon.zero_32)) _predefined._Nil))) 
errwin.fifi_24 !errmsg_0 !ps_1 = let _x_1_0 = errwin.ParseErrorMsg errmsg_0, path_1_1 = select _x_1_0::_Tuple2 0 in case (StdBool.not (<{StdString.==_2}> path_1_1 "")) (True -> IDE.OpenModule path_1_1 (EdSelection.lineSelection (<{StdInt.+_6}> (select _x_1_0::_Tuple2 1) StdInt.one_11)) ps_1) (False -> ps_1) 
errwin.err_resize_36 !ih_0::I oc_1 ow_2 !nw_3 = StdIOBasic._Size (select nw_3::StdIOBasic._Size 0) (<{StdInt.-_7}> (select nw_3::StdIOBasic._Size 1) ih_0)
errwin.ew_deactivate !ps_0 = let _x_1_0 = IdeState.getMenuIds ps_0, ps_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = select _x_1_0::_Tuple2 0, search_1_3 = select _x_1_2::IdeState._MenuIds 15 in update ps_1_1::iostate._PSt [1:StdMenuElement.enableMenuElements (select search_1_3::IdeState._SearchMenuIds 2) (StdMenuElement.enableMenuElements (select search_1_3::IdeState._SearchMenuIds 1) (StdMenuElement.enableMenuElements (_predefined._Cons (select _x_1_2::IdeState._MenuIds 10) (_predefined._Cons (select _x_1_2::IdeState._MenuIds 12) (_predefined._Cons (select _x_1_2::IdeState._MenuIds 13) (select _x_1_2::IdeState._MenuIds 14)))) (select ps_1_1::iostate._PSt 1)))]
errwin.ew_activate c_0 !ps_1 = let _x_1_0 = IdeState.getMenuIds ps_1, ps_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = select _x_1_0::_Tuple2 0, search_1_3 = select _x_1_2::IdeState._MenuIds 15 in update ps_1_1::iostate._PSt [1:StdMenuElement.disableMenuElements (select search_1_3::IdeState._SearchMenuIds 2) (StdMenuElement.disableMenuElements (select search_1_3::IdeState._SearchMenuIds 1) (StdMenuElement.disableMenuElements (_predefined._Cons (select _x_1_2::IdeState._MenuIds 10) (_predefined._Cons (select _x_1_2::IdeState._MenuIds 12) (_predefined._Cons (select _x_1_2::IdeState._MenuIds 13) (select _x_1_2::IdeState._MenuIds 14)))) (select ps_1_1::iostate._PSt 1)))]
errwin.err_close_info errinfo_0 ps_1 = let _x_1_0 = StdPSt.accPIO (StdWindow.getWindowPos (select errinfo_0::IdeState._ErrorInfo 0)) ps_1, err_pos_1_1 = select _x_1_0::_Tuple2 0, errinfo_1_2 = update (<{errwin._if;292;27_127}> (errwin._f126_126 (Data.Maybe.isNothing err_pos_1_1) _x_1_7) errinfo_0 err_pos_1_1 err_siz_1_8)::IdeState._ErrorInfo [9:0,13:0,17:0], ps_1_3 = select _x_1_0::_Tuple2 1, _x_1_4 = StdPSt.accPIO (StdControl.getWindow (select errinfo_0::IdeState._ErrorInfo 0)) ps_1_3, wdef_1_5 = select _x_1_4::_Tuple2 0, wdef_1_6 = Data.Maybe.fromJust wdef_1_5, _x_1_7 = StdControl.getControlOuterSize (select (select errinfo_0::IdeState._ErrorInfo 1)::FilteredListBox._FilteredListBoxId 0) wdef_1_6, err_siz_1_8 = select _x_1_7::_Tuple2 1 in _Tuple2 errinfo_1_2 (StdWindow.closeWindow (select errinfo_1_2::IdeState._ErrorInfo 0) (select _x_1_4::_Tuple2 1))
<{errwin._if;292;27_127}> !_x_0::B !errinfo_1 err_pos_2 err_siz_3 = case _x_0 (True -> errinfo_1) (_ -> update errinfo_1::IdeState._ErrorInfo [2:Data.Maybe.fromJust err_pos_2,4:err_siz_3])
errwin._f126_126::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> StdBool.not (select _x_1::_Tuple2 0))
errwin.err_close !errinf_0 !ps_1 = let _x_1_0 = errwin.err_close_info errinf_0 ps_1, _x_1_1 = IdeState.getMenuIds (select _x_1_0::_Tuple2 1) in IdeState.setErrInfo (select _x_1_0::_Tuple2 0) (StdPSt.appPIO (StdMenuElement.disableMenuElements (_predefined._Cons (<{StdList.!!}> (select (select (select _x_1_1::_Tuple2 0)::IdeState._MenuIds 15)::IdeState._SearchMenuIds 3) 1) _predefined._Nil)) (select _x_1_1::_Tuple2 1))
<{errwin.err_close`}> !ps_0 = let _x_1_0 = IdeState.getErrInfo ps_0 in errwin.err_close (select _x_1_0::_Tuple2 0) (select _x_1_0::_Tuple2 1)
errwin.anon_117 !g_0 x_1 = <{errwin.err_close`}> (g_0 x_1)
errwin.anon_118 !x_0 = <{errwin.err_close`}> (errwin.ew_deactivate x_0)
errwin.err_open !errinfo_0 !ps_1 = let !_x_1_0 = IdeState.getMenuIds ps_1, !_x_1_1 = StdControl.controlSize (<{StdControlClass.Controls;}> (StdControlClass.controlToHandles_22 Controls_1_32) (StdControlClass.getControlType_23 Controls_1_32)) (errwin.infobar_25 errinfo_0) True Data.Maybe.Nothing Data.Maybe.Nothing Data.Maybe.Nothing (select _x_1_0::_Tuple2 1), !_x_1_2 = StdControl.controlSize (<{StdControlClass.Controls;}> FilteredListBox.controlToHandles_9 FilteredListBox.getControlType_10) elb_1_21 True Data.Maybe.Nothing Data.Maybe.Nothing Data.Maybe.Nothing (select _x_1_1::_Tuple2 1), !wdef_1_3 = StdWindowDef.Window "Errors & Warnings" (<{StdIOBasic.:+:}> (errwin.infobar_25 errinfo_0) elb_1_21) (_predefined._Cons (StdWindowDef.WindowId (select errinfo_0::IdeState._ErrorInfo 0)) (_predefined._Cons (StdWindowDef.WindowClose (StdIOBasic.noLS errwin.anon_118)) (_predefined._Cons (StdWindowDef.WindowPos (_Tuple2 StdIOCommon.LeftTop (StdIOCommon.OffsetVector (select errinfo_0::IdeState._ErrorInfo 2)))) (_predefined._Cons (StdWindowDef.WindowViewSize (select _x_1_2::_Tuple2 0)) (_predefined._Cons (StdWindowDef.WindowInitActive (select (select errinfo_0::IdeState._ErrorInfo 1)::FilteredListBox._FilteredListBoxId 0)) (_predefined._Cons (StdWindowDef.WindowPen (_predefined._Cons (StdPictureDef.PenBack (select _x_1_19::_Tuple2 0)) _predefined._Nil)) (_predefined._Cons (StdWindowDef.WindowActivate (StdIOBasic.noLS (errwin.ew_activate (select (select errinfo_0::IdeState._ErrorInfo 1)::FilteredListBox._FilteredListBoxId 0)))) (_predefined._Cons (StdWindowDef.WindowDeactivate (StdIOBasic.noLS errwin.ew_deactivate)) _predefined._Nil)))))))), !ldef_1_4 = _Tuple3 (select errinfo_0::IdeState._ErrorInfo 10) (select errinfo_0::IdeState._ErrorInfo 14) (select errinfo_0::IdeState._ErrorInfo 18), !_x_1_5 = StdWindow.openWindow_55 (<{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_17 Controls_1_18) (StdControlClass.getControlType_9 Controls_1_17 Controls_1_18)) ldef_1_4 wdef_1_3 (select _x_1_19::_Tuple2 1), Controls_1_6 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_12 StdControlClass.getControlType_13, Controls_1_7 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_30 StdControlClass.getControlType_31, Controls_1_8 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_12 StdControlClass.getControlType_13, Controls_1_9 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_30 StdControlClass.getControlType_31, Controls_1_10 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_12 StdControlClass.getControlType_13, Controls_1_11 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_30 StdControlClass.getControlType_31, Controls_1_12 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_10 Controls_1_11) (StdControlClass.getControlType_9 Controls_1_10 Controls_1_11), Controls_1_13 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_9 Controls_1_12) (StdControlClass.getControlType_9 Controls_1_9 Controls_1_12), Controls_1_14 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_8 Controls_1_13) (StdControlClass.getControlType_9 Controls_1_8 Controls_1_13), Controls_1_15 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_7 Controls_1_14) (StdControlClass.getControlType_9 Controls_1_7 Controls_1_14), Controls_1_16 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_6 Controls_1_15) (StdControlClass.getControlType_9 Controls_1_6 Controls_1_15), Controls_1_17 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_22 Controls_1_16) (StdControlClass.getControlType_23 Controls_1_16), Controls_1_18 = <{StdControlClass.Controls;}> FilteredListBox.controlToHandles_9 FilteredListBox.getControlType_10, _x_1_19 = UtilObjectIO.GetDialogBackgroundColour (select _x_1_2::_Tuple2 1), inf_size_1_20 = select _x_1_1::_Tuple2 0, elb_1_21 = FilteredListBox.FilteredListBoxControl _predefined._Nil _predefined._Nil (select errinfo_0::IdeState._ErrorInfo 1) (_predefined._Cons (StdControlDef.ControlOuterSize (select errinfo_0::IdeState._ErrorInfo 4)) (_predefined._Cons (StdControlDef.ControlResize (errwin.err_resize_36 (select inf_size_1_20::StdIOBasic._Size 1))) (_predefined._Cons (StdControlDef.ControlPen (_predefined._Cons (StdPictureDef.PenColour (select errinfo_0::IdeState._ErrorInfo 5)) (_predefined._Cons (StdPictureDef.PenBack (select errinfo_0::IdeState._ErrorInfo 6)) (_predefined._Cons (StdPictureDef.PenFont (select errinfo_0::IdeState._ErrorInfo 3)) _predefined._Nil)))) (_predefined._Cons (StdControlDef.ControlPos (_Tuple2 StdIOCommon.Fix (StdIOCommon.OffsetVector (update StdIOBasic.zero_11::StdIOBasic._Vector2 [1:select inf_size_1_20::StdIOBasic._Size 1])))) (_predefined._Cons (FilteredListBox.flbMouse errwin.fifi_24) (_predefined._Cons (FilteredListBox.flbKeyboard errwin.fifi_24) _predefined._Nil)))))), Controls_1_22 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_12 StdControlClass.getControlType_13, Controls_1_23 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_30 StdControlClass.getControlType_31, Controls_1_24 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_12 StdControlClass.getControlType_13, Controls_1_25 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_30 StdControlClass.getControlType_31, Controls_1_26 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_12 StdControlClass.getControlType_13, Controls_1_27 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_30 StdControlClass.getControlType_31, Controls_1_28 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_26 Controls_1_27) (StdControlClass.getControlType_9 Controls_1_26 Controls_1_27), Controls_1_29 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_25 Controls_1_28) (StdControlClass.getControlType_9 Controls_1_25 Controls_1_28), Controls_1_30 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_24 Controls_1_29) (StdControlClass.getControlType_9 Controls_1_24 Controls_1_29), Controls_1_31 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_23 Controls_1_30) (StdControlClass.getControlType_9 Controls_1_23 Controls_1_30), Controls_1_32 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_22 Controls_1_31) (StdControlClass.getControlType_9 Controls_1_22 Controls_1_31) in case (<{StdIOCommon.==_42}> (select _x_1_5::_Tuple2 0) StdIOCommon.NoError) (True -> FilteredListBox.setFilter (select errinfo_0::IdeState._ErrorInfo 1) (errwin.makeFilter_35 (select errinfo_0::IdeState._ErrorInfo 10) (select errinfo_0::IdeState._ErrorInfo 14) (select errinfo_0::IdeState._ErrorInfo 18)) (StdPSt.appPIO (StdMenuElement.enableMenuElements (_predefined._Cons (<{StdList.!!}> (select (select (select _x_1_0::_Tuple2 0)::IdeState._MenuIds 15)::IdeState._SearchMenuIds 3) 1) _predefined._Nil)) (select _x_1_5::_Tuple2 1))) (False -> select _x_1_5::_Tuple2 1) 
errwin.countnums !_vone_0 !<{_v+_1}> !_vone_2 !<{_v+_3}> !_vone_4 !<{_v+_5}> !_x_6 !_x_7 = case _x_6 (_predefined._Cons message_1_0 messages_1_1 -> case _x_7 (_Tuple3 e_2_0 w_2_1 i_2_2 -> case (errwin.IsErrorMsg message_1_0) (True -> errwin.countnums _vone_0 <{_v+_1}> _vone_2 <{_v+_3}> _vone_4 <{_v+_5}> (StdList.dropWhile errwin.first_char_is_space_113 messages_1_1) (_Tuple3 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 e_2_0 (select _vone_0::<{StdOverloaded.one;}> 0)) w_2_1 i_2_2)) (False -> case (errwin.IsWarningMsg message_1_0) (True -> errwin.countnums _vone_0 <{_v+_1}> _vone_2 <{_v+_3}> _vone_4 <{_v+_5}> messages_1_1 (_Tuple3 e_2_0 (select <{_v+_3}>::<{StdOverloaded.+;}> 0 w_2_1 (select _vone_2::<{StdOverloaded.one;}> 0)) i_2_2)) (False -> errwin.countnums _vone_0 <{_v+_1}> _vone_2 <{_v+_3}> _vone_4 <{_v+_5}> messages_1_1 (_Tuple3 e_2_0 w_2_1 (select <{_v+_5}>::<{StdOverloaded.+;}> 0 i_2_2 (select _vone_4::<{StdOverloaded.one;}> 0)))) ) ) ) (_predefined._Nil -> _x_7) 
errwin.countnums_119 !<{_v+_0}> !_vone_1 !<{_v+_2}> !_vone_3 !<{_v+_4}> !_x_5 !_x_6 = case _x_5 (_predefined._Cons message_1_0 messages_1_1 -> case _x_6 (_Tuple3 e_2_0 w_2_1 i_2_2 -> case (errwin.IsErrorMsg message_1_0) (True -> errwin.countnums_119 <{_v+_0}> _vone_1 <{_v+_2}> _vone_3 <{_v+_4}> (StdList.dropWhile errwin.first_char_is_space_113 messages_1_1) (_Tuple3 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 e_2_0 StdInt.one_11) w_2_1 i_2_2)) (False -> case (errwin.IsWarningMsg message_1_0) (True -> errwin.countnums_119 <{_v+_0}> _vone_1 <{_v+_2}> _vone_3 <{_v+_4}> messages_1_1 (_Tuple3 e_2_0 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 w_2_1 (select _vone_1::<{StdOverloaded.one;}> 0)) i_2_2)) (False -> errwin.countnums_119 <{_v+_0}> _vone_1 <{_v+_2}> _vone_3 <{_v+_4}> messages_1_1 (_Tuple3 e_2_0 w_2_1 (select <{_v+_4}>::<{StdOverloaded.+;}> 0 i_2_2 (select _vone_3::<{StdOverloaded.one;}> 0)))) ) ) ) (_predefined._Nil -> _x_6) 
errwin.countnums_120 !_vone_0 !<{_v+_1}> !_vone_2 !<{_v+_3}> !_x_4 !_x_5 = case _x_4 (_predefined._Cons message_1_0 messages_1_1 -> case _x_5 (_Tuple3 e_2_0 w_2_1 i_2_2 -> case (errwin.IsErrorMsg message_1_0) (True -> errwin.countnums_120 _vone_0 <{_v+_1}> _vone_2 <{_v+_3}> (StdList.dropWhile errwin.first_char_is_space_113 messages_1_1) (_Tuple3 (<{StdInt.+_6}> e_2_0 StdInt.one_11) w_2_1 i_2_2)) (False -> case (errwin.IsWarningMsg message_1_0) (True -> errwin.countnums_120 _vone_0 <{_v+_1}> _vone_2 <{_v+_3}> messages_1_1 (_Tuple3 e_2_0 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 w_2_1 (select _vone_0::<{StdOverloaded.one;}> 0)) i_2_2)) (False -> errwin.countnums_120 _vone_0 <{_v+_1}> _vone_2 <{_v+_3}> messages_1_1 (_Tuple3 e_2_0 w_2_1 (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_2_2 (select _vone_2::<{StdOverloaded.one;}> 0)))) ) ) ) (_predefined._Nil -> _x_5) 
errwin.countnums_121 !<{_v+_0}> !_vone_1 !<{_v+_2}> !_x_3 !_x_4 = case _x_3 (_predefined._Cons message_1_0 messages_1_1 -> case _x_4 (_Tuple3 e_2_0 w_2_1 i_2_2 -> case (errwin.IsErrorMsg message_1_0) (True -> errwin.countnums_121 <{_v+_0}> _vone_1 <{_v+_2}> (StdList.dropWhile errwin.first_char_is_space_113 messages_1_1) (_Tuple3 (<{StdInt.+_6}> e_2_0 StdInt.one_11) w_2_1 i_2_2)) (False -> case (errwin.IsWarningMsg message_1_0) (True -> errwin.countnums_121 <{_v+_0}> _vone_1 <{_v+_2}> messages_1_1 (_Tuple3 e_2_0 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 w_2_1 StdInt.one_11) i_2_2)) (False -> errwin.countnums_121 <{_v+_0}> _vone_1 <{_v+_2}> messages_1_1 (_Tuple3 e_2_0 w_2_1 (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_2_2 (select _vone_1::<{StdOverloaded.one;}> 0)))) ) ) ) (_predefined._Nil -> _x_4) 
errwin.countnums_122 !_vone_0 !<{_v+_1}> !_x_2 !_x_3 = case _x_2 (_predefined._Cons message_1_0 messages_1_1 -> case _x_3 (_Tuple3 e_2_0 w_2_1 i_2_2 -> case (errwin.IsErrorMsg message_1_0) (True -> errwin.countnums_122 _vone_0 <{_v+_1}> (StdList.dropWhile errwin.first_char_is_space_113 messages_1_1) (_Tuple3 (<{StdInt.+_6}> e_2_0 StdInt.one_11) w_2_1 i_2_2)) (False -> case (errwin.IsWarningMsg message_1_0) (True -> errwin.countnums_122 _vone_0 <{_v+_1}> messages_1_1 (_Tuple3 e_2_0 (<{StdInt.+_6}> w_2_1 StdInt.one_11) i_2_2)) (False -> errwin.countnums_122 _vone_0 <{_v+_1}> messages_1_1 (_Tuple3 e_2_0 w_2_1 (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_2_2 (select _vone_0::<{StdOverloaded.one;}> 0)))) ) ) ) (_predefined._Nil -> _x_3) 
errwin.countnums_123 !<{_v+_0}> !_x_1 !_x_2 = case _x_1 (_predefined._Cons message_1_0 messages_1_1 -> case _x_2 (_Tuple3 e_2_0 w_2_1 i_2_2 -> case (errwin.IsErrorMsg message_1_0) (True -> errwin.countnums_123 <{_v+_0}> (StdList.dropWhile errwin.first_char_is_space_113 messages_1_1) (_Tuple3 (<{StdInt.+_6}> e_2_0 StdInt.one_11) w_2_1 i_2_2)) (False -> case (errwin.IsWarningMsg message_1_0) (True -> errwin.countnums_123 <{_v+_0}> messages_1_1 (_Tuple3 e_2_0 (<{StdInt.+_6}> w_2_1 StdInt.one_11) i_2_2)) (False -> errwin.countnums_123 <{_v+_0}> messages_1_1 (_Tuple3 e_2_0 w_2_1 (select <{_v+_0}>::<{StdOverloaded.+;}> 0 i_2_2 StdInt.one_11))) ) ) ) (_predefined._Nil -> _x_2) 
errwin.countnums_124 !_x_0 !_x_1 = case _x_0 (_predefined._Cons message_1_0 messages_1_1 -> case _x_1 (_Tuple3 e_2_0 w_2_1 i_2_2 -> case (errwin.IsErrorMsg message_1_0) (True -> errwin.countnums_124 (StdList.dropWhile errwin.first_char_is_space_113 messages_1_1) (_Tuple3 (<{StdInt.+_6}> e_2_0 StdInt.one_11) w_2_1 i_2_2)) (False -> case (errwin.IsWarningMsg message_1_0) (True -> errwin.countnums_124 messages_1_1 (_Tuple3 e_2_0 (<{StdInt.+_6}> w_2_1 StdInt.one_11) i_2_2)) (False -> errwin.countnums_124 messages_1_1 (_Tuple3 e_2_0 w_2_1 (<{StdInt.+_6}> i_2_2 StdInt.one_11))) ) ) ) (_predefined._Nil -> _x_1) 
errwin.updateErrorWindowInteractive !_x_0 !ps_1 = case _x_0 (_predefined._Nil -> ps_1) (_ -> let !_x_1_0 = IdeState.getErrInfo ps_1, !_x_1_1 = StdPSt.accPIO (errwin.checkWindowExistence (select errinfo_1_9::IdeState._ErrorInfo 0)) (select _x_1_0::_Tuple2 1), !ps_1_2 = <{errwin._c;67;23_128}> (select _x_1_1::_Tuple2 0) _x_1_1 errinfo_1_9, !ps_1_3 = FilteredListBox.appendFilteredListBoxItems (select errinfo_1_9::IdeState._ErrorInfo 1) _x_0 ps_1_2, !_x_1_4 = errwin.countnums_124 _x_0 (_Tuple3 (select errinfo_1_9::IdeState._ErrorInfo 9) (select errinfo_1_9::IdeState._ErrorInfo 13) (select errinfo_1_9::IdeState._ErrorInfo 17)), !cts_1_5 = <{errwin._c;76;23_129}> (_Tuple3 (<{StdInt.==_16}> numerr_1_10 (select errinfo_1_9::IdeState._ErrorInfo 9)) (<{StdInt.==_16}> numwrn_1_11 (select errinfo_1_9::IdeState._ErrorInfo 13)) (<{StdInt.==_16}> numinf_1_12 (select errinfo_1_9::IdeState._ErrorInfo 17))) errinfo_1_9 numinf_1_12 numwrn_1_11 numerr_1_10, !ps_1_6 = StdPSt.appPIO (StdControl.setControlTexts cts_1_5) ps_1_3, !errinfo_1_7 = update errinfo_1_9::IdeState._ErrorInfo [9:numerr_1_10,13:numwrn_1_11,17:numinf_1_12], !ps_1_8 = IdeState.setErrInfo errinfo_1_7 ps_1_6, errinfo_1_9::I = select _x_1_0::_Tuple2 0, numerr_1_10::I = select _x_1_4::_Tuple3 0, numwrn_1_11::I = select _x_1_4::_Tuple3 1, numinf_1_12 = select _x_1_4::_Tuple3 2 in ps_1_8)
<{errwin._c;76;23_129}> !_x_0 errinfo_1 numinf_2::I numwrn_3::I numerr_4::I = case _x_0 (_Tuple3 _x_1_0 _x_1_1 _x_1_2 -> case _x_1_0 (True -> case _x_1_1 (True -> case _x_1_2 (True -> _predefined._Nil) (False -> _predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 16) (StdString.toString_5 numinf_2)) _predefined._Nil) ) (False -> case _x_1_2 (True -> _predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 12) (StdString.toString_5 numwrn_3)) _predefined._Nil) (False -> _predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 12) (StdString.toString_5 numwrn_3)) (_predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 16) (StdString.toString_5 numinf_2)) _predefined._Nil)) ) ) (False -> case _x_1_1 (True -> case _x_1_2 (True -> _predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 8) (StdString.toString_5 numerr_4)) _predefined._Nil) (False -> _predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 8) (StdString.toString_5 numerr_4)) (_predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 16) (StdString.toString_5 numinf_2)) _predefined._Nil)) ) (False -> case _x_1_2 (True -> _predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 8) (StdString.toString_5 numerr_4)) (_predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 12) (StdString.toString_5 numwrn_3)) _predefined._Nil)) (False -> _predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 8) (StdString.toString_5 numerr_4)) (_predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 12) (StdString.toString_5 numwrn_3)) (_predefined._Cons (_Tuple2 (select errinfo_1::IdeState._ErrorInfo 16) (StdString.toString_5 numinf_2)) _predefined._Nil))) ) ) ) 
<{errwin._c;67;23_128}> !_x_0::B !_x_1 errinfo_2 = case _x_0 (True -> select _x_1::_Tuple2 1) (_ -> errwin.err_open errinfo_2 (select _x_1::_Tuple2 1))
errwin.updateErrorWindow !messages_0 !ps_1 = let _x_1_0 = IdeState.getInteract ps_1 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> StdFunc.seq (StdList.map IdeState.writeLog messages_0) (select _x_1_0::_Tuple2 1)) (False -> errwin.updateErrorWindowInteractive messages_0 (select _x_1_0::_Tuple2 1)) 
errwin.ew_is_active !ps_0 = let _x_1_0 = StdPSt.accPIO StdWindow.getActiveWindow ps_0, win_1_1 = select _x_1_0::_Tuple2 0 in case (Data.Maybe.isNothing win_1_1) (True -> <{_Tuple2!3}> False (select (IdeState.getErrInfo (select _x_1_0::_Tuple2 1))::_Tuple2 1)) (False -> let ps_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = IdeState.getErrInfo ps_3_0 in case (<{id.==_27}> (Data.Maybe.fromJust win_1_1) (select (select _x_3_1::_Tuple2 0)::IdeState._ErrorInfo 0)) (True -> <{_Tuple2!3}> True (select _x_3_1::_Tuple2 1)) (False -> <{_Tuple2!3}> False (select _x_3_1::_Tuple2 1)) ) 
errwin.ew_safe_close !ps_0 = let _x_1_0 = StdPSt.accPIO StdWindow.getActiveWindow ps_0, win_1_1 = select _x_1_0::_Tuple2 0 in case (Data.Maybe.isNothing win_1_1) (True -> let _x_3_0 = IdeState.getErrInfo (select _x_1_0::_Tuple2 1) in errwin.err_close (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) (False -> let ps_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = IdeState.getErrInfo ps_3_0, err_3_2 = select _x_3_1::_Tuple2 0 in case (<{id.==_27}> (Data.Maybe.fromJust win_1_1) (select err_3_2::IdeState._ErrorInfo 0)) (True -> errwin.err_close err_3_2 (errwin.ew_deactivate (select _x_3_1::_Tuple2 1))) (False -> errwin.err_close err_3_2 (select _x_3_1::_Tuple2 1)) ) 
errwin.ew_maybe_close !win_0 !ps_1 = let _x_1_0 = IdeState.getErrInfo ps_1, err_1_1 = select _x_1_0::_Tuple2 0 in case (<{id.==_27}> win_0 (select err_1_1::IdeState._ErrorInfo 0)) (True -> _Tuple2 True (errwin.err_close err_1_1 (errwin.ew_deactivate (select _x_1_0::_Tuple2 1)))) (False -> _Tuple2 False (select _x_1_0::_Tuple2 1)) 
errwin.err_init !_x_0 w_1 = case _x_0 (PmPrefs._ErrPrefs err_pos_1_0 err_siz_1_1 err_fname_1_2 err_fsize_1_3 err_forc_1_4 err_bacc_1_5 err_err_1_6 err_wrn_1_7 err_inf_1_8 -> let _x_2_0 = StdId.openId_1 w_1, _x_2_1 = FilteredListBox.openFilteredListBoxId (<{StdId.Ids;}> StdId.openId_1 StdId.openIds_2 StdId.openR2Id_3 StdId.openR2Ids_4 StdId.openRId_5 StdId.openRIds_6) (select _x_2_0::_Tuple2 1), _x_2_2 = StdId.openId_1 (select _x_2_1::_Tuple2 1), _x_2_3 = StdId.openId_1 (select _x_2_2::_Tuple2 1), _x_2_4 = StdId.openId_1 (select _x_2_3::_Tuple2 1), _x_2_5 = StdId.openId_1 (select _x_2_4::_Tuple2 1), _x_2_6 = StdId.openId_1 (select _x_2_5::_Tuple2 1), _x_2_7 = StdId.openId_1 (select _x_2_6::_Tuple2 1), _x_2_8 = StdPSt.accScreenPicture_12 (ioutil.safeOpenFixedFont (StdPictureDef._FontDef err_fname_1_2 _predefined._Nil err_fsize_1_3)) (select _x_2_7::_Tuple2 1) in _Tuple2 (IdeState._ErrorInfo (select _x_2_0::_Tuple2 0) (select _x_2_1::_Tuple2 0) err_pos_1_0 (select _x_2_8::_Tuple2 0) err_siz_1_1 err_forc_1_4 err_bacc_1_5 (select _x_2_2::_Tuple2 0) (select _x_2_3::_Tuple2 0) 0 err_err_1_6 (select _x_2_4::_Tuple2 0) (select _x_2_5::_Tuple2 0) 0 err_wrn_1_7 (select _x_2_6::_Tuple2 0) (select _x_2_7::_Tuple2 0) 0 err_inf_1_8) (select _x_2_8::_Tuple2 1)) 
errwin.err_shut !info_0 = let fdef_1_0 = StdPicture.getFontDef (select info_0::IdeState._ErrorInfo 3) in PmPrefs._ErrPrefs (select info_0::IdeState._ErrorInfo 2) (select info_0::IdeState._ErrorInfo 4) (select fdef_1_0::StdPictureDef._FontDef 0) (select fdef_1_0::StdPictureDef._FontDef 2) (select info_0::IdeState._ErrorInfo 5) (select info_0::IdeState._ErrorInfo 6) (select info_0::IdeState._ErrorInfo 10) (select info_0::IdeState._ErrorInfo 14) (select info_0::IdeState._ErrorInfo 18)
errwin.lsfun_45 !f_0 !_x_1 = case _x_1 (_Tuple2 ls_1_0 ps_1_1 -> f_0 (_Tuple2 ls_1_0 ps_1_1)) 
errwin.cont_42 !_vtoString_0 !col_1 !ps_2 = case (Data.Maybe.isNothing col_1) (True -> ps_2) (False -> StdClipboard.setClipboard (_predefined._Cons (StdClipboard.toClipboard_4 (select _vtoString_0::<{StdOverloaded.toString;}> 0 (Data.Maybe.fromJust col_1))) _predefined._Nil) ps_2) 
errwin.cont_125 !col_0 !ps_1 = case (Data.Maybe.isNothing col_0) (True -> ps_1) (False -> StdClipboard.setClipboard (_predefined._Cons (StdClipboard.toClipboard_4 (colourclip.toString_0 (Data.Maybe.fromJust col_0))) _predefined._Nil) ps_1) 
errwin.copyFun_50 rgbid_0 !_x_1 = case _x_1 (_Tuple2 ls_1_0 ps_1_1 -> _Tuple2 ls_1_0 (colorpickcontrol.getColourBoxColour rgbid_0 errwin.cont_125 ps_1_1)) 
errwin.toStringC_49 !c_0 = colourclip.toString_0 c_0
errwin.setBoxCol_52 fcid_0 bcid_1 !_x_2 = case _x_2 (_Tuple2 ls_1_0 ps_1_1 -> case ls_1_0 (errwin._EWO fn_2_0 fs_2_1 fc_2_2 bc_2_3 cur_2_4 -> let _x_3_0 = <{errwin._c;456;23_130}> cur_2_4 fcid_0 fc_2_2 bcid_1 bc_2_3 in _Tuple2 ls_1_0 (StdPSt.appPIO (<{colorpickcontrol.SetColourBox`}> (select _x_3_0::_Tuple2 0) (StdPicture.toRGBColour (select _x_3_0::_Tuple2 1))) ps_1_1)) ) 
<{errwin._c;456;23_130}> !cur_0 fcid_1 fc_2 bcid_3 bc_4 = case cur_0 (errwin.TXT -> _Tuple2 fcid_1 fc_2) (errwin.BCK -> _Tuple2 bcid_3 bc_4) 
errwin.pasteFun_51 rgb_0 fcid_1 bcid_2 !_x_3 = case _x_3 (_Tuple2 ls_1_0 ps_1_1 -> case ls_1_0 (errwin._EWO fn_2_0 fs_2_1 fc_2_2 bc_2_3 cur_2_4 -> let _x_3_0 = StdClipboard.getClipboard ps_1_1, its_3_1 = select _x_3_0::_Tuple2 0 in case (StdList.isEmpty its_3_1) (True -> _Tuple2 ls_1_0 (select _x_3_0::_Tuple2 1)) (False -> let its_5_0 = StdList.map StdClipboard.fromClipboard_3 its_3_1, its_5_1 = StdList.filter Data.Maybe.isJust its_5_0 in case (StdList.isEmpty its_5_1) (True -> _Tuple2 ls_1_0 (select _x_3_0::_Tuple2 1)) (False -> let it_7_0 = Data.Maybe.fromJust (StdList.hd its_5_1) in case (StdBool.not (<{StdString.==_2}> it_7_0 (errwin.toStringC_49 (colourclip.fromString_1 it_7_0)))) (True -> _Tuple2 ls_1_0 (select _x_3_0::_Tuple2 1)) (False -> let _x_9_0 = errwin.setBoxCol_52 fcid_1 bcid_2 (_Tuple2 (<{errwin._c;449;23_131}> cur_2_4 ls_1_0 col_9_1) (select _x_3_0::_Tuple2 1)), col_9_1 = colourclip.fromString_1 it_7_0 in _Tuple2 (select _x_9_0::_Tuple2 0) (<{colorpickcontrol.setColourBoxColour`}> rgb_0 col_9_1 (select _x_9_0::_Tuple2 1))) ) ) ) ) 
<{errwin._c;449;23_131}> !cur_0 !ls_1 !col_2 = case cur_0 (errwin.TXT -> update ls_1::errwin._EWO [2:col_2]) (errwin.BCK -> update ls_1::errwin._EWO [3:col_2]) 
errwin.apply_55 !_x_0 = case _x_0 (_Tuple2 ls_1_0 ps_1_1 -> case ls_1_0 (errwin._EWO fn_2_0 fs_2_1 fc_2_2 bc_2_3 cur_2_4 -> let _x_3_0 = IdeState.getErrInfo ps_1_1, errinf_3_1 = select _x_3_0::_Tuple2 0, _x_3_2 = ioutil.accScreenPicture_21 (ioutil.safeOpenFixedFont (StdPictureDef._FontDef fn_2_0 _predefined._Nil fs_2_1)) (select _x_3_0::_Tuple2 1), fnt_3_3 = select _x_3_2::_Tuple2 0 in _Tuple2 ls_1_0 (IdeState.setErrInfo (update errinf_3_1::IdeState._ErrorInfo [3:fnt_3_3,5:fc_2_2,6:bc_2_3]) (FilteredListBox.setFilteredListBoxPen (select errinf_3_1::IdeState._ErrorInfo 1) (_predefined._Cons (StdPictureDef.PenFont fnt_3_3) (_predefined._Cons (StdPictureDef.PenColour fc_2_2) (_predefined._Cons (StdPictureDef.PenBack bc_2_3) _predefined._Nil))) (select _x_3_2::_Tuple2 1)))) ) 
errwin.cont2_41 !col_0 !_x_1 = case _x_1 (_Tuple2 ls_1_0 ps_1_1 -> case ls_1_0 (errwin._EWO fn_2_0 fs_2_1 fc_2_2 bc_2_3 cur_2_4 -> errwin.apply_55 (_Tuple2 (<{errwin._c;419;23_132}> cur_2_4 ls_1_0 col_0) ps_1_1)) ) 
<{errwin._c;419;23_132}> !cur_0 !ls_1 !col_2 = case cur_0 (errwin.TXT -> update ls_1::errwin._EWO [2:col_2]) (errwin.BCK -> update ls_1::errwin._EWO [3:col_2]) 
errwin.cont_40 lsid_0 !col_1 !ps_2 = case (Data.Maybe.isNothing col_1) (True -> ps_2) (False -> select (StdReceiver.asyncSend lsid_0 (errwin.cont2_41 (Data.Maybe.fromJust col_1)) ps_2)::_Tuple2 1) 
errwin.applyFun_48 rgbid_0 lsid_1 !_x_2 = case _x_2 (_Tuple2 ls_1_0 ps_1_1 -> _Tuple2 ls_1_0 (colorpickcontrol.getColourBoxColour rgbid_0 (errwin.cont_40 lsid_1) ps_1_1)) 
errwin.cancelFun_47 inistate_0 dialog_1 !_x_2 = case _x_2 (_Tuple2 ls_1_0 ps_1_1 -> let _x_2_0 = errwin.apply_55 (_Tuple2 inistate_0 ps_1_1) in _Tuple2 (select _x_2_0::_Tuple2 0) (StdWindow.closeWindow dialog_1 (select _x_2_0::_Tuple2 1))) 
errwin.cont2_39 dialog_0 col_1 !_x_2 = case _x_2 (_Tuple2 ls_1_0 ps_1_1 -> case ls_1_0 (errwin._EWO fn_2_0 fs_2_1 fc_2_2 bc_2_3 cur_2_4 -> let _x_3_0 = errwin.apply_55 (_Tuple2 (<{errwin._c;399;23_133}> cur_2_4 ls_1_0 col_1) ps_1_1) in _Tuple2 (select _x_3_0::_Tuple2 0) (StdWindow.closeWindow dialog_0 (select _x_3_0::_Tuple2 1))) ) 
<{errwin._c;399;23_133}> !cur_0 !ls_1 !col_2 = case cur_0 (errwin.TXT -> update ls_1::errwin._EWO [2:col_2]) (errwin.BCK -> update ls_1::errwin._EWO [3:col_2]) 
errwin.cont_38 dialog_0 lsid_1 !col_2 !ps_3 = case (Data.Maybe.isNothing col_2) (True -> ps_3) (False -> select (StdReceiver.asyncSend lsid_1 (errwin.cont2_39 dialog_0 (Data.Maybe.fromJust col_2)) ps_3)::_Tuple2 1) 
errwin.okFun_46 rgbid_0 lsid_1 dialog_2 !_x_3 = case _x_3 (_Tuple2 ls_1_0 ps_1_1 -> _Tuple2 ls_1_0 (colorpickcontrol.getColourBoxColour rgbid_0 (errwin.cont_38 dialog_2 lsid_1) ps_1_1)) 
errwin.mfilter_53::B !_x_0 = case _x_0 (StdIOCommon.MouseDown _x_1_0 _x_1_1 _x_1_2 -> True) (_ -> False)
errwin.cont2_44 act_0 col_1 !_x_2 = case _x_2 (_Tuple2 ls_1_0 ps_1_1 -> case ls_1_0 (errwin._EWO fn_2_0 fs_2_1 fc_2_2 bc_2_3 cur_2_4 -> _Tuple2 (<{errwin._c;502;23_134}> cur_2_4 ls_1_0 col_1 act_0) ps_1_1) ) 
<{errwin._c;502;23_134}> !cur_0 !ls_1 !col_2 !act_3 = case cur_0 (errwin.TXT -> update ls_1::errwin._EWO [2:col_2,4:act_3]) (errwin.BCK -> update ls_1::errwin._EWO [3:col_2,4:act_3]) 
errwin.cont_43 lsid_0 rgbid_1 bcid_2 bc_3 fcid_4 fc_5 cur_6 act_7 !col_8 !ps_9 = case (Data.Maybe.isNothing col_8) (True -> ps_9) (False -> let col_2_0 = Data.Maybe.fromJust col_8 in select (StdReceiver.asyncSend lsid_0 (errwin.cont2_44 act_7 col_2_0) (<{colorpickcontrol.setColourBoxColour`}> rgbid_1 (<{errwin._c;494;22_135}> act_7 fc_5 bc_3) (colorpickcontrol.setColourBoxId rgbid_1 (<{errwin._c;491;21_136}> act_7 fcid_4 bcid_2) (StdPSt.appPIO (<{errwin._c;481;31_139}> act_7 bcid_2 cur_6 col_2_0 bc_3) (StdPSt.appPIO (<{errwin._c;471;31_142}> act_7 fcid_4 cur_6 col_2_0 fc_5) ps_9)))))::_Tuple2 1) 
<{errwin._c;471;31_142}> !act_0 fcid_1 cur_2 col_3 fc_4 = case act_0 (errwin.TXT -> <{colorpickcontrol.SetColourBox`}> fcid_1 (<{errwin._c;472;60_140}> cur_2 col_3 fc_4)) (_ -> colorpickcontrol.SetColourBox fcid_1 (<{errwin._c;476;59_141}> cur_2 col_3 fc_4))
<{errwin._c;476;59_141}> !cur_0 col_1 fc_2 = case cur_0 (errwin.TXT -> StdPicture.toRGBColour col_1) (_ -> StdPicture.toRGBColour fc_2)
<{errwin._c;472;60_140}> !cur_0 col_1 fc_2 = case cur_0 (errwin.TXT -> StdPicture.toRGBColour col_1) (_ -> StdPicture.toRGBColour fc_2)
<{errwin._c;481;31_139}> !act_0 bcid_1 cur_2 col_3 bc_4 = case act_0 (errwin.BCK -> <{colorpickcontrol.SetColourBox`}> bcid_1 (<{errwin._c;482;60_137}> cur_2 col_3 bc_4)) (_ -> colorpickcontrol.SetColourBox bcid_1 (<{errwin._c;486;59_138}> cur_2 col_3 bc_4))
<{errwin._c;486;59_138}> !cur_0 col_1 bc_2 = case cur_0 (errwin.BCK -> StdPicture.toRGBColour col_1) (_ -> StdPicture.toRGBColour bc_2)
<{errwin._c;482;60_137}> !cur_0 col_1 bc_2 = case cur_0 (errwin.BCK -> StdPicture.toRGBColour col_1) (_ -> StdPicture.toRGBColour bc_2)
<{errwin._c;491;21_136}> !act_0 fcid_1 bcid_2 = case act_0 (errwin.TXT -> fcid_1) (errwin.BCK -> bcid_2) 
<{errwin._c;494;22_135}> !act_0 fc_1 bc_2 = case act_0 (errwin.TXT -> fc_1) (errwin.BCK -> bc_2) 
<{errwin.==_66}>::B !_x_0 !_x_1 = case _x_0 (errwin.TXT -> case _x_1 (errwin.TXT -> True) ) (errwin.BCK -> case _x_1 (errwin.BCK -> True) ) (_ -> False)
errwin.mfun_54 rgbid_0 lsid_1 fcid_2 bcid_3 !act_4 _x_5 !_x_6 = case _x_6 (_Tuple2 ls_1_0 ps_1_1 -> case ls_1_0 (errwin._EWO fn_2_0 fs_2_1 fc_2_2 bc_2_3 cur_2_4 -> case (<{errwin.==_66}> act_4 cur_2_4) (True -> _Tuple2 ls_1_0 ps_1_1) (False -> _Tuple2 ls_1_0 (colorpickcontrol.getColourBoxColour rgbid_0 (errwin.cont_43 lsid_1 rgbid_0 bcid_3 bc_2_3 fcid_2 fc_2_2 cur_2_4 act_4) ps_1_1)) ) ) 
errwin.sizefun_57 size_0::I !_x_1 = case _x_1 (_Tuple2 ls_1_0 ps_1_1 -> _Tuple2 (update ls_1_0::errwin._EWO [1:size_0]) ps_1_1) 
errwin.fontfun_56 name_0 !_x_1 = case _x_1 (_Tuple2 ls_1_0 ps_1_1 -> _Tuple2 (update ls_1_0::errwin._EWO [0:name_0]) ps_1_1) 
errwin.err_options !ps_0 = let Controls_1_0 = <{StdControlClass.Controls;}> morecontrols.controlToHandles_0 morecontrols.getControlType_1, Controls_1_1 = <{StdControlClass.Controls;}> colorpickcontrol.controlToHandles_9 colorpickcontrol.getControlType_10, Controls_1_2 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_0 Controls_1_1) (StdControlClass.getControlType_9 Controls_1_0 Controls_1_1), Controls_1_3 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_22 Controls_1_2) (StdControlClass.getControlType_23 Controls_1_2), Controls_1_4 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_30 StdControlClass.getControlType_31, Controls_1_5 = <{StdControlClass.Controls;}> colorpickcontrol.controlToHandles_13 colorpickcontrol.getControlType_14, Controls_1_6 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_30 StdControlClass.getControlType_31, Controls_1_7 = <{StdControlClass.Controls;}> colorpickcontrol.controlToHandles_13 colorpickcontrol.getControlType_14, Controls_1_8 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_6 Controls_1_7) (StdControlClass.getControlType_9 Controls_1_6 Controls_1_7), Controls_1_9 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_5 Controls_1_8) (StdControlClass.getControlType_9 Controls_1_5 Controls_1_8), Controls_1_10 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_4 Controls_1_9) (StdControlClass.getControlType_9 Controls_1_4 Controls_1_9), Controls_1_11 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_22 Controls_1_10) (StdControlClass.getControlType_23 Controls_1_10), Controls_1_12::I = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_10 StdControlClass.getControlType_11, Controls_1_13 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_10 StdControlClass.getControlType_11, Controls_1_14 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_10 StdControlClass.getControlType_11, Controls_1_15 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_10 StdControlClass.getControlType_11, Controls_1_16 = <{StdControlClass.Controls;}> StdControlClass.controlToHandles_10 StdControlClass.getControlType_11, Controls_1_17 = <{StdControlClass.Controls;}> StdControlReceiver.controlToHandles_0 StdControlReceiver.getControlType_1, Controls_1_18 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_16 Controls_1_17) (StdControlClass.getControlType_9 Controls_1_16 Controls_1_17), Controls_1_19 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_15 Controls_1_18) (StdControlClass.getControlType_9 Controls_1_15 Controls_1_18), Controls_1_20 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_14 Controls_1_19) (StdControlClass.getControlType_9 Controls_1_14 Controls_1_19), Controls_1_21 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_13 Controls_1_20) (StdControlClass.getControlType_9 Controls_1_13 Controls_1_20), Controls_1_22 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_12 Controls_1_21) (StdControlClass.getControlType_9 Controls_1_12 Controls_1_21), Controls_1_23 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_11 Controls_1_22) (StdControlClass.getControlType_9 Controls_1_11 Controls_1_22), _x_1_24 = StdId.openId_13 ps_0, _x_1_25 = StdId.openId_13 (select _x_1_24::_Tuple2 1), _x_1_26 = StdId.openId_13 (select _x_1_25::_Tuple2 1), _x_1_27 = StdId.openId_13 (select _x_1_26::_Tuple2 1), _x_1_28 = StdId.openId_13 (select _x_1_27::_Tuple2 1), _x_1_29 = colorpickcontrol.openRGBId (<{StdId.Ids;}> StdId.openId_13 StdId.openIds_14 StdId.openR2Id_15 StdId.openR2Ids_16 StdId.openRId_17 StdId.openRIds_18) (select _x_1_28::_Tuple2 1), _x_1_30 = StdPSt.accPIO (StdPSt.accScreenPicture_13 StdPicture.getFontNames) (select _x_1_29::_Tuple2 1), _x_1_31 = IdeState.getErrInfo (select _x_1_30::_Tuple2 1), errinf_1_32 = select _x_1_31::_Tuple2 0, fdef_1_33 = StdPicture.getFontDef (select errinf_1_32::IdeState._ErrorInfo 3), inifn_1_34 = select fdef_1_33::StdPictureDef._FontDef 0, inifs_1_35 = select fdef_1_33::StdPictureDef._FontDef 2, inifc_1_36 = select errinf_1_32::IdeState._ErrorInfo 5, inibc_1_37 = select errinf_1_32::IdeState._ErrorInfo 6, inistate_1_38 = errwin._EWO inifn_1_34 inifs_1_35 inifc_1_36 inibc_1_37 errwin.TXT, left_1_39 = StdControlDef.ControlPos (_Tuple2 StdIOCommon.Left StdIOCommon.zero_32), rgbid_1_40 = select _x_1_29::_Tuple2 0, fcid_1_41 = select _x_1_27::_Tuple2 0, _x_1_42 = StdId.openRId_17 (select _x_1_31::_Tuple2 1), lsid_1_43 = select _x_1_42::_Tuple2 0, bcid_1_44 = select _x_1_28::_Tuple2 0, ok_1_45 = select _x_1_25::_Tuple2 0, dialog_1_46 = select _x_1_24::_Tuple2 0, cancel_1_47 = select _x_1_26::_Tuple2 0 in select (StdWindow.openModalDialog_58 (<{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_1_3 Controls_1_23) (StdControlClass.getControlType_9 Controls_1_3 Controls_1_23)) inistate_1_38 (StdWindowDef.Dialog "Error Window..." (<{StdIOBasic.:+:}> (StdControlDef.LayoutControl (<{StdIOBasic.:+:}> (morecontrols.FontNameSizeControl inifn_1_34 inifs_1_35 (select _x_1_30::_Tuple2 0) (_predefined._Cons 7 (_predefined._Cons 8 (_predefined._Cons 9 (_predefined._Cons 10 (_predefined._Cons 11 (_predefined._Cons 12 _predefined._Nil)))))) errwin.fontfun_56 errwin.sizefun_57 (_predefined._Cons left_1_39 _predefined._Nil)) (<{colorpickcontrol.RGBColourPickControl`}> rgbid_1_40 inifc_1_36 fcid_1_41 (Data.Maybe.Just (_Tuple2 StdIOCommon.Left StdIOCommon.zero_32)))) _predefined._Nil) (<{StdIOBasic.:+:}> (StdControlDef.LayoutControl (<{StdIOBasic.:+:}> (StdControlDef.TextControl "Text:" (_predefined._Cons left_1_39 (_predefined._Cons (StdControlDef.ControlWidth (StdControlDef.ContentWidth "Background: ")) _predefined._Nil))) (<{StdIOBasic.:+:}> (<{colorpickcontrol.ColourBoxControl`}> (StdPicture.toRGBColour inifc_1_36) fcid_1_41 (_Tuple2 errwin.mfilter_53 (errwin.mfun_54 rgbid_1_40 lsid_1_43 fcid_1_41 bcid_1_44 errwin.TXT)) Data.Maybe.Nothing) (<{StdIOBasic.:+:}> (StdControlDef.TextControl "Background:" (_predefined._Cons left_1_39 (_predefined._Cons (StdControlDef.ControlWidth (StdControlDef.ContentWidth "Background: ")) _predefined._Nil))) (<{colorpickcontrol.ColourBoxControl`}> (StdPicture.toRGBColour inibc_1_37) bcid_1_44 (_Tuple2 errwin.mfilter_53 (errwin.mfun_54 rgbid_1_40 lsid_1_43 fcid_1_41 bcid_1_44 errwin.BCK)) Data.Maybe.Nothing)))) _predefined._Nil) (<{StdIOBasic.:+:}> (StdControlDef.ButtonControl "Ok" (_predefined._Cons (StdControlDef.ControlId ok_1_45) (_predefined._Cons (StdControlDef.ControlFunction (errwin.okFun_46 rgbid_1_40 lsid_1_43 dialog_1_46)) (_predefined._Cons (StdControlDef.ControlPos (_Tuple2 StdIOCommon.Right StdIOCommon.zero_32)) (_predefined._Cons (StdControlDef.ControlWidth (StdControlDef.ContentWidth "Cancel")) _predefined._Nil))))) (<{StdIOBasic.:+:}> (StdControlDef.ButtonControl "Cancel" (_predefined._Cons (StdControlDef.ControlPos (_Tuple2 StdIOCommon.LeftOfPrev StdIOCommon.zero_32)) (_predefined._Cons (StdControlDef.ControlFunction (errwin.cancelFun_47 inistate_1_38 dialog_1_46)) (_predefined._Cons (StdControlDef.ControlId cancel_1_47) _predefined._Nil)))) (<{StdIOBasic.:+:}> (StdControlDef.ButtonControl "Apply" (_predefined._Cons (StdControlDef.ControlPos (_Tuple2 StdIOCommon.LeftOfPrev StdIOCommon.zero_32)) (_predefined._Cons (StdControlDef.ControlFunction (errwin.applyFun_48 rgbid_1_40 lsid_1_43)) _predefined._Nil))) (<{StdIOBasic.:+:}> (StdControlDef.ButtonControl "Paste" (_predefined._Cons (StdControlDef.ControlPos (_Tuple2 StdIOCommon.LeftOfPrev StdIOCommon.zero_32)) (_predefined._Cons (StdControlDef.ControlFunction (errwin.pasteFun_51 rgbid_1_40 fcid_1_41 bcid_1_44)) _predefined._Nil))) (<{StdIOBasic.:+:}> (StdControlDef.ButtonControl "Copy" (_predefined._Cons (StdControlDef.ControlPos (_Tuple2 StdIOCommon.LeftOfPrev StdIOCommon.zero_32)) (_predefined._Cons (StdControlDef.ControlFunction (errwin.copyFun_50 rgbid_1_40)) _predefined._Nil))) (StdReceiverDef.Receiver lsid_1_43 errwin.lsfun_45 _predefined._Nil)))))))) (_predefined._Cons (StdWindowDef.WindowId dialog_1_46) (_predefined._Cons (StdWindowDef.WindowOk ok_1_45) (_predefined._Cons (StdWindowDef.WindowCancel cancel_1_47) (_predefined._Cons (StdWindowDef.WindowClose (errwin.cancelFun_47 inistate_1_38 dialog_1_46)) (_predefined._Cons (StdWindowDef.WindowInit (errwin.setBoxCol_52 fcid_1_41 bcid_1_44)) _predefined._Nil)))))) (select _x_1_42::_Tuple2 1))::_Tuple2 1
<{errwin.TD;EWO}> _x_0::B = _predefined._Nil
<{errwin.TD;EWO_LS}> _x_0::B = _predefined._Nil

:: errwin.EWO_LS = errwin.TXT | errwin.BCK

|| Converted Records
:: errwin._EWO = {!errwin.fn, !errwin.fs::I, !errwin.fc, !errwin.bc, !errwin.cur}

:: <{errwin.gEq_s;}> = {!errwin.gEq_s}

:: <{errwin.gEq_ss;}> = {!errwin.gEq_ss}

:: <{errwin.gEq_sss;}> = {!errwin.gEq_sss}

:: <{errwin.gEq_ssss;}> = {!errwin.gEq_ssss}

:: <{errwin.gEq_sssss;}> = {!errwin.gEq_sssss}

:: <{errwin.gEq_ssssss;}> = {!errwin.gEq_ssssss}

:: <{errwin.gEq_sssssss;}> = {!errwin.gEq_sssssss}

:: <{errwin.gEq_ssssssss;}> = {!errwin.gEq_ssssssss}

:: <{errwin.gEq_sssssssss;}> = {!errwin.gEq_sssssssss}

:: <{errwin.bimap_s;}> = {errwin.bimap_s}

:: <{errwin.bimap_ss;}> = {errwin.bimap_ss}

:: <{errwin.bimap_sss;}> = {errwin.bimap_sss}

