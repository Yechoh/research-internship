.comp 920 000111010001
.start _nostart_
.depend "StdArray" "20170313110416"
.depend "EdText" "20170206122647"
.depend "syncol" "20170123155351"
.depend "StrictList" "20170123155353"
.depend "EdLineText" "20170123155351"
.depend "EdPosition" "20170123155351"
.depend "EdSelection" "20170123155352"
.depend "_SystemArray" "20170313110416"
.depend "StdMaybe" "20170313110414"
.depend "StdString" "20170313110416"
.depend "StdGeneric" "20170313110416"
.depend "GenEq" "20170313110405"
.depend "Data.Monoid" "20170313110413"
.depend "Control.Monad" "20170313110412"
.depend "Control.Applicative" "20170313110412"
.depend "System.IO" "20170313110415"
.depend "Data.Functor" "20170313110413"
.depend "Data.Maybe" "20170313110413"
.depend "StdReal" "20170313110416"
.depend "StdChar" "20170313110416"
.depend "StdInt" "20170313110416"
.depend "StdBool" "20170313110416"
.depend "StdClass" "20170313110416"
.depend "StdList" "20170313110416"
.depend "StdOverloaded" "20170313110416"
.depend "_SystemDynamic" "20170313110405"
.depend "balance" "20170123155359"
.module m_balance "balance" "20170123155400"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod EdLineText
.implab e_EdLineText_slastLineNr
.impdesc e_EdLineText_dgetLine
.implab e_EdLineText_sgetLine
.implab e_EdLineText_ngetLine
.impmod EdPosition
.impdesc e_EdPosition_rPosition
.impmod EdSelection
.impdesc e_EdSelection_rSelection
.impmod _SystemArray
.impmod StdString
.implab e_StdString_s%;10
.impmod StdChar
.implab e_StdChar_s==;18
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s==;16
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.impmod StdList
.impdesc e_StdList_dhd
.implab e_StdList_shd
.implab e_StdList_nhd _
.impdesc e_StdList_dtl
.implab e_StdList_stl
.implab e_StdList_ntl e_StdList_eatl
.implab e_StdList_s==;84
.export e_balance_sText_Balance
.descexp e_balance_dText_Balance e_balance_nText_Balance e_balance_lText_Balance 5 0 "Text_Balance"
.a 0 a1
.o 2 0
e_balance_lText_Balance
	repl_args 4 4
.o 5 0
a1
.d 5 0
	jsr ea1
.o 2 1 b
	build_r e_EdSelection_rSelection 2 0 0 0
	buildB_b 0
	buildh _Tuple 2
	updatepop_a 0 2
	pop_b 1
.d 1 0
	rtn
.n 5 e_balance_dText_Balance
.o 1 0
e_balance_nText_Balance
	push_node _cycle_in_spine 5
.d 5 0
	jsr ea1
.o 2 1 b
	build_r e_EdSelection_rSelection 2 0 0 0
	buildB_b 0
	fillh _Tuple 2 4
	pop_a 2
	pop_b 1
.d 1 0
	rtn
.o 5 0
ea1
	jsr_eval 4
	jsr_eval 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 3
	pushI_a 2
	pushI_a 1
	pushI_a 0
	pop_a 4
.o 1 4 iiii
e_balance_sText_Balance
.o 1 4 iiii
s1
	push_a 0
	push_b 3
	push_b 3
.d 1 2 ii
	jsr s44
.o 3 1 b
	push_a 3
	push_b 2
	buildI_b 2
	build_u _ 2 1 n5
	push_b 0
	notB
	jmp_true then.1
	jsr_eval 0
	push_arg 0 4 1
	jsr_eval 0
	pushB_a 0
	pop_a 1
	notB
	jmp_true then.1
	push_arg 0 4 4
	jsr_eval 0
	pushC_a 0
	pop_a 1
	pushC '('
	push_b 1
	eqC
	push_a 3
	buildh _Nil 0
	update_a 0 6
	pop_a 1
.d 1 1 b
	jsr s14
.o 0 1 b
	push_a 3
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 7
	updatepop_b 0 6
	buildh _Nil 0
	update_a 0 5
	pop_a 1
.d 1 2 bc
	jsr s15
.o 0 1 b
	notB
	pushI 0
	push_b 0
	push_b 1
	push_b 2
	push_b 3
	update_b 5 0
	jmp_false else.1
then.1
	buildI 0
	buildI 0
	build_r e_EdPosition_rPosition 2 0 0 0
	update_a 0 2
	pop_a 2
	buildI 0
	buildI 0
	build_r e_EdPosition_rPosition 2 0 0 0
	update_a 0 2
	pop_a 2
	pushB FALSE
	update_a 1 6
	updatepop_a 0 5
	updatepop_b 0 5
.d 2 1 b
	rtn
else.1
	push_a 2
	build _ 1 n46
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	build_r e_EdPosition_rPosition 2 0 0 0
	update_a 0 2
	pop_a 2
	push_a 1
	build d_S.2 -1 n_S.2
	push_a 2
	build d_S.3 -1 n_S.3
	build_r e_EdPosition_rPosition 2 0 0 0
	update_a 0 2
	pop_a 2
	pushB TRUE
	update_a 1 6
	updatepop_a 0 5
	updatepop_b 0 5
.d 2 1 b
	rtn
.n 1 _ ea46
.o 1 0
n46
	push_node _cycle_in_spine 1
.o 2 0
ea46
.o 2 0
s46
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 2 bc
s15
	eqB_b TRUE 0
	jmp_true case.4
	jmp case.5
case.4
	pop_a 1
	pop_b 2
	pushB TRUE
.d 0 1 b
	rtn
case.5
	pushC '['
	push_b 2
	eqC
	jmp_false else.6
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pushC ']'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.6
	pop_a 1
	pop_b 2
	pushB TRUE
.d 0 1 b
	rtn
else.6
	pushC '{'
	push_b 2
	eqC
	jmp_false else.8
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pushC '}'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 3
	updatepop_b 0 2
	pop_a 1
	eqC
.d 0 1 b
	rtn
else.8
	pop_a 1
	pop_b 2
	pushB FALSE
.d 0 1 b
	rtn
.o 1 1 b
s14
	eqB_b TRUE 0
	jmp_true case.9
	jmp case.10
case.9
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pushC ')'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 2
	updatepop_b 0 1
	pop_a 1
	eqC
.d 0 1 b
	rtn
case.10
	pop_a 1
	pop_b 1
	pushB FALSE
.d 0 1 b
	rtn
.nu 2 1 _
.o 1 0
n5
	push_node_u _cycle_in_spine 2 1
.d 2 1 i
	jsr ea5
.o 4 0
	push_a 3
	push_a 3
	push_a 3
	push_a 3
	fillh _Tuple 4 8
	pop_a 4
.d 1 0
	rtn
.o 2 1 i
ea5
.o 2 1 i
s5
	push_a 1
	push_a 1
	build e_EdLineText_dgetLine 2 e_EdLineText_ngetLine
	push_a 0
	build d_S.1 -1 n_S.1
	push_b 0
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 1 1 i
	jsr s9
.o 1 0
	buildh _Nil 0
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 3 0
	jsr s43
.o 3 1 b
	push_b 0
	jmp_false else.11
	push_a 1
	push_b 1
	build_u _ 1 1 n47
	push_a 3
	push_a 6
	buildB TRUE
	push_a 3
	update_a 3 4
	update_a 0 3
	pop_a 1
	update_a 3 9
	update_a 2 8
	update_a 1 7
	updatepop_a 0 6
	pop_b 2
.d 4 0
	rtn
else.11
	push_a 3
	build d_S.2 -1 n_S.2
	pushI 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	subI
	push_a 1
	update_a 1 7
	updatepop_a 0 6
	updatepop_b 0 2
.d 2 1 i
	jmp s6
.nu 1 1 _ _
.o 1 0
n47
	push_node_u _cycle_in_spine 1 1
.o 2 1 i
ea47
.o 2 1 i
s47
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	push_b 2
	subI
	update_b 1 2
	updatepop_b 0 1
	pop_a 1
	subI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 1 i
s6
	pushI 0
	push_b 1
	ltI
	jmp_false else.12
	buildC ' '
	buildI 0
	buildI 0
	buildB FALSE
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 1
.d 4 0
	rtn
else.12
	push_a 1
	jsr_eval 0
	push_b 0
	update_a 1 2
	updatepop_a 0 1
.d 1 1 i
	jsr e_EdLineText_sgetLine
.o 2 0
	pushI 1
	push_a 0
	push_arraysize CHAR 0 1
	subI
	push_a 2
	jsr_eval 0
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 3 4
	update_a 1 3
	updatepop_a 0 2
.d 2 1 i
	jsr s8
.o 2 2 bi
	push_b 0
	jmp_false else.13
	push_a 1
	buildI_b 1
	buildI_b 2
	buildB TRUE
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	pop_b 3
.d 4 0
	rtn
else.13
	pushI 1
	push_b 3
	subI
	push_a 2
	push_a 1
	update_a 1 4
	updatepop_a 0 3
	updatepop_b 0 3
.d 2 1 i
	jmp s6
.o 2 1 i
s8
	pushI 0
	push_b 1
	ltI
	jmp_false else.14
	buildC ' '
	pushI 0
	push_a 1
	pushB FALSE
	update_a 1 3
	updatepop_a 0 2
	update_b 1 2
	updatepop_b 0 1
.d 2 2 bi
	rtn
else.14
	push_b 0
	push_a 1
	select CHAR 0 1
	pushC '('
	push_b 1
	eqC
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
.d 0 2 bc
	jsr s13
.o 0 1 b
	push_b 0
	jmp_false else.15
	buildh _Nil 0
	push_a 1
.d 2 0
	jsr e_StdList_s==;84
.o 0 1 b
	jmp_false else.15
	buildh _Nil 0
	buildC_b 1
	push_b 2
	pushB TRUE
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	update_b 1 4
	updatepop_b 0 3
.d 2 2 bi
	rtn
else.15
	push_b 0
	jmp_false else.17
	push_a 0
	build e_StdList_dhd 1 e_StdList_nhd
	pushC '('
	push_b 2
	eqC
	jmp_false else.19
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pushC ')'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.19
	pop_a 1
	jmp then.17
else.19
	pushC '['
	push_b 2
	eqC
	jmp_false else.21
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pushC ']'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	jmp_false else.21
	pop_a 1
	jmp then.17
else.21
	pushC '{'
	push_b 2
	eqC
	jmp_true then.23
	pop_a 1
	jmp else.17
then.23
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	pushC '}'
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqC
	pop_a 1
	jmp_false else.17
then.17
	pushI 1
	push_b 3
	subI
	create
	push_a 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr e_StdList_stl
.o 1 0
	push_a 1
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 2
	updatepop_a 0 1
	updatepop_b 0 3
.d 2 1 i
	jmp s8
else.17
	push_b 0
	jmp_false else.24
	buildC ' '
	pushI 0
	push_a 1
	pushB FALSE
	update_a 1 3
	updatepop_a 0 2
	update_b 1 4
	updatepop_b 0 3
.d 2 2 bi
	rtn
else.24
	pushC ')'
	push_b 2
	eqC
	jmp_true then.25
	pushC '}'
	push_b 2
	eqC
	jmp_true then.25
	pushC ']'
	push_b 2
	eqC
	jmp_false else.25
then.25
	pushI 1
	push_b 3
	subI
	push_a 0
	buildC_b 2
	buildh _Cons 2
	push_a 2
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 3
.d 2 1 i
	jmp s8
else.25
	pushI 1
	push_b 3
	subI
	push_a 1
	push_a 1
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 3
.d 2 1 i
	jmp s8
.o 0 2 bc
s13
	eqB_b TRUE 0
	jmp_true case.28
	jmp case.29
case.28
	pop_b 2
	pushB TRUE
.d 0 1 b
	rtn
case.29
	pushC '{'
	push_b 2
	eqC
	jmp_false else.30
	pop_b 2
	pushB TRUE
.d 0 1 b
	rtn
else.30
	pushC '['
	push_b 2
	update_b 1 3
	updatepop_b 0 2
	eqC
.d 0 1 b
	rtn
.o 1 1 i
s9
	eqI_b 0 0
	jmp_true case.31
	jmp case.32
case.31
	pop_a 1
	pop_b 1
	buildAC ""
.d 1 0
	rtn
case.32
	pushI 1
	push_b 1
	subI
	pushI 0
	push_a 0
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	updatepop_a 0 1
	update_b 1 2
	updatepop_b 0 1
.d 1 2 ii
	jsr sliceAC
.o 1 0
.d 1 0
	rtn
.o 0 2 bc
s12
	eqB_b TRUE 0
	jmp_true case.33
	jmp case.34
case.33
	pop_b 2
	pushB TRUE
.d 0 1 b
	rtn
case.34
	pushC '}'
	push_b 2
	eqC
	jmp_false else.35
	pop_b 2
	pushB TRUE
.d 0 1 b
	rtn
else.35
	pushC ']'
	push_b 2
	update_b 1 3
	updatepop_b 0 2
	eqC
.d 0 1 b
	rtn
.o 2 2 ii
s42
	push_b 1
	push_b 1
	ltI
	notB
	jmp_false else.36
	buildC ' '
	buildI_b 1
	push_a 2
	pushB FALSE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 2
.d 3 1 b
	rtn
else.36
	push_a 1
	jsr_eval 0
	push_array 0
	updatepop_a 0 1
	push_b 0
	select CHAR 0 1
	pushC ')'
	push_b 1
	eqC
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
.d 0 2 bc
	jsr s12
.o 0 1 b
	push_b 0
	jmp_false else.37
	buildh _Nil 0
	push_a 1
	jsr_eval 0
.d 2 0
	jsr e_StdList_s==;84
.o 0 1 b
	jmp_false else.37
	buildh _Nil 0
	buildC_b 1
	buildI_b 2
	pushB TRUE
	push_a 2
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 4
.d 3 1 b
	rtn
else.37
	push_b 0
	jmp_false else.39
	push_a 0
	jsr_eval 0
.d 1 0
	jsr e_StdList_shd
.o 1 0
	pushC '('
	pushC_a 0
	eqC
	jmp_false else.41
	pushC ')'
	push_b 2
	eqC
	jmp_false else.41
	pop_a 1
	jmp then.39
else.41
	pushC '['
	pushC_a 0
	eqC
	jmp_false else.43
	pushC ']'
	push_b 2
	eqC
	jmp_false else.43
	pop_a 1
	jmp then.39
else.43
	pushC '{'
	pushC_a 0
	eqC
	jmp_true then.45
	pop_a 1
	jmp else.39
then.45
	pushC '}'
	push_b 2
	eqC
	pop_a 1
	jmp_false else.39
then.39
	pushI 1
	push_b 3
	addI
	push_a 0
	build e_StdList_dtl 1 e_StdList_ntl
	push_a 2
	push_b 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_a 1 3
	updatepop_a 0 2
	update_b 1 5
	updatepop_b 0 4
.d 2 2 ii
	jmp s42
else.39
	push_b 0
	jmp_false else.46
	buildC ' '
	buildI_b 3
	push_a 2
	pushB FALSE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 4
.d 3 1 b
	rtn
else.46
	pushC '('
	push_b 2
	eqC
	jmp_true then.47
	pushC '{'
	push_b 2
	eqC
	jmp_true then.47
	pushC '['
	push_b 2
	eqC
	jmp_false else.47
then.47
	pushI 1
	push_b 3
	addI
	push_a 0
	buildC_b 2
	buildh _Cons 2
	push_a 2
	push_b 4
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_a 1 3
	updatepop_a 0 2
	update_b 1 5
	updatepop_b 0 4
.d 2 2 ii
	jmp s42
else.47
	pushI 1
	push_b 3
	addI
	push_a 1
	push_b 4
	push_a 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_a 1 3
	updatepop_a 0 2
	update_b 1 5
	updatepop_b 0 4
.d 2 2 ii
	jmp s42
.o 3 0
s43
	push_a 2
	eqAC_a ""
	jmp_true case.50
	jmp case.51
case.50
	buildC ' '
	push_a 2
	push_a 2
	pushB FALSE
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 1 b
	rtn
case.51
	push_a 2
	update_a 1 2
	updatepop_a 0 1
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	push_a 1
	push_a 1
	update_a 1 3
	updatepop_a 0 2
.d 2 1 i
	jsr s8
.o 2 2 bi
	push_b 0
	jmp_false else.52
	buildI_b 1
	push_b 2
	build_u _ 1 1 n48
	buildh _Nil 0
	push_a 3
	pushB TRUE
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 3
.d 3 1 b
	rtn
else.52
	push_a 1
	buildI_b 2
	push_a 2
	pushB FALSE
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	updatepop_b 0 3
.d 3 1 b
	rtn
.nu 1 1 _ _
.o 1 0
n48
	push_node_u _cycle_in_spine 1 1
.o 2 1 i
ea48
.o 2 1 i
s48
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	push_b 2
	subI
	update_b 1 2
	updatepop_b 0 1
	pop_a 1
	subI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 2 ii
s44
	push_a 0
	push_b 0
	updatepop_a 0 1
.d 1 1 i
	jsr e_EdLineText_sgetLine
.o 2 0
	buildh _Nil 0
	push_a 2
	push_a 2
	buildI_b 1
	buildI_b 0
	push_a 4
	update_a 4 5
	update_a 3 4
	update_a 2 3
	update_a 1 2
	update_a 0 1
	pop_a 1
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
	pop_b 2
.d 5 0
	jmp s45
.o 5 0
s45
	push_a 3
	eqAC_a ""
	jmp_true case.53
	jmp case.54
case.53
	push_a 4
	jsr_eval 0
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 1 0
	jsr e_EdLineText_slastLineNr
.o 0 1 i
	push_a 1
	jsr_eval 0
	pushI_a 2
	pop_a 1
	eqI
	jmp_false else.55
	buildC ' '
	buildI 0
	buildI 0
	pushB FALSE
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 1 b
	rtn
else.55
	pushI 1
	pushI_a 1
	update_a 0 1
	pop_a 1
	addI
	push_a 1
	push_b 0
	update_a 1 2
	updatepop_a 0 1
.d 1 1 i
	jsr e_EdLineText_sgetLine
.o 2 0
	push_a 1
	push_a 1
	buildI 0
	buildI_b 0
	push_a 6
	update_a 4 7
	update_a 3 6
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
	pop_b 1
.d 5 0
	jmp s45
case.54
	push_a 3
	push_arraysize CHAR 0 1
	push_a 2
	jsr_eval 0
	pushI_a 3
	pop_a 1
	push_a 3
	buildh ARRAY 1
	push_b 1
	push_a 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s42
.o 3 1 b
	push_b 0
	jmp_false else.56
	push_a 2
	push_a 2
	push_a 5
	pushB TRUE
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	updatepop_b 0 2
.d 3 1 b
	rtn
else.56
	push_a 1
	jsr_eval 0
	pushI_a 2
	pop_a 1
	push_b 2
	push_b 1
	ltI
	notB
	jmp_false else.57
	push_a 6
	buildAC ""
	push_a 6
	push_a 6
	push_a 4
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	pop_b 3
.d 5 0
	jmp s45
else.57
	push_a 6
	push_a 6
	buildI_b 0
	push_a 6
	push_a 4
	update_a 4 11
	update_a 3 10
	update_a 2 9
	update_a 1 8
	updatepop_a 0 7
	pop_b 3
.d 5 0
	jmp s45
