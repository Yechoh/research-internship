|| ?module? Platform


<{Platform.c;21;20_35}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_3 g_i_1 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{Platform.c;21;20_35}> _vArray_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_2_0)) (False -> _predefined._Nil) 
Platform.cl_args =: ArgEnv.getCommandLine
Platform.get_arg_36 n_0 !_x_1 = case _x_1 (_predefined._Nil -> _Tuple2 False "") (_predefined._Cons h_1_0 t_1_1 -> case (<{StdString.==_2}> h_1_0 n_0) (True -> <{Platform._c;25;20_44}> t_1_1) (False -> Platform.get_arg_36 n_0 t_1_1) ) 
<{Platform._c;25;20_44}> !t_0 = case t_0 (_predefined._Nil -> _Tuple2 True "") (_predefined._Cons h_1_0 _x_1_1 -> _Tuple2 True h_1_0) 
<{Platform.c;21;20_41}> !g_i_0::I !g_s_1::I g_a_2 = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_78 g_a_2 g_i_0 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{Platform.c;21;20_41}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1 g_a_2_0)) (False -> _predefined._Nil) 
Platform.get_arg n_0 = let _x_1_0 = _SystemArray.usize_79 Platform.cl_args in Platform.get_arg_36 n_0 (<{Platform.c;21;20_41}> 0 (<{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1) (select _x_1_0::_Tuple2 1))
Platform.get_env !n_0 = <{Platform._c;30;7_45}> (ArgEnv.getEnvironmentVariable n_0)
<{Platform._c;30;7_45}> !_x_0 = case _x_0 (ArgEnv.EnvironmentVariableUndefined -> _Tuple2 False "") (ArgEnv.EnvironmentVariable v_1_0 -> _Tuple2 True v_1_0) 
Platform.WinGetModulePath = error "no AnyCodeExpr"
Platform.LastColon !s_0 !i_1::I = case (StdBool.not (<{StdInt.<_17}> 0 i_1)) (True -> <{_Tuple2!3}> False 0) (False -> case (<{StdChar.==_18}> '\\' (_SystemArray.select_19 s_0 i_1)) (True -> <{_Tuple2!3}> True i_1) (False -> Platform.LastColon s_0 (<{StdInt.-_7}> i_1 StdInt.one_11)) ) 
Platform.RemoveFileName !path_0 = let last_1_0 = <{StdInt.-_7}> (_SystemArray.size_20 path_0) StdInt.one_11, _x_1_1::I = Platform.LastColon path_0 last_1_0 in case (select _x_1_1::_Tuple2 0) (True -> <{StdString.%_10}> path_0 (_Tuple2 0 (<{StdInt.-_7}> (select _x_1_1::_Tuple2 1) StdInt.one_11))) (False -> path_0) 
Platform.find_last_backslash_in_string !_vArray_0 !i_1::I s_2 = case (<{StdInt.<_17}> i_1 0) (True -> _Tuple2 False -1) (False -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 i_1) '\\') (True -> _Tuple2 True i_1) (False -> Platform.find_last_backslash_in_string _vArray_0 (<{StdInt.-_7}> i_1 1) s_2) ) 
Platform.FindFirstFile_::I !file_name_0 !find_data_1 = error "no AnyCodeExpr"
Platform.FindFirstFile !file_name_0 = let find_data_1_0 = _SystemArray.createArray_17 318 '\0' in <{_Tuple2!3}> (Platform.FindFirstFile_ file_name_0 find_data_1_0) find_data_1_0
Platform.FindClose::I !handle_0::I = error "no AnyCodeExpr"
Platform.find_first_file_and_close !file_name_0 = let _x_1_0::I = Platform.FindFirstFile file_name_0, handle_1_1 = select _x_1_0::_Tuple2 0 in case (StdBool.not (<{StdInt.==_16}> handle_1_1 -1)) (True -> let r_3_0::I = Platform.FindClose handle_1_1 in case (<{StdInt.==_16}> r_3_0 r_3_0) (True -> <{_Tuple2!3}> True (select _x_1_0::_Tuple2 1)) (False -> <{_Tuple2!3}> False (select _x_1_0::_Tuple2 1)) ) (False -> <{_Tuple2!3}> False "") 
Platform.find_null_char_in_string::I !i_0::I !s_1 = case (case (<{StdInt.<_17}> i_0 (_SystemArray.size_20 s_1)) (True -> StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 s_1 i_0) '\0')) (False -> False) ) (True -> Platform.find_null_char_in_string (<{StdInt.+_6}> i_0 1) s_1) (False -> i_0) 
Platform.find_data_file_name !find_data_0 = <{StdString.%_10}> find_data_0 (_Tuple2 44 (<{StdInt.-_7}> (Platform.find_null_char_in_string 44 find_data_0) 1))
Platform.find_last_backslash_in_string_42 !i_0::I s_1 = case (<{StdInt.<_17}> i_0 0) (True -> _Tuple2 False -1) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_1 i_0) '\\') (True -> _Tuple2 True i_0) (False -> Platform.find_last_backslash_in_string_42 (<{StdInt.-_7}> i_0 1) s_1) ) 
Platform.expand_8_3_names_in_path !path_and_file_name_0 = let _x_1_0 = Platform.find_last_backslash_in_string_42 (<{StdInt.-_7}> (_SystemArray.size_20 path_and_file_name_0) 1) path_and_file_name_0 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> path_and_file_name_0) (False -> let back_slash_index_3_0 = select _x_1_0::_Tuple2 1, path_3_1 = Platform.expand_8_3_names_in_path (<{StdString.%_10}> path_and_file_name_0 (_Tuple2 0 (<{StdInt.-_7}> back_slash_index_3_0 1))), file_name_3_2 = <{StdString.%_10}> path_and_file_name_0 (_Tuple2 (<{StdInt.+_6}> back_slash_index_3_0 1) (<{StdInt.-_7}> (_SystemArray.size_20 path_and_file_name_0) 1)), path_and_file_name_3_3 = <{StdString.+++_11}> path_3_1 (<{StdString.+++_11}> "\\" file_name_3_2), _x_3_4::I = Platform.find_first_file_and_close (<{StdString.+++_11}> path_and_file_name_3_3 "\0") in case (select _x_3_4::_Tuple2 0) (True -> <{StdString.+++_11}> path_3_1 (<{StdString.+++_11}> "\\" (Platform.find_data_file_name (select _x_3_4::_Tuple2 1)))) (False -> path_and_file_name_3_3) ) 
Platform.StartUpDir =: Platform.expand_8_3_names_in_path (Platform.RemoveFileName Platform.WinGetModulePath)
Platform.tooldefault =: <{StdString.+++.}> Platform.StartUpDir "\\Tools\0"
Platform.toolkey =: "tooldir\0"
Platform.section =: "Paths\0"
Platform.inifilename =: let apppath_1_0 = clCCall_12.winGetModulePath in <{StdString.+++.}> (<{StdString.%_10}> apppath_1_0 (_Tuple2 0 (<{StdInt.-_7}> (_SystemArray.size_20 apppath_1_0) 4))) "ini\0"
Platform.GetPrivateProfileString_37 !_x_0 !_x_1 !_x_2 !_x_3::I !_x_4::I !_x_5 !_x_6::I = error "no AnyCodeExpr"
Platform.get_ini !file_0 !section_1 !key_2 !<{default`_3}> = let !_x_1_0 = clCCall_12.winMakeCString (_SystemArray.createArray_17 256 '@') 0, !_x_1_1 = Platform.GetPrivateProfileString_37 section_1 key_2 <{default`_3}> buffer_1_3 256 file_0 (select _x_1_0::_Tuple2 1), !_x_1_2 = clCCall_12.winGetCStringAndFree buffer_1_3 (select _x_1_1::_Tuple2 1), buffer_1_3::I = select _x_1_0::_Tuple2 0 in <{StdString.%_10}> (select _x_1_2::_Tuple2 0) (_Tuple2 0 (<{StdInt.-_7}> (select _x_1_1::_Tuple2 0) 1))
Platform.ToolsDir =: let _x_1_0 = Platform.get_arg "-tooldir", arg_1_1 = select _x_1_0::_Tuple2 1 in case (select _x_1_0::_Tuple2 0) (True -> arg_1_1) (False -> let _x_3_0 = Platform.get_env "TOOLDIR", env_3_1 = select _x_3_0::_Tuple2 1 in case (select _x_3_0::_Tuple2 0) (True -> env_3_1) (False -> Platform.get_ini Platform.inifilename Platform.section Platform.toolkey Platform.tooldefault) ) 
Platform.tooltempdefault =: <{StdString.+++.}> Platform.StartUpDir "\\Temp\0"
Platform.tooltempkey =: "tooltemp\0"
Platform.TempDir =: let _x_1_0 = Platform.get_arg "-tempdir", arg_1_1 = select _x_1_0::_Tuple2 1 in case (select _x_1_0::_Tuple2 0) (True -> arg_1_1) (False -> let _x_3_0 = Platform.get_env "TEMPDIR", env_3_1 = select _x_3_0::_Tuple2 1 in case (select _x_3_0::_Tuple2 0) (True -> env_3_1) (False -> Platform.get_ini Platform.inifilename Platform.section Platform.tooltempkey Platform.tooltempdefault) ) 
Platform.envsdefault =: <{StdString.+++.}> Platform.StartUpDir "\\Config\0"
Platform.envskey =: "envsdir\0"
Platform.EnvsDir =: let _x_1_0 = Platform.get_arg "-envsdir", arg_1_1 = select _x_1_0::_Tuple2 1 in case (select _x_1_0::_Tuple2 0) (True -> arg_1_1) (False -> let _x_3_0 = Platform.get_env "ENVSDIR", env_3_1 = select _x_3_0::_Tuple2 1 in case (select _x_3_0::_Tuple2 0) (True -> env_3_1) (False -> Platform.get_ini Platform.inifilename Platform.section Platform.envskey Platform.envsdefault) ) 
Platform.prefsdefault =: <{StdString.+++.}> Platform.StartUpDir "\\Config\0"
Platform.prefskey =: "prefsdir\0"
Platform.PrefsDir =: let _x_1_0 = Platform.get_arg "-prefsdir", arg_1_1 = select _x_1_0::_Tuple2 1 in case (select _x_1_0::_Tuple2 0) (True -> arg_1_1) (False -> let _x_3_0 = Platform.get_env "PREFSDIR", env_3_1 = select _x_3_0::_Tuple2 1 in case (select _x_3_0::_Tuple2 0) (True -> env_3_1) (False -> Platform.get_ini Platform.inifilename Platform.section Platform.prefskey Platform.prefsdefault) ) 
<{Platform.c;47;19_38}> !_vArray_0 !g_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 g_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_3 g_i_1 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{Platform.c;47;19_38}> _vArray_0 (<{StdInt.+_6}> g_i_1 StdInt.one_11) g_s_2 g_a_2_0)) (False -> _predefined._Nil) 
Platform.wAbort !message_0 !world_1 = set_return_code.set_return_code_world -1 (select (StdFile.fclose_30 (StdFile.fwrites message_0 StdFile.stderr) world_1)::_Tuple2 1)
Platform.batch_39 force_update_0 !prj_1 !world_2 = let _x_1_0 = logfile.openLogfile (<{StdFile.FileSystem;}> StdFile.fclose_30 StdFile.fopen_31 StdFile.sfopen_32 StdFile.stdio_33) prj_1 world_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> _Tuple5 False force_update_0 prj_1 (select _x_1_0::_Tuple3 1) (Platform.wAbort "--batch-build failed while opening logfile.\n" (select _x_1_0::_Tuple3 2))) (False -> _Tuple5 False force_update_0 prj_1 (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2)) 
<{Platform.c;47;19_43}> !g_i_0::I !g_s_1::I g_a_2 = case (StdBool.not (<{StdInt.<_17}> g_s_1 g_i_0)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_78 g_a_2 g_i_0 in _predefined._Cons (select _x_2_1::_Tuple2 0) (<{Platform.c;47;19_43}> (<{StdInt.+_6}> g_i_0 StdInt.one_11) g_s_1 g_a_2_0)) (False -> _predefined._Nil) 
Platform.batchOptions !world_0 = let _x_1_0 = _SystemArray.usize_79 ArgEnv.getCommandLine in <{Platform._c;47;9_46}> (<{Platform.c;47;19_43}> 0 (<{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1) (select _x_1_0::_Tuple2 1)) world_0
<{Platform._c;47;9_46}> !_x_0 !world_1 = case _x_0 (_predefined._Cons _x_1_0 _x_1_1 -> case _x_1_1 (_predefined._Cons _x_2_0 _x_2_1 -> case _x_2_0 ("--batch-build" -> case _x_2_1 (_predefined._Cons prj_4_0 _x_4_1 -> case _x_4_1 (_predefined._Nil -> Platform.batch_39 False prj_4_0 world_1) ) ) ("--batch-force-build" -> case _x_2_1 (_predefined._Cons prj_4_0 _x_4_1 -> case _x_4_1 (_predefined._Nil -> Platform.batch_39 True prj_4_0 world_1) ) ) ) ) (_ -> <{_Tuple5!17}> True (StdMisc.abort "force_update") (StdMisc.abort "project file") (StdMisc.abort "logfile") world_1)
Platform.onOSX::B = False
Platform.application_path !fname_0 = ossystem.osApplicationpath fname_0
Platform.filter_opts !_vArray_0 !_x_1 = case _x_1 (_predefined._Nil -> _predefined._Nil) (_predefined._Cons h_1_0 t_1_1 -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 h_1_0 0) '-') (True -> Platform.filter_opts _vArray_0 (StdList.drop 1 t_1_1)) (False -> _predefined._Cons h_1_0 (Platform.filter_opts _vArray_0 t_1_1)) ) 


|| Converted Records
