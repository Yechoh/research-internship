|| ?module? lib


lib.write_archive_header_54 !lib_file_0 = StdFile.fwrites "!<arch>\n" lib_file_0
lib.EmptyObjectFileMembers = lib._ObjectFileMembers 0 0 0
<{lib.cu;384;61_35}> !<{_v<_0}> !_vone_1 !<{_v+_2}> !_vone_3 !<{_v+_4}> c_l_i_5 i_6 g_s_7 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_7 i_6)) (True -> <{lib.cu;384;61_35}> <{_v<_0}> _vone_1 <{_v+_2}> _vone_3 <{_v+_4}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_5 (select _vone_1::<{StdOverloaded.one;}> 0)) (select <{_v+_4}>::<{StdOverloaded.+;}> 0 i_6 (select _vone_3::<{StdOverloaded.one;}> 0)) g_s_7) (False -> c_l_i_5) 
lib.EmptyObjectFileMember = lib._ObjectFileMember 0 0 _predefined._Nil 0 0 ""
<{lib.cu;384;61_34}> !<{_v<_0}> !_vArray_1 !_vone_2 !<{_v+_3}> c_a_4 c_i_5::I i_6 g_s_7 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_7 i_6)) (True -> <{lib.cu;384;61_34}> <{_v<_0}> _vArray_1 _vone_2 <{_v+_3}> (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_4 c_i_5 lib.EmptyObjectFileMember) (<{StdInt.+_6}> c_i_5 StdInt.one_11) (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_6 (select _vone_2::<{StdOverloaded.one;}> 0)) g_s_7) (False -> c_a_4) 
lib.foldl_90 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> lib.foldl_90 op_0 (op_0 r_1 a_1_0) x_1_1) 
lib.error_27 !_vFileSystem_0 error_1 xcoff_file_2 files_3 = let !_x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 0 xcoff_file_2 files_3 in _Tuple6 error_1 0 0 _predefined._Nil _predefined._Nil (select _x_1_0::_Tuple2 1)
lib.IWORD::I !string_0 !i_1::I = StdInt.bitor (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 string_0 (<{StdInt.+_6}> i_1 1))) 8) (StdInt.toInt_20 (_SystemArray.select_19 string_0 i_1))
lib.error_30 file_0 = _Tuple5 False 0 0 0 file_0
lib.ILONG::I !string_0 !i_1::I = StdInt.bitor (StdInt.bitor (StdInt.bitor (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 string_0 (<{StdInt.+_6}> i_1 3))) 24) (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 string_0 (<{StdInt.+_6}> i_1 2))) 16)) (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 string_0 (<{StdInt.+_6}> i_1 1))) 8)) (StdInt.toInt_20 (_SystemArray.select_19 string_0 i_1))
lib.read_coff_header !file_0 = let !_x_1_0 = StdFile.freads file_0 20, header_string_1_1 = select _x_1_0::_Tuple2 0 in case (StdBool.not (lib._f133_133 (<{StdInt.==_16}> (_SystemArray.size_20 header_string_1_1) 20) header_string_1_1)) (True -> lib.error_30 (select _x_1_0::_Tuple2 1)) (False -> let !f_nscns_3_0::I = lib.IWORD header_string_1_1 2 in case (StdBool.not (StdBool.not (<{StdInt.<_17}> f_nscns_3_0 2))) (True -> lib.error_30 (select _x_1_0::_Tuple2 1)) (False -> let !f_opthdr_5_0::I = lib.IWORD header_string_1_1 16, !f_symptr_5_1::I = lib.ILONG header_string_1_1 8, !f_nsyms_5_2::I = lib.ILONG header_string_1_1 12 in case (<{StdInt.==_16}> f_opthdr_5_0 0) (True -> <{_Tuple5!31}> True f_nscns_3_0 f_symptr_5_1 f_nsyms_5_2 (select _x_1_0::_Tuple2 1)) (False -> let !_x_7_0 = StdFile.fseek (select _x_1_0::_Tuple2 1) f_opthdr_5_0 1 in case (select _x_7_0::_Tuple2 0) (True -> <{_Tuple5!31}> True f_nscns_3_0 f_symptr_5_1 f_nsyms_5_2 (select _x_7_0::_Tuple2 1)) (False -> lib.error_30 (select _x_7_0::_Tuple2 1)) ) ) ) 
lib._f133_133::B !_x_0::B header_string_1 = case _x_0 (True -> <{StdInt.==_16}> (lib.IWORD header_string_1 0) 332) (_ -> False)
lib.error_29 file_0 = _Tuple4 False "" "" file_0
lib.error_28 file_0 = _Tuple3 False "" file_0
lib.read_string_table !file0_0 = let _x_1_0 = StdFile.freadi file0_0 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> lib.error_28 (select _x_1_0::_Tuple3 2)) (False -> let string_table_size0_3_0::I = select _x_1_0::_Tuple3 1 in case (<{StdInt.==_16}> string_table_size0_3_0 0) (True -> <{_Tuple3!7}> True "" (select _x_1_0::_Tuple3 2)) (False -> case (<{StdInt.<_17}> string_table_size0_3_0 4) (True -> lib.error_28 (select _x_1_0::_Tuple3 2)) (False -> let file1_6_0 = select _x_1_0::_Tuple3 2, string_table_size2_6_1 = <{StdInt.-_7}> string_table_size0_3_0 4, _x_6_2::I = StdFile.freads file1_6_0 string_table_size2_6_1, string_table_string_6_3 = select _x_6_2::_Tuple2 0 in case (StdBool.not (<{StdInt.==_16}> (_SystemArray.size_20 string_table_string_6_3) string_table_size2_6_1)) (True -> lib.error_28 (select _x_6_2::_Tuple2 1)) (False -> <{_Tuple3!7}> True string_table_string_6_3 (select _x_6_2::_Tuple2 1)) ) ) ) 
lib.read_symbols !n_symbols_0::I !file0_1 = let symbol_table_size_1_0 = <{StdInt.*_9}> n_symbols_0 18, _x_1_1 = StdFile.freads file0_1 symbol_table_size_1_0, symbol_table_string_1_2::I = select _x_1_1::_Tuple2 0 in case (StdBool.not (<{StdInt.==_16}> (_SystemArray.size_20 symbol_table_string_1_2) symbol_table_size_1_0)) (True -> <{_Tuple4!15}> False "" "" (select _x_1_1::_Tuple2 1)) (False -> let _x_3_0 = lib.read_string_table (select _x_1_1::_Tuple2 1) in <{_Tuple4!15}> (select _x_3_0::_Tuple3 0) symbol_table_string_1_2 (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) 
lib.read_symbol_table !file_offset_0::I !symbol_table_offset_1::I !n_symbols_2::I !file0_3 = let _x_1_0 = StdFile.fseek file0_3 (<{StdInt.+_6}> file_offset_0 symbol_table_offset_1) 0 in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> lib.error_29 (select _x_1_0::_Tuple2 1)) (False -> lib.read_symbols n_symbols_2 (select _x_1_0::_Tuple2 1)) 
lib.n_numaux_25::I !_vArray_0 !_vto_1 symbol_table_string_2 offset_3::I = select _vto_1::<{StdOverloaded.toInt;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 symbol_table_string_2 (<{StdInt.+_6}> offset_3 17))
lib.n_scnum_24::I !symbol_table_string_0 !offset_1::I = lib.IWORD symbol_table_string_0 (<{StdInt.+_6}> offset_1 12)
lib.n_value_23::I !symbol_table_string_0 !offset_1::I = lib.ILONG symbol_table_string_0 (<{StdInt.+_6}> offset_1 8)
lib.first_chars_20::I !symbol_table_string_0 !offset_1::I = lib.ILONG symbol_table_string_0 offset_1
lib.string_table_offset_19::I !symbol_table_string_0 !offset_1::I = <{StdInt.-_7}> (lib.ILONG symbol_table_string_0 (<{StdInt.+_6}> offset_1 4)) 4
lib.first_zero_char_offset_or_max_21::I !_vArray_0 string_1 !offset_2::I !max_3::I = case (case (StdBool.not (<{StdInt.<_17}> offset_2 max_3)) (True -> True) (False -> <{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 string_1 offset_2) '\0') ) (True -> offset_2) (False -> lib.first_zero_char_offset_or_max_21 _vArray_0 string_1 (<{StdInt.+_6}> offset_2 1) max_3) 
lib.first_zero_char_offset_or_max_99::I string_0 !offset_1::I !max_2::I = case (case (StdBool.not (<{StdInt.<_17}> offset_1 max_2)) (True -> True) (False -> <{StdChar.==_18}> (_SystemArray.select_19 string_0 offset_1) '\0') ) (True -> offset_1) (False -> lib.first_zero_char_offset_or_max_99 string_0 (<{StdInt.+_6}> offset_1 1) max_2) 
lib.name_of_symbol_22 !symbol_table_string_0 string_table_1 !offset_2::I = case (<{StdInt.==_16}> (lib.first_chars_20 symbol_table_string_0 offset_2) 0) (True -> <{StdString.%_10}> string_table_1 (_Tuple2 (lib.string_table_offset_19 symbol_table_string_0 offset_2) (<{StdInt.-_7}> (lib.first_zero_char_offset_or_max_99 string_table_1 (lib.string_table_offset_19 symbol_table_string_0 offset_2) (_SystemArray.size_20 string_table_1)) StdInt.one_11))) (False -> <{StdString.%_10}> symbol_table_string_0 (_Tuple2 offset_2 (<{StdInt.-_7}> (lib.first_zero_char_offset_or_max_99 symbol_table_string_0 offset_2 (<{StdInt.+_6}> offset_2 8)) StdInt.one_11))) 
lib.n_numaux_100::I !_vto_0 symbol_table_string_1 offset_2::I = select _vto_0::<{StdOverloaded.toInt;}> 0 (_SystemArray.select_19 symbol_table_string_1 (<{StdInt.+_6}> offset_2 17))
lib.n_numaux_101::I !symbol_table_string_0 !offset_1::I = StdInt.toInt_20 (_SystemArray.select_19 symbol_table_string_0 (<{StdInt.+_6}> offset_1 17))
lib.extract_external_symbols_26 !_vone_0 !<{_v+_1}> !symbol_n_2::I n_external_symbols_3 external_def_symbols_4 external_ref_symbols_5 !symbol_table_string_6 string_table_7 = let offset_1_0::I = <{StdInt.*_9}> 18 symbol_n_2 in case (<{StdInt.==_16}> offset_1_0 (_SystemArray.size_20 symbol_table_string_6)) (True -> _Tuple3 n_external_symbols_3 external_def_symbols_4 external_ref_symbols_5) (False -> <{lib._c;66;15_134}> (StdInt.toInt_20 (_SystemArray.select_19 symbol_table_string_6 (<{StdInt.+_6}> offset_1_0 16))) symbol_table_string_6 offset_1_0 _vone_0 <{_v+_1}> symbol_n_2 n_external_symbols_3 external_def_symbols_4 string_table_7 external_ref_symbols_5) 
<{lib._c;66;15_134}> !_x_0::I !symbol_table_string_1 !offset_2::I !_vone_3 !<{_v+_4}> !symbol_n_5::I n_external_symbols_6 external_def_symbols_7 string_table_8 external_ref_symbols_9 = case _x_0 (2 -> case (<{StdInt.==_16}> (lib.n_scnum_24 symbol_table_string_1 offset_2) 0) (True -> case (<{StdInt.==_16}> (lib.n_value_23 symbol_table_string_1 offset_2) 0) (True -> lib.extract_external_symbols_26 _vone_3 <{_v+_4}> (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_5 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) (select <{_v+_4}>::<{StdOverloaded.+;}> 0 n_external_symbols_6 (select _vone_3::<{StdOverloaded.one;}> 0)) external_def_symbols_7 (_predefined._Cons (lib.name_of_symbol_22 symbol_table_string_1 string_table_8 offset_2) external_ref_symbols_9) symbol_table_string_1 string_table_8) (False -> lib.extract_external_symbols_26 _vone_3 <{_v+_4}> (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_5 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) (select <{_v+_4}>::<{StdOverloaded.+;}> 0 n_external_symbols_6 (select _vone_3::<{StdOverloaded.one;}> 0)) (_predefined._Cons (lib.name_of_symbol_22 symbol_table_string_1 string_table_8 offset_2) external_def_symbols_7) external_ref_symbols_9 symbol_table_string_1 string_table_8) ) (False -> lib.extract_external_symbols_26 _vone_3 <{_v+_4}> (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_5 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) (select <{_v+_4}>::<{StdOverloaded.+;}> 0 n_external_symbols_6 (select _vone_3::<{StdOverloaded.one;}> 0)) (_predefined._Cons (lib.name_of_symbol_22 symbol_table_string_1 string_table_8 offset_2) external_def_symbols_7) external_ref_symbols_9 symbol_table_string_1 string_table_8) ) (_ -> lib.extract_external_symbols_26 _vone_3 <{_v+_4}> (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_5 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) n_external_symbols_6 external_def_symbols_7 external_ref_symbols_9 symbol_table_string_1 string_table_8)
lib.error_102 error_0 !xcoff_file_1 !files_2 = let !_x_1_0 = StdFile.fclose_26 xcoff_file_1 files_2 in _Tuple6 error_0 0 0 _predefined._Nil _predefined._Nil (select _x_1_0::_Tuple2 1)
lib.extract_external_symbols_103 !<{_v+_0}> !symbol_n_1::I n_external_symbols_2::I external_def_symbols_3 external_ref_symbols_4 !symbol_table_string_5 string_table_6 = let offset_1_0::I = <{StdInt.*_9}> 18 symbol_n_1 in case (<{StdInt.==_16}> offset_1_0 (_SystemArray.size_20 symbol_table_string_5)) (True -> _Tuple3 n_external_symbols_2 external_def_symbols_3 external_ref_symbols_4) (False -> <{lib._c;66;15_135}> (StdInt.toInt_20 (_SystemArray.select_19 symbol_table_string_5 (<{StdInt.+_6}> offset_1_0 16))) symbol_table_string_5 offset_1_0 <{_v+_0}> symbol_n_1 n_external_symbols_2 external_def_symbols_3 string_table_6 external_ref_symbols_4) 
<{lib._c;66;15_135}> !_x_0::I !symbol_table_string_1 !offset_2::I !<{_v+_3}> !symbol_n_4::I n_external_symbols_5::I external_def_symbols_6 string_table_7 external_ref_symbols_8 = case _x_0 (2 -> case (<{StdInt.==_16}> (lib.n_scnum_24 symbol_table_string_1 offset_2) 0) (True -> case (<{StdInt.==_16}> (lib.n_value_23 symbol_table_string_1 offset_2) 0) (True -> lib.extract_external_symbols_103 <{_v+_3}> (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_4 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) (select <{_v+_3}>::<{StdOverloaded.+;}> 0 n_external_symbols_5 StdInt.one_11) external_def_symbols_6 (_predefined._Cons (lib.name_of_symbol_22 symbol_table_string_1 string_table_7 offset_2) external_ref_symbols_8) symbol_table_string_1 string_table_7) (False -> lib.extract_external_symbols_103 <{_v+_3}> (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_4 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) (select <{_v+_3}>::<{StdOverloaded.+;}> 0 n_external_symbols_5 StdInt.one_11) (_predefined._Cons (lib.name_of_symbol_22 symbol_table_string_1 string_table_7 offset_2) external_def_symbols_6) external_ref_symbols_8 symbol_table_string_1 string_table_7) ) (False -> lib.extract_external_symbols_103 <{_v+_3}> (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_4 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) (select <{_v+_3}>::<{StdOverloaded.+;}> 0 n_external_symbols_5 StdInt.one_11) (_predefined._Cons (lib.name_of_symbol_22 symbol_table_string_1 string_table_7 offset_2) external_def_symbols_6) external_ref_symbols_8 symbol_table_string_1 string_table_7) ) (_ -> lib.extract_external_symbols_103 <{_v+_3}> (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_4 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) n_external_symbols_5 external_def_symbols_6 external_ref_symbols_8 symbol_table_string_1 string_table_7)
lib.extract_external_symbols_104 !symbol_n_0::I n_external_symbols_1::I external_def_symbols_2 external_ref_symbols_3 !symbol_table_string_4 string_table_5 = let offset_1_0::I = <{StdInt.*_9}> 18 symbol_n_0 in case (<{StdInt.==_16}> offset_1_0 (_SystemArray.size_20 symbol_table_string_4)) (True -> _Tuple3 n_external_symbols_1 external_def_symbols_2 external_ref_symbols_3) (False -> <{lib._c;66;15_136}> (StdInt.toInt_20 (_SystemArray.select_19 symbol_table_string_4 (<{StdInt.+_6}> offset_1_0 16))) symbol_table_string_4 offset_1_0 symbol_n_0 n_external_symbols_1 external_def_symbols_2 string_table_5 external_ref_symbols_3) 
<{lib._c;66;15_136}> !_x_0::I !symbol_table_string_1 !offset_2::I !symbol_n_3::I n_external_symbols_4::I external_def_symbols_5 string_table_6 external_ref_symbols_7 = case _x_0 (2 -> case (<{StdInt.==_16}> (lib.n_scnum_24 symbol_table_string_1 offset_2) 0) (True -> case (<{StdInt.==_16}> (lib.n_value_23 symbol_table_string_1 offset_2) 0) (True -> lib.extract_external_symbols_104 (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_3 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) (<{StdInt.+_6}> n_external_symbols_4 StdInt.one_11) external_def_symbols_5 (_predefined._Cons (lib.name_of_symbol_22 symbol_table_string_1 string_table_6 offset_2) external_ref_symbols_7) symbol_table_string_1 string_table_6) (False -> lib.extract_external_symbols_104 (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_3 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) (<{StdInt.+_6}> n_external_symbols_4 StdInt.one_11) (_predefined._Cons (lib.name_of_symbol_22 symbol_table_string_1 string_table_6 offset_2) external_def_symbols_5) external_ref_symbols_7 symbol_table_string_1 string_table_6) ) (False -> lib.extract_external_symbols_104 (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_3 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) (<{StdInt.+_6}> n_external_symbols_4 StdInt.one_11) (_predefined._Cons (lib.name_of_symbol_22 symbol_table_string_1 string_table_6 offset_2) external_def_symbols_5) external_ref_symbols_7 symbol_table_string_1 string_table_6) ) (_ -> lib.extract_external_symbols_104 (<{StdInt.+_6}> (<{StdInt.+_6}> symbol_n_3 1) (lib.n_numaux_101 symbol_table_string_1 offset_2)) n_external_symbols_4 external_def_symbols_5 external_ref_symbols_7 symbol_table_string_1 string_table_6)
lib.read_external_symbol_names_from_xcoff_file !file_name_0 !files_1 = let !_x_1_0 = StdFile.fopen_27 file_name_0 3 files_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> lib.error_102 (_predefined._Cons (<{StdString.+++_11}> "could not open " file_name_0) _predefined._Nil) (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2)) (False -> let !_x_3_0 = lib.read_coff_header (select _x_1_0::_Tuple3 1), !_x_3_1 = lib.read_symbol_table 0 (select _x_3_0::_Tuple5 2) (select _x_3_0::_Tuple5 3) (select _x_3_0::_Tuple5 4) in case (StdBool.not (select _x_3_1::_Tuple4 0)) (True -> lib.error_102 (_predefined._Cons "error reading symboltable or stringtable" _predefined._Nil) (select _x_3_1::_Tuple4 3) (select _x_1_0::_Tuple3 2)) (False -> let !_x_5_0 = lib.extract_external_symbols_104 0 0 _predefined._Nil _predefined._Nil (select _x_3_1::_Tuple4 1) (select _x_3_1::_Tuple4 2), !_x_5_1 = UtilIO.FFileSize (<{StdFile.FileSystem;}> StdFile.fclose_26 StdFile.fopen_27 StdFile.sfopen_28 StdFile.stdio_29) file_name_0 (select _x_1_0::_Tuple3 2), _x_5_2 = select _x_5_1::_Tuple2 0 in case (StdBool.not (select _x_5_2::_Tuple2 0)) (True -> lib.error_102 (_predefined._Cons (<{StdString.+++_11}> "error getting size of " file_name_0) _predefined._Nil) (select _x_3_1::_Tuple4 3) (select _x_5_1::_Tuple2 1)) (False -> let !_x_7_0 = StdFile.fclose_26 (select _x_3_1::_Tuple4 3) (select _x_5_1::_Tuple2 1) in case (StdBool.not (select _x_7_0::_Tuple2 0)) (True -> <{_Tuple6!63}> (_predefined._Cons (<{StdString.+++_11}> "error closing file " file_name_0) _predefined._Nil) 0 0 _predefined._Nil _predefined._Nil (select _x_7_0::_Tuple2 1)) (False -> <{_Tuple6!63}> _predefined._Nil (select _x_5_2::_Tuple2 1) (select _x_5_0::_Tuple3 0) (select _x_5_0::_Tuple3 1) (select _x_5_0::_Tuple3 2) (select _x_7_0::_Tuple2 1)) ) ) ) 
<{lib.c;303;59_31}> file_n_0 !g_l_1 = <{lib.g_c1;303;78_137}> g_l_1 file_n_0
<{lib.g_c1;303;78_137}> !g_l_0 file_n_1 = case g_l_0 (_predefined._Cons external_symbol_1_0 g_t_1_1 -> _predefined._Cons (_Tuple2 external_symbol_1_0 file_n_1) (<{lib.c;303;59_31}> file_n_1 g_t_1_1)) (_ -> _predefined._Nil)
lib.anon_32::I !_vArray_0 !i_1::I s_2 = <{StdInt.+_6}> (<{StdInt.+_6}> i_1 (select _vArray_0::<{_SystemArray.Array;}> 4 s_2)) 1
lib.anon_105::I !i_0::I !s_1 = <{StdInt.+_6}> (<{StdInt.+_6}> i_0 (_SystemArray.size_20 s_1)) 1
lib.foldl_106::I !r_0::I !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> lib.foldl_106 (lib.anon_105 r_0 a_1_0) x_1_1) 
lib.ReadObjectFile !file_name_0 file_n_1::I !files_2 = let !_x_1_0 = lib.read_external_symbol_names_from_xcoff_file file_name_0 files_2, errors_1_1 = select _x_1_0::_Tuple6 0 in case (StdBool.not (StdList.isEmpty errors_1_1)) (True -> _Tuple3 errors_1_1 lib.EmptyObjectFileMember (select _x_1_0::_Tuple6 5)) (False -> let !external_symbols_3_0 = <{StdList.++}> (select _x_1_0::_Tuple6 3) (select _x_1_0::_Tuple6 4), !object_file_member_3_1 = update lib.EmptyObjectFileMember::lib._ObjectFileMember [0:select _x_1_0::_Tuple6 1,1:select _x_1_0::_Tuple6 2,2:<{lib.c;303;59_31}> file_n_1 external_symbols_3_0,3:lib.foldl_106 0 external_symbols_3_0] in _Tuple3 _predefined._Nil object_file_member_3_1 (select _x_1_0::_Tuple6 5)) 
lib.CharIndexBackwards !s_0 !i_1::I !char_2::C = case (<{StdInt.==_16}> i_1 -1) (True -> <{_Tuple2!3}> False (_SystemArray.size_20 s_0)) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_0 i_1) char_2) (True -> <{_Tuple2!3}> True i_1) (False -> lib.CharIndexBackwards s_0 (<{StdInt.-_7}> i_1 StdInt.one_11) char_2) ) 
lib.ExtractPathAndFile !path_and_file_0 = let !_x_1_0 = lib.CharIndexBackwards path_and_file_0 (<{StdInt.-_7}> (_SystemArray.size_20 path_and_file_0) 1) '\\' in case (select _x_1_0::_Tuple2 0) (True -> let i_3_0::I = select _x_1_0::_Tuple2 1 in <{_Tuple2!3}> (<{StdString.%_10}> path_and_file_0 (_Tuple2 0 (<{StdInt.-_7}> i_3_0 1))) (<{StdString.%_10}> path_and_file_0 (_Tuple2 (<{StdInt.+_6}> i_3_0 1) (<{StdInt.-_7}> (_SystemArray.size_20 path_and_file_0) 1)))) (False -> <{_Tuple2!3}> "" path_and_file_0) 
lib.object_name_within_library_33 !object_path_0 !longnames_index_1::I !longnames_member_2 = let !_x_1_0 = lib.ExtractPathAndFile object_path_0, object_file_name_1_1 = select _x_1_0::_Tuple2 1 in case (<{StdInt.<_17}> (_SystemArray.size_20 object_file_name_1_1) 16) (True -> <{_Tuple3!7}> (<{StdString.+++_11}> object_file_name_1_1 "/") longnames_index_1 longnames_member_2) (False -> let !object_name_within_library_3_0 = <{StdString.+++_11}> "/" (StdString.toString_5 longnames_index_1) in <{_Tuple3!7}> object_name_within_library_3_0 (<{StdInt.+_6}> (<{StdInt.+_6}> longnames_index_1 (_SystemArray.size_20 object_file_name_1_1)) 1) (<{StdString.+++_11}> longnames_member_2 (<{StdString.+++_11}> object_file_name_1_1 "\0"))) 
lib.ReadObjectFiles !_x_0 !i_1::I !object_file_member_a_2 !object_file_offset_3::I !object_file_members_4 !longnames_index_5::I !longnames_member_6 !files_7 = case _x_0 (_predefined._Nil -> <{_Tuple6!33}> _predefined._Nil object_file_members_4 object_file_member_a_2 longnames_index_5 longnames_member_6 files_7) (_predefined._Cons object_1_0 objects_1_1 -> let !_x_2_0 = lib.ReadObjectFile object_1_0 i_1 files_7, errors_2_1 = select _x_2_0::_Tuple3 0 in case (StdBool.not (StdList.isEmpty errors_2_1)) (True -> <{_Tuple6!33}> errors_2_1 object_file_members_4 object_file_member_a_2 longnames_index_5 longnames_member_6 (select _x_2_0::_Tuple3 2)) (False -> let !_x_4_0 = lib.object_name_within_library_33 object_1_0 longnames_index_5 longnames_member_6, !object_file_member_4_1 = update (select _x_2_0::_Tuple3 1)::lib._ObjectFileMember [4:object_file_offset_3,5:select _x_4_0::_Tuple3 0], !object_file_offset_4_2::I = <{StdInt.+_6}> object_file_offset_3 (<{lib._if;220;17_138}> (StdInt.isEven_18 i_4_4) i_4_4), !object_file_members_4_3 = update object_file_members_4::lib._ObjectFileMembers [0:<{StdInt.+_6}> (select object_file_members_4::lib._ObjectFileMembers 0) (select object_file_member_4_1::lib._ObjectFileMember 1),1:<{StdInt.+_6}> (select object_file_members_4::lib._ObjectFileMembers 1) (select object_file_member_4_1::lib._ObjectFileMember 3)], i_4_4::I = <{StdInt.+_6}> 60 (select object_file_member_4_1::lib._ObjectFileMember 0) in lib.ReadObjectFiles objects_1_1 (<{StdInt.+_6}> i_1 StdInt.one_11) (lib.update_96 object_file_member_a_2 i_1 object_file_member_4_1) object_file_offset_4_2 object_file_members_4_3 (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2) (select _x_2_0::_Tuple3 2)) ) 
<{lib._if;220;17_138}>::I !_x_0::B !i_1::I = case _x_0 (True -> i_1) (_ -> <{StdInt.+_6}> i_1 1)
lib.write_archive_member_header_55 !_vtoString_0 !name_1 linker_member_size_2 !lib_file_3 = let !lib_file_1_0 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> name_1 (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 16 1))) lib_file_3, !lib_file_1_1 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 12 1))) lib_file_1_0, !lib_file_1_2 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 6 1))) lib_file_1_1, !lib_file_1_3 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 6 1))) lib_file_1_2, !lib_file_1_4 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 8 1))) lib_file_1_3, !lib_file_1_5 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> (select _vtoString_0::<{StdOverloaded.toString;}> 0 linker_member_size_2) (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 10 1))) lib_file_1_4, !lib_file_1_6 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "`\n" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 2 1))) lib_file_1_5 in lib_file_1_6
lib.fwritei_big_endian_47 !i_0::I !lib_file_1 = let !lib_file_1_0 = StdFile.fwritec (StdChar.toChar_21 (<{StdInt.>>}> i_0 24)) lib_file_1, !lib_file_1_1 = StdFile.fwritec (StdChar.toChar_21 (<{StdInt.>>}> i_0 16)) lib_file_1_0, !lib_file_1_2 = StdFile.fwritec (StdChar.toChar_21 (<{StdInt.>>}> i_0 8)) lib_file_1_1, !lib_file_1_3 = StdFile.fwritec (StdChar.toChar_21 i_0) lib_file_1_2 in lib_file_1_3
lib.write_offset_43 !n_external_symbols_0::I !lib_file_1 offset_2::I = case (<{StdInt.==_16}> n_external_symbols_0 0) (True -> lib_file_1) (False -> lib.write_offset_43 (<{StdInt.-_7}> n_external_symbols_0 StdInt.one_11) (lib.fwritei_big_endian_47 offset_2 lib_file_1) offset_2) 
lib.write_object_file_member_offsets_44 start_offset_0::I !lib_file_1 !_x_2 = case _x_2 (lib._ObjectFileMember xcoff_size_1_0 n_external_symbols_1_1 external_symbols_1_2 s_stringtable_1_3 object_file_offset_1_4 object_library_name_1_5 -> lib.write_offset_43 n_external_symbols_1_1 lib_file_1 (<{StdInt.+_6}> start_offset_0 object_file_offset_1_4)) 
lib.write_file_offset_48 !_vArray_0 start_offset_1::I !lib_file_2 !i_3::I object_file_member_a_4 = case (<{StdInt.==_16}> i_3 (select _vArray_0::<{_SystemArray.Array;}> 4 object_file_member_a_4)) (True -> lib_file_2) (False -> let !lib_file_2_0 = lib.write_object_file_member_offsets_44 start_offset_1 lib_file_2 (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_4 i_3) in lib.write_file_offset_48 _vArray_0 start_offset_1 lib_file_2_0 (<{StdInt.+_6}> i_3 StdInt.one_11) object_file_member_a_4) 
lib.write_symbol_45 !_x_0 !lib_file_1 = case _x_0 (_predefined._Nil -> lib_file_1) (_predefined._Cons _x_1_0 ss_1_1 -> case _x_1_0 (_Tuple2 s_2_0 _x_2_1 -> let !lib_file_3_0 = StdFile.fwrites s_2_0 lib_file_1, !lib_file_3_1 = StdFile.fwritec '\0' lib_file_3_0 in lib.write_symbol_45 ss_1_1 lib_file_3_1) ) 
lib.write_object_file_member_strings_46 !lib_file_0 !_x_1 = case _x_1 (lib._ObjectFileMember xcoff_size_1_0 n_external_symbols_1_1 external_symbols_1_2 s_stringtable_1_3 object_file_offset_1_4 object_library_name_1_5 -> lib.write_symbol_45 external_symbols_1_2 lib_file_0) 
lib.write_string_table_49 !_vArray_0 !lib_file_1 !i_2::I object_file_member_a_3 = case (<{StdInt.==_16}> i_2 (select _vArray_0::<{_SystemArray.Array;}> 4 object_file_member_a_3)) (True -> lib_file_1) (False -> let !lib_file_2_0 = lib.write_object_file_member_strings_46 lib_file_1 (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_3 i_2) in lib.write_string_table_49 _vArray_0 lib_file_2_0 (<{StdInt.+_6}> i_2 StdInt.one_11) object_file_member_a_3) 
lib.write_first_linker_member_53 !_vtoString_0 !_vArray_1 !_visEven_2 start_offset_3::I lib_file_offset_4 member_size_5 !lib_file_6 !object_file_members_7 object_file_member_a_8 = let !lib_file_1_0 = lib.write_archive_member_header_55 _vtoString_0 "/" member_size_5 lib_file_6, !lib_file_1_1 = lib.fwritei_big_endian_47 (select object_file_members_7::lib._ObjectFileMembers 0) lib_file_1_0, !lib_file_1_2 = lib.write_file_offset_48 _vArray_1 start_offset_3 lib_file_1_1 0 object_file_member_a_8, !lib_file_1_3 = lib.write_string_table_49 _vArray_1 lib_file_1_2 0 object_file_member_a_8, !lib_file_1_4 = <{lib._c;629;15_139}> (select _visEven_2::<{StdOverloaded.isEven;}> 0 member_size_5) lib_file_1_3 in lib_file_1_4
<{lib._c;629;15_139}> !_x_0::B !lib_file_1 = case _x_0 (True -> lib_file_1) (False -> StdFile.fwritec ' ' lib_file_1) 
lib.sabort !s_0 !_x_1 = StdMisc.abort s_0
lib.foldl_89 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> lib.foldl_89 op_0 (op_0 r_1 a_1_0) x_1_1) 
lib.foldl_88 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> lib.foldl_88 op_0 (op_0 r_1 a_1_0) x_1_1) 
lib.write_object_file_offsets_39 !_vArray_0 start_offset_1::I !i_2::I !lib_file_3 object_file_member_a_4 = case (<{StdInt.==_16}> i_2 (select _vArray_0::<{_SystemArray.Array;}> 4 object_file_member_a_4)) (True -> lib_file_3) (False -> lib.write_object_file_offsets_39 _vArray_0 start_offset_1 (<{StdInt.+_6}> i_2 StdInt.one_11) (StdFile.fwritei (<{StdInt.+_6}> start_offset_1 (select (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_4 i_2)::lib._ObjectFileMember 4)) lib_file_3) object_file_member_a_4) 
lib.collect_symbols_42 !_vArray_0 !i_1::I !symbols_2 object_file_member_a_3 = case (<{StdInt.==_16}> i_1 (select _vArray_0::<{_SystemArray.Array;}> 4 object_file_member_a_3)) (True -> symbols_2) (False -> lib.collect_symbols_42 _vArray_0 (<{StdInt.+_6}> i_1 StdInt.one_11) (<{StdList.++}> symbols_2 (select (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_3 i_1)::lib._ObjectFileMember 2)) object_file_member_a_3) 
lib.anon_38::B !<{_v<_0}> !_x_1 !_x_2 = case _x_1 (_Tuple2 s1_1_0 i1_1_1 -> case _x_2 (_Tuple2 s2_2_0 i2_2_1 -> select <{_v<_0}>::<{StdOverloaded.<;}> 0 s1_1_0 s2_2_0) ) 
lib.fwrite_index_40 !lib_file_0 !_x_1 = case _x_1 (_Tuple2 name_1_0 index_1_1 -> let !lib_file_2_0 = StdFile.fwritec (StdChar.toChar_21 index_1_1) lib_file_0, !lib_file_2_1 = StdFile.fwritec (StdChar.toChar_21 (<{StdInt.>>}> index_1_1 8)) lib_file_2_0 in lib_file_2_1) 
lib.fwrite_symbol_41 !lib_file_0 !_x_1 = case _x_1 (_Tuple2 name_1_0 index_1_1 -> let !lib_file_2_0 = StdFile.fwrites name_1_0 lib_file_0, !lib_file_2_1 = StdFile.fwritec '\0' lib_file_2_0 in lib_file_2_1) 
lib.anon_107::B !_x_0 !_x_1 = case _x_0 (_Tuple2 s1_1_0 i1_1_1 -> case _x_1 (_Tuple2 s2_2_0 i2_2_1 -> <{StdString.<_3}> s1_1_0 s2_2_0) ) 
lib.foldl_108 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> lib.foldl_108 (lib.fwrite_index_40 r_0 a_1_0) x_1_1) 
lib.foldl_109 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> lib.foldl_109 (lib.fwrite_symbol_41 r_0 a_1_0) x_1_1) 
lib.write_second_linker_member_52 !_vtoString_0 !_vArray_1 !_visEven_2 start_offset_3::I member_size_4 !lib_file_5 !object_file_members_6 object_file_member_a_7 = let !lib_file_1_0 = lib.write_archive_member_header_55 _vtoString_0 "/" member_size_4 lib_file_5, !lib_file_1_1 = StdFile.fwritei (select object_file_members_6::lib._ObjectFileMembers 2) lib_file_1_0, !lib_file_1_2 = lib.write_object_file_offsets_39 _vArray_1 start_offset_3 0 lib_file_1_1 object_file_member_a_7, !lib_file_1_3 = StdFile.fwritei (select object_file_members_6::lib._ObjectFileMembers 0) lib_file_1_2, !symbols_1_4 = StdOrdList.sortBy lib.anon_107 (lib.collect_symbols_42 _vArray_1 0 _predefined._Nil object_file_member_a_7), !lib_file_1_5 = lib.foldl_108 lib_file_1_3 symbols_1_4, !lib_file_1_6 = lib.foldl_109 lib_file_1_5 symbols_1_4, !lib_file_1_7 = <{lib._c;581;15_140}> (select _visEven_2::<{StdOverloaded.isEven;}> 0 member_size_4) lib_file_1_6 in lib_file_1_7
<{lib._c;581;15_140}> !_x_0::B !lib_file_1 = case _x_0 (True -> lib_file_1) (False -> StdFile.fwritec ' ' lib_file_1) 
lib.write_archive_member_header_110 !name_0 !linker_member_size_1::I !lib_file_2 = let !lib_file_1_0 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> name_0 (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 16 1))) lib_file_2, !lib_file_1_1 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 12 1))) lib_file_1_0, !lib_file_1_2 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 6 1))) lib_file_1_1, !lib_file_1_3 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 6 1))) lib_file_1_2, !lib_file_1_4 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 8 1))) lib_file_1_3, !lib_file_1_5 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> (StdString.toString_5 linker_member_size_1) (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 10 1))) lib_file_1_4, !lib_file_1_6 = StdFile.fwrites (<{StdString.%_10}> (<{StdString.+++_11}> "`\n" (_SystemArray.createArray_17 16 ' ')) (_Tuple2 0 (<{StdInt.-_7}> 2 1))) lib_file_1_5 in lib_file_1_6
lib.write_longnames_member_51 !member_size_0::I !lib_file_1 longnames_member_2 = case (<{StdInt.==_16}> member_size_0 0) (True -> lib_file_1) (False -> let !lib_file_2_0 = lib.write_archive_member_header_110 "//" member_size_0 lib_file_1, !lib_file_2_1 = StdFile.fwrites longnames_member_2 lib_file_2_0, !lib_file_2_2 = <{lib._c;553;19_141}> (StdInt.isEven_18 member_size_0) lib_file_2_1 in lib_file_2_2) 
<{lib._c;553;19_141}> !_x_0::B !lib_file_1 = case _x_0 (True -> lib_file_1) (False -> StdFile.fwritec ' ' lib_file_1) 
lib.copy_file_36 !_vArray_0 object_file_member_a_1 i_2::I !xcoff_file_3 !lib_file_4 = let !_x_1_0 = StdFile.freads xcoff_file_3 (select (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_1 i_2)::lib._ObjectFileMember 0), !lib_file_1_1 = StdFile.fwrites (select _x_1_0::_Tuple2 0) lib_file_4 in _Tuple2 (select _x_1_0::_Tuple2 1) lib_file_1_1
lib.write_object_37 !_vArray_0 start_offset_1::I !object_2 object_file_member_a_3 i_4::I !lib_file_5 !files_6 = let !lib_file_1_0 = lib.write_archive_member_header_110 (select (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_3 i_4)::lib._ObjectFileMember 5) (select (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_3 i_4)::lib._ObjectFileMember 0) lib_file_5, !_x_1_1 = StdFile.fopen_27 object_2 3 files_6 in case (StdBool.not (select _x_1_1::_Tuple3 0)) (True -> let !_x_3_0 = StdFile.fclose_26 (select _x_1_1::_Tuple3 1) (select _x_1_1::_Tuple3 2) in <{_Tuple3!7}> (_predefined._Cons (<{StdString.+++_11}> "could not open " object_2) _predefined._Nil) lib_file_1_0 (select _x_3_0::_Tuple2 1)) (False -> let !_x_3_0 = lib.copy_file_36 _vArray_0 object_file_member_a_3 i_4 (select _x_1_1::_Tuple3 1) lib_file_1_0, !lib_file_3_1 = <{lib._c;516;19_142}> (StdInt.isEven_18 (<{StdInt.+_6}> start_offset_1 (select (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_3 i_4)::lib._ObjectFileMember 0))) _x_3_0, !_x_3_2 = StdFile.fposition lib_file_3_1, lib_file_pos_3_3::I = select _x_3_2::_Tuple2 0, i_3_4::I = <{StdInt.+_6}> (<{StdInt.+_6}> start_offset_1 60) (select (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_3 i_4)::lib._ObjectFileMember 0) in case (StdBool.not (<{StdInt.==_16}> lib_file_pos_3_3 (<{lib._if;220;17_143}> (StdInt.isEven_18 i_3_4) i_3_4))) (True -> StdMisc.abort (<{StdString.+++_11}> "write_object:  error in file offset calculation. " (<{StdString.+++_11}> (StdString.toString_5 lib_file_pos_3_3) (<{StdString.+++_11}> " - " (StdString.toString_5 (<{StdInt.+_6}> (<{StdInt.+_6}> start_offset_1 60) (select (select _vArray_0::<{_SystemArray.Array;}> 3 object_file_member_a_3 i_4)::lib._ObjectFileMember 0))))))) (False -> let !_x_5_0 = StdFile.fclose_26 (select _x_3_0::_Tuple2 0) (select _x_1_1::_Tuple3 2) in case (StdBool.not (select _x_5_0::_Tuple2 0)) (True -> <{_Tuple3!7}> (_predefined._Cons (<{StdString.+++_11}> "could not close " object_2) _predefined._Nil) (select _x_3_2::_Tuple2 1) (select _x_5_0::_Tuple2 1)) (False -> <{_Tuple3!7}> _predefined._Nil (select _x_3_2::_Tuple2 1) (select _x_5_0::_Tuple2 1)) ) ) 
<{lib._if;220;17_143}>::I !_x_0::B !i_1::I = case _x_0 (True -> i_1) (_ -> <{StdInt.+_6}> i_1 1)
<{lib._c;516;19_142}> !_x_0::B !_x_1 = case _x_0 (True -> select _x_1::_Tuple2 1) (False -> StdFile.fwritec ' ' (select _x_1::_Tuple2 1)) 
lib.write_objects_50 !_vArray_0 _x_1::I !_x_2 lib_file_3 _x_4::I _x_5 files_6 = case _x_2 (_predefined._Nil -> _Tuple3 _predefined._Nil lib_file_3 files_6) (_predefined._Cons object_1_0 objects_1_1 -> let !_x_2_0 = lib.write_object_37 _vArray_0 _x_4 object_1_0 _x_5 _x_1 lib_file_3 files_6, errors_2_1 = select _x_2_0::_Tuple3 0 in case (StdBool.not (StdList.isEmpty errors_2_1)) (True -> _Tuple3 errors_2_1 (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) (False -> let i_4_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> _x_4 60) (select (select _vArray_0::<{_SystemArray.Array;}> 3 _x_5 _x_1)::lib._ObjectFileMember 0) in lib.write_objects_50 _vArray_0 (<{StdInt.+_6}> _x_1 StdInt.one_11) objects_1_1 (select _x_2_0::_Tuple3 1) (<{lib._if;220;17_144}> (StdInt.isEven_18 i_4_0) i_4_0) _x_5 (select _x_2_0::_Tuple3 2)) ) 
<{lib._if;220;17_144}>::I !_x_0::B !i_1::I = case _x_0 (True -> i_1) (_ -> <{StdInt.+_6}> i_1 1)
<{lib.cu;384;61_111}> !_vone_0 !<{_v+_1}> !_vone_2 !<{_v+_3}> c_l_i_4 !i_5::I !g_s_6::I = case (StdBool.not (<{StdInt.<_17}> g_s_6 i_5)) (True -> <{lib.cu;384;61_111}> _vone_0 <{_v+_1}> _vone_2 <{_v+_3}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_4 (select _vone_0::<{StdOverloaded.one;}> 0)) (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_5 (select _vone_2::<{StdOverloaded.one;}> 0)) g_s_6) (False -> c_l_i_4) 
<{lib.cu;384;61_112}> !_vArray_0 !_vone_1 !<{_v+_2}> c_a_3 c_i_4::I !i_5::I !g_s_6::I = case (StdBool.not (<{StdInt.<_17}> g_s_6 i_5)) (True -> <{lib.cu;384;61_112}> _vArray_0 _vone_1 <{_v+_2}> (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_3 c_i_4 lib.EmptyObjectFileMember) (<{StdInt.+_6}> c_i_4 StdInt.one_11) (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_5 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_6) (False -> c_a_3) 
lib.write_first_linker_member_113 !_vArray_0 !_visEven_1 start_offset_2::I lib_file_offset_3 !member_size_4::I !lib_file_5 !object_file_members_6 object_file_member_a_7 = let !lib_file_1_0 = lib.write_archive_member_header_110 "/" member_size_4 lib_file_5, !lib_file_1_1 = lib.fwritei_big_endian_47 (select object_file_members_6::lib._ObjectFileMembers 0) lib_file_1_0, !lib_file_1_2 = lib.write_file_offset_48 _vArray_0 start_offset_2 lib_file_1_1 0 object_file_member_a_7, !lib_file_1_3 = lib.write_string_table_49 _vArray_0 lib_file_1_2 0 object_file_member_a_7, !lib_file_1_4 = <{lib._c;629;15_145}> (select _visEven_1::<{StdOverloaded.isEven;}> 0 member_size_4) lib_file_1_3 in lib_file_1_4
<{lib._c;629;15_145}> !_x_0::B !lib_file_1 = case _x_0 (True -> lib_file_1) (False -> StdFile.fwritec ' ' lib_file_1) 
lib.write_second_linker_member_114 !_vArray_0 !_visEven_1 start_offset_2::I !member_size_3::I !lib_file_4 !object_file_members_5 object_file_member_a_6 = let !lib_file_1_0 = lib.write_archive_member_header_110 "/" member_size_3 lib_file_4, !lib_file_1_1 = StdFile.fwritei (select object_file_members_5::lib._ObjectFileMembers 2) lib_file_1_0, !lib_file_1_2 = lib.write_object_file_offsets_39 _vArray_0 start_offset_2 0 lib_file_1_1 object_file_member_a_6, !lib_file_1_3 = StdFile.fwritei (select object_file_members_5::lib._ObjectFileMembers 0) lib_file_1_2, !symbols_1_4 = StdOrdList.sortBy lib.anon_107 (lib.collect_symbols_42 _vArray_0 0 _predefined._Nil object_file_member_a_6), !lib_file_1_5 = lib.foldl_108 lib_file_1_3 symbols_1_4, !lib_file_1_6 = lib.foldl_109 lib_file_1_5 symbols_1_4, !lib_file_1_7 = <{lib._c;581;15_146}> (select _visEven_1::<{StdOverloaded.isEven;}> 0 member_size_3) lib_file_1_6 in lib_file_1_7
<{lib._c;581;15_146}> !_x_0::B !lib_file_1 = case _x_0 (True -> lib_file_1) (False -> StdFile.fwritec ' ' lib_file_1) 
lib.copy_file_117 !object_file_member_a_0 !i_1::I !xcoff_file_2 !lib_file_3 = let !_x_1_0 = StdFile.freads xcoff_file_2 (select (lib.select_94 object_file_member_a_0 i_1)::lib._ObjectFileMember 0), !lib_file_1_1 = StdFile.fwrites (select _x_1_0::_Tuple2 0) lib_file_3 in _Tuple2 (select _x_1_0::_Tuple2 1) lib_file_1_1
lib.write_object_116 start_offset_0::I !object_1 !object_file_member_a_2 !i_3::I !lib_file_4 !files_5 = let !lib_file_1_0 = lib.write_archive_member_header_110 (select (lib.select_94 object_file_member_a_2 i_3)::lib._ObjectFileMember 5) (select (lib.select_94 object_file_member_a_2 i_3)::lib._ObjectFileMember 0) lib_file_4, !_x_1_1 = StdFile.fopen_27 object_1 3 files_5 in case (StdBool.not (select _x_1_1::_Tuple3 0)) (True -> let !_x_3_0 = StdFile.fclose_26 (select _x_1_1::_Tuple3 1) (select _x_1_1::_Tuple3 2) in <{_Tuple3!7}> (_predefined._Cons (<{StdString.+++_11}> "could not open " object_1) _predefined._Nil) lib_file_1_0 (select _x_3_0::_Tuple2 1)) (False -> let !_x_3_0 = lib.copy_file_117 object_file_member_a_2 i_3 (select _x_1_1::_Tuple3 1) lib_file_1_0, !lib_file_3_1 = <{lib._c;516;19_147}> (StdInt.isEven_18 (<{StdInt.+_6}> start_offset_0 (select (lib.select_94 object_file_member_a_2 i_3)::lib._ObjectFileMember 0))) _x_3_0, !_x_3_2 = StdFile.fposition lib_file_3_1, lib_file_pos_3_3::I = select _x_3_2::_Tuple2 0, i_3_4::I = <{StdInt.+_6}> (<{StdInt.+_6}> start_offset_0 60) (select (lib.select_94 object_file_member_a_2 i_3)::lib._ObjectFileMember 0) in case (StdBool.not (<{StdInt.==_16}> lib_file_pos_3_3 (<{lib._if;220;17_148}> (StdInt.isEven_18 i_3_4) i_3_4))) (True -> StdMisc.abort (<{StdString.+++_11}> "write_object:  error in file offset calculation. " (<{StdString.+++_11}> (StdString.toString_5 lib_file_pos_3_3) (<{StdString.+++_11}> " - " (StdString.toString_5 (<{StdInt.+_6}> (<{StdInt.+_6}> start_offset_0 60) (select (lib.select_94 object_file_member_a_2 i_3)::lib._ObjectFileMember 0))))))) (False -> let !_x_5_0 = StdFile.fclose_26 (select _x_3_0::_Tuple2 0) (select _x_1_1::_Tuple3 2) in case (StdBool.not (select _x_5_0::_Tuple2 0)) (True -> <{_Tuple3!7}> (_predefined._Cons (<{StdString.+++_11}> "could not close " object_1) _predefined._Nil) (select _x_3_2::_Tuple2 1) (select _x_5_0::_Tuple2 1)) (False -> <{_Tuple3!7}> _predefined._Nil (select _x_3_2::_Tuple2 1) (select _x_5_0::_Tuple2 1)) ) ) 
<{lib._if;220;17_148}>::I !_x_0::B !i_1::I = case _x_0 (True -> i_1) (_ -> <{StdInt.+_6}> i_1 1)
<{lib._c;516;19_147}> !_x_0::B !_x_1 = case _x_0 (True -> select _x_1::_Tuple2 1) (False -> StdFile.fwritec ' ' (select _x_1::_Tuple2 1)) 
lib.write_objects_115 _x_0::I !_x_1 lib_file_2 _x_3::I _x_4 files_5 = case _x_1 (_predefined._Nil -> _Tuple3 _predefined._Nil lib_file_2 files_5) (_predefined._Cons object_1_0 objects_1_1 -> let !_x_2_0 = lib.write_object_116 _x_3 object_1_0 _x_4 _x_0 lib_file_2 files_5, errors_2_1 = select _x_2_0::_Tuple3 0 in case (StdBool.not (StdList.isEmpty errors_2_1)) (True -> _Tuple3 errors_2_1 (select _x_2_0::_Tuple3 1) (select _x_2_0::_Tuple3 2)) (False -> let i_4_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> _x_3 60) (select (lib.select_94 _x_4 _x_0)::lib._ObjectFileMember 0) in lib.write_objects_115 (<{StdInt.+_6}> _x_0 StdInt.one_11) objects_1_1 (select _x_2_0::_Tuple3 1) (<{lib._if;220;17_149}> (StdInt.isEven_18 i_4_0) i_4_0) _x_4 (select _x_2_0::_Tuple3 2)) ) 
<{lib._if;220;17_149}>::I !_x_0::B !i_1::I = case _x_0 (True -> i_1) (_ -> <{StdInt.+_6}> i_1 1)
<{lib.cu;384;61_118}>::I !<{_v+_0}> !_vone_1 !<{_v+_2}> c_l_i_3::I !i_4::I !g_s_5::I = case (StdBool.not (<{StdInt.<_17}> g_s_5 i_4)) (True -> <{lib.cu;384;61_118}> <{_v+_0}> _vone_1 <{_v+_2}> (select <{_v+_0}>::<{StdOverloaded.+;}> 0 c_l_i_3 StdInt.one_11) (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_4 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_5) (False -> c_l_i_3) 
<{lib.cu;384;61_119}> !_vone_0 !<{_v+_1}> !c_a_2 c_i_3::I !i_4::I !g_s_5::I = case (StdBool.not (<{StdInt.<_17}> g_s_5 i_4)) (True -> <{lib.cu;384;61_119}> _vone_0 <{_v+_1}> (lib.update_96 c_a_2 c_i_3 lib.EmptyObjectFileMember) (<{StdInt.+_6}> c_i_3 StdInt.one_11) (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_4 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_5) (False -> c_a_2) 
lib.write_file_offset_121 start_offset_0::I !lib_file_1 !i_2::I !object_file_member_a_3 = case (<{StdInt.==_16}> i_2 (lib.size_95 object_file_member_a_3)) (True -> lib_file_1) (False -> let !lib_file_2_0 = lib.write_object_file_member_offsets_44 start_offset_0 lib_file_1 (lib.select_94 object_file_member_a_3 i_2) in lib.write_file_offset_121 start_offset_0 lib_file_2_0 (<{StdInt.+_6}> i_2 StdInt.one_11) object_file_member_a_3) 
lib.write_string_table_122 !lib_file_0 !i_1::I !object_file_member_a_2 = case (<{StdInt.==_16}> i_1 (lib.size_95 object_file_member_a_2)) (True -> lib_file_0) (False -> let !lib_file_2_0 = lib.write_object_file_member_strings_46 lib_file_0 (lib.select_94 object_file_member_a_2 i_1) in lib.write_string_table_122 lib_file_2_0 (<{StdInt.+_6}> i_1 StdInt.one_11) object_file_member_a_2) 
lib.write_first_linker_member_120 !_visEven_0 start_offset_1::I lib_file_offset_2 !member_size_3::I !lib_file_4 !object_file_members_5 !object_file_member_a_6 = let !lib_file_1_0 = lib.write_archive_member_header_110 "/" member_size_3 lib_file_4, !lib_file_1_1 = lib.fwritei_big_endian_47 (select object_file_members_5::lib._ObjectFileMembers 0) lib_file_1_0, !lib_file_1_2 = lib.write_file_offset_121 start_offset_1 lib_file_1_1 0 object_file_member_a_6, !lib_file_1_3 = lib.write_string_table_122 lib_file_1_2 0 object_file_member_a_6, !lib_file_1_4 = <{lib._c;629;15_150}> (select _visEven_0::<{StdOverloaded.isEven;}> 0 member_size_3) lib_file_1_3 in lib_file_1_4
<{lib._c;629;15_150}> !_x_0::B !lib_file_1 = case _x_0 (True -> lib_file_1) (False -> StdFile.fwritec ' ' lib_file_1) 
lib.write_object_file_offsets_124 start_offset_0::I !i_1::I !lib_file_2 !object_file_member_a_3 = case (<{StdInt.==_16}> i_1 (lib.size_95 object_file_member_a_3)) (True -> lib_file_2) (False -> lib.write_object_file_offsets_124 start_offset_0 (<{StdInt.+_6}> i_1 StdInt.one_11) (StdFile.fwritei (<{StdInt.+_6}> start_offset_0 (select (lib.select_94 object_file_member_a_3 i_1)::lib._ObjectFileMember 4)) lib_file_2) object_file_member_a_3) 
lib.collect_symbols_125 !i_0::I !symbols_1 !object_file_member_a_2 = case (<{StdInt.==_16}> i_0 (lib.size_95 object_file_member_a_2)) (True -> symbols_1) (False -> lib.collect_symbols_125 (<{StdInt.+_6}> i_0 StdInt.one_11) (<{StdList.++}> symbols_1 (select (lib.select_94 object_file_member_a_2 i_0)::lib._ObjectFileMember 2)) object_file_member_a_2) 
lib.write_second_linker_member_123 !_visEven_0 start_offset_1::I !member_size_2::I !lib_file_3 !object_file_members_4 !object_file_member_a_5 = let !lib_file_1_0 = lib.write_archive_member_header_110 "/" member_size_2 lib_file_3, !lib_file_1_1 = StdFile.fwritei (select object_file_members_4::lib._ObjectFileMembers 2) lib_file_1_0, !lib_file_1_2 = lib.write_object_file_offsets_124 start_offset_1 0 lib_file_1_1 object_file_member_a_5, !lib_file_1_3 = StdFile.fwritei (select object_file_members_4::lib._ObjectFileMembers 0) lib_file_1_2, !symbols_1_4 = StdOrdList.sortBy lib.anon_107 (lib.collect_symbols_125 0 _predefined._Nil object_file_member_a_5), !lib_file_1_5 = lib.foldl_108 lib_file_1_3 symbols_1_4, !lib_file_1_6 = lib.foldl_109 lib_file_1_5 symbols_1_4, !lib_file_1_7 = <{lib._c;581;15_151}> (select _visEven_0::<{StdOverloaded.isEven;}> 0 member_size_2) lib_file_1_6 in lib_file_1_7
<{lib._c;581;15_151}> !_x_0::B !lib_file_1 = case _x_0 (True -> lib_file_1) (False -> StdFile.fwritec ' ' lib_file_1) 
<{lib.cu;384;61_126}>::I !_vone_0 !<{_v+_1}> !c_l_i_2::I !i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 i_3)) (True -> <{lib.cu;384;61_126}> _vone_0 <{_v+_1}> (<{StdInt.+_6}> c_l_i_2 StdInt.one_11) (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_3 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_4) (False -> c_l_i_2) 
<{lib.cu;384;61_127}> !<{_v+_0}> !c_a_1 c_i_2::I !i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 i_3)) (True -> <{lib.cu;384;61_127}> <{_v+_0}> (lib.update_96 c_a_1 c_i_2 lib.EmptyObjectFileMember) (<{StdInt.+_6}> c_i_2 StdInt.one_11) (select <{_v+_0}>::<{StdOverloaded.+;}> 0 i_3 StdInt.one_11) g_s_4) (False -> c_a_1) 
lib.write_first_linker_member_128 start_offset_0::I lib_file_offset_1 !member_size_2::I !lib_file_3 !object_file_members_4 !object_file_member_a_5 = let !lib_file_1_0 = lib.write_archive_member_header_110 "/" member_size_2 lib_file_3, !lib_file_1_1 = lib.fwritei_big_endian_47 (select object_file_members_4::lib._ObjectFileMembers 0) lib_file_1_0, !lib_file_1_2 = lib.write_file_offset_121 start_offset_0 lib_file_1_1 0 object_file_member_a_5, !lib_file_1_3 = lib.write_string_table_122 lib_file_1_2 0 object_file_member_a_5, !lib_file_1_4 = <{lib._c;629;15_152}> (StdInt.isEven_18 member_size_2) lib_file_1_3 in lib_file_1_4
<{lib._c;629;15_152}> !_x_0::B !lib_file_1 = case _x_0 (True -> lib_file_1) (False -> StdFile.fwritec ' ' lib_file_1) 
lib.write_second_linker_member_129 start_offset_0::I !member_size_1::I !lib_file_2 !object_file_members_3 !object_file_member_a_4 = let !lib_file_1_0 = lib.write_archive_member_header_110 "/" member_size_1 lib_file_2, !lib_file_1_1 = StdFile.fwritei (select object_file_members_3::lib._ObjectFileMembers 2) lib_file_1_0, !lib_file_1_2 = lib.write_object_file_offsets_124 start_offset_0 0 lib_file_1_1 object_file_member_a_4, !lib_file_1_3 = StdFile.fwritei (select object_file_members_3::lib._ObjectFileMembers 0) lib_file_1_2, !symbols_1_4 = StdOrdList.sortBy lib.anon_107 (lib.collect_symbols_125 0 _predefined._Nil object_file_member_a_4), !lib_file_1_5 = lib.foldl_108 lib_file_1_3 symbols_1_4, !lib_file_1_6 = lib.foldl_109 lib_file_1_5 symbols_1_4, !lib_file_1_7 = <{lib._c;581;15_153}> (StdInt.isEven_18 member_size_1) lib_file_1_6 in lib_file_1_7
<{lib._c;581;15_153}> !_x_0::B !lib_file_1 = case _x_0 (True -> lib_file_1) (False -> StdFile.fwritec ' ' lib_file_1) 
<{lib.cu;384;61_130}>::I !<{_v+_0}> !c_l_i_1::I !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> <{lib.cu;384;61_130}> <{_v+_0}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) (select <{_v+_0}>::<{StdOverloaded.+;}> 0 i_2 StdInt.one_11) g_s_3) (False -> c_l_i_1) 
<{lib.cu;384;61_131}> !c_a_0 c_i_1::I !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> <{lib.cu;384;61_131}> (lib.update_96 c_a_0 c_i_1 lib.EmptyObjectFileMember) (<{StdInt.+_6}> c_i_1 StdInt.one_11) (<{StdInt.+_6}> i_2 StdInt.one_11) g_s_3) (False -> c_a_0) 
<{lib.cu;384;61_132}>::I !c_l_i_0::I !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> <{lib.cu;384;61_132}> (<{StdInt.+_6}> c_l_i_0 StdInt.one_11) (<{StdInt.+_6}> i_1 StdInt.one_11) g_s_2) (False -> c_l_i_0) 
lib.CreateArchive !archive_name_0 !objects_1 !files_2 = let !_x_1_0 = StdFile.fopen_27 archive_name_0 4 files_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (_predefined._Cons (<{StdString.+++_11}> "could not create " archive_name_0) _predefined._Nil) (select _x_1_0::_Tuple3 2)) (False -> let !lib_file_3_0 = lib.write_archive_header_54 (select _x_1_0::_Tuple3 1), !object_file_members_3_1 = update lib.EmptyObjectFileMembers::lib._ObjectFileMembers [2:StdList.length_47 objects_1], !object_file_offset_3_2::I = 0, !_x_3_3 = lib.ReadObjectFiles objects_1 0 (<{lib.cu;384;61_131}> (lib._createArray_91 (<{lib.cu;384;61_132}> 0 1 (select object_file_members_3_1::lib._ObjectFileMembers 2))) 0 1 (select object_file_members_3_1::lib._ObjectFileMembers 2)) object_file_offset_3_2 object_file_members_3_1 0 "" (select _x_1_0::_Tuple3 2), errors_3_4 = select _x_3_3::_Tuple6 0 in case (StdBool.not (StdList.isEmpty errors_3_4)) (True -> let !_x_5_0 = StdFile.fclose_26 lib_file_3_0 (select _x_3_3::_Tuple6 5) in <{_Tuple2!3}> errors_3_4 (select _x_5_0::_Tuple2 1)) (False -> let !offset_first_linker_member_5_0::I = 8, !s_first_linker_member_5_1::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> 60 4) (<{StdInt.*_9}> 4 (select object_file_members_5_9::lib._ObjectFileMembers 0))) (select object_file_members_5_9::lib._ObjectFileMembers 1), !offset_second_linker_member_5_2::I = <{StdInt.+_6}> offset_first_linker_member_5_0 (<{lib._if;220;17_154}> (StdInt.isEven_18 s_first_linker_member_5_1) s_first_linker_member_5_1), !s_second_linker_member_5_3::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> 60 4) (<{StdInt.*_9}> 4 (select object_file_members_5_9::lib._ObjectFileMembers 2))) 4) (<{StdInt.*_9}> 2 (select object_file_members_5_9::lib._ObjectFileMembers 0))) (select object_file_members_5_9::lib._ObjectFileMembers 1), !offset_longnames_member_5_4::I = <{StdInt.+_6}> offset_second_linker_member_5_2 (<{lib._if;220;17_155}> (StdInt.isEven_18 s_second_linker_member_5_3) s_second_linker_member_5_3), !s_longnames_member_5_5::I = <{StdInt.+_6}> 60 longnames_index_5_11, !start_offset_of_object_members_5_6::I = <{lib._if;427;11_157}> (<{StdInt.==_16}> longnames_index_5_11 0) offset_longnames_member_5_4 longnames_index_5_11, !lib_file_5_7 = lib.write_first_linker_member_128 start_offset_of_object_members_5_6 8 (<{StdInt.-_7}> s_first_linker_member_5_1 60) lib_file_3_0 object_file_members_5_9 object_file_member_a_5_10, !_x_5_8 = StdFile.fposition lib_file_5_7, object_file_members_5_9::I = select _x_3_3::_Tuple6 1, object_file_member_a_5_10 = select _x_3_3::_Tuple6 2, longnames_index_5_11 = select _x_3_3::_Tuple6 3 in case (StdBool.not (<{StdInt.==_16}> (select _x_5_8::_Tuple2 0) offset_second_linker_member_5_2)) (True -> let !_x_7_0 = StdFile.fclose_26 (select _x_5_8::_Tuple2 1) (select _x_3_3::_Tuple6 5) in lib.sabort "(internal error): 1ste linker member, library file out of sync with template" (select _x_7_0::_Tuple2 1)) (False -> let !lib_file_7_0 = lib.write_second_linker_member_129 start_offset_of_object_members_5_6 (<{StdInt.-_7}> s_second_linker_member_5_3 60) (select _x_5_8::_Tuple2 1) object_file_members_5_9 object_file_member_a_5_10, !_x_7_1 = StdFile.fposition lib_file_7_0 in case (StdBool.not (<{StdInt.==_16}> (select _x_7_1::_Tuple2 0) offset_longnames_member_5_4)) (True -> let !_x_9_0 = StdFile.fclose_26 (select _x_7_1::_Tuple2 1) (select _x_3_3::_Tuple6 5) in lib.sabort "(internal error): 2nd linker member, library file out of sync with template" (select _x_9_0::_Tuple2 1)) (False -> let !lib_file_9_0 = lib.write_longnames_member_51 (<{StdInt.-_7}> s_longnames_member_5_5 60) (select _x_7_1::_Tuple2 1) (select _x_3_3::_Tuple6 4), !_x_9_1 = StdFile.fposition lib_file_9_0 in case (StdBool.not (<{StdInt.==_16}> (select _x_9_1::_Tuple2 0) start_offset_of_object_members_5_6)) (True -> let !_x_11_0 = StdFile.fclose_26 (select _x_9_1::_Tuple2 1) (select _x_3_3::_Tuple6 5) in lib.sabort "(internal error): longnames linker member, library file out of sync with template" (select _x_11_0::_Tuple2 1)) (False -> let !_x_11_0 = lib.write_objects_115 0 objects_1 (select _x_9_1::_Tuple2 1) start_offset_of_object_members_5_6 object_file_member_a_5_10 (select _x_3_3::_Tuple6 5), !_x_11_1 = StdFile.fclose_26 (select _x_11_0::_Tuple3 1) (select _x_11_0::_Tuple3 2) in <{_Tuple2!3}> (select _x_11_0::_Tuple3 0) (select _x_11_1::_Tuple2 1)) ) ) ) ) 
<{lib._if;427;11_157}>::I !_x_0::B !offset_longnames_member_1::I longnames_index_2::I = case _x_0 (True -> offset_longnames_member_1) (_ -> <{StdInt.+_6}> (<{StdInt.+_6}> 60 offset_longnames_member_1) (<{lib._if;220;17_156}> (StdInt.isEven_18 longnames_index_2) longnames_index_2))
<{lib._if;220;17_156}>::I !_x_0::B !longnames_index_1::I = case _x_0 (True -> longnames_index_1) (_ -> <{StdInt.+_6}> longnames_index_1 1)
<{lib._if;220;17_155}>::I !_x_0::B !s_second_linker_member_1::I = case _x_0 (True -> s_second_linker_member_1) (_ -> <{StdInt.+_6}> s_second_linker_member_1 1)
<{lib._if;220;17_154}>::I !_x_0::B !s_first_linker_member_1::I = case _x_0 (True -> s_first_linker_member_1) (_ -> <{StdInt.+_6}> s_first_linker_member_1 1)
lib.Error_63 !errors_0 !lib_file_1 !files_2 = <{_Tuple3!7}> errors_0 _predefined._Nil (select (StdFile.fclose_26 lib_file_1 files_2)::_Tuple2 1)
lib.read_archive_header archive_name_0 !lib_file_1 = let _x_1_0 = StdFile.freads lib_file_1 8 in case (<{StdString.==_2}> (select _x_1_0::_Tuple2 0) "!<arch>\n") (True -> _Tuple2 _predefined._Nil (select _x_1_0::_Tuple2 1)) (False -> _Tuple2 (_predefined._Cons (<{StdString.+++_11}> "File '" (<{StdString.+++_11}> archive_name_0 "' is not a valid library file")) _predefined._Nil) (select _x_1_0::_Tuple2 1)) 
lib.CharIndex !s_0 !i_1::I !char_2::C = case (<{StdInt.==_16}> i_1 (_SystemArray.size_20 s_0)) (True -> <{_Tuple2!3}> False (_SystemArray.size_20 s_0)) (False -> case (<{StdInt.<_17}> i_1 (_SystemArray.size_20 s_0)) (True -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_0 i_1) char_2) (True -> <{_Tuple2!3}> True i_1) (False -> lib.CharIndex s_0 (<{StdInt.+_6}> i_1 StdInt.one_11) char_2) ) (False -> StdMisc.abort "CharIndex: index out of range") ) 
lib.strip_spaces_59 !s_0 = let _x_1_0 = lib.CharIndex s_0 0 ' ' in case (StdBool.not (select _x_1_0::_Tuple2 0)) (True -> s_0) (False -> <{StdString.%_10}> s_0 (_Tuple2 0 (<{StdInt.-_7}> (select _x_1_0::_Tuple2 1) 1))) 
lib.get_member_name_56 longnames_0 !archive_member_header_1 = let name_1_0::I = lib.strip_spaces_59 (<{StdString.%_10}> archive_member_header_1 (_Tuple2 0 (<{StdInt.+_6}> 0 16))), _x_1_1 = lib.CharIndex name_1_0 0 '/', i_1_2 = select _x_1_1::_Tuple2 1 in case (<{StdInt.<_17}> 0 i_1_2) (True -> <{StdString.%_10}> name_1_0 (_Tuple2 0 (<{StdInt.-_7}> i_1_2 1))) (False -> <{lib._c;779;19_158}> (_SystemArray.select_19 name_1_0 1) name_1_0 longnames_0) 
<{lib._c;779;19_158}> !_x_0::C name_1 longnames_2 = case _x_0 ('/' -> "//") (' ' -> "/") (_ -> let i_longnames_1_0::I = StdInt.toInt_23 (<{StdString.%_10}> name_1 (_Tuple2 1 (<{StdInt.-_7}> (_SystemArray.size_20 name_1) 1))) in <{StdString.%_10}> longnames_2 (_Tuple2 i_longnames_1_0 (<{StdInt.-_7}> (select (lib.CharIndex longnames_2 i_longnames_1_0 '\0')::_Tuple2 1) 1)))
lib.read_archive_member_header_58 !lib_file_0 !longnames_1 = let !_x_1_0 = StdFile.freads lib_file_0 60, !s_archive_member_1_1::I = StdInt.toInt_23 (lib.strip_spaces_59 (<{StdString.%_10}> archive_member_header_1_2 (_Tuple2 48 (<{StdInt.-_7}> (<{StdInt.+_6}> 48 10) 1)))), archive_member_header_1_2 = select _x_1_0::_Tuple2 0 in <{_Tuple3!6}> (lib.get_member_name_56 longnames_1 archive_member_header_1_2) s_archive_member_1_1 (select _x_1_0::_Tuple2 1)
lib.read_second_linker_member__57 !i_0::I !limit_1::I !member_offsets_a_2 !lib_file_3 = case (<{StdInt.==_16}> i_0 limit_1) (True -> <{_Tuple2!3}> member_offsets_a_2 lib_file_3) (False -> let _x_2_0 = StdFile.freadi lib_file_3 in lib.read_second_linker_member__57 (<{StdInt.+_6}> i_0 StdInt.one_11) limit_1 (_SystemArray.update_13 member_offsets_a_2 i_0 (select _x_2_0::_Tuple3 1)) (select _x_2_0::_Tuple3 2)) 
lib.read_second_linker_member_60 !lib_file_0 !size_1::I = let !_x_1_0 = StdFile.freadi lib_file_0, !_x_1_1 = lib.read_second_linker_member__57 0 n_members_1_3 (_SystemArray.createArray_9 n_members_1_3 0) (select _x_1_0::_Tuple3 2), !_x_1_2 = StdFile.fseek (select _x_1_1::_Tuple2 1) (<{StdInt.-_7}> (<{StdInt.-_7}> size_1 4) (<{StdInt.*_9}> n_members_1_3 4)) 1, n_members_1_3::I = select _x_1_0::_Tuple3 1 in <{_Tuple2!2}> (select _x_1_1::_Tuple2 0) (select _x_1_2::_Tuple2 1)
lib.read_longnames_member_61 !lib_file_0 = let !_x_1_0 = lib.read_archive_member_header_58 lib_file_0 "" in case (StdBool.not (<{StdString.==_2}> (select _x_1_0::_Tuple3 0) "//")) (True -> <{_Tuple2!3}> "" (select _x_1_0::_Tuple3 2)) (False -> StdFile.freads (select _x_1_0::_Tuple3 2) (select _x_1_0::_Tuple3 1)) 
lib.read_member_names_62 !i_0::I !limit_1::I member_offset_a_2 !member_names_3 !longnames_4 !lib_file_5 = case (<{StdInt.==_16}> i_0 limit_1) (True -> <{_Tuple2!3}> member_names_3 lib_file_5) (False -> let _x_2_0 = lib.read_archive_member_header_58 (select (StdFile.fseek lib_file_5 (_SystemArray.select_11 member_offset_a_2 i_0) 0)::_Tuple2 1) longnames_4 in lib.read_member_names_62 (<{StdInt.+_6}> i_0 StdInt.one_11) limit_1 member_offset_a_2 (<{StdList.++}> member_names_3 (_predefined._Cons (select _x_2_0::_Tuple3 0) _predefined._Nil)) longnames_4 (select _x_2_0::_Tuple3 2)) 
lib.OpenArchive !archive_name_0 !files_1 = let _x_1_0 = StdFile.fopen_27 archive_name_0 3 files_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> lib.Error_63 (_predefined._Cons (<{StdString.+++_11}> "could not open " archive_name_0) _predefined._Nil) (select _x_1_0::_Tuple3 1) (select _x_1_0::_Tuple3 2)) (False -> let lib_file_3_0 = select _x_1_0::_Tuple3 1, _x_3_1 = lib.read_archive_header archive_name_0 lib_file_3_0, errors_3_2 = select _x_3_1::_Tuple2 0 in case (StdBool.not (StdList.isEmpty errors_3_2)) (True -> lib.Error_63 errors_3_2 (select _x_3_1::_Tuple2 1) (select _x_1_0::_Tuple3 2)) (False -> let !_x_5_0 = lib.read_archive_member_header_58 (select _x_3_1::_Tuple2 1) "", !_x_5_1 = StdFile.fseek (select _x_5_0::_Tuple3 2) (<{lib._if;220;17_159}> (StdInt.isEven_18 s_archive_member_5_9) s_archive_member_5_9) 1, !_x_5_2 = lib.read_archive_member_header_58 (select _x_5_1::_Tuple2 1) "", !_x_5_3 = lib.read_second_linker_member_60 (select _x_5_2::_Tuple3 2) (<{lib._if;220;17_160}> (StdInt.isEven_18 s_archive_member_5_8) s_archive_member_5_8), !_x_5_4 = lib.read_longnames_member_61 (select _x_5_3::_Tuple2 1), !_x_5_5 = lib.read_member_names_62 0 (_SystemArray.size_12 member_offset_a_5_7) member_offset_a_5_7 _predefined._Nil (select _x_5_4::_Tuple2 0) (select _x_5_4::_Tuple2 1), !_x_5_6 = StdFile.fclose_26 (select _x_5_5::_Tuple2 1) (select _x_1_0::_Tuple3 2), member_offset_a_5_7::I = select _x_5_3::_Tuple2 0, s_archive_member_5_8::I = select _x_5_2::_Tuple3 1, s_archive_member_5_9 = select _x_5_0::_Tuple3 1 in <{_Tuple3!7}> _predefined._Nil (select _x_5_5::_Tuple2 0) (select _x_5_6::_Tuple2 1)) ) 
<{lib._if;220;17_160}>::I !_x_0::B !s_archive_member_1::I = case _x_0 (True -> s_archive_member_1) (_ -> <{StdInt.+_6}> s_archive_member_1 1)
<{lib._if;220;17_159}>::I !_x_0::B !s_archive_member_1::I = case _x_0 (True -> s_archive_member_1) (_ -> <{StdInt.+_6}> s_archive_member_1 1)
lib.getExternalNames file_0 files_1 = let _x_1_0 = lib.read_external_symbol_names_from_xcoff_file file_0 files_1 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple6 0) (select _x_1_0::_Tuple6 3) (select _x_1_0::_Tuple6 4)) (select _x_1_0::_Tuple6 5)
<{lib.TD;Section}> _x_0::B = _predefined._Nil
<{lib.TD;FirstLinkerMember}> _x_0::B = _predefined._Nil
<{lib.TD;ObjectFileMember}> _x_0::B = _predefined._Nil
<{lib.TD;ObjectFileMembers}> _x_0::B = _predefined._Nil


|| Converted Records
:: lib._Section = {!lib.section_segment_n::I, !lib.section_virtual_address::I, !lib.section_size::I, !lib.section_data_offset::I, !lib.section_relocations_offset::I, !lib.section_n_relocations::I, !lib.section_relocations}

:: lib._FirstLinkerMember = {!lib.n_xcoff_symbols::I, !lib.offsets, !lib.string_table}

:: lib._ObjectFileMember = {!lib.xcoff_size::I, !lib.n_external_symbols::I, lib.external_symbols, !lib.s_stringtable::I, !lib.object_file_offset::I, !lib.object_library_name}

:: lib._ObjectFileMembers = {!lib.n_external_symbols::I, !lib.s_stringtable::I, !lib.n_xcoff_objects::I}

