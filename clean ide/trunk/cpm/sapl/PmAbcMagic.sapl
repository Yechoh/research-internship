|| ?module? PmAbcMagic


PmAbcMagic.DefaultABCOptions = PmAbcMagic._ABCOptions False False True False False False False False False False
PmAbcMagic.EmptyABCS = PmAbcMagic._ABCStuff "" (UtilDate._DATE False 0 0 0 0 0 0) (_Tuple5 <{_predefined._!Nil!}> Data.Maybe.Nothing <{_predefined._!Nil!}> <{_predefined._!Nil!}> <{_predefined._!Nil!}>)
PmAbcMagic.AC_Init = PmAbcMagic._ABCCache (_SystemArray.createArray_1 512 PmAbcMagic.EmptyABCS) 0 -1
PmAbcMagic.SubStringToInt::I !acc_0::I !start_1::I !stop_2::I str_3 = case (<{StdInt.<_17}> stop_2 start_1) (True -> acc_0) (False -> let curc_2_0::C = _SystemArray.select_19 str_3 start_1 in case (StdChar.isDigit curc_2_0) (True -> PmAbcMagic.SubStringToInt (<{StdInt.-_7}> (<{StdInt.+_6}> (<{StdInt.*_9}> 10 acc_0) (StdInt.toInt_20 curc_2_0)) (StdInt.toInt_20 '0')) (<{StdInt.+_6}> start_1 StdInt.one_11) stop_2 str_3) (False -> acc_0) ) 
PmAbcMagic.StringToCompilerOptions !start_0::I !end_1::I !opt_2 = PmAbcMagic._ABCOptions (StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 opt_2 (<{StdInt.+_6}> start_0 3)) '1')) (StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 opt_2 (<{StdInt.+_6}> start_0 5)) '1')) (<{StdChar.==_18}> (_SystemArray.select_19 opt_2 (<{StdInt.+_6}> start_0 4)) '1') (<{StdChar.==_18}> (_SystemArray.select_19 opt_2 (<{StdInt.+_6}> start_0 7)) '1') (<{StdChar.==_18}> (_SystemArray.select_19 opt_2 (<{StdInt.+_6}> start_0 6)) '1') (<{StdChar.==_18}> (_SystemArray.select_19 opt_2 (<{StdInt.+_6}> start_0 0)) '1') (StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 opt_2 (<{StdInt.+_6}> start_0 1)) '1')) (PmAbcMagic._f123_123 (<{StdInt.<_17}> (<{StdInt.+_6}> start_0 9) end_1) opt_2 start_0) (PmAbcMagic._f124_124 (<{StdInt.<_17}> (<{StdInt.+_6}> start_0 10) end_1) opt_2 start_0) (PmAbcMagic._f125_125 (<{StdInt.<_17}> (<{StdInt.+_6}> start_0 11) end_1) opt_2 start_0)
PmAbcMagic._f125_125::B !_x_0::B opt_1 start_2::I = case _x_0 (True -> <{StdChar.==_18}> (_SystemArray.select_19 opt_1 (<{StdInt.+_6}> start_2 11)) '1') (_ -> False)
PmAbcMagic._f124_124::B !_x_0::B opt_1 start_2::I = case _x_0 (True -> <{StdChar.==_18}> (_SystemArray.select_19 opt_1 (<{StdInt.+_6}> start_2 10)) '1') (_ -> False)
PmAbcMagic._f123_123::B !_x_0::B opt_1 start_2::I = case _x_0 (True -> <{StdChar.==_18}> (_SystemArray.select_19 opt_1 (<{StdInt.+_6}> start_2 9)) '1') (_ -> False)
PmAbcMagic.ProjectABCFile::B !start_0::I !opt_1 = <{StdChar.==_18}> (_SystemArray.select_19 opt_1 (<{StdInt.+_6}> start_0 2)) '0'
PmAbcMagic.SystemABCFile::B !start_0::I !opt_1 = <{StdChar.==_18}> (_SystemArray.select_19 opt_1 (<{StdInt.+_6}> start_0 8)) '1'
PmAbcMagic.SkipSpaces::I !i_0::I !len_1::I !str_2 = case (case (StdBool.not (<{StdInt.<_17}> i_0 len_1)) (True -> True) (False -> StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 str_2 i_0) ' ')) ) (True -> i_0) (False -> PmAbcMagic.SkipSpaces (<{StdInt.+_6}> i_0 StdInt.one_11) len_1 str_2) 
PmAbcMagic.MatchS2_42::B !patpos_0::I !strpos_1::I !patlen_2::I !pat_3 !str_4 = case (StdBool.not (<{StdInt.<_17}> patpos_0 patlen_2)) (True -> True) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 pat_3 patpos_0) (_SystemArray.select_19 str_4 strpos_1)) (True -> PmAbcMagic.MatchS2_42 (<{StdInt.+_6}> patpos_0 StdInt.one_11) (<{StdInt.+_6}> strpos_1 StdInt.one_11) patlen_2 pat_3 str_4) (False -> False) ) 
PmAbcMagic.MatchS::I !start_0::I !stop_1::I !patlen_2::I !strlen_3::I !pat_4 !str_5 = case (StdBool.not (<{StdInt.<_17}> stop_1 strlen_3)) (True -> stop_1) (False -> case (PmAbcMagic.MatchS2_42 0 start_0 patlen_2 pat_4 str_5) (True -> <{StdInt.+_6}> stop_1 StdInt.one_11) (False -> PmAbcMagic.MatchS (<{StdInt.+_6}> start_0 StdInt.one_11) (<{StdInt.+_6}> stop_1 StdInt.one_11) patlen_2 strlen_3 pat_4 str_5) ) 
PmAbcMagic.SkipDigits::I !i_0::I !len_1::I !str_2 = case (case (StdBool.not (<{StdInt.<_17}> i_0 len_1)) (True -> True) (False -> let c_2_0::C = _SystemArray.select_19 str_2 i_0 in case (<{StdChar.<_19}> c_2_0 '0') (True -> True) (False -> <{StdChar.<_19}> '9' c_2_0) ) ) (True -> i_0) (False -> PmAbcMagic.SkipDigits (<{StdInt.+_6}> i_0 StdInt.one_11) len_1 str_2) 
PmAbcMagic.SkipBits::I !i_0::I !len_1::I !str_2 = case (case (StdBool.not (<{StdInt.<_17}> i_0 len_1)) (True -> True) (False -> let c_2_0::C = _SystemArray.select_19 str_2 i_0 in case (StdBool.not (<{StdChar.==_18}> c_2_0 '0')) (True -> StdBool.not (<{StdChar.==_18}> c_2_0 '1')) (False -> False) ) ) (True -> i_0) (False -> PmAbcMagic.SkipBits (<{StdInt.+_6}> i_0 StdInt.one_11) len_1 str_2) 
PmAbcMagic.Find_Version_and_Options_27 !str_0 = let len_str_1_0::I = _SystemArray.size_20 str_0, start_1_1::I = PmAbcMagic.SkipSpaces 0 len_str_1_0 str_0 in case (<{StdInt.<_17}> (PmAbcMagic.MatchS start_1_1 (<{StdInt.+_6}> start_1_1 7) 8 len_str_1_0 ".endinfo" str_0) len_str_1_0) (True -> <{_Tuple5!31}> True False False -1 PmAbcMagic.DefaultABCOptions) (False -> let stop_comp_3_0::I = <{StdInt.+_6}> start_1_1 4, match_comp_3_1::I = PmAbcMagic.MatchS start_1_1 stop_comp_3_0 5 len_str_1_0 ".comp" str_0, <{start`_3_2}>::I = PmAbcMagic.SkipSpaces match_comp_3_1 len_str_1_0 str_0, match_version_3_3::I = PmAbcMagic.SkipDigits <{start`_3_2}> len_str_1_0 str_0, <{start``_3_4}>::I = PmAbcMagic.SkipSpaces match_version_3_3 len_str_1_0 str_0, match_options_3_5::I = PmAbcMagic.SkipBits <{start``_3_4}> len_str_1_0 str_0 in case (<{StdInt.<_17}> (<{StdInt.-_7}> match_options_3_5 <{start``_3_4}>) 9) (True -> <{_Tuple5!31}> True False False -1 PmAbcMagic.DefaultABCOptions) (False -> <{_Tuple5!31}> True (PmAbcMagic.SystemABCFile <{start``_3_4}> str_0) (PmAbcMagic.ProjectABCFile <{start``_3_4}> str_0) (PmAbcMagic.SubStringToInt 0 <{start`_3_2}> (<{StdInt.-_7}> match_version_3_3 StdInt.one_11) str_0) (PmAbcMagic.StringToCompilerOptions <{start``_3_4}> match_options_3_5 str_0)) ) 
PmAbcMagic.Read_Version_and_Options !file_0 = let _x_1_0 = StdFile.fend file_0 in case (select _x_1_0::_Tuple2 0) (True -> <{_Tuple2!3}> (select _x_1_0::_Tuple2 1) (_Tuple4 False False -1 PmAbcMagic.DefaultABCOptions)) (False -> let file_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = UtilNewlinesFile.readAnyLine file_3_0, _x_3_2 = _Tuple2 (select _x_3_1::_Tuple3 1) (select _x_3_1::_Tuple3 2), str_3_3 = select _x_3_2::_Tuple2 0, _x_3_4 = PmAbcMagic.Find_Version_and_Options_27 str_3_3 in case (select _x_3_4::_Tuple5 0) (True -> <{_Tuple2!3}> (select _x_3_2::_Tuple2 1) (_Tuple4 (select _x_3_4::_Tuple5 1) (select _x_3_4::_Tuple5 2) (select _x_3_4::_Tuple5 3) (select _x_3_4::_Tuple5 4))) (False -> PmAbcMagic.Read_Version_and_Options (select _x_3_2::_Tuple2 1)) ) 
PmAbcMagic.dummyDepInfo = _Tuple5 <{_predefined._!Nil!}> Data.Maybe.Nothing <{_predefined._!Nil!}> <{_predefined._!Nil!}> <{_predefined._!Nil!}>
PmAbcMagic.S2DT !s_0 = <{_Tuple2!3}> (StdLibMisc._Date (StdInt.toInt_23 (<{StdString.%_10}> s_0 (_Tuple2 0 3))) (StdInt.toInt_23 (<{StdString.%_10}> s_0 (_Tuple2 4 5))) (StdInt.toInt_23 (<{StdString.%_10}> s_0 (_Tuple2 6 7))) 0) (StdLibMisc._Time (StdInt.toInt_23 (<{StdString.%_10}> s_0 (_Tuple2 8 9))) (StdInt.toInt_23 (<{StdString.%_10}> s_0 (_Tuple2 10 11))) (StdInt.toInt_23 (<{StdString.%_10}> s_0 (_Tuple2 12 13))))
PmAbcMagic.FindChar::I !c_0::C !line_1 !linelen_2::I !pos_3::I = case (StdBool.not (<{StdInt.<_17}> pos_3 linelen_2)) (True -> pos_3) (False -> case (<{StdChar.==_18}> c_0 (_SystemArray.select_19 line_1 pos_3)) (True -> pos_3) (False -> PmAbcMagic.FindChar c_0 line_1 linelen_2 (<{StdInt.+_6}> pos_3 StdInt.one_11)) ) 
PmAbcMagic.characters_between_apostrophes !after_keyword_pos_0::I !len_str_1::I !str_2 = let first_q_1_0::I = PmAbcMagic.FindChar '\"' str_2 len_str_1 (PmAbcMagic.SkipSpaces after_keyword_pos_0 len_str_1 str_2), last_q_1_1::I = PmAbcMagic.FindChar '\"' str_2 len_str_1 (<{StdInt.+_6}> first_q_1_0 StdInt.one_11) in <{_Tuple2!3}> last_q_1_1 (<{StdString.%_10}> str_2 (_Tuple2 (<{StdInt.+_6}> first_q_1_0 StdInt.one_11) (<{StdInt.-_7}> last_q_1_1 StdInt.one_11)))
PmAbcMagic.Parse_line_32 !str_0 !_x_1 = case _x_1 (_Tuple5 modnames_1_0 mmoddate_1_1 depdates_1_2 objnames_1_3 libnames_1_4 -> let len_str_2_0::I = _SystemArray.size_20 str_0, start_2_1::I = PmAbcMagic.SkipSpaces 0 len_str_2_0 str_0 in case (<{StdInt.<_17}> (PmAbcMagic.MatchS start_2_1 (<{StdInt.+_6}> start_2_1 7) 8 len_str_2_0 ".endinfo" str_0) len_str_2_0) (True -> <{_Tuple2!3}> (_Tuple5 modnames_1_0 mmoddate_1_1 depdates_1_2 objnames_1_3 libnames_1_4) True) (False -> let startplussix_4_0 = <{StdInt.+_6}> start_2_1 6, match_depend_4_1::I = PmAbcMagic.MatchS start_2_1 startplussix_4_0 7 len_str_2_0 ".depend" str_0, _x_4_2 = PmAbcMagic.characters_between_apostrophes match_depend_4_1 len_str_2_0 str_0, last_q_depend_4_3::I = select _x_4_2::_Tuple2 0, _x_4_4::I = PmAbcMagic.characters_between_apostrophes (<{StdInt.+_6}> last_q_depend_4_3 StdInt.one_11) len_str_2_0 str_0 in case (case (<{StdInt.<_17}> match_depend_4_1 len_str_2_0) (True -> <{StdInt.<_17}> (select _x_4_4::_Tuple2 0) len_str_2_0) (False -> False) ) (True -> <{_Tuple2!3}> (_Tuple5 (<{_predefined._!Cons!}> (select _x_4_2::_Tuple2 1) modnames_1_0) mmoddate_1_1 (<{_predefined._!Cons!}> (PmAbcMagic.S2DT (select _x_4_4::_Tuple2 1)) depdates_1_2) objnames_1_3 libnames_1_4) False) (False -> case (case (<{StdInt.<_17}> match_depend_4_1 len_str_2_0) (True -> <{StdInt.<_17}> last_q_depend_4_3 len_str_2_0) (False -> False) ) (True -> <{_Tuple2!3}> (_Tuple5 (<{_predefined._!Cons!}> (select _x_4_2::_Tuple2 1) modnames_1_0) mmoddate_1_1 (<{_predefined._!Cons!}> (_Tuple2 (StdLibMisc._Date 0 0 0 0) (StdLibMisc._Time 0 0 0)) depdates_1_2) objnames_1_3 libnames_1_4) False) (False -> let match_impobj_7_0 = PmAbcMagic.MatchS start_2_1 startplussix_4_0 7 len_str_2_0 ".impobj" str_0, _x_7_1::I = PmAbcMagic.characters_between_apostrophes match_impobj_7_0 len_str_2_0 str_0 in case (case (<{StdInt.<_17}> match_impobj_7_0 len_str_2_0) (True -> <{StdInt.<_17}> (select _x_7_1::_Tuple2 0) len_str_2_0) (False -> False) ) (True -> <{_Tuple2!3}> (_Tuple5 modnames_1_0 mmoddate_1_1 depdates_1_2 (<{_predefined._!Cons!}> (select _x_7_1::_Tuple2 1) objnames_1_3) libnames_1_4) False) (False -> let match_implib_9_0 = PmAbcMagic.MatchS start_2_1 startplussix_4_0 7 len_str_2_0 ".implib" str_0, _x_9_1::I = PmAbcMagic.characters_between_apostrophes match_implib_9_0 len_str_2_0 str_0 in case (case (<{StdInt.<_17}> match_implib_9_0 len_str_2_0) (True -> <{StdInt.<_17}> (select _x_9_1::_Tuple2 0) len_str_2_0) (False -> False) ) (True -> <{_Tuple2!3}> (_Tuple5 modnames_1_0 mmoddate_1_1 depdates_1_2 objnames_1_3 (<{_predefined._!Cons!}> (select _x_9_1::_Tuple2 1) libnames_1_4)) False) (False -> let match_module_11_0 = PmAbcMagic.MatchS start_2_1 startplussix_4_0 7 len_str_2_0 ".module" str_0, _x_11_1::I = PmAbcMagic.characters_between_apostrophes match_module_11_0 len_str_2_0 str_0, last_q_modname_11_2 = select _x_11_1::_Tuple2 0, _x_11_3::I = PmAbcMagic.characters_between_apostrophes (<{StdInt.+_6}> last_q_modname_11_2 StdInt.one_11) len_str_2_0 str_0 in case (case (<{StdInt.<_17}> match_module_11_0 len_str_2_0) (True -> <{StdInt.<_17}> (select _x_11_3::_Tuple2 0) len_str_2_0) (False -> False) ) (True -> let !moddate_13_0 = PmAbcMagic.S2DT (select _x_11_3::_Tuple2 1) in <{_Tuple2!3}> (_Tuple5 modnames_1_0 (Data.Maybe.Just moddate_13_0) depdates_1_2 objnames_1_3 libnames_1_4) False) (False -> <{_Tuple2!3}> (_Tuple5 modnames_1_0 mmoddate_1_1 depdates_1_2 objnames_1_3 libnames_1_4) False) ) ) ) ) ) ) 
PmAbcMagic.Parse_lines_31 !file_0 !dep_1 = let _x_1_0 = StdFile.fend file_0 in case (select _x_1_0::_Tuple2 0) (True -> <{_Tuple2!3}> (select _x_1_0::_Tuple2 1) dep_1) (False -> let file_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = UtilNewlinesFile.readAnyLine file_3_0, _x_3_2 = _Tuple2 (select _x_3_1::_Tuple3 1) (select _x_3_1::_Tuple3 2), line_3_3 = select _x_3_2::_Tuple2 0, _x_3_4 = PmAbcMagic.Parse_line_32 line_3_3 dep_1 in case (select _x_3_4::_Tuple2 1) (True -> <{_Tuple2!3}> (select _x_3_2::_Tuple2 1) (select _x_3_4::_Tuple2 0)) (False -> PmAbcMagic.Parse_lines_31 (select _x_3_2::_Tuple2 1) (select _x_3_4::_Tuple2 0)) ) 
PmAbcMagic.ParseABCDependencies !file_0 = PmAbcMagic.Parse_lines_31 file_0 PmAbcMagic.dummyDepInfo
PmAbcMagic.search_path_in_cache !path_0 !n_1::I !c_2 = case (<{StdInt.<_17}> n_1 0) (True -> <{_Tuple2!3}> -1 c_2) (False -> case (<{StdString.==_2}> (select (_SystemArray.select_3 (select c_2::PmAbcMagic._ABCCache 0) n_1)::PmAbcMagic._ABCStuff 0) path_0) (True -> <{_Tuple2!3}> n_1 c_2) (False -> PmAbcMagic.search_path_in_cache path_0 (<{StdInt.-_7}> n_1 StdInt.one_11) c_2) ) 
PmAbcMagic.newstuff_28 !info_0 !date_1 !path_2 = PmAbcMagic._ABCStuff path_2 date_1 info_0
PmAbcMagic.AC_Add !path_0 !date_1 !info_2 !abccache_3 = let !c_1_0 = select abccache_3::PmAbcMagic._ABCCache 0, !i_1_1::I = select abccache_3::PmAbcMagic._ABCCache 1, !m_1_2::I = select abccache_3::PmAbcMagic._ABCCache 2, !c_1_3 = _SystemArray.update_5 c_1_0 i_1_1 (PmAbcMagic.newstuff_28 info_2 date_1 path_0) in update abccache_3::PmAbcMagic._ABCCache [0:c_1_3,1:StdInt.rem_28 (<{StdInt.+_6}> i_1_1 StdInt.one_11) 512,2:<{PmAbcMagic._if;239;18_126}> (<{StdInt.<_17}> m_1_2 (<{StdInt.-_7}> 512 StdInt.one_11)) i_1_1 m_1_2]
<{PmAbcMagic._if;239;18_126}>::I !_x_0::B i_1::I m_2::I = case _x_0 (True -> i_1) (_ -> m_2)
PmAbcMagic.ParseABCInfoAndDependencies !path_0 !date_1 !abccache_2 !files_3 = let _x_1_0 = StdFile.fopen_27 path_0 3 files_3 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> <{_Tuple2!3}> (_Tuple3 (_Tuple4 False False -1 PmAbcMagic.DefaultABCOptions) PmAbcMagic.dummyDepInfo abccache_2) (select _x_1_0::_Tuple3 2)) (False -> let !maxi_3_0::I = select abccache_2::PmAbcMagic._ABCCache 2, _x_3_1::I = PmAbcMagic.search_path_in_cache path_0 maxi_3_0 abccache_2, cache_index_3_2 = select _x_3_1::_Tuple2 0 in case (<{StdInt.<_17}> cache_index_3_2 0) (True -> let !abccache_5_0 = PmAbcMagic.AC_Add path_0 date_1 d_5_3 (select _x_3_1::_Tuple2 1), _x_5_1 = PmAbcMagic.Read_Version_and_Options (select _x_1_0::_Tuple3 1), _x_5_2 = PmAbcMagic.ParseABCDependencies (select _x_5_1::_Tuple2 0), d_5_3 = select _x_5_2::_Tuple2 1 in <{_Tuple2!3}> (_Tuple3 (select _x_5_1::_Tuple2 1) d_5_3 abccache_5_0) (select (StdFile.fclose_26 (select _x_5_2::_Tuple2 0) (select _x_1_0::_Tuple3 2))::_Tuple2 1)) (False -> let !abccache_5_0 = update abccache_5_4::PmAbcMagic._ABCCache [0:_SystemArray.update_5 (select abccache_5_4::PmAbcMagic._ABCCache 0) cache_index_3_2 (PmAbcMagic._ABCStuff path_0 date_1 d_5_3)], _x_5_1 = PmAbcMagic.Read_Version_and_Options (select _x_1_0::_Tuple3 1), _x_5_2 = PmAbcMagic.ParseABCDependencies (select _x_5_1::_Tuple2 0), d_5_3 = select _x_5_2::_Tuple2 1, abccache_5_4 = select _x_3_1::_Tuple2 1 in <{_Tuple2!3}> (_Tuple3 (select _x_5_1::_Tuple2 1) d_5_3 abccache_5_0) (select (StdFile.fclose_26 (select _x_5_2::_Tuple2 0) (select _x_1_0::_Tuple3 2))::_Tuple2 1)) ) 
PmAbcMagic.GetABCCompiledInfo !update_0::B !path_1 !cache_2 !files_3 = case (case (StdBool.not update_0) (True -> False) (False -> False) ) (True -> <{_Tuple2!2}> (_Tuple5 False False -1 PmAbcMagic.DefaultABCOptions cache_2) files_3) (False -> let _x_2_0 = StdFile.fopen_27 path_1 3 files_3 in case (StdBool.not (select _x_2_0::_Tuple3 0)) (True -> <{_Tuple2!2}> (_Tuple5 False False -1 PmAbcMagic.DefaultABCOptions cache_2) (select _x_2_0::_Tuple3 2)) (False -> let _x_4_0 = PmAbcMagic.Read_Version_and_Options (select _x_2_0::_Tuple3 1), _x_4_1 = select _x_4_0::_Tuple2 1 in <{_Tuple2!2}> (_Tuple5 (select _x_4_1::_Tuple4 0) (select _x_4_1::_Tuple4 1) (select _x_4_1::_Tuple4 2) (select _x_4_1::_Tuple4 3) cache_2) (select (StdFile.fclose_26 (select _x_4_0::_Tuple2 0) (select _x_2_0::_Tuple3 2))::_Tuple2 1)) ) 
PmAbcMagic.eqDate_30::B !l_0 !r_1 = case (<{StdBool.==_3}> (select l_0::UtilDate._DATE 0) (select r_1::UtilDate._DATE 0)) (True -> case (<{StdInt.==_16}> (select l_0::UtilDate._DATE 1) (select r_1::UtilDate._DATE 1)) (True -> case (<{StdInt.==_16}> (select l_0::UtilDate._DATE 2) (select r_1::UtilDate._DATE 2)) (True -> case (<{StdInt.==_16}> (select l_0::UtilDate._DATE 3) (select r_1::UtilDate._DATE 3)) (True -> case (<{StdInt.==_16}> (select l_0::UtilDate._DATE 4) (select r_1::UtilDate._DATE 4)) (True -> case (<{StdInt.==_16}> (select l_0::UtilDate._DATE 5) (select r_1::UtilDate._DATE 5)) (True -> <{StdInt.==_16}> (select l_0::UtilDate._DATE 6) (select r_1::UtilDate._DATE 6)) (False -> False) ) (False -> False) ) (False -> False) ) (False -> False) ) (False -> False) ) (False -> False) 
PmAbcMagic.AC_Look_29 !_vFileSystem_0 abcdate_1 !path_2 !abccache_3 files_4 = case abccache_3 (PmAbcMagic._ABCCache cache_1_0 curi_1_1 maxi_1_2 -> let _x_2_0::I = PmAbcMagic.search_path_in_cache path_2 maxi_1_2 abccache_3, cache_index_2_1 = select _x_2_0::_Tuple2 0 in case (<{StdInt.<_17}> cache_index_2_1 0) (True -> let _x_4_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 1 path_2 3 files_4 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> let _x_6_0 = PmAbcMagic.dummyDepInfo in _Tuple2 (_Tuple7 False (select _x_6_0::_Tuple5 0) (select _x_6_0::_Tuple5 1) (select _x_6_0::_Tuple5 2) (select _x_6_0::_Tuple5 3) (select _x_6_0::_Tuple5 4) (select _x_2_0::_Tuple2 1)) (select _x_4_0::_Tuple3 2)) (False -> let !abccache_6_0 = PmAbcMagic.AC_Add path_2 abcdate_1 (_Tuple5 b_6_3 c_6_4 d_6_5 e_6_6 f_6_7) (select _x_2_0::_Tuple2 1), _x_6_1 = PmAbcMagic.ParseABCDependencies (select _x_4_0::_Tuple3 1), _x_6_2 = select _x_6_1::_Tuple2 1, b_6_3 = select _x_6_2::_Tuple5 0, c_6_4 = select _x_6_2::_Tuple5 1, d_6_5 = select _x_6_2::_Tuple5 2, e_6_6 = select _x_6_2::_Tuple5 3, f_6_7 = select _x_6_2::_Tuple5 4 in _Tuple2 (_Tuple7 True b_6_3 c_6_4 d_6_5 e_6_6 f_6_7 abccache_6_0) (select (select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (select _x_6_1::_Tuple2 0) (select _x_4_0::_Tuple3 2))::_Tuple2 1)) ) (False -> let abccache_4_0 = select _x_2_0::_Tuple2 1, _x_4_1 = _SystemArray.select_3 (select abccache_4_0::PmAbcMagic._ABCCache 0) cache_index_2_1, _x_4_2 = select _x_4_1::_Tuple2 0 in case (PmAbcMagic.eqDate_30 (select _x_4_2::PmAbcMagic._ABCStuff 1) abcdate_1) (True -> let c_info_6_0 = select _x_4_2::PmAbcMagic._ABCStuff 2 in _Tuple2 (_Tuple7 True (select c_info_6_0::_Tuple5 0) (select c_info_6_0::_Tuple5 1) (select c_info_6_0::_Tuple5 2) (select c_info_6_0::_Tuple5 3) (select c_info_6_0::_Tuple5 4) (select _x_4_1::_Tuple2 1)) files_4) (False -> let _x_6_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 1 path_2 3 files_4 in case (StdBool.not (select _x_6_0::_Tuple3 0)) (True -> let _x_8_0 = PmAbcMagic.dummyDepInfo in _Tuple2 (_Tuple7 False (select _x_8_0::_Tuple5 0) (select _x_8_0::_Tuple5 1) (select _x_8_0::_Tuple5 2) (select _x_8_0::_Tuple5 3) (select _x_8_0::_Tuple5 4) (select _x_4_1::_Tuple2 1)) (select _x_6_0::_Tuple3 2)) (False -> let !abccache_8_0 = update abccache_8_8::PmAbcMagic._ABCCache [0:_SystemArray.update_5 (select abccache_8_8::PmAbcMagic._ABCCache 0) cache_index_2_1 (PmAbcMagic._ABCStuff path_2 abcdate_1 (_Tuple5 b_8_3 c_8_4 d_8_5 e_8_6 f_8_7))], _x_8_1 = PmAbcMagic.ParseABCDependencies (select _x_6_0::_Tuple3 1), _x_8_2 = select _x_8_1::_Tuple2 1, b_8_3 = select _x_8_2::_Tuple5 0, c_8_4 = select _x_8_2::_Tuple5 1, d_8_5 = select _x_8_2::_Tuple5 2, e_8_6 = select _x_8_2::_Tuple5 3, f_8_7 = select _x_8_2::_Tuple5 4, abccache_8_8 = select _x_4_1::_Tuple2 1 in _Tuple2 (_Tuple7 True b_8_3 c_8_4 d_8_5 e_8_6 f_8_7 abccache_8_0) (select (select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (select _x_8_1::_Tuple2 0) (select _x_6_0::_Tuple3 2))::_Tuple2 1)) ) ) ) 
PmAbcMagic.AC_Look_105 abcdate_0 !path_1 !abccache_2 files_3 = case abccache_2 (PmAbcMagic._ABCCache cache_1_0 curi_1_1 maxi_1_2 -> let _x_2_0::I = PmAbcMagic.search_path_in_cache path_1 maxi_1_2 abccache_2, cache_index_2_1 = select _x_2_0::_Tuple2 0 in case (<{StdInt.<_17}> cache_index_2_1 0) (True -> let _x_4_0 = StdFile.fopen_27 path_1 3 files_3 in case (StdBool.not (select _x_4_0::_Tuple3 0)) (True -> let _x_6_0 = PmAbcMagic.dummyDepInfo in _Tuple2 (_Tuple7 False (select _x_6_0::_Tuple5 0) (select _x_6_0::_Tuple5 1) (select _x_6_0::_Tuple5 2) (select _x_6_0::_Tuple5 3) (select _x_6_0::_Tuple5 4) (select _x_2_0::_Tuple2 1)) (select _x_4_0::_Tuple3 2)) (False -> let !abccache_6_0 = PmAbcMagic.AC_Add path_1 abcdate_0 (_Tuple5 b_6_3 c_6_4 d_6_5 e_6_6 f_6_7) (select _x_2_0::_Tuple2 1), _x_6_1 = PmAbcMagic.ParseABCDependencies (select _x_4_0::_Tuple3 1), _x_6_2 = select _x_6_1::_Tuple2 1, b_6_3 = select _x_6_2::_Tuple5 0, c_6_4 = select _x_6_2::_Tuple5 1, d_6_5 = select _x_6_2::_Tuple5 2, e_6_6 = select _x_6_2::_Tuple5 3, f_6_7 = select _x_6_2::_Tuple5 4 in _Tuple2 (_Tuple7 True b_6_3 c_6_4 d_6_5 e_6_6 f_6_7 abccache_6_0) (select (StdFile.fclose_26 (select _x_6_1::_Tuple2 0) (select _x_4_0::_Tuple3 2))::_Tuple2 1)) ) (False -> let abccache_4_0 = select _x_2_0::_Tuple2 1, _x_4_1 = _SystemArray.select_3 (select abccache_4_0::PmAbcMagic._ABCCache 0) cache_index_2_1, _x_4_2 = select _x_4_1::_Tuple2 0 in case (PmAbcMagic.eqDate_30 (select _x_4_2::PmAbcMagic._ABCStuff 1) abcdate_0) (True -> let c_info_6_0 = select _x_4_2::PmAbcMagic._ABCStuff 2 in _Tuple2 (_Tuple7 True (select c_info_6_0::_Tuple5 0) (select c_info_6_0::_Tuple5 1) (select c_info_6_0::_Tuple5 2) (select c_info_6_0::_Tuple5 3) (select c_info_6_0::_Tuple5 4) (select _x_4_1::_Tuple2 1)) files_3) (False -> let _x_6_0 = StdFile.fopen_27 path_1 3 files_3 in case (StdBool.not (select _x_6_0::_Tuple3 0)) (True -> let _x_8_0 = PmAbcMagic.dummyDepInfo in _Tuple2 (_Tuple7 False (select _x_8_0::_Tuple5 0) (select _x_8_0::_Tuple5 1) (select _x_8_0::_Tuple5 2) (select _x_8_0::_Tuple5 3) (select _x_8_0::_Tuple5 4) (select _x_4_1::_Tuple2 1)) (select _x_6_0::_Tuple3 2)) (False -> let !abccache_8_0 = update abccache_8_8::PmAbcMagic._ABCCache [0:_SystemArray.update_5 (select abccache_8_8::PmAbcMagic._ABCCache 0) cache_index_2_1 (PmAbcMagic._ABCStuff path_1 abcdate_0 (_Tuple5 b_8_3 c_8_4 d_8_5 e_8_6 f_8_7))], _x_8_1 = PmAbcMagic.ParseABCDependencies (select _x_6_0::_Tuple3 1), _x_8_2 = select _x_8_1::_Tuple2 1, b_8_3 = select _x_8_2::_Tuple5 0, c_8_4 = select _x_8_2::_Tuple5 1, d_8_5 = select _x_8_2::_Tuple5 2, e_8_6 = select _x_8_2::_Tuple5 3, f_8_7 = select _x_8_2::_Tuple5 4, abccache_8_8 = select _x_4_1::_Tuple2 1 in _Tuple2 (_Tuple7 True b_8_3 c_8_4 d_8_5 e_8_6 f_8_7 abccache_8_0) (select (StdFile.fclose_26 (select _x_8_1::_Tuple2 0) (select _x_6_0::_Tuple3 2))::_Tuple2 1)) ) ) ) 
<{PmAbcMagic.ParseABCDependencies`}> !path_0 !abcdate_1 !abccache_2 !files_3 = PmAbcMagic.AC_Look_105 abcdate_1 path_0 abccache_2 files_3
PmAbcMagic.offset_37::I !string_0 !versionSize_1::I !versionString_2 !stringLength_3::I = let init_offset_1_0::I = PmAbcMagic.SkipSpaces 0 stringLength_3 string_0, next_offset_1_1::I = PmAbcMagic.SkipSpaces (PmAbcMagic.MatchS init_offset_1_0 (<{StdInt.+_6}> init_offset_1_0 4) 5 stringLength_3 ".comp" string_0) stringLength_3 string_0 in PmAbcMagic.SkipSpaces (PmAbcMagic.MatchS next_offset_1_1 (<{StdInt.-_7}> (<{StdInt.+_6}> next_offset_1_1 versionSize_1) 1) versionSize_1 stringLength_3 versionString_2 string_0) stringLength_3 string_0
PmAbcMagic.findOptionStringOffset_41 !_vtoString_0 version_1 string_2 = let versionString_1_0::I = select _vtoString_0::<{StdOverloaded.toString;}> 0 version_1, versionSize_1_1::I = _SystemArray.size_20 versionString_1_0, stringLength_1_2 = _SystemArray.size_20 string_2 in _Tuple2 (<{StdInt.<_17}> (<{StdInt.+_6}> (PmAbcMagic.offset_37 string_2 versionSize_1_1 versionString_1_0 stringLength_1_2) 9) stringLength_1_2) (PmAbcMagic.offset_37 string_2 versionSize_1_1 versionString_1_0 stringLength_1_2)
<{PmAbcMagic.cu;466;17_36}> !_vArray_0 !_vArray_1 c_a_2 !c_i_3::I !g_s_4::I g_a_5 = case (StdBool.not (<{StdInt.<_17}> g_s_4 c_i_3)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = select _vArray_0::<{_SystemArray.Array;}> 6 g_a_5 c_i_3 in <{PmAbcMagic.cu;466;17_36}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_s_4 g_a_2_0) (False -> c_a_2) 
PmAbcMagic.copy_40 !_vArray_0 !_vArray_1 array_2 = let _x_1_0::I = select _vArray_0::<{_SystemArray.Array;}> 7 array_2, g_s2_1_1 = <{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1 in <{PmAbcMagic.cu;466;17_36}> _vArray_0 _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (select _x_1_0::_Tuple2 1)
<{PmAbcMagic.cu;466;17_107}> !_vArray_0 c_a_1 !c_i_2::I !g_s_3::I g_a_4 = case (StdBool.not (<{StdInt.<_17}> g_s_3 c_i_2)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_22 g_a_4 c_i_2 in <{PmAbcMagic.cu;466;17_107}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_1 c_i_2 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_s_3 g_a_2_0) (False -> c_a_1) 
PmAbcMagic.copy_106 !_vArray_0 !array_1 = let _x_1_0::I = _SystemArray.usize_23 array_1, g_s2_1_1 = <{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1 in <{PmAbcMagic.cu;466;17_107}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 0 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (select _x_1_0::_Tuple2 1)
<{PmAbcMagic.cu;466;17_109}> !c_a_0 !c_i_1::I !g_s_2::I g_a_3 = case (StdBool.not (<{StdInt.<_17}> g_s_2 c_i_1)) (True -> let !g_a_2_0 = _predefined._dummyForStrictAlias (select _x_2_1::_Tuple2 1), _x_2_1 = _SystemArray.uselect_22 g_a_3 c_i_1 in <{PmAbcMagic.cu;466;17_109}> (_SystemArray.update_21 c_a_0 c_i_1 (select _x_2_1::_Tuple2 0)) (<{StdInt.+_6}> c_i_1 StdInt.one_11) g_s_2 g_a_2_0) (False -> c_a_0) 
PmAbcMagic.copy_108 !array_0 = let _x_1_0::I = _SystemArray.usize_23 array_0, g_s2_1_1 = <{StdInt.-_7}> (select _x_1_0::_Tuple2 0) 1 in <{PmAbcMagic.cu;466;17_109}> (_SystemArray._createArray_16 (<{StdInt.+_6}> g_s2_1_1 StdInt.one_11)) 0 g_s2_1_1 (select _x_1_0::_Tuple2 1)
PmAbcMagic.patchLine_39 !_vtoString_0 version_1 timeProfile_2::B !line_3 = let _x_1_0::B = PmAbcMagic.findOptionStringOffset_41 _vtoString_0 version_1 line_3, found_1_1 = select _x_1_0::_Tuple2 0 in case found_1_1 (True -> _Tuple2 found_1_1 (_SystemArray.update_21 (PmAbcMagic.copy_108 line_3) (<{StdInt.+_6}> (select _x_1_0::_Tuple2 1) 5) (<{PmAbcMagic._if;462;71_127}> timeProfile_2))) (False -> _Tuple2 False line_3) 
<{PmAbcMagic._if;462;71_127}>::C !timeProfile_0::B = case timeProfile_0 (True -> '0') (_ -> '1')
PmAbcMagic.patchFile_38 !_vtoString_0 version_1 timeProfile_2::B abcPath_3 !file_4 = let _x_1_0 = StdFile.freadline file_4, firstLine_1_1 = select _x_1_0::_Tuple2 0, _x_1_2 = PmAbcMagic.patchLine_39 _vtoString_0 version_1 timeProfile_2 firstLine_1_1 in case (StdBool.not (select _x_1_2::_Tuple2 0)) (True -> _Tuple2 False (select _x_1_0::_Tuple2 1)) (False -> let file_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = StdFile.freopen file_3_0 5 in case (StdBool.not (select _x_3_1::_Tuple2 0)) (True -> _Tuple2 False (select _x_3_1::_Tuple2 1)) (False -> let file_5_0 = select _x_3_1::_Tuple2 1, _x_5_1 = StdFile.fseek file_5_0 0 0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> _Tuple2 False (select _x_5_1::_Tuple2 1)) (False -> _Tuple2 True (StdFile.fwrites (select _x_1_2::_Tuple2 1) (select _x_5_1::_Tuple2 1))) ) ) 
PmAbcMagic.findOptionStringOffset_112 version_0::I string_1 = let versionString_1_0::I = StdString.toString_5 version_0, versionSize_1_1::I = _SystemArray.size_20 versionString_1_0, stringLength_1_2 = _SystemArray.size_20 string_1 in _Tuple2 (<{StdInt.<_17}> (<{StdInt.+_6}> (PmAbcMagic.offset_37 string_1 versionSize_1_1 versionString_1_0 stringLength_1_2) 9) stringLength_1_2) (PmAbcMagic.offset_37 string_1 versionSize_1_1 versionString_1_0 stringLength_1_2)
PmAbcMagic.patchLine_111 !version_0::I timeProfile_1::B !line_2 = let _x_1_0::B = PmAbcMagic.findOptionStringOffset_112 version_0 line_2, found_1_1 = select _x_1_0::_Tuple2 0 in case found_1_1 (True -> _Tuple2 found_1_1 (_SystemArray.update_21 (PmAbcMagic.copy_108 line_2) (<{StdInt.+_6}> (select _x_1_0::_Tuple2 1) 5) (<{PmAbcMagic._if;462;71_128}> timeProfile_1))) (False -> _Tuple2 False line_2) 
<{PmAbcMagic._if;462;71_128}>::C !timeProfile_0::B = case timeProfile_0 (True -> '0') (_ -> '1')
PmAbcMagic.patchFile_110 !version_0::I timeProfile_1::B abcPath_2 !file_3 = let _x_1_0 = StdFile.freadline file_3, firstLine_1_1 = select _x_1_0::_Tuple2 0, _x_1_2 = PmAbcMagic.patchLine_111 version_0 timeProfile_1 firstLine_1_1 in case (StdBool.not (select _x_1_2::_Tuple2 0)) (True -> _Tuple2 False (select _x_1_0::_Tuple2 1)) (False -> let file_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = StdFile.freopen file_3_0 5 in case (StdBool.not (select _x_3_1::_Tuple2 0)) (True -> _Tuple2 False (select _x_3_1::_Tuple2 1)) (False -> let file_5_0 = select _x_3_1::_Tuple2 1, _x_5_1 = StdFile.fseek file_5_0 0 0 in case (StdBool.not (select _x_5_1::_Tuple2 0)) (True -> _Tuple2 False (select _x_5_1::_Tuple2 1)) (False -> _Tuple2 True (StdFile.fwrites (select _x_1_2::_Tuple2 1) (select _x_5_1::_Tuple2 1))) ) ) 
PmAbcMagic.PatchSystemABC !version_0::I !doPatch_1::B !abcPath_2 !timeProfile_3::B !files_4 = case (StdBool.not doPatch_1) (True -> <{_Tuple2!3}> True files_4) (False -> let _x_2_0 = StdFile.fopen_27 abcPath_2 3 files_4 in case (StdBool.not (select _x_2_0::_Tuple3 0)) (True -> <{_Tuple2!3}> False (select _x_2_0::_Tuple3 2)) (False -> let file_4_0 = select _x_2_0::_Tuple3 1, _x_4_1 = PmAbcMagic.patchFile_110 version_0 timeProfile_3 abcPath_2 file_4_0, file_4_2 = select _x_4_1::_Tuple2 1, files_4_3 = select _x_2_0::_Tuple3 2, _x_4_4 = StdFile.fclose_26 file_4_2 files_4_3 in <{_Tuple2!3}> (PmAbcMagic._f129_129 (select _x_4_1::_Tuple2 0) _x_4_4) (select _x_4_4::_Tuple2 1)) ) 
PmAbcMagic._f129_129::B !_x_0::B _x_1 = case _x_0 (True -> select _x_1::_Tuple2 0) (_ -> False)
<{PmAbcMagic.cu;404;20_34}> !<{_v<_0}> !_vone_1 !<{_v+_2}> !_vone_3 !<{_v+_4}> c_l_i_5 i_6 g_s_7 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_7 i_6)) (True -> <{PmAbcMagic.cu;404;20_34}> <{_v<_0}> _vone_1 <{_v+_2}> _vone_3 <{_v+_4}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_5 (select _vone_1::<{StdOverloaded.one;}> 0)) (select <{_v+_4}>::<{StdOverloaded.+;}> 0 i_6 (select _vone_3::<{StdOverloaded.one;}> 0)) g_s_7) (False -> c_l_i_5) 
<{PmAbcMagic.cu;404;20_33}> !<{_v<_0}> !_vArray_1 !_vone_2 !<{_v+_3}> c_a_4 c_i_5::I i_6 g_s_7 = case (StdBool.not (select <{_v<_0}>::<{StdOverloaded.<;}> 0 g_s_7 i_6)) (True -> <{PmAbcMagic.cu;404;20_33}> <{_v<_0}> _vArray_1 _vone_2 <{_v+_3}> (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_4 c_i_5 '0') (<{StdInt.+_6}> c_i_5 StdInt.one_11) (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_6 (select _vone_2::<{StdOverloaded.one;}> 0)) g_s_7) (False -> c_a_4) 
<{PmAbcMagic.cu;404;20_113}> !_vone_0 !<{_v+_1}> !_vone_2 !<{_v+_3}> c_l_i_4 !i_5::I !g_s_6::I = case (StdBool.not (<{StdInt.<_17}> g_s_6 i_5)) (True -> <{PmAbcMagic.cu;404;20_113}> _vone_0 <{_v+_1}> _vone_2 <{_v+_3}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_4 (select _vone_0::<{StdOverloaded.one;}> 0)) (select <{_v+_3}>::<{StdOverloaded.+;}> 0 i_5 (select _vone_2::<{StdOverloaded.one;}> 0)) g_s_6) (False -> c_l_i_4) 
<{PmAbcMagic.cu;404;20_114}> !_vArray_0 !_vone_1 !<{_v+_2}> c_a_3 c_i_4::I !i_5::I !g_s_6::I = case (StdBool.not (<{StdInt.<_17}> g_s_6 i_5)) (True -> <{PmAbcMagic.cu;404;20_114}> _vArray_0 _vone_1 <{_v+_2}> (select _vArray_0::<{_SystemArray.Array;}> 5 c_a_3 c_i_4 '0') (<{StdInt.+_6}> c_i_4 StdInt.one_11) (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_5 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_6) (False -> c_a_3) 
<{PmAbcMagic.cu;404;20_115}>::I !<{_v+_0}> !_vone_1 !<{_v+_2}> c_l_i_3::I !i_4::I !g_s_5::I = case (StdBool.not (<{StdInt.<_17}> g_s_5 i_4)) (True -> <{PmAbcMagic.cu;404;20_115}> <{_v+_0}> _vone_1 <{_v+_2}> (select <{_v+_0}>::<{StdOverloaded.+;}> 0 c_l_i_3 StdInt.one_11) (select <{_v+_2}>::<{StdOverloaded.+;}> 0 i_4 (select _vone_1::<{StdOverloaded.one;}> 0)) g_s_5) (False -> c_l_i_3) 
<{PmAbcMagic.cu;404;20_116}> !_vone_0 !<{_v+_1}> !c_a_2 c_i_3::I !i_4::I !g_s_5::I = case (StdBool.not (<{StdInt.<_17}> g_s_5 i_4)) (True -> <{PmAbcMagic.cu;404;20_116}> _vone_0 <{_v+_1}> (_SystemArray.update_21 c_a_2 c_i_3 '0') (<{StdInt.+_6}> c_i_3 StdInt.one_11) (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_4 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_5) (False -> c_a_2) 
<{PmAbcMagic.cu;404;20_117}>::I !_vone_0 !<{_v+_1}> !c_l_i_2::I !i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 i_3)) (True -> <{PmAbcMagic.cu;404;20_117}> _vone_0 <{_v+_1}> (<{StdInt.+_6}> c_l_i_2 StdInt.one_11) (select <{_v+_1}>::<{StdOverloaded.+;}> 0 i_3 (select _vone_0::<{StdOverloaded.one;}> 0)) g_s_4) (False -> c_l_i_2) 
<{PmAbcMagic.cu;404;20_118}> !<{_v+_0}> !c_a_1 c_i_2::I !i_3::I !g_s_4::I = case (StdBool.not (<{StdInt.<_17}> g_s_4 i_3)) (True -> <{PmAbcMagic.cu;404;20_118}> <{_v+_0}> (_SystemArray.update_21 c_a_1 c_i_2 '0') (<{StdInt.+_6}> c_i_2 StdInt.one_11) (select <{_v+_0}>::<{StdOverloaded.+;}> 0 i_3 StdInt.one_11) g_s_4) (False -> c_a_1) 
<{PmAbcMagic.cu;404;20_119}>::I !<{_v+_0}> !c_l_i_1::I !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> <{PmAbcMagic.cu;404;20_119}> <{_v+_0}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) (select <{_v+_0}>::<{StdOverloaded.+;}> 0 i_2 StdInt.one_11) g_s_3) (False -> c_l_i_1) 
<{PmAbcMagic.cu;404;20_120}> !c_a_0 c_i_1::I !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> <{PmAbcMagic.cu;404;20_120}> (_SystemArray.update_21 c_a_0 c_i_1 '0') (<{StdInt.+_6}> c_i_1 StdInt.one_11) (<{StdInt.+_6}> i_2 StdInt.one_11) g_s_3) (False -> c_a_0) 
<{PmAbcMagic.cu;404;20_121}>::I !c_l_i_0::I !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> <{PmAbcMagic.cu;404;20_121}> (<{StdInt.+_6}> c_l_i_0 StdInt.one_11) (<{StdInt.+_6}> i_1 StdInt.one_11) g_s_2) (False -> c_l_i_0) 
PmAbcMagic.pad_35 !_vtoString_0 !n_1::I x_2 = let s_1_0::I = select _vtoString_0::<{StdOverloaded.toString;}> 0 x_2, l_1_1 = _SystemArray.size_20 s_1_0 in <{StdString.+++_11}> (<{PmAbcMagic.cu;404;20_120}> (_SystemArray._createArray_16 (<{PmAbcMagic.cu;404;20_121}> 0 1 (<{StdInt.-_7}> n_1 l_1_1))) 0 1 (<{StdInt.-_7}> n_1 l_1_1)) s_1_0
PmAbcMagic.pad_122 !n_0::I !x_1::I = let s_1_0::I = StdString.toString_5 x_1, l_1_1 = _SystemArray.size_20 s_1_0 in <{StdString.+++_11}> (<{PmAbcMagic.cu;404;20_120}> (_SystemArray._createArray_16 (<{PmAbcMagic.cu;404;20_121}> 0 1 (<{StdInt.-_7}> n_0 l_1_1))) 0 1 (<{StdInt.-_7}> n_0 l_1_1)) s_1_0
PmAbcMagic.DT2S !_x_0 = case _x_0 (_Tuple2 date_1_0 time_1_1 -> <{StdString.+++_11}> "\"" (<{StdString.+++_11}> (<{StdString.+++_11}> (PmAbcMagic.pad_122 4 (select date_1_0::StdLibMisc._Date 0)) (<{StdString.+++_11}> (PmAbcMagic.pad_122 2 (select date_1_0::StdLibMisc._Date 1)) (<{StdString.+++_11}> (PmAbcMagic.pad_122 2 (select date_1_0::StdLibMisc._Date 2)) (<{StdString.+++_11}> (PmAbcMagic.pad_122 2 (select time_1_1::StdLibMisc._Time 0)) (<{StdString.+++_11}> (PmAbcMagic.pad_122 2 (select time_1_1::StdLibMisc._Time 1)) (PmAbcMagic.pad_122 2 (select time_1_1::StdLibMisc._Time 2))))))) "\"")) 
<{PmAbcMagic.TD;ABCOptions}> _x_0::B = _predefined._Nil
<{PmAbcMagic.TD;ABCCache}> _x_0::B = _predefined._Nil
<{PmAbcMagic.TD;ModuleDate}> _x_0::B = _predefined._Nil
<{PmAbcMagic.TD;ABCStuff}> _x_0::B = _predefined._Nil
<{PmAbcMagic.TD;ABCInfo}> _x_0::B = _predefined._Nil


|| Converted Records
:: PmAbcMagic._ABCOptions = {!PmAbcMagic.abcDescriptors::B, !PmAbcMagic.abcTimeProfile::B, !PmAbcMagic.abcStrictnessAnalysis::B, !PmAbcMagic.abcGiveWarnings::B, !PmAbcMagic.abcExportLocalLabels::B, !PmAbcMagic.abcGenerateComments::B, !PmAbcMagic.abcReuseUniqueNodes::B, !PmAbcMagic.abcFusion::B, !PmAbcMagic.abc64Bits::B, !PmAbcMagic.abcDynamics::B}

:: PmAbcMagic._ABCCache = {!PmAbcMagic.cache, !PmAbcMagic.curi::I, !PmAbcMagic.maxi::I}

:: PmAbcMagic._ABCStuff = {!PmAbcMagic.c_path, !PmAbcMagic.c_date, !PmAbcMagic.c_info}

:: <{PmAbcMagic.gEq_s;}> = {!PmAbcMagic.gEq_s}

:: <{PmAbcMagic.gEq_ss;}> = {!PmAbcMagic.gEq_ss}

:: <{PmAbcMagic.gEq_sss;}> = {!PmAbcMagic.gEq_sss}

:: <{PmAbcMagic.gEq_ssss;}> = {!PmAbcMagic.gEq_ssss}

:: <{PmAbcMagic.gEq_sssss;}> = {!PmAbcMagic.gEq_sssss}

:: <{PmAbcMagic.gEq_ssssss;}> = {!PmAbcMagic.gEq_ssssss}

:: <{PmAbcMagic.gEq_sssssss;}> = {!PmAbcMagic.gEq_sssssss}

:: <{PmAbcMagic.gEq_ssssssss;}> = {!PmAbcMagic.gEq_ssssssss}

:: <{PmAbcMagic.gEq_sssssssss;}> = {!PmAbcMagic.gEq_sssssssss}

:: <{PmAbcMagic.bimap_s;}> = {PmAbcMagic.bimap_s}

:: <{PmAbcMagic.bimap_ss;}> = {PmAbcMagic.bimap_ss}

:: <{PmAbcMagic.bimap_sss;}> = {PmAbcMagic.bimap_sss}

