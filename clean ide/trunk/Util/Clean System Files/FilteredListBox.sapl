|| ?module? FilteredListBox


FilteredListBox.openFilteredListBoxId !_v_0 !env_1 = let _x_1_0 = select _v_0::<{StdId.Ids;}> 0 env_1, _x_1_1 = select _v_0::<{StdId.Ids;}> 2 (select _x_1_0::_Tuple2 1) in <{_Tuple2!3}> (FilteredListBox._FilteredListBoxId (select _x_1_0::_Tuple2 0) (select _x_1_1::_Tuple2 0)) (select _x_1_1::_Tuple2 1)
FilteredListBox.appendFilteredListBoxItems !_x_0 !items_1 !pState_2 = case _x_0 (FilteredListBox._FilteredListBoxId fcontrol_1_0 freceiver_1_1 -> select (StdReceiver.syncSend2 freceiver_1_1 (FilteredListBox.FInAppendItems items_1) pState_2)::_Tuple2 1) 
FilteredListBox.setFilteredListBoxPen !_x_0 !pen_1 !ps_2 = case _x_0 (FilteredListBox._FilteredListBoxId fcontrol_1_0 freceiver_1_1 -> select (StdReceiver.syncSend2 freceiver_1_1 (FilteredListBox.FInSetPen pen_1) ps_2)::_Tuple2 1) 
FilteredListBox.getFilteredListBoxSelection !_x_0 !pState_1 = case _x_0 (FilteredListBox._FilteredListBoxId fcontrol_1_0 freceiver_1_1 -> let _x_2_0 = StdReceiver.syncSend2 freceiver_1_1 FilteredListBox.FInGetSelection pState_1, _x_2_1 = select _x_2_0::_Tuple2 0, maybe_out_2_2 = select _x_2_1::_Tuple2 1 in case (Data.Maybe.isNothing maybe_out_2_2) (True -> <{_Tuple2!3}> (_Tuple2 False _predefined._Nil) (select _x_2_0::_Tuple2 1)) (False -> <{_Tuple2!3}> (<{FilteredListBox._c;517;35_109}> (Data.Maybe.fromJust maybe_out_2_2)) (select _x_2_0::_Tuple2 1)) ) 
<{FilteredListBox._c;517;35_109}> !_x_0 = case _x_0 (FilteredListBox.FOutGetSelection selection_1_0 -> <{_Tuple2!3}> True selection_1_0) (_ -> <{_Tuple2!3}> False _predefined._Nil)
FilteredListBox.getFilteredListBoxItems !_x_0 !pState_1 = case _x_0 (FilteredListBox._FilteredListBoxId fcontrol_1_0 freceiver_1_1 -> let _x_2_0 = StdReceiver.syncSend2 freceiver_1_1 FilteredListBox.FInGetItems pState_1, _x_2_1 = select _x_2_0::_Tuple2 0, maybe_out_2_2 = select _x_2_1::_Tuple2 1 in case (Data.Maybe.isNothing maybe_out_2_2) (True -> <{_Tuple2!3}> (_Tuple2 False _predefined._Nil) (select _x_2_0::_Tuple2 1)) (False -> <{_Tuple2!3}> (<{FilteredListBox._c;532;35_110}> (Data.Maybe.fromJust maybe_out_2_2)) (select _x_2_0::_Tuple2 1)) ) 
<{FilteredListBox._c;532;35_110}> !_x_0 = case _x_0 (FilteredListBox.FOutGetItems items_1_0 -> <{_Tuple2!3}> True items_1_0) (_ -> <{_Tuple2!3}> False _predefined._Nil)
FilteredListBox.lines_beginning_with_space_40 !_vArray_0 !line_n_1::I lst_2 !l_3::I = case (<{StdInt.<_17}> l_3 line_n_1) (True -> _predefined._Nil) (False -> let s_2_0 = <{StdList.!!}> lst_2 (<{StdInt.-_7}> line_n_1 1) in case (case (<{StdInt.<_17}> 0 (select _vArray_0::<{_SystemArray.Array;}> 4 s_2_0)) (True -> <{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_2_0 0) ' ') (False -> False) ) (True -> _predefined._Cons line_n_1 (FilteredListBox.lines_beginning_with_space_40 _vArray_0 (<{StdInt.+_6}> line_n_1 1) lst_2 l_3)) (False -> _predefined._Nil) ) 
FilteredListBox.lines_from_39 !_vArray_0 line_n_1::I lst_2 l_3::I = let s_1_0 = <{StdList.!!}> lst_2 (<{StdInt.-_7}> line_n_1 1) in case (case (<{StdInt.<_17}> 0 (select _vArray_0::<{_SystemArray.Array;}> 4 s_1_0)) (True -> <{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_1_0 0) ' ') (False -> False) ) (True -> _predefined._Cons line_n_1 _predefined._Nil) (False -> _predefined._Cons line_n_1 (FilteredListBox.lines_beginning_with_space_40 _vArray_0 (<{StdInt.+_6}> line_n_1 1) lst_2 l_3)) 
FilteredListBox.move_up_while_string_begins_with_space_38 !_vArray_0 !line_n_1::I lst_2 l_3::I = case (<{StdInt.==_16}> line_n_1 1) (True -> FilteredListBox.lines_from_39 _vArray_0 1 lst_2 l_3) (False -> let s_2_0 = <{StdList.!!}> lst_2 (<{StdInt.-_7}> line_n_1 1) in case (case (<{StdInt.<_17}> 0 (select _vArray_0::<{_SystemArray.Array;}> 4 s_2_0)) (True -> <{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_2_0 0) ' ') (False -> False) ) (True -> FilteredListBox.move_up_while_string_begins_with_space_38 _vArray_0 (<{StdInt.-_7}> line_n_1 StdInt.one_11) lst_2 l_3) (False -> FilteredListBox.lines_from_39 _vArray_0 line_n_1 lst_2 l_3) ) 
FilteredListBox.next_if_string_begins_with_space_37 !_vArray_0 next_1::B line_n_2::I lst_3 l_4::I = let s_1_0 = <{StdList.!!}> lst_3 (<{StdInt.-_7}> line_n_2 1) in case (case (<{StdInt.<_17}> 0 (select _vArray_0::<{_SystemArray.Array;}> 4 s_1_0)) (True -> <{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_1_0 0) ' ') (False -> False) ) (True -> FilteredListBox.next_selected_line_numbers_36 _vArray_0 next_1 line_n_2 lst_3 l_4) (False -> FilteredListBox.lines_from_39 _vArray_0 line_n_2 lst_3 l_4) 
FilteredListBox.next_selected_line_numbers_36 !_vArray_0 !next_1::B !line_n_2::I lst_3 l_4::I = case next_1 (True -> let line_n_2_0::I = <{StdInt.+_6}> line_n_2 StdInt.one_11 in case (<{StdInt.<_17}> l_4 line_n_2_0) (True -> FilteredListBox.lines_from_39 _vArray_0 1 lst_3 l_4) (False -> FilteredListBox.next_if_string_begins_with_space_37 _vArray_0 next_1 line_n_2_0 lst_3 l_4) ) (False -> let line_n_2_0::I = <{StdInt.-_7}> line_n_2 StdInt.one_11 in case (<{StdInt.<_17}> line_n_2_0 1) (True -> FilteredListBox.move_up_while_string_begins_with_space_38 _vArray_0 l_4 lst_3 l_4) (False -> FilteredListBox.next_if_string_begins_with_space_37 _vArray_0 next_1 line_n_2_0 lst_3 l_4) ) 
FilteredListBox.setFilteredListBoxSelection !_x_0 !selection_1 !pState_2 = case _x_0 (FilteredListBox._FilteredListBoxId fcontrol_1_0 freceiver_1_1 -> select (StdReceiver.syncSend2 freceiver_1_1 (FilteredListBox.FInSetSelection selection_1) pState_2)::_Tuple2 1) 
FilteredListBox.lines_beginning_with_space_97 !line_n_0::I lst_1 !l_2::I = case (<{StdInt.<_17}> l_2 line_n_0) (True -> _predefined._Nil) (False -> let s_2_0 = <{StdList.!!}> lst_1 (<{StdInt.-_7}> line_n_0 1) in case (case (<{StdInt.<_17}> 0 (_SystemArray.size_20 s_2_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 s_2_0 0) ' ') (False -> False) ) (True -> _predefined._Cons line_n_0 (FilteredListBox.lines_beginning_with_space_97 (<{StdInt.+_6}> line_n_0 1) lst_1 l_2)) (False -> _predefined._Nil) ) 
FilteredListBox.lines_from_96 !line_n_0::I !lst_1 l_2::I = let s_1_0 = <{StdList.!!}> lst_1 (<{StdInt.-_7}> line_n_0 1) in case (case (<{StdInt.<_17}> 0 (_SystemArray.size_20 s_1_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 s_1_0 0) ' ') (False -> False) ) (True -> _predefined._Cons line_n_0 _predefined._Nil) (False -> _predefined._Cons line_n_0 (FilteredListBox.lines_beginning_with_space_97 (<{StdInt.+_6}> line_n_0 1) lst_1 l_2)) 
FilteredListBox.move_up_while_string_begins_with_space_100 !line_n_0::I !lst_1 l_2::I = case (<{StdInt.==_16}> line_n_0 1) (True -> FilteredListBox.lines_from_96 1 lst_1 l_2) (False -> let s_2_0 = <{StdList.!!}> lst_1 (<{StdInt.-_7}> line_n_0 1) in case (case (<{StdInt.<_17}> 0 (_SystemArray.size_20 s_2_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 s_2_0 0) ' ') (False -> False) ) (True -> FilteredListBox.move_up_while_string_begins_with_space_100 (<{StdInt.-_7}> line_n_0 StdInt.one_11) lst_1 l_2) (False -> FilteredListBox.lines_from_96 line_n_0 lst_1 l_2) ) 
FilteredListBox.next_if_string_begins_with_space_99 next_0::B !line_n_1::I !lst_2 l_3::I = let s_1_0 = <{StdList.!!}> lst_2 (<{StdInt.-_7}> line_n_1 1) in case (case (<{StdInt.<_17}> 0 (_SystemArray.size_20 s_1_0)) (True -> <{StdChar.==_18}> (_SystemArray.select_19 s_1_0 0) ' ') (False -> False) ) (True -> FilteredListBox.next_selected_line_numbers_98 next_0 line_n_1 lst_2 l_3) (False -> FilteredListBox.lines_from_96 line_n_1 lst_2 l_3) 
FilteredListBox.next_selected_line_numbers_98 !next_0::B !line_n_1::I !lst_2 l_3::I = case next_0 (True -> let line_n_2_0::I = <{StdInt.+_6}> line_n_1 StdInt.one_11 in case (<{StdInt.<_17}> l_3 line_n_2_0) (True -> FilteredListBox.lines_from_96 1 lst_2 l_3) (False -> FilteredListBox.next_if_string_begins_with_space_99 next_0 line_n_2_0 lst_2 l_3) ) (False -> let line_n_2_0::I = <{StdInt.-_7}> line_n_1 StdInt.one_11 in case (<{StdInt.<_17}> line_n_2_0 1) (True -> FilteredListBox.move_up_while_string_begins_with_space_100 l_3 lst_2 l_3) (False -> FilteredListBox.next_if_string_begins_with_space_99 next_0 line_n_2_0 lst_2 l_3) ) 
FilteredListBox.exec_next_filtered !next_0::B !lb_1 efun_2 !ps_3 = let _x_1_0 = FilteredListBox.getFilteredListBoxSelection lb_1 ps_3, _x_1_1 = select _x_1_0::_Tuple2 0 in case (StdBool.not (select _x_1_1::_Tuple2 0)) (True -> select _x_1_0::_Tuple2 1) (False -> let ps_3_0 = select _x_1_0::_Tuple2 1, _x_3_1 = FilteredListBox.getFilteredListBoxItems lb_1 ps_3_0, _x_3_2 = select _x_3_1::_Tuple2 0 in case (StdBool.not (select _x_3_2::_Tuple2 0)) (True -> select _x_3_1::_Tuple2 1) (False -> let lst_5_0::I = select _x_3_2::_Tuple2 1, l_5_1 = StdList.length_47 lst_5_0 in case (<{StdInt.==_16}> l_5_1 0) (True -> select _x_3_1::_Tuple2 1) (False -> let sel_7_0 = select _x_1_1::_Tuple2 1, selected_line_numbers_7_1 = <{FilteredListBox._if;567;35_111}> (StdList.isEmpty sel_7_0) lst_5_0 l_5_1 next_0 sel_7_0, ps_7_2 = select _x_3_1::_Tuple2 1, ps_7_3 = FilteredListBox.setFilteredListBoxSelection lb_1 selected_line_numbers_7_1 ps_7_2, _x_7_4 = FilteredListBox.getFilteredListBoxSelection lb_1 ps_7_3, _x_7_5 = select _x_7_4::_Tuple2 0 in case (StdBool.not (select _x_7_5::_Tuple2 0)) (True -> select _x_7_4::_Tuple2 1) (False -> let sel_9_0 = select _x_7_5::_Tuple2 1 in case (StdList.isEmpty sel_9_0) (True -> select _x_7_4::_Tuple2 1) (False -> efun_2 (select (StdList.hd sel_9_0)::_Tuple2 0) (select _x_7_4::_Tuple2 1)) ) ) ) ) 
<{FilteredListBox._if;567;35_111}> !_x_0::B !lst_1 l_2::I next_3::B sel_4 = case _x_0 (True -> FilteredListBox.lines_from_96 1 lst_1 l_2) (_ -> FilteredListBox.next_selected_line_numbers_98 next_3 (select (StdList.hd sel_4)::_Tuple2 1) lst_1 l_2)
FilteredListBox.foldl_52 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> FilteredListBox.foldl_52 op_0 (op_0 r_1 a_1_0) x_1_1) 
FilteredListBox.drawline_28 !_vDrawables_0 lineHeight_1::I !min_y_2::I max_y_3::I !_x_4 line_5 = case _x_4 (_Tuple2 y_1_0 p_1_1 -> case (case (<{StdInt.<_17}> y_1_0 min_y_2) (True -> True) (False -> <{StdInt.<_17}> max_y_3 (<{StdInt.-_7}> y_1_0 lineHeight_1)) ) (True -> _Tuple2 (<{StdInt.+_6}> y_1_0 lineHeight_1) p_1_1) (False -> _Tuple2 (<{StdInt.+_6}> y_1_0 lineHeight_1) (select _vDrawables_0::<{StdPicture.Drawables;}> 1 (StdIOBasic._Point2 0 y_1_0) line_5 p_1_1)) ) 
FilteredListBox.determine_last_line_of_rectangle_29 line_n_0::I !_x_1 = case _x_1 (_predefined._Cons next_line_n_1_0 next_lines_1_1 -> case (<{StdInt.==_16}> next_line_n_1_0 (<{StdInt.+_6}> line_n_0 1)) (True -> FilteredListBox.determine_last_line_of_rectangle_29 next_line_n_1_0 next_lines_1_1) ) (_ -> _Tuple2 line_n_0 _x_1)
FilteredListBox.drawsel_31 !lineHeight_0::I !x2_1::I !x1_2::I !i_3::I !j_4::I = StdPicture.hilite_55 (StdIOBasic._Rectangle (StdIOBasic._Point2 x1_2 (<{StdInt.*_9}> (<{StdInt.-_7}> i_3 1) lineHeight_0)) (StdIOBasic._Point2 x2_1 (<{StdInt.-_7}> (<{StdInt.*_9}> j_4 lineHeight_0) 1)))
FilteredListBox.hilite_selections_30 lineHeight_0::I x2_1::I x1_2::I !_x_3 !pict_4 = case _x_3 (_predefined._Cons selection_1_0 selections_1_1 -> let _x_2_0 = FilteredListBox.determine_last_line_of_rectangle_29 selection_1_0 selections_1_1 in FilteredListBox.hilite_selections_30 lineHeight_0 x2_1 x1_2 (select _x_2_0::_Tuple2 1) (FilteredListBox.drawsel_31 lineHeight_0 x2_1 x1_2 selection_1_0 (select _x_2_0::_Tuple2 0) pict_4)) (_predefined._Nil -> pict_4) 
FilteredListBox.foldl_101 !_vDrawables_0 lineHeight_1::I min_y_2::I max_y_3::I !r_4 !_x_5 = case _x_5 (_predefined._Nil -> r_4) (_predefined._Cons a_1_0 x_1_1 -> FilteredListBox.foldl_101 _vDrawables_0 lineHeight_1 min_y_2 max_y_3 (FilteredListBox.drawline_28 _vDrawables_0 lineHeight_1 min_y_2 max_y_3 r_4 a_1_0) x_1_1) 
FilteredListBox.customlook_32 !_vDrawables_0 lineHeight_1::I !selection_2 initHeight_3::I !items_4 pen_5 _x_6 !_x_7 pict_8 = case _x_7 (StdIOCommon._UpdateState oldFrame_1_0 newFrame_1_1 updArea_1_2 -> FilteredListBox.hilite_selections_30 lineHeight_1 (select (select newFrame_1_1::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 0) (select (select newFrame_1_1::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 0) selection_2 (select (FilteredListBox.foldl_101 _vDrawables_0 lineHeight_1 (select (select newFrame_1_1::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1) (select (select newFrame_1_1::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1) (_Tuple2 initHeight_3 (StdPicture.unfill_103 newFrame_1_1 (StdPicture.setPenAttributes pen_5 pict_8))) items_4)::_Tuple2 1)) 
FilteredListBox.drawline_104 lineHeight_0::I !min_y_1::I max_y_2::I !_x_3 line_4 = case _x_3 (_Tuple2 y_1_0 p_1_1 -> case (case (<{StdInt.<_17}> y_1_0 min_y_1) (True -> True) (False -> <{StdInt.<_17}> max_y_2 (<{StdInt.-_7}> y_1_0 lineHeight_0)) ) (True -> _Tuple2 (<{StdInt.+_6}> y_1_0 lineHeight_0) p_1_1) (False -> _Tuple2 (<{StdInt.+_6}> y_1_0 lineHeight_0) (StdPicture.drawAt_62 (StdIOBasic._Point2 0 y_1_0) line_4 p_1_1)) ) 
FilteredListBox.foldl_103 lineHeight_0::I min_y_1::I max_y_2::I !r_3 !_x_4 = case _x_4 (_predefined._Nil -> r_3) (_predefined._Cons a_1_0 x_1_1 -> FilteredListBox.foldl_103 lineHeight_0 min_y_1 max_y_2 (FilteredListBox.drawline_104 lineHeight_0 min_y_1 max_y_2 r_3 a_1_0) x_1_1) 
FilteredListBox.customlook_102 lineHeight_0::I !selection_1 initHeight_2::I !items_3 !pen_4 _x_5 !_x_6 !pict_7 = case _x_6 (StdIOCommon._UpdateState oldFrame_1_0 newFrame_1_1 updArea_1_2 -> FilteredListBox.hilite_selections_30 lineHeight_0 (select (select newFrame_1_1::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 0) (select (select newFrame_1_1::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 0) selection_1 (select (FilteredListBox.foldl_103 lineHeight_0 (select (select newFrame_1_1::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1) (select (select newFrame_1_1::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1) (_Tuple2 initHeight_2 (StdPicture.unfill_103 newFrame_1_1 (StdPicture.setPenAttributes pen_4 pict_7))) items_3)::_Tuple2 1)) 
FilteredListBox.customlook !ls_0 = case ls_0 (FilteredListBox._FilteredListBoxState items_1_0 selection_1_1 listbox_1_2 lineHeight_1_3 initHeight_1_4 pen_1_5 ifilter_1_6 aitems_1_7 domain_1_8 -> _Tuple2 (FilteredListBox.customlook_102 lineHeight_1_3 selection_1_1 initHeight_1_4 items_1_0 pen_1_5) ls_0) 
FilteredListBox.listSelection_34 !_vEnum_0 !prev_1 !new_2 = case (select (select _vEnum_0::<{StdClass.Enum;}> 0)::<{StdOverloaded.<;}> 0 prev_1 new_2) (True -> _SystemEnum._from_to _vEnum_0 prev_1 new_2) (False -> _SystemEnum._from_to _vEnum_0 new_2 prev_1) 
FilteredListBox.newSelection_35 !_vEnum_0 !_vEq_1 controlDown_2::B selection_3 !shiftDown_4::B prev_5 new_6 hasSelection_7::B = case shiftDown_4 (True -> case hasSelection_7 (True -> <{StdList.++}> (StdList.removeMembers _vEq_1 selection_3 (FilteredListBox.listSelection_34 _vEnum_0 prev_5 new_6)) (FilteredListBox.listSelection_34 _vEnum_0 prev_5 new_6)) (False -> _predefined._Cons new_6 _predefined._Nil) ) (False -> case controlDown_2 (True -> case (StdList.isMember _vEq_1 new_6 selection_3) (True -> StdList.removeMember _vEq_1 new_6 selection_3) (False -> <{StdList.++}> selection_3 (_predefined._Cons new_6 _predefined._Nil)) ) (False -> _predefined._Cons new_6 _predefined._Nil) ) 
FilteredListBox.isBetween::B !_vOrd_0 low_1 up_2 x_3 = case (StdBool.not (select (select _vOrd_0::<{StdClass.Ord;}> 0)::<{StdOverloaded.<;}> 0 x_3 low_1)) (True -> StdBool.not (select (select _vOrd_0::<{StdClass.Ord;}> 0)::<{StdOverloaded.<;}> 0 up_2 x_3)) (False -> False) 
FilteredListBox.listSelection_107 !prev_0::I !new_1::I = case (<{StdInt.<_17}> prev_0 new_1) (True -> _SystemEnum._from_to_6 prev_0 new_1) (False -> _SystemEnum._from_to_6 new_1 prev_0) 
FilteredListBox.newSelection_106 !_vEq_0 controlDown_1::B selection_2 !shiftDown_3::B prev_4::I new_5::I hasSelection_6::B = case shiftDown_3 (True -> case hasSelection_6 (True -> <{StdList.++}> (StdList.removeMembers _vEq_0 selection_2 (FilteredListBox.listSelection_107 prev_4 new_5)) (FilteredListBox.listSelection_107 prev_4 new_5)) (False -> _predefined._Cons new_5 _predefined._Nil) ) (False -> case controlDown_1 (True -> case (StdList.isMember _vEq_0 new_5 selection_2) (True -> StdList.removeMember _vEq_0 new_5 selection_2) (False -> <{StdList.++}> selection_2 (_predefined._Cons new_5 _predefined._Nil)) ) (False -> _predefined._Cons new_5 _predefined._Nil) ) 
FilteredListBox.isBetween_105::B !low_0::I up_1::I !x_2::I = case (StdBool.not (<{StdInt.<_17}> x_2 low_0)) (True -> StdBool.not (<{StdInt.<_17}> up_1 x_2)) (False -> False) 
FilteredListBox.newSelection_108 controlDown_0::B selection_1 !shiftDown_2::B prev_3::I new_4::I hasSelection_5::B = case shiftDown_2 (True -> case hasSelection_5 (True -> <{StdList.++}> (StdList.removeMembers_60 selection_1 (FilteredListBox.listSelection_107 prev_3 new_4)) (FilteredListBox.listSelection_107 prev_3 new_4)) (False -> _predefined._Cons new_4 _predefined._Nil) ) (False -> case controlDown_0 (True -> case (StdList.isMember_51 new_4 selection_1) (True -> StdList.removeMember_57 new_4 selection_1) (False -> <{StdList.++}> selection_1 (_predefined._Cons new_4 _predefined._Nil)) ) (False -> _predefined._Cons new_4 _predefined._Nil) ) 
FilteredListBox.mouse efun_0 !_x_1 !_x_2 = case _x_1 (StdIOCommon.MouseDown pos_1_0 _x_1_1 _x_1_2 -> case _x_1_1 (StdIOCommon._Modifiers shiftDown_2_0 optionDown_2_1 commandDown_2_2 controlDown_2_3 altDown_2_4 -> case _x_1_2 (1 -> case _x_2 (_Tuple2 _x_4_0 ps_4_1 -> case _x_4_0 (_Tuple2 listboxState_5_0 ls_5_1 -> case listboxState_5_0 (FilteredListBox._FilteredListBoxState items_6_0 selection_6_1 listbox_6_2 lineHeight_6_3 initHeight_6_4 pen_6_5 ifilter_6_6 aitems_6_7 domain_6_8 -> let _x_7_0 = FilteredListBox.customlook (update listboxState_5_0::FilteredListBox._FilteredListBoxState [1:StdList.filter (FilteredListBox.isBetween_105 1 (StdList.length_47 items_6_0)) (FilteredListBox.newSelection_108 controlDown_2_3 selection_6_1 shiftDown_2_0 (select selection_6_1::_Tuple2 0) (<{StdInt.+_6}> (<{StdInt./_10}> (select pos_1_0::StdIOBasic._Point2 1) lineHeight_6_3) 1) (StdBool.not (StdList.isEmpty selection_6_1)))]) in _Tuple2 (_Tuple2 (select _x_7_0::_Tuple2 1) ls_5_1) (StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 (select (select listboxState_5_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0) True (_Tuple2 True (select _x_7_0::_Tuple2 0))) _predefined._Nil)) ps_4_1)) ) ) ) (_ -> case _x_2 (_Tuple2 _x_3_0 ps_3_1 -> case _x_3_0 (_Tuple2 listboxState_4_0 ls_4_1 -> case listboxState_4_0 (FilteredListBox._FilteredListBoxState items_5_0 selection_5_1 listbox_5_2 lineHeight_5_3 initHeight_5_4 pen_5_5 ifilter_5_6 aitems_5_7 domain_5_8 -> let nr_6_0 = StdList.length_47 items_5_0, new_6_1 = <{StdInt.+_6}> (<{StdInt./_10}> (select pos_1_0::StdIOBasic._Point2 1) lineHeight_5_3) 1, newSelection_6_2 = _predefined._Cons new_6_1 _predefined._Nil, okSelection_6_3 = StdList.filter (FilteredListBox.isBetween_105 1 nr_6_0) newSelection_6_2, listboxState_6_4 = update listboxState_4_0::FilteredListBox._FilteredListBoxState [1:okSelection_6_3], _x_6_5::I = FilteredListBox.customlook listboxState_6_4, listboxState_6_6::I = select _x_6_5::_Tuple2 1 in case (<{StdInt.<_17}> (StdList.length_47 (select listboxState_6_6::FilteredListBox._FilteredListBoxState 0)) new_6_1) (True -> _Tuple2 (_Tuple2 listboxState_6_6 ls_4_1) (StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 (select (select listboxState_4_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0) True (_Tuple2 True (select _x_6_5::_Tuple2 0))) _predefined._Nil)) ps_3_1)) (False -> _Tuple2 (_Tuple2 listboxState_6_6 ls_4_1) (efun_0 (<{StdList.!!}> items_5_0 (<{StdInt.-_7}> new_6_1 1)) (StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 (select (select listboxState_4_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0) True (_Tuple2 True (select _x_6_5::_Tuple2 0))) _predefined._Nil)) ps_3_1))) ) ) ) )) ) (_ -> _x_2)
FilteredListBox.mouseFilter::B !_x_0 = case _x_0 (StdIOCommon.MouseDown _x_1_0 _x_1_1 _x_1_2 -> True) (_ -> False)
FilteredListBox.flbMouse efun_0 = StdControlDef.ControlMouse FilteredListBox.mouseFilter StdIOCommon.Able (FilteredListBox.mouse efun_0)
FilteredListBox.hasSelection_33::B !selection_0 = case (StdList.isEmpty selection_0) (True -> False) (False -> True) 
FilteredListBox.scroll_to_selection newSelection_0 lineHeight_1::I !custom_2 !ps_3 = let _x_1_0 = StdPSt.accPIO (StdControl.getParentWindow custom_2) ps_3, wdef_1_1 = select _x_1_0::_Tuple2 0 in case (Data.Maybe.isNothing wdef_1_1) (True -> select _x_1_0::_Tuple2 1) (False -> let wdef_3_0 = Data.Maybe.fromJust wdef_1_1, _x_3_1 = StdControl.getControlViewFrame custom_2 wdef_3_0 in case (StdBool.not (select _x_3_1::_Tuple2 0)) (True -> select _x_1_0::_Tuple2 1) (False -> let frame_5_0 = select _x_3_1::_Tuple2 1 in case (Data.Maybe.isNothing frame_5_0) (True -> select _x_1_0::_Tuple2 1) (False -> let first_item_7_0::I = StdList.hd newSelection_0, top_7_1::I = <{StdInt.*_9}> (<{StdInt.-_7}> first_item_7_0 1) lineHeight_1, frame_7_2::I = Data.Maybe.fromJust frame_5_0, delta_7_3 = <{StdInt.-_7}> top_7_1 (select (select frame_7_2::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1), last_item_7_4::I = StdList.last newSelection_0, bot_7_5::I = <{StdInt.*_9}> last_item_7_4 lineHeight_1 in case (case (<{StdInt.<_17}> delta_7_3 0) (True -> True) (False -> <{StdInt.<_17}> (<{StdInt.-_7}> (select (select frame_7_2::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1) (select (select frame_7_2::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1)) (<{StdInt.-_7}> bot_7_5 top_7_1)) ) (True -> StdPSt.appPIO (StdControl.moveControlViewFrame custom_2 (StdIOBasic._Vector2 0 delta_7_3)) (select _x_1_0::_Tuple2 1)) (False -> let delta_9_0::I = <{StdInt.-_7}> bot_7_5 (select (select frame_7_2::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1) in case (<{StdInt.<_17}> 0 delta_9_0) (True -> StdPSt.appPIO (StdControl.moveControlViewFrame custom_2 (StdIOBasic._Vector2 0 delta_9_0)) (select _x_1_0::_Tuple2 1)) (False -> select _x_1_0::_Tuple2 1) ) ) ) ) 
FilteredListBox.keyboard efun_0 !_x_1 !_x_2 = case _x_1 (StdIOCommon.SpecialKey key_1_0 _x_1_1 _x_1_2 -> case _x_1_1 (StdIOCommon.KeyDown repeat_2_0 -> case _x_1_2 (StdIOCommon._Modifiers shiftDown_3_0 optionDown_3_1 commandDown_3_2 controlDown_3_3 altDown_3_4 -> case _x_2 (_Tuple2 _x_4_0 ps_4_1 -> case _x_4_0 (_Tuple2 lbState_5_0 ls_5_1 -> case lbState_5_0 (FilteredListBox._FilteredListBoxState items_6_0 selection_6_1 listbox_6_2 lineHeight_6_3 initHeight_6_4 pen_6_5 ifilter_6_6 aitems_6_7 domain_6_8 -> case (<{oskey.==_32}> key_1_0 oskey.enterKey) (True -> case (StdBool.not (FilteredListBox.hasSelection_33 selection_6_1)) (True -> _Tuple2 (_Tuple2 lbState_5_0 ls_5_1) ps_4_1) (False -> _Tuple2 (_Tuple2 lbState_5_0 ls_5_1) (efun_0 (<{StdList.!!}> items_6_0 (<{StdInt.-_7}> (StdList.hd selection_6_1) 1)) ps_4_1)) ) (False -> case (<{oskey.==_32}> key_1_0 oskey.upKey) (True -> let newSelection_9_0 = <{FilteredListBox._if;353;27_113}> (FilteredListBox.hasSelection_33 selection_6_1) selection_6_1, _x_9_1 = FilteredListBox.customlook (update lbState_5_0::FilteredListBox._FilteredListBoxState [1:newSelection_9_0]), custom_9_2 = select (select lbState_5_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0 in _Tuple2 (_Tuple2 (select _x_9_1::_Tuple2 1) ls_5_1) (StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 custom_9_2 True (_Tuple2 True (select _x_9_1::_Tuple2 0))) _predefined._Nil)) (FilteredListBox.scroll_to_selection newSelection_9_0 lineHeight_6_3 custom_9_2 ps_4_1))) (False -> case (<{oskey.==_32}> key_1_0 oskey.downKey) (True -> let newSelection_10_0 = _predefined._Cons (<{FilteredListBox._if;365;28_114}> (FilteredListBox.hasSelection_33 selection_6_1) selection_6_1 items_6_0) _predefined._Nil, _x_10_1 = FilteredListBox.customlook (update lbState_5_0::FilteredListBox._FilteredListBoxState [1:newSelection_10_0]), custom_10_2 = select (select lbState_5_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0 in _Tuple2 (_Tuple2 (select _x_10_1::_Tuple2 1) ls_5_1) (StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 custom_10_2 True (_Tuple2 True (select _x_10_1::_Tuple2 0))) _predefined._Nil)) (FilteredListBox.scroll_to_selection newSelection_10_0 lineHeight_6_3 custom_10_2 ps_4_1))) (False -> case (<{oskey.==_32}> key_1_0 oskey.beginKey) (True -> let newSelection_11_0 = _predefined._Cons 1 _predefined._Nil, _x_11_1 = FilteredListBox.customlook (update lbState_5_0::FilteredListBox._FilteredListBoxState [1:newSelection_11_0]), custom_11_2 = select (select lbState_5_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0 in _Tuple2 (_Tuple2 (select _x_11_1::_Tuple2 1) ls_5_1) (StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 custom_11_2 True (_Tuple2 True (select _x_11_1::_Tuple2 0))) _predefined._Nil)) (FilteredListBox.scroll_to_selection newSelection_11_0 lineHeight_6_3 custom_11_2 ps_4_1))) (False -> case (<{oskey.==_32}> key_1_0 oskey.endKey) (True -> let newSelection_12_0 = _predefined._Cons (StdList.length_47 items_6_0) _predefined._Nil, _x_12_1 = FilteredListBox.customlook (update lbState_5_0::FilteredListBox._FilteredListBoxState [1:newSelection_12_0]), custom_12_2 = select (select lbState_5_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0 in _Tuple2 (_Tuple2 (select _x_12_1::_Tuple2 1) ls_5_1) (StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 custom_12_2 True (_Tuple2 True (select _x_12_1::_Tuple2 0))) _predefined._Nil)) (FilteredListBox.scroll_to_selection newSelection_12_0 lineHeight_6_3 custom_12_2 ps_4_1))) (False -> let custom_12_0 = select (select lbState_5_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0, _x_12_1 = StdPSt.accPIO (StdControl.getParentWindow custom_12_0) ps_4_1, wstate_12_2 = select _x_12_1::_Tuple2 0 in case (Data.Maybe.isNothing wstate_12_2) (True -> _Tuple2 (_Tuple2 lbState_5_0 ls_5_1) (select _x_12_1::_Tuple2 1)) (False -> let wstate_14_0 = Data.Maybe.fromJust wstate_12_2, _x_14_1 = StdControl.getControlViewFrame custom_12_0 wstate_14_0 in case (StdBool.not (select _x_14_1::_Tuple2 0)) (True -> _Tuple2 (_Tuple2 lbState_5_0 ls_5_1) (select _x_12_1::_Tuple2 1)) (False -> let frame_16_0 = select _x_14_1::_Tuple2 1 in case (Data.Maybe.isNothing frame_16_0) (True -> _Tuple2 (_Tuple2 lbState_5_0 ls_5_1) (select _x_12_1::_Tuple2 1)) (False -> case (<{oskey.==_32}> key_1_0 oskey.pgUpKey) (True -> let newSelection_19_0 = <{FilteredListBox._if;413;27_117}> (FilteredListBox.hasSelection_33 selection_6_1) selection_6_1 frame_16_0 lineHeight_6_3, _x_19_1 = FilteredListBox.customlook (update lbState_5_0::FilteredListBox._FilteredListBoxState [1:newSelection_19_0]) in _Tuple2 (_Tuple2 (select _x_19_1::_Tuple2 1) ls_5_1) (StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 custom_12_0 True (_Tuple2 True (select _x_19_1::_Tuple2 0))) _predefined._Nil)) (FilteredListBox.scroll_to_selection newSelection_19_0 lineHeight_6_3 custom_12_0 (select _x_12_1::_Tuple2 1)))) (False -> case (<{oskey.==_32}> key_1_0 oskey.pgDownKey) (True -> let newSelection_20_0 = <{FilteredListBox._if;431;27_120}> (FilteredListBox.hasSelection_33 selection_6_1) frame_16_0 selection_6_1 lineHeight_6_3 items_6_0, _x_20_1 = FilteredListBox.customlook (update lbState_5_0::FilteredListBox._FilteredListBoxState [1:newSelection_20_0]) in _Tuple2 (_Tuple2 (select _x_20_1::_Tuple2 1) ls_5_1) (StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 custom_12_0 True (_Tuple2 True (select _x_20_1::_Tuple2 0))) _predefined._Nil)) (FilteredListBox.scroll_to_selection newSelection_20_0 lineHeight_6_3 custom_12_0 (select _x_12_1::_Tuple2 1)))) (False -> _Tuple2 (_Tuple2 lbState_5_0 ls_5_1) (select _x_12_1::_Tuple2 1)) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) (_ -> StdMisc.abort "FilteredListBox: unsupported keyboard action")
<{FilteredListBox._if;431;27_120}> !_x_0::B frame_1 selection_2 lineHeight_3::I items_4 = case _x_0 (True -> let lastSelection_2_0 = StdList.hd selection_2, frame_2_1::I = Data.Maybe.fromJust frame_1 in case (StdBool.not (<{StdInt.<_17}> (<{StdInt.*_9}> (<{StdInt.+_6}> lastSelection_2_0 StdInt.one_11) lineHeight_3) (select (select frame_2_1::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1))) (True -> let nr_4_0::I = StdList.length_47 items_4, x_4_1::I = 1, y_4_2::I = <{StdInt.-_7}> (<{StdInt./_10}> (<{StdInt.-_7}> (select (select frame_2_1::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1) (select (select frame_2_1::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1)) lineHeight_3) StdInt.one_11, linesOnPage_4_3::I = <{FilteredListBox._c;51;16_118}> (<{StdInt.<_17}> x_4_1 y_4_2) y_4_2 x_4_1, y_4_4::I = <{StdInt.+_6}> lastSelection_2_0 linesOnPage_4_3 in _predefined._Cons (<{FilteredListBox._c;48;16_119}> (<{StdInt.<_17}> nr_4_0 y_4_4) nr_4_0 y_4_4) _predefined._Nil) (False -> _predefined._Cons (<{StdInt./_10}> (select (select frame_2_1::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1) lineHeight_3) _predefined._Nil) ) (_ -> _predefined._Cons (StdList.length_47 items_4) _predefined._Nil)
<{FilteredListBox._c;48;16_119}>::I !_x_0::B nr_1::I y_2::I = case _x_0 (True -> nr_1) (_ -> y_2)
<{FilteredListBox._c;51;16_118}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{FilteredListBox._if;413;27_117}> !_x_0::B selection_1 frame_2 lineHeight_3::I = case _x_0 (True -> let frame_2_0::I = Data.Maybe.fromJust frame_2, lastSelection_2_1 = StdList.hd selection_1 in case (StdBool.not (<{StdInt.<_17}> (select (select frame_2_0::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1) (<{StdInt.*_9}> (<{StdInt.-_7}> lastSelection_2_1 2) lineHeight_3))) (True -> let x_4_0::I = 1, x_4_1::I = 1, y_4_2::I = <{StdInt.-_7}> (<{StdInt./_10}> (<{StdInt.-_7}> (select (select frame_2_0::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1) (select (select frame_2_0::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1)) lineHeight_3) StdInt.one_11, linesOnPage_4_3::I = <{FilteredListBox._c;51;16_115}> (<{StdInt.<_17}> x_4_1 y_4_2) y_4_2 x_4_1, y_4_4::I = <{StdInt.-_7}> lastSelection_2_1 linesOnPage_4_3 in _predefined._Cons (<{FilteredListBox._c;51;16_116}> (<{StdInt.<_17}> x_4_0 y_4_4) y_4_4 x_4_0) _predefined._Nil) (False -> _predefined._Cons (<{StdInt.+_6}> 2 (<{StdInt./_10}> (select (select frame_2_0::StdIOBasic._Rectangle 0)::StdIOBasic._Point2 1) lineHeight_3)) _predefined._Nil) ) (_ -> _predefined._Cons 1 _predefined._Nil)
<{FilteredListBox._c;51;16_116}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{FilteredListBox._c;51;16_115}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
<{FilteredListBox._if;365;28_114}>::I !_x_0::B selection_1 !items_2 = case _x_0 (True -> let nr_2_0::I = StdList.length_47 items_2, lastSelection_2_1::I = StdList.hd selection_1, y_2_2::I = <{StdInt.+_6}> lastSelection_2_1 1 in case (<{StdInt.<_17}> nr_2_0 y_2_2) (True -> nr_2_0) (False -> y_2_2) ) (_ -> StdList.length_47 items_2)
<{FilteredListBox._if;353;27_113}> !_x_0::B selection_1 = case _x_0 (True -> let x_2_0::I = 1, lastSelection_2_1::I = StdList.hd selection_1, y_2_2::I = <{StdInt.-_7}> lastSelection_2_1 1 in _predefined._Cons (<{FilteredListBox._c;51;16_112}> (<{StdInt.<_17}> x_2_0 y_2_2) y_2_2 x_2_0) _predefined._Nil) (_ -> _predefined._Cons 1 _predefined._Nil)
<{FilteredListBox._c;51;16_112}>::I !_x_0::B y_1::I x_2::I = case _x_0 (True -> y_1) (_ -> x_2)
FilteredListBox.keyFilter::B !_x_0 = case _x_0 (StdIOCommon.SpecialKey _x_1_0 _x_1_1 _x_1_2 -> case _x_1_1 (StdIOCommon.KeyDown _x_2_0 -> True) ) (_ -> False)
FilteredListBox.flbKeyboard efun_0 = StdControlDef.ControlKeyboard FilteredListBox.keyFilter StdIOCommon.Able (FilteredListBox.keyboard efun_0)
FilteredListBox.setFilter !_x_0 flt_1 !ps_2 = case _x_0 (FilteredListBox._FilteredListBoxId fcontrol_1_0 freceiver_1_1 -> select (StdReceiver.syncSend2 freceiver_1_1 (FilteredListBox.FInSetFilter flt_1) ps_2)::_Tuple2 1) 
FilteredListBox.getFilter !_x_0 !ps_1 = case _x_0 (FilteredListBox._FilteredListBoxId fcontrol_1_0 freceiver_1_1 -> let _x_2_0 = StdReceiver.syncSend2 freceiver_1_1 FilteredListBox.FInGetFilter ps_1, _x_2_1 = select _x_2_0::_Tuple2 0, out_2_2 = select _x_2_1::_Tuple2 1 in case (Data.Maybe.isNothing out_2_2) (True -> <{_Tuple2!1}> StdFunc.id (select _x_2_0::_Tuple2 1)) (False -> <{_Tuple2!1}> (<{FilteredListBox._c;554;13_121}> (Data.Maybe.fromJust out_2_2)) (select _x_2_0::_Tuple2 1)) ) 
<{FilteredListBox._c;554;13_121}> !_x_0 = case _x_0 (FilteredListBox.FOutGetFilter filt_1_0 -> filt_1_0) (_ -> StdFunc.id)
FilteredListBox.diff_27::B !_x_0 _x_1 = case _x_0 (StdPictureDef.PenSize _x_1_0 -> case _x_1 (StdPictureDef.PenSize _x_2_0 -> False) ) (StdPictureDef.PenPos _x_1_0 -> case _x_1 (StdPictureDef.PenPos _x_2_0 -> False) ) (StdPictureDef.PenColour _x_1_0 -> case _x_1 (StdPictureDef.PenColour _x_2_0 -> False) ) (StdPictureDef.PenBack _x_1_0 -> case _x_1 (StdPictureDef.PenBack _x_2_0 -> False) ) (StdPictureDef.PenFont _x_1_0 -> case _x_1 (StdPictureDef.PenFont _x_2_0 -> False) ) (_ -> True)
FilteredListBox.removeDupAtt !_x_0 = case _x_0 (_predefined._Cons x_1_0 xs_1_1 -> _predefined._Cons x_1_0 (FilteredListBox.removeDupAtt (StdList.filter (FilteredListBox.diff_27 x_1_0) xs_1_1))) (_ -> _predefined._Nil)
FilteredListBox.liheights_45 pen_0 pic_1 = let _x_1_0 = StdPicture.getPenFontMetrics (StdPicture.setPenAttributes pen_0 pic_1), metrics_1_1 = select _x_1_0::_Tuple2 0 in _Tuple2 (_Tuple2 (<{StdInt.+_6}> (<{StdInt.+_6}> (select metrics_1_1::StdPictureDef._FontMetrics 2) (select metrics_1_1::StdPictureDef._FontMetrics 0)) (select metrics_1_1::StdPictureDef._FontMetrics 1)) (<{StdInt.+_6}> (select metrics_1_1::StdPictureDef._FontMetrics 0) (select metrics_1_1::StdPictureDef._FontMetrics 2))) (select _x_1_0::_Tuple2 1)
FilteredListBox.calc_43 items_0 pen_1 pic_2 = let _x_1_0 = StdPicture.getPenFontMetrics (StdPicture.setPenAttributes pen_1 pic_2), _x_1_1 = StdPicture.getPenFontStringWidths items_0 (select _x_1_0::_Tuple2 1), metrics_1_2 = select _x_1_0::_Tuple2 0 in _Tuple2 (StdIOBasic._Rectangle StdIOBasic.zero_21 (StdIOBasic._Point2 (StdOrdList.maxList_15 (_predefined._Cons 0 (select _x_1_1::_Tuple2 0))) (<{StdInt.*_9}> (StdList.length_47 items_0) (<{StdInt.+_6}> (<{StdInt.+_6}> (select metrics_1_2::StdPictureDef._FontMetrics 2) (select metrics_1_2::StdPictureDef._FontMetrics 0)) (select metrics_1_2::StdPictureDef._FontMetrics 1))))) (select _x_1_1::_Tuple2 1)
FilteredListBox.calcControlDomain_50 !pen_0 !items_1 !ps_2 = StdPSt.accPIO (StdPSt.accScreenPicture_13 (FilteredListBox.calc_43 items_1 pen_0)) ps_2
FilteredListBox.anon_41 items_0 index_1::I = _Tuple2 (<{StdList.!!}> items_0 (<{StdInt.-_7}> index_1 1)) index_1
FilteredListBox.calc_44 oldHeight_0::I oldMaxWidth_1::I items_2 pen_3 pic_4 = let _x_1_0 = StdPicture.getPenFontMetrics (StdPicture.setPenAttributes pen_3 pic_4), _x_1_1 = StdPicture.getPenFontStringWidths items_2 (select _x_1_0::_Tuple2 1), metrics_1_2 = select _x_1_0::_Tuple2 0 in _Tuple2 (StdIOBasic._Rectangle StdIOBasic.zero_21 (StdIOBasic._Point2 (StdOrdList.maxList_15 (_predefined._Cons oldMaxWidth_1 (select _x_1_1::_Tuple2 0))) (<{StdInt.+_6}> oldHeight_0 (<{StdInt.*_9}> (StdList.length_47 items_2) (<{StdInt.+_6}> (<{StdInt.+_6}> (select metrics_1_2::StdPictureDef._FontMetrics 2) (select metrics_1_2::StdPictureDef._FontMetrics 0)) (select metrics_1_2::StdPictureDef._FontMetrics 1)))))) (select _x_1_1::_Tuple2 1)
FilteredListBox.adjustControlDomain_51 !pen_0 !items_1 !_x_2 !ps_3 = case _x_2 (StdIOBasic._Rectangle corner1_1_0 _x_1_1 -> case _x_1_1 (StdIOBasic._Point2 oldMaxWidth_2_0 oldHeight_2_1 -> StdPSt.accPIO (StdPSt.accScreenPicture_13 (FilteredListBox.calc_44 oldHeight_2_1 oldMaxWidth_2_0 items_1 pen_0)) ps_3) ) 
FilteredListBox.scrolltoend_42::I custom_0 !dom_1 !wdef_2 = case dom_1 (StdIOBasic._Rectangle corner1_1_0 corner2_1_1 -> case corner2_1_1 (StdIOBasic._Point2 x_2_0 bot_2_1 -> case (Data.Maybe.isNothing wdef_2) (True -> StdInt.zero_8) (False -> let wdef_4_0 = Data.Maybe.fromJust wdef_2, _x_4_1 = StdControl.getControlViewFrame custom_0 wdef_4_0, frame_4_2 = select _x_4_1::_Tuple2 1 in case (case (StdBool.not (select _x_4_1::_Tuple2 0)) (True -> True) (False -> Data.Maybe.isNothing frame_4_2) ) (True -> StdInt.zero_8) (False -> <{StdInt.-_7}> bot_2_1 (select (select (Data.Maybe.fromJust frame_4_2)::StdIOBasic._Rectangle 1)::StdIOBasic._Point2 1)) ) ) ) 
FilteredListBox.receiver_49 !_x_0 !_x_1 = case _x_0 (FilteredListBox.FInSetFilter filt_1_0 -> case _x_1 (_Tuple2 _x_2_0 ps_2_1 -> case _x_2_0 (_Tuple2 listboxState_3_0 ls_3_1 -> case listboxState_3_0 (FilteredListBox._FilteredListBoxState items_4_0 selection_4_1 listbox_4_2 lineHeight_4_3 initHeight_4_4 pen_4_5 ifilter_4_6 aitems_4_7 domain_4_8 -> let items_5_0 = filt_1_0 aitems_4_7, _x_5_1 = FilteredListBox.calcControlDomain_50 pen_4_5 items_5_0 ps_2_1, newDomain_5_2 = select _x_5_1::_Tuple2 0, _x_5_3 = FilteredListBox.customlook (update (update listboxState_3_0::FilteredListBox._FilteredListBoxState [0:items_5_0,6:filt_1_0])::FilteredListBox._FilteredListBoxState [8:newDomain_5_2]), custom_5_4 = select (select listboxState_3_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0 in _Tuple2 FilteredListBox.FOutSetFilter (_Tuple2 (_Tuple2 (select _x_5_3::_Tuple2 1) ls_3_1) (StdPSt.appPIO (StdFunc.seq (_predefined._Cons (StdControl.setControlViewDomain custom_5_4 newDomain_5_2) (_predefined._Cons (StdControl.setControlLooks (_predefined._Cons (_Tuple3 custom_5_4 True (_Tuple2 True (select _x_5_3::_Tuple2 0))) _predefined._Nil)) _predefined._Nil))) (select _x_5_1::_Tuple2 1)))) ) ) ) (FilteredListBox.FInGetFilter -> case _x_1 (_Tuple2 _x_2_0 ps_2_1 -> case _x_2_0 (_Tuple2 listboxState_3_0 ls_3_1 -> case listboxState_3_0 (FilteredListBox._FilteredListBoxState items_4_0 selection_4_1 listbox_4_2 lineHeight_4_3 initHeight_4_4 pen_4_5 ifilter_4_6 aitems_4_7 domain_4_8 -> _Tuple2 (FilteredListBox.FOutGetFilter ifilter_4_6) (_Tuple2 (_Tuple2 listboxState_3_0 ls_3_1) ps_2_1)) ) ) ) (FilteredListBox.FInGetSelection -> case _x_1 (_Tuple2 _x_2_0 ps_2_1 -> case _x_2_0 (_Tuple2 listboxState_3_0 ls_3_1 -> case listboxState_3_0 (FilteredListBox._FilteredListBoxState items_4_0 selection_4_1 listbox_4_2 lineHeight_4_3 initHeight_4_4 pen_4_5 ifilter_4_6 aitems_4_7 domain_4_8 -> _Tuple2 (FilteredListBox.FOutGetSelection (StdList.map (FilteredListBox.anon_41 items_4_0) selection_4_1)) (_Tuple2 (_Tuple2 listboxState_3_0 ls_3_1) ps_2_1)) ) ) ) (FilteredListBox.FInSetSelection newSelection_1_0 -> case _x_1 (_Tuple2 _x_2_0 ps_2_1 -> case _x_2_0 (_Tuple2 listboxState_3_0 ls_3_1 -> case listboxState_3_0 (FilteredListBox._FilteredListBoxState items_4_0 selection_4_1 listbox_4_2 lineHeight_4_3 initHeight_4_4 pen_4_5 ifilter_4_6 aitems_4_7 domain_4_8 -> let !ps_5_0 = FilteredListBox.scroll_to_selection newSelection_1_0 lineHeight_4_3 custom_5_3 ps_2_1, !ps_5_1 = StdPSt.appPIO (StdControl.setControlLooks (_predefined._Cons (_Tuple3 custom_5_3 True (_Tuple2 True (select _x_5_2::_Tuple2 0))) _predefined._Nil)) ps_5_0, _x_5_2 = FilteredListBox.customlook (update listboxState_3_0::FilteredListBox._FilteredListBoxState [1:newSelection_1_0]), custom_5_3 = select (select listboxState_3_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0 in _Tuple2 FilteredListBox.FOutSetSelection (_Tuple2 (_Tuple2 (select _x_5_2::_Tuple2 1) ls_3_1) ps_5_1)) ) ) ) (FilteredListBox.FInGetItems -> case _x_1 (_Tuple2 _x_2_0 ps_2_1 -> case _x_2_0 (_Tuple2 listboxState_3_0 ls_3_1 -> case listboxState_3_0 (FilteredListBox._FilteredListBoxState items_4_0 selection_4_1 listbox_4_2 lineHeight_4_3 initHeight_4_4 pen_4_5 ifilter_4_6 aitems_4_7 domain_4_8 -> _Tuple2 (FilteredListBox.FOutGetItems items_4_0) (_Tuple2 (_Tuple2 listboxState_3_0 ls_3_1) ps_2_1)) ) ) ) (FilteredListBox.FInAppendItems new_1_0 -> case _x_1 (_Tuple2 _x_2_0 ps_2_1 -> case _x_2_0 (_Tuple2 listboxState_3_0 ls_3_1 -> case listboxState_3_0 (FilteredListBox._FilteredListBoxState items_4_0 selection_4_1 listbox_4_2 lineHeight_4_3 initHeight_4_4 pen_4_5 ifilter_4_6 aitems_4_7 domain_4_8 -> let filteredNew_5_0 = ifilter_4_6 new_1_0 in case (StdList.isEmpty filteredNew_5_0) (True -> _Tuple2 FilteredListBox.FOutAppendItems (_Tuple2 (_Tuple2 (update listboxState_3_0::FilteredListBox._FilteredListBoxState [0:<{StdList.++}> items_4_0 filteredNew_5_0,7:<{StdList.++}> aitems_4_7 new_1_0]) ls_3_1) ps_2_1)) (False -> let _x_7_0::I = FilteredListBox.adjustControlDomain_51 pen_4_5 filteredNew_5_0 domain_4_8 ps_2_1, newDomain_7_1 = select _x_7_0::_Tuple2 0, _x_7_2 = FilteredListBox.customlook (update (update listboxState_3_0::FilteredListBox._FilteredListBoxState [0:<{StdList.++}> items_4_0 filteredNew_5_0,7:<{StdList.++}> aitems_4_7 new_1_0])::FilteredListBox._FilteredListBoxState [8:newDomain_7_1]), custom_7_3 = select (select listboxState_3_0::FilteredListBox._FilteredListBoxState 2)::FilteredListBox._FilteredListBoxId 0, ps_7_4 = select _x_7_0::_Tuple2 1, _x_7_5 = StdPSt.accPIO (StdControl.getParentWindow custom_7_3) ps_7_4, wdef_7_6 = select _x_7_5::_Tuple2 0, delta_7_7 = FilteredListBox.scrolltoend_42 custom_7_3 newDomain_7_1 wdef_7_6 in _Tuple2 FilteredListBox.FOutAppendItems (_Tuple2 (_Tuple2 (select _x_7_2::_Tuple2 1) ls_3_1) (StdPSt.appPIO (StdFunc.seq (_predefined._Cons (StdControl.setControlLooks (_predefined._Cons (_Tuple3 custom_7_3 False (_Tuple2 True (select _x_7_2::_Tuple2 0))) _predefined._Nil)) (_predefined._Cons (StdControl.setControlViewDomain custom_7_3 newDomain_7_1) (_predefined._Cons (<{FilteredListBox._if;180;19_122}> (<{StdInt.==_16}> delta_7_7 0) custom_7_3 delta_7_7) _predefined._Nil)))) (select _x_7_5::_Tuple2 1)))) ) ) ) ) (FilteredListBox.FInCloseAllItems -> case _x_1 (_Tuple2 _x_2_0 ps_2_1 -> case _x_2_0 (_Tuple2 listboxState_3_0 ls_3_1 -> case listboxState_3_0 (FilteredListBox._FilteredListBoxState items_4_0 selection_4_1 listbox_4_2 lineHeight_4_3 initHeight_4_4 pen_4_5 ifilter_4_6 aitems_4_7 domain_4_8 -> let _x_5_0 = FilteredListBox.calcControlDomain_50 pen_4_5 _predefined._Nil ps_2_1, newDomain_5_1 = select _x_5_0::_Tuple2 0, _x_5_2 = FilteredListBox.customlook (update (update listboxState_3_0::FilteredListBox._FilteredListBoxState [0:_predefined._Nil,1:_predefined._Nil,7:_predefined._Nil])::FilteredListBox._FilteredListBoxState [8:newDomain_5_1]) in _Tuple2 FilteredListBox.FOutCloseAllItems (_Tuple2 (_Tuple2 (select _x_5_2::_Tuple2 1) ls_3_1) (StdPSt.appPIO (StdFunc.seq (_predefined._Cons (StdControl.setControlViewDomain (select listbox_4_2::FilteredListBox._FilteredListBoxId 0) newDomain_5_1) (_predefined._Cons (StdControl.setControlLooks (_predefined._Cons (_Tuple3 (select listbox_4_2::FilteredListBox._FilteredListBoxId 0) True (_Tuple2 True (select _x_5_2::_Tuple2 0))) _predefined._Nil)) _predefined._Nil))) (select _x_5_0::_Tuple2 1)))) ) ) ) (FilteredListBox.FInSetPen newpen_1_0 -> case _x_1 (_Tuple2 _x_2_0 ps_2_1 -> case _x_2_0 (_Tuple2 listboxState_3_0 ls_3_1 -> case listboxState_3_0 (FilteredListBox._FilteredListBoxState items_4_0 selection_4_1 listbox_4_2 lineHeight_4_3 initHeight_4_4 pen_4_5 ifilter_4_6 aitems_4_7 domain_4_8 -> let pen_5_0 = FilteredListBox.removeDupAtt (<{StdList.++}> newpen_1_0 pen_4_5), _x_5_1 = FilteredListBox.calcControlDomain_50 pen_5_0 items_4_0 ps_2_1, _x_5_2::I = ioutil.accScreenPicture_21 (FilteredListBox.liheights_45 pen_5_0) (select _x_5_1::_Tuple2 1), _x_5_3 = select _x_5_2::_Tuple2 0, lineHeight_5_4 = select _x_5_3::_Tuple2 0, newDomain_5_5 = select _x_5_1::_Tuple2 0, _x_5_6 = FilteredListBox.customlook (update listboxState_3_0::FilteredListBox._FilteredListBoxState [3:lineHeight_5_4,4:select _x_5_3::_Tuple2 1,5:pen_5_0,8:newDomain_5_5]) in _Tuple2 FilteredListBox.FOutSetPen (_Tuple2 (_Tuple2 (select _x_5_6::_Tuple2 1) ls_3_1) (StdPSt.appPIO (StdFunc.seq (_predefined._Cons (StdControl.setControlViewDomain (select listbox_4_2::FilteredListBox._FilteredListBoxId 0) newDomain_5_5) (_predefined._Cons (StdControl.setControlLooks (_predefined._Cons (_Tuple3 (select listbox_4_2::FilteredListBox._FilteredListBoxId 0) True (_Tuple2 True (select _x_5_6::_Tuple2 0))) _predefined._Nil)) (_predefined._Cons (StdControl.setControlScrollFunction (select listbox_4_2::FilteredListBox._FilteredListBoxId 0) StdIOCommon.Vertical (ioutil.altScrollFunction StdIOCommon.Vertical lineHeight_5_4)) _predefined._Nil)))) (select _x_5_2::_Tuple2 1)))) ) ) ) (FilteredListBox.FInGetPen -> case _x_1 (_Tuple2 _x_2_0 ps_2_1 -> case _x_2_0 (_Tuple2 listboxState_3_0 ls_3_1 -> case listboxState_3_0 (FilteredListBox._FilteredListBoxState items_4_0 selection_4_1 listbox_4_2 lineHeight_4_3 initHeight_4_4 pen_4_5 ifilter_4_6 aitems_4_7 domain_4_8 -> _Tuple2 (FilteredListBox.FOutGetPen pen_4_5) (_Tuple2 (_Tuple2 listboxState_3_0 ls_3_1) ps_2_1)) ) ) ) 
<{FilteredListBox._if;180;19_122}> !_x_0::B custom_1 delta_2::I = case _x_0 (True -> StdFunc.id) (_ -> StdControl.moveControlViewFrame custom_1 (StdIOBasic._Vector2 0 delta_2))
FilteredListBox.imp_46 selection_0 items_1 listbox_2 penAtts_3 listboxAtts_4 lineHeight_5::I initHeight_6::I domain_7 = let _x_1_0 = FilteredListBox.customlook (FilteredListBox._FilteredListBoxState items_1 selection_0 listbox_2 lineHeight_5 initHeight_6 penAtts_3 StdFunc.id items_1 domain_7) in StdIOBasic._AddLS (select _x_1_0::_Tuple2 1) (<{StdIOBasic.:+:}> (StdControlDef.CompoundControl StdIOBasic.NilLS (_predefined._Cons (StdControlDef.ControlId (select listbox_2::FilteredListBox._FilteredListBoxId 0)) (_predefined._Cons (StdControlDef.ControlItemSpace 0 0) (_predefined._Cons (StdControlDef.ControlHScroll (ioutil.altScrollFunction StdIOCommon.Horizontal 10)) (_predefined._Cons (StdControlDef.ControlVScroll (ioutil.altScrollFunction StdIOCommon.Vertical lineHeight_5)) (_predefined._Cons (StdControlDef.ControlViewDomain domain_7) (_predefined._Cons (StdControlDef.ControlLook True (select _x_1_0::_Tuple2 0)) listboxAtts_4))))))) (StdReceiverDef.Receiver2 (select listbox_2::FilteredListBox._FilteredListBoxId 1) FilteredListBox.receiver_49 _predefined._Nil))
FilteredListBox.isListBoxControlAttribute_47::B !_x_0 = case _x_0 (StdControlDef.ControlFunction _x_1_0 -> True) (StdControlDef.ControlHide -> True) (StdControlDef.ControlPos _x_1_0 -> True) (StdControlDef.ControlPen _x_1_0 -> True) (StdControlDef.ControlSelectState _x_1_0 -> True) (StdControlDef.ControlViewSize _x_1_0 -> True) (StdControlDef.ControlOuterSize _x_1_0 -> True) (StdControlDef.ControlResize _x_1_0 -> True) (StdControlDef.ControlMouse _x_1_0 _x_1_1 _x_1_2 -> True) (StdControlDef.ControlKeyboard _x_1_0 _x_1_1 _x_1_2 -> True) (_ -> False)
FilteredListBox.toLBCA_48 !_x_0 = case _x_0 (StdControlDef.ControlFunction f_1_0 -> StdControlDef.ControlFunction f_1_0) (StdControlDef.ControlHide -> StdControlDef.ControlHide) (StdControlDef.ControlPos p_1_0 -> StdControlDef.ControlPos p_1_0) (StdControlDef.ControlPen p_1_0 -> StdControlDef.ControlPen p_1_0) (StdControlDef.ControlSelectState p_1_0 -> StdControlDef.ControlSelectState p_1_0) (StdControlDef.ControlViewSize p_1_0 -> StdControlDef.ControlViewSize p_1_0) (StdControlDef.ControlOuterSize p_1_0 -> StdControlDef.ControlOuterSize p_1_0) (StdControlDef.ControlResize p_1_0 -> StdControlDef.ControlResize p_1_0) (StdControlDef.ControlMouse a_1_0 b_1_1 c_1_2 -> StdControlDef.ControlMouse a_1_0 b_1_1 c_1_2) (StdControlDef.ControlKeyboard a_1_0 b_1_1 c_1_2 -> StdControlDef.ControlKeyboard a_1_0 b_1_1 c_1_2) (_ -> StdMisc.abort "FilteredListBox:toLBCA: unsupported ControlAttribute")
FilteredListBox.controlToHandles_9 !_x_0 !ps_1 = case _x_0 (FilteredListBox.FilteredListBoxControl items_1_0 selection_1_1 listbox_1_2 attrs_1_3 -> let !_x_2_0 = ioutil.accScreenPicture_21 (FilteredListBox.liheights_45 penAtts_2_4) ps_1, !_x_2_1 = FilteredListBox.calcControlDomain_50 penAtts_2_4 items_1_0 (select _x_2_0::_Tuple2 1), Controls_2_2 = <{StdControlClass.Controls;}> (StdControlClass.controlToHandles_14 (<{StdControlClass.Controls;}> StdControlClass.controlToHandles_6 StdControlClass.getControlType_7)) (StdControlClass.getControlType_15 (<{StdControlClass.Controls;}> StdControlClass.controlToHandles_6 StdControlClass.getControlType_7)), Controls_2_3 = <{StdControlClass.Controls;}> StdControlReceiver.controlToHandles_2 StdControlReceiver.getControlType_3, penAtts_2_4 = StdList.flatten (StdList.map StdControlAttribute.getControlPenAtt (StdList.filter StdControlAttribute.isControlPen attrs_1_3)), _x_2_5 = select _x_2_0::_Tuple2 0 in StdControlClass.controlToHandles_0 (<{StdControlClass.Controls;}> (StdControlClass.controlToHandles_8 Controls_2_2 Controls_2_3) (StdControlClass.getControlType_9 Controls_2_2 Controls_2_3)) (FilteredListBox.imp_46 selection_1_1 items_1_0 listbox_1_2 penAtts_2_4 (StdList.map FilteredListBox.toLBCA_48 (StdList.filter FilteredListBox.isListBoxControlAttribute_47 attrs_1_3)) (select _x_2_5::_Tuple2 0) (select _x_2_5::_Tuple2 1) (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
FilteredListBox.getControlType_10 _x_0 = "FilteredListBoxControl"
<{FilteredListBox.TD;FilteredListBoxId}> _x_0::B = _predefined._Nil
<{FilteredListBox.TD;FilteredMessageIn}> _x_0::B = _predefined._Nil
<{FilteredListBox.TD;FilteredMessageOut}> _x_0::B = _predefined._Nil
<{FilteredListBox.TD;FilteredListBoxItem}> _x_0::B = _predefined._Nil
<{FilteredListBox.TD;FilteredListBoxControl}> _x_0::B = _predefined._Nil
<{FilteredListBox.TD;FilteredListBoxState}> _x_0::B = _predefined._Nil

:: FilteredListBox.FilteredListBoxControl = FilteredListBox.FilteredListBoxControl a1 a2 a3 a4
:: FilteredListBox.FilteredMessageIn = FilteredListBox.FInGetSelection | FilteredListBox.FInSetSelection a1 | FilteredListBox.FInGetItems | FilteredListBox.FInAppendItems a1 | FilteredListBox.FInCloseAllItems | FilteredListBox.FInSetPen a1 | FilteredListBox.FInGetPen | FilteredListBox.FInSetFilter a1 | FilteredListBox.FInGetFilter
:: FilteredListBox.FilteredMessageOut = FilteredListBox.FOutGetSelection a1 | FilteredListBox.FOutSetSelection | FilteredListBox.FOutGetItems a1 | FilteredListBox.FOutAppendItems | FilteredListBox.FOutCloseAllItems | FilteredListBox.FOutSetPen | FilteredListBox.FOutGetPen a1 | FilteredListBox.FOutSetFilter | FilteredListBox.FOutGetFilter a1

|| Converted Records
:: FilteredListBox._FilteredListBoxId = {!FilteredListBox.fcontrolId, !FilteredListBox.freceiverId}

:: FilteredListBox._FilteredListBoxState = {!FilteredListBox.items, !FilteredListBox.selection, !FilteredListBox.listboxId, !FilteredListBox.lineHeight::I, !FilteredListBox.initHeight::I, !FilteredListBox.pen, !FilteredListBox.ifilter, !FilteredListBox.aitems, !FilteredListBox.domain}

:: <{FilteredListBox.gEq_s;}> = {!FilteredListBox.gEq_s}

:: <{FilteredListBox.gEq_ss;}> = {!FilteredListBox.gEq_ss}

:: <{FilteredListBox.gEq_sss;}> = {!FilteredListBox.gEq_sss}

:: <{FilteredListBox.gEq_ssss;}> = {!FilteredListBox.gEq_ssss}

:: <{FilteredListBox.gEq_sssss;}> = {!FilteredListBox.gEq_sssss}

:: <{FilteredListBox.gEq_ssssss;}> = {!FilteredListBox.gEq_ssssss}

:: <{FilteredListBox.gEq_sssssss;}> = {!FilteredListBox.gEq_sssssss}

:: <{FilteredListBox.gEq_ssssssss;}> = {!FilteredListBox.gEq_ssssssss}

:: <{FilteredListBox.gEq_sssssssss;}> = {!FilteredListBox.gEq_sssssssss}

:: <{FilteredListBox.bimap_s;}> = {FilteredListBox.bimap_s}

:: <{FilteredListBox.bimap_ss;}> = {FilteredListBox.bimap_ss}

:: <{FilteredListBox.bimap_sss;}> = {FilteredListBox.bimap_sss}

