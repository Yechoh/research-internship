.comp 920 000111010001
.start _nostart_
.depend "StdMisc" "20170313110416"
.depend "StdString" "20170313110416"
.depend "StdOverloaded" "20170313110416"
.depend "_SystemDynamic" "20170313110405"
.depend "StdError" "20170123155353"
.module m_StdError "StdError" "20170123155353"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdMisc
.implab e_StdMisc_sabort
.export e_StdError_dOk
.desc e_StdError_dOk _hnf _add_arg 1 0 "Ok"
.export e_StdError_dError
.desc e_StdError_dError _hnf _add_arg 1 0 "Error"
.export e_StdError_sTD;Error
.export e_StdError_eaTD;Error
.descexp e_StdError_dTD;Error e_StdError_nTD;Error e_StdError_lTD;Error 1 0 "TD;Error"
.o 2 0
e_StdError_lTD;Error
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_StdError_eaTD;Error
.n 1 e_StdError_dTD;Error e_StdError_eaTD;Error
.o 1 0
e_StdError_nTD;Error
	push_node _cycle_in_spine 1
.o 2 0
e_StdError_eaTD;Error
.o 2 0
e_StdError_sTD;Error
.o 2 0
s3
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.export e_StdError_sfromOk
.descexp e_StdError_dfromOk e_StdError_nfromOk e_StdError_lfromOk 1 0 "fromOk"
.o 2 0
e_StdError_lfromOk
	pop_a 1
.d 1 0
	jmp ea2
.n 1 e_StdError_dfromOk _
.o 1 0
e_StdError_nfromOk
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea2
.o 1 0
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 1 0
ea2
	jsr_eval 0
.o 1 0
e_StdError_sfromOk
.o 1 0
s2
	eq_desc e_StdError_dOk 1 0
	jmp_true case.1
	jmp case.2
case.1
	repl_args 1 1
	jmp_eval
case.2
	buildAC "fromOk (StdError.icl): the value was an error value"
	updatepop_a 0 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
.d 1 0
	rtn
.export e_StdError_sisError
.descexp e_StdError_disError e_StdError_nisError e_StdError_lisError 1 0 "isError"
.o 2 0
e_StdError_lisError
	pop_a 1
.d 1 0
	jsr ea1
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.n 1 e_StdError_disError
.o 1 0
e_StdError_nisError
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea1
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea1
	jsr_eval 0
.o 1 0
e_StdError_sisError
.o 1 0
s1
	eq_desc e_StdError_dError 1 0
	pop_a 1
.d 0 1 b
	rtn
