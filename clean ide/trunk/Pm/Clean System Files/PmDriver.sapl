|| ?module? PmDriver


PmDriver.clear_94 !ps_0 = let _x_1_0 = IdeState.getCurrentMeth ps_0, ps_1_1 = select _x_1_0::_Tuple2 1 in <{PmDriver._c;1641;7_212}> (select _x_1_0::_Tuple2 0) ps_1_1
<{PmDriver._c;1641;7_212}> !_x_0 !ps_1 = case _x_0 (PmEnvironment.CompileAsync _x_1_0 -> let _x_2_0 = IdeState.getCompilerProcessIds ps_1 in select (PmCleanSystem.ClearCompilerCaches (select _x_2_0::_Tuple2 0) (select _x_2_0::_Tuple2 1))::_Tuple2 1) (_ -> let _x_1_0 = IdeState.getCurrentComp ps_1, _x_1_1 = IdeState.getStup (select _x_1_0::_Tuple2 1) in select (PmCleanSystem.ClearCompilerCache (select _x_1_0::_Tuple2 0) (select _x_1_1::_Tuple2 0) (select _x_1_1::_Tuple2 1))::_Tuple2 1)
<{PmDriver.ClearCompilerCache`}> !ps_0 = ps_0
PmDriver.get_project_and_environment_paths !project_0 !ps_1 = let _x_1_0 = IdeState.getCurrentPaths ps_1 in <{_Tuple2!3}> (UtilStrictLists.AppendLists (PmProject.PR_GetPaths project_0) (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
<{PmDriver.getFICache`}> ps_0 = _Tuple2 PmFileInfo.FI_EmptyCache (select (IdeState.getFICache ps_0)::_Tuple2 1)
PmDriver.level3_114::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_113 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_114 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.level3_112::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_111 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_112 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
<{PmDriver.c;1627;29_91}> !g_l_0 = <{PmDriver.g_c1;1627;40_214}> g_l_0
<{PmDriver.g_c1;1627;40_214}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;1627;40_213}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{PmDriver.g_c2;1627;40_213}> !g_h_0 g_t_1 = case g_h_0 (_Tuple3 _x_1_0 p_1_1 _x_1_2 -> _predefined._Cons (<{StdString.+++_11}> "Also found at: '" (<{StdString.+++_11}> p_1_1 "'.")) (<{PmDriver.c;1627;29_91}> g_t_1)) (_ -> <{PmDriver.c;1627;29_91}> g_t_1)
<{PmDriver.c;1629;31_92}> !g_l_0 = <{PmDriver.g_c1;1629;45_216}> g_l_0
<{PmDriver.g_c1;1629;45_216}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;1629;45_215}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{PmDriver.g_c2;1629;45_215}> !g_h_0 g_t_1 = case g_h_0 (PmDirCache.Warn n_1_0 p_1_1 c_1_2 -> _predefined._Cons (_predefined._Cons (<{StdString.+++_11}> "Warning: Multiple file instances: '" (<{StdString.+++_11}> n_1_0 "'.")) (_predefined._Cons (<{StdString.+++_11}> "First found at: '" (<{StdString.+++_11}> p_1_1 "'.")) (<{PmDriver.c;1627;29_91}> c_1_2))) (<{PmDriver.c;1629;31_92}> g_t_1)) (_ -> <{PmDriver.c;1629;31_92}> g_t_1)
<{PmDriver.c;1632;98_93}> !g_l_0 = <{PmDriver.g_c1;1632;105_217}> g_l_0
<{PmDriver.g_c1;1632;105_217}> !g_l_0 = case g_l_0 (_predefined._Cons err_1_0 g_t_1_1 -> _predefined._Cons (<{StdString.+++_11}> "Warning: Unable to setup directory cache: '" (<{StdString.+++_11}> err_1_0 "'.")) (<{PmDriver.c;1632;98_93}> g_t_1_1)) (_ -> _predefined._Nil)
PmDriver.HandleDCErrors !_x_0::B !_x_1 !_x_2 !ps_3 = case _x_1 (_predefined._Nil -> case _x_2 (_predefined._Nil -> ps_3) (_ -> PmDriver.verbi_111 _x_0 (messwin.Level3 (StdList.flatten (<{PmDriver.c;1629;31_92}> _x_2))) ps_3)) (_ -> PmDriver.verbi_113 _x_0 (messwin.Level3 (<{PmDriver.c;1632;98_93}> _x_1)) ps_3)
PmDriver.typewin_81 !module_name_0 !strings_1 !ps_2 = let _x_1_0 = IdeState.getInteract ps_2 in typeatt.update_type_window (select _x_1_0::_Tuple2 0) module_name_0 strings_1 (select _x_1_0::_Tuple2 1)
PmDriver.CTPMcommon !module_name_0 !project_1 !ps_2 = let !srcpaths_1_0 = UtilStrictLists.Concat (PmProject.PR_GetPaths project_1) (select _x_1_1::_Tuple2 0), _x_1_1 = IdeState.getCurrentPaths ps_2, ps_1_2 = select _x_1_1::_Tuple2 1, _x_1_3 = IdeState.getStup ps_1_2, ps_1_4 = select _x_1_3::_Tuple2 1, _x_1_5 = IdeState.getPrefs ps_1_4, _x_1_6 = IdeState.getCurrentComp (select _x_1_5::_Tuple2 1), ao_1_7 = PmProject.PR_GetApplicationOptions project_1, modinfo_1_8 = PmProject.PR_GetModuleInfo module_name_0 project_1, _x_1_9 = select _x_1_5::_Tuple2 0, compopts_1_10 = select _x_1_9::PmPrefs._Prefs 11 in _Tuple10 True (select _x_1_6::_Tuple2 0) True errwin.updateErrorWindow (PmDriver.typewin_81 module_name_0) srcpaths_1_0 (PmCleanSystem._ProjectCompilerOptions (select ao_1_7::PmTypes._ApplicationOptions 14) (select ao_1_7::PmTypes._ApplicationOptions 16) (select ao_1_7::PmTypes._ApplicationOptions 19) (select ao_1_7::PmTypes._ApplicationOptions 18) (<{PmDriver._c;1278;22_218}> (select (PmProject.PR_GetLinkOptions project_1)::PmTypes._LinkOptions 2))) (<{PmDriver._if;1272;35_219}> (Data.Maybe.isJust modinfo_1_8) modinfo_1_8 compopts_1_10) (select _x_1_3::_Tuple2 0) (select _x_1_6::_Tuple2 1)
<{PmDriver._if;1272;35_219}> !_x_0::B modinfo_1 compopts_2 = case _x_0 (True -> select (Data.Maybe.fromJust modinfo_1)::PmTypes._ModInfo 1) (_ -> compopts_2)
<{PmDriver._c;1278;22_218}>::B !_x_0 = case _x_0 (PmTypes.LM_Static -> False) (PmTypes.LM_Dynamic -> True) 
PmDriver.ShowInfoAndCompile !compileOrCheckSyntax_0 !module_name_1 !project_2 !ps_3 = PmDriver.CTPMcommon module_name_1 project_2 (messwin.showInfo (messwin.Level2 (<{StdString.+++_11}> (<{PmDriver._if;1260;44_220}> (<{PmCleanSystem.==_23}> compileOrCheckSyntax_0 PmCleanSystem.Compilation)) (<{StdString.+++_11}> module_name_1 "'."))) ps_3)
<{PmDriver._if;1260;44_220}> !_x_0::B = case _x_0 (True -> "Compiling '") (_ -> "Checking '")
PmDriver.get_use_compiler_process_ids_and_compiler_process_ids !ps_0 = let _x_1_0 = IdeState.getCurrentMeth ps_0, _x_1_1 = IdeState.getCompilerProcessIds (select _x_1_0::_Tuple2 1) in <{_Tuple3!7}> (<{PmDriver._c;1230;34_221}> (select _x_1_0::_Tuple2 0)) (select _x_1_1::_Tuple2 0) (select _x_1_1::_Tuple2 1)
<{PmDriver._c;1230;34_221}>::B !_x_0 = case _x_0 (PmEnvironment.CompileAsync _x_1_0 -> True) (_ -> False)
PmDriver.AccTuple4_115 f_0 s1_1 = let _x_1_0 = f_0 s1_1 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.set_82 !defp_0 !ao_1 !ps_2 = let _x_1_0 = IdeState.getProject ps_2 in IdeState.setProject (PmProject.PR_SetPaths False defp_0 ao_1 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
PmDriver.NewPathsDialog_83 !module_name_0 !path_1 !project_2 !ps_3 = let _x_1_0 = IdeState.getStup ps_3, ps_1_1 = select _x_1_0::_Tuple2 1, _x_1_2 = IdeState.getCurrentPaths ps_1_1, ps_1_3 = select _x_1_2::_Tuple2 1, _x_1_4 = IdeState.getProject ps_1_3, line_1_5 = <{StdString.+++_11}> "Where is '" (<{StdString.+++_11}> path_1 (<{StdString.+++_11}> "' imported by '" (<{StdString.+++_11}> module_name_0 "'"))), ap_1_6 = select _x_1_0::_Tuple2 0, pp_1_7 = PmProject.PR_GetRootDir project_2, prjpaths_1_8 = PmProject.PR_GetPaths project_2, defp_1_9 = select _x_1_2::_Tuple2 0, ps_1_10 = select _x_1_4::_Tuple2 1, ps_1_11 = IdeState.setProject project_2 ps_1_10, ps_1_12 = PmDialogues.doPathsDialog line_1_5 ap_1_6 pp_1_7 prjpaths_1_8 (PmDriver.set_82 defp_1_9) ps_1_11, _x_1_13 = IdeState.getProject ps_1_12, _x_1_14 = IdeState.getCurrentPaths (select _x_1_13::_Tuple2 1), project_1_15 = select _x_1_13::_Tuple2 0 in _Tuple3 (IdeState.setProject (select _x_1_4::_Tuple2 0) (select _x_1_14::_Tuple2 1)) project_1_15 (PmDriver._f222_222 (StdBool.not (UtilStrictLists.EQStrings (UtilStrictLists.SortStrings defp_1_9) (UtilStrictLists.SortStrings (select _x_1_14::_Tuple2 0)))) prjpaths_1_8 project_1_15)
PmDriver._f222_222::B !_x_0::B prjpaths_1 project_2 = case _x_0 (True -> True) (_ -> StdBool.not (UtilStrictLists.EQStrings (UtilStrictLists.SortStrings prjpaths_1) (UtilStrictLists.SortStrings (PmProject.PR_GetPaths project_2))))
PmDriver.anon_84 !abcpath_0 !abcdate_1 !abcoptions_2 !version_3::I !stack_4::B !sys_5::B !finfo_6 = update finfo_6::PmFileInfo._FileInfo [1:abcpath_0,3:sys_5,4:stack_4,5:version_3,6:abcoptions_2,7:abcdate_1]
PmDriver.find_definition_module !module_name_0 !dircache_1 !files_2 = let _x_1_0::B = PmDirCache.DC_HSearch module_name_0 ".dcl" dircache_1 files_2, ok_1_1 = select _x_1_0::_Tuple5 0 in case ok_1_1 (True -> _Tuple6 ok_1_1 ".dcl" (select _x_1_0::_Tuple5 1) (select _x_1_0::_Tuple5 2) (select _x_1_0::_Tuple5 3) (select _x_1_0::_Tuple5 4)) (False -> let dircache_3_0::B = select _x_1_0::_Tuple5 3, files_3_1 = select _x_1_0::_Tuple5 4, _x_3_2 = PmDirCache.DC_HSearch module_name_0 ".hs" dircache_3_0 files_3_1, ok_3_3 = select _x_3_2::_Tuple5 0 in case ok_3_3 (True -> _Tuple6 ok_3_3 ".hs" (select _x_3_2::_Tuple5 1) (select _x_3_2::_Tuple5 2) (select _x_3_2::_Tuple5 3) (select _x_3_2::_Tuple5 4)) (False -> let dircache_5_0::B = select _x_3_2::_Tuple5 3, files_5_1 = select _x_3_2::_Tuple5 4, _x_5_2 = PmDirCache.DC_HSearch module_name_0 ".lhs" dircache_5_0 files_5_1, ok_5_3 = select _x_5_2::_Tuple5 0 in case ok_5_3 (True -> _Tuple6 ok_5_3 ".lhs" (select _x_5_2::_Tuple5 1) (select _x_5_2::_Tuple5 2) (select _x_5_2::_Tuple5 3) (select _x_5_2::_Tuple5 4)) (False -> _Tuple6 ok_5_3 ".dcl" (select _x_5_2::_Tuple5 1) (select _x_5_2::_Tuple5 2) (select _x_5_2::_Tuple5 3) (select _x_5_2::_Tuple5 4)) ) ) 
PmDriver.LookupModulePaths !_x_0 !dc_1 !files_2 = case _x_0 (<{_predefined._!Nil!}> -> <{_Tuple4!8}> True <{_predefined._!Nil}> dc_1 files_2) (<{_predefined._!Cons!}> mn_1_0 ms_1_1 -> let _x_2_0 = PmDriver.find_definition_module mn_1_0 dc_1 files_2 in case (StdBool.not (select _x_2_0::_Tuple6 0)) (True -> <{_Tuple4!8}> False (<{_predefined._!Cons}> (PmTypes._ModuleDirAndName "" mn_1_0) <{_predefined._!Nil}>) (select _x_2_0::_Tuple6 4) (select _x_2_0::_Tuple6 5)) (False -> let dc_4_0::B = select _x_2_0::_Tuple6 4, files_4_1 = select _x_2_0::_Tuple6 5, _x_4_2 = PmDriver.LookupModulePaths ms_1_1 dc_4_0 files_4_1, ok_4_3 = select _x_4_2::_Tuple4 0 in case (StdBool.not ok_4_3) (True -> <{_Tuple4!8}> ok_4_3 (select _x_4_2::_Tuple4 1) (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) (False -> <{_Tuple4!8}> ok_4_3 (<{_predefined._!Cons}> (PmTypes._ModuleDirAndName (select _x_2_0::_Tuple6 2) (StdPathname.RemoveSuffix mn_1_0)) (select _x_4_2::_Tuple4 1)) (select _x_4_2::_Tuple4 2) (select _x_4_2::_Tuple4 3)) ) ) 
PmDriver.AccTuple4_188 _x_0 dc_1 s1_2 = let _x_1_0 = PmDriver.LookupModulePaths _x_0 dc_1 s1_2 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.ProcessCompilerMsg !cstate_0 !compileOrCheckSyntax_1 !_x_2 !mdn_3 !abcpath_4 !_x_5 !fileinfo_6 !dircache_7 !abccache_8 !project_9 !ps_10 = case _x_5 (PmCleanSystem.Patherror pathname_1_0 -> let _x_2_0 = IdeState.getInteract ps_10 in case (StdBool.not (select _x_2_0::_Tuple2 0)) (True -> _Tuple2 cstate_0 (_Tuple9 fileinfo_6 abccache_8 project_9 False False abcpath_4 <{_predefined._!Nil}> dircache_7 (select _x_2_0::_Tuple2 1))) (False -> let ps_4_0::B = select _x_2_0::_Tuple2 1, _x_4_1 = PmDriver.NewPathsDialog_83 (select mdn_3::PmTypes._ModuleDirAndName 1) pathname_1_0 project_9 ps_4_0, new_4_2 = select _x_4_1::_Tuple3 2 in case new_4_2 (True -> let _x_6_0 = <{PmDriver._c;1304;35_223}> cstate_0 ps_6_9 errs_6_11 warns_6_10, project_6_1 = select _x_4_1::_Tuple3 1, ps_6_2 = select _x_4_1::_Tuple3 0, _x_6_3 = PmDriver.get_project_and_environment_paths project_6_1 ps_6_2, srcpaths_6_4 = select _x_6_3::_Tuple2 0, ps_6_5 = select _x_6_3::_Tuple2 1, _x_6_6 = StdPStClass.accFiles_8 (PmDirCache.DC_Setup srcpaths_6_4) ps_6_5, _x_6_7 = select _x_6_6::_Tuple2 0, _x_6_8 = PmDriver.CompileTheProjectModule compileOrCheckSyntax_1 mdn_3 (StdPathname.MakeFullPathname (select mdn_3::PmTypes._ModuleDirAndName 0) (<{StdString.+++_11}> (select mdn_3::PmTypes._ModuleDirAndName 1) ".icl")) fileinfo_6 abccache_8 project_6_1 (select _x_6_7::_Tuple3 2) (select _x_6_0::_Tuple2 1), ps_6_9 = select _x_6_6::_Tuple2 1, warns_6_10 = select _x_6_7::_Tuple3 1, errs_6_11 = select _x_6_7::_Tuple3 0 in _Tuple2 (select _x_6_0::_Tuple2 0) (_Tuple9 (select _x_6_8::_Tuple9 0) (select _x_6_8::_Tuple9 1) (select _x_6_8::_Tuple9 2) (select _x_6_8::_Tuple9 3) True (select _x_6_8::_Tuple9 5) (select _x_6_8::_Tuple9 6) (select _x_6_8::_Tuple9 7) (select _x_6_8::_Tuple9 8))) (False -> _Tuple2 cstate_0 (_Tuple9 fileinfo_6 abccache_8 (select _x_4_1::_Tuple3 1) False new_4_2 abcpath_4 <{_predefined._!Nil}> dircache_7 (select _x_4_1::_Tuple3 0))) ) ) (PmCleanSystem.SyntaxError -> _Tuple2 cstate_0 (_Tuple9 fileinfo_6 abccache_8 project_9 False False abcpath_4 <{_predefined._!Nil}> dircache_7 ps_10)) (PmCleanSystem.CompilerOK -> case (<{PmCleanSystem.==_23}> compileOrCheckSyntax_1 PmCleanSystem.SyntaxCheck) (True -> _Tuple2 cstate_0 (_Tuple9 fileinfo_6 abccache_8 project_9 True False "" <{_predefined._!Nil}> dircache_7 (select (IdeState.getCurrentVers ps_10)::_Tuple2 1))) (False -> let _x_3_0::B = IdeState.getCurrentVers ps_10, ps_3_1 = select _x_3_0::_Tuple2 1, _x_3_2 = StdPStClass.accFiles_8 (UtilIO.FModified abcpath_4) ps_3_1, abcdate_3_3 = select _x_3_2::_Tuple2 0, ps_3_4 = select _x_3_2::_Tuple2 1, _x_3_5 = StdPStClass.accFiles_8 (PmAbcMagic.ParseABCInfoAndDependencies abcpath_4 abcdate_3_3 abccache_8) ps_3_4, _x_3_6 = select _x_3_5::_Tuple2 0, _x_3_7 = select _x_3_6::_Tuple3 1, mods_3_8 = select _x_3_7::_Tuple5 0, ps_3_9 = select _x_3_5::_Tuple2 1, _x_3_10 = StdPStClass.accFiles_8 (PmDriver.AccTuple4_188 mods_3_8 dircache_7) ps_3_9, _x_3_11 = select _x_3_10::_Tuple2 0, ok_3_12 = select _x_3_11::_Tuple3 0 in case (StdBool.not ok_3_12) (True -> let _x_5_0 = select _x_3_6::_Tuple3 0 in _Tuple2 cstate_0 (_Tuple9 (PmFileInfo.FI_UpdateFileInfo (select mdn_3::PmTypes._ModuleDirAndName 1) (PmDriver.anon_84 abcpath_4 abcdate_3_3 (select _x_5_0::_Tuple4 3) (select _x_5_0::_Tuple4 2) (select _x_5_0::_Tuple4 1) (select _x_5_0::_Tuple4 0)) fileinfo_6) (select _x_3_6::_Tuple3 2) project_9 False False abcpath_4 <{_predefined._!Nil}> (select _x_3_11::_Tuple3 2) (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: Unable to find '" (<{StdString.+++_11}> (select (StdOverloadedList.Hd_101 (select _x_3_11::_Tuple3 1))::PmTypes._ModuleDirAndName 1) "'.")) _predefined._Nil)) (select _x_3_10::_Tuple2 1)))) (False -> let !project_5_0 = PmProject.PR_AddABCInfo mdn_3 (select _x_3_7::_Tuple5 3) (select _x_3_7::_Tuple5 4) _x_2 project_9, _x_5_1 = select _x_3_6::_Tuple3 0 in _Tuple2 cstate_0 (_Tuple9 (PmFileInfo.FI_UpdateFileInfo (select mdn_3::PmTypes._ModuleDirAndName 1) (PmDriver.anon_84 abcpath_4 abcdate_3_3 (select _x_5_1::_Tuple4 3) (select _x_5_1::_Tuple4 2) (select _x_5_1::_Tuple4 1) (select _x_5_1::_Tuple4 0)) fileinfo_6) (select _x_3_6::_Tuple3 2) project_5_0 ok_3_12 False abcpath_4 (select _x_3_11::_Tuple3 1) (select _x_3_11::_Tuple3 2) (select _x_3_10::_Tuple2 1))) ) ) 
PmDriver.CompileTheProjectModule !compileOrCheckSyntax_0 !mdn_1 !hierarchical_imp_pathname_2 !fileinfo_3 !abccache_4 !project_5 !dircache_6 !ps_7 = let _x_1_0 = PmDriver.ShowInfoAndCompile compileOrCheckSyntax_0 (select mdn_1::PmTypes._ModuleDirAndName 1) project_5 ps_7 in case (StdBool.not (select _x_1_0::_Tuple10 0)) (True -> _Tuple9 fileinfo_3 abccache_4 project_5 False False "" <{_predefined._!Nil}> dircache_6 (select _x_1_0::_Tuple10 9)) (False -> let co_3_0 = select _x_1_0::_Tuple10 7, _x_3_1 = PmDriver.get_use_compiler_process_ids_and_compiler_process_ids (select _x_1_0::_Tuple10 9), _x_3_2 = PmCleanSystem.Compile (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) (select _x_1_0::_Tuple10 1) (select _x_3_1::_Tuple3 0) (select _x_1_0::_Tuple10 2) (select _x_1_0::_Tuple10 3) (select _x_1_0::_Tuple10 4) compileOrCheckSyntax_0 mdn_1 hierarchical_imp_pathname_2 (select _x_1_0::_Tuple10 5) (select _x_1_0::_Tuple10 6) co_3_0 (select _x_1_0::_Tuple10 8) (select _x_3_1::_Tuple3 1) (select _x_3_1::_Tuple3 2) in select (PmDriver.ProcessCompilerMsg Data.Maybe.Nothing compileOrCheckSyntax_0 co_3_0 mdn_1 (select _x_3_2::_Tuple4 0) (select _x_3_2::_Tuple4 1) fileinfo_3 dircache_6 abccache_4 project_5 (IdeState.setCompilerProcessIds (select _x_3_2::_Tuple4 2) (select _x_3_2::_Tuple4 3)))::_Tuple2 1) 
<{PmDriver._c;1304;35_223}> !cstate_0 ps_1 errs_2 warns_3 = case cstate_0 (Data.Maybe.Nothing -> let _x_2_0 = IdeState.getPrefs ps_1 in _Tuple2 cstate_0 (PmDriver.HandleDCErrors (select (select _x_2_0::_Tuple2 0)::PmPrefs._Prefs 22) errs_2 warns_3 (select _x_2_0::_Tuple2 1))) (Data.Maybe.Just pinfo_1_0 -> let _x_2_0 = IdeState.getPrefs ps_1, _x_2_1 = PmCleanSystem.ExitCleanCompiler (_Tuple2 pinfo_1_0 (PmDriver.HandleDCErrors (select (select _x_2_0::_Tuple2 0)::PmPrefs._Prefs 22) errs_2 warns_3 (select _x_2_0::_Tuple2 1))) in _Tuple2 (Data.Maybe.Just (select _x_2_1::_Tuple2 0)) (select _x_2_1::_Tuple2 1)) 
PmDriver.CompileProjectModule !compileOrCheckSyntax_0 !imp_pathname_1 !project_2 !setproject_3 !ps_4 = let !_x_1_0 = IdeState.getABCCache (select _x_1_5::_Tuple2 1), !_x_1_1 = <{PmDriver.getFICache`}> (select _x_1_0::_Tuple2 1), !_x_1_2 = StdPStClass.accFiles_8 (PmDirCache.DC_Setup srcpaths_1_6) (select _x_1_1::_Tuple2 1), !ps_1_3 = PmDriver.HandleDCErrors (select (select _x_1_9::_Tuple2 0)::PmPrefs._Prefs 22) (select _x_1_8::_Tuple3 0) (select _x_1_8::_Tuple3 1) (select _x_1_9::_Tuple2 1), !_x_1_4 = PmDriver.CompileTheProjectModule compileOrCheckSyntax_0 (select _x_1_7::_Tuple2 0) (select _x_1_7::_Tuple2 1) (select _x_1_1::_Tuple2 0) (select _x_1_0::_Tuple2 0) project_2 (select _x_1_8::_Tuple3 2) ps_1_3, _x_1_5 = PmDriver.get_project_and_environment_paths project_2 (<{PmDriver.ClearCompilerCache`}> ps_4), srcpaths_1_6 = select _x_1_5::_Tuple2 0, _x_1_7 = PmPath.determine_dir_and_filename imp_pathname_1 srcpaths_1_6, _x_1_8 = select _x_1_2::_Tuple2 0, _x_1_9 = IdeState.getPrefs (select _x_1_2::_Tuple2 1) in setproject_3 (select _x_1_4::_Tuple9 3) (select _x_1_4::_Tuple9 4) (select _x_1_4::_Tuple9 2) (IdeState.setFICache (select _x_1_4::_Tuple9 0) (IdeState.setABCCache (select _x_1_4::_Tuple9 1) (select _x_1_4::_Tuple9 8)))
PmDriver.get_neverTimeProfile_option !module_name_0 !project_1 !ps_2 = <{PmDriver._c;278;7_224}> (PmProject.PR_GetModuleInfo module_name_0 project_1) ps_2
<{PmDriver._c;278;7_224}> !_x_0 !ps_1 = case _x_0 (Data.Maybe.Just modinfo_1_0 -> <{_Tuple2!3}> (select (select modinfo_1_0::PmTypes._ModInfo 1)::PmCompilerOptions._CompilerOptions 1) ps_1) (_ -> let _x_1_0 = IdeState.getPrefs ps_1 in <{_Tuple2!3}> (select (select (select _x_1_0::_Tuple2 0)::PmPrefs._Prefs 11)::PmCompilerOptions._CompilerOptions 1) (select _x_1_0::_Tuple2 1))
PmDriver.GenCodeTheProjectModule !outofdate_0::B !sys_1::B !genAsmOrCode_2 !mdn_3 !abc_path_4 !abccache_5 !fileinfo_6 !project_7 !ps_8 = case (StdBool.not outofdate_0) (True -> let _x_2_0 = IdeState.getCurrentProc ps_8, _x_2_1 = PmFileInfo.FI_GetFileInfo (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) (select _x_2_0::_Tuple2 0) mdn_3 abccache_5 fileinfo_6 (select _x_2_0::_Tuple2 1), _x_2_2 = select _x_2_1::_Tuple2 0 in _Tuple6 (select _x_2_1::_Tuple2 1) (select _x_2_2::_Tuple3 1) (select _x_2_2::_Tuple3 2) project_7 True (select (select _x_2_2::_Tuple3 0)::PmFileInfo._FileInfo 2)) (False -> let module_name_2_0::B = select mdn_3::PmTypes._ModuleDirAndName 1, _x_2_1::B = IdeState.getCurrentProc ps_8, proc_2_2 = select _x_2_1::_Tuple2 0, ps_2_3 = select _x_2_1::_Tuple2 1, _x_2_4 = PmFileInfo.FI_GetFileInfo (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) proc_2_2 mdn_3 abccache_5 fileinfo_6 ps_2_3, ps_2_5 = select _x_2_4::_Tuple2 1, ps_2_6 = messwin.showInfo (messwin.Level2 (<{StdString.+++_11}> "Generating code for '" (<{StdString.+++_11}> module_name_2_0 "'."))) ps_2_5, _x_2_7 = IdeState.getStup ps_2_6, ps_2_8 = select _x_2_7::_Tuple2 1, _x_2_9::B = IdeState.getCurrentCgen ps_2_8, cgen_2_10 = select _x_2_9::_Tuple2 0, ps_2_11 = select _x_2_9::_Tuple2 1, _x_2_12::B = PmDriver.get_use_compiler_process_ids_and_compiler_process_ids ps_2_11, use_compiler_process_ids_2_13 = select _x_2_12::_Tuple3 0, obj_path_2_14 = PmPath.ModuleDirAndNameToObjSystemPathname proc_2_2 mdn_3, ao_2_15 = PmProject.PR_GetApplicationOptions project_7, timeprofile_2_16 = PmDriver._f225_225 (select ao_2_15::PmTypes._ApplicationOptions 16) neverTimeProfile_2_25, cgo_2_17 = PmProject.PR_GetCodeGenOptions project_7, startupdir_2_18 = select _x_2_7::_Tuple2 0, compiler_process_ids_2_19 = select _x_2_12::_Tuple3 1, ps_2_20 = select _x_2_12::_Tuple3 2, _x_2_21 = PmDriver.get_neverTimeProfile_option module_name_2_0 project_7 ps_2_20, ps_2_22 = select _x_2_21::_Tuple2 1, _x_2_23 = PmCleanSystem.CodeGen cgen_2_10 use_compiler_process_ids_2_13 errwin.updateErrorWindow genAsmOrCode_2 abc_path_4 obj_path_2_14 timeprofile_2_16 cgo_2_17 proc_2_2 ao_2_15 startupdir_2_18 compiler_process_ids_2_19 ps_2_22, res_2_24 = select _x_2_23::_Tuple4 1, neverTimeProfile_2_25 = select _x_2_21::_Tuple2 0 in case (case (<{PmCleanSystem.==_24}> genAsmOrCode_2 PmCleanSystem.CodeGeneration) (True -> res_2_24) (False -> False) ) (True -> let obj_path_4_0 = select _x_2_23::_Tuple4 0, _x_4_1 = select _x_2_4::_Tuple2 0, _x_4_2 = StdPStClass.accFiles_8 (PmFileInfo.FI_UpdateObjDate module_name_2_0 obj_path_4_0 (select _x_4_1::_Tuple3 2)) (IdeState.setCompilerProcessIds (select _x_2_23::_Tuple4 2) (select _x_2_23::_Tuple4 3)) in _Tuple6 (select _x_4_2::_Tuple2 1) (select _x_4_1::_Tuple3 1) (select _x_4_2::_Tuple2 0) (<{PmDriver._if;1476;31_226}> sys_1 project_7 module_name_2_0) res_2_24 obj_path_4_0) (False -> let _x_4_0 = select _x_2_4::_Tuple2 0 in _Tuple6 (IdeState.setCompilerProcessIds (select _x_2_23::_Tuple4 2) (select _x_2_23::_Tuple4 3)) (select _x_4_0::_Tuple3 1) (select _x_4_0::_Tuple3 2) project_7 res_2_24 (select _x_2_23::_Tuple4 0)) ) 
<{PmDriver._if;1476;31_226}> !sys_0::B !project_1 module_name_2 = case sys_0 (True -> PmProject.PR_SetSysCodeGenerated project_1) (_ -> PmProject.PR_SetCodeGenerated module_name_2 project_1)
PmDriver._f225_225::B !_x_0::B neverTimeProfile_1::B = case _x_0 (True -> StdBool.not neverTimeProfile_1) (_ -> False)
PmDriver.GenAsmProjectModule !imp_pathname_0 !project_1 !setproject_2 !ps_3 = let !_x_1_0 = <{PmDriver.getFICache`}> (select _x_1_9::_Tuple2 1), ps_1_1 = <{PmDriver.ClearCompilerCache`}> ps_3, _x_1_2 = PmDriver.get_project_and_environment_paths project_1 ps_1_1, srcpaths_1_3 = select _x_1_2::_Tuple2 0, _x_1_4 = PmPath.determine_dir_and_filename imp_pathname_0 srcpaths_1_3, mdn_1_5 = select _x_1_4::_Tuple2 0, hierarchical_imp_pathname_1_6::B = select _x_1_4::_Tuple2 1, fileinfo_1_7 = select _x_1_0::_Tuple2 0, ps_1_8 = select _x_1_2::_Tuple2 1, _x_1_9 = IdeState.getABCCache ps_1_8, abccache_1_10 = select _x_1_9::_Tuple2 0, ps_1_11 = select _x_1_0::_Tuple2 1, _x_1_12 = StdPStClass.accFiles_8 (PmDirCache.DC_Setup srcpaths_1_3) ps_1_11, _x_1_13 = select _x_1_12::_Tuple2 0, dircache_1_14 = select _x_1_13::_Tuple3 2, ps_1_15 = select _x_1_12::_Tuple2 1, _x_1_16 = IdeState.getPrefs ps_1_15, _x_1_17 = select _x_1_16::_Tuple2 0, be_verbose_1_18 = select _x_1_17::PmPrefs._Prefs 22, errs_1_19 = select _x_1_13::_Tuple3 0, warns_1_20 = select _x_1_13::_Tuple3 1, ps_1_21 = select _x_1_16::_Tuple2 1, ps_1_22 = PmDriver.HandleDCErrors be_verbose_1_18 errs_1_19 warns_1_20 ps_1_21, _x_1_23 = PmDriver.CompileTheProjectModule PmCleanSystem.Compilation mdn_1_5 hierarchical_imp_pathname_1_6 fileinfo_1_7 abccache_1_10 project_1 dircache_1_14 ps_1_22 in case (case (StdBool.not (select _x_1_23::_Tuple9 3)) (True -> True) (False -> select _x_1_23::_Tuple9 4) ) (True -> setproject_2 True False (select _x_1_23::_Tuple9 2) (IdeState.setFICache (select _x_1_23::_Tuple9 0) (IdeState.setABCCache (select _x_1_23::_Tuple9 1) (select _x_1_23::_Tuple9 8)))) (False -> let _x_3_0 = PmDriver.GenCodeTheProjectModule True False PmCleanSystem.AsmGeneration mdn_1_5 (select _x_1_23::_Tuple9 5) (select _x_1_23::_Tuple9 1) (select _x_1_23::_Tuple9 0) (select _x_1_23::_Tuple9 2) (select _x_1_23::_Tuple9 8) in setproject_2 True (select _x_3_0::_Tuple6 4) (select _x_3_0::_Tuple6 3) (IdeState.setFICache (select _x_3_0::_Tuple6 2) (IdeState.setABCCache (select _x_3_0::_Tuple6 1) (select _x_3_0::_Tuple6 0)))) 
PmDriver.PrecompileFase_44 !project_0 !ps_1 = let _x_1_0 = PmProject.PR_GetPrecompile project_0, precompile_1_1 = select _x_1_0::_Tuple2 0 in case (Data.Maybe.isJust precompile_1_1) (True -> select (<{PmCleanSystem.Execute`}> (Data.Maybe.fromJust precompile_1_1) (messwin.showInfo (messwin.Level1 "Precompile...") ps_1))::_Tuple3 2) (False -> ps_1) 
PmDriver.check_exists_48 !_vFileEnv_0 !_x_1 ps_2 = case _x_1 (_predefined._Nil -> _Tuple2 Data.Maybe.Nothing ps_2) (_predefined._Cons file_1_0 rest_1_1 -> let _x_2_0 = select _vFileEnv_0::<{StdFile.FileEnv;}> 0 (UtilIO.FExists file_1_0) ps_2 in case (select _x_2_0::_Tuple2 0) (True -> PmDriver.check_exists_48 _vFileEnv_0 rest_1_1 (select _x_2_0::_Tuple2 1)) (False -> _Tuple2 (Data.Maybe.Just file_1_0) (select _x_2_0::_Tuple2 1)) ) 
PmDriver.foldl_144 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> PmDriver.foldl_144 op_0 (op_0 r_1 a_1_0) x_1_1) 
PmDriver.level3_143::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_142 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_143 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.app_world_instead_of_io_141 !f_0 !io_1 = let _x_1_0 = iostate.ioStGetWorld io_1 in iostate.ioStSetWorld (f_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
PmDriver.app_world_instead_of_io_140 !f_0 !io_1 = let _x_1_0 = iostate.ioStGetWorld io_1 in iostate.ioStSetWorld (f_0 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
PmDriver.module_occurs::B !s_0 !_x_1 = case _x_1 (<{_predefined._!Cons}> x_1_0 xs_1_1 -> case (<{StdString.==_2}> (select x_1_0::PmTypes._ModuleDirAndName 1) s_0) (True -> True) (False -> PmDriver.module_occurs s_0 xs_1_1) ) (<{_predefined._!Nil}> -> False) 
PmDriver.AccTuple4_138 f_0 s1_1 = let _x_1_0 = f_0 s1_1 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.AccTuple4_137 f_0 s1_1 = let _x_1_0 = f_0 s1_1 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.AccTuple4_136 f_0 s1_1 = let _x_1_0 = f_0 s1_1 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.AccTuple4_135 f_0 s1_1 = let _x_1_0 = f_0 s1_1 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.level3_134::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_133 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_134 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.level3_132::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_131 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_132 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.foldl_130 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> PmDriver.foldl_130 op_0 (op_0 r_1 a_1_0) x_1_1) 
PmDriver.anon_79 !s_0 !c_1 = <{StdString.+++_11}> s_0 (<{StdString.+++_11}> " " (select (select c_1::PmDriver._CurrentlyCompiled 0)::PmTypes._ModuleDirAndName 1))
PmDriver.foldl_189 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> PmDriver.foldl_189 (PmDriver.anon_79 r_0 a_1_0) x_1_1) 
PmDriver.compiling_info_async !_x_0 = case _x_0 (_predefined._Nil -> "") (_ -> PmDriver.foldl_189 "Compiling:" _x_0)
PmDriver.compiling_info !info_0 = case info_0 (PmDriver.AsyncWin current_1_0 _x_1_1 -> _Tuple2 (PmDriver.compiling_info_async current_1_0) info_0) (PmDriver.Async current_1_0 _x_1_1 -> _Tuple2 (PmDriver.compiling_info_async current_1_0) info_0) (_ -> _Tuple2 "" info_0)
PmDriver.UpdateSyncDependencies mdn_0 rest_1 co_2 dircache_3 ds_4 ps_5 = let _x_1_0::B = PmDriver.CompileTheProjectModule PmCleanSystem.Compilation mdn_0 (StdPathname.MakeFullPathname (select mdn_0::PmTypes._ModuleDirAndName 0) (<{StdString.+++_11}> (select mdn_0::PmTypes._ModuleDirAndName 1) ".icl")) (select ds_4::PmDriver._DriverStateRecord 2) (select ds_4::PmDriver._DriverStateRecord 3) (select ds_4::PmDriver._DriverStateRecord 0) dircache_3 ps_5, ok_1_1 = select _x_1_0::_Tuple9 3 in _Tuple8 (select _x_1_0::_Tuple9 8) (select _x_1_0::_Tuple9 7) ok_1_1 (select _x_1_0::_Tuple9 4) (<{StdOverloadedList.++|_81}> (select _x_1_0::_Tuple9 6) rest_1) PmDriver.Sync (update ds_4::PmDriver._DriverStateRecord [0:select _x_1_0::_Tuple9 2,2:select _x_1_0::_Tuple9 0,3:select _x_1_0::_Tuple9 1]) ok_1_1
<{PmDriver.c;1204;39_80}> !g_l_0 = <{PmDriver.g_c1;1204;49_228}> g_l_0
<{PmDriver.g_c1;1204;49_228}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;1204;49_227}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{PmDriver.g_c2;1204;49_227}> !g_h_0 g_t_1 = case g_h_0 (PmDriver._CurrentlyCompiled iclModule_1_0 options_1_1 slot_1_2 -> _predefined._Cons slot_1_2 (<{PmDriver.c;1204;39_80}> g_t_1)) (_ -> <{PmDriver.c;1204;39_80}> g_t_1)
PmDriver.get_free_slot::I !current_0 = StdList.hd (StdList.removeMembers_60 (_SystemEnum._from_4 0) (<{PmDriver.c;1204;39_80}> current_0))
PmDriver.CompileTheProjectModuleStart !compileOrCheckSyntax_0 !mdn_1 !slot_2::I !fileinfo_3 !dircache_4 !abccache_5 !project_6 !compiler_process_ids_7 !ps_8 = let _x_1_0 = PmDriver.CTPMcommon (select mdn_1::PmTypes._ModuleDirAndName 1) project_6 ps_8 in case (StdBool.not (select _x_1_0::_Tuple10 0)) (True -> <{_Tuple6!1}> False fileinfo_3 dircache_4 abccache_5 compiler_process_ids_7 (select _x_1_0::_Tuple10 9)) (False -> let _x_3_0 = PmCleanSystem.CompileStartCommand (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) (select _x_1_0::_Tuple10 1) (select _x_1_0::_Tuple10 2) (select _x_1_0::_Tuple10 3) compileOrCheckSyntax_0 (select mdn_1::PmTypes._ModuleDirAndName 1) (select _x_1_0::_Tuple10 5) slot_2 (select _x_1_0::_Tuple10 6) (select _x_1_0::_Tuple10 7) (select _x_1_0::_Tuple10 8) compiler_process_ids_7 (select _x_1_0::_Tuple10 9) in <{_Tuple6!1}> (select _x_3_0::_Tuple3 0) fileinfo_3 dircache_4 abccache_5 (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) 
PmDriver.UpdateAsyncDependencies !current_0 !_x_1 !mdn_2 rest_3 co_4 !dircache_5 !ds_6 !ps_7 = case _x_1 (PmDriver._AsyncCompilingInfo max_n_processes_1_0 compiler_process_ids_1_1 unknown_finished_processors_1_2 -> let free_slot_2_0 = PmDriver.get_free_slot current_0, _x_2_1::I = PmDriver.CompileTheProjectModuleStart PmCleanSystem.Compilation mdn_2 free_slot_2_0 (select ds_6::PmDriver._DriverStateRecord 2) dircache_5 (select ds_6::PmDriver._DriverStateRecord 3) (select ds_6::PmDriver._DriverStateRecord 0) compiler_process_ids_1_1 ps_7 in case (select _x_2_1::_Tuple6 0) (True -> let current_4_0 = _predefined._Cons (PmDriver._CurrentlyCompiled mdn_2 co_4 free_slot_2_0) current_0 in _Tuple8 (messwin.showInfo (messwin.Level2 (PmDriver.compiling_info_async current_4_0)) (select _x_2_1::_Tuple6 5)) (select _x_2_1::_Tuple6 2) True False rest_3 (PmDriver.Async current_4_0 (PmDriver._AsyncCompilingInfo max_n_processes_1_0 (select _x_2_1::_Tuple6 4) unknown_finished_processors_1_2)) (update ds_6::PmDriver._DriverStateRecord [2:select _x_2_1::_Tuple6 1,3:select _x_2_1::_Tuple6 3]) True) (False -> _Tuple8 (messwin.showInfo (messwin.Level2 (PmDriver.compiling_info_async current_0)) (select _x_2_1::_Tuple6 5)) (select _x_2_1::_Tuple6 2) False False rest_3 (PmDriver.Async current_0 (PmDriver._AsyncCompilingInfo max_n_processes_1_0 (select _x_2_1::_Tuple6 4) unknown_finished_processors_1_2)) (update ds_6::PmDriver._DriverStateRecord [2:select _x_2_1::_Tuple6 1,3:select _x_2_1::_Tuple6 3]) False) ) 
PmDriver.UpdateAsyncDependenciesWin !current_0 !_x_1 !mdn_2 rest_3 co_4 !dircache_5 !ds_6 !ps_7 = case _x_1 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_1_0 win_compiler_process_ids_1_1 -> let free_slot_2_0 = PmDriver.get_free_slot current_0, _x_2_1::I = PmDriver.CompileTheProjectModuleStart PmCleanSystem.Compilation mdn_2 free_slot_2_0 (select ds_6::PmDriver._DriverStateRecord 2) dircache_5 (select ds_6::PmDriver._DriverStateRecord 3) (select ds_6::PmDriver._DriverStateRecord 0) win_compiler_process_ids_1_1 ps_7 in case (select _x_2_1::_Tuple6 0) (True -> let current_4_0 = _predefined._Cons (PmDriver._CurrentlyCompiled mdn_2 co_4 free_slot_2_0) current_0 in _Tuple8 (messwin.showInfo (messwin.Level2 (PmDriver.compiling_info_async current_4_0)) (select _x_2_1::_Tuple6 5)) (select _x_2_1::_Tuple6 2) True False rest_3 (PmDriver.AsyncWin current_4_0 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_1_0 (select _x_2_1::_Tuple6 4))) (update ds_6::PmDriver._DriverStateRecord [2:select _x_2_1::_Tuple6 1,3:select _x_2_1::_Tuple6 3]) True) (False -> _Tuple8 (messwin.showInfo (messwin.Level2 (PmDriver.compiling_info_async current_0)) (select _x_2_1::_Tuple6 5)) (select _x_2_1::_Tuple6 2) False False rest_3 (PmDriver.AsyncWin current_0 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_1_0 (select _x_2_1::_Tuple6 4))) (update ds_6::PmDriver._DriverStateRecord [2:select _x_2_1::_Tuple6 1,3:select _x_2_1::_Tuple6 3]) False) ) 
PmDriver.PersistentCompile !cstate_0 !compileOrCheckSyntax_1 !mdn_2 !fileinfo_3 !dircache_4 !abccache_5 !project_6 !ps_7 = let _x_1_0 = PmDriver.ShowInfoAndCompile compileOrCheckSyntax_1 (select mdn_2::PmTypes._ModuleDirAndName 1) project_6 ps_7 in case (StdBool.not (select _x_1_0::_Tuple10 0)) (True -> _Tuple2 cstate_0 (_Tuple9 fileinfo_3 abccache_5 project_6 False False "" <{_predefined._!Nil}> dircache_4 (select _x_1_0::_Tuple10 9))) (False -> let co_3_0 = select _x_1_0::_Tuple10 7, _x_3_1 = PmCleanSystem.CompilePersistent (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) (select _x_1_0::_Tuple10 1) (select _x_1_0::_Tuple10 2) (select _x_1_0::_Tuple10 3) (select _x_1_0::_Tuple10 4) compileOrCheckSyntax_1 mdn_2 (select _x_1_0::_Tuple10 5) (select _x_1_0::_Tuple10 6) co_3_0 (select _x_1_0::_Tuple10 8) cstate_0 (select _x_1_0::_Tuple10 9), _x_3_2 = select _x_3_1::_Tuple2 1, _x_3_3 = PmDriver.ProcessCompilerMsg (Data.Maybe.Just (select _x_3_1::_Tuple2 0)) compileOrCheckSyntax_1 co_3_0 mdn_2 (select _x_3_2::_Tuple3 1) (select _x_3_2::_Tuple3 2) fileinfo_3 dircache_4 abccache_5 project_6 (select _x_3_2::_Tuple3 0) in _Tuple2 (select (select _x_3_3::_Tuple2 0)::_Tuple1 0) (select _x_3_3::_Tuple2 1)) 
PmDriver.UpdatePersDependencies mdn_0 cstate_1 rest_2 co_3 dircache_4 ds_5 ps_6 = let _x_1_0::B = PmDriver.PersistentCompile cstate_1 PmCleanSystem.Compilation mdn_0 (select ds_5::PmDriver._DriverStateRecord 2) dircache_4 (select ds_5::PmDriver._DriverStateRecord 3) (select ds_5::PmDriver._DriverStateRecord 0) ps_6, _x_1_1 = select _x_1_0::_Tuple2 1, ok_1_2 = select _x_1_1::_Tuple9 3 in _Tuple8 (select _x_1_1::_Tuple9 8) (select _x_1_1::_Tuple9 7) ok_1_2 (select _x_1_1::_Tuple9 4) (<{StdOverloadedList.++|_81}> (select _x_1_1::_Tuple9 6) rest_2) (PmDriver.Pers (select _x_1_0::_Tuple2 0)) (update ds_5::PmDriver._DriverStateRecord [0:select _x_1_1::_Tuple9 2,2:select _x_1_1::_Tuple9 0,3:select _x_1_1::_Tuple9 1]) ok_1_2
PmDriver.compile_module !_x_0 mdn_1 rest_2 co_3 dircache_4 ds_5 ps_6 = case _x_0 (PmDriver.Sync -> PmDriver.UpdateSyncDependencies mdn_1 rest_2 co_3 dircache_4 ds_5 ps_6) (PmDriver.Async current_1_0 async_compiling_info_1_1 -> PmDriver.UpdateAsyncDependencies current_1_0 async_compiling_info_1_1 mdn_1 rest_2 co_3 dircache_4 ds_5 ps_6) (PmDriver.AsyncWin current_1_0 win_compiling_info_1_1 -> PmDriver.UpdateAsyncDependenciesWin current_1_0 win_compiling_info_1_1 mdn_1 rest_2 co_3 dircache_4 ds_5 ps_6) (PmDriver.Pers info_1_0 -> PmDriver.UpdatePersDependencies mdn_1 info_1_0 rest_2 co_3 dircache_4 ds_5 ps_6) 
PmDriver.find_implementation_module_87 !module_name_0 !dircache_1 !files_2 = let _x_1_0::B = PmDirCache.DC_HSearch module_name_0 ".icl" dircache_1 files_2, ok_1_1 = select _x_1_0::_Tuple5 0 in case ok_1_1 (True -> _Tuple5 ok_1_1 ".icl" (select _x_1_0::_Tuple5 2) (select _x_1_0::_Tuple5 3) (select _x_1_0::_Tuple5 4)) (False -> let dircache_3_0::B = select _x_1_0::_Tuple5 3, files_3_1 = select _x_1_0::_Tuple5 4, _x_3_2 = PmDirCache.DC_HSearch module_name_0 ".hs" dircache_3_0 files_3_1, ok_3_3 = select _x_3_2::_Tuple5 0 in case ok_3_3 (True -> _Tuple5 ok_3_3 ".hs" (select _x_3_2::_Tuple5 2) (select _x_3_2::_Tuple5 3) (select _x_3_2::_Tuple5 4)) (False -> let dircache_5_0::B = select _x_3_2::_Tuple5 3, files_5_1 = select _x_3_2::_Tuple5 4, _x_5_2 = PmDirCache.DC_HSearch module_name_0 ".lhs" dircache_5_0 files_5_1, ok_5_3 = select _x_5_2::_Tuple5 0 in case ok_5_3 (True -> _Tuple5 ok_5_3 ".lhs" (select _x_5_2::_Tuple5 2) (select _x_5_2::_Tuple5 3) (select _x_5_2::_Tuple5 4)) (False -> _Tuple5 ok_5_3 ".icl" (select _x_5_2::_Tuple5 2) (select _x_5_2::_Tuple5 3) (select _x_5_2::_Tuple5 4)) ) ) 
PmDriver.eqDate_86::B !_x_0 !_x_1 = case _x_0 (_Tuple2 ld_1_0 lt_1_1 -> case _x_1 (_Tuple2 rd_2_0 rt_2_1 -> case (StdBool.not (<{StdInt.==_16}> (select lt_1_1::StdLibMisc._Time 2) (select rt_2_1::StdLibMisc._Time 2))) (True -> False) (False -> case (StdBool.not (<{StdInt.==_16}> (select lt_1_1::StdLibMisc._Time 1) (select rt_2_1::StdLibMisc._Time 1))) (True -> False) (False -> case (StdBool.not (<{StdInt.==_16}> (select lt_1_1::StdLibMisc._Time 0) (select rt_2_1::StdLibMisc._Time 0))) (True -> False) (False -> case (StdBool.not (<{StdInt.==_16}> (select ld_1_0::StdLibMisc._Date 2) (select rd_2_0::StdLibMisc._Date 2))) (True -> False) (False -> case (StdBool.not (<{StdInt.==_16}> (select ld_1_0::StdLibMisc._Date 1) (select rd_2_0::StdLibMisc._Date 1))) (True -> False) (False -> case (StdBool.not (<{StdInt.==_16}> (select ld_1_0::StdLibMisc._Date 0) (select rd_2_0::StdLibMisc._Date 0))) (True -> False) (False -> True) ) ) ) ) ) ) ) 
PmDriver.moretricks_85 modname_0 ext_1 !_x_2 !_x_3 dc_4 files_5 = case _x_2 (<{_predefined._!Cons!}> md_1_0 ms_1_1 -> case _x_3 (<{_predefined._!Cons!}> dt_2_0 ds_2_1 -> let _x_3_0 = PmDriver.find_definition_module md_1_0 dc_4 files_5 in case (StdBool.not (select _x_3_0::_Tuple6 0)) (True -> _Tuple4 False (<{StdString.+++_11}> "[" (<{StdString.+++_11}> modname_0 (<{StdString.+++_11}> ext_1 (<{StdString.+++_11}> ",]: can`t find " (<{StdString.+++_11}> md_1_0 " in cached paths"))))) (select _x_3_0::_Tuple6 4) (select _x_3_0::_Tuple6 5)) (False -> case (StdBool.not (PmDriver.eqDate_86 (select _x_3_0::_Tuple6 3) dt_2_0)) (True -> _Tuple4 False (<{StdString.+++_11}> "[" (<{StdString.+++_11}> modname_0 (<{StdString.+++_11}> ext_1 (<{StdString.+++_11}> ",]: " (<{StdString.+++_11}> md_1_0 " has changed"))))) (select _x_3_0::_Tuple6 4) (select _x_3_0::_Tuple6 5)) (False -> PmDriver.moretricks_85 modname_0 ext_1 ms_1_1 ds_2_1 (select _x_3_0::_Tuple6 4) (select _x_3_0::_Tuple6 5)) ) ) ) (<{_predefined._!Nil!}> -> case _x_3 (<{_predefined._!Nil!}> -> _Tuple4 True "Fine!" dc_4 files_5) (_ -> _Tuple4 False (<{StdString.+++_11}> "[" (<{StdString.+++_11}> modname_0 ".icl,]: more stored dates than modules??")) dc_4 files_5)) (_ -> case _x_3 (<{_predefined._!Nil!}> -> _Tuple4 False (<{StdString.+++_11}> "[" (<{StdString.+++_11}> modname_0 ".icl,]: more stored modules than dates??")) dc_4 files_5) )
PmDriver.check_dependant_dates !modname_0 !mods_1 !xxx_md_2 !xxx_dd_3 !dircache_4 !files_5 = case (Data.Maybe.isNothing xxx_md_2) (True -> <{_Tuple4!13}> False (<{StdString.+++_11}> "[" (<{StdString.+++_11}> modname_0 ".icl,]: has no date")) dircache_4 files_5) (False -> let _x_2_0 = PmDriver.find_implementation_module_87 modname_0 dircache_4 files_5 in case (StdBool.not (select _x_2_0::_Tuple5 0)) (True -> <{_Tuple4!13}> False (<{StdString.+++_11}> "[" (<{StdString.+++_11}> modname_0 (<{StdString.+++_11}> (select _x_2_0::_Tuple5 1) ",]: not found in cached paths"))) (select _x_2_0::_Tuple5 3) (select _x_2_0::_Tuple5 4)) (False -> case (StdBool.not (PmDriver.eqDate_86 (Data.Maybe.fromJust xxx_md_2) (select _x_2_0::_Tuple5 2))) (True -> <{_Tuple4!13}> False (<{StdString.+++_11}> "[" (<{StdString.+++_11}> modname_0 (<{StdString.+++_11}> (select _x_2_0::_Tuple5 1) ",]: module has changed"))) (select _x_2_0::_Tuple5 3) (select _x_2_0::_Tuple5 4)) (False -> PmDriver.moretricks_85 modname_0 (select _x_2_0::_Tuple5 1) mods_1 xxx_dd_3 (select _x_2_0::_Tuple5 3) (select _x_2_0::_Tuple5 4)) ) ) 
PmDriver.incorrect_option_88 modname_0 option_name_1 = _Tuple2 False (<{StdString.+++_11}> "[" (<{StdString.+++_11}> modname_0 (<{StdString.+++_11}> ".icl,]: .abc out of date, different compiler options. (" (<{StdString.+++_11}> option_name_1 ")"))))
PmDriver.check_module_options !modname_0 !info_1 !co_2 !project_compiler_options_3 !use_64_bit_processor_4::B !expectedVersion_5::I = case info_1 (PmFileInfo._FileInfo fi_mod_name_1_0 abcpath_1_1 objpath_1_2 sys_1_3 seq_stack_1_4 version_1_5 abcOptions_1_6 abcdate_1_7 objdate_1_8 -> case (StdBool.not (<{StdInt.==_16}> version_1_5 expectedVersion_5)) (True -> <{_Tuple2!1}> False (<{StdString.+++_11}> "[" (<{StdString.+++_11}> modname_0 ".icl,]: .abc out of date, different abc version."))) (False -> case (StdBool.not (<{StdBool.==_3}> (select abcOptions_1_6::PmAbcMagic._ABCOptions 8) use_64_bit_processor_4)) (True -> PmDriver.incorrect_option_88 modname_0 "32 or 64 bit code") (False -> case (StdBool.not (<{StdBool.==_3}> (select abcOptions_1_6::PmAbcMagic._ABCOptions 4) (PmDriver._f229_229 (select project_compiler_options_3::PmCleanSystem._ProjectCompilerOptions 2) project_compiler_options_3))) (True -> PmDriver.incorrect_option_88 modname_0 "Export local labels or link dynamic") (False -> case (StdBool.not (<{StdBool.==_3}> (select abcOptions_1_6::PmAbcMagic._ABCOptions 1) (PmDriver._f230_230 (select project_compiler_options_3::PmCleanSystem._ProjectCompilerOptions 1) co_2))) (True -> PmDriver.incorrect_option_88 modname_0 "Time Profiling") (False -> case (StdBool.not (<{StdBool.==_3}> (select abcOptions_1_6::PmAbcMagic._ABCOptions 0) (PmDriver._f231_231 (select project_compiler_options_3::PmCleanSystem._ProjectCompilerOptions 2) project_compiler_options_3 co_2))) (True -> PmDriver.incorrect_option_88 modname_0 "Generate descriptors or heap profiling") (False -> case (StdBool.not (<{StdBool.==_3}> (select abcOptions_1_6::PmAbcMagic._ABCOptions 2) (select co_2::PmCompilerOptions._CompilerOptions 2))) (True -> PmDriver.incorrect_option_88 modname_0 "Strictness Analysis") (False -> case (case (select co_2::PmCompilerOptions._CompilerOptions 7) (True -> StdBool.not (select abcOptions_1_6::PmAbcMagic._ABCOptions 5)) (False -> False) ) (True -> PmDriver.incorrect_option_88 modname_0 "Generate Comments") (False -> case (StdBool.not (<{StdBool.==_3}> (select abcOptions_1_6::PmAbcMagic._ABCOptions 6) (select co_2::PmCompilerOptions._CompilerOptions 8))) (True -> PmDriver.incorrect_option_88 modname_0 "Reuse Unique Nodes") (False -> case (StdBool.not (<{StdBool.==_3}> (select abcOptions_1_6::PmAbcMagic._ABCOptions 7) (select co_2::PmCompilerOptions._CompilerOptions 9))) (True -> PmDriver.incorrect_option_88 modname_0 "Fusion") (False -> case (StdBool.not (<{StdBool.==_3}> (select abcOptions_1_6::PmAbcMagic._ABCOptions 9) (select project_compiler_options_3::PmCleanSystem._ProjectCompilerOptions 3))) (True -> PmDriver.incorrect_option_88 modname_0 "Dynamics") (False -> <{_Tuple2!1}> True "") ) ) ) ) ) ) ) ) ) ) 
PmDriver._f231_231::B !_x_0::B project_compiler_options_1 co_2 = case _x_0 (True -> True) (_ -> case (select project_compiler_options_1::PmCleanSystem._ProjectCompilerOptions 4) (True -> True) (False -> case (select project_compiler_options_1::PmCleanSystem._ProjectCompilerOptions 0) (True -> StdBool.not (select co_2::PmCompilerOptions._CompilerOptions 0)) (False -> False) ) )
PmDriver._f230_230::B !_x_0::B co_1 = case _x_0 (True -> StdBool.not (select co_1::PmCompilerOptions._CompilerOptions 1)) (_ -> False)
PmDriver._f229_229::B !_x_0::B project_compiler_options_1 = case _x_0 (True -> True) (_ -> select project_compiler_options_1::PmCleanSystem._ProjectCompilerOptions 4)
PmDriver.AccTuple4_190 _x_0 dc_1 s1_2 = let _x_1_0 = PmDriver.LookupModulePaths _x_0 dc_1 s1_2 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.AccTuple4_191 _x_0 dc_1 s1_2 = let _x_1_0 = PmDriver.LookupModulePaths _x_0 dc_1 s1_2 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.AccTuple4_192 modname_0 mods_1 xxx_md_2 xxx_dd_3 dircache_4 s1_5 = let _x_1_0 = PmDriver.check_dependant_dates modname_0 mods_1 xxx_md_2 xxx_dd_3 dircache_4 s1_5 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.AccTuple4_193 _x_0 dc_1 s1_2 = let _x_1_0 = PmDriver.LookupModulePaths _x_0 dc_1 s1_2 in _Tuple2 (_Tuple3 (select _x_1_0::_Tuple4 0) (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2)) (select _x_1_0::_Tuple4 3)
PmDriver.UpdateDependencies !force_0::B !mdn_1 !rest_2 !compinfo_3 !dircache_4 !ds_5 !<{ps`_6}> = let _x_1_0 = IdeState.getPrefs <{ps`_6}>, prefs_1_1 = select _x_1_0::_Tuple2 0, verbose_1_2 = select prefs_1_1::PmPrefs._Prefs 22, _x_1_3 = PmDriver.compiling_info compinfo_3, cinf_1_4 = select _x_1_3::_Tuple2 0, line_1_5 = messwin.Level2 (<{StdString.+++_11}> (<{PmDriver._if;1037;44_232}> verbose_1_2 module_name_1_16) cinf_1_4), ps_1_6 = select _x_1_0::_Tuple2 1, _x_1_7 = IdeState.getCurrentVers ps_1_6, ps_1_8 = select _x_1_7::_Tuple2 1, ps_1_9 = PmDriver.verbi_131 verbose_1_2 line_1_5 ps_1_8, _x_1_10 = IdeState.getCurrentProc ps_1_9, proc_1_11 = select _x_1_10::_Tuple2 0, ps_1_12 = select _x_1_10::_Tuple2 1, _x_1_13 = PmFileInfo.FI_GetFileInfo (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) proc_1_11 mdn_1 (select ds_5::PmDriver._DriverStateRecord 3) (select ds_5::PmDriver._DriverStateRecord 2) ps_1_12, _x_1_14::B = select _x_1_13::_Tuple2 0, info_1_15 = select _x_1_14::_Tuple3 0, module_name_1_16 = select mdn_1::PmTypes._ModuleDirAndName 1 in case (StdBool.not (select (select info_1_15::PmFileInfo._FileInfo 7)::UtilDate._DATE 0)) (True -> let !ps_3_0 = messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> module_name_1_16 ".icl,]: no abc file")) _predefined._Nil)) (select _x_1_13::_Tuple2 1), defaultCO_3_1 = select prefs_1_1::PmPrefs._Prefs 11 in PmDriver.compile_module (select _x_1_3::_Tuple2 1) mdn_1 rest_2 (<{PmDriver._c;1031;35_233}> (PmProject.PR_GetModuleInfo module_name_1_16 (select ds_5::PmDriver._DriverStateRecord 0)) defaultCO_3_1) dircache_4 (update ds_5::PmDriver._DriverStateRecord [2:select _x_1_14::_Tuple3 2,3:select _x_1_14::_Tuple3 1]) ps_3_0) (False -> case (select info_1_15::PmFileInfo._FileInfo 3) (True -> let version_4_0::I = select _x_1_7::_Tuple2 0 in case (StdBool.not (<{StdInt.==_16}> (select info_1_15::PmFileInfo._FileInfo 5) version_4_0)) (True -> _Tuple8 (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: System file: '" (<{StdString.+++_11}> module_name_1_16 "' has incorrect abc version.")) _predefined._Nil)) (select _x_1_13::_Tuple2 1)) dircache_4 False False rest_2 (select _x_1_3::_Tuple2 1) (update ds_5::PmDriver._DriverStateRecord [2:select _x_1_14::_Tuple3 2,3:select _x_1_14::_Tuple3 1]) False) (False -> let project_6_0 = select ds_5::PmDriver._DriverStateRecord 0, ao_6_1 = PmProject.PR_GetApplicationOptions project_6_0, tp_6_2::B = select ao_6_1::PmTypes._ApplicationOptions 16, wantstp_6_3::B = PmDriver._f235_235 tp_6_2 co_6_5, compile_6_4::B = StdBool.not (<{StdBool.==_3}> wantstp_6_3 (select (select info_1_15::PmFileInfo._FileInfo 6)::PmAbcMagic._ABCOptions 1)), co_6_5 = <{PmDriver._c;1031;35_234}> (PmProject.PR_GetModuleInfo module_name_1_16 project_6_0) defaultCO_6_6, defaultCO_6_6 = select prefs_1_1::PmPrefs._Prefs 11 in case compile_6_4 (True -> let abcPath_8_0 = PmPath.ModuleDirAndNameToABCSystemPathname mdn_1, lines_8_1 = messwin.Level3 (<{PmDriver._if;1058;44_237}> (PmDriver._f236_236 verbose_1_2 compile_6_4) module_name_1_16), ps_8_2 = select _x_1_13::_Tuple2 1, ps_8_3 = PmDriver.verbi_133 verbose_1_2 lines_8_1 ps_8_2, _x_8_4 = StdPStClass.accFiles_8 (PmAbcMagic.PatchSystemABC version_4_0 True abcPath_8_0 wantstp_6_3) ps_8_3 in case (select _x_8_4::_Tuple2 0) (True -> let fileinfo_10_0 = select _x_1_14::_Tuple3 2, abccache_10_1 = select _x_1_14::_Tuple3 1, ds_10_2 = update ds_5::PmDriver._DriverStateRecord [2:fileinfo_10_0,3:abccache_10_1], ps_10_3 = select _x_8_4::_Tuple2 1, _x_10_4 = StdPStClass.accFiles_8 (PmFileInfo.FI_UpdateAbcDate module_name_1_16 abcPath_8_0 wantstp_6_3 (select ds_10_2::PmDriver._DriverStateRecord 2)) ps_10_3, _x_10_5 = select _x_10_4::_Tuple2 0, abcdate_10_6 = select _x_10_5::_Tuple2 0, fileinfo_10_7 = select _x_10_5::_Tuple2 1, ds_10_8 = update ds_10_2::PmDriver._DriverStateRecord [2:fileinfo_10_7], ps_10_9 = select _x_10_4::_Tuple2 1, _x_10_10 = StdPStClass.accFiles_8 (<{PmAbcMagic.ParseABCDependencies`}> (select info_1_15::PmFileInfo._FileInfo 1) abcdate_10_6 (select ds_10_8::PmDriver._DriverStateRecord 3)) ps_10_9, _x_10_11 = select _x_10_10::_Tuple2 0 in case (StdBool.not (select _x_10_11::_Tuple7 0)) (True -> _Tuple8 (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: Strange error parsing dependencies: '" (<{StdString.+++_11}> (select info_1_15::PmFileInfo._FileInfo 1) "'.")) _predefined._Nil)) (select _x_10_10::_Tuple2 1)) dircache_4 False False rest_2 (select _x_1_3::_Tuple2 1) (update ds_10_8::PmDriver._DriverStateRecord [3:select _x_10_11::_Tuple7 6]) False) (False -> let mods_12_0 = select _x_10_11::_Tuple7 1, ps_12_1 = select _x_10_10::_Tuple2 1, _x_12_2 = StdPStClass.accFiles_8 (PmDriver.AccTuple4_190 mods_12_0 dircache_4) ps_12_1, _x_12_3 = select _x_12_2::_Tuple2 0 in case (StdBool.not (select _x_12_3::_Tuple3 0)) (True -> _Tuple8 (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: '" (<{StdString.+++_11}> (select (StdOverloadedList.Hd_101 (select _x_12_3::_Tuple3 1))::PmTypes._ModuleDirAndName 1) "' not found.")) _predefined._Nil)) (select _x_12_2::_Tuple2 1)) (select _x_12_3::_Tuple3 2) False False rest_2 (select _x_1_3::_Tuple2 1) (update ds_10_8::PmDriver._DriverStateRecord [3:select _x_10_11::_Tuple7 6]) False) (False -> let !rest_14_0 = <{StdOverloadedList.++|_81}> rest_2 (select _x_12_3::_Tuple3 1), !project_14_1 = PmProject.PR_AddABCInfo mdn_1 (select _x_10_11::_Tuple7 4) (select _x_10_11::_Tuple7 5) defaultCO_6_6 (select ds_14_3::PmDriver._DriverStateRecord 0), !ds_14_2 = update ds_14_3::PmDriver._DriverStateRecord [0:project_14_1,7:<{_predefined._!Cons}> mdn_1 (select ds_14_3::PmDriver._DriverStateRecord 7)], ds_14_3 = update ds_10_8::PmDriver._DriverStateRecord [3:select _x_10_11::_Tuple7 6] in _Tuple8 (select _x_12_2::_Tuple2 1) (select _x_12_3::_Tuple3 2) True False rest_14_0 (select _x_1_3::_Tuple2 1) ds_14_2 True) ) ) (False -> _Tuple8 (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: System file: '" (<{StdString.+++_11}> module_name_1_16 "' could not be patched.")) _predefined._Nil)) (select _x_8_4::_Tuple2 1)) dircache_4 False False rest_2 (select _x_1_3::_Tuple2 1) (update ds_5::PmDriver._DriverStateRecord [2:select _x_1_14::_Tuple3 2,3:select _x_1_14::_Tuple3 1]) False) ) (False -> let fileinfo_8_0 = select _x_1_14::_Tuple3 2, abccache_8_1 = select _x_1_14::_Tuple3 1, ds_8_2 = update ds_5::PmDriver._DriverStateRecord [2:fileinfo_8_0,3:abccache_8_1], lines_8_3 = messwin.Level3 (<{PmDriver._if;1058;44_239}> (PmDriver._f238_238 verbose_1_2 compile_6_4) module_name_1_16), ps_8_4 = select _x_1_13::_Tuple2 1, ps_8_5 = PmDriver.verbi_133 verbose_1_2 lines_8_3 ps_8_4, _x_8_6 = StdPStClass.accFiles_8 (<{PmAbcMagic.ParseABCDependencies`}> (select info_1_15::PmFileInfo._FileInfo 1) (select info_1_15::PmFileInfo._FileInfo 7) (select ds_8_2::PmDriver._DriverStateRecord 3)) ps_8_5, _x_8_7 = select _x_8_6::_Tuple2 0 in case (StdBool.not (select _x_8_7::_Tuple7 0)) (True -> _Tuple8 (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: Strange error parsing dependencies: '" (<{StdString.+++_11}> (select info_1_15::PmFileInfo._FileInfo 1) "'.")) _predefined._Nil)) (select _x_8_6::_Tuple2 1)) dircache_4 False False rest_2 (select _x_1_3::_Tuple2 1) (update ds_8_2::PmDriver._DriverStateRecord [3:select _x_8_7::_Tuple7 6]) False) (False -> let mods_10_0 = select _x_8_7::_Tuple7 1, ps_10_1 = select _x_8_6::_Tuple2 1, _x_10_2 = StdPStClass.accFiles_8 (PmDriver.AccTuple4_191 mods_10_0 dircache_4) ps_10_1, _x_10_3 = select _x_10_2::_Tuple2 0 in case (StdBool.not (select _x_10_3::_Tuple3 0)) (True -> _Tuple8 (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: '" (<{StdString.+++_11}> (select (StdOverloadedList.Hd_101 (select _x_10_3::_Tuple3 1))::PmTypes._ModuleDirAndName 1) "' not found.")) _predefined._Nil)) (select _x_10_2::_Tuple2 1)) (select _x_10_3::_Tuple3 2) False False rest_2 (select _x_1_3::_Tuple2 1) (update ds_8_2::PmDriver._DriverStateRecord [3:select _x_8_7::_Tuple7 6]) False) (False -> let !rest_12_0 = <{StdOverloadedList.++|_81}> (select _x_10_3::_Tuple3 1) rest_2, !project_12_1 = PmProject.PR_AddABCInfo mdn_1 (select _x_8_7::_Tuple7 4) (select _x_8_7::_Tuple7 5) defaultCO_6_6 (select ds_12_3::PmDriver._DriverStateRecord 0), !ds_12_2 = update ds_12_3::PmDriver._DriverStateRecord [0:project_12_1,7:<{_predefined._!Cons}> mdn_1 (select ds_12_3::PmDriver._DriverStateRecord 7)], ds_12_3 = update ds_8_2::PmDriver._DriverStateRecord [3:select _x_8_7::_Tuple7 6] in _Tuple8 (select _x_10_2::_Tuple2 1) (select _x_10_3::_Tuple3 2) True False rest_12_0 (select _x_1_3::_Tuple2 1) ds_12_2 False) ) ) ) ) (False -> case force_0 (True -> let !ps_5_0 = messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> module_name_1_16 ".icl,]: force compile")) _predefined._Nil)) (select _x_1_13::_Tuple2 1), defaultCO_5_1 = select prefs_1_1::PmPrefs._Prefs 11 in PmDriver.compile_module (select _x_1_3::_Tuple2 1) mdn_1 rest_2 (<{PmDriver._c;1031;35_240}> (PmProject.PR_GetModuleInfo module_name_1_16 (select ds_5::PmDriver._DriverStateRecord 0)) defaultCO_5_1) dircache_4 (update ds_5::PmDriver._DriverStateRecord [2:select _x_1_14::_Tuple3 2,3:select _x_1_14::_Tuple3 1]) ps_5_0) (False -> let fileinfo_5_0 = select _x_1_14::_Tuple3 2, abccache_5_1 = select _x_1_14::_Tuple3 1, ds_5_2 = update ds_5::PmDriver._DriverStateRecord [2:fileinfo_5_0,3:abccache_5_1], ps_5_3 = select _x_1_13::_Tuple2 1, _x_5_4 = StdPStClass.accFiles_8 (<{PmAbcMagic.ParseABCDependencies`}> (select info_1_15::PmFileInfo._FileInfo 1) (select info_1_15::PmFileInfo._FileInfo 7) (select ds_5_2::PmDriver._DriverStateRecord 3)) ps_5_3, _x_5_5 = select _x_5_4::_Tuple2 0 in case (StdBool.not (select _x_5_5::_Tuple7 0)) (True -> _Tuple8 (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: Strange error parsing dependencies: '" (<{StdString.+++_11}> (select info_1_15::PmFileInfo._FileInfo 1) "'.")) _predefined._Nil)) (select _x_5_4::_Tuple2 1)) dircache_4 False False rest_2 (select _x_1_3::_Tuple2 1) (update ds_5_2::PmDriver._DriverStateRecord [3:select _x_5_5::_Tuple7 6]) False) (False -> let mods_7_0 = select _x_5_5::_Tuple7 1, xxx_md_7_1::B = select _x_5_5::_Tuple7 2, xxx_dd_7_2 = select _x_5_5::_Tuple7 3, ps_7_3::I = select _x_5_4::_Tuple2 1, _x_7_4::B = StdPStClass.accFiles_8 (PmDriver.AccTuple4_192 module_name_1_16 mods_7_0 xxx_md_7_1 xxx_dd_7_2 dircache_4) ps_7_3, _x_7_5 = select _x_7_4::_Tuple2 0, project_7_6 = select ds_5::PmDriver._DriverStateRecord 0, co_7_7 = <{PmDriver._c;1031;35_242}> (PmProject.PR_GetModuleInfo module_name_1_16 project_7_6) defaultCO_7_18, ao_7_8::B = PmProject.PR_GetApplicationOptions project_7_6, lo_7_9 = PmProject.PR_GetLinkOptions project_7_6, link_dynamic_7_10 = <{PmDriver._c;1148;27_241}> (select lo_7_9::PmTypes._LinkOptions 2), project_compiler_options_7_11 = PmCleanSystem._ProjectCompilerOptions (select ao_7_8::PmTypes._ApplicationOptions 14) (select ao_7_8::PmTypes._ApplicationOptions 16) (select ao_7_8::PmTypes._ApplicationOptions 19) (select ao_7_8::PmTypes._ApplicationOptions 18) link_dynamic_7_10, ps_7_12 = select _x_7_4::_Tuple2 1, _x_7_13 = IdeState.getCurrent64BitProcessor ps_7_12, use_64_bit_processor_7_14 = select _x_7_13::_Tuple2 0, version_7_15 = select _x_1_7::_Tuple2 0, _x_7_16 = PmDriver.check_module_options module_name_1_16 info_1_15 co_7_7 project_compiler_options_7_11 use_64_bit_processor_7_14 version_7_15, okC_7_17 = select _x_7_16::_Tuple2 0, defaultCO_7_18 = select prefs_1_1::PmPrefs._Prefs 11 in case (case (select _x_7_5::_Tuple3 0) (True -> okC_7_17) (False -> False) ) (True -> let dircache_9_0 = select _x_7_5::_Tuple3 2, ps_9_1 = select _x_7_13::_Tuple2 1, _x_9_2 = StdPStClass.accFiles_8 (PmDriver.AccTuple4_193 mods_7_0 dircache_9_0) ps_9_1, _x_9_3 = select _x_9_2::_Tuple2 0 in case (StdBool.not (select _x_9_3::_Tuple3 0)) (True -> _Tuple8 (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: '" (<{StdString.+++_11}> (select (StdOverloadedList.Hd_101 (select _x_9_3::_Tuple3 1))::PmTypes._ModuleDirAndName 1) "' not found.")) _predefined._Nil)) (select _x_9_2::_Tuple2 1)) (select _x_9_3::_Tuple3 2) False False rest_2 (select _x_1_3::_Tuple2 1) (update ds_5_2::PmDriver._DriverStateRecord [3:select _x_5_5::_Tuple7 6]) False) (False -> let !rest_11_0 = <{StdOverloadedList.++|_81}> (select _x_9_3::_Tuple3 1) rest_2, !project_11_1 = PmProject.PR_AddABCInfo mdn_1 (select _x_5_5::_Tuple7 4) (select _x_5_5::_Tuple7 5) co_7_7 (select ds_11_3::PmDriver._DriverStateRecord 0), !ds_11_2 = update ds_11_3::PmDriver._DriverStateRecord [0:project_11_1,7:<{_predefined._!Cons}> mdn_1 (select ds_11_3::PmDriver._DriverStateRecord 7)], ds_11_3 = update ds_5_2::PmDriver._DriverStateRecord [3:select _x_5_5::_Tuple7 6] in _Tuple8 (select _x_9_2::_Tuple2 1) (select _x_9_3::_Tuple3 2) True False rest_11_0 (select _x_1_3::_Tuple2 1) ds_11_2 False) ) (False -> let !ps_9_0 = messwin.showInfo (messwin.Level3 (_predefined._Cons (<{PmDriver._if;1137;43_243}> okC_7_17 whyA_9_1 whyC_9_2) _predefined._Nil)) (select _x_7_13::_Tuple2 1), whyA_9_1 = select _x_7_5::_Tuple3 1, whyC_9_2 = select _x_7_16::_Tuple2 1 in PmDriver.compile_module (select _x_1_3::_Tuple2 1) mdn_1 rest_2 co_7_7 (select _x_7_5::_Tuple3 2) (update ds_5_2::PmDriver._DriverStateRecord [3:select _x_5_5::_Tuple7 6]) ps_9_0) ) ) ) ) 
<{PmDriver._if;1137;43_243}> !okC_0::B whyA_1 whyC_2 = case okC_0 (True -> whyA_1) (_ -> whyC_2)
<{PmDriver._c;1031;35_242}> !_x_0 defaultCO_1 = case _x_0 (Data.Maybe.Just modinfo_1_0 -> select modinfo_1_0::PmTypes._ModInfo 1) (_ -> defaultCO_1)
<{PmDriver._c;1148;27_241}>::B !_x_0 = case _x_0 (PmTypes.LM_Static -> False) (PmTypes.LM_Dynamic -> True) 
<{PmDriver._c;1031;35_240}> !_x_0 defaultCO_1 = case _x_0 (Data.Maybe.Just modinfo_1_0 -> select modinfo_1_0::PmTypes._ModInfo 1) (_ -> defaultCO_1)
<{PmDriver._if;1058;44_239}> !_x_0::B module_name_1 = case _x_0 (True -> _predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> module_name_1 ".abc,]: System module compiled with different options")) _predefined._Nil) (_ -> _predefined._Nil)
PmDriver._f238_238::B !verbose_0::B compile_1::B = case verbose_0 (True -> compile_1) (_ -> False)
<{PmDriver._if;1058;44_237}> !_x_0::B module_name_1 = case _x_0 (True -> _predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> module_name_1 ".abc,]: System module compiled with different options")) _predefined._Nil) (_ -> _predefined._Nil)
PmDriver._f236_236::B !verbose_0::B compile_1::B = case verbose_0 (True -> compile_1) (_ -> False)
PmDriver._f235_235::B !tp_0::B co_1 = case tp_0 (True -> StdBool.not (select co_1::PmCompilerOptions._CompilerOptions 1)) (_ -> False)
<{PmDriver._c;1031;35_234}> !_x_0 defaultCO_1 = case _x_0 (Data.Maybe.Just modinfo_1_0 -> select modinfo_1_0::PmTypes._ModInfo 1) (_ -> defaultCO_1)
<{PmDriver._c;1031;35_233}> !_x_0 defaultCO_1 = case _x_0 (Data.Maybe.Just modinfo_1_0 -> select modinfo_1_0::PmTypes._ModInfo 1) (_ -> defaultCO_1)
<{PmDriver._if;1037;44_232}> !verbose_0::B module_name_1 = case verbose_0 (True -> <{StdString.+++_11}> "Analyzing \'" (<{StdString.+++_11}> module_name_1 "\'. ")) (_ -> "")
PmDriver.removeFromCurrent !_x_0::I !_x_1 = case _x_1 (_predefined._Nil -> StdMisc.abort "driver.icl: unknown threadId") (_predefined._Cons current_1_0 rest_1_1 -> case current_1_0 (PmDriver._CurrentlyCompiled iclModule_2_0 options_2_1 slot_2_2 -> case (<{StdInt.==_16}> _x_0 slot_2_2) (True -> _Tuple2 current_1_0 rest_1_1) (False -> let _x_4_0 = PmDriver.removeFromCurrent _x_0 rest_1_1 in _Tuple2 (select _x_4_0::_Tuple2 0) (_predefined._Cons current_1_0 (select _x_4_0::_Tuple2 1))) ) ) 
PmDriver.remove_from_unknown_finished_processors completedSlot_0::I !_x_1 = case _x_1 (PmDriver.UnknownFinishedProcessors n_unknown_finished_processors_1_0 known_finished_processors_1_1 -> case (StdBool.not (StdList.isMember_51 completedSlot_0 known_finished_processors_1_1)) (True -> PmDriver.UnknownFinishedProcessors n_unknown_finished_processors_1_0 (_predefined._Cons completedSlot_0 known_finished_processors_1_1)) ) (_ -> _x_1)
PmDriver.process_completed_52 !completedSlot_0::I !exitcode_1::I !_x_2 !ps_3 = case _x_2 (PmDriver.DComp force_1_0 dircache_1_1 _x_1_2 todo_1_3 ds_1_4 -> case _x_1_2 (PmDriver.Async current_2_0 _x_2_1 -> case _x_2_1 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 unknown_finished_processors_3_2 -> let _x_4_0::B = PmDriver.removeFromCurrent completedSlot_0 current_2_0, completed_4_1 = select _x_4_0::_Tuple2 0, ccstring_4_2 = "dummy ccstring for now..", _x_4_3 = IdeState.getStup ps_3, startupdir_4_4 = select _x_4_3::_Tuple2 0, ps_4_5 = select _x_4_3::_Tuple2 1, _x_4_6 = IdeState.getInteract ps_4_5, interact_4_7 = select _x_4_6::_Tuple2 0, typewin_4_8 = typeatt.update_type_window interact_4_7 (select (select completed_4_1::PmDriver._CurrentlyCompiled 0)::PmTypes._ModuleDirAndName 1), ps_4_9::B = select _x_4_6::_Tuple2 1, _x_4_10 = PmCleanSystem.CompileHandleExitCode (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) exitcode_1 ccstring_4_2 startupdir_4_4 completedSlot_0 errwin.updateErrorWindow typewin_4_8 (select completed_4_1::PmDriver._CurrentlyCompiled 0) (select (select completed_4_1::PmDriver._CurrentlyCompiled 1)::PmCompilerOptions._CompilerOptions 3) ps_4_9, abcpath_4_11 = select _x_4_10::_Tuple3 0, res_4_12 = select _x_4_10::_Tuple3 1, ps_4_13 = select _x_4_10::_Tuple3 2, _x_4_14 = PmDriver.ProcessCompilerMsg Data.Maybe.Nothing PmCleanSystem.Compilation (select completed_4_1::PmDriver._CurrentlyCompiled 1) (select completed_4_1::PmDriver._CurrentlyCompiled 0) abcpath_4_11 res_4_12 (select ds_1_4::PmDriver._DriverStateRecord 2) dircache_1_1 (select ds_1_4::PmDriver._DriverStateRecord 3) (select ds_1_4::PmDriver._DriverStateRecord 0) ps_4_13, _x_4_15 = select _x_4_14::_Tuple2 1, ok_4_16 = select _x_4_15::_Tuple9 3 in case ok_4_16 (True -> let ds_6_0 = update ds_1_4::PmDriver._DriverStateRecord [0:select _x_4_15::_Tuple9 2,2:select _x_4_15::_Tuple9 0,3:select _x_4_15::_Tuple9 1,5:ok_4_16,6:PmDriver._f244_244 (select ds_1_4::PmDriver._DriverStateRecord 6) _x_4_15] in <{_Tuple2!3}> (PmDriver.DComp force_1_0 (select _x_4_15::_Tuple9 7) (PmDriver.Async (select _x_4_0::_Tuple2 1) (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 (PmDriver.remove_from_unknown_finished_processors completedSlot_0 unknown_finished_processors_3_2))) (<{StdOverloadedList.++|_81}> (select _x_4_15::_Tuple9 6) todo_1_3) (update ds_6_0::PmDriver._DriverStateRecord [7:<{_predefined._!Cons}> (select completed_4_1::PmDriver._CurrentlyCompiled 0) (select ds_6_0::PmDriver._DriverStateRecord 7)])) (select _x_4_15::_Tuple9 8)) (False -> let _x_6_0 = select (update ds_1_4::PmDriver._DriverStateRecord [0:select _x_4_15::_Tuple9 2,2:select _x_4_15::_Tuple9 0,3:select _x_4_15::_Tuple9 1,5:ok_4_16,6:PmDriver._f245_245 (select ds_1_4::PmDriver._DriverStateRecord 6) _x_4_15])::PmDriver._DriverStateRecord 7 in <{_Tuple2!3}> (PmDriver.DGene (select _x_6_0::_Tuple2 0) PmDriver.SyncCodeGeneration (select _x_6_0::_Tuple2 1)) (select (PmCleanSystem.ClearCompilerCaches compiler_process_ids_3_1 (select _x_4_15::_Tuple9 8))::_Tuple2 1)) ) ) ) 
PmDriver._f245_245::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> select _x_1::_Tuple9 4)
PmDriver._f244_244::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> select _x_1::_Tuple9 4)
PmDriver.add_unknown_finished_processor !_x_0 = case _x_0 (PmDriver.NoUnknownFinishedProcessors -> PmDriver.UnknownFinishedProcessors 1 _predefined._Nil) (PmDriver.UnknownFinishedProcessors n_unknown_finished_processors_1_0 known_finished_processors_1_1 -> PmDriver.UnknownFinishedProcessors (<{StdInt.+_6}> n_unknown_finished_processors_1_0 1) known_finished_processors_1_1) 
PmDriver.handle_completed_processes_49 known_finished_processors_0 !max_n_processes_1::I !process_n_2::I state_3 ps_4 = case (StdBool.not (<{StdInt.<_17}> process_n_2 max_n_processes_1)) (True -> _Tuple2 state_3 ps_4) (False -> case (StdList.isMember_51 process_n_2 known_finished_processors_0) (True -> PmDriver.handle_completed_processes_49 known_finished_processors_0 max_n_processes_1 (<{StdInt.+_6}> process_n_2 1) state_3 ps_4) (False -> PmDriver.handle_completed_processes_49 known_finished_processors_0 max_n_processes_1 (<{StdInt.+_6}> process_n_2 1) state_3 (select (PmCleanSystem.SendRepeatResult process_n_2 ps_4)::_Tuple2 1)) ) 
PmDriver.check_unknow_processors_are_known_51 !_x_0 ps_1 = case _x_0 (PmDriver.DComp force_1_0 dircache_1_1 _x_1_2 todo_1_3 ds_1_4 -> case _x_1_2 (PmDriver.Async current_2_0 _x_2_1 -> case _x_2_1 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 _x_3_2 -> case _x_3_2 (PmDriver.UnknownFinishedProcessors n_unknown_finished_processors_4_0 known_finished_processors_4_1 -> case (StdBool.not (<{StdInt.<_17}> (<{StdInt.+_6}> n_unknown_finished_processors_4_0 (StdList.length_47 known_finished_processors_4_1)) max_n_processes_3_0)) (True -> let _x_6_0 = PmDriver.handle_completed_processes_49 known_finished_processors_4_1 max_n_processes_3_0 0 (PmDriver.DComp force_1_0 dircache_1_1 (PmDriver.Async current_2_0 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 PmDriver.NoUnknownFinishedProcessors)) todo_1_3 ds_1_4) ps_1 in _Tuple2 (select _x_6_0::_Tuple2 0) (select _x_6_0::_Tuple2 1)) ) ) ) ) (_ -> _Tuple2 _x_0 ps_1)
PmDriver.check_completed_50 !state_0 !ps_1 = case state_0 (PmDriver.DComp force_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 -> case _x_1_2 (PmDriver.Async current_2_0 _x_2_1 -> case current_2_0 (_predefined._Cons _x_3_0 _x_3_1 -> case _x_2_1 (PmDriver._AsyncCompilingInfo max_n_processes_4_0 compiler_process_ids_4_1 unknown_finished_processors_4_2 -> <{PmDriver._c;394;15_247}> (PmCleanSystem.CompilePollCompleted (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) compiler_process_ids_4_1 ps_1) state_0) ) ) ) (_ -> PmDriver.check_unknow_processors_are_known_51 state_0 ps_1)
<{PmDriver._c;394;15_247}> !_x_0 !state_1 = case _x_0 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (PmCleanSystem.NoFinishedCompiler -> PmDriver.check_unknow_processors_are_known_51 state_1 ps_1_1) (PmCleanSystem.UnknownFinishedCompiler -> <{PmDriver._c;398;24_246}> state_1 ps_1_1) (PmCleanSystem.FinishedCompiler completedSlot_2_0 exitcode_2_1 -> let !_x_3_0 = PmDriver.process_completed_52 completedSlot_2_0 exitcode_2_1 state_1 ps_1_1 in PmDriver.check_completed_50 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) ) 
<{PmDriver._c;398;24_246}> !state_0 !ps_1 = case state_0 (PmDriver.DComp force_1_0 dircache_1_1 _x_1_2 todo_1_3 ds_1_4 -> case _x_1_2 (PmDriver.Async current_2_0 _x_2_1 -> case _x_2_1 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 unknown_finished_processors_3_2 -> PmDriver.check_completed_50 (PmDriver.DComp force_1_0 dircache_1_1 (PmDriver.Async current_2_0 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 (PmDriver.add_unknown_finished_processor unknown_finished_processors_3_2))) todo_1_3 ds_1_4) ps_1) ) ) 
PmDriver.any__139::B !_vList_0 p_1 !_x_2 = case _x_2 (<{_predefined._|Nil}> -> False) (<{_predefined._|Cons}> b_1_0 tl_1_1 -> case (p_1 b_1_0) (True -> True) (False -> PmDriver.any__139 _vList_0 p_1 tl_1_1) ) 
PmDriver.anon_78::B !next_0 !c_1 = <{StdString.==_2}> (select (select c_1::PmDriver._CurrentlyCompiled 0)::PmTypes._ModuleDirAndName 1) next_0
PmDriver.any__194::B p_0 !_x_1 = case _x_1 (<{_predefined._|Nil}> -> False) (<{_predefined._|Cons}> b_1_0 tl_1_1 -> case (p_0 b_1_0) (True -> True) (False -> PmDriver.any__194 p_0 tl_1_1) ) 
PmDriver.any__195::B next_0 !_x_1 = case _x_1 (<{_predefined._|Nil}> -> False) (<{_predefined._|Cons}> b_1_0 tl_1_1 -> case (PmDriver.anon_78 next_0 b_1_0) (True -> True) (False -> PmDriver.any__195 next_0 tl_1_1) ) 
PmDriver.currently_compiled::B next_0 !current_1 = PmDriver.any__195 next_0 current_1
PmDriver.start_compilations_53 !state_0 !ps_1 = case state_0 (PmDriver.DComp force_1_0 dircache_1_1 _x_1_2 _x_1_3 ds_1_4 -> case _x_1_2 (PmDriver.Async current_2_0 _x_2_1 -> case _x_2_1 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 unknown_finished_processors_3_2 -> case _x_1_3 (<{_predefined._!Cons}> next_4_0 rest_4_1 -> case (StdBool.not (<{StdInt.<_17}> (StdList.length_47 current_2_0) max_n_processes_3_0)) (True -> <{_Tuple2!3}> state_0 (PmCleanSystem.DelayEventLoop ps_1)) (False -> case (case (PmDriver.module_occurs (select next_4_0::PmTypes._ModuleDirAndName 1) (select ds_1_4::PmDriver._DriverStateRecord 7)) (True -> True) (False -> PmDriver.currently_compiled (select next_4_0::PmTypes._ModuleDirAndName 1) current_2_0) ) (True -> PmDriver.start_compilations_53 (PmDriver.DComp force_1_0 dircache_1_1 (PmDriver.Async current_2_0 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 unknown_finished_processors_3_2)) rest_4_1 ds_1_4) ps_1) (False -> case (PmTypes.isProjLibraryModule (select next_4_0::PmTypes._ModuleDirAndName 1) (select ds_1_4::PmDriver._DriverStateRecord 4)) (True -> <{_Tuple2!3}> (PmDriver.DComp force_1_0 dircache_1_1 (PmDriver.Async current_2_0 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 unknown_finished_processors_3_2)) rest_4_1 ds_1_4) ps_1) (False -> let _x_8_0::B = PmDriver.UpdateDependencies force_1_0 next_4_0 rest_4_1 (PmDriver.Async current_2_0 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 unknown_finished_processors_3_2)) dircache_1_1 ds_1_4 ps_1, ok_8_1 = select _x_8_0::_Tuple8 2 in case (StdBool.not ok_8_1) (True -> let !_x_10_0 = select (update (select _x_8_0::_Tuple8 6)::PmDriver._DriverStateRecord [5:ok_8_1])::PmDriver._DriverStateRecord 7 in <{_Tuple2!3}> (PmDriver.DGene (select _x_10_0::_Tuple2 0) PmDriver.SyncCodeGeneration (select _x_10_0::_Tuple2 1)) (select (PmCleanSystem.ClearCompilerCaches compiler_process_ids_3_1 (select _x_8_0::_Tuple8 0))::_Tuple2 1)) (False -> PmDriver.start_compilations_53 (PmDriver.DComp force_1_0 (select _x_8_0::_Tuple8 1) (select _x_8_0::_Tuple8 5) (select _x_8_0::_Tuple8 4) (update (select _x_8_0::_Tuple8 6)::PmDriver._DriverStateRecord [5:ok_8_1])) (select _x_8_0::_Tuple8 0)) ) ) ) ) ) ) ) (_ -> <{_Tuple2!3}> state_0 (PmCleanSystem.DelayEventLoop ps_1))
PmDriver.process_completed_55 !completedSlot_0::I !exitcode_1::I !_x_2 !ps_3 = case _x_2 (PmDriver.DComp force_1_0 dircache_1_1 _x_1_2 todo_1_3 ds_1_4 -> case _x_1_2 (PmDriver.AsyncWin current_2_0 _x_2_1 -> case _x_2_1 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_3_0 win_compiler_process_ids_3_1 -> let _x_4_0::B = PmDriver.removeFromCurrent completedSlot_0 current_2_0, completed_4_1 = select _x_4_0::_Tuple2 0, ccstring_4_2 = "dummy ccstring for now..", _x_4_3 = IdeState.getStup ps_3, startupdir_4_4 = select _x_4_3::_Tuple2 0, ps_4_5 = select _x_4_3::_Tuple2 1, _x_4_6 = IdeState.getInteract ps_4_5, interact_4_7 = select _x_4_6::_Tuple2 0, typewin_4_8 = typeatt.update_type_window interact_4_7 (select (select completed_4_1::PmDriver._CurrentlyCompiled 0)::PmTypes._ModuleDirAndName 1), ps_4_9::B = select _x_4_6::_Tuple2 1, _x_4_10 = PmCleanSystem.CompileHandleExitCode (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) exitcode_1 ccstring_4_2 startupdir_4_4 completedSlot_0 errwin.updateErrorWindow typewin_4_8 (select completed_4_1::PmDriver._CurrentlyCompiled 0) (select (select completed_4_1::PmDriver._CurrentlyCompiled 1)::PmCompilerOptions._CompilerOptions 3) ps_4_9, abcpath_4_11 = select _x_4_10::_Tuple3 0, res_4_12 = select _x_4_10::_Tuple3 1, ps_4_13 = select _x_4_10::_Tuple3 2, _x_4_14 = PmDriver.ProcessCompilerMsg Data.Maybe.Nothing PmCleanSystem.Compilation (select completed_4_1::PmDriver._CurrentlyCompiled 1) (select completed_4_1::PmDriver._CurrentlyCompiled 0) abcpath_4_11 res_4_12 (select ds_1_4::PmDriver._DriverStateRecord 2) dircache_1_1 (select ds_1_4::PmDriver._DriverStateRecord 3) (select ds_1_4::PmDriver._DriverStateRecord 0) ps_4_13, _x_4_15 = select _x_4_14::_Tuple2 1, ok_4_16 = select _x_4_15::_Tuple9 3 in case ok_4_16 (True -> let ds_6_0 = update ds_1_4::PmDriver._DriverStateRecord [0:select _x_4_15::_Tuple9 2,2:select _x_4_15::_Tuple9 0,3:select _x_4_15::_Tuple9 1,5:ok_4_16,6:PmDriver._f248_248 (select ds_1_4::PmDriver._DriverStateRecord 6) _x_4_15] in <{_Tuple2!3}> (PmDriver.DComp force_1_0 (select _x_4_15::_Tuple9 7) (PmDriver.AsyncWin (select _x_4_0::_Tuple2 1) (PmDriver._AsyncWinCompilingInfo win_max_n_processes_3_0 win_compiler_process_ids_3_1)) (<{StdOverloadedList.++|_81}> (select _x_4_15::_Tuple9 6) todo_1_3) (update ds_6_0::PmDriver._DriverStateRecord [7:<{_predefined._!Cons}> (select completed_4_1::PmDriver._CurrentlyCompiled 0) (select ds_6_0::PmDriver._DriverStateRecord 7)])) (select _x_4_15::_Tuple9 8)) (False -> let _x_6_0 = select (update ds_1_4::PmDriver._DriverStateRecord [0:select _x_4_15::_Tuple9 2,2:select _x_4_15::_Tuple9 0,3:select _x_4_15::_Tuple9 1,5:ok_4_16,6:PmDriver._f249_249 (select ds_1_4::PmDriver._DriverStateRecord 6) _x_4_15])::PmDriver._DriverStateRecord 7 in <{_Tuple2!3}> (PmDriver.DQuitCompilers (select _x_6_0::_Tuple2 0) (PmDriver.AsyncWin (select _x_4_0::_Tuple2 1) (PmDriver._AsyncWinCompilingInfo win_max_n_processes_3_0 win_compiler_process_ids_3_1)) (select _x_6_0::_Tuple2 1)) (select _x_4_15::_Tuple9 8)) ) ) ) 
PmDriver._f249_249::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> select _x_1::_Tuple9 4)
PmDriver._f248_248::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> select _x_1::_Tuple9 4)
PmDriver.check_completed_54 !state_0 !ps_1 = case state_0 (PmDriver.DComp _x_1_0 _x_1_1 _x_1_2 _x_1_3 _x_1_4 -> case _x_1_2 (PmDriver.AsyncWin current_2_0 _x_2_1 -> case current_2_0 (_predefined._Cons _x_3_0 _x_3_1 -> case _x_2_1 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_4_0 win_compiler_process_ids_4_1 -> <{PmDriver._c;482;17_250}> (PmCleanSystem.CompilePollCompleted (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) win_compiler_process_ids_4_1 ps_1) state_0) ) ) ) (_ -> <{_Tuple2!3}> state_0 ps_1)
<{PmDriver._c;482;17_250}> !_x_0 !state_1 = case _x_0 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (PmCleanSystem.NoFinishedCompiler -> <{_Tuple2!3}> state_1 ps_1_1) (PmCleanSystem.FinishedCompiler completedSlot_2_0 exitcode_2_1 -> let !_x_3_0 = PmDriver.process_completed_55 completedSlot_2_0 exitcode_2_1 state_1 ps_1_1 in PmDriver.check_completed_54 (select _x_3_0::_Tuple2 0) (select _x_3_0::_Tuple2 1)) (PmCleanSystem.UnknownFinishedCompiler -> <{_Tuple2!3}> state_1 ps_1_1) ) 
PmDriver.start_compilations_56 !state_0 !ps_1 = case state_0 (PmDriver.DComp force_1_0 dircache_1_1 _x_1_2 _x_1_3 ds_1_4 -> case _x_1_2 (PmDriver.AsyncWin current_2_0 _x_2_1 -> case _x_2_1 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_3_0 win_compiler_process_ids_3_1 -> case _x_1_3 (<{_predefined._!Cons}> next_4_0 rest_4_1 -> case (StdBool.not (<{StdInt.<_17}> (StdList.length_47 current_2_0) win_max_n_processes_3_0)) (True -> <{_Tuple2!3}> state_0 (PmCleanSystem.DelayEventLoop ps_1)) (False -> case (case (PmDriver.module_occurs (select next_4_0::PmTypes._ModuleDirAndName 1) (select ds_1_4::PmDriver._DriverStateRecord 7)) (True -> True) (False -> PmDriver.currently_compiled (select next_4_0::PmTypes._ModuleDirAndName 1) current_2_0) ) (True -> PmDriver.start_compilations_56 (PmDriver.DComp force_1_0 dircache_1_1 (PmDriver.AsyncWin current_2_0 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_3_0 win_compiler_process_ids_3_1)) rest_4_1 ds_1_4) ps_1) (False -> case (PmTypes.isProjLibraryModule (select next_4_0::PmTypes._ModuleDirAndName 1) (select ds_1_4::PmDriver._DriverStateRecord 4)) (True -> <{_Tuple2!3}> (PmDriver.DComp force_1_0 dircache_1_1 (PmDriver.AsyncWin current_2_0 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_3_0 win_compiler_process_ids_3_1)) rest_4_1 ds_1_4) ps_1) (False -> let _x_8_0::B = PmDriver.UpdateDependencies force_1_0 next_4_0 rest_4_1 (PmDriver.AsyncWin current_2_0 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_3_0 win_compiler_process_ids_3_1)) dircache_1_1 ds_1_4 ps_1, ok_8_1 = select _x_8_0::_Tuple8 2 in case (StdBool.not ok_8_1) (True -> let !_x_10_0 = select (update (select _x_8_0::_Tuple8 6)::PmDriver._DriverStateRecord [5:ok_8_1])::PmDriver._DriverStateRecord 7 in <{_Tuple2!3}> (PmDriver.DQuitCompilers (select _x_10_0::_Tuple2 0) (PmDriver.AsyncWin current_2_0 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_3_0 win_compiler_process_ids_3_1)) (select _x_10_0::_Tuple2 1)) (select _x_8_0::_Tuple8 0)) (False -> PmDriver.start_compilations_56 (PmDriver.DComp force_1_0 (select _x_8_0::_Tuple8 1) (select _x_8_0::_Tuple8 5) (select _x_8_0::_Tuple8 4) (update (select _x_8_0::_Tuple8 6)::PmDriver._DriverStateRecord [5:ok_8_1])) (select _x_8_0::_Tuple8 0)) ) ) ) ) ) (_ -> case current_2_0 (_predefined._Nil -> case _x_1_3 (<{_predefined._!Nil}> -> <{_Tuple2!3}> state_0 ps_1) ) )) ) (_ -> <{_Tuple2!3}> state_0 (PmCleanSystem.DelayEventLoop ps_1))
PmDriver.level3_127::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_126 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_127 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.MakeABCOutOfDateMessage_89 !tp_0 !mn_1 !abc_2::B !abcexists_3::B !objexists_4::B !cgo_5::B = case abcexists_3 (True -> case (case abc_2 (True -> True) (False -> StdBool.not objexists_4) ) (True -> case cgo_5 (True -> case objexists_4 (True -> _predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (PmPath.MakeObjPathname tp_0 mn_1) ",]: is older than .abc file, new paths or new code generator options set")) _predefined._Nil) (False -> _predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (PmPath.MakeObjPathname tp_0 mn_1) ",]: does not exist, new paths or new code generator options set")) _predefined._Nil) ) (False -> case objexists_4 (True -> _predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (PmPath.MakeObjPathname tp_0 mn_1) ",]: is older than .abc file")) _predefined._Nil) (False -> _predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (PmPath.MakeObjPathname tp_0 mn_1) ",]: does not exist")) _predefined._Nil) ) ) (False -> case cgo_5 (True -> _predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (PmPath.MakeObjPathname tp_0 mn_1) ",]: new paths or new code generator options set")) _predefined._Nil) (False -> _predefined._Nil) ) ) (False -> _predefined._Nil) 
PmDriver.check_object_file_out_of_date !mdn_0 !sys_1::B !abccache_2 !fileinfo_3 !project_4 !ps_5 = let _x_1_0::B = IdeState.getCurrentProc ps_5, tp_1_1::B = select _x_1_0::_Tuple2 0, ps_1_2::B = select _x_1_0::_Tuple2 1, _x_1_3::B = PmFileInfo.FI_GetFileInfo (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) tp_1_1 mdn_0 abccache_2 fileinfo_3 ps_1_2, _x_1_4 = select _x_1_3::_Tuple2 0, cg_opt_1_5::B = <{PmDriver._if;1493;35_252}> sys_1 project_4 mn_1_9, modinfo_1_6 = select _x_1_4::_Tuple3 0, _x_1_7 = IdeState.getPrefs (select _x_1_3::_Tuple2 1), be_verbose_1_8::B = select (select _x_1_7::_Tuple2 0)::PmPrefs._Prefs 22, mn_1_9 = select mdn_0::PmTypes._ModuleDirAndName 1, abcexists_1_10 = select (select modinfo_1_6::PmFileInfo._FileInfo 7)::UtilDate._DATE 0, abc_1_11 = PmDriver._f251_251 abcexists_1_10 olderdate_1_12 objexists_1_13, olderdate_1_12 = UtilDate.Older_Date (select modinfo_1_6::PmFileInfo._FileInfo 8) (select modinfo_1_6::PmFileInfo._FileInfo 7), objexists_1_13 = select (select modinfo_1_6::PmFileInfo._FileInfo 8)::UtilDate._DATE 0 in <{_Tuple5!16}> (select _x_1_4::_Tuple3 1) (select _x_1_4::_Tuple3 2) (PmDriver._f253_253 cg_opt_1_5 abc_1_11) (select modinfo_1_6::PmFileInfo._FileInfo 1) (PmDriver.verbi_126 be_verbose_1_8 (<{PmDriver._if;1498;35_254}> be_verbose_1_8 tp_1_1 mn_1_9 abc_1_11 abcexists_1_10 objexists_1_13 cg_opt_1_5) (select _x_1_7::_Tuple2 1))
<{PmDriver._if;1498;35_254}> !be_verbose_0::B tp_1 mn_2 abc_3::B abcexists_4::B objexists_5::B cg_opt_6::B = case be_verbose_0 (True -> messwin.Level3 (PmDriver.MakeABCOutOfDateMessage_89 tp_1 mn_2 abc_3 abcexists_4 objexists_5 cg_opt_6)) (_ -> messwin.Level3 _predefined._Nil)
PmDriver._f253_253::B !cg_opt_0::B abc_1::B = case cg_opt_0 (True -> True) (_ -> abc_1)
<{PmDriver._if;1493;35_252}>::B !sys_0::B !project_1 mn_2 = case sys_0 (True -> StdBool.not (PmProject.PR_SysUptoDate project_1)) (_ -> StdBool.not (PmProject.PR_ABCUpToDate mn_2 project_1))
PmDriver._f251_251::B !abcexists_0::B olderdate_1::B objexists_2::B = case abcexists_0 (True -> case olderdate_1 (True -> True) (False -> StdBool.not objexists_2) ) (_ -> False)
PmDriver.get_paths_and_remove_process_from_list_57 !finished_cg_slot_n_0::I !_x_1 = case _x_1 (_predefined._Cons busy_process_1_0 rest_1_1 -> case busy_process_1_0 (PmDriver._CodeGeneratorProcessNAndPaths cgp_process_n_2_0 cgp_module_name_2_1 cgp_obj_path_2_2 -> case (<{StdInt.==_16}> finished_cg_slot_n_0 cgp_process_n_2_0) (True -> _Tuple3 cgp_module_name_2_1 cgp_obj_path_2_2 rest_1_1) (False -> let _x_4_0 = PmDriver.get_paths_and_remove_process_from_list_57 finished_cg_slot_n_0 rest_1_1 in _Tuple3 (select _x_4_0::_Tuple3 0) (select _x_4_0::_Tuple3 1) (_predefined._Cons busy_process_1_0 (select _x_4_0::_Tuple3 2))) ) ) (_predefined._Nil -> StdMisc.abort "driver.icl: unknown code generator id") 
PmDriver.handle_completed_processes_58 !max_n_processes_0::I known_finished_processors_1 !process_n_2::I busy_processes_3 project_4 fileinfo_5 ps_6 = case (StdBool.not (<{StdInt.<_17}> process_n_2 max_n_processes_0)) (True -> _Tuple4 busy_processes_3 project_4 fileinfo_5 ps_6) (False -> case (StdList.isMember_51 process_n_2 known_finished_processors_1) (True -> PmDriver.handle_completed_processes_58 max_n_processes_0 known_finished_processors_1 (<{StdInt.+_6}> process_n_2 1) busy_processes_3 project_4 fileinfo_5 ps_6) (False -> PmDriver.handle_completed_processes_58 max_n_processes_0 known_finished_processors_1 (<{StdInt.+_6}> process_n_2 1) busy_processes_3 project_4 fileinfo_5 (select (PmCleanSystem.SendRepeatResult process_n_2 ps_6)::_Tuple2 1)) ) 
PmDriver.check_unknow_processors_are_known_60 max_n_processes_0::I busy_processes_1 !_x_2 project_3 fileinfo_4 ps_5 = case _x_2 (PmDriver.UnknownFinishedProcessors n_unknown_finished_processors_1_0 known_finished_processors_1_1 -> case (StdBool.not (<{StdInt.<_17}> (<{StdInt.+_6}> n_unknown_finished_processors_1_0 (StdList.length_47 known_finished_processors_1_1)) max_n_processes_0)) (True -> let _x_3_0 = PmDriver.handle_completed_processes_58 max_n_processes_0 known_finished_processors_1_1 0 busy_processes_1 project_3 fileinfo_4 ps_5 in _Tuple6 True (select _x_3_0::_Tuple4 0) PmDriver.NoUnknownFinishedProcessors (select _x_3_0::_Tuple4 1) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) ) (_ -> _Tuple6 True busy_processes_1 _x_2 project_3 fileinfo_4 ps_5)
PmDriver.handle_finished_code_generators_59 !_vFileEnv_0 max_n_processes_1::I compiler_process_ids_2 !busy_processes_3 unknown_finished_processors_4 project_5 fileinfo_6 ps_7 = case busy_processes_3 (_predefined._Cons _x_1_0 _x_1_1 -> <{PmDriver._c;581;19_255}> (PmCleanSystem.CompilePollCompleted _vFileEnv_0 compiler_process_ids_2 ps_7) max_n_processes_1 busy_processes_3 unknown_finished_processors_4 project_5 fileinfo_6 _vFileEnv_0 compiler_process_ids_2) (_predefined._Nil -> PmDriver.check_unknow_processors_are_known_60 max_n_processes_1 _predefined._Nil unknown_finished_processors_4 project_5 fileinfo_6 ps_7) 
<{PmDriver._c;581;19_255}> !_x_0 max_n_processes_1::I busy_processes_2 unknown_finished_processors_3 project_4 fileinfo_5 _vFileEnv_6 compiler_process_ids_7 = case _x_0 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (PmCleanSystem.NoFinishedCompiler -> PmDriver.check_unknow_processors_are_known_60 max_n_processes_1 busy_processes_2 unknown_finished_processors_3 project_4 fileinfo_5 ps_1_1) (PmCleanSystem.UnknownFinishedCompiler -> _Tuple6 True busy_processes_2 (PmDriver.add_unknown_finished_processor unknown_finished_processors_3) project_4 fileinfo_5 ps_1_1) (PmCleanSystem.FinishedCompiler finished_cg_slot_n_2_0 exit_code_2_1 -> case (<{StdInt.==_16}> exit_code_2_1 0) (True -> let _x_4_0 = PmDriver.get_paths_and_remove_process_from_list_57 finished_cg_slot_n_2_0 busy_processes_2, module_name_4_1 = select _x_4_0::_Tuple3 0, _x_4_2 = select _vFileEnv_6::<{StdFile.FileEnv;}> 0 (PmFileInfo.FI_UpdateObjDate module_name_4_1 (select _x_4_0::_Tuple3 1) fileinfo_5) ps_1_1 in PmDriver.handle_finished_code_generators_59 _vFileEnv_6 max_n_processes_1 compiler_process_ids_7 (select _x_4_0::_Tuple3 2) (PmDriver.remove_from_unknown_finished_processors finished_cg_slot_n_2_0 unknown_finished_processors_3) (PmProject.PR_SetCodeGenerated module_name_4_1 project_4) (select _x_4_2::_Tuple2 0) (select _x_4_2::_Tuple2 1)) (False -> _Tuple6 False (select (PmDriver.get_paths_and_remove_process_from_list_57 finished_cg_slot_n_2_0 busy_processes_2)::_Tuple3 2) (PmDriver.remove_from_unknown_finished_processors finished_cg_slot_n_2_0 unknown_finished_processors_3) project_4 fileinfo_5 ps_1_1) ) ) 
PmDriver.foldl_129 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> PmDriver.foldl_129 op_0 (op_0 r_1 a_1_0) x_1_1) 
<{PmDriver.c;661;84_61}> !g_l_0 = <{PmDriver.g_c1;661;104_257}> g_l_0
<{PmDriver.g_c1;661;104_257}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;661;104_256}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{PmDriver.g_c2;661;104_256}> !g_h_0 g_t_1 = case g_h_0 (PmDriver._CodeGeneratorProcessNAndPaths cgp_process_n_1_0 cgp_module_name_1_1 cgp_obj_path_1_2 -> _predefined._Cons (<{StdString.+++_11}> " " cgp_module_name_1_1) (<{PmDriver.c;661;84_61}> g_t_1)) (_ -> <{PmDriver.c;661;84_61}> g_t_1)
<{PmDriver.c;668;95_62}> !g_l_0 = <{PmDriver.g_c1;668;114_259}> g_l_0
<{PmDriver.g_c1;668;114_259}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;668;114_258}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{PmDriver.g_c2;668;114_258}> !g_h_0 g_t_1 = case g_h_0 (PmDriver._CodeGeneratorProcessNAndPaths cgp_process_n_1_0 cgp_module_name_1_1 cgp_obj_path_1_2 -> _predefined._Cons cgp_process_n_1_0 (<{PmDriver.c;668;95_62}> g_t_1)) (_ -> <{PmDriver.c;668;95_62}> g_t_1)
PmDriver.foldl_196 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> PmDriver.foldl_196 (<{StdString.+++_11}> r_0 a_1_0) x_1_1) 
PmDriver.start_code_generators_63 compiler_process_ids_0 max_n_processes_1::I project_2 !paths_3 busy_processes_4 fileinfo_5 abccache_6 !ps_7 = case paths_3 (<{_predefined._!Cons}> mdn_1_0 rest_1_1 -> case (StdBool.not (<{StdInt.<_17}> (StdList.length_47 busy_processes_4) max_n_processes_1)) (True -> <{_Tuple6!32}> True paths_3 busy_processes_4 fileinfo_5 abccache_6 (PmCleanSystem.DelayEventLoop ps_7)) (False -> let _x_3_0 = PmDriver.check_object_file_out_of_date mdn_1_0 False abccache_6 fileinfo_5 project_2 ps_7 in case (StdBool.not (select _x_3_0::_Tuple5 2)) (True -> let _x_5_0 = IdeState.getCurrentProc (select _x_3_0::_Tuple5 4), _x_5_1 = PmFileInfo.FI_GetFileInfo (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) (select _x_5_0::_Tuple2 0) mdn_1_0 (select _x_3_0::_Tuple5 0) (select _x_3_0::_Tuple5 1) (select _x_5_0::_Tuple2 1), _x_5_2 = select _x_5_1::_Tuple2 0 in PmDriver.start_code_generators_63 compiler_process_ids_0 max_n_processes_1 project_2 rest_1_1 busy_processes_4 (select _x_5_2::_Tuple3 2) (select _x_5_2::_Tuple3 1) (select _x_5_1::_Tuple2 1)) (False -> let module_name_5_0::B = select mdn_1_0::PmTypes._ModuleDirAndName 1, ps_5_1 = select _x_3_0::_Tuple5 4, _x_5_2 = IdeState.getCurrentProc ps_5_1, proc_5_3 = select _x_5_2::_Tuple2 0, abccache_5_4 = select _x_3_0::_Tuple5 0, fileinfo_5_5 = select _x_3_0::_Tuple5 1, ps_5_6 = select _x_5_2::_Tuple2 1, _x_5_7::B = PmFileInfo.FI_GetFileInfo (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) proc_5_3 mdn_1_0 abccache_5_4 fileinfo_5_5 ps_5_6, ps_5_8 = select _x_5_7::_Tuple2 1, ps_5_9::I = messwin.showInfo (messwin.Level2 (PmDriver.foldl_196 (<{StdString.+++_11}> "Generating code for " module_name_5_0) (<{PmDriver.c;661;84_61}> busy_processes_4))) ps_5_8, _x_5_10 = IdeState.getStup ps_5_9, ps_5_11 = select _x_5_10::_Tuple2 1, _x_5_12 = IdeState.getCurrentCgen ps_5_11, cgen_5_13 = select _x_5_12::_Tuple2 0, abc_path_5_14 = select _x_3_0::_Tuple5 3, free_slot_5_15 = StdList.hd (StdList.removeMembers_60 (_SystemEnum._from_to_6 0 (<{StdInt.-_7}> max_n_processes_1 1)) (<{PmDriver.c;668;95_62}> busy_processes_4)), ao_5_16 = PmProject.PR_GetApplicationOptions project_2, timeprofile_5_17 = PmDriver._f260_260 (select ao_5_16::PmTypes._ApplicationOptions 16) neverTimeProfile_5_24, cgo_5_18 = PmProject.PR_GetCodeGenOptions project_2, startupdir_5_19 = select _x_5_10::_Tuple2 0, ps_5_20 = select _x_5_12::_Tuple2 1, _x_5_21 = PmDriver.get_neverTimeProfile_option module_name_5_0 project_2 ps_5_20, ps_5_22 = select _x_5_21::_Tuple2 1, _x_5_23 = PmCleanSystem.StartCodeGenerator cgen_5_13 errwin.updateErrorWindow PmCleanSystem.CodeGeneration abc_path_5_14 free_slot_5_15 timeprofile_5_17 cgo_5_18 proc_5_3 ao_5_16 startupdir_5_19 compiler_process_ids_0 ps_5_22, neverTimeProfile_5_24 = select _x_5_21::_Tuple2 0 in case (StdBool.not (select _x_5_23::_Tuple4 0)) (True -> let _x_7_0 = select _x_5_7::_Tuple2 0 in <{_Tuple6!32}> False rest_1_1 busy_processes_4 (select _x_7_0::_Tuple3 2) (select _x_7_0::_Tuple3 1) (select _x_5_23::_Tuple4 3)) (False -> let _x_7_0 = select _x_5_7::_Tuple2 0 in PmDriver.start_code_generators_63 compiler_process_ids_0 max_n_processes_1 project_2 rest_1_1 (_predefined._Cons (PmDriver._CodeGeneratorProcessNAndPaths free_slot_5_15 module_name_5_0 (select _x_5_23::_Tuple4 1)) busy_processes_4) (select _x_7_0::_Tuple3 2) (select _x_7_0::_Tuple3 1) (select _x_5_23::_Tuple4 3)) ) ) ) (<{_predefined._!Nil}> -> <{_Tuple6!32}> True <{_predefined._!Nil}> busy_processes_4 fileinfo_5 abccache_6 (PmCleanSystem.DelayEventLoop ps_7)) 
PmDriver._f260_260::B !_x_0::B neverTimeProfile_1::B = case _x_0 (True -> StdBool.not neverTimeProfile_1) (_ -> False)
<{PmDriver.cu;686;58_65}> !_vone_0 !<{_v+_1}> c_l_i_2 !g_l_3 = <{PmDriver.g_c1;686;83_262}> g_l_3 _vone_0 <{_v+_1}> c_l_i_2
<{PmDriver.g_c1;686;83_262}> !g_l_0 _vone_1 <{_v+_2}> c_l_i_3 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;686;83_261}> g_h_1_0 _vone_1 <{_v+_2}> c_l_i_3 g_t_1_1) (_ -> c_l_i_3)
<{PmDriver.g_c2;686;83_261}> !g_h_0 !_vone_1 !<{_v+_2}> c_l_i_3 !g_t_4 = case g_h_0 (PmDriver._WinCodeGeneratorProcess wcgp_process_n_1_0 wcgp_process_handle_1_1 wcgp_scg_1_2 wcgp_module_name_1_3 wcgp_obj_path_1_4 -> <{PmDriver.cu;686;58_65}> _vone_1 <{_v+_2}> (select <{_v+_2}>::<{StdOverloaded.+;}> 0 c_l_i_3 (select _vone_1::<{StdOverloaded.one;}> 0)) g_t_4) (_ -> <{PmDriver.cu;686;58_65}> _vone_1 <{_v+_2}> c_l_i_3 g_t_4)
<{PmDriver.cu;686;58_64}> !_vArray_0 c_a_1 c_i_2::I !g_l_3 = <{PmDriver.g_c1;686;83_264}> g_l_3 _vArray_0 c_a_1 c_i_2
<{PmDriver.g_c1;686;83_264}> !g_l_0 _vArray_1 c_a_2 c_i_3::I = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;686;83_263}> g_h_1_0 _vArray_1 c_a_2 c_i_3 g_t_1_1) (_ -> c_a_2)
<{PmDriver.g_c2;686;83_263}> !g_h_0 !_vArray_1 c_a_2 c_i_3::I !g_t_4 = case g_h_0 (PmDriver._WinCodeGeneratorProcess wcgp_process_n_1_0 wcgp_process_handle_1_1 wcgp_scg_1_2 wcgp_module_name_1_3 wcgp_obj_path_1_4 -> <{PmDriver.cu;686;58_64}> _vArray_1 (select _vArray_1::<{_SystemArray.Array;}> 5 c_a_2 c_i_3 wcgp_process_handle_1_1) (<{StdInt.+_6}> c_i_3 StdInt.one_11) g_t_4) (_ -> <{PmDriver.cu;686;58_64}> _vArray_1 c_a_2 c_i_3 g_t_4)
PmDriver.remove_finished_process_from_list_66 !i_0::I !_x_1 = case _x_1 (_predefined._Cons p_1_0 ps_1_1 -> case (<{StdInt.==_16}> i_0 0) (True -> _Tuple2 p_1_0 ps_1_1) (False -> let _x_3_0 = PmDriver.remove_finished_process_from_list_66 (<{StdInt.-_7}> i_0 1) ps_1_1 in _Tuple2 (select _x_3_0::_Tuple2 0) (_predefined._Cons p_1_0 (select _x_3_0::_Tuple2 1))) ) 
<{PmDriver.cu;686;58_197}>::I !<{_v+_0}> c_l_i_1::I !g_l_2 = <{PmDriver.g_c1;686;83_266}> g_l_2 <{_v+_0}> c_l_i_1
<{PmDriver.g_c1;686;83_266}>::I !g_l_0 <{_v+_1}> c_l_i_2::I = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;686;83_265}> g_h_1_0 <{_v+_1}> c_l_i_2 g_t_1_1) (_ -> c_l_i_2)
<{PmDriver.g_c2;686;83_265}>::I !g_h_0 !<{_v+_1}> c_l_i_2::I !g_t_3 = case g_h_0 (PmDriver._WinCodeGeneratorProcess wcgp_process_n_1_0 wcgp_process_handle_1_1 wcgp_scg_1_2 wcgp_module_name_1_3 wcgp_obj_path_1_4 -> <{PmDriver.cu;686;58_197}> <{_v+_1}> (select <{_v+_1}>::<{StdOverloaded.+;}> 0 c_l_i_2 StdInt.one_11) g_t_3) (_ -> <{PmDriver.cu;686;58_197}> <{_v+_1}> c_l_i_2 g_t_3)
<{PmDriver.cu;686;58_198}> !c_a_0 c_i_1::I !g_l_2 = <{PmDriver.g_c1;686;83_268}> g_l_2 c_a_0 c_i_1
<{PmDriver.g_c1;686;83_268}> !g_l_0 !c_a_1 c_i_2::I = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;686;83_267}> g_h_1_0 c_a_1 c_i_2 g_t_1_1) (_ -> c_a_1)
<{PmDriver.g_c2;686;83_267}> !g_h_0 !c_a_1 !c_i_2::I !g_t_3 = case g_h_0 (PmDriver._WinCodeGeneratorProcess wcgp_process_n_1_0 wcgp_process_handle_1_1 wcgp_scg_1_2 wcgp_module_name_1_3 wcgp_obj_path_1_4 -> <{PmDriver.cu;686;58_198}> (_SystemArray.update_13 c_a_1 c_i_2 wcgp_process_handle_1_1) (<{StdInt.+_6}> c_i_2 StdInt.one_11) g_t_3) (_ -> <{PmDriver.cu;686;58_198}> c_a_1 c_i_2 g_t_3)
<{PmDriver.cu;686;58_199}>::I !c_l_i_0::I !g_l_1 = <{PmDriver.g_c1;686;83_270}> g_l_1 c_l_i_0
<{PmDriver.g_c1;686;83_270}>::I !g_l_0 !c_l_i_1::I = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;686;83_269}> g_h_1_0 c_l_i_1 g_t_1_1) (_ -> c_l_i_1)
<{PmDriver.g_c2;686;83_269}>::I !g_h_0 !c_l_i_1::I !g_t_2 = case g_h_0 (PmDriver._WinCodeGeneratorProcess wcgp_process_n_1_0 wcgp_process_handle_1_1 wcgp_scg_1_2 wcgp_module_name_1_3 wcgp_obj_path_1_4 -> <{PmDriver.cu;686;58_199}> (<{StdInt.+_6}> c_l_i_1 StdInt.one_11) g_t_2) (_ -> <{PmDriver.cu;686;58_199}> c_l_i_1 g_t_2)
PmDriver.handle_finished_code_generators_67 !busy_processes_0 project_1 fileinfo_2 ps_3 = case busy_processes_0 (<{_predefined._|Cons}> _x_1_0 _x_1_1 -> let process_handles_2_0::I = <{PmDriver.cu;686;58_198}> (_SystemArray._createArray_8 (<{PmDriver.cu;686;58_199}> 0 busy_processes_0)) 0 busy_processes_0, _x_2_1 = PmCleanSystem.wait_for_finished_code_generator process_handles_2_0 ps_3, i_2_2 = select _x_2_1::_Tuple3 0 in case (<{StdInt.<_17}> i_2_2 0) (True -> _Tuple5 False busy_processes_0 project_1 fileinfo_2 (select _x_2_1::_Tuple3 2)) (False -> let _x_4_0 = PmDriver.remove_finished_process_from_list_66 i_2_2 busy_processes_0, finished_process_4_1 = select _x_4_0::_Tuple2 0, exit_code_4_2::I = select _x_2_1::_Tuple3 1, ps_4_3 = select _x_2_1::_Tuple3 2, _x_4_4 = PmCleanSystem.finish_code_generator (select finished_process_4_1::PmDriver._WinCodeGeneratorProcess 1) (select finished_process_4_1::PmDriver._WinCodeGeneratorProcess 2) exit_code_4_2 errwin.updateErrorWindow ps_4_3 in case (select _x_4_4::_Tuple2 0) (True -> let module_name_6_0 = select finished_process_4_1::PmDriver._WinCodeGeneratorProcess 3, _x_6_1 = StdPStClass.accFiles_8 (PmFileInfo.FI_UpdateObjDate module_name_6_0 (select finished_process_4_1::PmDriver._WinCodeGeneratorProcess 4) fileinfo_2) (select _x_4_4::_Tuple2 1) in _Tuple5 True (select _x_4_0::_Tuple2 1) (PmProject.PR_SetCodeGenerated module_name_6_0 project_1) (select _x_6_1::_Tuple2 0) (select _x_6_1::_Tuple2 1)) (False -> _Tuple5 False (select _x_4_0::_Tuple2 1) project_1 fileinfo_2 (select _x_4_4::_Tuple2 1)) ) ) (<{_predefined._|Nil}> -> _Tuple5 True _predefined._Nil project_1 fileinfo_2 ps_3) 
PmDriver.foldl_128 op_0 r_1 !_x_2 = case _x_2 (_predefined._Nil -> r_1) (_predefined._Cons a_1_0 x_1_1 -> PmDriver.foldl_128 op_0 (op_0 r_1 a_1_0) x_1_1) 
<{PmDriver.c;728;85_68}> !g_l_0 = <{PmDriver.g_c1;728;106_272}> g_l_0
<{PmDriver.g_c1;728;106_272}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;728;106_271}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{PmDriver.g_c2;728;106_271}> !g_h_0 g_t_1 = case g_h_0 (PmDriver._WinCodeGeneratorProcess wcgp_process_n_1_0 wcgp_process_handle_1_1 wcgp_scg_1_2 wcgp_module_name_1_3 wcgp_obj_path_1_4 -> _predefined._Cons (<{StdString.+++_11}> " " wcgp_module_name_1_3) (<{PmDriver.c;728;85_68}> g_t_1)) (_ -> <{PmDriver.c;728;85_68}> g_t_1)
<{PmDriver.c;736;100_69}> !g_l_0 = <{PmDriver.g_c1;736;120_274}> g_l_0
<{PmDriver.g_c1;736;120_274}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmDriver.g_c2;736;120_273}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{PmDriver.g_c2;736;120_273}> !g_h_0 g_t_1 = case g_h_0 (PmDriver._WinCodeGeneratorProcess wcgp_process_n_1_0 wcgp_process_handle_1_1 wcgp_scg_1_2 wcgp_module_name_1_3 wcgp_obj_path_1_4 -> _predefined._Cons wcgp_process_n_1_0 (<{PmDriver.c;736;100_69}> g_t_1)) (_ -> <{PmDriver.c;736;100_69}> g_t_1)
PmDriver.foldl_200 !r_0 !_x_1 = case _x_1 (_predefined._Nil -> r_0) (_predefined._Cons a_1_0 x_1_1 -> PmDriver.foldl_200 (<{StdString.+++_11}> r_0 a_1_0) x_1_1) 
PmDriver.start_code_generators_70 win_max_n_processes_0::I project_1 !paths_2 busy_processes_3 fileinfo_4 abccache_5 !ps_6 = case paths_2 (<{_predefined._!Cons}> mdn_1_0 rest_1_1 -> case (StdBool.not (<{StdInt.<_17}> (StdList.length_47 busy_processes_3) win_max_n_processes_0)) (True -> <{_Tuple6!32}> True paths_2 busy_processes_3 fileinfo_4 abccache_5 ps_6) (False -> let _x_3_0 = PmDriver.check_object_file_out_of_date mdn_1_0 False abccache_5 fileinfo_4 project_1 ps_6 in case (StdBool.not (select _x_3_0::_Tuple5 2)) (True -> let _x_5_0 = IdeState.getCurrentProc (select _x_3_0::_Tuple5 4), _x_5_1 = PmFileInfo.FI_GetFileInfo (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) (select _x_5_0::_Tuple2 0) mdn_1_0 (select _x_3_0::_Tuple5 0) (select _x_3_0::_Tuple5 1) (select _x_5_0::_Tuple2 1), _x_5_2 = select _x_5_1::_Tuple2 0 in PmDriver.start_code_generators_70 win_max_n_processes_0 project_1 rest_1_1 busy_processes_3 (select _x_5_2::_Tuple3 2) (select _x_5_2::_Tuple3 1) (select _x_5_1::_Tuple2 1)) (False -> let module_name_5_0::B = select mdn_1_0::PmTypes._ModuleDirAndName 1, ps_5_1 = select _x_3_0::_Tuple5 4, _x_5_2 = IdeState.getCurrentProc ps_5_1, proc_5_3 = select _x_5_2::_Tuple2 0, abccache_5_4 = select _x_3_0::_Tuple5 0, fileinfo_5_5 = select _x_3_0::_Tuple5 1, ps_5_6 = select _x_5_2::_Tuple2 1, _x_5_7::B = PmFileInfo.FI_GetFileInfo (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) proc_5_3 mdn_1_0 abccache_5_4 fileinfo_5_5 ps_5_6, ps_5_8 = select _x_5_7::_Tuple2 1, ps_5_9::I = messwin.showInfo (messwin.Level2 (PmDriver.foldl_200 (<{StdString.+++_11}> "Generating code for " module_name_5_0) (<{PmDriver.c;728;85_68}> busy_processes_3))) ps_5_8, _x_5_10 = IdeState.getStup ps_5_9, ps_5_11 = select _x_5_10::_Tuple2 1, _x_5_12 = IdeState.getCurrentCgen ps_5_11, cgen_5_13 = select _x_5_12::_Tuple2 0, abc_path_5_14 = select _x_3_0::_Tuple5 3, free_slot_5_15 = StdList.hd (StdList.removeMembers_60 (_SystemEnum._from_to_6 0 (<{StdInt.-_7}> win_max_n_processes_0 1)) (<{PmDriver.c;736;100_69}> busy_processes_3)), ao_5_16 = PmProject.PR_GetApplicationOptions project_1, timeprofile_5_17 = PmDriver._f275_275 (select ao_5_16::PmTypes._ApplicationOptions 16) neverTimeProfile_5_24, cgo_5_18 = PmProject.PR_GetCodeGenOptions project_1, startupdir_5_19 = select _x_5_10::_Tuple2 0, ps_5_20 = select _x_5_12::_Tuple2 1, _x_5_21 = PmDriver.get_neverTimeProfile_option module_name_5_0 project_1 ps_5_20, ps_5_22 = select _x_5_21::_Tuple2 1, _x_5_23 = PmCleanSystem.start_code_generator cgen_5_13 errwin.updateErrorWindow abc_path_5_14 free_slot_5_15 timeprofile_5_17 cgo_5_18 proc_5_3 startupdir_5_19 ps_5_22, neverTimeProfile_5_24 = select _x_5_21::_Tuple2 0 in case (StdBool.not (select _x_5_23::_Tuple4 0)) (True -> let _x_7_0 = select _x_5_7::_Tuple2 0 in <{_Tuple6!32}> False rest_1_1 busy_processes_3 (select _x_7_0::_Tuple3 2) (select _x_7_0::_Tuple3 1) (select _x_5_23::_Tuple4 3)) (False -> let _x_7_0 = select _x_5_7::_Tuple2 0 in PmDriver.start_code_generators_70 win_max_n_processes_0 project_1 rest_1_1 (_predefined._Cons (PmDriver._WinCodeGeneratorProcess free_slot_5_15 (select _x_5_23::_Tuple4 1) (select _x_5_23::_Tuple4 2) module_name_5_0 (PmPath.ModuleDirAndNameToObjSystemPathname proc_5_3 mdn_1_0)) busy_processes_3) (select _x_7_0::_Tuple3 2) (select _x_7_0::_Tuple3 1) (select _x_5_23::_Tuple4 3)) ) ) ) (<{_predefined._!Nil}> -> <{_Tuple6!32}> True <{_predefined._!Nil}> busy_processes_3 fileinfo_4 abccache_5 ps_6) 
PmDriver._f275_275::B !_x_0::B neverTimeProfile_1::B = case _x_0 (True -> StdBool.not neverTimeProfile_1) (_ -> False)
PmDriver.DATEtoDateTime_74 !_x_0 = case _x_0 (UtilDate._DATE exists_1_0 yy_1_1 mm_1_2 dd_1_3 h_1_4 m_1_5 s_1_6 -> <{_Tuple2!3}> (StdLibMisc._Date yy_1_1 mm_1_2 dd_1_3 0) (StdLibMisc._Time h_1_4 m_1_5 s_1_6)) 
PmDriver.GetPathNames !_x_0 !acc_1 !cache_2 = case _x_0 (<{_predefined._!Nil!}> -> <{_Tuple3!4}> True acc_1 cache_2) (<{_predefined._!Cons!}> fn_1_0 fns_1_1 -> let _x_2_0 = PmDirCache.DC_Search fn_1_0 cache_2 in case (select _x_2_0::_Tuple4 0) (True -> PmDriver.GetPathNames fns_1_1 (<{_predefined._!Cons!}> (<{StdString.+++_11}> (select _x_2_0::_Tuple4 1) (<{StdString.+++_11}> "\\" fn_1_0)) acc_1) (select _x_2_0::_Tuple4 3)) (False -> <{_Tuple3!4}> False (<{_predefined._!Cons!}> fn_1_0 <{_predefined._!Nil!}>) (select _x_2_0::_Tuple4 3)) ) 
PmDriver.append_object_file_extension_if_dot_at_end tp_0 use_64_bit_processor_1::B !s_2 = case (<{StdChar.==_18}> (_SystemArray.select_19 s_2 (<{StdInt.-_7}> (_SystemArray.size_20 s_2) 1)) '.') (True -> case (case use_64_bit_processor_1 (True -> <{StdChar.==_18}> '\\' '\\') (False -> False) ) (True -> <{StdString.+++_11}> s_2 "obj") (False -> PmPath.MakeObjPathname tp_0 s_2) ) (False -> s_2) 
PmDriver.level3_125::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_124 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_125 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.level3_123::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_122 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_123 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.CheckExecOutOfDate !gen_0::B !execpath_1 !fileinfo_2 !project_3 !ps_4 = case gen_0 (True -> _Tuple2 True ps_4) (False -> case (StdBool.not (PmProject.PR_ExecUpToDate project_3)) (True -> let _x_3_0::B = IdeState.getPrefs ps_4, be_verbose_3_1 = select (select _x_3_0::_Tuple2 0)::PmPrefs._Prefs 22 in _Tuple2 True (PmDriver.verbi_122 be_verbose_3_1 (<{PmDriver._if;1564;31_276}> be_verbose_3_1 execpath_1) (select _x_3_0::_Tuple2 1))) (False -> let youngest_3_0 = PmFileInfo.YoungestObj (UtilDate._DATE False 0 0 0 0 0 0) fileinfo_2, _x_3_1 = IdeState.getPrefs ps_4, ps_3_2 = select _x_3_1::_Tuple2 1, _x_3_3 = StdPStClass.accFiles_8 (UtilIO.FModified execpath_1) ps_3_2, date_3_4 = select _x_3_3::_Tuple2 0 in case (case (select youngest_3_0::UtilDate._DATE 0) (True -> case (StdBool.not (select date_3_4::UtilDate._DATE 0)) (True -> True) (False -> UtilDate.Older_Date date_3_4 youngest_3_0) ) (False -> False) ) (True -> let be_verbose_5_0::B = select (select _x_3_1::_Tuple2 0)::PmPrefs._Prefs 22 in _Tuple2 True (PmDriver.verbi_124 be_verbose_5_0 (<{PmDriver._if;1572;31_277}> be_verbose_5_0 date_3_4 execpath_1) (select _x_3_3::_Tuple2 1))) (False -> _Tuple2 False (select _x_3_3::_Tuple2 1)) ) ) 
<{PmDriver._if;1572;31_277}> !be_verbose_0::B date_1 execpath_2 = case be_verbose_0 (True -> case (select date_1::UtilDate._DATE 0) (True -> messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (StdPathname.RemovePath execpath_2) ",]: is older than object files. Linking new executable.")) _predefined._Nil)) (False -> messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (StdPathname.RemovePath execpath_2) ",]: does not exist. Linking new executable.")) _predefined._Nil)) ) (_ -> messwin.Level3 _predefined._Nil)
<{PmDriver._if;1564;31_276}> !be_verbose_0::B execpath_1 = case be_verbose_0 (True -> messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "'" (<{StdString.+++_11}> (StdPathname.RemovePath execpath_1) "' was linked with different application options")) _predefined._Nil)) (_ -> messwin.Level3 _predefined._Nil)
PmDriver.level3_121::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_120 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_121 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.level3_119::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_118 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_119 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.level3_117::B !_x_0 = case _x_0 (messwin.Level3 _x_1_0 -> True) (_ -> False)
PmDriver.verbi_116 !verbose_0::B !info_1 !ps_2 = case (case (StdBool.not verbose_0) (True -> PmDriver.level3_117 info_1) (False -> False) ) (True -> ps_2) (False -> messwin.showInfo info_1 ps_2) 
PmDriver.check_90 date_0 !_x_1 files_2 = case _x_1 (<{_predefined._!Nil!}> -> _Tuple2 False files_2) (<{_predefined._!Cons!}> hd_1_0 tl_1_1 -> let _x_2_0 = UtilIO.FModified hd_1_0 files_2 in case (UtilDate.Older_Date date_0 (select _x_2_0::_Tuple2 0)) (True -> _Tuple2 True (select _x_2_0::_Tuple2 1)) (False -> PmDriver.check_90 date_0 tl_1_1 (select _x_2_0::_Tuple2 1)) ) 
PmDriver.CheckObjsOutOfDate !gen_0::B execpath_1 objs_2 ps_3 = case gen_0 (True -> let _x_2_0::B = IdeState.getPrefs ps_3, be_verbose_2_1 = select (select _x_2_0::_Tuple2 0)::PmPrefs._Prefs 22 in _Tuple2 True (PmDriver.verbi_116 be_verbose_2_1 (<{PmDriver._if;1533;31_278}> be_verbose_2_1 execpath_1) (select _x_2_0::_Tuple2 1))) (False -> let _x_2_0 = IdeState.getPrefs ps_3, ps_2_1 = select _x_2_0::_Tuple2 1, _x_2_2 = StdPStClass.accFiles_8 (UtilIO.FModified execpath_1) ps_2_1, date_2_3 = select _x_2_2::_Tuple2 0 in case (StdBool.not (select date_2_3::UtilDate._DATE 0)) (True -> let be_verbose_4_0::B = select (select _x_2_0::_Tuple2 0)::PmPrefs._Prefs 22 in _Tuple2 True (PmDriver.verbi_118 be_verbose_4_0 (<{PmDriver._if;1539;31_279}> be_verbose_4_0 execpath_1) (select _x_2_2::_Tuple2 1))) (False -> let ps_4_0 = select _x_2_2::_Tuple2 1, _x_4_1 = StdPStClass.accFiles_8 (PmDriver.check_90 date_2_3 objs_2) ps_4_0 in case (select _x_4_1::_Tuple2 0) (True -> let be_verbose_6_0::B = select (select _x_2_0::_Tuple2 0)::PmPrefs._Prefs 22 in _Tuple2 True (PmDriver.verbi_120 be_verbose_6_0 (<{PmDriver._if;1545;31_280}> be_verbose_6_0 execpath_1) (select _x_4_1::_Tuple2 1))) (False -> _Tuple2 False (select _x_4_1::_Tuple2 1)) ) ) 
<{PmDriver._if;1545;31_280}> !be_verbose_0::B execpath_1 = case be_verbose_0 (True -> messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (StdPathname.RemovePath execpath_1) ",]: is older than object files. Linking new executable.")) _predefined._Nil)) (_ -> messwin.Level3 _predefined._Nil)
<{PmDriver._if;1539;31_279}> !be_verbose_0::B execpath_1 = case be_verbose_0 (True -> messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (StdPathname.RemovePath execpath_1) ",]: does not exist. Linking new executable.")) _predefined._Nil)) (_ -> messwin.Level3 _predefined._Nil)
<{PmDriver._if;1533;31_278}> !be_verbose_0::B execpath_1 = case be_verbose_0 (True -> messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> (StdPathname.RemovePath execpath_1) ",]: out of date. Linking new executable.")) _predefined._Nil)) (_ -> messwin.Level3 _predefined._Nil)
PmDriver.MakeOptionsName !path_0 !processor_1 = <{StdString.+++_11}> (StdPathname.RemoveFilename path_0) (<{StdString.+++_11}> "\\" (<{StdString.+++_11}> "Clean System Files" (<{StdString.+++_11}> "\\" (<{StdString.+++_11}> "_" (<{StdString.+++_11}> (<{StdPathname.RemoveSuffix`}> (StdPathname.RemovePath path_0)) (PmPath.MakeObjPathname processor_1 "_options"))))))
<{PmDriver.findPos`_77}>::I !_vArray_0 !<{_v==_1}> c_2 s_3 !i_4::I = case (<{StdInt.<_17}> i_4 0) (True -> <{StdInt.~_15}> 1) (False -> case (select <{_v==_1}>::<{StdOverloaded.==;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 i_4) c_2) (True -> i_4) (False -> <{PmDriver.findPos`_77}> _vArray_0 <{_v==_1}> c_2 s_3 (<{StdInt.-_7}> i_4 StdInt.one_11)) ) 
PmDriver.lsplit_73 !_vArray_0 !<{_v==_1}> !<{_v%_2}> c_3 s_4 !i_5::I l_6 = case (<{StdInt.<_17}> i_5 0) (True -> l_6) (False -> let <{i`_2_0}>::I = <{PmDriver.findPos`_77}> _vArray_0 <{_v==_1}> c_3 s_4 i_5 in PmDriver.lsplit_73 _vArray_0 <{_v==_1}> <{_v%_2}> c_3 s_4 (<{StdInt.-_7}> <{i`_2_0}> StdInt.one_11) (_predefined._Cons (select <{_v%_2}>::<{StdOverloaded.%;}> 0 s_4 (_Tuple2 (<{StdInt.+_6}> <{i`_2_0}> 1) i_5)) l_6)) 
<{PmDriver.findPos`_202}>::I !<{_v==_0}> c_1::C s_2 !i_3::I = case (<{StdInt.<_17}> i_3 0) (True -> <{StdInt.~_15}> 1) (False -> case (select <{_v==_0}>::<{StdOverloaded.==;}> 0 (_SystemArray.select_19 s_2 i_3) c_1) (True -> i_3) (False -> <{PmDriver.findPos`_202}> <{_v==_0}> c_1 s_2 (<{StdInt.-_7}> i_3 StdInt.one_11)) ) 
PmDriver.lsplit_201 !<{_v==_0}> !<{_v%_1}> c_2::C s_3 !i_4::I l_5 = case (<{StdInt.<_17}> i_4 0) (True -> l_5) (False -> let <{i`_2_0}>::I = <{PmDriver.findPos`_202}> <{_v==_0}> c_2 s_3 i_4 in PmDriver.lsplit_201 <{_v==_0}> <{_v%_1}> c_2 s_3 (<{StdInt.-_7}> <{i`_2_0}> StdInt.one_11) (_predefined._Cons (select <{_v%_1}>::<{StdOverloaded.%;}> 0 s_3 (_Tuple2 (<{StdInt.+_6}> <{i`_2_0}> 1) i_4)) l_5)) 
<{PmDriver.findPos`_204}>::I c_0::C s_1 !i_2::I = case (<{StdInt.<_17}> i_2 0) (True -> <{StdInt.~_15}> 1) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_1 i_2) c_0) (True -> i_2) (False -> <{PmDriver.findPos`_204}> c_0 s_1 (<{StdInt.-_7}> i_2 StdInt.one_11)) ) 
PmDriver.lsplit_203 !<{_v%_0}> c_1::C s_2 !i_3::I l_4 = case (<{StdInt.<_17}> i_3 0) (True -> l_4) (False -> let <{i`_2_0}>::I = <{PmDriver.findPos`_204}> c_1 s_2 i_3 in PmDriver.lsplit_203 <{_v%_0}> c_1 s_2 (<{StdInt.-_7}> <{i`_2_0}> StdInt.one_11) (_predefined._Cons (select <{_v%_0}>::<{StdOverloaded.%;}> 0 s_2 (_Tuple2 (<{StdInt.+_6}> <{i`_2_0}> 1) i_3)) l_4)) 
PmDriver.lsplit_205 c_0::C s_1 !i_2::I l_3 = case (<{StdInt.<_17}> i_2 0) (True -> l_3) (False -> let <{i`_2_0}>::I = <{PmDriver.findPos`_204}> c_0 s_1 i_2 in PmDriver.lsplit_205 c_0 s_1 (<{StdInt.-_7}> <{i`_2_0}> StdInt.one_11) (_predefined._Cons (<{StdString.%_10}> s_1 (_Tuple2 (<{StdInt.+_6}> <{i`_2_0}> 1) i_2)) l_3)) 
PmDriver.lSplit_76 !c_0::C !s_1 = PmDriver.lsplit_205 c_0 s_1 (<{StdInt.-_7}> (_SystemArray.size_20 s_1) StdInt.one_11) _predefined._Nil
PmDriver.non_space_left_72::I !_vArray_0 s_1 !size_s_2::I !i_3::I = case (case (<{StdInt.<_17}> i_3 size_s_2) (True -> StdChar.isSpace (select _vArray_0::<{_SystemArray.Array;}> 3 s_1 i_3)) (False -> False) ) (True -> PmDriver.non_space_left_72 _vArray_0 s_1 size_s_2 (<{StdInt.+_6}> i_3 1)) (False -> i_3) 
PmDriver.non_space_left_206::I s_0 !size_s_1::I !i_2::I = case (case (<{StdInt.<_17}> i_2 size_s_1) (True -> StdChar.isSpace (_SystemArray.select_19 s_0 i_2)) (False -> False) ) (True -> PmDriver.non_space_left_206 s_0 size_s_1 (<{StdInt.+_6}> i_2 1)) (False -> i_2) 
PmDriver.ltrim_75 !s_0 = let size_s_1_0::I = _SystemArray.size_20 s_0, non_space_index_1_1::I = PmDriver.non_space_left_206 s_0 size_s_1_0 0 in case (<{StdInt.==_16}> non_space_index_1_1 0) (True -> s_0) (False -> <{StdString.%_10}> s_0 (_Tuple2 non_space_index_1_1 (<{StdInt.-_7}> size_s_1_0 1))) 
PmDriver.linkfun_71 lo_0 app_path_1 ao_2 tp_3 <{prj_path`_4}> execpath_5 use_64_bit_processor_6::B sfiles_7 ofiles_8 lfiles_9 startupdir_10 optionspath_11 dynlstr_12 !_x_13 linkstr_14 = case _x_13 (_Tuple2 ps_1_0 ok_1_1 -> case ok_1_1 (True -> PmCleanSystem.Link (PmDriver.ltrim_75 linkstr_14) errwin.updateErrorWindow execpath_5 ao_2 optionspath_11 lfiles_9 ofiles_8 sfiles_7 (<{PmTypes.==_13}> (select lo_0::PmTypes._LinkOptions 2) PmTypes.LM_Static) (select lo_0::PmTypes._LinkOptions 3) (select lo_0::PmTypes._LinkOptions 4) (select lo_0::PmTypes._LinkOptions 5) (select lo_0::PmTypes._LinkOptions 6) (PmPath.fulPath app_path_1 <{prj_path`_4}> (select lo_0::PmTypes._LinkOptions 7)) (select lo_0::PmTypes._LinkOptions 8) (PmPath.fulPath app_path_1 <{prj_path`_4}> (select lo_0::PmTypes._LinkOptions 9)) startupdir_10 dynlstr_12 tp_3 use_64_bit_processor_6 ps_1_0) (False -> _Tuple2 ps_1_0 ok_1_1) ) 
PmDriver.check_exists_207 !_x_0 ps_1 = case _x_0 (_predefined._Nil -> _Tuple2 Data.Maybe.Nothing ps_1) (_predefined._Cons file_1_0 rest_1_1 -> let _x_2_0 = StdPStClass.accFiles_8 (UtilIO.FExists file_1_0) ps_1 in case (select _x_2_0::_Tuple2 0) (True -> PmDriver.check_exists_207 rest_1_1 (select _x_2_0::_Tuple2 1)) (False -> _Tuple2 (Data.Maybe.Just file_1_0) (select _x_2_0::_Tuple2 1)) ) 
PmDriver.foldl_211 lo_0 app_path_1 ao_2 tp_3 <{prj_path`_4}> execpath_5 use_64_bit_processor_6::B sfiles_7 ofiles_8 lfiles_9 startupdir_10 optionspath_11 dynlstr_12 !r_13 !_x_14 = case _x_14 (_predefined._Nil -> r_13) (_predefined._Cons a_1_0 x_1_1 -> PmDriver.foldl_211 lo_0 app_path_1 ao_2 tp_3 <{prj_path`_4}> execpath_5 use_64_bit_processor_6 sfiles_7 ofiles_8 lfiles_9 startupdir_10 optionspath_11 dynlstr_12 (PmDriver.linkfun_71 lo_0 app_path_1 ao_2 tp_3 <{prj_path`_4}> execpath_5 use_64_bit_processor_6 sfiles_7 ofiles_8 lfiles_9 startupdir_10 optionspath_11 dynlstr_12 r_13 a_1_0) x_1_1) 
PmDriver.handle_finished_code_generators_210 max_n_processes_0::I compiler_process_ids_1 !busy_processes_2 unknown_finished_processors_3 project_4 fileinfo_5 ps_6 = case busy_processes_2 (_predefined._Cons _x_1_0 _x_1_1 -> <{PmDriver._c;581;19_281}> (PmCleanSystem.CompilePollCompleted (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) compiler_process_ids_1 ps_6) max_n_processes_0 busy_processes_2 unknown_finished_processors_3 project_4 fileinfo_5 compiler_process_ids_1) (_predefined._Nil -> PmDriver.check_unknow_processors_are_known_60 max_n_processes_0 _predefined._Nil unknown_finished_processors_3 project_4 fileinfo_5 ps_6) 
<{PmDriver._c;581;19_281}> !_x_0 max_n_processes_1::I busy_processes_2 unknown_finished_processors_3 project_4 fileinfo_5 compiler_process_ids_6 = case _x_0 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (PmCleanSystem.NoFinishedCompiler -> PmDriver.check_unknow_processors_are_known_60 max_n_processes_1 busy_processes_2 unknown_finished_processors_3 project_4 fileinfo_5 ps_1_1) (PmCleanSystem.UnknownFinishedCompiler -> _Tuple6 True busy_processes_2 (PmDriver.add_unknown_finished_processor unknown_finished_processors_3) project_4 fileinfo_5 ps_1_1) (PmCleanSystem.FinishedCompiler finished_cg_slot_n_2_0 exit_code_2_1 -> case (<{StdInt.==_16}> exit_code_2_1 0) (True -> let _x_4_0 = PmDriver.get_paths_and_remove_process_from_list_57 finished_cg_slot_n_2_0 busy_processes_2, module_name_4_1 = select _x_4_0::_Tuple3 0, _x_4_2 = StdPStClass.accFiles_8 (PmFileInfo.FI_UpdateObjDate module_name_4_1 (select _x_4_0::_Tuple3 1) fileinfo_5) ps_1_1 in PmDriver.handle_finished_code_generators_210 max_n_processes_1 compiler_process_ids_6 (select _x_4_0::_Tuple3 2) (PmDriver.remove_from_unknown_finished_processors finished_cg_slot_n_2_0 unknown_finished_processors_3) (PmProject.PR_SetCodeGenerated module_name_4_1 project_4) (select _x_4_2::_Tuple2 0) (select _x_4_2::_Tuple2 1)) (False -> _Tuple6 False (select (PmDriver.get_paths_and_remove_process_from_list_57 finished_cg_slot_n_2_0 busy_processes_2)::_Tuple3 2) (PmDriver.remove_from_unknown_finished_processors finished_cg_slot_n_2_0 unknown_finished_processors_3) project_4 fileinfo_5 ps_1_1) ) ) 
PmDriver.app_world_instead_of_io_209 !_x_0::B !_x_1 !io_2 = let _x_1_0 = iostate.ioStGetWorld io_2 in iostate.ioStSetWorld (PmCleanSystem.QuitCleanCompiler _x_0 _x_1 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
PmDriver.app_world_instead_of_io_208 !_x_0::B !_x_1 !io_2 = let _x_1_0 = iostate.ioStGetWorld io_2 in iostate.ioStSetWorld (PmCleanSystem.QuitCleanCompiler _x_0 _x_1 (select _x_1_0::_Tuple2 0)) (select _x_1_0::_Tuple2 1)
PmDriver.step !intr_0::B !_x_1 !ps_2 = case _x_1 (PmDriver.DInit force_1_0 project_1_1 setproject_1_2 -> let _x_2_0 = IdeState.getABCCache ps_2, _x_2_1 = <{PmDriver.getFICache`}> (select _x_2_0::_Tuple2 1) in PmDriver.MakeTheProject force_1_0 (select _x_2_1::_Tuple2 0) (PmProject.PR_GetStaticLibsInfo project_1_1) (select _x_2_0::_Tuple2 0) project_1_1 setproject_1_2 (select _x_2_1::_Tuple2 1)) (PmDriver.DComp force_1_0 dircache_1_1 compinfo_1_2 rest_1_3 ds_1_4 -> case intr_0 (True -> <{PmDriver._c;297;7_283}> compinfo_1_2 ds_1_4 ps_2) (False -> case compinfo_1_2 (PmDriver.Sync -> case rest_1_3 (<{_predefined._!Nil}> -> let _x_5_0 = PmProject.PR_GetDirAndModulenames (PmProject.PR_SetBuilt (select ds_1_4::PmDriver._DriverStateRecord 7) (select ds_1_4::PmDriver._DriverStateRecord 0)), _x_5_1 = select (update ds_1_4::PmDriver._DriverStateRecord [0:select _x_5_0::_Tuple2 1,7:select _x_5_0::_Tuple2 0])::PmDriver._DriverStateRecord 7 in PmDriver.step intr_0 (PmDriver.DGene (select _x_5_1::_Tuple2 0) PmDriver.SyncCodeGeneration (select _x_5_1::_Tuple2 1)) (messwin.showInfo (messwin.Level1 "Generating...") ps_2)) (<{_predefined._!Cons}> next_4_0 rest_4_1 -> case (PmDriver.module_occurs (select next_4_0::PmTypes._ModuleDirAndName 1) (select ds_1_4::PmDriver._DriverStateRecord 7)) (True -> PmDriver.step intr_0 (PmDriver.DComp force_1_0 dircache_1_1 PmDriver.Sync rest_4_1 ds_1_4) ps_2) (False -> case (PmTypes.isProjLibraryModule (select next_4_0::PmTypes._ModuleDirAndName 1) (select ds_1_4::PmDriver._DriverStateRecord 4)) (True -> PmDriver.step intr_0 (PmDriver.DComp force_1_0 dircache_1_1 PmDriver.Sync rest_4_1 ds_1_4) ps_2) (False -> let _x_7_0::B = PmDriver.UpdateDependencies force_1_0 next_4_0 rest_4_1 PmDriver.Sync dircache_1_1 ds_1_4 ps_2, ok_7_1 = select _x_7_0::_Tuple8 2 in case (StdBool.not ok_7_1) (True -> let ds_9_0 = select _x_7_0::_Tuple8 6, _x_9_1 = select (update ds_9_0::PmDriver._DriverStateRecord [5:ok_7_1,6:PmDriver._f284_284 (select ds_9_0::PmDriver._DriverStateRecord 6) _x_7_0])::PmDriver._DriverStateRecord 7 in PmDriver.step intr_0 (PmDriver.DGene (select _x_9_1::_Tuple2 0) PmDriver.SyncCodeGeneration (select _x_9_1::_Tuple2 1)) (select _x_7_0::_Tuple8 0)) (False -> let ds_9_0 = select _x_7_0::_Tuple8 6, ds_9_1 = update ds_9_0::PmDriver._DriverStateRecord [5:ok_7_1,6:PmDriver._f285_285 (select ds_9_0::PmDriver._DriverStateRecord 6) _x_7_0] in PmCallBack.cont (_Tuple2 (PmDriver.DComp force_1_0 (select _x_7_0::_Tuple8 1) (select _x_7_0::_Tuple8 5) (select _x_7_0::_Tuple8 4) (update ds_9_1::PmDriver._DriverStateRecord [7:<{_predefined._!Cons}> next_4_0 (select ds_9_1::PmDriver._DriverStateRecord 7)])) (select _x_7_0::_Tuple8 0))) ) ) ) ) (PmDriver.Pers inf_3_0 -> case rest_1_3 (<{_predefined._!Nil}> -> let _x_5_0 = PmProject.PR_GetDirAndModulenames (PmProject.PR_SetBuilt (select ds_1_4::PmDriver._DriverStateRecord 7) (select ds_1_4::PmDriver._DriverStateRecord 0)), _x_5_1 = select (update ds_1_4::PmDriver._DriverStateRecord [0:select _x_5_0::_Tuple2 1,7:select _x_5_0::_Tuple2 0])::PmDriver._DriverStateRecord 7 in PmDriver.step intr_0 (PmDriver.DGene (select _x_5_1::_Tuple2 0) PmDriver.SyncCodeGeneration (select _x_5_1::_Tuple2 1)) (messwin.showInfo (messwin.Level1 "Generating...") (select (PmCleanSystem.ExitCleanCompiler (_Tuple2 inf_3_0 ps_2))::_Tuple2 1))) (<{_predefined._!Cons}> next_4_0 rest_4_1 -> case (PmDriver.module_occurs (select next_4_0::PmTypes._ModuleDirAndName 1) (select ds_1_4::PmDriver._DriverStateRecord 7)) (True -> PmDriver.step intr_0 (PmDriver.DComp force_1_0 dircache_1_1 compinfo_1_2 rest_4_1 ds_1_4) ps_2) (False -> case (PmTypes.isProjLibraryModule (select next_4_0::PmTypes._ModuleDirAndName 1) (select ds_1_4::PmDriver._DriverStateRecord 4)) (True -> PmDriver.step intr_0 (PmDriver.DComp force_1_0 dircache_1_1 compinfo_1_2 rest_4_1 ds_1_4) ps_2) (False -> let _x_7_0::B = PmDriver.UpdateDependencies force_1_0 next_4_0 rest_4_1 compinfo_1_2 dircache_1_1 ds_1_4 ps_2, ok_7_1 = select _x_7_0::_Tuple8 2 in case (StdBool.not ok_7_1) (True -> let ds_9_0 = select _x_7_0::_Tuple8 6, _x_9_1 = select (update ds_9_0::PmDriver._DriverStateRecord [5:ok_7_1,6:PmDriver._f286_286 (select ds_9_0::PmDriver._DriverStateRecord 6) _x_7_0])::PmDriver._DriverStateRecord 7 in PmDriver.step intr_0 (PmDriver.DGene (select _x_9_1::_Tuple2 0) PmDriver.SyncCodeGeneration (select _x_9_1::_Tuple2 1)) (select (PmCleanSystem.ExitCleanCompiler (_Tuple2 (select (select _x_7_0::_Tuple8 5)::_Tuple1 0) (select _x_7_0::_Tuple8 0)))::_Tuple2 1)) (False -> let ds_9_0 = select _x_7_0::_Tuple8 6, ds_9_1 = update ds_9_0::PmDriver._DriverStateRecord [5:ok_7_1,6:PmDriver._f287_287 (select ds_9_0::PmDriver._DriverStateRecord 6) _x_7_0] in PmCallBack.cont (_Tuple2 (PmDriver.DComp force_1_0 (select _x_7_0::_Tuple8 1) (select _x_7_0::_Tuple8 5) (select _x_7_0::_Tuple8 4) (update ds_9_1::PmDriver._DriverStateRecord [7:<{_predefined._!Cons}> next_4_0 (select ds_9_1::PmDriver._DriverStateRecord 7)])) (select _x_7_0::_Tuple8 0))) ) ) ) ) (PmDriver.Async _x_3_0 async_compiling_info_3_1 -> case _x_3_0 (_predefined._Nil -> case async_compiling_info_3_1 (PmDriver._AsyncCompilingInfo max_n_processes_5_0 compiler_process_ids_5_1 unknown_finished_processors_5_2 -> case unknown_finished_processors_5_2 (PmDriver.NoUnknownFinishedProcessors -> case rest_1_3 (<{_predefined._!Nil}> -> let _x_8_0 = PmProject.PR_GetDirAndModulenames (PmProject.PR_SetBuilt (select ds_1_4::PmDriver._DriverStateRecord 7) (select ds_1_4::PmDriver._DriverStateRecord 0)), _x_8_1 = select (update ds_1_4::PmDriver._DriverStateRecord [0:select _x_8_0::_Tuple2 1,7:select _x_8_0::_Tuple2 0])::PmDriver._DriverStateRecord 7 in PmDriver.step intr_0 (PmDriver.DGene (select _x_8_1::_Tuple2 0) (PmDriver.ASyncCodeGeneration _predefined._Nil async_compiling_info_3_1) (select _x_8_1::_Tuple2 1)) (messwin.showInfo (messwin.Level1 "Generating...") (select (PmCleanSystem.ClearCompilerCaches compiler_process_ids_5_1 ps_2)::_Tuple2 1))) ) ) ) (_ -> let _x_4_0 = PmDriver.check_completed_50 _x_1 ps_2, _x_4_1 = PmDriver.start_compilations_53 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1) in PmCallBack.cont (_Tuple2 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)))) (PmDriver.AsyncWin _x_3_0 _x_3_1 -> case _x_3_0 (_predefined._Nil -> case _x_3_1 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_5_0 win_compiler_process_ids_5_1 -> case rest_1_3 (<{_predefined._!Nil}> -> let _x_7_0 = PmProject.PR_GetDirAndModulenames (PmProject.PR_SetBuilt (select ds_1_4::PmDriver._DriverStateRecord 7) (select ds_1_4::PmDriver._DriverStateRecord 0)), _x_7_1 = select (update ds_1_4::PmDriver._DriverStateRecord [0:select _x_7_0::_Tuple2 1,7:select _x_7_0::_Tuple2 0])::PmDriver._DriverStateRecord 7 in PmDriver.step intr_0 (PmDriver.DGene (select _x_7_1::_Tuple2 0) (PmDriver.ASyncCodeGenerationWin _predefined._Nil win_max_n_processes_5_0) (select _x_7_1::_Tuple2 1)) (messwin.showInfo (messwin.Level1 "Generating...") (StdPSt.appPIO (PmDriver.app_world_instead_of_io_208 True win_compiler_process_ids_5_1) ps_2))) ) ) (_ -> let _x_4_0 = PmDriver.check_completed_54 _x_1 ps_2, _x_4_1 = PmDriver.start_compilations_56 (select _x_4_0::_Tuple2 0) (select _x_4_0::_Tuple2 1) in PmCallBack.cont (_Tuple2 (select _x_4_1::_Tuple2 0) (select _x_4_1::_Tuple2 1)))) ) ) (PmDriver.DQuitCompilers modpaths_1_0 _x_1_1 ds_1_2 -> case _x_1_1 (PmDriver.AsyncWin _x_2_0 _x_2_1 -> case _x_2_0 (_predefined._Nil -> case _x_2_1 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_4_0 win_compiler_process_ids_4_1 -> PmDriver.step intr_0 (PmDriver.DGene modpaths_1_0 PmDriver.SyncCodeGeneration ds_1_2) (StdPSt.appPIO (PmDriver.app_world_instead_of_io_209 True win_compiler_process_ids_4_1) ps_2)) ) (_ -> case _x_2_1 (PmDriver._AsyncWinCompilingInfo win_max_n_processes_3_0 win_compiler_process_ids_3_1 -> <{PmDriver._c;543;7_288}> (PmCleanSystem.CompilePollCompleted (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) win_compiler_process_ids_3_1 ps_2) _x_1 modpaths_1_0 _x_2_0 _x_2_1 ds_1_2) )) ) (PmDriver.DGene _x_1_0 _x_1_1 ds_1_2 -> case _x_1_0 (<{_predefined._!Nil}> -> case _x_1_1 (PmDriver.SyncCodeGeneration -> let !ps_4_0 = messwin.showInfo (messwin.Level1 "Linking...") ps_2 in PmDriver.step intr_0 (PmDriver.DLink ds_1_2) ps_4_0) (PmDriver.ASyncCodeGeneration _x_3_0 _x_3_1 -> case _x_3_0 (_predefined._Nil -> case _x_3_1 (PmDriver._AsyncCompilingInfo max_n_processes_5_0 compiler_process_ids_5_1 _x_5_2 -> case _x_5_2 (PmDriver.NoUnknownFinishedProcessors -> let !ps_7_0 = messwin.showInfo (messwin.Level1 "Linking...") (IdeState.setCompilerProcessIds compiler_process_ids_5_1 ps_2) in PmDriver.step intr_0 (PmDriver.DLink ds_1_2) ps_7_0) ) ) ) (PmDriver.ASyncCodeGenerationWin _x_3_0 _x_3_1 -> case _x_3_0 (_predefined._Nil -> let !ps_5_0 = messwin.showInfo (messwin.Level1 "Linking...") ps_2 in PmDriver.step intr_0 (PmDriver.DLink ds_1_2) ps_5_0) ) ) (<{_predefined._!Cons}> mdn_2_0 rest_2_1 -> case _x_1_1 (PmDriver.SyncCodeGeneration -> case (case (StdBool.not (select ds_1_2::PmDriver._DriverStateRecord 5)) (True -> True) (False -> intr_0) ) (True -> PmDriver.step intr_0 (PmDriver.DLink (update ds_1_2::PmDriver._DriverStateRecord [5:False])) ps_2) (False -> let _x_5_0::B = PmDriver.check_object_file_out_of_date mdn_2_0 False (select ds_1_2::PmDriver._DriverStateRecord 3) (select ds_1_2::PmDriver._DriverStateRecord 2) (select ds_1_2::PmDriver._DriverStateRecord 0) ps_2, gen_5_1 = select _x_5_0::_Tuple5 2, abcpath_5_2 = select _x_5_0::_Tuple5 3, abccache_5_3 = select _x_5_0::_Tuple5 0, fileinfo_5_4 = select _x_5_0::_Tuple5 1, ps_5_5 = select _x_5_0::_Tuple5 4, _x_5_6::B = PmDriver.GenCodeTheProjectModule gen_5_1 False PmCleanSystem.CodeGeneration mdn_2_0 abcpath_5_2 abccache_5_3 fileinfo_5_4 (select ds_1_2::PmDriver._DriverStateRecord 0) ps_5_5, ok_5_7 = select _x_5_6::_Tuple6 4 in case (StdBool.not ok_5_7) (True -> PmDriver.step intr_0 (PmDriver.DLink (update ds_1_2::PmDriver._DriverStateRecord [0:select _x_5_6::_Tuple6 3,2:select _x_5_6::_Tuple6 2,3:select _x_5_6::_Tuple6 1,5:ok_5_7])) (select _x_5_6::_Tuple6 0)) (False -> PmCallBack.cont (_Tuple2 (PmDriver.DGene rest_2_1 PmDriver.SyncCodeGeneration (update ds_1_2::PmDriver._DriverStateRecord [0:select _x_5_6::_Tuple6 3,2:select _x_5_6::_Tuple6 2,3:select _x_5_6::_Tuple6 1,5:ok_5_7])) (select _x_5_6::_Tuple6 0))) ) ) ) (_ -> case _x_1_1 (PmDriver.ASyncCodeGeneration busy_processes_2_0 _x_2_1 -> case _x_2_1 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 unknown_finished_processors_3_2 -> let _x_4_0::B = PmDriver.handle_finished_code_generators_210 max_n_processes_3_0 compiler_process_ids_3_1 busy_processes_2_0 unknown_finished_processors_3_2 (select ds_1_2::PmDriver._DriverStateRecord 0) (select ds_1_2::PmDriver._DriverStateRecord 2) ps_2, project_4_1 = select _x_4_0::_Tuple6 3, fileinfo_4_2 = select _x_4_0::_Tuple6 4, ds_4_3 = update ds_1_2::PmDriver._DriverStateRecord [0:project_4_1,2:fileinfo_4_2,5:PmDriver._f289_289 (select ds_1_2::PmDriver._DriverStateRecord 5) ok_4_4 intr_0], ok_4_4 = select _x_4_0::_Tuple6 0 in case (StdBool.not (select ds_4_3::PmDriver._DriverStateRecord 5)) (True -> PmCallBack.cont (_Tuple2 (PmDriver.DGene _x_1_0 (PmDriver.ASyncCodeGeneration (select _x_4_0::_Tuple6 1) (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 (select _x_4_0::_Tuple6 2))) ds_4_3) (select _x_4_0::_Tuple6 5))) (False -> let busy_processes_6_0 = select _x_4_0::_Tuple6 1 in case (PmDriver._f291_291 (StdBool.not (<{StdInt.<_17}> (StdList.length_47 busy_processes_6_0) max_n_processes_3_0)) _x_1_0) (True -> PmCallBack.cont (_Tuple2 (PmDriver.DGene _x_1_0 (PmDriver.ASyncCodeGeneration busy_processes_6_0 (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 (select _x_4_0::_Tuple6 2))) ds_4_3) (PmCleanSystem.DelayEventLoop (select _x_4_0::_Tuple6 5)))) (False -> let _x_8_0 = PmDriver.start_code_generators_63 compiler_process_ids_3_1 max_n_processes_3_0 project_4_1 _x_1_0 busy_processes_6_0 (select ds_4_3::PmDriver._DriverStateRecord 2) (select ds_4_3::PmDriver._DriverStateRecord 3) (select _x_4_0::_Tuple6 5) in PmCallBack.cont (_Tuple2 (PmDriver.DGene (select _x_8_0::_Tuple6 1) (PmDriver.ASyncCodeGeneration (select _x_8_0::_Tuple6 2) (PmDriver._AsyncCompilingInfo max_n_processes_3_0 compiler_process_ids_3_1 (select _x_4_0::_Tuple6 2))) (update ds_4_3::PmDriver._DriverStateRecord [2:select _x_8_0::_Tuple6 3,3:select _x_8_0::_Tuple6 4,5:select _x_8_0::_Tuple6 0])) (select _x_8_0::_Tuple6 5))) ) ) ) (PmDriver.ASyncCodeGenerationWin busy_processes_2_0 win_max_n_processes_2_1 -> let _x_3_0::B = PmDriver.handle_finished_code_generators_67 busy_processes_2_0 (select ds_1_2::PmDriver._DriverStateRecord 0) (select ds_1_2::PmDriver._DriverStateRecord 2) ps_2, project_3_1 = select _x_3_0::_Tuple5 2, fileinfo_3_2 = select _x_3_0::_Tuple5 3, ds_3_3 = update ds_1_2::PmDriver._DriverStateRecord [0:project_3_1,2:fileinfo_3_2,5:PmDriver._f292_292 (select ds_1_2::PmDriver._DriverStateRecord 5) ok_3_4 intr_0], ok_3_4 = select _x_3_0::_Tuple5 0 in case (StdBool.not (select ds_3_3::PmDriver._DriverStateRecord 5)) (True -> PmCallBack.cont (_Tuple2 (PmDriver.DGene _x_1_0 (PmDriver.ASyncCodeGenerationWin (select _x_3_0::_Tuple5 1) win_max_n_processes_2_1) ds_3_3) (select _x_3_0::_Tuple5 4))) (False -> let busy_processes_5_0 = select _x_3_0::_Tuple5 1 in case (PmDriver._f294_294 (StdBool.not (<{StdInt.<_17}> (StdList.length_47 busy_processes_5_0) win_max_n_processes_2_1)) _x_1_0) (True -> PmCallBack.cont (_Tuple2 (PmDriver.DGene _x_1_0 (PmDriver.ASyncCodeGenerationWin busy_processes_5_0 win_max_n_processes_2_1) ds_3_3) (select _x_3_0::_Tuple5 4))) (False -> let _x_7_0 = PmDriver.start_code_generators_70 win_max_n_processes_2_1 project_3_1 _x_1_0 busy_processes_5_0 (select ds_3_3::PmDriver._DriverStateRecord 2) (select ds_3_3::PmDriver._DriverStateRecord 3) (select _x_3_0::_Tuple5 4) in PmCallBack.cont (_Tuple2 (PmDriver.DGene (select _x_7_0::_Tuple6 1) (PmDriver.ASyncCodeGenerationWin (select _x_7_0::_Tuple6 2) win_max_n_processes_2_1) (update ds_3_3::PmDriver._DriverStateRecord [2:select _x_7_0::_Tuple6 3,3:select _x_7_0::_Tuple6 4,5:select _x_7_0::_Tuple6 0])) (select _x_7_0::_Tuple6 5))) ) ) )) (PmDriver.DLink ds_1_0 -> case ds_1_0 (PmDriver._DriverStateRecord project_2_0 continue_2_1 fileinfo_2_2 abccache_2_3 libsinfo_2_4 ok_2_5 newpaths_2_6 modpaths_2_7 -> case (case intr_0 (True -> True) (False -> StdBool.not ok_2_5) ) (True -> continue_2_1 False newpaths_2_6 False fileinfo_2_2 libsinfo_2_4 modpaths_2_7 project_2_0 intr_0 (_Tuple2 abccache_2_3 ps_2)) (False -> let _x_4_0 = IdeState.getProjectFilePath ps_2, ps_4_1 = select _x_4_0::_Tuple2 1, _x_4_2 = IdeState.getStup ps_4_1, ps_4_3::B = select _x_4_2::_Tuple2 1, _x_4_4 = PmDriver.get_project_and_environment_paths project_2_0 ps_4_3, srcpaths_4_5 = select _x_4_4::_Tuple2 0, ps_4_6::B = select _x_4_4::_Tuple2 1, _x_4_7 = StdPStClass.accFiles_8 (PmDirCache.DC_Setup (UtilStrictLists.Map PmPath.MakeSystemPathname srcpaths_4_5)) ps_4_6, ps_4_8::I = select _x_4_7::_Tuple2 1, _x_4_9 = IdeState.getPrefs ps_4_8, _x_4_10 = select _x_4_9::_Tuple2 0, be_verbose_4_11 = select _x_4_10::PmPrefs._Prefs 22, lines_4_12 = <{PmDriver._if;779;35_296}> (PmDriver._f295_295 be_verbose_4_11 compile_4_35) system_abc_4_20, _x_4_13 = select _x_4_7::_Tuple2 0, errs_4_14 = select _x_4_13::_Tuple3 0, warns_4_15 = select _x_4_13::_Tuple3 1, ps_4_16 = select _x_4_9::_Tuple2 1, ps_4_17 = PmDriver.HandleDCErrors be_verbose_4_11 errs_4_14 warns_4_15 ps_4_16, _x_4_18 = IdeState.getCurrentProc ps_4_17, tp_4_19 = select _x_4_18::_Tuple2 0, system_abc_4_20 = PmPath.MakeABCPathname "_system", abcPathsCache_4_21 = select _x_4_13::_Tuple3 2, _x_4_22 = PmDirCache.DC_Search system_abc_4_20 abcPathsCache_4_21, full_sys0_4_23 = select _x_4_22::_Tuple4 1, system_mdn_4_24 = PmTypes._ModuleDirAndName full_sys0_4_23 "_system", ps_4_25 = select _x_4_18::_Tuple2 1, _x_4_26 = PmFileInfo.FI_GetFileInfo (<{StdFile.FileEnv;}> StdPStClass.accFiles_8 StdPStClass.appFiles_9) tp_4_19 system_mdn_4_24 abccache_2_3 fileinfo_2_2 ps_4_25, ps_4_27::B = select _x_4_26::_Tuple2 1, ps_4_28 = PmDriver.verbi_142 be_verbose_4_11 lines_4_12 ps_4_27, _x_4_29 = IdeState.getCurrentVers ps_4_28, version_4_30 = select _x_4_29::_Tuple2 0, ao_4_31 = PmProject.PR_GetApplicationOptions project_2_0, wantstp_4_32 = select ao_4_31::PmTypes._ApplicationOptions 16, _x_4_33 = select _x_4_26::_Tuple2 0, modinfo_4_34 = select _x_4_33::_Tuple3 0, compile_4_35 = StdBool.not (<{StdBool.==_3}> wantstp_4_32 (select (select modinfo_4_34::PmFileInfo._FileInfo 6)::PmAbcMagic._ABCOptions 1)), full_sys_4_36 = <{StdString.+++_11}> full_sys0_4_23 (<{StdString.+++_11}> "\\" system_abc_4_20), ps_4_37 = select _x_4_29::_Tuple2 1, _x_4_38 = StdPStClass.accFiles_8 (PmAbcMagic.PatchSystemABC version_4_30 compile_4_35 full_sys_4_36 wantstp_4_32) ps_4_37 in case (StdBool.not (select _x_4_38::_Tuple2 0)) (True -> continue_2_1 False newpaths_2_6 False (select _x_4_33::_Tuple3 2) libsinfo_2_4 modpaths_2_7 project_2_0 intr_0 (_Tuple2 (select _x_4_33::_Tuple3 1) (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: [" (<{StdString.+++_11}> system_abc_4_20 ",]: could not be patched.")) _predefined._Nil)) (select _x_4_38::_Tuple2 1)))) (False -> let abccache_6_0 = select _x_4_33::_Tuple3 1, fileinfo_6_1 = select _x_4_33::_Tuple3 2, ps_6_2 = select _x_4_38::_Tuple2 1, _x_6_3 = StdPStClass.accFiles_8 (PmFileInfo.FI_UpdateAbcDate "_system" full_sys_4_36 wantstp_4_32 fileinfo_6_1) ps_6_2, _x_6_4 = select _x_6_3::_Tuple2 0, fileinfo_6_5::B = select _x_6_4::_Tuple2 1, ps_6_6 = select _x_6_3::_Tuple2 1, _x_6_7 = PmDriver.check_object_file_out_of_date system_mdn_4_24 True abccache_6_0 fileinfo_6_5 project_2_0 ps_6_6, genabc_6_8 = select _x_6_7::_Tuple5 2, abcpath_6_9 = select _x_6_7::_Tuple5 3, abccache_6_10 = select _x_6_7::_Tuple5 0, fileinfo_6_11 = select _x_6_7::_Tuple5 1, ps_6_12 = select _x_6_7::_Tuple5 4, _x_6_13 = PmDriver.GenCodeTheProjectModule genabc_6_8 True PmCleanSystem.CodeGeneration system_mdn_4_24 abcpath_6_9 abccache_6_10 fileinfo_6_11 project_2_0 ps_6_12 in case (StdBool.not (select _x_6_13::_Tuple6 4)) (True -> let abcPathsCache_8_0 = select _x_4_22::_Tuple4 3, ps_8_1 = select _x_6_13::_Tuple6 0 in continue_2_1 False newpaths_2_6 False (select _x_6_13::_Tuple6 2) libsinfo_2_4 modpaths_2_7 (select _x_6_13::_Tuple6 3) intr_0 (_Tuple2 (select _x_6_13::_Tuple6 1) (select (<{PmDriver._c;797;35_297}> genabc_6_8 full_sys0_4_23 tp_4_19 full_sys_4_36 ps_8_1 abcPathsCache_8_0)::_Tuple2 1))) (False -> let ps_8_0 = select _x_6_13::_Tuple6 0, _x_8_1 = StdPStClass.accFiles_8 (UtilIO.FModified full_sys_4_36) ps_8_0, sys_date_8_2 = select _x_8_1::_Tuple2 0, abccache_8_3 = select _x_6_13::_Tuple6 1, _x_8_4 = <{PmDriver._c;797;35_298}> genabc_6_8 full_sys0_4_23 tp_4_19 ps_8_9 abcPathsCache_8_8, ps_8_5 = select _x_8_4::_Tuple2 1, _x_8_6 = StdPStClass.accFiles_8 (<{PmAbcMagic.ParseABCDependencies`}> abcpath_6_9 sys_date_8_2 abccache_8_3) ps_8_5, _x_8_7 = select _x_8_6::_Tuple2 0, abcPathsCache_8_8 = select _x_4_22::_Tuple4 3, ps_8_9 = select _x_8_1::_Tuple2 1 in case (StdBool.not (select _x_8_7::_Tuple7 0)) (True -> continue_2_1 False newpaths_2_6 False (select _x_6_13::_Tuple6 2) libsinfo_2_4 modpaths_2_7 (select _x_6_13::_Tuple6 3) intr_0 (_Tuple2 (select _x_8_7::_Tuple7 6) (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: [" (<{StdString.+++_11}> system_abc_4_20 ",]: could not be analysed.")) _predefined._Nil)) (select _x_8_6::_Tuple2 1)))) (False -> let _x_10_0 = <{PmDriver._c;827;35_299}> (select ao_4_31::PmTypes._ApplicationOptions 20) stdo_10_11 abcPathsCache_10_12, sys_objs_10_1 = select _x_8_7::_Tuple7 4, app_path_10_2::B = select _x_4_2::_Tuple2 0, project_10_3 = select _x_6_13::_Tuple6 3, <{prj_path`_10_4}> = PmProject.PR_GetRootDir project_10_3, execpath_10_5 = PmProject.PR_GetExecPath project_10_3, execpath_10_6 = PmPath.fulPath app_path_10_2 <{prj_path`_10_4}> execpath_10_5, ps_10_7 = select _x_8_6::_Tuple2 1, ps_10_8 = messwin.showInfo (messwin.Level2 (<{StdString.+++_11}> "Linking '" (<{StdString.+++_11}> (StdPathname.RemovePath execpath_10_6) "'"))) ps_10_7, _x_10_9 = IdeState.getCurrent64BitProcessor ps_10_8, use_64_bit_processor_10_10 = select _x_10_9::_Tuple2 0, stdo_10_11 = UtilStrictLists.Concat sys_objs_10_1 (PmCleanSystem.standardObjectFiles (select ao_4_31::PmTypes._ApplicationOptions 17) (select ao_4_31::PmTypes._ApplicationOptions 16) tp_4_19 use_64_bit_processor_10_10), abcPathsCache_10_12 = select _x_8_4::_Tuple2 0 in case (StdBool.not (select _x_10_0::_Tuple3 0)) (True -> continue_2_1 False newpaths_2_6 False (select _x_6_13::_Tuple6 2) libsinfo_2_4 modpaths_2_7 project_10_3 intr_0 (_Tuple2 (select _x_8_7::_Tuple7 6) (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Link error: File: '" (<{StdString.+++_11}> (UtilStrictLists.Head (select _x_10_0::_Tuple3 1)) "' not found.")) _predefined._Nil)) (select _x_10_9::_Tuple2 1)))) (False -> let _x_12_0 = <{PmDriver._c;835;35_300}> (select ao_4_31::PmTypes._ApplicationOptions 20) stdl_12_3 abcPathsCache_12_4, sys_libs_12_1 = select _x_8_7::_Tuple7 5, lo_12_2 = PmProject.PR_GetLinkOptions project_2_0, stdl_12_3 = UtilStrictLists.Concat sys_libs_12_1 (PmCleanSystem.standardStaticLibraries tp_4_19 (select lo_12_2::PmTypes._LinkOptions 2)), abcPathsCache_12_4 = select _x_10_0::_Tuple3 2 in case (StdBool.not (select _x_12_0::_Tuple3 0)) (True -> continue_2_1 False newpaths_2_6 False (select _x_6_13::_Tuple6 2) libsinfo_2_4 modpaths_2_7 project_10_3 intr_0 (_Tuple2 (select _x_8_7::_Tuple7 6) (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Link error: File: '" (<{StdString.+++_11}> (UtilStrictLists.Head (select _x_12_0::_Tuple3 1)) "' not found.")) _predefined._Nil)) (select _x_10_9::_Tuple2 1)))) (False -> let _x_14_0 = PmProject.PR_GetRootModuleDirAndName project_10_3, project_14_1 = select _x_14_0::_Tuple2 1, abcLink_14_2 = PmProject.PR_GetABCLinkInfo project_14_1, linkObjFileNames_14_3 = UtilStrictLists.Map (PmDriver.append_object_file_extension_if_dot_at_end tp_4_19 use_64_bit_processor_10_10) (select abcLink_14_2::PmTypes._ABCLinkInfo 0), root_mdn_14_4 = select _x_14_0::_Tuple2 0, rootpath_14_5 = PmPath.ModuleDirAndNameToObjSystemPathname tp_4_19 root_mdn_14_4, system_obj_path_14_6 = select _x_6_13::_Tuple6 5, fileinfo_14_7 = select _x_6_13::_Tuple6 2, _x_14_8 = PmFileInfo.FI_GetCleanModules system_obj_path_14_6 libsinfo_2_4 fileinfo_14_7, clmodpaths_14_9 = select _x_14_8::_Tuple2 0, clmodpaths_14_10 = UtilStrictLists.RemoveStringFromList rootpath_14_5 clmodpaths_14_9, ps_14_11 = select _x_10_9::_Tuple2 1, _x_14_12 = IdeState.getCurrentDlibs ps_14_11, ps_14_13 = select _x_14_12::_Tuple2 1, _x_14_14 = IdeState.getCurrentObjts ps_14_13, defobjs_14_15 = select _x_14_14::_Tuple2 0, ofiles_14_16 = select _x_10_0::_Tuple3 1, ofiles_14_17 = UtilStrictLists.Concat defobjs_14_15 ofiles_14_16, ofiles_14_18 = <{_predefined._!Cons!}> rootpath_14_5 ofiles_14_17, ofiles_14_19 = UtilStrictLists.Reverse2 clmodpaths_14_10 ofiles_14_18, abcPathsCache_14_20 = select _x_12_0::_Tuple3 2, _x_14_21 = PmDriver.GetPathNames linkObjFileNames_14_3 ofiles_14_19 abcPathsCache_14_20 in case (StdBool.not (select _x_14_21::_Tuple3 0)) (True -> continue_2_1 False newpaths_2_6 False (select _x_14_8::_Tuple2 1) libsinfo_2_4 modpaths_2_7 project_14_1 intr_0 (_Tuple2 (select _x_8_7::_Tuple7 6) (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Link error: File: '" (<{StdString.+++_11}> (UtilStrictLists.Head (select _x_14_21::_Tuple3 1)) "' not found.")) _predefined._Nil)) (select _x_14_14::_Tuple2 1)))) (False -> let deflibs_16_0 = select _x_14_12::_Tuple2 0, lfiles_16_1 = select _x_12_0::_Tuple3 1, lfiles_16_2 = UtilStrictLists.Concat deflibs_16_0 lfiles_16_1, abcPathsCache_16_3 = select _x_14_21::_Tuple3 2, _x_16_4 = PmDriver.GetPathNames linkObjFileNames_14_3 ofiles_14_17 abcPathsCache_16_3, abcPathsCache_16_5 = select _x_16_4::_Tuple3 2, _x_16_6 = PmDriver.GetPathNames (select abcLink_14_2::PmTypes._ABCLinkInfo 1) lfiles_16_2 abcPathsCache_16_5 in case (StdBool.not (select _x_16_6::_Tuple3 0)) (True -> continue_2_1 False newpaths_2_6 False (select _x_14_8::_Tuple2 1) libsinfo_2_4 modpaths_2_7 project_14_1 intr_0 (_Tuple2 (select _x_8_7::_Tuple7 6) (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Link error: File: '" (<{StdString.+++_11}> (UtilStrictLists.Head (select _x_16_6::_Tuple3 1)) "' not found.")) _predefined._Nil)) (select _x_14_14::_Tuple2 1)))) (False -> let !sfiles_18_0 = UtilStrictLists.Concat (PmProject.SL_Libs libsinfo_2_4) (select _x_18_7::_Tuple2 0), !ofiles_18_1 = UtilStrictLists.Reverse (UtilStrictLists.Concat extraObjectModules_18_5 (select _x_14_21::_Tuple3 1)), !lfiles_18_2 = UtilStrictLists.Reverse (UtilStrictLists.Concat (select lo_12_2::PmTypes._LinkOptions 1) (select _x_16_6::_Tuple3 1)), _x_18_3 = <{PmDriver._c;897;35_301}> (select lo_12_2::PmTypes._LinkOptions 2) genabc_6_8 execpath_10_6 <{ofiles`_18_10}> ps_18_8 fileinfo_18_11 project_14_1, extraObjectModules_18_4 = select lo_12_2::PmTypes._LinkOptions 0, extraObjectModules_18_5 = UtilStrictLists.Map (PmDriver.append_object_file_extension_if_dot_at_end tp_4_19 use_64_bit_processor_10_10) extraObjectModules_18_4, ps_18_6 = select _x_14_14::_Tuple2 1, _x_18_7 = IdeState.getCurrentSlibs ps_18_6, ps_18_8 = select _x_18_7::_Tuple2 1, <{ofiles`_18_9}> = select _x_16_4::_Tuple3 1, <{ofiles`_18_10}> = UtilStrictLists.Concat extraObjectModules_18_5 <{ofiles`_18_9}>, fileinfo_18_11 = select _x_14_8::_Tuple2 1 in case (StdBool.not (select _x_18_3::_Tuple2 0)) (True -> continue_2_1 True False False fileinfo_18_11 libsinfo_2_4 modpaths_2_7 project_14_1 intr_0 (_Tuple2 (select _x_8_7::_Tuple7 6) (select _x_18_3::_Tuple2 1))) (False -> let prj_path_20_0::B = select _x_4_0::_Tuple2 0, _x_20_1 = IdeState.getCurrentLink (select (StdPStClass.accFiles_8 (PmProject.SaveProjectFile prj_path_20_0 project_14_1 app_path_10_2) (select _x_18_3::_Tuple2 1))::_Tuple2 1), _x_20_2 = IdeState.getStup (select _x_20_1::_Tuple2 1), _x_20_3 = IdeState.getCurrentDynl (select _x_20_2::_Tuple2 1), _x_20_4 = PmDriver.foldl_211 lo_12_2 app_path_10_2 ao_4_31 tp_4_19 <{prj_path`_10_4}> execpath_10_6 use_64_bit_processor_10_10 sfiles_18_0 ofiles_18_1 lfiles_18_2 (select _x_20_2::_Tuple2 0) (PmDriver.MakeOptionsName prj_path_20_0 tp_4_19) (select _x_20_3::_Tuple2 0) (_Tuple2 (select _x_20_3::_Tuple2 1) True) (PmDriver.lSplit_76 '|' (select _x_20_1::_Tuple2 0)), ok_20_5 = select _x_20_4::_Tuple2 1 in continue_2_1 ok_20_5 False ok_20_5 fileinfo_18_11 libsinfo_2_4 modpaths_2_7 (<{PmDriver._if;937;35_302}> ok_20_5 project_14_1) intr_0 (_Tuple2 (select _x_8_7::_Tuple7 6) (select _x_20_4::_Tuple2 0))) ) ) ) ) ) ) ) ) ) ) (PmDriver.DDone -> PmCallBack.stop (_Tuple2 PmDriver.DDone ps_2)) 
PmDriver.MakeTheProject !force_0::B !fileinfo_1 !libsinfo_2 !abccache_3 !project_4 !continue_5 !ps_6 = let _x_1_0 = PmDriver.get_project_and_environment_paths project_4 ps_6, srcpaths_1_1 = select _x_1_0::_Tuple2 0, ps_1_2 = select _x_1_0::_Tuple2 1, _x_1_3 = StdPStClass.accFiles_8 (PmDirCache.DC_Setup srcpaths_1_1) ps_1_2, ps_1_4 = select _x_1_3::_Tuple2 1, _x_1_5 = IdeState.getPrefs ps_1_4, _x_1_6 = select _x_1_5::_Tuple2 0, be_verbose_1_7 = select _x_1_6::PmPrefs._Prefs 22, _x_1_8 = select _x_1_3::_Tuple2 0, errs_1_9 = select _x_1_8::_Tuple3 0, warns_1_10 = select _x_1_8::_Tuple3 1, ps_1_11::B = select _x_1_5::_Tuple2 1, ps_1_12 = PmDriver.HandleDCErrors be_verbose_1_7 errs_1_9 warns_1_10 ps_1_11, _x_1_13 = IdeState.getCurrentSlibs ps_1_12, env_static_libs_1_14 = select _x_1_13::_Tuple2 0, sfiles_1_15 = UtilStrictLists.StrictListToList (UtilStrictLists.Concat (PmProject.SL_Libs libsinfo_2) env_static_libs_1_14), ps_1_16 = select _x_1_13::_Tuple2 1, _x_1_17 = PmDriver.check_exists_207 sfiles_1_15 ps_1_16, err_1_18 = select _x_1_17::_Tuple2 0 in case (Data.Maybe.isJust err_1_18) (True -> continue_5 False False False fileinfo_1 libsinfo_2 <{_predefined._!Nil}> (select (PmProject.PR_GetRootModuleDirAndName project_4)::_Tuple2 1) False (_Tuple2 abccache_3 (messwin.showInfo (messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "Error: Unable to find static library: '" (<{StdString.+++_11}> (Data.Maybe.fromJust err_1_18) "'.")) _predefined._Nil)) (select _x_1_17::_Tuple2 1)))) (False -> let ps_3_0 = select _x_1_17::_Tuple2 1, _x_3_1 = StdPStClass.accFiles_8 (PmCleanSystem.getLibs sfiles_1_15) ps_3_0, _x_3_2 = select _x_3_1::_Tuple2 0, errs_3_3 = select _x_3_2::_Tuple2 0 in case (StdBool.not (StdList.isEmpty errs_3_3)) (True -> continue_5 False False False fileinfo_1 libsinfo_2 <{_predefined._!Nil}> (select (PmProject.PR_GetRootModuleDirAndName project_4)::_Tuple2 1) False (_Tuple2 abccache_3 (messwin.showInfo (messwin.Level3 (_predefined._Cons "Error: Failed reading static libraries: '" errs_3_3)) (select _x_3_1::_Tuple2 1)))) (False -> let ps_5_0 = select _x_3_1::_Tuple2 1, ps_5_1 = messwin.showInfo (messwin.Level1 "Compiling...") ps_5_0, _x_5_2 = IdeState.getCurrentMeth ps_5_1, _x_5_3 = <{PmDriver._c;224;23_282}> (select _x_5_2::_Tuple2 0) ps_5_5, _x_5_4 = PmProject.PR_GetRootModuleDirAndName project_4, ps_5_5 = select _x_5_2::_Tuple2 1 in PmDriver.step False (PmDriver.DComp force_0 (select _x_1_8::_Tuple3 2) (select _x_5_3::_Tuple2 0) (<{_predefined._!Cons}> (select _x_5_4::_Tuple2 0) <{_predefined._!Nil}>) (PmDriver._DriverStateRecord (select _x_5_4::_Tuple2 1) continue_5 fileinfo_1 abccache_3 (PmProject.SL_SetDcls (UtilStrictLists.ListToStrictList (select _x_3_2::_Tuple2 1)) libsinfo_2) True False <{_predefined._!Nil}>)) (select _x_5_3::_Tuple2 1)) ) 
<{PmDriver._if;937;35_302}> !ok_0::B !project_1 = case ok_0 (True -> PmProject.PR_SetLinked project_1) (_ -> project_1)
<{PmDriver._c;897;35_301}> !_x_0 !genabc_1::B execpath_2 <{ofiles`_3}> ps_4 fileinfo_5 project_6 = case _x_0 (PmTypes.LM_Static -> let _x_2_0::B = PmDriver.CheckObjsOutOfDate genabc_1 execpath_2 <{ofiles`_3}> ps_4, ood_2_1 = select _x_2_0::_Tuple2 0 in case ood_2_1 (True -> _Tuple2 ood_2_1 (select _x_2_0::_Tuple2 1)) (False -> PmDriver.CheckExecOutOfDate genabc_1 execpath_2 fileinfo_5 project_6 (select _x_2_0::_Tuple2 1)) ) (PmTypes.LM_Dynamic -> PmDriver.CheckExecOutOfDate genabc_1 execpath_2 fileinfo_5 project_6 ps_4) 
<{PmDriver._c;835;35_300}> !_x_0::B stdl_1 abcPathsCache_2 = case _x_0 (True -> PmDriver.GetPathNames stdl_1 <{_predefined._!Nil!}> abcPathsCache_2) (False -> _Tuple3 True <{_predefined._!Nil!}> abcPathsCache_2) 
<{PmDriver._c;827;35_299}> !_x_0::B stdo_1 abcPathsCache_2 = case _x_0 (True -> PmDriver.GetPathNames stdo_1 <{_predefined._!Nil!}> abcPathsCache_2) (False -> _Tuple3 True <{_predefined._!Nil!}> abcPathsCache_2) 
<{PmDriver._c;797;35_298}> !genabc_0::B full_sys0_1 tp_2 ps_3 abcPathsCache_4 = case genabc_0 (True -> let _x_2_0 = StdPStClass.accFiles_8 (UtilIO.FModified (<{StdString.+++_11}> full_sys0_1 (<{StdString.+++_11}> "\\" (PmPath.MakeObjPathname tp_2 "_system")))) ps_3 in _Tuple2 (PmDirCache.DC_Update (_Tuple3 (PmPath.MakeObjPathname tp_2 "_system") full_sys0_1 (PmDriver.DATEtoDateTime_74 (select _x_2_0::_Tuple2 0))) abcPathsCache_4) (select _x_2_0::_Tuple2 1)) (False -> _Tuple2 abcPathsCache_4 ps_3) 
<{PmDriver._c;797;35_297}> !genabc_0::B full_sys0_1 tp_2 full_sys_3 ps_4 abcPathsCache_5 = case genabc_0 (True -> let _x_2_0 = StdPStClass.accFiles_8 (UtilIO.FModified (<{StdString.+++_11}> full_sys0_1 (<{StdString.+++_11}> "\\" (PmPath.MakeObjPathname tp_2 "_system")))) (select (StdPStClass.accFiles_8 (UtilIO.FModified full_sys_3) ps_4)::_Tuple2 1) in _Tuple2 (PmDirCache.DC_Update (_Tuple3 (PmPath.MakeObjPathname tp_2 "_system") full_sys0_1 (PmDriver.DATEtoDateTime_74 (select _x_2_0::_Tuple2 0))) abcPathsCache_5) (select _x_2_0::_Tuple2 1)) (False -> _Tuple2 abcPathsCache_5 (select (StdPStClass.accFiles_8 (UtilIO.FModified full_sys_3) ps_4)::_Tuple2 1)) 
<{PmDriver._if;779;35_296}> !_x_0::B system_abc_1 = case _x_0 (True -> messwin.Level3 (_predefined._Cons (<{StdString.+++_11}> "[" (<{StdString.+++_11}> system_abc_1 ",]: compiled with different options")) _predefined._Nil)) (_ -> messwin.Level3 _predefined._Nil)
PmDriver._f295_295::B !be_verbose_0::B compile_1::B = case be_verbose_0 (True -> compile_1) (_ -> False)
PmDriver._f294_294::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> <{PmDriver._c;710;54_293}> _x_1)
<{PmDriver._c;710;54_293}>::B !_x_0 = case _x_0 (<{_predefined._!Nil}> -> True) (_ -> False)
PmDriver._f292_292::B !_x_0::B ok_1::B intr_2::B = case _x_0 (True -> case ok_1 (True -> StdBool.not intr_2) (False -> False) ) (_ -> False)
PmDriver._f291_291::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> <{PmDriver._c;640;50_290}> _x_1)
<{PmDriver._c;640;50_290}>::B !_x_0 = case _x_0 (<{_predefined._!Nil}> -> True) (_ -> False)
PmDriver._f289_289::B !_x_0::B ok_1::B intr_2::B = case _x_0 (True -> case ok_1 (True -> StdBool.not intr_2) (False -> False) ) (_ -> False)
<{PmDriver._c;543;7_288}> !_x_0 _x_1 modpaths_2 _x_3 _x_4 ds_5 = case _x_0 (_Tuple2 _x_1_0 ps_1_1 -> case _x_1_0 (PmCleanSystem.NoFinishedCompiler -> PmCallBack.cont (_Tuple2 _x_1 ps_1_1)) (PmCleanSystem.FinishedCompiler completedSlot_2_0 exitcode_2_1 -> PmCallBack.cont (_Tuple2 (PmDriver.DQuitCompilers modpaths_2 (PmDriver.AsyncWin (select (PmDriver.removeFromCurrent completedSlot_2_0 _x_3)::_Tuple2 1) _x_4) ds_5) ps_1_1)) (PmCleanSystem.UnknownFinishedCompiler -> PmCallBack.cont (_Tuple2 _x_1 ps_1_1)) ) 
PmDriver._f287_287::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> select _x_1::_Tuple8 3)
PmDriver._f286_286::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> select _x_1::_Tuple8 3)
PmDriver._f285_285::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> select _x_1::_Tuple8 3)
PmDriver._f284_284::B !_x_0::B _x_1 = case _x_0 (True -> True) (_ -> select _x_1::_Tuple8 3)
<{PmDriver._c;297;7_283}> !compinfo_0 !ds_1 ps_2 = case compinfo_0 (PmDriver.Pers inf_1_0 -> let !ds_2_0 = PmDriver.DGene (select _x_2_1::_Tuple2 0) PmDriver.SyncCodeGeneration (select _x_2_1::_Tuple2 1), _x_2_1 = select (update ds_1::PmDriver._DriverStateRecord [5:False])::PmDriver._DriverStateRecord 7 in PmDriver.step True ds_2_0 (select (PmCleanSystem.ExitCleanCompiler (_Tuple2 inf_1_0 ps_2))::_Tuple2 1)) (PmDriver.AsyncWin _x_1_0 _x_1_1 -> let !ds_2_0 = PmDriver.DQuitCompilers (select _x_2_1::_Tuple2 0) compinfo_0 (select _x_2_1::_Tuple2 1), _x_2_1 = select (update ds_1::PmDriver._DriverStateRecord [5:False])::PmDriver._DriverStateRecord 7 in PmDriver.step True ds_2_0 ps_2) (_ -> let !ds_1_0 = PmDriver.DGene (select _x_1_1::_Tuple2 0) PmDriver.SyncCodeGeneration (select _x_1_1::_Tuple2 1), _x_1_1 = select (update ds_1::PmDriver._DriverStateRecord [5:False])::PmDriver._DriverStateRecord 7 in PmDriver.step True ds_1_0 ps_2)
<{PmDriver._c;224;23_282}> !_x_0 ps_1 = case _x_0 (PmEnvironment.CompileSync -> _Tuple2 PmDriver.Sync ps_1) (PmEnvironment.CompileAsync cmax_1_0 -> _Tuple2 (PmDriver.AsyncWin _predefined._Nil (PmDriver._AsyncWinCompilingInfo cmax_1_0 PmCleanSystem.NoCompilerProcessIds)) ps_1) (PmEnvironment.CompilePers -> _Tuple2 (PmDriver.Pers PmCleanSystem.InitCompilingInfo) ps_1) 
PmDriver.PostlinkFase_45 !ok_0::B project_1 !ps_2 = case (StdBool.not ok_0) (True -> ps_2) (False -> let _x_2_0 = PmProject.PR_GetPostlink project_1, postlink_2_1 = select _x_2_0::_Tuple2 0 in case (Data.Maybe.isJust postlink_2_1) (True -> let _x_4_0 = IdeState.getProjectFilePath ps_2, _x_4_1 = IdeState.getStup (select _x_4_0::_Tuple2 1) in select (<{PmCleanSystem.Execute`}> (<{StdString.+++_11}> "\"" (<{StdString.+++_11}> (PmPath.fulPath (select _x_4_1::_Tuple2 0) (PmProject.PR_GetRootDir (select _x_2_0::_Tuple2 1)) (select postlink_2_1::_Tuple1 0)) (<{StdString.+++_11}> "\" \"" (<{StdString.+++_11}> (select _x_4_0::_Tuple2 0) "\"")))) (messwin.showInfo (messwin.Level1 "Postlink...") (select _x_4_1::_Tuple2 1)))::_Tuple3 2) (False -> ps_2) ) 
<{PmDriver.cleanup`_47}> continuation_0 = PmDriver.cleanup_46 continuation_0
PmDriver.cleanup_46 continuation_0 !ok_1::B !newpaths_2::B !linked_3::B !fileinfo_4 !libsinfo_5 !modpaths_6 !project_7 !intr_8::B !_x_9 = case _x_9 (_Tuple2 abccache_1_0 ps_1_1 -> case (case newpaths_2 (True -> StdBool.not intr_8) (False -> False) ) (True -> PmDriver.MakeTheProject False fileinfo_4 libsinfo_5 abccache_1_0 project_7 (<{PmDriver.cleanup`_47}> continuation_0) (<{PmDriver.ClearCompilerCache`}> (messwin.showInfo (messwin.Level1 "Paths have changed: remaking.") ps_1_1))) (False -> PmCallBack.stop (_Tuple2 PmDriver.DDone (continuation_0 (PmProject.PR_GetExecPath project_7) linked_3 ok_1 (projwin.pm_update_project_window (IdeState.setFICache fileinfo_4 (IdeState.setABCCache abccache_1_0 (IdeState.setProject project_7 (messwin.showInfo (messwin.Level1 "Finished making.") (PmDriver.PostlinkFase_45 ok_1 project_7 ps_1_1))))))))) ) 
PmDriver.BringProjectUptoDate !force_0::B continuation_1 !ps_2 = let _x_1_0 = IdeState.getProject ps_2, project_1_1 = select _x_1_0::_Tuple2 0 in PmCallBack.start (PmDriver.DInit force_0 project_1_1 (PmDriver.cleanup_46 continuation_1)) PmDriver.step (<{PmDriver.ClearCompilerCache`}> (messwin.showInfo (messwin.Level1 "Bring up to date...") (PmDriver.PrecompileFase_44 project_1_1 (select _x_1_0::_Tuple2 1))))
<{PmDriver.TD;SetMadeProjectFun}> _x_0::B = _predefined._Nil
<{PmDriver.TD;CleanupCont}> _x_0::B = _predefined._Nil
<{PmDriver.TD;DriverCompilingInfo}> _x_0::B = _predefined._Nil
<{PmDriver.TD;AsyncWinCompilingInfo}> _x_0::B = _predefined._Nil
<{PmDriver.TD;AsyncCompilingInfo}> _x_0::B = _predefined._Nil
<{PmDriver.TD;DriverState}> _x_0::B = _predefined._Nil
<{PmDriver.TD;DriverStateRecord}> _x_0::B = _predefined._Nil
<{PmDriver.TD;MTPContinuation}> _x_0::B = _predefined._Nil
<{PmDriver.TD;CurrentlyCompiled}> _x_0::B = _predefined._Nil
<{PmDriver.TD;DriverCodeGenerationInfo}> _x_0::B = _predefined._Nil
<{PmDriver.TD;CodeGeneratorProcessNAndPaths}> _x_0::B = _predefined._Nil
<{PmDriver.TD;WinCodeGeneratorProcess}> _x_0::B = _predefined._Nil
<{PmDriver.TD;UnknownFinishedProcessors}> _x_0::B = _predefined._Nil

:: PmDriver.DriverCompilingInfo = PmDriver.Sync | PmDriver.AsyncWin !a1 !a2 | PmDriver.Async !a1 !a2 | PmDriver.Pers !a1
:: PmDriver.DriverState = PmDriver.DInit !a1::B !a2 !a3 | PmDriver.DComp !a1::B !a2 !a3 !a4 !a5 | PmDriver.DQuitCompilers !a1 !a2 !a3 | PmDriver.DGene !a1 !a2 !a3 | PmDriver.DLink !a1 | PmDriver.DDone
:: PmDriver.DriverCodeGenerationInfo = PmDriver.SyncCodeGeneration | PmDriver.ASyncCodeGeneration !a1 !a2 | PmDriver.ASyncCodeGenerationWin !a1 !a2::I
:: PmDriver.UnknownFinishedProcessors = PmDriver.NoUnknownFinishedProcessors | PmDriver.UnknownFinishedProcessors !a1::I !a2

|| Converted Records
:: PmDriver._AsyncWinCompilingInfo = {!PmDriver.win_max_n_processes::I, !PmDriver.win_compiler_process_ids}

:: PmDriver._AsyncCompilingInfo = {!PmDriver.max_n_processes::I, !PmDriver.compiler_process_ids, !PmDriver.unknown_finished_processors}

:: PmDriver._DriverStateRecord = {!PmDriver.project, !PmDriver.continue, !PmDriver.fileinfo, !PmDriver.abccache, !PmDriver.libsinfo, !PmDriver.ok::B, !PmDriver.newpaths::B, !PmDriver.modpaths}

:: PmDriver._CurrentlyCompiled = {!PmDriver.iclModule, PmDriver.options, !PmDriver.slot::I}

:: PmDriver._CodeGeneratorProcessNAndPaths = {!PmDriver.cgp_process_n::I, !PmDriver.cgp_module_name, !PmDriver.cgp_obj_path}

:: PmDriver._WinCodeGeneratorProcess = {!PmDriver.wcgp_process_n::I, !PmDriver.wcgp_process_handle::I, !PmDriver.wcgp_scg, !PmDriver.wcgp_module_name, !PmDriver.wcgp_obj_path}

:: <{PmDriver.gEq_s;}> = {!PmDriver.gEq_s}

:: <{PmDriver.gEq_ss;}> = {!PmDriver.gEq_ss}

:: <{PmDriver.gEq_sss;}> = {!PmDriver.gEq_sss}

:: <{PmDriver.gEq_ssss;}> = {!PmDriver.gEq_ssss}

:: <{PmDriver.gEq_sssss;}> = {!PmDriver.gEq_sssss}

:: <{PmDriver.gEq_ssssss;}> = {!PmDriver.gEq_ssssss}

:: <{PmDriver.gEq_sssssss;}> = {!PmDriver.gEq_sssssss}

:: <{PmDriver.gEq_ssssssss;}> = {!PmDriver.gEq_ssssssss}

:: <{PmDriver.gEq_sssssssss;}> = {!PmDriver.gEq_sssssssss}

:: <{PmDriver.bimap_s;}> = {PmDriver.bimap_s}

:: <{PmDriver.bimap_ss;}> = {PmDriver.bimap_ss}

:: <{PmDriver.bimap_sss;}> = {PmDriver.bimap_sss}

