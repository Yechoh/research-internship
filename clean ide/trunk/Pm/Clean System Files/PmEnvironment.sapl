|| ?module? PmEnvironment


PmEnvironment.t_StdEnv20 = PmEnvironment._Target "StdEnv" (<{_predefined._!Cons!}> "{Application}\\Libraries\\StdEnv" <{_predefined._!Nil!}>) <{_predefined._!Nil!}> <{_predefined._!Nil!}> <{_predefined._!Nil!}> "Tools\\Clean System\\CleanCompiler.exe" "Tools\\Clean System\\CodeGenerator.exe" "Tools\\Clean System\\StaticLinker.exe" "Tools\\Dynamics\\DynamicLinker.exe" 919 False False PmEnvironment.CompilePers PmTypes.DefaultProcessor
PmEnvironment.t_StdIO20 = update PmEnvironment.t_StdEnv20::PmEnvironment._Target [0:"Object IO",1:<{_predefined._!Cons!}> "{Application}\\Libraries\\StdEnv" (<{_predefined._!Cons!}> "{Application}\\Libraries\\StdLib" (<{_predefined._!Cons!}> "{Application}\\Libraries\\ObjectIO ObjectIO" (<{_predefined._!Cons!}> "{Application}\\Libraries\\ObjectIO ObjectIO\\OS Windows" <{_predefined._!Nil!}>)))]
PmEnvironment.emptyTargets = _predefined._Cons PmEnvironment.t_StdEnv20 (_predefined._Cons PmEnvironment.t_StdIO20 _predefined._Nil)
PmEnvironment.fixAppPaths !stup_0 !target_1 = case target_1 (PmEnvironment._Target target_name_1_0 path_1_1 libs_1_2 objs_1_3 stat_1_4 target_comp_1_5 target_cgen_1_6 target_link_1_7 target_dynl_1_8 target_vers_1_9 env_64_bit_processor_1_10 target_redc_1_11 target_meth_1_12 target_proc_1_13 -> update target_1::PmEnvironment._Target [1:PmPath.fulAppPaths stup_0 path_1_1,2:PmPath.fulAppPaths stup_0 libs_1_2,3:PmPath.fulAppPaths stup_0 objs_1_3,4:PmPath.fulAppPaths stup_0 stat_1_4]) 
<{PmEnvironment.c;49;41_19}> !g_l_0 = <{PmEnvironment.g_c1;49;55_108}> g_l_0
<{PmEnvironment.g_c1;49;55_108}> !g_l_0 = case g_l_0 (_predefined._Cons g_h_1_0 g_t_1_1 -> <{PmEnvironment.g_c2;49;55_107}> g_h_1_0 g_t_1_1) (_ -> _predefined._Nil)
<{PmEnvironment.g_c2;49;55_107}> !g_h_0 g_t_1 = case g_h_0 (Directory._DirEntry fileName_1_0 file_1_1 -> case (case (<{StdInt.<_17}> 4 (_SystemArray.size_20 fileName_1_0)) (True -> <{StdString.==_2}> (<{StdString.%_10}> fileName_1_0 (_Tuple2 (<{StdInt.-_7}> (_SystemArray.size_20 fileName_1_0) 4) (_SystemArray.size_20 fileName_1_0))) ".env") (False -> False) ) (True -> _predefined._Cons fileName_1_0 (<{PmEnvironment.c;49;41_19}> g_t_1)) ) (_ -> <{PmEnvironment.c;49;41_19}> g_t_1)
PmEnvironment.anon_23 !v_0 a_1 = UtilStrictLists.StrictListToList v_0
PmEnvironment.anon_22 !a_0 = UtilStrictLists.ListToStrictList a_0
PmEnvironment.emptyTarget = PmEnvironment._Target "" <{_predefined._!Nil!}> <{_predefined._!Nil!}> <{_predefined._!Nil!}> <{_predefined._!Nil!}> "" "" "" "" 42 False False PmEnvironment.CompileSync PmTypes.DefaultProcessor
PmEnvironment.anon_51 !v_0 !a_1 = update a_1::PmEnvironment._Target [0:v_0]
PmEnvironment.anon_50 !a_0 = select a_0::PmEnvironment._Target 0
PmEnvironment.anon_49 !v_0 !a_1 = update a_1::PmEnvironment._Target [1:v_0]
PmEnvironment.anon_48 !a_0 = select a_0::PmEnvironment._Target 1
PmEnvironment.PathOption !_vtoString_0 !_vfromString_1 = UtilOptions._OptionsTableEntry "Path" (UtilOptions.SimpleWithStringConversion _vtoString_0 _vfromString_1 PmPath.convert_path_separators) StdFunc.id StdFunc.const
PmEnvironment.anon_47 !v_0 !a_1 = update a_1::PmEnvironment._Target [2:v_0]
PmEnvironment.anon_46 !a_0 = select a_0::PmEnvironment._Target 2
PmEnvironment.anon_45 !v_0 !a_1 = update a_1::PmEnvironment._Target [3:v_0]
PmEnvironment.anon_44 !a_0 = select a_0::PmEnvironment._Target 3
PmEnvironment.anon_43 !v_0 !a_1 = update a_1::PmEnvironment._Target [4:v_0]
PmEnvironment.anon_42 !a_0 = select a_0::PmEnvironment._Target 4
PmEnvironment.anon_41 !v_0 !a_1 = update a_1::PmEnvironment._Target [5:v_0]
PmEnvironment.anon_40 !a_0 = select a_0::PmEnvironment._Target 5
PmEnvironment.anon_39 !v_0 !a_1 = update a_1::PmEnvironment._Target [6:v_0]
PmEnvironment.anon_38 !a_0 = select a_0::PmEnvironment._Target 6
PmEnvironment.anon_37 !v_0 !a_1 = update a_1::PmEnvironment._Target [7:v_0]
PmEnvironment.anon_36 !a_0 = select a_0::PmEnvironment._Target 7
PmEnvironment.anon_35 !v_0 !a_1 = update a_1::PmEnvironment._Target [8:v_0]
PmEnvironment.anon_34 !a_0 = select a_0::PmEnvironment._Target 8
PmEnvironment.anon_33 !_vto_0 v_1 !a_2 = update a_2::PmEnvironment._Target [9:select _vto_0::<{StdOverloaded.toInt;}> 0 v_1]
PmEnvironment.anon_32 !a_0 = StdString.toString_5 (select a_0::PmEnvironment._Target 9)
PmEnvironment.string_to_bool_53::B !_x_0 = case _x_0 ("True" -> True) (_ -> False)
PmEnvironment.anon_31 !v_0 !a_1 = update a_1::PmEnvironment._Target [11:PmEnvironment.string_to_bool_53 v_0]
PmEnvironment.b2s_52 !_x_0::B = case _x_0 (True -> "True") (False -> "False") 
PmEnvironment.anon_30 !a_0 = PmEnvironment.b2s_52 (select a_0::PmEnvironment._Target 11)
PmEnvironment.s2m_55 !_x_0 = case _x_0 ("Sync" -> PmEnvironment.CompileSync) ("Pers" -> PmEnvironment.CompilePers) (_ -> PmEnvironment.CompileAsync (StdInt.toInt_23 _x_0))
PmEnvironment.anon_29 !v_0 !a_1 = update a_1::PmEnvironment._Target [12:PmEnvironment.s2m_55 v_0]
PmEnvironment.m2s_54 !_x_0 = case _x_0 (PmEnvironment.CompileSync -> "Sync") (PmEnvironment.CompilePers -> "Pers") (PmEnvironment.CompileAsync n_1_0 -> StdString.toString_5 n_1_0) 
PmEnvironment.anon_28 !a_0 = PmEnvironment.m2s_54 (select a_0::PmEnvironment._Target 12)
PmEnvironment.anon_27 !v_0 !a_1 = update a_1::PmEnvironment._Target [13:PmTypes.fromString_10 v_0]
PmEnvironment.anon_26 !a_0 = PmTypes.toString_9 (select a_0::PmEnvironment._Target 13)
PmEnvironment.anon_25 !v_0 !a_1 = update a_1::PmEnvironment._Target [10:PmEnvironment.string_to_bool_53 v_0]
PmEnvironment.anon_24 !a_0 = StdString.toString_8 (select a_0::PmEnvironment._Target 10)
PmEnvironment.PathOption_102 !_vfromString_0 = UtilOptions._OptionsTableEntry "Path" (UtilOptions.SimpleWithStringConversion (<{StdOverloaded.toString;}> StdString.toString_9) _vfromString_0 PmPath.convert_path_separators) StdFunc.id StdFunc.const
PmEnvironment.anon_101 !v_0 !a_1 = update a_1::PmEnvironment._Target [9:StdInt.toInt_23 v_0]
PmEnvironment.PathOption_103 = UtilOptions._OptionsTableEntry "Path" (UtilOptions.SimpleWithStringConversion (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4) PmPath.convert_path_separators) StdFunc.id StdFunc.const
PmEnvironment.TargetTable = _SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray.update_5 (_SystemArray._createArray_0 14) 13 (UtilOptions._OptionsTableEntry "Environment64BitProcessor" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_24 PmEnvironment.anon_25)) 12 (UtilOptions._OptionsTableEntry "EnvironmentProcessor" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_26 PmEnvironment.anon_27)) 11 (UtilOptions._OptionsTableEntry "EnvironmentCompileMethod" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_28 PmEnvironment.anon_29)) 10 (UtilOptions._OptionsTableEntry "EnvironmentRedirect" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_30 PmEnvironment.anon_31)) 9 (UtilOptions._OptionsTableEntry "EnvironmentVersion" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_32 PmEnvironment.anon_101)) 8 (UtilOptions._OptionsTableEntry "EnvironmentDynLink" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_34 PmEnvironment.anon_35)) 7 (UtilOptions._OptionsTableEntry "EnvironmentLinker" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_36 PmEnvironment.anon_37)) 6 (UtilOptions._OptionsTableEntry "EnvironmentCodeGen" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_38 PmEnvironment.anon_39)) 5 (UtilOptions._OptionsTableEntry "EnvironmentCompiler" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_40 PmEnvironment.anon_41)) 4 (UtilOptions._OptionsTableEntry "EnvironmentStaticLibs" (UtilOptions.List PmEnvironment.PathOption_103 "") PmEnvironment.anon_42 PmEnvironment.anon_43)) 3 (UtilOptions._OptionsTableEntry "EnvironmentObjects" (UtilOptions.List PmEnvironment.PathOption_103 "") PmEnvironment.anon_44 PmEnvironment.anon_45)) 2 (UtilOptions._OptionsTableEntry "EnvironmentDynamicLibs" (UtilOptions.List PmEnvironment.PathOption_103 "") PmEnvironment.anon_46 PmEnvironment.anon_47)) 1 (UtilOptions._OptionsTableEntry "EnvironmentPaths" (UtilOptions.List PmEnvironment.PathOption_103 "") PmEnvironment.anon_48 PmEnvironment.anon_49)) 0 (UtilOptions._OptionsTableEntry "EnvironmentName" (UtilOptions.Simple (<{StdOverloaded.toString;}> StdString.toString_9) (<{StdOverloaded.fromString;}> StdString.fromString_4)) PmEnvironment.anon_50 PmEnvironment.anon_51)
PmEnvironment.TargetTableOption = UtilOptions._OptionsTableEntry "Environment" (UtilOptions.Group PmEnvironment.TargetTable) StdFunc.id StdFunc.const
PmEnvironment.TargetsTable !_vArray_0 = select _vArray_0::<{_SystemArray.Array;}> 5 (select _vArray_0::<{_SystemArray.Array;}> 0 1) 0 (UtilOptions._OptionsTableEntry "Environments" (UtilOptions.List PmEnvironment.TargetTableOption PmEnvironment.emptyTarget) PmEnvironment.anon_22 PmEnvironment.anon_23)
PmEnvironment.TargetsTable_104 = _SystemArray.update_5 (_SystemArray._createArray_0 1) 0 (UtilOptions._OptionsTableEntry "Environments" (UtilOptions.List PmEnvironment.TargetTableOption PmEnvironment.emptyTarget) PmEnvironment.anon_22 PmEnvironment.anon_23)
PmEnvironment.REO !options_0 = UtilOptions.GetOptions PmEnvironment.TargetsTable_104 options_0 _predefined._Nil
PmEnvironment.openEnvironment !_vFileSystem_0 !envpath_1 env_2 = let _x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 1 envpath_1 3 env_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> _Tuple2 (_Tuple3 _predefined._Nil False (<{StdString.+++_11}> "The file \"" (<{StdString.+++_11}> envpath_1 "\" could not be opened."))) (select _x_1_0::_Tuple3 2)) (False -> let file_3_0 = select _x_1_0::_Tuple3 1, _x_3_1 = UtilOptions.ReadVersion file_3_0, version_3_2 = select _x_3_1::_Tuple2 0 in case (StdBool.not (<{StdString.==_2}> version_3_2 "1.0")) (True -> _Tuple2 (_Tuple3 _predefined._Nil False (<{StdString.+++_11}> "The file \"" (<{StdString.+++_11}> envpath_1 (<{StdString.+++_11}> "\" has the wrong version." (<{StdString.+++_11}> version_3_2 "<<<"))))) (select (select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (select _x_3_1::_Tuple2 1) (select _x_1_0::_Tuple3 2))::_Tuple2 1)) (False -> let !_x_5_0 = UtilOptions.ReadOptionsFile (select _x_3_1::_Tuple2 1), !targets_5_1 = PmEnvironment.REO (select _x_5_0::_Tuple2 0), !_x_5_2 = select _vFileSystem_0::<{StdFile.FileSystem;}> 0 (select _x_5_0::_Tuple2 1) (select _x_1_0::_Tuple3 2) in case (StdBool.not (select _x_5_2::_Tuple2 0)) (True -> _Tuple2 (_Tuple3 targets_5_1 True (<{StdString.+++_11}> "The file \"" (<{StdString.+++_11}> envpath_1 "\" clould not be closed."))) (select _x_5_2::_Tuple2 1)) (False -> _Tuple2 (_Tuple3 targets_5_1 True "") (select _x_5_2::_Tuple2 1)) ) ) 
PmEnvironment.unfixAppPaths !stup_0 !target_1 = case target_1 (PmEnvironment._Target target_name_1_0 path_1_1 libs_1_2 objs_1_3 stat_1_4 target_comp_1_5 target_cgen_1_6 target_link_1_7 target_dynl_1_8 target_vers_1_9 env_64_bit_processor_1_10 target_redc_1_11 target_meth_1_12 target_proc_1_13 -> update target_1::PmEnvironment._Target [1:PmPath.symAppPaths stup_0 path_1_1,2:PmPath.symAppPaths stup_0 libs_1_2,3:PmPath.symAppPaths stup_0 objs_1_3,4:PmPath.symAppPaths stup_0 stat_1_4]) 
PmEnvironment.WEO prefs_0 = UtilOptions.PutOptions PmEnvironment.TargetsTable_104 prefs_0
PmEnvironment.saveEnvironments_21 !_vFileSystem_0 !envpath_1 targets_2 env_3 = let _x_1_0 = select _vFileSystem_0::<{StdFile.FileSystem;}> 1 envpath_1 1 env_3 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> _Tuple2 (Data.Maybe.Just (_predefined._Cons "Fatal open environments..." _predefined._Nil)) (select _x_1_0::_Tuple3 2)) (False -> let !options_3_0 = PmEnvironment.WEO targets_2, !file_3_1 = UtilOptions.WriteOptionsFile "1.0" options_3_0 (select _x_1_0::_Tuple3 1), env_3_2 = select _x_1_0::_Tuple3 2, _x_3_3 = select _vFileSystem_0::<{StdFile.FileSystem;}> 0 file_3_1 env_3_2 in case (StdBool.not (select _x_3_3::_Tuple2 0)) (True -> _Tuple2 (Data.Maybe.Just (_predefined._Cons "Fatal close environments..." _predefined._Nil)) (select _x_3_3::_Tuple2 1)) (False -> _Tuple2 Data.Maybe.Nothing (select _x_3_3::_Tuple2 1)) ) 
PmEnvironment.saveEnvironments_105 !envpath_0 targets_1 !env_2 = let _x_1_0 = StdFile.fopen_27 envpath_0 1 env_2 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> _Tuple2 (Data.Maybe.Just (_predefined._Cons "Fatal open environments..." _predefined._Nil)) (select _x_1_0::_Tuple3 2)) (False -> let !options_3_0 = PmEnvironment.WEO targets_1, !file_3_1 = UtilOptions.WriteOptionsFile "1.0" options_3_0 (select _x_1_0::_Tuple3 1), env_3_2 = select _x_1_0::_Tuple3 2, _x_3_3 = StdFile.fclose_26 file_3_1 env_3_2 in case (StdBool.not (select _x_3_3::_Tuple2 0)) (True -> _Tuple2 (Data.Maybe.Just (_predefined._Cons "Fatal close environments..." _predefined._Nil)) (select _x_3_3::_Tuple2 1)) (False -> _Tuple2 Data.Maybe.Nothing (select _x_3_3::_Tuple2 1)) ) 
PmEnvironment.saveEnvironments !_vFileEnv_0 !envpath_1 !targets_2 !env_3 = let _x_1_0 = select _vFileEnv_0::<{StdFile.FileEnv;}> 0 UtilIO.GetFullApplicationPath env_3, _x_1_1 = select _vFileEnv_0::<{StdFile.FileEnv;}> 0 (PmEnvironment.saveEnvironments_105 envpath_1 (StdList.map (PmEnvironment.unfixAppPaths (select _x_1_0::_Tuple2 0)) targets_2)) (select _x_1_0::_Tuple2 1) in _Tuple2 (Data.Maybe.isNothing (select _x_1_1::_Tuple2 0)) (select _x_1_1::_Tuple2 1)
PmEnvironment.openEnvironment_106 !envpath_0 !env_1 = let _x_1_0 = StdFile.fopen_27 envpath_0 3 env_1 in case (StdBool.not (select _x_1_0::_Tuple3 0)) (True -> _Tuple2 (_Tuple3 _predefined._Nil False (<{StdString.+++_11}> "The file \"" (<{StdString.+++_11}> envpath_0 "\" could not be opened."))) (select _x_1_0::_Tuple3 2)) (False -> let file_3_0 = select _x_1_0::_Tuple3 1, _x_3_1 = UtilOptions.ReadVersion file_3_0, version_3_2 = select _x_3_1::_Tuple2 0 in case (StdBool.not (<{StdString.==_2}> version_3_2 "1.0")) (True -> _Tuple2 (_Tuple3 _predefined._Nil False (<{StdString.+++_11}> "The file \"" (<{StdString.+++_11}> envpath_0 (<{StdString.+++_11}> "\" has the wrong version." (<{StdString.+++_11}> version_3_2 "<<<"))))) (select (StdFile.fclose_26 (select _x_3_1::_Tuple2 1) (select _x_1_0::_Tuple3 2))::_Tuple2 1)) (False -> let !_x_5_0 = UtilOptions.ReadOptionsFile (select _x_3_1::_Tuple2 1), !targets_5_1 = PmEnvironment.REO (select _x_5_0::_Tuple2 0), !_x_5_2 = StdFile.fclose_26 (select _x_5_0::_Tuple2 1) (select _x_1_0::_Tuple3 2) in case (StdBool.not (select _x_5_2::_Tuple2 0)) (True -> _Tuple2 (_Tuple3 targets_5_1 True (<{StdString.+++_11}> "The file \"" (<{StdString.+++_11}> envpath_0 "\" clould not be closed."))) (select _x_5_2::_Tuple2 1)) (False -> _Tuple2 (_Tuple3 targets_5_1 True "") (select _x_5_2::_Tuple2 1)) ) ) 
PmEnvironment.openEnvironments !_vFileEnv_0 !stup_1 !envpath_2 !env_3 = let _x_1_0 = select _vFileEnv_0::<{StdFile.FileEnv;}> 0 (PmEnvironment.openEnvironment_106 envpath_2) env_3, _x_1_1 = select _x_1_0::_Tuple2 0 in case (StdBool.not (select _x_1_1::_Tuple3 1)) (True -> let targets_3_0 = PmEnvironment.emptyTargets in _Tuple2 (StdList.map (PmEnvironment.fixAppPaths stup_1) targets_3_0) (select (PmEnvironment.saveEnvironments _vFileEnv_0 envpath_2 targets_3_0 (select _x_1_0::_Tuple2 1))::_Tuple2 1)) (False -> _Tuple2 (StdList.map (PmEnvironment.fixAppPaths stup_1) (select _x_1_1::_Tuple3 0)) (select _x_1_0::_Tuple2 1)) 
PmEnvironment.seqSt_20 !_vFileSystem_0 envpath_1 !_x_2 e_3 = case _x_2 (_predefined._Nil -> _Tuple2 _predefined._Nil e_3) (_predefined._Cons e_1_0 es_1_1 -> let _x_2_0 = PmEnvironment.openEnvironment _vFileSystem_0 (StdPathname.MakeFullPathname envpath_1 e_1_0) e_3, _x_2_1 = select _x_2_0::_Tuple2 0, _x_2_2 = PmEnvironment.seqSt_20 _vFileSystem_0 envpath_1 es_1_1 (<{PmEnvironment._c;60;17_109}> (select _x_2_1::_Tuple3 1) env_2_3), env_2_3 = select _x_2_0::_Tuple2 1 in _Tuple2 (<{StdList.++}> (select _x_2_1::_Tuple3 0) (select _x_2_2::_Tuple2 0)) (select _x_2_2::_Tuple2 1)) 
<{PmEnvironment._c;60;17_109}> !_x_0::B !env_1 = case _x_0 (True -> env_1) (_ -> env_1)
PmEnvironment.getEnvironments !_vFileSystem_0 !_vFileEnv_1 !stup_2 !envpath_3 !env_4 = let _x_1_0 = Directory.pd_StringToPath _vFileSystem_0 envpath_3 env_4, _x_1_1 = select _x_1_0::_Tuple2 0, path_1_2 = select _x_1_1::_Tuple2 1, env_1_3 = select _x_1_0::_Tuple2 1, _x_1_4 = Directory.getDirectoryContents _vFileSystem_0 path_1_2 env_1_3, _x_1_5 = select _x_1_4::_Tuple2 0 in case (StdBool.not (<{Directory.==_13}> (select _x_1_5::_Tuple2 0) Directory.NoDirError)) (True -> _Tuple2 (StdList.map (PmEnvironment.fixAppPaths stup_2) PmEnvironment.emptyTargets) (select _x_1_4::_Tuple2 1)) (False -> let entries_3_0 = select _x_1_5::_Tuple2 1, eentries_3_1 = <{PmEnvironment.c;49;41_19}> entries_3_0 in case (StdList.isEmpty eentries_3_1) (True -> PmEnvironment.openEnvironments _vFileEnv_1 stup_2 (StdPathname.MakeFullPathname envpath_3 "IDEEnvs") (select _x_1_4::_Tuple2 1)) (False -> let env_5_0 = select _x_1_4::_Tuple2 1, _x_5_1 = PmEnvironment.seqSt_20 _vFileSystem_0 envpath_3 eentries_3_1 env_5_0, ts_5_2 = select _x_5_1::_Tuple2 0, env_5_3 = select _x_5_1::_Tuple2 1 in <{PmEnvironment._c;53;7_110}> ts_5_2 stup_2 env_5_3) ) 
<{PmEnvironment._c;53;7_110}> !ts_0 stup_1 env_2 = case ts_0 (_predefined._Nil -> _Tuple2 (StdList.map (PmEnvironment.fixAppPaths stup_1) PmEnvironment.emptyTargets) env_2) (_ -> _Tuple2 (StdList.map (PmEnvironment.fixAppPaths stup_1) ts_0) env_2)
PmEnvironment.t_StdEnv = PmEnvironment.t_StdEnv20
<{PmEnvironment.TD;Target}> _x_0::B = _predefined._Nil
<{PmEnvironment.TD;CompileMethod}> _x_0::B = _predefined._Nil

:: PmEnvironment.CompileMethod = PmEnvironment.CompileSync | PmEnvironment.CompileAsync !a1::I | PmEnvironment.CompilePers

|| Converted Records
:: PmEnvironment._Target = {!PmEnvironment.target_name, !PmEnvironment.target_path, !PmEnvironment.target_libs, !PmEnvironment.target_objs, !PmEnvironment.target_stat, !PmEnvironment.target_comp, !PmEnvironment.target_cgen, !PmEnvironment.target_link, !PmEnvironment.target_dynl, !PmEnvironment.target_vers::I, !PmEnvironment.env_64_bit_processor::B, !PmEnvironment.target_redc::B, !PmEnvironment.target_meth, !PmEnvironment.target_proc}

:: <{PmEnvironment.gEq_s;}> = {!PmEnvironment.gEq_s}

:: <{PmEnvironment.gEq_ss;}> = {!PmEnvironment.gEq_ss}

:: <{PmEnvironment.gEq_sss;}> = {!PmEnvironment.gEq_sss}

:: <{PmEnvironment.gEq_ssss;}> = {!PmEnvironment.gEq_ssss}

:: <{PmEnvironment.gEq_sssss;}> = {!PmEnvironment.gEq_sssss}

:: <{PmEnvironment.gEq_ssssss;}> = {!PmEnvironment.gEq_ssssss}

:: <{PmEnvironment.gEq_sssssss;}> = {!PmEnvironment.gEq_sssssss}

:: <{PmEnvironment.gEq_ssssssss;}> = {!PmEnvironment.gEq_ssssssss}

:: <{PmEnvironment.gEq_sssssssss;}> = {!PmEnvironment.gEq_sssssssss}

:: <{PmEnvironment.bimap_s;}> = {PmEnvironment.bimap_s}

:: <{PmEnvironment.bimap_ss;}> = {PmEnvironment.bimap_ss}

:: <{PmEnvironment.bimap_sss;}> = {PmEnvironment.bimap_sss}

