|| ?module? PmFileInfo


PmFileInfo.FI_EmptyCache = <{_predefined._!Nil!}>
PmFileInfo.GetFileInfo1_9 !tp_0 !mdn_1 !abccache_2 !_x_3 !acc_4 !files_5 = case mdn_1 (PmTypes._ModuleDirAndName mdn_dir_1_0 mdn_name_1_1 -> case _x_3 (<{_predefined._!Cons!}> fileinfo_2_0 rest_2_1 -> case (<{StdString.==_2}> mdn_name_1_1 (select fileinfo_2_0::PmFileInfo._FileInfo 0)) (True -> <{_Tuple2!1}> (_Tuple3 fileinfo_2_0 abccache_2 acc_4) files_5) (False -> PmFileInfo.GetFileInfo1_9 tp_0 mdn_1 abccache_2 rest_2_1 acc_4 files_5) ) (<{_predefined._!Nil!}> -> let abcpath_3_0 = PmPath.ModuleDirAndNameToABCSystemPathname mdn_1, _x_3_1 = UtilIO.FModified abcpath_3_0 files_5, abcdate_3_2 = select _x_3_1::_Tuple2 0 in case (StdBool.not (select abcdate_3_2::UtilDate._DATE 0)) (True -> let objpath_5_0 = PmPath.ModuleDirAndNameToObjSystemPathname tp_0 mdn_1, _x_5_1 = UtilIO.FModified objpath_5_0 (select _x_3_1::_Tuple2 1), finfo_5_2 = PmFileInfo._FileInfo mdn_name_1_1 abcpath_3_0 objpath_5_0 False False -1 PmAbcMagic.DefaultABCOptions abcdate_3_2 (select _x_5_1::_Tuple2 0) in <{_Tuple2!1}> (_Tuple3 finfo_5_2 abccache_2 (<{_predefined._!Cons!}> finfo_5_2 acc_4)) (select _x_5_1::_Tuple2 1)) (False -> let objpath_5_0 = PmPath.ModuleDirAndNameToObjSystemPathname tp_0 mdn_1, _x_5_1 = UtilIO.FModified objpath_5_0 (select _x_3_1::_Tuple2 1), _x_5_2 = PmAbcMagic.GetABCCompiledInfo False abcpath_3_0 abccache_2 (select _x_5_1::_Tuple2 1), _x_5_3 = select _x_5_2::_Tuple2 0, finfo_5_4 = PmFileInfo._FileInfo mdn_name_1_1 abcpath_3_0 objpath_5_0 (select _x_5_3::_Tuple5 0) (select _x_5_3::_Tuple5 1) (select _x_5_3::_Tuple5 2) (select _x_5_3::_Tuple5 3) abcdate_3_2 (select _x_5_1::_Tuple2 0) in <{_Tuple2!1}> (_Tuple3 finfo_5_4 (select _x_5_3::_Tuple5 4) (<{_predefined._!Cons!}> finfo_5_4 acc_4)) (select _x_5_2::_Tuple2 1)) ) ) 
PmFileInfo.FI_GetFileInfo !_vFileEnv_0 !tp_1 !mdn_2 !abccache_3 !fileinfo_4 !ps_5 = select _vFileEnv_0::<{StdFile.FileEnv;}> 0 (PmFileInfo.GetFileInfo1_9 tp_1 mdn_2 abccache_3 fileinfo_4 fileinfo_4) ps_5
PmFileInfo.anon_11 !abcTimeProfile_0::B !abcPath_1 !abcDate_2 !info_3 = update info_3::PmFileInfo._FileInfo [1:abcPath_1,6:update (select info_3::PmFileInfo._FileInfo 6)::PmAbcMagic._ABCOptions [1:abcTimeProfile_0],7:abcDate_2]
PmFileInfo.UpdateFileInfo1_10 !module_name_0 !update_function_1 !_x_2 !acc_3 = case _x_2 (<{_predefined._!Nil!}> -> acc_3) (<{_predefined._!Cons!}> first_1_0 rest_1_1 -> case first_1_0 (PmFileInfo._FileInfo fi_mod_name_2_0 abcpath_2_1 objpath_2_2 sys_2_3 seq_stack_2_4 version_2_5 abcOptions_2_6 abcdate_2_7 objdate_2_8 -> case (<{StdString.==_2}> fi_mod_name_2_0 module_name_0) (True -> UtilStrictLists.Reverse2 (<{_predefined._!Cons!}> (update_function_1 first_1_0) rest_1_1) acc_3) (False -> PmFileInfo.UpdateFileInfo1_10 module_name_0 update_function_1 rest_1_1 (<{_predefined._!Cons!}> first_1_0 acc_3)) ) ) 
PmFileInfo.FI_UpdateFileInfo !module_name_0 !update_1 !list_2 = PmFileInfo.UpdateFileInfo1_10 module_name_0 update_1 list_2 <{_predefined._!Nil!}>
PmFileInfo.FI_UpdateAbcDate !module_name_0 !abcPath_1 !abcTimeProfile_2::B !file_3 !files_4 = let _x_1_0 = UtilIO.FModified abcPath_1 files_4, abcDate_1_1 = select _x_1_0::_Tuple2 0 in <{_Tuple2!2}> (_Tuple2 abcDate_1_1 (PmFileInfo.FI_UpdateFileInfo module_name_0 (PmFileInfo.anon_11 abcTimeProfile_2 abcPath_1 abcDate_1_1) file_3)) (select _x_1_0::_Tuple2 1)
PmFileInfo.anon_12 !objPath_0 !objDate_1 !finfo_2 = update finfo_2::PmFileInfo._FileInfo [2:objPath_0,8:objDate_1]
PmFileInfo.FI_UpdateObjDate !module_name_0 !objPath_1 !file_2 !files_3 = let _x_1_0 = UtilIO.FModified objPath_1 files_3 in <{_Tuple2!3}> (PmFileInfo.FI_UpdateFileInfo module_name_0 (PmFileInfo.anon_12 objPath_1 (select _x_1_0::_Tuple2 0)) file_2) (select _x_1_0::_Tuple2 1)
PmFileInfo.anon_13 !_x_0 = case _x_0 (PmFileInfo._FileInfo fi_mod_name_1_0 abcpath_1_1 objpath_1_2 sys_1_3 seq_stack_1_4 version_1_5 abcOptions_1_6 abcdate_1_7 objdate_1_8 -> objpath_1_2) 
PmFileInfo.notSystemObject_14::B !<{_v==_0}> system_obj_path_1 objpath_2 = StdBool.not (select <{_v==_0}>::<{StdOverloaded.==;}> 0 objpath_2 system_obj_path_1)
PmFileInfo.notLibraryObject_15::B !libsinfo_0 !objpath_1 = StdBool.not (PmTypes.isProjLibraryModule (PmPath.GetModuleName objpath_1) libsinfo_0)
PmFileInfo.notSystemObject_59::B !system_obj_path_0 !objpath_1 = StdBool.not (<{StdString.==_2}> objpath_1 system_obj_path_0)
PmFileInfo.FI_GetCleanModules !system_obj_path_0 !libsinfo_1 !fileinfo_2 = <{_Tuple2!3}> (UtilStrictLists.Reverse (UtilStrictLists.Filter (PmFileInfo.notLibraryObject_15 libsinfo_1) (UtilStrictLists.Filter (PmFileInfo.notSystemObject_59 system_obj_path_0) (UtilStrictLists.Map PmFileInfo.anon_13 fileinfo_2)))) fileinfo_2
PmFileInfo.YoungestObj !youngest_0 !_x_1 = case _x_1 (<{_predefined._!Nil!}> -> youngest_0) (<{_predefined._!Cons!}> _x_1_0 rest_1_1 -> case _x_1_0 (PmFileInfo._FileInfo fi_mod_name_2_0 abcpath_2_1 objpath_2_2 sys_2_3 seq_stack_2_4 version_2_5 abcOptions_2_6 abcdate_2_7 objdate_2_8 -> case (StdBool.not (select youngest_0::UtilDate._DATE 0)) (True -> PmFileInfo.YoungestObj objdate_2_8 rest_1_1) (False -> case (StdBool.not (select objdate_2_8::UtilDate._DATE 0)) (True -> PmFileInfo.YoungestObj youngest_0 rest_1_1) (False -> case (UtilDate.Older_Date youngest_0 objdate_2_8) (True -> PmFileInfo.YoungestObj objdate_2_8 rest_1_1) (False -> PmFileInfo.YoungestObj youngest_0 rest_1_1) ) ) ) ) 
<{PmFileInfo.TD;FileInfoCache}> _x_0::B = _predefined._Nil
<{PmFileInfo.TD;FileInfo}> _x_0::B = _predefined._Nil


|| Converted Records
:: PmFileInfo._FileInfo = {!PmFileInfo.fi_mod_name, !PmFileInfo.abcpath, !PmFileInfo.objpath, !PmFileInfo.sys::B, !PmFileInfo.seq_stack::B, !PmFileInfo.version::I, !PmFileInfo.abcOptions, !PmFileInfo.abcdate, !PmFileInfo.objdate}

:: <{PmFileInfo.gEq_s;}> = {!PmFileInfo.gEq_s}

:: <{PmFileInfo.gEq_ss;}> = {!PmFileInfo.gEq_ss}

:: <{PmFileInfo.gEq_sss;}> = {!PmFileInfo.gEq_sss}

:: <{PmFileInfo.gEq_ssss;}> = {!PmFileInfo.gEq_ssss}

:: <{PmFileInfo.gEq_sssss;}> = {!PmFileInfo.gEq_sssss}

:: <{PmFileInfo.gEq_ssssss;}> = {!PmFileInfo.gEq_ssssss}

:: <{PmFileInfo.gEq_sssssss;}> = {!PmFileInfo.gEq_sssssss}

:: <{PmFileInfo.gEq_ssssssss;}> = {!PmFileInfo.gEq_ssssssss}

:: <{PmFileInfo.gEq_sssssssss;}> = {!PmFileInfo.gEq_sssssssss}

:: <{PmFileInfo.bimap_s;}> = {PmFileInfo.bimap_s}

:: <{PmFileInfo.bimap_ss;}> = {PmFileInfo.bimap_ss}

:: <{PmFileInfo.bimap_sss;}> = {PmFileInfo.bimap_sss}

