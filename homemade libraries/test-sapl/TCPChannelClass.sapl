|| ?module? TCPChannelClass


TCPChannelClass.reverse__23 !_x_0 list_1 = case _x_0 (_predefined._Cons hd_1_0 tl_1_1 -> TCPChannelClass.reverse__23 tl_1_1 (_predefined._Cons hd_1_0 list_1)) (_predefined._Nil -> list_1) 
TCPChannelClass.u_reverse !list_0 = TCPChannelClass.reverse__23 list_0 _predefined._Nil
TCPChannelClass.u_length__24 !_vone_0 !<{_v+_1}> !_x_2 akku_3 n_4 = case _x_2 (_predefined._Nil -> _Tuple2 n_4 (TCPChannelClass.u_reverse akku_3)) (_predefined._Cons h_1_0 t_1_1 -> TCPChannelClass.u_length__24 _vone_0 <{_v+_1}> t_1_1 (_predefined._Cons h_1_0 akku_3) (select <{_v+_1}>::<{StdOverloaded.+;}> 0 n_4 (select _vone_0::<{StdOverloaded.one;}> 0))) 
TCPChannelClass.u_length__68 !<{_v+_0}> !_x_1 akku_2 n_3::I = case _x_1 (_predefined._Nil -> _Tuple2 n_3 (TCPChannelClass.u_reverse akku_2)) (_predefined._Cons h_1_0 t_1_1 -> TCPChannelClass.u_length__68 <{_v+_0}> t_1_1 (_predefined._Cons h_1_0 akku_2) (select <{_v+_0}>::<{StdOverloaded.+;}> 0 n_3 StdInt.one_11)) 
TCPChannelClass.u_length__69 !_x_0 akku_1 n_2::I = case _x_0 (_predefined._Nil -> _Tuple2 n_2 (TCPChannelClass.u_reverse akku_1)) (_predefined._Cons h_1_0 t_1_1 -> TCPChannelClass.u_length__69 t_1_1 (_predefined._Cons h_1_0 akku_1) (<{StdInt.+_6}> n_2 StdInt.one_11)) 
TCPChannelClass.u_length !l_0 = TCPChannelClass.u_length__69 l_0 _predefined._Nil 0
TCPChannelClass.mbSubtract_22 !<{_v-_0}> !_x_1 _x_2 = case _x_1 (Data.Maybe.Nothing -> Data.Maybe.Nothing) (Data.Maybe.Just timeout_1_0 -> Data.Maybe.Just (select <{_v-_0}>::<{StdOverloaded.-;}> 0 timeout_1_0 _x_2)) 
<{TCPChannelClass.==_11}>::B !_x_0 !x_1 = case _x_0 (TCPChannelClass.TR_Expired -> <{TCPChannelClass._c;80;27_71}> x_1) (TCPChannelClass.TR_Success -> <{TCPChannelClass._c;82;27_72}> x_1) (TCPChannelClass.TR_NoSuccess -> <{TCPChannelClass._c;84;27_73}> x_1) 
<{TCPChannelClass._c;84;27_73}>::B !x_0 = case x_0 (TCPChannelClass.TR_NoSuccess -> True) (_ -> False)
<{TCPChannelClass._c;82;27_72}>::B !x_0 = case x_0 (TCPChannelClass.TR_Success -> True) (_ -> False)
<{TCPChannelClass._c;80;27_71}>::B !x_0 = case x_0 (TCPChannelClass.TR_Expired -> True) (_ -> False)
TCPChannelClass.mbSubtract_70 !_x_0 _x_1::I = case _x_0 (Data.Maybe.Nothing -> Data.Maybe.Nothing) (Data.Maybe.Just timeout_1_0 -> Data.Maybe.Just (<{StdInt.-_7}> timeout_1_0 _x_1)) 
TCPChannelClass.nreceive_MT !_vReceive_0 !_vChannelEnv_1 !mbTimeout_2 !n_3::I !ch_4 !env_5 = let !_x_1_0 = select _vChannelEnv_1::<{tcp.ChannelEnv;}> 1 env_5, !_x_1_1 = select _vReceive_0::<{TCPChannelClass.Receive;}> 2 _vChannelEnv_1 n_3 ch_4 (select _x_1_0::_Tuple2 1), !_x_1_2 = TCPChannelClass.u_length (select _x_1_1::_Tuple3 0), length_1_3::I = select _x_1_2::_Tuple2 0 in case (<{StdInt.==_16}> length_1_3 n_3) (True -> <{_Tuple4!15}> TCPChannelClass.TR_Success (select _x_1_2::_Tuple2 1) (select _x_1_1::_Tuple3 1) (select _x_1_1::_Tuple3 2)) (False -> let !_x_3_0 = select _vReceive_0::<{TCPChannelClass.Receive;}> 3 _vChannelEnv_1 mbTimeout_2 (select _x_1_1::_Tuple3 1) (select _x_1_1::_Tuple3 2), tReport_3_1 = select _x_3_0::_Tuple4 0 in case (StdBool.not (<{TCPChannelClass.==_11}> tReport_3_1 TCPChannelClass.TR_Success)) (True -> <{_Tuple4!15}> tReport_3_1 (select _x_1_2::_Tuple2 1) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) (False -> case (<{StdInt.==_16}> (<{StdInt.-_7}> n_3 length_1_3) 1) (True -> <{_Tuple4!15}> tReport_3_1 (<{StdList.++}> (select _x_1_2::_Tuple2 1) (_predefined._Cons (Data.Maybe.fromJust (select _x_3_0::_Tuple4 1)) _predefined._Nil)) (select _x_3_0::_Tuple4 2) (select _x_3_0::_Tuple4 3)) (False -> let !_x_6_0 = select _vChannelEnv_1::<{tcp.ChannelEnv;}> 1 (select _x_3_0::_Tuple4 3) in TCPChannelClass.nreceive_MT _vReceive_0 _vChannelEnv_1 (TCPChannelClass.mbSubtract_70 mbTimeout_2 (<{StdInt.-_7}> (select _x_6_0::_Tuple2 0) (select _x_1_0::_Tuple2 0))) (<{StdInt.-_7}> (<{StdInt.-_7}> n_3 length_1_3) 1) (select _x_3_0::_Tuple4 2) (select _x_6_0::_Tuple2 1)) ) ) 
TCPChannelClass.receive !_vChannelEnv_0 !_vReceive_1 !ch_2 !env_3 = let !_x_1_0 = select _vReceive_1::<{TCPChannelClass.Receive;}> 3 _vChannelEnv_0 Data.Maybe.Nothing ch_2 env_3 in case (<{TCPChannelClass.==_11}> (select _x_1_0::_Tuple4 0) TCPChannelClass.TR_NoSuccess) (True -> let !_x_3_0 = select _vReceive_1::<{TCPChannelClass.Receive;}> 1 _vChannelEnv_0 (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3) in case (select _x_3_0::_Tuple3 0) (True -> StdMisc.abort "\nStdChannels: receive failed") (False -> TCPChannelClass.receive _vChannelEnv_0 _vReceive_1 (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) ) (False -> <{_Tuple3!7}> (Data.Maybe.fromJust (select _x_1_0::_Tuple4 1)) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)) 
TCPChannelClass.nreceive !_vChannelEnv_0 !_vReceive_1 !n_2::I !ch_3 !env_4 = let !_x_1_0 = TCPChannelClass.nreceive_MT _vReceive_1 _vChannelEnv_0 Data.Maybe.Nothing n_2 ch_3 env_4 in case (<{TCPChannelClass.==_11}> (select _x_1_0::_Tuple4 0) TCPChannelClass.TR_NoSuccess) (True -> let !_x_3_0 = select _vReceive_1::<{TCPChannelClass.Receive;}> 1 _vChannelEnv_0 (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3) in case (select _x_3_0::_Tuple3 0) (True -> StdMisc.abort "\nStdChannels: nreceive failed") (False -> TCPChannelClass.nreceive _vChannelEnv_0 _vReceive_1 n_2 (select _x_3_0::_Tuple3 1) (select _x_3_0::_Tuple3 2)) ) (False -> <{_Tuple3!7}> (select _x_1_0::_Tuple4 1) (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)) 
TCPChannelClass.send !_vChannelEnv_0 !_vSend_1 !msg_2 !ch_3 !env_4 = let !_x_1_0 = select _vSend_1::<{TCPChannelClass.Send;}> 6 _vChannelEnv_0 Data.Maybe.Nothing msg_2 ch_3 env_4 in <{_Tuple2!3}> (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)
TCPChannelClass.nsend !_vChannelEnv_0 !_vSend_1 !msg_2 !ch_3 !env_4 = let !_x_1_0 = select _vSend_1::<{TCPChannelClass.Send;}> 5 _vChannelEnv_0 Data.Maybe.Nothing msg_2 ch_3 env_4 in <{_Tuple2!3}> (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)
TCPChannelClass.closeChannel !_vChannelEnv_0 !_vSend_1 !ch_2 !env_3 = let !_x_1_0 = select _vSend_1::<{TCPChannelClass.Send;}> 2 _vChannelEnv_0 Data.Maybe.Nothing ch_2 env_3 in select _x_1_0::_Tuple3 2
TCPChannelClass.send_NB !_vChannelEnv_0 !_vSend_1 !msg_2 !ch_3 !env_4 = let !_x_1_0 = select _vSend_1::<{TCPChannelClass.Send;}> 6 _vChannelEnv_0 (Data.Maybe.Just 0) msg_2 ch_3 env_4 in <{_Tuple2!3}> (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)
TCPChannelClass.flushBuffer_NB !_vChannelEnv_0 !_vSend_1 !ch_2 !env_3 = let !_x_1_0 = select _vSend_1::<{TCPChannelClass.Send;}> 4 _vChannelEnv_0 (Data.Maybe.Just 0) ch_2 env_3 in <{_Tuple2!3}> (select _x_1_0::_Tuple4 2) (select _x_1_0::_Tuple4 3)
TCPChannelClass.channelEnvKind_8 !env_0 = <{_Tuple2!3}> 0 env_0
TCPChannelClass.channel_env_get_current_tick_9 !env_0 = ostcp.tcp_getcurrenttick env_0
TCPChannelClass.mb_close_inet_receiver_without_id_10 !_x_0::B !_x_1 !world_2 = world_2
TCPChannelClass.toString_12 !_x_0 = case _x_0 (TCPChannelClass.TR_Expired -> "TR_Expired") (TCPChannelClass.TR_Success -> "TR_Success") (TCPChannelClass.TR_NoSuccess -> "TR_NoSuccess") 
<{TCPChannelClass.TD;DuplexChannel}> _x_0::B = _predefined._Nil
<{TCPChannelClass.TD;TimeoutReport}> _x_0::B = _predefined._Nil
<{TCPChannelClass.TD;Timeout}> _x_0::B = _predefined._Nil
<{TCPChannelClass.TD;Receive;}> _x_0::B = _predefined._Nil
<{TCPChannelClass.TD;closeRChannel;}> _x_0::B = _predefined._Nil
<{TCPChannelClass.TD;Send;}> _x_0::B = _predefined._Nil
<{TCPChannelClass.TD;MaxSize;}> _x_0::B = _predefined._Nil

:: TCPChannelClass.TimeoutReport = TCPChannelClass.TR_Expired | TCPChannelClass.TR_Success | TCPChannelClass.TR_NoSuccess

|| Converted Records
:: TCPChannelClass._DuplexChannel = {TCPChannelClass.sChannel, TCPChannelClass.rChannel}

:: <{TCPChannelClass.Receive;}> = {!TCPChannelClass.available, !TCPChannelClass.eom, !TCPChannelClass.receiveUpTo, !TCPChannelClass.receive_MT}

:: <{TCPChannelClass.closeRChannel;}> = {!TCPChannelClass.closeRChannel}

:: <{TCPChannelClass.Send;}> = {!TCPChannelClass.abortConnection, !TCPChannelClass.bufferSize, !TCPChannelClass.closeChannel_MT, !TCPChannelClass.disconnected, !TCPChannelClass.flushBuffer_MT, !TCPChannelClass.nsend_MT, !TCPChannelClass.send_MT}

:: <{TCPChannelClass.MaxSize;}> = {!TCPChannelClass.clearMaxSize, !TCPChannelClass.getMaxSize, !TCPChannelClass.setMaxSize}

:: <{TCPChannelClass.gEq_s;}> = {!TCPChannelClass.gEq_s}

:: <{TCPChannelClass.gEq_ss;}> = {!TCPChannelClass.gEq_ss}

:: <{TCPChannelClass.gEq_sss;}> = {!TCPChannelClass.gEq_sss}

:: <{TCPChannelClass.gEq_ssss;}> = {!TCPChannelClass.gEq_ssss}

:: <{TCPChannelClass.gEq_sssss;}> = {!TCPChannelClass.gEq_sssss}

:: <{TCPChannelClass.gEq_ssssss;}> = {!TCPChannelClass.gEq_ssssss}

:: <{TCPChannelClass.gEq_sssssss;}> = {!TCPChannelClass.gEq_sssssss}

:: <{TCPChannelClass.gEq_ssssssss;}> = {!TCPChannelClass.gEq_ssssssss}

:: <{TCPChannelClass.gEq_sssssssss;}> = {!TCPChannelClass.gEq_sssssssss}

:: <{TCPChannelClass.bimap_s;}> = {TCPChannelClass.bimap_s}

:: <{TCPChannelClass.bimap_ss;}> = {TCPChannelClass.bimap_ss}

:: <{TCPChannelClass.bimap_sss;}> = {TCPChannelClass.bimap_sss}

