|| ?module? Sapl.SaplStruct


Sapl.SaplStruct.unpackVar_20 !_x_0 = case _x_0 (Sapl.SaplStruct.NormalVar name_1_0 _x_1_1 -> name_1_0) (Sapl.SaplStruct.StrictVar name_1_0 _x_1_1 -> name_1_0) 
Sapl.SaplStruct.eqVarByName::B !a_0 !b_1 = <{StdString.==_2}> (Sapl.SaplStruct.unpackVar_20 a_0) (Sapl.SaplStruct.unpackVar_20 b_1)
Sapl.SaplStruct.ltVarByName::B !a_0 !b_1 = <{StdString.<_3}> (Sapl.SaplStruct.unpackVar_20 a_0) (Sapl.SaplStruct.unpackVar_20 b_1)
Sapl.SaplStruct.unpackLevel::I !_x_0 = case _x_0 (Sapl.SaplStruct.NormalVar _x_1_0 level_1_1 -> level_1_1) (Sapl.SaplStruct.StrictVar _x_1_0 level_1_1 -> level_1_1) 
Sapl.SaplStruct.eqVarByNameLevel::B !a_0 !b_1 = case (<{StdString.==_2}> (Sapl.SaplStruct.unpackVar_20 a_0) (Sapl.SaplStruct.unpackVar_20 b_1)) (True -> <{StdInt.==_16}> (Sapl.SaplStruct.unpackLevel a_0) (Sapl.SaplStruct.unpackLevel b_1)) (False -> False) 
Sapl.SaplStruct.ltVarByNameLevel::B !a_0 !b_1 = case (<{StdString.<_3}> (Sapl.SaplStruct.unpackVar_20 a_0) (Sapl.SaplStruct.unpackVar_20 b_1)) (True -> True) (False -> case (<{StdString.==_2}> (Sapl.SaplStruct.unpackVar_20 a_0) (Sapl.SaplStruct.unpackVar_20 b_1)) (True -> <{StdInt.<_17}> (Sapl.SaplStruct.unpackLevel a_0) (Sapl.SaplStruct.unpackLevel b_1)) (False -> False) ) 
Sapl.SaplStruct.removeTypeInfo !_x_0 = case _x_0 (Sapl.SaplStruct.TypedVar var_1_0 _x_1_1 -> var_1_0) 
Sapl.SaplStruct.unpackBindVar !_x_0 = case _x_0 (Sapl.SaplStruct.SaplLetDef typedVar_1_0 _x_1_1 -> typedVar_1_0) 
Sapl.SaplStruct.unpackBindExpr !_x_0 = case _x_0 (Sapl.SaplStruct.SaplLetDef _x_1_0 expr_1_1 -> expr_1_1) 
Sapl.SaplStruct.unpackConsName !_x_0 = case _x_0 (Sapl.SaplStruct.PCons cons_1_0 _x_1_1 -> Data.Maybe.Just cons_1_0) (_ -> Data.Maybe.Nothing)
Sapl.SaplStruct.toStrictVar_18 !_x_0 = case _x_0 (Sapl.SaplStruct.NormalVar name_1_0 level_1_1 -> Sapl.SaplStruct.StrictVar name_1_0 level_1_1) (_ -> _x_0)
Sapl.SaplStruct.toStrictBind !_x_0 = case _x_0 (Sapl.SaplStruct.SaplLetDef _x_1_0 body_1_1 -> case _x_1_0 (Sapl.SaplStruct.TypedVar var_2_0 type_2_1 -> Sapl.SaplStruct.SaplLetDef (Sapl.SaplStruct.TypedVar (Sapl.SaplStruct.toStrictVar_18 var_2_0) type_2_1) body_1_1) ) 
Sapl.SaplStruct.isConsPattern::B !_x_0 = case _x_0 (Sapl.SaplStruct.PCons _x_1_0 _x_1_1 -> True) (_ -> False)
Sapl.SaplStruct.isDefaultPattern::B !_x_0 = case _x_0 (Sapl.SaplStruct.PDefault -> True) (_ -> False)
Sapl.SaplStruct.toString_11 !_x_0 = case _x_0 (Sapl.SaplStruct.NormalVar name_1_0 _x_1_1 -> case _x_1_1 (0 -> name_1_0) (_ -> <{StdString.+++_11}> name_1_0 (<{StdString.+++_11}> "_" (StdString.toString_5 _x_1_1)))) (Sapl.SaplStruct.StrictVar name_1_0 _x_1_1 -> case _x_1_1 (0 -> <{StdString.+++_11}> "!" name_1_0) (_ -> <{StdString.+++_11}> "!" (<{StdString.+++_11}> name_1_0 (<{StdString.+++_11}> "_" (StdString.toString_5 _x_1_1))))) 
Sapl.SaplStruct.eqStrictVar_12::B !name1_0 !_x_1 = case _x_1 (Sapl.SaplStruct.StrictVar name2_1_0 _x_1_1 -> <{StdString.==_2}> name1_0 name2_1_0) (_ -> False)
Sapl.SaplStruct.eqStrictVar_13::B !name_0 !_x_1 = case _x_1 (Sapl.SaplStruct.TypedVar var_1_0 _x_1_1 -> Sapl.SaplStruct.eqStrictVar_12 name_0 var_1_0) 
Sapl.SaplStruct.isStrictVar_14::B !_x_0 = case _x_0 (Sapl.SaplStruct.StrictVar _x_1_0 _x_1_1 -> True) (_ -> False)
Sapl.SaplStruct.isStrictVar_15::B !_x_0 = case _x_0 (Sapl.SaplStruct.TypedVar var_1_0 _x_1_1 -> Sapl.SaplStruct.isStrictVar_14 var_1_0) 
Sapl.SaplStruct.toNormalVar_16 !_x_0 = case _x_0 (Sapl.SaplStruct.StrictVar name_1_0 level_1_1 -> Sapl.SaplStruct.NormalVar name_1_0 level_1_1) (_ -> _x_0)
Sapl.SaplStruct.toNormalVar_17 !_x_0 = case _x_0 (Sapl.SaplStruct.TypedVar var_1_0 type_1_1 -> Sapl.SaplStruct.TypedVar (Sapl.SaplStruct.toNormalVar_16 var_1_0) type_1_1) 
Sapl.SaplStruct.toStrictVar_19 !_x_0 = case _x_0 (Sapl.SaplStruct.TypedVar var_1_0 type_1_1 -> Sapl.SaplStruct.TypedVar (Sapl.SaplStruct.toStrictVar_18 var_1_0) type_1_1) 
Sapl.SaplStruct.unpackVar_21 !_x_0 = case _x_0 (Sapl.SaplStruct.TypedVar var_1_0 _x_1_1 -> Sapl.SaplStruct.unpackVar_20 var_1_0) 
<{Sapl.SaplStruct.TD;FuncType}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;SaplConstructor}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;SaplTerm}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;SaplLetDef}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;SaplName}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;SaplVar}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;SaplTypedVar}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;SaplPattern}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;SaplType}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;eqStrictVar;}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;isStrictVar;}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;toNormalVar;}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;toStrictVar;}> _x_0::B = _predefined._Nil
<{Sapl.SaplStruct.TD;unpackVar;}> _x_0::B = _predefined._Nil

:: Sapl.SaplStruct.FuncType = Sapl.SaplStruct.FTRecord a1 a2 | Sapl.SaplStruct.FTADT a1 a2 | Sapl.SaplStruct.FTCAF a1 a2 | Sapl.SaplStruct.FTMacro a1 a2 a3 | Sapl.SaplStruct.FTFunc a1 a2 a3
:: Sapl.SaplStruct.SaplConstructor = Sapl.SaplStruct.SaplConstructor a1 a2::I a3
:: Sapl.SaplStruct.SaplTerm = Sapl.SaplStruct.SLit a1 | Sapl.SaplStruct.SVar a1 | Sapl.SaplStruct.SApplication a1 a2 | Sapl.SaplStruct.SCase a1 a2 | Sapl.SaplStruct.SLet a1 a2 | Sapl.SaplStruct.SSelect a1 a2 a3::I | Sapl.SaplStruct.SUpdate a1 a2 a3 | Sapl.SaplStruct.SAbortBody
:: Sapl.SaplStruct.SaplLetDef = Sapl.SaplStruct.SaplLetDef a1 a2
:: Sapl.SaplStruct.SaplVar = Sapl.SaplStruct.NormalVar a1 a2::I | Sapl.SaplStruct.StrictVar a1 a2::I
:: Sapl.SaplStruct.SaplTypedVar = Sapl.SaplStruct.TypedVar a1 a2
:: Sapl.SaplStruct.SaplPattern = Sapl.SaplStruct.PCons a1 a2 | Sapl.SaplStruct.PLit a1 | Sapl.SaplStruct.PDefault
:: Sapl.SaplStruct.SaplType = Sapl.SaplStruct.Type a1 | Sapl.SaplStruct.NoType

|| Converted Records
:: <{Sapl.SaplStruct.eqStrictVar;}> = {!Sapl.SaplStruct.eqStrictVar}

:: <{Sapl.SaplStruct.isStrictVar;}> = {!Sapl.SaplStruct.isStrictVar}

:: <{Sapl.SaplStruct.toNormalVar;}> = {!Sapl.SaplStruct.toNormalVar}

:: <{Sapl.SaplStruct.toStrictVar;}> = {!Sapl.SaplStruct.toStrictVar}

:: <{Sapl.SaplStruct.unpackVar;}> = {!Sapl.SaplStruct.unpackVar}

:: <{Sapl.SaplStruct.gEq_s;}> = {!Sapl.SaplStruct.gEq_s}

:: <{Sapl.SaplStruct.gEq_ss;}> = {!Sapl.SaplStruct.gEq_ss}

:: <{Sapl.SaplStruct.gEq_sss;}> = {!Sapl.SaplStruct.gEq_sss}

:: <{Sapl.SaplStruct.gEq_ssss;}> = {!Sapl.SaplStruct.gEq_ssss}

:: <{Sapl.SaplStruct.gEq_sssss;}> = {!Sapl.SaplStruct.gEq_sssss}

:: <{Sapl.SaplStruct.gEq_ssssss;}> = {!Sapl.SaplStruct.gEq_ssssss}

:: <{Sapl.SaplStruct.gEq_sssssss;}> = {!Sapl.SaplStruct.gEq_sssssss}

:: <{Sapl.SaplStruct.gEq_ssssssss;}> = {!Sapl.SaplStruct.gEq_ssssssss}

:: <{Sapl.SaplStruct.gEq_sssssssss;}> = {!Sapl.SaplStruct.gEq_sssssssss}

:: <{Sapl.SaplStruct.bimap_s;}> = {Sapl.SaplStruct.bimap_s}

:: <{Sapl.SaplStruct.bimap_ss;}> = {Sapl.SaplStruct.bimap_ss}

:: <{Sapl.SaplStruct.bimap_sss;}> = {Sapl.SaplStruct.bimap_sss}

:: <{Sapl.SaplStruct.JSONEncode_s;}> = {!Sapl.SaplStruct.JSONEncode_s}

:: <{Sapl.SaplStruct.JSONEncode_ss;}> = {!Sapl.SaplStruct.JSONEncode_ss}

:: <{Sapl.SaplStruct.JSONEncode_sss;}> = {!Sapl.SaplStruct.JSONEncode_sss}

:: <{Sapl.SaplStruct.JSONEncode_ssss;}> = {!Sapl.SaplStruct.JSONEncode_ssss}

:: <{Sapl.SaplStruct.JSONEncode_sssss;}> = {!Sapl.SaplStruct.JSONEncode_sssss}

:: <{Sapl.SaplStruct.JSONEncode_ssssss;}> = {!Sapl.SaplStruct.JSONEncode_ssssss}

:: <{Sapl.SaplStruct.JSONEncode_sssssss;}> = {!Sapl.SaplStruct.JSONEncode_sssssss}

:: <{Sapl.SaplStruct.JSONEncode_ssssssss;}> = {!Sapl.SaplStruct.JSONEncode_ssssssss}

:: <{Sapl.SaplStruct.JSONEncode_sssssssss;}> = {!Sapl.SaplStruct.JSONEncode_sssssssss}

:: <{Sapl.SaplStruct.JSONDecode_s;}> = {!Sapl.SaplStruct.JSONDecode_s}

:: <{Sapl.SaplStruct.JSONDecode_ss;}> = {!Sapl.SaplStruct.JSONDecode_ss}

:: <{Sapl.SaplStruct.JSONDecode_sss;}> = {!Sapl.SaplStruct.JSONDecode_sss}

:: <{Sapl.SaplStruct.JSONDecode_ssss;}> = {!Sapl.SaplStruct.JSONDecode_ssss}

:: <{Sapl.SaplStruct.JSONDecode_sssss;}> = {!Sapl.SaplStruct.JSONDecode_sssss}

:: <{Sapl.SaplStruct.JSONDecode_ssssss;}> = {!Sapl.SaplStruct.JSONDecode_ssssss}

:: <{Sapl.SaplStruct.JSONDecode_sssssss;}> = {!Sapl.SaplStruct.JSONDecode_sssssss}

:: <{Sapl.SaplStruct.JSONDecode_ssssssss;}> = {!Sapl.SaplStruct.JSONDecode_ssssssss}

:: <{Sapl.SaplStruct.JSONDecode_sssssssss;}> = {!Sapl.SaplStruct.JSONDecode_sssssssss}

