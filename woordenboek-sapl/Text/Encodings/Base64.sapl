|| ?module? Text.Encodings.Base64


Text.Encodings.Base64.encodeLastOctet_18 !_vArray_0 a_1 dest_o_2::I !oct_3::I !off_4::I !p_5::I !s_6 = case (<{StdInt.<_17}> off_4 0) (True -> s_6) (False -> case (<{StdInt.<_17}> 0 p_5) (True -> Text.Encodings.Base64.encodeLastOctet_18 _vArray_0 a_1 dest_o_2 (<{StdInt.>>}> oct_3 6) (<{StdInt.-_7}> off_4 1) (<{StdInt.-_7}> p_5 1) (_SystemArray.update_21 s_6 (<{StdInt.+_6}> off_4 dest_o_2) '=')) (False -> Text.Encodings.Base64.encodeLastOctet_18 _vArray_0 a_1 dest_o_2 (<{StdInt.>>}> oct_3 6) (<{StdInt.-_7}> off_4 1) p_5 (_SystemArray.update_21 s_6 (<{StdInt.+_6}> off_4 dest_o_2) (select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (StdInt.bitand oct_3 63)))) ) 
Text.Encodings.Base64.encodeLastOctet_29 a_0 dest_o_1::I !oct_2::I !off_3::I !p_4::I !s_5 = case (<{StdInt.<_17}> off_3 0) (True -> s_5) (False -> case (<{StdInt.<_17}> 0 p_4) (True -> Text.Encodings.Base64.encodeLastOctet_29 a_0 dest_o_1 (<{StdInt.>>}> oct_2 6) (<{StdInt.-_7}> off_3 1) (<{StdInt.-_7}> p_4 1) (_SystemArray.update_21 s_5 (<{StdInt.+_6}> off_3 dest_o_1) '=')) (False -> Text.Encodings.Base64.encodeLastOctet_29 a_0 dest_o_1 (<{StdInt.>>}> oct_2 6) (<{StdInt.-_7}> off_3 1) p_4 (_SystemArray.update_21 s_5 (<{StdInt.+_6}> off_3 dest_o_1) (_SystemArray.select_19 a_0 (StdInt.bitand oct_2 63)))) ) 
<{Text.Encodings.Base64.encodeString`_19}> !_vArray_0 !_vto_1 s_2 !srcSize_3::I !dest_4 !src_o_5::I !dest_o_6::I !a_7 = let !r_1_0::I = <{StdInt.-_7}> srcSize_3 src_o_5 in case (StdBool.not (<{StdInt.<_17}> r_1_0 3)) (True -> let !oct_3_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (select _vto_1::<{StdOverloaded.toInt;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 src_o_5)) 16) (<{StdInt.<<}> (select _vto_1::<{StdOverloaded.toInt;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 (<{StdInt.+_6}> src_o_5 1))) 8)) (select _vto_1::<{StdOverloaded.toInt;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 (<{StdInt.+_6}> src_o_5 2))), !dest_3_1 = _SystemArray.update_21 dest_4 (<{StdInt.+_6}> dest_o_6 3) (_SystemArray.select_19 a_7 (StdInt.bitand oct_3_0 63)), !dest_3_2 = _SystemArray.update_21 dest_3_1 (<{StdInt.+_6}> dest_o_6 2) (_SystemArray.select_19 a_7 (StdInt.bitand (<{StdInt.>>}> oct_3_0 6) 63)), !dest_3_3 = _SystemArray.update_21 dest_3_2 (<{StdInt.+_6}> dest_o_6 1) (_SystemArray.select_19 a_7 (StdInt.bitand (<{StdInt.>>}> oct_3_0 12) 63)), !dest_3_4 = _SystemArray.update_21 dest_3_3 dest_o_6 (_SystemArray.select_19 a_7 (StdInt.bitand (<{StdInt.>>}> oct_3_0 18) 63)) in <{Text.Encodings.Base64.encodeString`_19}> _vArray_0 _vto_1 s_2 srcSize_3 dest_3_4 (<{StdInt.+_6}> src_o_5 3) (<{StdInt.+_6}> dest_o_6 4) a_7) (False -> case (<{StdInt.==_16}> r_1_0 2) (True -> let !c1_4_0 = select _vArray_0::<{_SystemArray.Array;}> 3 s_2 src_o_5, !c2_4_1 = select _vArray_0::<{_SystemArray.Array;}> 3 s_2 (<{StdInt.+_6}> src_o_5 1), !oct_4_2::I = <{StdInt.+_6}> (<{StdInt.<<}> (select _vto_1::<{StdOverloaded.toInt;}> 0 c1_4_0) 16) (<{StdInt.<<}> (select _vto_1::<{StdOverloaded.toInt;}> 0 c2_4_1) 8) in Text.Encodings.Base64.encodeLastOctet_29 a_7 dest_o_6 oct_4_2 3 1 dest_4) (False -> case (<{StdInt.==_16}> r_1_0 1) (True -> let !c1_5_0 = select _vArray_0::<{_SystemArray.Array;}> 3 s_2 src_o_5, !oct_5_1::I = <{StdInt.<<}> (select _vto_1::<{StdOverloaded.toInt;}> 0 c1_5_0) 16 in Text.Encodings.Base64.encodeLastOctet_29 a_7 dest_o_6 oct_5_1 3 2 dest_4) (False -> case (<{StdInt.==_16}> r_1_0 0) (True -> dest_4) ) ) ) 
<{Text.Encodings.Base64.encodeString`_30}> !_vto_0 s_1 !srcSize_2::I !dest_3 !src_o_4::I !dest_o_5::I !a_6 = let !r_1_0::I = <{StdInt.-_7}> srcSize_2 src_o_4 in case (StdBool.not (<{StdInt.<_17}> r_1_0 3)) (True -> let !oct_3_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (select _vto_0::<{StdOverloaded.toInt;}> 0 (_SystemArray.select_19 s_1 src_o_4)) 16) (<{StdInt.<<}> (select _vto_0::<{StdOverloaded.toInt;}> 0 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_4 1))) 8)) (select _vto_0::<{StdOverloaded.toInt;}> 0 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_4 2))), !dest_3_1 = _SystemArray.update_21 dest_3 (<{StdInt.+_6}> dest_o_5 3) (_SystemArray.select_19 a_6 (StdInt.bitand oct_3_0 63)), !dest_3_2 = _SystemArray.update_21 dest_3_1 (<{StdInt.+_6}> dest_o_5 2) (_SystemArray.select_19 a_6 (StdInt.bitand (<{StdInt.>>}> oct_3_0 6) 63)), !dest_3_3 = _SystemArray.update_21 dest_3_2 (<{StdInt.+_6}> dest_o_5 1) (_SystemArray.select_19 a_6 (StdInt.bitand (<{StdInt.>>}> oct_3_0 12) 63)), !dest_3_4 = _SystemArray.update_21 dest_3_3 dest_o_5 (_SystemArray.select_19 a_6 (StdInt.bitand (<{StdInt.>>}> oct_3_0 18) 63)) in <{Text.Encodings.Base64.encodeString`_30}> _vto_0 s_1 srcSize_2 dest_3_4 (<{StdInt.+_6}> src_o_4 3) (<{StdInt.+_6}> dest_o_5 4) a_6) (False -> case (<{StdInt.==_16}> r_1_0 2) (True -> let !c1_4_0::C = _SystemArray.select_19 s_1 src_o_4, !c2_4_1::C = _SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_4 1), !oct_4_2::I = <{StdInt.+_6}> (<{StdInt.<<}> (select _vto_0::<{StdOverloaded.toInt;}> 0 c1_4_0) 16) (<{StdInt.<<}> (select _vto_0::<{StdOverloaded.toInt;}> 0 c2_4_1) 8) in Text.Encodings.Base64.encodeLastOctet_29 a_6 dest_o_5 oct_4_2 3 1 dest_3) (False -> case (<{StdInt.==_16}> r_1_0 1) (True -> let !c1_5_0::C = _SystemArray.select_19 s_1 src_o_4, !oct_5_1::I = <{StdInt.<<}> (select _vto_0::<{StdOverloaded.toInt;}> 0 c1_5_0) 16 in Text.Encodings.Base64.encodeLastOctet_29 a_6 dest_o_5 oct_5_1 3 2 dest_3) (False -> case (<{StdInt.==_16}> r_1_0 0) (True -> dest_3) ) ) ) 
<{Text.Encodings.Base64.encodeString`_31}> s_0 !srcSize_1::I !dest_2 !src_o_3::I !dest_o_4::I !a_5 = let !r_1_0::I = <{StdInt.-_7}> srcSize_1 src_o_3 in case (StdBool.not (<{StdInt.<_17}> r_1_0 3)) (True -> let !oct_3_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_0 src_o_3)) 16) (<{StdInt.<<}> (StdInt.toInt_20 (_SystemArray.select_19 s_0 (<{StdInt.+_6}> src_o_3 1))) 8)) (StdInt.toInt_20 (_SystemArray.select_19 s_0 (<{StdInt.+_6}> src_o_3 2))), !dest_3_1 = _SystemArray.update_21 dest_2 (<{StdInt.+_6}> dest_o_4 3) (_SystemArray.select_19 a_5 (StdInt.bitand oct_3_0 63)), !dest_3_2 = _SystemArray.update_21 dest_3_1 (<{StdInt.+_6}> dest_o_4 2) (_SystemArray.select_19 a_5 (StdInt.bitand (<{StdInt.>>}> oct_3_0 6) 63)), !dest_3_3 = _SystemArray.update_21 dest_3_2 (<{StdInt.+_6}> dest_o_4 1) (_SystemArray.select_19 a_5 (StdInt.bitand (<{StdInt.>>}> oct_3_0 12) 63)), !dest_3_4 = _SystemArray.update_21 dest_3_3 dest_o_4 (_SystemArray.select_19 a_5 (StdInt.bitand (<{StdInt.>>}> oct_3_0 18) 63)) in <{Text.Encodings.Base64.encodeString`_31}> s_0 srcSize_1 dest_3_4 (<{StdInt.+_6}> src_o_3 3) (<{StdInt.+_6}> dest_o_4 4) a_5) (False -> case (<{StdInt.==_16}> r_1_0 2) (True -> let !c1_4_0::C = _SystemArray.select_19 s_0 src_o_3, !c2_4_1::C = _SystemArray.select_19 s_0 (<{StdInt.+_6}> src_o_3 1), !oct_4_2::I = <{StdInt.+_6}> (<{StdInt.<<}> (StdInt.toInt_20 c1_4_0) 16) (<{StdInt.<<}> (StdInt.toInt_20 c2_4_1) 8) in Text.Encodings.Base64.encodeLastOctet_29 a_5 dest_o_4 oct_4_2 3 1 dest_2) (False -> case (<{StdInt.==_16}> r_1_0 1) (True -> let !c1_5_0::C = _SystemArray.select_19 s_0 src_o_3, !oct_5_1::I = <{StdInt.<<}> (StdInt.toInt_20 c1_5_0) 16 in Text.Encodings.Base64.encodeLastOctet_29 a_5 dest_o_4 oct_5_1 3 2 dest_2) (False -> case (<{StdInt.==_16}> r_1_0 0) (True -> dest_2) ) ) ) 
Text.Encodings.Base64.encodeString !s_0 !a_1 = let !destSize_1_0::I = <{StdInt.*_9}> 4 (<{StdInt./_10}> (<{StdInt.+_6}> srcSize_1_2 2) 3), !destString_1_1 = _SystemArray.createArray_17 destSize_1_0 '\0', srcSize_1_2::I = _SystemArray.size_20 s_0 in <{Text.Encodings.Base64.encodeString`_31}> s_0 srcSize_1_2 destString_1_1 0 0 a_1
Text.Encodings.Base64.base64Encode !s_0 = Text.Encodings.Base64.encodeString s_0 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
<{Text.Encodings.Base64.addLineBreaks`_20}> !src_0 !dest_1 !len_2::I = case (StdBool.not (<{StdInt.<_17}> len_2 (_SystemArray.size_20 src_0))) (True -> <{StdString.+++.}> dest_1 src_0) (False -> <{Text.Encodings.Base64.addLineBreaks`_20}> (<{StdString.%_10}> src_0 (_Tuple2 len_2 (_SystemArray.size_20 src_0))) (<{StdString.+++_11}> dest_1 (<{StdString.+++_11}> (<{StdString.%_10}> src_0 (_Tuple2 0 (<{StdInt.-_7}> len_2 1))) "\n")) len_2) 
Text.Encodings.Base64.addLineBreaks !s_0 !l_1::I = case (<{StdInt.<_17}> 0 l_1) (True -> <{Text.Encodings.Base64.addLineBreaks`_20}> s_0 "" l_1) (False -> StdMisc.abort "Length cannot be 0 or less.") 
Text.Encodings.Base64.base64EncodeLen !s_0 !l_1::I = Text.Encodings.Base64.addLineBreaks (Text.Encodings.Base64.encodeString s_0 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=") l_1
Text.Encodings.Base64.base64URLEncode !s_0 = Text.Encodings.Base64.encodeString s_0 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="
Text.Encodings.Base64.base64URLEncodeLen !s_0 !l_1::I = Text.Encodings.Base64.addLineBreaks (Text.Encodings.Base64.encodeString s_0 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=") l_1
<{Text.Encodings.Base64.cu;13;84_17}> !_vArray_0 a_1 !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> <{Text.Encodings.Base64.cu;13;84_17}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 a_1 (StdInt.toInt_20 (_SystemArray.select_19 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" i_2)) (StdChar.toChar_21 i_2)) (<{StdInt.+_6}> i_2 StdInt.one_11) g_s_3) (False -> a_1) 
<{Text.Encodings.Base64.cu;13;84_32}> !a_0 !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> <{Text.Encodings.Base64.cu;13;84_32}> (_SystemArray.update_21 a_0 (StdInt.toInt_20 (_SystemArray.select_19 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" i_1)) (StdChar.toChar_21 i_1)) (<{StdInt.+_6}> i_1 StdInt.one_11) g_s_2) (False -> a_0) 
Text.Encodings.Base64.decodeWithStdAlphabet =: <{Text.Encodings.Base64.cu;13;84_32}> (_SystemArray.createArray_17 256 '\0') 0 (<{StdInt.-_7}> (_SystemArray.size_20 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=") 1)
Text.Encodings.Base64.count_line_breaks_26::I !i_0::I !n_line_breaks_1::I !s_2 = case (<{StdInt.<_17}> i_0 (_SystemArray.size_20 s_2)) (True -> case (StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 s_2 i_0) '\n')) (True -> Text.Encodings.Base64.count_line_breaks_26 (<{StdInt.+_6}> i_0 1) n_line_breaks_1 s_2) (False -> Text.Encodings.Base64.count_line_breaks_26 (<{StdInt.+_6}> i_0 1) (<{StdInt.+_6}> n_line_breaks_1 1) s_2) ) (False -> n_line_breaks_1) 
Text.Encodings.Base64.copy_without_line_breaks_25 !s_i_0::I !d_i_1::I !s_2 !d_3 = case (<{StdInt.<_17}> s_i_0 (_SystemArray.size_20 s_2)) (True -> case (StdBool.not (<{StdChar.==_18}> (_SystemArray.select_19 s_2 s_i_0) '\n')) (True -> let !d_3_0 = _SystemArray.update_21 d_3 d_i_1 (_SystemArray.select_19 s_2 s_i_0) in Text.Encodings.Base64.copy_without_line_breaks_25 (<{StdInt.+_6}> s_i_0 1) (<{StdInt.+_6}> d_i_1 1) s_2 d_3_0) (False -> Text.Encodings.Base64.copy_without_line_breaks_25 (<{StdInt.+_6}> s_i_0 1) d_i_1 s_2 d_3) ) (False -> d_3) 
Text.Encodings.Base64.removeLineBreaks !src_0 = let !n_line_breaks_1_0::I = Text.Encodings.Base64.count_line_breaks_26 0 0 src_0 in case (<{StdInt.==_16}> n_line_breaks_1_0 0) (True -> src_0) (False -> let !s_3_0 = _SystemArray.createArray_17 (<{StdInt.-_7}> (_SystemArray.size_20 src_0) n_line_breaks_1_0) '\0' in Text.Encodings.Base64.copy_without_line_breaks_25 0 0 src_0 s_3_0) 
Text.Encodings.Base64.destSize_24::I !_vArray_0 s_1 !srcSize_2::I = case (<{StdInt.==_16}> srcSize_2 0) (True -> 0) (False -> let !d_2_0::I = <{StdInt./_10}> (<{StdInt.*_9}> srcSize_2 3) 4 in case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_1 (<{StdInt.-_7}> srcSize_2 2)) '=') (True -> <{StdInt.-_7}> d_2_0 2) (False -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_1 (<{StdInt.-_7}> srcSize_2 1)) '=') (True -> <{StdInt.-_7}> d_2_0 1) (False -> d_2_0) ) ) 
Text.Encodings.Base64.decodeCommonOctet_23 !_vArray_0 !_vto_1 !_vArray_2 s_3 a_4 !dest_5 !src_o_6::I !dest_o_7::I = let !oct_1_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_2::<{_SystemArray.Array;}> 3 a_4 (select _vto_1::<{StdOverloaded.toInt;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 src_o_6)))) 18) (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_2::<{_SystemArray.Array;}> 3 a_4 (select _vto_1::<{StdOverloaded.toInt;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 (<{StdInt.+_6}> src_o_6 1))))) 12)) (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_2::<{_SystemArray.Array;}> 3 a_4 (select _vto_1::<{StdOverloaded.toInt;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 (<{StdInt.+_6}> src_o_6 2))))) 6)) (StdChar.fromChar_22 (select _vArray_2::<{_SystemArray.Array;}> 3 a_4 (select _vto_1::<{StdOverloaded.toInt;}> 0 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 (<{StdInt.+_6}> src_o_6 3))))), !dest_1_1 = _SystemArray.update_21 dest_5 (<{StdInt.+_6}> dest_o_7 2) (StdChar.toChar_21 oct_1_0), !dest_1_2 = _SystemArray.update_21 dest_1_1 (<{StdInt.+_6}> dest_o_7 1) (StdChar.toChar_21 (<{StdInt.>>}> oct_1_0 8)), !dest_1_3 = _SystemArray.update_21 dest_1_2 dest_o_7 (StdChar.toChar_21 (<{StdInt.>>}> oct_1_0 16)) in dest_1_3
Text.Encodings.Base64.decodeCommonOctet_33 !_vArray_0 !_vArray_1 s_2 a_3 !dest_4 !src_o_5::I !dest_o_6::I = let !oct_1_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_1::<{_SystemArray.Array;}> 3 a_3 (StdInt.toInt_20 (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 src_o_5)))) 18) (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_1::<{_SystemArray.Array;}> 3 a_3 (StdInt.toInt_20 (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 (<{StdInt.+_6}> src_o_5 1))))) 12)) (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_1::<{_SystemArray.Array;}> 3 a_3 (StdInt.toInt_20 (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 (<{StdInt.+_6}> src_o_5 2))))) 6)) (StdChar.fromChar_22 (select _vArray_1::<{_SystemArray.Array;}> 3 a_3 (StdInt.toInt_20 (select _vArray_0::<{_SystemArray.Array;}> 3 s_2 (<{StdInt.+_6}> src_o_5 3))))), !dest_1_1 = _SystemArray.update_21 dest_4 (<{StdInt.+_6}> dest_o_6 2) (StdChar.toChar_21 oct_1_0), !dest_1_2 = _SystemArray.update_21 dest_1_1 (<{StdInt.+_6}> dest_o_6 1) (StdChar.toChar_21 (<{StdInt.>>}> oct_1_0 8)), !dest_1_3 = _SystemArray.update_21 dest_1_2 dest_o_6 (StdChar.toChar_21 (<{StdInt.>>}> oct_1_0 16)) in dest_1_3
Text.Encodings.Base64.decodeLastOctet_21 !_vArray_0 !_vArray_1 a_2 s_3 !dest_o_4::I src_o_5::I !dest_6 = case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 (<{StdInt.+_6}> src_o_5 2)) '=') (True -> let !oct_2_0::I = <{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_1::<{_SystemArray.Array;}> 3 a_2 (StdInt.toInt_20 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 src_o_5)))) 2) (<{StdInt.>>}> (StdChar.fromChar_22 (select _vArray_1::<{_SystemArray.Array;}> 3 a_2 (StdInt.toInt_20 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 (<{StdInt.+_6}> src_o_5 1))))) 4), !dest_2_1 = _SystemArray.update_21 dest_6 dest_o_4 (StdChar.toChar_21 oct_2_0) in dest_2_1) (False -> case (<{StdChar.==_18}> (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 (<{StdInt.+_6}> src_o_5 3)) '=') (True -> let !oct_3_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_1::<{_SystemArray.Array;}> 3 a_2 (StdInt.toInt_20 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 src_o_5)))) 10) (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_1::<{_SystemArray.Array;}> 3 a_2 (StdInt.toInt_20 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 (<{StdInt.+_6}> src_o_5 1))))) 4)) (<{StdInt.>>}> (StdChar.fromChar_22 (select _vArray_1::<{_SystemArray.Array;}> 3 a_2 (StdInt.toInt_20 (select _vArray_0::<{_SystemArray.Array;}> 3 s_3 (<{StdInt.+_6}> src_o_5 2))))) 2), !dest_3_1 = _SystemArray.update_21 dest_6 (<{StdInt.+_6}> dest_o_4 1) (StdChar.toChar_21 oct_3_0), !dest_3_2 = _SystemArray.update_21 dest_3_1 dest_o_4 (StdChar.toChar_21 (<{StdInt.>>}> oct_3_0 8)) in dest_3_2) (False -> Text.Encodings.Base64.decodeCommonOctet_33 _vArray_0 _vArray_1 s_3 a_2 dest_6 src_o_5 dest_o_4) ) 
<{Text.Encodings.Base64.decodeString`_22}> !_vArray_0 !_vArray_1 a_2 s_3 !srcSize_4::I !dest_5 !src_o_6::I !dest_o_7::I = case (<{StdInt.<_17}> src_o_6 (<{StdInt.-_7}> srcSize_4 4)) (True -> <{Text.Encodings.Base64.decodeString`_22}> _vArray_0 _vArray_1 a_2 s_3 srcSize_4 (Text.Encodings.Base64.decodeCommonOctet_33 _vArray_0 _vArray_1 s_3 a_2 dest_5 src_o_6 dest_o_7) (<{StdInt.+_6}> src_o_6 4) (<{StdInt.+_6}> dest_o_7 3)) (False -> case (<{StdInt.<_17}> src_o_6 srcSize_4) (True -> Text.Encodings.Base64.decodeLastOctet_21 _vArray_0 _vArray_1 a_2 s_3 dest_o_7 src_o_6 dest_5) (False -> dest_5) ) 
Text.Encodings.Base64.destSize_34::I s_0 !srcSize_1::I = case (<{StdInt.==_16}> srcSize_1 0) (True -> 0) (False -> let !d_2_0::I = <{StdInt./_10}> (<{StdInt.*_9}> srcSize_1 3) 4 in case (<{StdChar.==_18}> (_SystemArray.select_19 s_0 (<{StdInt.-_7}> srcSize_1 2)) '=') (True -> <{StdInt.-_7}> d_2_0 2) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_0 (<{StdInt.-_7}> srcSize_1 1)) '=') (True -> <{StdInt.-_7}> d_2_0 1) (False -> d_2_0) ) ) 
Text.Encodings.Base64.decodeCommonOctet_36 !_vArray_0 s_1 a_2 !dest_3 !src_o_4::I !dest_o_5::I = let !oct_1_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_0::<{_SystemArray.Array;}> 3 a_2 (StdInt.toInt_20 (_SystemArray.select_19 s_1 src_o_4)))) 18) (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_0::<{_SystemArray.Array;}> 3 a_2 (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_4 1))))) 12)) (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_0::<{_SystemArray.Array;}> 3 a_2 (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_4 2))))) 6)) (StdChar.fromChar_22 (select _vArray_0::<{_SystemArray.Array;}> 3 a_2 (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_4 3))))), !dest_1_1 = _SystemArray.update_21 dest_3 (<{StdInt.+_6}> dest_o_5 2) (StdChar.toChar_21 oct_1_0), !dest_1_2 = _SystemArray.update_21 dest_1_1 (<{StdInt.+_6}> dest_o_5 1) (StdChar.toChar_21 (<{StdInt.>>}> oct_1_0 8)), !dest_1_3 = _SystemArray.update_21 dest_1_2 dest_o_5 (StdChar.toChar_21 (<{StdInt.>>}> oct_1_0 16)) in dest_1_3
Text.Encodings.Base64.decodeLastOctet_37 !_vArray_0 a_1 !s_2 !dest_o_3::I !src_o_4::I !dest_5 = case (<{StdChar.==_18}> (_SystemArray.select_19 s_2 (<{StdInt.+_6}> src_o_4 2)) '=') (True -> let !oct_2_0::I = <{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (StdInt.toInt_20 (_SystemArray.select_19 s_2 src_o_4)))) 2) (<{StdInt.>>}> (StdChar.fromChar_22 (select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (StdInt.toInt_20 (_SystemArray.select_19 s_2 (<{StdInt.+_6}> src_o_4 1))))) 4), !dest_2_1 = _SystemArray.update_21 dest_5 dest_o_3 (StdChar.toChar_21 oct_2_0) in dest_2_1) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_2 (<{StdInt.+_6}> src_o_4 3)) '=') (True -> let !oct_3_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (StdInt.toInt_20 (_SystemArray.select_19 s_2 src_o_4)))) 10) (<{StdInt.<<}> (StdChar.fromChar_22 (select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (StdInt.toInt_20 (_SystemArray.select_19 s_2 (<{StdInt.+_6}> src_o_4 1))))) 4)) (<{StdInt.>>}> (StdChar.fromChar_22 (select _vArray_0::<{_SystemArray.Array;}> 3 a_1 (StdInt.toInt_20 (_SystemArray.select_19 s_2 (<{StdInt.+_6}> src_o_4 2))))) 2), !dest_3_1 = _SystemArray.update_21 dest_5 (<{StdInt.+_6}> dest_o_3 1) (StdChar.toChar_21 oct_3_0), !dest_3_2 = _SystemArray.update_21 dest_3_1 dest_o_3 (StdChar.toChar_21 (<{StdInt.>>}> oct_3_0 8)) in dest_3_2) (False -> Text.Encodings.Base64.decodeCommonOctet_36 _vArray_0 s_2 a_1 dest_5 src_o_4 dest_o_3) ) 
<{Text.Encodings.Base64.decodeString`_35}> !_vArray_0 a_1 s_2 !srcSize_3::I !dest_4 !src_o_5::I !dest_o_6::I = case (<{StdInt.<_17}> src_o_5 (<{StdInt.-_7}> srcSize_3 4)) (True -> <{Text.Encodings.Base64.decodeString`_35}> _vArray_0 a_1 s_2 srcSize_3 (Text.Encodings.Base64.decodeCommonOctet_36 _vArray_0 s_2 a_1 dest_4 src_o_5 dest_o_6) (<{StdInt.+_6}> src_o_5 4) (<{StdInt.+_6}> dest_o_6 3)) (False -> case (<{StdInt.<_17}> src_o_5 srcSize_3) (True -> Text.Encodings.Base64.decodeLastOctet_37 _vArray_0 a_1 s_2 dest_o_6 src_o_5 dest_4) (False -> dest_4) ) 
Text.Encodings.Base64.decodeCommonOctet_39 !s_0 !a_1 !dest_2 !src_o_3::I !dest_o_4::I = let !oct_1_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (_SystemArray.select_19 a_1 (StdInt.toInt_20 (_SystemArray.select_19 s_0 src_o_3)))) 18) (<{StdInt.<<}> (StdChar.fromChar_22 (_SystemArray.select_19 a_1 (StdInt.toInt_20 (_SystemArray.select_19 s_0 (<{StdInt.+_6}> src_o_3 1))))) 12)) (<{StdInt.<<}> (StdChar.fromChar_22 (_SystemArray.select_19 a_1 (StdInt.toInt_20 (_SystemArray.select_19 s_0 (<{StdInt.+_6}> src_o_3 2))))) 6)) (StdChar.fromChar_22 (_SystemArray.select_19 a_1 (StdInt.toInt_20 (_SystemArray.select_19 s_0 (<{StdInt.+_6}> src_o_3 3))))), !dest_1_1 = _SystemArray.update_21 dest_2 (<{StdInt.+_6}> dest_o_4 2) (StdChar.toChar_21 oct_1_0), !dest_1_2 = _SystemArray.update_21 dest_1_1 (<{StdInt.+_6}> dest_o_4 1) (StdChar.toChar_21 (<{StdInt.>>}> oct_1_0 8)), !dest_1_3 = _SystemArray.update_21 dest_1_2 dest_o_4 (StdChar.toChar_21 (<{StdInt.>>}> oct_1_0 16)) in dest_1_3
Text.Encodings.Base64.decodeLastOctet_40 !a_0 !s_1 !dest_o_2::I !src_o_3::I !dest_4 = case (<{StdChar.==_18}> (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_3 2)) '=') (True -> let !oct_2_0::I = <{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (_SystemArray.select_19 a_0 (StdInt.toInt_20 (_SystemArray.select_19 s_1 src_o_3)))) 2) (<{StdInt.>>}> (StdChar.fromChar_22 (_SystemArray.select_19 a_0 (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_3 1))))) 4), !dest_2_1 = _SystemArray.update_21 dest_4 dest_o_2 (StdChar.toChar_21 oct_2_0) in dest_2_1) (False -> case (<{StdChar.==_18}> (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_3 3)) '=') (True -> let !oct_3_0::I = <{StdInt.+_6}> (<{StdInt.+_6}> (<{StdInt.<<}> (StdChar.fromChar_22 (_SystemArray.select_19 a_0 (StdInt.toInt_20 (_SystemArray.select_19 s_1 src_o_3)))) 10) (<{StdInt.<<}> (StdChar.fromChar_22 (_SystemArray.select_19 a_0 (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_3 1))))) 4)) (<{StdInt.>>}> (StdChar.fromChar_22 (_SystemArray.select_19 a_0 (StdInt.toInt_20 (_SystemArray.select_19 s_1 (<{StdInt.+_6}> src_o_3 2))))) 2), !dest_3_1 = _SystemArray.update_21 dest_4 (<{StdInt.+_6}> dest_o_2 1) (StdChar.toChar_21 oct_3_0), !dest_3_2 = _SystemArray.update_21 dest_3_1 dest_o_2 (StdChar.toChar_21 (<{StdInt.>>}> oct_3_0 8)) in dest_3_2) (False -> Text.Encodings.Base64.decodeCommonOctet_39 s_1 a_0 dest_4 src_o_3 dest_o_2) ) 
<{Text.Encodings.Base64.decodeString`_38}> a_0 s_1 !srcSize_2::I !dest_3 !src_o_4::I !dest_o_5::I = case (<{StdInt.<_17}> src_o_4 (<{StdInt.-_7}> srcSize_2 4)) (True -> <{Text.Encodings.Base64.decodeString`_38}> a_0 s_1 srcSize_2 (Text.Encodings.Base64.decodeCommonOctet_39 s_1 a_0 dest_3 src_o_4 dest_o_5) (<{StdInt.+_6}> src_o_4 4) (<{StdInt.+_6}> dest_o_5 3)) (False -> case (<{StdInt.<_17}> src_o_4 srcSize_2) (True -> Text.Encodings.Base64.decodeLastOctet_40 a_0 s_1 dest_o_5 src_o_4 dest_3) (False -> dest_3) ) 
Text.Encodings.Base64.decodeString !s_0 !a_1 = let srcSize_1_0::I = _SystemArray.size_20 s_0 in case (StdBool.not (<{StdInt.==_16}> (StdInt.bitand srcSize_1_0 3) 0)) (True -> StdMisc.abort "Base64: Invalid length, size of decoding string must be a multitude of 4.") (False -> let !destString_3_0 = _SystemArray.createArray_17 (Text.Encodings.Base64.destSize_34 s_0 srcSize_1_0) '\0' in <{Text.Encodings.Base64.decodeString`_38}> a_1 s_0 srcSize_1_0 destString_3_0 0 0) 
Text.Encodings.Base64.base64Decode !s_0 = Text.Encodings.Base64.decodeString (Text.Encodings.Base64.removeLineBreaks s_0) Text.Encodings.Base64.decodeWithStdAlphabet
<{Text.Encodings.Base64.cu;10;84_16}> !_vArray_0 a_1 !i_2::I !g_s_3::I = case (StdBool.not (<{StdInt.<_17}> g_s_3 i_2)) (True -> <{Text.Encodings.Base64.cu;10;84_16}> _vArray_0 (select _vArray_0::<{_SystemArray.Array;}> 5 a_1 (StdInt.toInt_20 (_SystemArray.select_19 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=" i_2)) (StdChar.toChar_21 i_2)) (<{StdInt.+_6}> i_2 StdInt.one_11) g_s_3) (False -> a_1) 
<{Text.Encodings.Base64.cu;10;84_41}> !a_0 !i_1::I !g_s_2::I = case (StdBool.not (<{StdInt.<_17}> g_s_2 i_1)) (True -> <{Text.Encodings.Base64.cu;10;84_41}> (_SystemArray.update_21 a_0 (StdInt.toInt_20 (_SystemArray.select_19 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=" i_1)) (StdChar.toChar_21 i_1)) (<{StdInt.+_6}> i_1 StdInt.one_11) g_s_2) (False -> a_0) 
Text.Encodings.Base64.decodeWithUrlAlphabet =: <{Text.Encodings.Base64.cu;10;84_41}> (_SystemArray.createArray_17 256 '\0') 0 (<{StdInt.-_7}> (_SystemArray.size_20 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=") 1)
Text.Encodings.Base64.base64URLDecode !s_0 = Text.Encodings.Base64.decodeString (Text.Encodings.Base64.removeLineBreaks s_0) Text.Encodings.Base64.decodeWithUrlAlphabet
<{Text.Encodings.Base64.TD;Length}> _x_0::B = _predefined._Nil
<{Text.Encodings.Base64.TD;Alphabet}> _x_0::B = _predefined._Nil
<{Text.Encodings.Base64.TD;Offset}> _x_0::B = _predefined._Nil
<{Text.Encodings.Base64.TD;Padding}> _x_0::B = _predefined._Nil


|| Converted Records
